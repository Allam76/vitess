// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const BEGIN = 57589
const START = 57590
const TRANSACTION = 57591
const COMMIT = 57592
const ROLLBACK = 57593
const SAVEPOINT = 57594
const WORK = 57595
const RELEASE = 57596
const BIT = 57597
const TINYINT = 57598
const SMALLINT = 57599
const MEDIUMINT = 57600
const INT = 57601
const INTEGER = 57602
const BIGINT = 57603
const INTNUM = 57604
const REAL = 57605
const DOUBLE = 57606
const FLOAT_TYPE = 57607
const DECIMAL = 57608
const NUMERIC = 57609
const DEC = 57610
const FIXED = 57611
const PRECISION = 57612
const TIME = 57613
const TIMESTAMP = 57614
const DATETIME = 57615
const YEAR = 57616
const CHAR = 57617
const VARCHAR = 57618
const BOOL = 57619
const CHARACTER = 57620
const VARBINARY = 57621
const NCHAR = 57622
const NVARCHAR = 57623
const NATIONAL = 57624
const VARYING = 57625
const TEXT = 57626
const TINYTEXT = 57627
const MEDIUMTEXT = 57628
const LONGTEXT = 57629
const LONG = 57630
const BLOB = 57631
const TINYBLOB = 57632
const MEDIUMBLOB = 57633
const LONGBLOB = 57634
const JSON = 57635
const ENUM = 57636
const GEOMETRY = 57637
const POINT = 57638
const LINESTRING = 57639
const POLYGON = 57640
const GEOMETRYCOLLECTION = 57641
const MULTIPOINT = 57642
const MULTILINESTRING = 57643
const MULTIPOLYGON = 57644
const LOCAL = 57645
const LOW_PRIORITY = 57646
const NULLX = 57647
const AUTO_INCREMENT = 57648
const APPROXNUM = 57649
const SIGNED = 57650
const UNSIGNED = 57651
const ZEROFILL = 57652
const COLLATION = 57653
const DATABASES = 57654
const SCHEMAS = 57655
const TABLES = 57656
const FULL = 57657
const PROCESSLIST = 57658
const COLUMNS = 57659
const FIELDS = 57660
const ENGINES = 57661
const PLUGINS = 57662
const NAMES = 57663
const CHARSET = 57664
const GLOBAL = 57665
const SESSION = 57666
const ISOLATION = 57667
const LEVEL = 57668
const READ = 57669
const WRITE = 57670
const ONLY = 57671
const REPEATABLE = 57672
const COMMITTED = 57673
const UNCOMMITTED = 57674
const SERIALIZABLE = 57675
const CURRENT_TIMESTAMP = 57676
const DATABASE = 57677
const CURRENT_DATE = 57678
const CURRENT_USER = 57679
const CURRENT_TIME = 57680
const LOCALTIME = 57681
const LOCALTIMESTAMP = 57682
const UTC_DATE = 57683
const UTC_TIME = 57684
const UTC_TIMESTAMP = 57685
const REPLACE = 57686
const CONVERT = 57687
const CAST = 57688
const SUBSTR = 57689
const SUBSTRING = 57690
const TRIM = 57691
const LEADING = 57692
const TRAILING = 57693
const BOTH = 57694
const GROUP_CONCAT = 57695
const SEPARATOR = 57696
const TIMESTAMPADD = 57697
const TIMESTAMPDIFF = 57698
const OVER = 57699
const WINDOW = 57700
const GROUPING = 57701
const GROUPS = 57702
const CURRENT = 57703
const ROWS = 57704
const RANGE = 57705
const AVG = 57706
const BIT_AND = 57707
const BIT_OR = 57708
const BIT_XOR = 57709
const COUNT = 57710
const JSON_ARRAYAGG = 57711
const JSON_OBJECTAGG = 57712
const MAX = 57713
const MIN = 57714
const STDDEV_POP = 57715
const STDDEV = 57716
const STD = 57717
const STDDEV_SAMP = 57718
const SUM = 57719
const VAR_POP = 57720
const VARIANCE = 57721
const VAR_SAMP = 57722
const CUME_DIST = 57723
const DENSE_RANK = 57724
const FIRST_VALUE = 57725
const LAG = 57726
const LAST_VALUE = 57727
const LEAD = 57728
const NTH_VALUE = 57729
const NTILE = 57730
const ROW_NUMBER = 57731
const PERCENT_RANK = 57732
const RANK = 57733
const MATCH = 57734
const AGAINST = 57735
const BOOLEAN = 57736
const LANGUAGE = 57737
const WITH = 57738
const QUERY = 57739
const EXPANSION = 57740
const UNUSED = 57741
const ARRAY = 57742
const DESCRIPTION = 57743
const EMPTY = 57744
const JSON_TABLE = 57745
const LATERAL = 57746
const MEMBER = 57747
const RECURSIVE = 57748
const ACTIVE = 57749
const BUCKETS = 57750
const CLONE = 57751
const COMPONENT = 57752
const DEFINITION = 57753
const ENFORCED = 57754
const EXCLUDE = 57755
const FOLLOWING = 57756
const GEOMCOLLECTION = 57757
const GET_MASTER_PUBLIC_KEY = 57758
const HISTOGRAM = 57759
const HISTORY = 57760
const INACTIVE = 57761
const INVISIBLE = 57762
const LOCKED = 57763
const MASTER_COMPRESSION_ALGORITHMS = 57764
const MASTER_PUBLIC_KEY_PATH = 57765
const MASTER_TLS_CIPHERSUITES = 57766
const MASTER_ZSTD_COMPRESSION_LEVEL = 57767
const NESTED = 57768
const NETWORK_NAMESPACE = 57769
const NOWAIT = 57770
const NULLS = 57771
const OJ = 57772
const OLD = 57773
const ORDINALITY = 57774
const ORGANIZATION = 57775
const OTHERS = 57776
const PATH = 57777
const PERSIST = 57778
const PERSIST_ONLY = 57779
const PRECEDING = 57780
const PRIVILEGE_CHECKS_USER = 57781
const PROCESS = 57782
const REFERENCE = 57783
const REQUIRE_ROW_FORMAT = 57784
const RESOURCE = 57785
const RESPECT = 57786
const RESTART = 57787
const RETAIN = 57788
const SECONDARY = 57789
const SECONDARY_ENGINE = 57790
const SECONDARY_LOAD = 57791
const SECONDARY_UNLOAD = 57792
const SKIP = 57793
const SRID = 57794
const THREAD_PRIORITY = 57795
const TIES = 57796
const VCPU = 57797
const VISIBLE = 57798
const SYSTEM = 57799
const INFILE = 57800

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 981,
	-1, 42,
	141, 1043,
	142, 1061,
	-2, 203,
	-1, 48,
	181, 625,
	182, 625,
	-2, 615,
	-1, 479,
	128, 1071,
	-2, 1065,
	-1, 480,
	128, 1072,
	-2, 1066,
	-1, 584,
	98, 1325,
	128, 1325,
	-2, 1027,
	-1, 585,
	98, 1438,
	128, 1438,
	-2, 1028,
	-1, 590,
	98, 1348,
	128, 1348,
	-2, 1029,
	-1, 591,
	98, 1394,
	128, 1394,
	-2, 1030,
	-1, 592,
	98, 1395,
	128, 1395,
	-2, 1031,
	-1, 593,
	98, 1279,
	128, 1279,
	-2, 1035,
	-1, 595,
	98, 1371,
	128, 1371,
	-2, 1037,
	-1, 1047,
	1, 713,
	5, 713,
	12, 713,
	13, 713,
	14, 713,
	15, 713,
	17, 713,
	19, 713,
	30, 713,
	31, 713,
	56, 713,
	57, 713,
	58, 713,
	59, 713,
	60, 713,
	62, 713,
	63, 713,
	66, 713,
	67, 713,
	69, 713,
	70, 713,
	477, 713,
	-2, 743,
	-1, 1051,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1275,
	128, 1074,
	-2, 1070,
	-1, 1440,
	44, 474,
	-2, 1290,
	-1, 1444,
	68, 474,
	-2, 1242,
	-1, 1447,
	68, 470,
	72, 470,
	-2, 1169,
	-1, 1448,
	68, 471,
	72, 471,
	-2, 1179,
	-1, 1562,
	44, 517,
	148, 519,
	150, 517,
	151, 517,
	-2, 552,
	-1, 1630,
	5, 50,
	-2, 809,
	-1, 1929,
	69, 1221,
	70, 1221,
	128, 1221,
	-2, 656,
	-1, 1952,
	1, 764,
	5, 764,
	12, 764,
	13, 764,
	14, 764,
	15, 764,
	17, 764,
	19, 764,
	30, 764,
	31, 764,
	56, 764,
	57, 764,
	58, 764,
	59, 764,
	60, 764,
	62, 764,
	63, 764,
	66, 764,
	67, 764,
	69, 764,
	70, 764,
	477, 764,
	-2, 743,
	-1, 2053,
	148, 520,
	-2, 518,
	-1, 2115,
	5, 50,
	-2, 1001,
	-1, 2315,
	41, 1081,
	-2, 1079,
	-1, 2444,
	5, 50,
	-2, 1004,
}

const yyPrivate = 57344

const yyLast = 30080

var yyAct = [...]int{

	542, 78, 2606, 783, 2633, 2461, 2582, 404, 2596, 2447,
	2525, 482, 2597, 2367, 7, 2584, 2366, 6, 2460, 2365,
	5, 2368, 8, 2498, 2335, 2523, 2429, 2434, 1946, 2262,
	2127, 2315, 2364, 3, 1845, 480, 1698, 1855, 1669, 1965,
	998, 81, 1492, 1490, 2222, 1399, 1922, 485, 1393, 1432,
	2203, 1449, 1502, 1082, 2317, 2014, 2180, 2174, 609, 471,
	2158, 1719, 2448, 464, 541, 1253, 1923, 2038, 1966, 412,
	412, 1441, 387, 390, 449, 2142, 1779, 459, 1397, 78,
	1171, 1854, 125, 91, 2047, 125, 498, 1670, 1919, 815,
	104, 125, 1431, 1430, 1047, 1246, 1931, 1481, 1561, 1938,
	1583, 415, 415, 799, 1891, 487, 1309, 1300, 1528, 1173,
	1823, 463, 1437, 125, 1261, 1215, 1376, 1188, 1372, 1151,
	1762, 900, 586, 1062, 125, 2143, 1477, 1043, 125, 612,
	1383, 1044, 125, 1277, 1364, 907, 865, 589, 604, 903,
	1544, 607, 844, 605, 603, 1061, 125, 415, 582, 612,
	920, 467, 583, 911, 1016, 578, 458, 125, 1220, 406,
	407, 770, 83, 575, 1053, 843, 1865, 1017, 2655, 2651,
	2641, 2623, 2621, 2601, 2577, 2506, 80, 1213, 2159, 67,
	2563, 2560, 2152, 35, 2614, 35, 2161, 2492, 2595, 35,
	2442, 2294, 782, 2565, 35, 1515, 2307, 1790, 1999, 85,
	86, 87, 88, 89, 2562, 2559, 1170, 2292, 2477, 1864,
	2011, 2491, 1912, 1664, 2409, 1420, 399, 875, 2488, 2489,
	1605, 2107, 2295, 35, 2247, 70, 38, 39, 2441, 35,
	1665, 70, 38, 39, 769, 1395, 1515, 1543, 2529, 1961,
	1962, 1417, 1418, 58, 1219, 79, 1063, 79, 1064, 76,
	1960, 79, 894, 40, 2524, 2164, 79, 1241, 1242, 1707,
	1416, 772, 1706, 775, 776, 1708, 818, 1217, 1218, 398,
	1465, 599, 2346, 935, 934, 944, 945, 937, 938, 939,
	940, 941, 942, 943, 936, 79, 2529, 946, 803, 804,
	2530, 79, 806, 1216, 2162, 2163, 2165, 2166, 2167, 397,
	557, 1745, 563, 565, 564, 561, 562, 560, 559, 558,
	1451, 443, 819, 820, 1542, 2393, 862, 1466, 2604, 2607,
	2603, 566, 567, 70, 38, 39, 805, 401, 1457, 1459,
	2094, 1458, 2053, 1471, 2092, 1466, 396, 381, 2530, 456,
	2175, 1785, 1813, 1453, 2590, 40, 2320, 2037, 2178, 1453,
	2181, 2182, 2183, 2184, 42, 72, 45, 44, 47, 2231,
	2508, 2176, 2177, 1818, 1554, 2507, 2021, 2467, 1478, 2413,
	2394, 2192, 825, 116, 112, 113, 2199, 114, 1555, 1233,
	2465, 2514, 1787, 1503, 78, 78, 48, 75, 74, 125,
	2190, 1200, 2403, 46, 2610, 2293, 110, 833, 828, 2503,
	835, 2287, 2286, 834, 2015, 2016, 2017, 2018, 2019, 2285,
	118, 117, 2297, 1081, 2284, 881, 832, 836, 882, 816,
	2283, 817, 819, 820, 2282, 2526, 2501, 2502, 1569, 1563,
	1564, 2281, 1562, 125, 1565, 1566, 826, 827, 2012, 56,
	57, 437, 2395, 2411, 2015, 2016, 2017, 2018, 2019, 1789,
	2399, 2400, 1497, 890, 2311, 2024, 65, 2289, 66, 388,
	897, 2561, 119, 382, 120, 2495, 2496, 2449, 2579, 2129,
	1570, 1690, 2362, 2526, 1804, 1805, 812, 813, 814, 955,
	1496, 2592, 957, 811, 111, 810, 774, 773, 2396, 73,
	2405, 52, 53, 60, 2360, 61, 2557, 2430, 1848, 2647,
	1377, 802, 2204, 2205, 1829, 1081, 1081, 2052, 1080, 923,
	2160, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 1998,
	2039, 996, 2527, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 400, 1015, 1018, 1018,
	1018, 1024, 1018, 1018, 1024, 1018, 1024, 1033, 1034, 1035,
	1036, 1037, 1038, 1367, 1048, 997, 1752, 2440, 2347, 71,
	2573, 1549, 1456, 1466, 1892, 71, 115, 956, 1480, 1201,
	2527, 77, 1219, 77, 2308, 1791, 829, 77, 1780, 2298,
	1221, 1788, 77, 2466, 883, 389, 82, 2410, 125, 125,
	125, 389, 2404, 2290, 887, 1217, 1218, 2656, 2310, 2023,
	1568, 1054, 1042, 2653, 612, 2642, 1894, 877, 878, 879,
	589, 77, 889, 391, 1781, 589, 1223, 77, 384, 1222,
	107, 1075, 417, 418, 419, 420, 421, 425, 426, 430,
	431, 440, 439, 438, 441, 442, 445, 444, 446, 422,
	423, 424, 427, 428, 429, 432, 433, 436, 434, 435,
	2637, 1737, 1081, 2415, 385, 392, 1831, 71, 2588, 1050,
	2263, 2583, 410, 97, 408, 411, 1742, 1741, 1969, 2624,
	1402, 1404, 771, 1081, 2265, 2586, 785, 1831, 107, 873,
	2214, 455, 2215, 1812, 1809, 1066, 1793, 1512, 1738, 1792,
	1067, 1550, 1511, 1019, 1021, 1023, 1025, 1027, 1029, 1030,
	1032, 1782, 1783, 1743, 1159, 1730, 1020, 1022, 1157, 1026,
	1028, 1731, 1031, 1842, 830, 1724, 99, 1144, 1052, 1724,
	96, 1057, 1079, 1697, 1896, 1807, 109, 108, 1140, 1900,
	1696, 1895, 1695, 1893, 767, 1724, 893, 777, 1898, 353,
	958, 959, 1727, 1076, 2082, 2264, 2079, 2071, 2033, 1811,
	2218, 1897, 1403, 1810, 1711, 872, 1703, 1724, 1600, 1588,
	412, 1640, 1724, 1573, 1153, 1637, 1899, 1901, 1256, 105,
	1740, 1074, 1059, 926, 795, 2635, 2408, 412, 2636, 106,
	2634, 1172, 1421, 612, 109, 108, 1988, 936, 946, 1189,
	946, 415, 415, 1412, 1198, 1249, 1519, 919, 1846, 1936,
	125, 389, 2213, 125, 389, 101, 1935, 102, 415, 415,
	1914, 125, 1723, 2585, 2587, 409, 1723, 1208, 808, 1072,
	125, 125, 125, 125, 837, 939, 940, 941, 942, 943,
	936, 778, 1723, 946, 1175, 1841, 1152, 1365, 1989, 1838,
	415, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 2219, 1723, 801, 2640, 412, 821, 1723,
	1837, 1829, 1254, 1255, 1231, 1834, 1829, 2574, 1833, 1836,
	1081, 78, 2593, 1830, 1831, 1146, 1365, 1245, 1653, 958,
	959, 1211, 1176, 958, 959, 1196, 1190, 2191, 415, 415,
	415, 1284, 612, 1520, 1185, 1186, 415, 1187, 2185, 918,
	917, 415, 415, 1239, 1768, 2499, 1282, 1283, 1281, 125,
	1976, 125, 914, 612, 1192, 809, 1193, 919, 1160, 1154,
	2470, 918, 917, 917, 918, 917, 2648, 1247, 1161, 98,
	79, 125, 2462, 2445, 1635, 1228, 1634, 923, 78, 919,
	919, 1280, 919, 2305, 1179, 1180, 1739, 1237, 2304, 800,
	1304, 1305, 823, 2303, 918, 917, 1274, 937, 938, 939,
	940, 941, 942, 943, 936, 1275, 443, 946, 918, 917,
	997, 1244, 919, 2302, 1278, 2644, 1636, 2627, 2607, 2626,
	2649, 1000, 1050, 612, 1203, 1204, 919, 1718, 1206, 935,
	934, 944, 945, 937, 938, 939, 940, 941, 942, 943,
	936, 94, 904, 946, 1209, 905, 2499, 2296, 2538, 1224,
	2537, 1225, 454, 1343, 1227, 1279, 1273, 898, 2151, 1238,
	1232, 918, 917, 1235, 918, 917, 918, 917, 2576, 1396,
	2463, 2500, 1243, 1916, 1048, 1350, 1353, 2150, 1048, 919,
	918, 917, 919, 1366, 919, 1767, 93, 1529, 1765, 612,
	612, 2406, 1271, 918, 917, 1301, 125, 1302, 919, 1226,
	1746, 997, 1318, 868, 125, 125, 1322, 867, 1081, 125,
	125, 919, 1236, 125, 125, 125, 2464, 1267, 1269, 1270,
	2550, 2536, 1407, 1268, 92, 1258, 1409, 841, 589, 477,
	1585, 1586, 1587, 612, 612, 2549, 437, 2407, 1175, 572,
	573, 1709, 1307, 1710, 1425, 2511, 1315, 1401, 605, 1259,
	840, 1392, 1260, 1275, 2509, 1324, 1325, 2476, 2402, 1427,
	2401, 2359, 2312, 2280, 2241, 2188, 1335, 2187, 2186, 2148,
	1339, 1311, 1981, 1763, 1050, 1539, 1205, 1177, 2535, 1050,
	2412, 2357, 2329, 1050, 1509, 1727, 1362, 784, 1405, 934,
	944, 945, 937, 938, 939, 940, 941, 942, 943, 936,
	125, 2323, 946, 2211, 1426, 2066, 2062, 2054, 2025, 2009,
	125, 2008, 125, 125, 415, 415, 415, 2007, 1024, 125,
	1798, 1797, 1533, 1517, 1445, 1516, 1303, 1202, 1199, 1414,
	1169, 1419, 1168, 1413, 1410, 1167, 1166, 1438, 1155, 1149,
	1535, 1148, 1140, 1435, 1452, 125, 125, 125, 1428, 1147,
	1145, 863, 1483, 1484, 1485, 1486, 797, 473, 395, 1507,
	1508, 393, 2254, 2566, 2138, 2556, 78, 2483, 899, 899,
	125, 880, 125, 2138, 2481, 1644, 612, 2138, 2479, 1479,
	612, 2138, 2361, 1385, 1388, 1389, 1390, 1386, 612, 1387,
	1391, 612, 2322, 1939, 1940, 1589, 2274, 873, 997, 2273,
	1487, 1488, 787, 788, 789, 790, 791, 792, 793, 2254,
	2353, 82, 1521, 2004, 1541, 2254, 2270, 1527, 503, 502,
	505, 506, 507, 508, 2254, 899, 1274, 504, 509, 2254,
	2253, 2138, 2137, 1920, 899, 1275, 1934, 417, 418, 419,
	420, 421, 425, 426, 430, 431, 440, 439, 438, 441,
	442, 445, 444, 446, 422, 423, 424, 427, 428, 429,
	432, 433, 436, 434, 435, 1341, 1278, 2119, 899, 1699,
	1534, 1540, 1531, 935, 934, 944, 945, 937, 938, 939,
	940, 941, 942, 943, 936, 1547, 1426, 946, 1982, 1467,
	1468, 1469, 1470, 1553, 1572, 899, 1556, 1666, 1668, 2073,
	1699, 1048, 1048, 1048, 1048, 1048, 1699, 1279, 1577, 1251,
	1575, 1576, 1558, 1055, 1594, 1996, 1995, 1396, 1055, 1691,
	1992, 1993, 1992, 1991, 1598, 899, 1380, 1048, 1501, 1667,
	1380, 899, 1552, 1551, 2321, 1590, 125, 125, 125, 125,
	125, 1341, 1536, 1341, 899, 1078, 1077, 1671, 125, 1343,
	1379, 82, 125, 1406, 885, 1054, 125, 2074, 1672, 1934,
	1250, 2485, 125, 1934, 1701, 2113, 1702, 1694, 1500, 1056,
	1515, 1058, 2005, 483, 1056, 1700, 1054, 884, 1628, 1994,
	871, 870, 589, 1948, 871, 1822, 612, 1713, 1415, 1380,
	1686, 1598, 2074, 1385, 1388, 1389, 1390, 1386, 1693, 1387,
	1391, 1658, 1657, 1604, 1606, 1598, 1050, 1050, 1050, 1050,
	1050, 1207, 873, 78, 1616, 1617, 1618, 1619, 1652, 1514,
	1252, 1234, 1050, 1214, 1158, 1156, 1726, 1728, 1673, 1060,
	895, 1676, 1050, 1674, 1675, 600, 1677, 896, 79, 416,
	416, 2493, 1685, 1714, 2480, 1771, 1947, 612, 2328, 2326,
	2153, 461, 1453, 2125, 412, 1482, 415, 1066, 1803, 1704,
	1975, 1939, 1940, 403, 1478, 1717, 1498, 1316, 1317, 1712,
	125, 415, 1473, 1472, 1141, 1796, 876, 860, 1327, 1328,
	1329, 1330, 79, 1491, 1530, 416, 415, 2618, 2616, 1722,
	1725, 1340, 1342, 2598, 1716, 2532, 2003, 79, 1347, 1942,
	1920, 1152, 1140, 1769, 1163, 886, 415, 874, 612, 869,
	1682, 1945, 1680, 415, 1764, 1683, 1795, 1681, 960, 961,
	962, 963, 964, 965, 966, 967, 1872, 1766, 612, 612,
	448, 1584, 1944, 1684, 125, 1389, 1390, 1679, 908, 1678,
	1786, 2490, 1850, 1851, 612, 468, 469, 1852, 927, 1800,
	1574, 912, 913, 1262, 2520, 2116, 1582, 1581, 1857, 2244,
	2210, 612, 1799, 2141, 2061, 2060, 1729, 1980, 1979, 1721,
	1274, 1971, 2417, 2420, 1806, 2475, 2474, 1808, 2316, 1275,
	910, 2510, 2314, 2398, 2397, 394, 1925, 78, 1801, 2299,
	2300, 1756, 1073, 1821, 1832, 1826, 1843, 1844, 858, 842,
	1847, 1755, 839, 1757, 1758, 1759, 1760, 838, 1824, 1835,
	1840, 1950, 1913, 798, 999, 2545, 1954, 1955, 1956, 1926,
	1859, 1827, 612, 1921, 612, 1863, 1933, 1014, 1858, 901,
	1867, 2333, 1671, 2332, 2111, 2220, 1247, 1254, 1255, 1494,
	1538, 902, 2193, 1672, 1162, 1747, 1748, 612, 2468, 2194,
	1924, 2318, 1754, 1849, 1772, 912, 913, 1959, 1526, 1953,
	1957, 1903, 1761, 1902, 94, 1143, 1580, 612, 2544, 612,
	2543, 612, 2542, 612, 1579, 1949, 465, 1814, 891, 892,
	2277, 1857, 1928, 824, 1820, 2513, 2512, 2472, 2421, 2337,
	2229, 466, 1532, 82, 1873, 2336, 1943, 1876, 1877, 1878,
	2223, 1699, 1881, 2042, 1973, 2620, 2619, 1974, 1951, 1819,
	1970, 412, 1972, 1817, 1816, 2020, 1774, 1775, 1776, 453,
	1641, 1638, 1557, 1191, 915, 125, 2619, 1963, 1964, 2620,
	2350, 1868, 1869, 1559, 2001, 2002, 1978, 1248, 1874, 1875,
	1571, 600, 451, 415, 2378, 51, 2380, 19, 125, 415,
	1882, 1883, 1884, 1885, 2006, 1887, 1888, 1889, 2379, 18,
	2381, 20, 2022, 125, 84, 415, 54, 612, 415, 1,
	1245, 1548, 415, 415, 1229, 415, 2382, 21, 2377, 15,
	1487, 2173, 1488, 2172, 540, 2376, 14, 2370, 10, 2391,
	33, 612, 2390, 32, 2027, 125, 612, 1596, 2389, 28,
	2388, 27, 1599, 612, 612, 2179, 2050, 1601, 1602, 2387,
	26, 2072, 1607, 1608, 1609, 1610, 1611, 1612, 2385, 23,
	1615, 2384, 22, 2028, 2010, 1620, 1621, 1622, 1623, 2013,
	1625, 1626, 1627, 2105, 2081, 2075, 2051, 1630, 1631, 1632,
	1633, 2045, 2044, 2386, 24, 1784, 1639, 924, 2065, 1642,
	1643, 2375, 13, 1195, 1648, 1649, 2372, 12, 2371, 11,
	1655, 2189, 1656, 1150, 2070, 1659, 1660, 2288, 1661, 1662,
	2369, 9, 781, 1178, 596, 1050, 1499, 864, 608, 2473,
	2416, 2418, 2313, 1983, 1984, 2195, 125, 1687, 1688, 2157,
	1987, 2156, 1140, 1194, 1778, 2120, 1777, 1990, 786, 859,
	1212, 1825, 1671, 612, 1828, 2133, 2134, 2135, 1510, 1567,
	612, 612, 612, 1672, 2090, 2428, 1439, 1429, 2131, 612,
	602, 90, 1518, 78, 807, 361, 2144, 1436, 1735, 2419,
	2112, 612, 999, 861, 1734, 1744, 2032, 1450, 1733, 2036,
	1985, 2136, 2121, 2040, 2041, 1732, 2043, 2414, 1736, 1086,
	1084, 1085, 1083, 1088, 1087, 2154, 2132, 365, 1276, 125,
	1068, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1714, 2455, 916, 100,
	1139, 2169, 2170, 2171, 55, 2145, 2212, 1839, 95, 1264,
	1265, 103, 2078, 367, 1048, 954, 1578, 2030, 415, 1705,
	2080, 587, 2168, 588, 580, 2487, 2494, 906, 2431, 2083,
	2084, 1651, 1013, 899, 2208, 1363, 2085, 486, 1689, 2433,
	2197, 1266, 2206, 2207, 2198, 501, 500, 612, 499, 125,
	496, 497, 2225, 2226, 1925, 612, 2216, 1925, 2249, 1356,
	2196, 2221, 2224, 2528, 1525, 1970, 2201, 2209, 1368, 1857,
	1950, 2202, 935, 934, 944, 945, 937, 938, 939, 940,
	941, 942, 943, 936, 1257, 1663, 946, 928, 1997, 484,
	2248, 2217, 999, 475, 1046, 612, 2252, 1348, 1349, 1039,
	1537, 612, 1384, 2246, 1382, 1381, 125, 1164, 125, 576,
	1941, 1862, 1937, 1394, 612, 1045, 457, 1870, 1924, 1050,
	2245, 1924, 68, 822, 2251, 383, 2106, 1879, 1880, 612,
	2345, 37, 452, 2275, 2255, 1487, 470, 2276, 1886, 2278,
	2261, 2146, 1890, 25, 2269, 2267, 2268, 2266, 1401, 2256,
	2257, 17, 831, 16, 1560, 779, 41, 43, 2279, 1773,
	1495, 2334, 2454, 2581, 1424, 845, 2605, 2497, 31, 416,
	416, 2291, 30, 29, 2383, 2392, 2301, 2374, 2373, 2568,
	1927, 2306, 2567, 4, 2309, 888, 416, 416, 1925, 2200,
	78, 612, 69, 2319, 34, 598, 2, 0, 2324, 2325,
	0, 2338, 2147, 0, 2149, 0, 0, 0, 2331, 0,
	2340, 2327, 0, 0, 0, 0, 0, 0, 416, 78,
	0, 0, 2352, 0, 2363, 2339, 0, 0, 0, 0,
	612, 2356, 0, 1489, 2351, 0, 0, 0, 0, 2358,
	0, 0, 0, 2355, 0, 0, 0, 0, 0, 0,
	0, 0, 1924, 0, 1454, 1455, 0, 1460, 1461, 1462,
	1463, 1464, 1048, 0, 0, 0, 416, 416, 416, 0,
	0, 0, 1373, 0, 416, 1474, 1475, 1476, 0, 416,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 0, 0, 0, 415, 0, 0, 125, 0, 2230,
	0, 0, 612, 2271, 612, 2272, 2424, 0, 2426, 0,
	2423, 2425, 2110, 0, 0, 924, 0, 2437, 0, 0,
	0, 0, 2438, 2436, 0, 0, 0, 0, 0, 2443,
	0, 0, 1591, 1592, 1593, 0, 125, 78, 1671, 2422,
	0, 0, 0, 0, 908, 0, 2450, 0, 0, 1672,
	0, 0, 935, 934, 944, 945, 937, 938, 939, 940,
	941, 942, 943, 936, 0, 0, 946, 1050, 0, 0,
	0, 612, 2076, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2469, 0, 2459, 0, 596, 2471, 0,
	0, 0, 596, 1069, 0, 0, 0, 0, 0, 0,
	2478, 2486, 0, 0, 0, 2086, 612, 1645, 1646, 1647,
	0, 0, 0, 0, 0, 0, 2095, 2096, 2356, 0,
	0, 0, 2101, 0, 0, 0, 0, 0, 0, 2516,
	0, 2518, 0, 1629, 0, 0, 0, 0, 0, 2114,
	2115, 78, 2117, 461, 0, 2118, 0, 78, 0, 2504,
	2519, 0, 2548, 2521, 0, 2531, 612, 1654, 412, 2541,
	2517, 2539, 2554, 2515, 2533, 2130, 0, 0, 0, 612,
	0, 0, 0, 0, 1139, 2558, 0, 2534, 0, 78,
	2555, 612, 2564, 0, 78, 0, 0, 0, 2572, 0,
	415, 2571, 0, 0, 2570, 2546, 2569, 2575, 2578, 0,
	0, 0, 0, 0, 0, 0, 2591, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 2580, 78, 78, 0,
	0, 0, 78, 2548, 0, 0, 0, 2608, 0, 0,
	0, 0, 2600, 2612, 412, 2602, 0, 0, 2611, 0,
	612, 0, 78, 0, 2613, 78, 2617, 2548, 2628, 2615,
	2599, 0, 416, 416, 416, 0, 2630, 0, 0, 0,
	0, 0, 78, 2625, 78, 2638, 415, 2548, 78, 2548,
	0, 0, 1142, 0, 0, 0, 0, 0, 1049, 1802,
	0, 0, 78, 0, 0, 78, 2643, 2548, 0, 0,
	0, 0, 78, 0, 0, 2228, 78, 2548, 0, 0,
	0, 2548, 0, 2652, 0, 0, 0, 0, 0, 0,
	461, 2109, 0, 0, 0, 0, 2236, 2237, 2238, 0,
	2240, 1749, 1750, 1751, 1753, 122, 0, 94, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1861, 0, 2258, 2259, 2260,
	0, 935, 934, 944, 945, 937, 938, 939, 940, 941,
	942, 943, 936, 0, 0, 946, 0, 577, 1402, 1404,
	2100, 601, 0, 0, 0, 768, 0, 0, 0, 0,
	0, 1230, 0, 0, 0, 0, 0, 1904, 1905, 780,
	1906, 1907, 0, 0, 1908, 0, 0, 0, 0, 0,
	794, 0, 608, 0, 0, 0, 0, 1917, 1918, 0,
	0, 0, 0, 935, 934, 944, 945, 937, 938, 939,
	940, 941, 942, 943, 936, 0, 0, 946, 0, 0,
	0, 608, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 1952, 0, 946, 1915, 2341, 2342, 2343, 2344,
	1403, 0, 0, 0, 0, 0, 2348, 2349, 0, 0,
	935, 934, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 1306, 0, 946, 0, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 1977, 930, 0,
	933, 1958, 0, 0, 461, 0, 0, 947, 948, 949,
	950, 951, 952, 953, 0, 931, 932, 929, 935, 934,
	944, 945, 937, 938, 939, 940, 941, 942, 943, 936,
	596, 0, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 1369, 1370,
	35, 0, 70, 38, 39, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 58, 0, 0, 0, 0, 2439,
	76, 0, 0, 0, 40, 596, 2444, 935, 934, 944,
	945, 937, 938, 939, 940, 941, 942, 943, 936, 608,
	0, 946, 608, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 416,
	2077, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 416, 0, 2393, 0, 0, 0,
	0, 2654, 796, 0, 0, 0, 0, 2067, 0, 0,
	0, 0, 2482, 0, 416, 0, 0, 473, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 2102,
	2103, 2104, 0, 0, 0, 42, 72, 45, 44, 47,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 0,
	0, 2394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 909, 48, 75, 74,
	0, 2522, 0, 0, 46, 0, 0, 0, 2108, 0,
	0, 0, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 0, 1546, 0, 2122, 2123, 1546,
	2098, 2124, 0, 0, 2126, 0, 0, 1546, 0, 0,
	1546, 0, 999, 123, 0, 0, 380, 0, 0, 0,
	56, 57, 123, 2395, 0, 0, 0, 2087, 2088, 0,
	2089, 608, 0, 2091, 0, 2093, 0, 65, 0, 66,
	0, 2097, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 579, 597, 0, 0, 123,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 2396,
	73, 0, 52, 53, 60, 0, 61, 123, 0, 0,
	0, 1968, 0, 0, 0, 0, 0, 0, 123, 0,
	935, 934, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 2139, 2140, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2645, 2646, 2232, 2233, 2234,
	2235, 1041, 0, 1051, 0, 2239, 0, 0, 0, 2242,
	2243, 935, 934, 944, 945, 937, 938, 939, 940, 941,
	942, 943, 936, 0, 0, 946, 0, 0, 0, 0,
	0, 416, 0, 0, 596, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 376, 71, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 416, 0, 0, 0,
	416, 416, 0, 416, 0, 0, 0, 2049, 0, 596,
	0, 0, 0, 0, 1720, 0, 0, 2056, 2058, 0,
	0, 0, 0, 0, 0, 608, 0, 2049, 0, 0,
	0, 0, 1308, 1313, 1314, 0, 0, 0, 77, 1319,
	1320, 1321, 0, 1323, 0, 0, 1326, 0, 0, 0,
	0, 1331, 1332, 1333, 1334, 0, 1336, 1337, 1338, 0,
	0, 0, 0, 0, 1344, 1345, 1346, 0, 0, 0,
	1352, 1355, 0, 1360, 1361, 0, 354, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 1770, 0, 0, 0,
	0, 0, 0, 366, 374, 375, 0, 0, 1371, 0,
	1374, 1375, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 999, 0, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 364, 1911, 0, 372, 373, 0, 0, 2046,
	123, 0, 0, 2048, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 577, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 608, 0,
	0, 0, 2427, 1181, 1182, 1183, 1184, 0, 0, 0,
	0, 0, 0, 608, 123, 0, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 608, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2432, 2435,
	0, 0, 0, 0, 0, 0, 416, 1910, 0, 0,
	2049, 935, 934, 944, 945, 937, 938, 939, 940, 941,
	942, 943, 936, 0, 0, 946, 0, 0, 355, 0,
	2049, 0, 437, 0, 0, 0, 0, 0, 0, 596,
	0, 608, 1240, 1932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2451, 2452, 0, 0, 0,
	0, 368, 358, 359, 1263, 379, 1932, 0, 0, 360,
	362, 0, 356, 378, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 608, 0, 608, 0,
	608, 0, 1967, 0, 461, 0, 461, 0, 0, 1860,
	0, 0, 1968, 0, 0, 935, 934, 944, 945, 937,
	938, 939, 940, 941, 942, 943, 936, 1968, 371, 946,
	935, 934, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 1108, 0, 946, 0, 0, 0, 0, 123,
	123, 123, 0, 0, 0, 0, 0, 2435, 0, 597,
	1597, 0, 0, 0, 597, 0, 0, 0, 1603, 0,
	0, 2540, 0, 0, 0, 2589, 0, 1613, 1614, 1595,
	0, 2505, 1909, 0, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 1378,
	935, 934, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 0, 1408, 946, 1650, 0, 0, 0, 0,
	2059, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 2068, 2069, 0, 0, 1095, 0, 0, 0,
	0, 0, 2631, 417, 418, 419, 420, 421, 425, 426,
	430, 431, 440, 439, 438, 441, 442, 445, 444, 446,
	422, 423, 424, 427, 428, 429, 432, 433, 436, 434,
	435, 0, 0, 0, 0, 0, 0, 0, 1109, 2629,
	935, 934, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 416, 0, 946, 0, 0, 0, 0, 0,
	1968, 0, 1968, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 1505, 1506, 0, 0, 596,
	0, 0, 1513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2128, 0, 0, 0, 0, 0, 0, 2128,
	2128, 2128, 0, 0, 443, 0, 0, 0, 608, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2128, 123, 0, 0, 123, 1138, 0, 0, 0, 0,
	0, 0, 1174, 866, 0, 0, 0, 0, 0, 0,
	0, 123, 123, 123, 123, 1122, 1125, 1126, 1127, 1128,
	1129, 1130, 0, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	0, 1110, 1111, 1112, 1113, 1089, 1093, 1123, 1090, 1096,
	1092, 1094, 1091, 0, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 935, 934, 944, 945, 937, 938, 939,
	940, 941, 942, 943, 936, 0, 1081, 946, 0, 0,
	0, 0, 0, 0, 1968, 0, 608, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 0, 0, 0, 0,
	123, 0, 460, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 2250, 0, 0, 0, 0, 0,
	2128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 1312, 1312, 1312, 0,
	0, 0, 1312, 1312, 1312, 1312, 1312, 1312, 0, 0,
	1312, 0, 0, 0, 416, 1312, 1312, 1312, 1312, 0,
	1312, 1312, 1312, 0, 0, 0, 0, 0, 1312, 1312,
	1312, 0, 0, 0, 1312, 1312, 0, 1312, 1312, 0,
	0, 0, 597, 0, 0, 0, 0, 0, 0, 0,
	2330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 1312, 1312, 1312, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 123, 460, 0, 0, 0,
	123, 123, 0, 0, 123, 1411, 1174, 597, 0, 2354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 417, 418, 419, 420, 421,
	425, 426, 430, 431, 440, 439, 438, 441, 442, 445,
	444, 446, 422, 423, 424, 427, 428, 429, 432, 433,
	436, 434, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 0, 1967, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 123, 123, 596, 0, 1853, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1523, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2128, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	608, 0, 1312, 1109, 0, 0, 0, 0, 0, 0,
	0, 1312, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2594,
	0, 2026, 0, 0, 0, 0, 597, 123, 123, 123,
	123, 123, 0, 0, 0, 0, 2031, 0, 0, 460,
	0, 0, 0, 123, 0, 0, 0, 460, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 597, 0, 0, 0, 0, 0, 0, 2063, 0,
	1122, 1125, 1126, 1127, 1128, 1129, 1130, 0, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 0, 1110, 1111, 1112, 1113,
	1089, 1093, 1123, 1090, 1096, 1092, 1094, 1091, 0, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 0, 0,
	0, 0, 0, 35, 36, 70, 38, 39, 0, 0,
	0, 35, 0, 70, 38, 39, 0, 58, 0, 0,
	0, 0, 0, 76, 0, 58, 0, 40, 62, 63,
	0, 76, 0, 0, 59, 40, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 0, 0, 0, 0, 2393, 0, 0,
	0, 0, 2650, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 2155, 0, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 1174, 42, 72,
	45, 44, 47, 0, 0, 0, 42, 72, 45, 44,
	47, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2394, 0, 0, 0, 0, 0, 0, 0,
	48, 75, 74, 2048, 0, 0, 0, 46, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 597, 0, 0, 0, 0, 35, 0, 70, 38,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 0, 56, 57, 0, 76, 0, 0, 0,
	40, 56, 57, 0, 2395, 0, 0, 0, 0, 0,
	65, 0, 66, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 50, 73, 0, 52, 53, 60, 0, 61,
	2396, 73, 437, 52, 53, 60, 0, 61, 443, 0,
	0, 0, 2393, 0, 0, 0, 0, 2639, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 2057,
	0, 0, 0, 0, 0, 0, 35, 0, 70, 38,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	58, 42, 72, 45, 44, 47, 76, 0, 0, 0,
	40, 0, 0, 0, 123, 0, 443, 2394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 48, 75, 74, 0, 2055, 0, 71,
	46, 0, 0, 0, 0, 0, 123, 71, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2393, 0, 0, 0, 0, 2622, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 57, 437, 2395,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 65, 0, 66, 0, 0, 0, 0,
	0, 42, 72, 45, 44, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2394, 0, 0,
	0, 0, 0, 0, 0, 2396, 73, 460, 52, 53,
	60, 597, 61, 48, 75, 74, 437, 0, 0, 2446,
	46, 0, 0, 417, 418, 419, 420, 421, 425, 426,
	430, 431, 440, 439, 438, 441, 442, 445, 444, 446,
	422, 423, 424, 427, 428, 429, 432, 433, 436, 434,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 57, 0, 2395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 65, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2396, 73, 0, 52, 53,
	60, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 0, 77, 0, 0, 0, 0, 417,
	418, 419, 420, 421, 425, 426, 430, 431, 440, 439,
	438, 441, 442, 445, 444, 446, 422, 423, 424, 427,
	428, 429, 432, 433, 436, 434, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 460,
	0, 0, 71, 0, 0, 0, 0, 417, 418, 419,
	420, 421, 425, 426, 430, 431, 440, 439, 438, 441,
	442, 445, 444, 446, 422, 423, 424, 427, 428, 429,
	432, 433, 436, 434, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 728, 316, 678, 751, 645, 664, 763, 667,
	670, 711, 628, 691, 247, 662, 629, 0, 649, 618,
	656, 619, 646, 680, 172, 644, 730, 694, 750, 205,
	707, 0, 162, 213, 211, 0, 0, 0, 254, 315,
	749, 686, 0, 757, 208, 0, 703, 758, 305, 231,
	0, 0, 682, 737, 689, 726, 677, 713, 637, 702,
	752, 663, 709, 753, 0, 0, 0, 0, 2453, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 123, 706,
	747, 659, 708, 710, 616, 705, 0, 623, 630, 762,
	743, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 681, 690, 721, 674, 0, 0, 597, 0, 0,
	0, 0, 0, 650, 0, 700, 0, 123, 0, 631,
	624, 0, 0, 679, 0, 0, 0, 636, 130, 651,
	722, 0, 614, 184, 232, 142, 727, 742, 676, 196,
	345, 746, 673, 672, 268, 0, 310, 186, 206, 146,
	126, 140, 156, 185, 243, 720, 288, 660, 615, 731,
	647, 657, 163, 655, 281, 251, 334, 0, 697, 258,
	280, 209, 323, 717, 332, 333, 665, 766, 342, 347,
	0, 687, 634, 302, 173, 0, 132, 0, 265, 168,
	201, 675, 712, 648, 160, 718, 701, 736, 301, 321,
	148, 317, 230, 236, 157, 159, 158, 141, 296, 320,
	152, 161, 306, 284, 311, 167, 0, 0, 2456, 2457,
	2458, 0, 0, 0, 0, 339, 671, 291, 290, 666,
	192, 725, 704, 620, 274, 715, 197, 131, 313, 350,
	147, 203, 318, 613, 180, 242, 165, 252, 253, 177,
	128, 270, 224, 225, 223, 226, 658, 716, 335, 724,
	272, 133, 314, 331, 153, 292, 294, 348, 279, 135,
	329, 309, 228, 198, 199, 134, 0, 277, 171, 183,
	166, 246, 0, 182, 267, 326, 327, 164, 351, 143,
	341, 137, 144, 340, 239, 0, 238, 343, 322, 330,
	229, 217, 0, 136, 328, 227, 216, 204, 176, 188,
	263, 212, 264, 189, 234, 233, 235, 214, 218, 0,
	621, 0, 307, 337, 352, 150, 643, 295, 319, 0,
	0, 151, 181, 175, 262, 237, 145, 191, 304, 202,
	210, 276, 349, 250, 282, 154, 336, 303, 641, 642,
	639, 0, 640, 692, 693, 754, 755, 756, 723, 633,
	0, 738, 739, 0, 0, 0, 0, 0, 729, 744,
	745, 714, 764, 668, 669, 638, 293, 275, 622, 625,
	626, 627, 635, 683, 684, 696, 699, 734, 733, 732,
	735, 740, 760, 759, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 129, 138, 207,
	765, 273, 179, 338, 617, 170, 0, 685, 688, 698,
	719, 127, 139, 149, 155, 169, 174, 178, 661, 187,
	190, 193, 194, 195, 200, 215, 219, 220, 221, 222,
	240, 241, 244, 245, 248, 249, 255, 256, 257, 259,
	260, 261, 266, 269, 271, 278, 283, 285, 286, 287,
	289, 297, 298, 299, 300, 308, 312, 324, 325, 344,
	346, 741, 748, 728, 316, 678, 751, 645, 664, 763,
	667, 670, 711, 628, 691, 247, 662, 629, 0, 649,
	618, 656, 619, 646, 680, 172, 644, 730, 694, 750,
	205, 707, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 749, 686, 0, 757, 208, 0, 703, 758, 305,
	231, 0, 0, 682, 737, 689, 726, 677, 713, 637,
	702, 752, 663, 709, 753, 0, 0, 0, 0, 611,
	0, 1433, 1434, 0, 0, 0, 0, 0, 632, 0,
	706, 747, 659, 708, 710, 616, 705, 0, 623, 630,
	762, 743, 652, 653, 654, 1715, 0, 0, 0, 0,
	0, 0, 681, 690, 721, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 700, 0, 0, 0,
	631, 624, 0, 0, 679, 0, 0, 0, 636, 130,
	651, 722, 0, 614, 184, 232, 142, 727, 742, 676,
	196, 345, 746, 673, 672, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 720, 288, 660, 615,
	731, 647, 657, 163, 655, 281, 251, 334, 0, 697,
	258, 280, 209, 323, 717, 332, 333, 665, 766, 342,
	347, 0, 687, 634, 302, 173, 0, 132, 0, 265,
	168, 201, 675, 712, 648, 160, 718, 701, 736, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 671, 291, 290,
	666, 192, 725, 704, 620, 274, 715, 197, 131, 313,
	350, 147, 203, 318, 613, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 658, 716, 335,
	724, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 621, 0, 307, 337, 352, 150, 643, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 641,
	642, 639, 0, 640, 692, 693, 754, 755, 756, 723,
	633, 0, 738, 739, 0, 0, 0, 0, 0, 729,
	744, 745, 714, 764, 668, 669, 638, 293, 275, 622,
	625, 626, 627, 635, 683, 684, 696, 699, 734, 733,
	732, 735, 740, 760, 759, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 695, 129, 138,
	207, 765, 273, 179, 338, 617, 170, 0, 685, 688,
	698, 719, 127, 139, 149, 155, 169, 174, 178, 661,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 741, 748, 728, 316, 678, 751, 645, 664,
	763, 667, 670, 711, 628, 691, 247, 662, 629, 0,
	649, 618, 656, 619, 646, 680, 172, 644, 730, 694,
	750, 205, 707, 0, 162, 213, 211, 0, 0, 0,
	254, 315, 749, 686, 0, 757, 208, 0, 703, 758,
	305, 231, 0, 0, 682, 737, 689, 726, 677, 713,
	637, 702, 752, 663, 709, 753, 0, 0, 0, 0,
	611, 0, 1433, 1434, 0, 0, 0, 0, 0, 632,
	0, 706, 747, 659, 708, 710, 616, 705, 0, 623,
	630, 762, 743, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 681, 690, 721, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 700, 0, 0,
	0, 631, 624, 0, 0, 679, 0, 0, 0, 636,
	130, 651, 722, 0, 614, 184, 232, 142, 727, 742,
	676, 196, 345, 746, 673, 672, 268, 0, 310, 186,
	206, 146, 126, 140, 156, 185, 243, 720, 288, 660,
	615, 731, 647, 657, 163, 655, 281, 251, 334, 0,
	697, 258, 280, 209, 323, 717, 332, 333, 665, 766,
	342, 347, 0, 687, 634, 302, 173, 0, 132, 0,
	265, 168, 201, 675, 712, 648, 160, 718, 701, 736,
	301, 321, 148, 317, 230, 236, 157, 159, 158, 141,
	296, 320, 152, 161, 306, 284, 311, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 671, 291,
	290, 666, 192, 725, 704, 620, 274, 715, 197, 131,
	313, 350, 147, 203, 318, 613, 180, 242, 165, 252,
	253, 177, 128, 270, 224, 225, 223, 226, 658, 716,
	335, 724, 272, 133, 314, 331, 153, 292, 294, 348,
	279, 135, 329, 309, 228, 198, 199, 134, 0, 277,
	171, 183, 166, 246, 0, 182, 267, 326, 327, 164,
	351, 143, 341, 137, 144, 340, 239, 0, 238, 343,
	322, 330, 229, 217, 0, 136, 328, 227, 216, 204,
	176, 188, 263, 212, 264, 189, 234, 233, 235, 214,
	218, 0, 621, 0, 307, 337, 352, 150, 643, 295,
	319, 0, 0, 151, 181, 175, 262, 237, 145, 191,
	304, 202, 210, 276, 349, 250, 282, 154, 336, 303,
	641, 642, 639, 0, 640, 692, 693, 754, 755, 756,
	723, 633, 0, 738, 739, 0, 0, 0, 0, 0,
	729, 744, 745, 714, 764, 668, 669, 638, 293, 275,
	622, 625, 626, 627, 635, 683, 684, 696, 699, 734,
	733, 732, 735, 740, 760, 759, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 129,
	138, 207, 765, 273, 179, 338, 617, 170, 0, 685,
	688, 698, 719, 127, 139, 149, 155, 169, 174, 178,
	661, 187, 190, 193, 194, 195, 200, 215, 219, 220,
	221, 222, 240, 241, 244, 245, 248, 249, 255, 256,
	257, 259, 260, 261, 266, 269, 271, 278, 283, 285,
	286, 287, 289, 297, 298, 299, 300, 308, 312, 324,
	325, 344, 346, 741, 748, 1929, 316, 678, 751, 645,
	664, 763, 667, 670, 711, 628, 691, 247, 662, 629,
	0, 649, 618, 656, 619, 646, 680, 172, 644, 730,
	694, 750, 205, 707, 0, 162, 213, 211, 0, 0,
	0, 254, 315, 749, 686, 0, 757, 208, 0, 703,
	758, 305, 231, 0, 0, 682, 737, 689, 726, 677,
	713, 637, 702, 752, 663, 709, 753, 79, 0, 899,
	0, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 706, 747, 659, 708, 710, 616, 705, 0,
	623, 630, 762, 743, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 681, 690, 721, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 0, 700, 0,
	0, 0, 631, 624, 0, 0, 679, 0, 0, 0,
	636, 130, 651, 722, 0, 614, 184, 232, 142, 727,
	742, 676, 196, 345, 746, 673, 672, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 720, 288,
	660, 615, 731, 647, 657, 163, 655, 281, 251, 334,
	0, 697, 258, 280, 209, 323, 717, 332, 333, 665,
	766, 342, 347, 0, 687, 634, 302, 173, 0, 132,
	0, 265, 168, 201, 675, 712, 648, 160, 718, 701,
	736, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 671,
	291, 290, 666, 192, 725, 704, 620, 274, 715, 197,
	131, 313, 350, 147, 203, 318, 613, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 658,
	716, 335, 724, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 621, 0, 307, 337, 352, 150, 643,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 641, 642, 639, 0, 640, 692, 693, 754, 755,
	756, 723, 633, 0, 738, 739, 0, 0, 0, 0,
	0, 729, 744, 745, 714, 764, 668, 669, 638, 293,
	275, 622, 625, 626, 627, 635, 683, 684, 696, 699,
	734, 733, 732, 735, 740, 760, 759, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 695,
	129, 138, 207, 1930, 273, 179, 338, 617, 170, 0,
	685, 688, 698, 719, 127, 139, 149, 155, 169, 174,
	178, 661, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 741, 748, 728, 316, 678, 751,
	645, 664, 763, 667, 670, 711, 628, 691, 247, 662,
	629, 0, 649, 618, 656, 619, 646, 680, 172, 644,
	730, 694, 750, 205, 707, 0, 162, 213, 211, 0,
	0, 0, 254, 315, 749, 686, 0, 757, 208, 0,
	703, 758, 305, 231, 0, 0, 682, 737, 689, 726,
	677, 713, 637, 702, 752, 663, 709, 753, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 0, 706, 747, 659, 708, 710, 616, 705,
	0, 623, 630, 762, 743, 652, 653, 654, 0, 0,
	0, 0, 0, 0, 0, 681, 690, 721, 674, 0,
	0, 0, 0, 0, 0, 2227, 0, 650, 0, 700,
	0, 0, 0, 631, 624, 0, 0, 679, 0, 0,
	0, 636, 130, 651, 722, 0, 614, 184, 232, 142,
	727, 742, 676, 196, 345, 746, 673, 672, 268, 0,
	310, 186, 206, 146, 126, 140, 156, 185, 243, 720,
	288, 660, 615, 731, 647, 657, 163, 655, 281, 251,
	334, 0, 697, 258, 280, 209, 323, 717, 332, 333,
	665, 766, 342, 347, 0, 687, 634, 302, 173, 0,
	132, 0, 265, 168, 201, 675, 712, 648, 160, 718,
	701, 736, 301, 321, 148, 317, 230, 236, 157, 159,
	158, 141, 296, 320, 152, 161, 306, 284, 311, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	671, 291, 290, 666, 192, 725, 704, 620, 274, 715,
	197, 131, 313, 350, 147, 203, 318, 613, 180, 242,
	165, 252, 253, 177, 128, 270, 224, 225, 223, 226,
	658, 716, 335, 724, 272, 133, 314, 331, 153, 292,
	294, 348, 279, 135, 329, 309, 228, 198, 199, 134,
	0, 277, 171, 183, 166, 246, 0, 182, 267, 326,
	327, 164, 351, 143, 341, 137, 144, 340, 239, 0,
	238, 343, 322, 330, 229, 217, 0, 136, 328, 227,
	216, 204, 176, 188, 263, 212, 264, 189, 234, 233,
	235, 214, 218, 0, 621, 0, 307, 337, 352, 150,
	643, 295, 319, 0, 0, 151, 181, 175, 262, 237,
	145, 191, 304, 202, 210, 276, 349, 250, 282, 154,
	336, 303, 641, 642, 639, 0, 640, 692, 693, 754,
	755, 756, 723, 633, 0, 738, 739, 0, 0, 0,
	0, 0, 729, 744, 745, 714, 764, 668, 669, 638,
	293, 275, 622, 625, 626, 627, 635, 683, 684, 696,
	699, 734, 733, 732, 735, 740, 760, 759, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 129, 138, 207, 765, 273, 179, 338, 617, 170,
	0, 685, 688, 698, 719, 127, 139, 149, 155, 169,
	174, 178, 661, 187, 190, 193, 194, 195, 200, 215,
	219, 220, 221, 222, 240, 241, 244, 245, 248, 249,
	255, 256, 257, 259, 260, 261, 266, 269, 271, 278,
	283, 285, 286, 287, 289, 297, 298, 299, 300, 308,
	312, 324, 325, 344, 346, 741, 748, 728, 316, 678,
	751, 645, 664, 763, 667, 670, 711, 628, 691, 247,
	662, 629, 0, 649, 618, 656, 619, 646, 680, 172,
	644, 730, 694, 750, 205, 707, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 749, 686, 0, 757, 208,
	0, 703, 758, 305, 231, 0, 0, 682, 737, 689,
	726, 677, 713, 637, 702, 752, 663, 709, 753, 0,
	0, 0, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 706, 747, 659, 708, 710, 616,
	705, 0, 623, 630, 762, 743, 652, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 681, 690, 721, 674,
	0, 0, 0, 0, 0, 0, 1866, 0, 650, 0,
	700, 0, 0, 0, 631, 624, 0, 0, 679, 0,
	0, 0, 636, 130, 651, 722, 0, 614, 184, 232,
	142, 727, 742, 676, 196, 345, 746, 673, 672, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	720, 288, 660, 615, 731, 647, 657, 163, 655, 281,
	251, 334, 0, 697, 258, 280, 209, 323, 717, 332,
	333, 665, 766, 342, 347, 0, 687, 634, 302, 173,
	0, 132, 0, 265, 168, 201, 675, 712, 648, 160,
	718, 701, 736, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 671, 291, 290, 666, 192, 725, 704, 620, 274,
	715, 197, 131, 313, 350, 147, 203, 318, 613, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 658, 716, 335, 724, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 621, 0, 307, 337, 352,
	150, 643, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 641, 642, 639, 0, 640, 692, 693,
	754, 755, 756, 723, 633, 0, 738, 739, 0, 0,
	0, 0, 0, 729, 744, 745, 714, 764, 668, 669,
	638, 293, 275, 622, 625, 626, 627, 635, 683, 684,
	696, 699, 734, 733, 732, 735, 740, 760, 759, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 129, 138, 207, 765, 273, 179, 338, 617,
	170, 0, 685, 688, 698, 719, 127, 139, 149, 155,
	169, 174, 178, 661, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 741, 748, 728, 316,
	678, 751, 645, 664, 763, 667, 670, 711, 628, 691,
	247, 662, 629, 0, 649, 618, 656, 619, 646, 680,
	172, 644, 730, 694, 750, 205, 707, 0, 162, 213,
	211, 0, 0, 0, 254, 315, 749, 686, 0, 757,
	208, 0, 703, 758, 305, 231, 0, 0, 682, 737,
	689, 726, 677, 713, 637, 702, 752, 663, 709, 753,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 706, 747, 659, 708, 710,
	616, 705, 0, 623, 630, 762, 743, 652, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 681, 690, 721,
	674, 0, 0, 0, 0, 0, 0, 1856, 0, 650,
	0, 700, 0, 0, 0, 631, 624, 0, 0, 679,
	0, 0, 0, 636, 130, 651, 722, 0, 614, 184,
	232, 142, 727, 742, 676, 196, 345, 746, 673, 672,
	268, 0, 310, 186, 206, 146, 126, 140, 156, 185,
	243, 720, 288, 660, 615, 731, 647, 657, 163, 655,
	281, 251, 334, 0, 697, 258, 280, 209, 323, 717,
	332, 333, 665, 766, 342, 347, 0, 687, 634, 302,
	173, 0, 132, 0, 265, 168, 201, 675, 712, 648,
	160, 718, 701, 736, 301, 321, 148, 317, 230, 236,
	157, 159, 158, 141, 296, 320, 152, 161, 306, 284,
	311, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 671, 291, 290, 666, 192, 725, 704, 620,
	274, 715, 197, 131, 313, 350, 147, 203, 318, 613,
	180, 242, 165, 252, 253, 177, 128, 270, 224, 225,
	223, 226, 658, 716, 335, 724, 272, 133, 314, 331,
	153, 292, 294, 348, 279, 135, 329, 309, 228, 198,
	199, 134, 0, 277, 171, 183, 166, 246, 0, 182,
	267, 326, 327, 164, 351, 143, 341, 137, 144, 340,
	239, 0, 238, 343, 322, 330, 229, 217, 0, 136,
	328, 227, 216, 204, 176, 188, 263, 212, 264, 189,
	234, 233, 235, 214, 218, 0, 621, 0, 307, 337,
	352, 150, 643, 295, 319, 0, 0, 151, 181, 175,
	262, 237, 145, 191, 304, 202, 210, 276, 349, 250,
	282, 154, 336, 303, 641, 642, 639, 0, 640, 692,
	693, 754, 755, 756, 723, 633, 0, 738, 739, 0,
	0, 0, 0, 0, 729, 744, 745, 714, 764, 668,
	669, 638, 293, 275, 622, 625, 626, 627, 635, 683,
	684, 696, 699, 734, 733, 732, 735, 740, 760, 759,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 695, 129, 138, 207, 765, 273, 179, 338,
	617, 170, 0, 685, 688, 698, 719, 127, 139, 149,
	155, 169, 174, 178, 661, 187, 190, 193, 194, 195,
	200, 215, 219, 220, 221, 222, 240, 241, 244, 245,
	248, 249, 255, 256, 257, 259, 260, 261, 266, 269,
	271, 278, 283, 285, 286, 287, 289, 297, 298, 299,
	300, 308, 312, 324, 325, 344, 346, 741, 748, 728,
	316, 678, 751, 645, 664, 763, 667, 670, 711, 628,
	691, 247, 662, 629, 0, 649, 618, 656, 619, 646,
	680, 172, 644, 730, 694, 750, 205, 707, 0, 162,
	213, 211, 0, 0, 0, 254, 315, 749, 686, 0,
	757, 208, 0, 703, 758, 305, 231, 0, 0, 682,
	737, 689, 726, 677, 713, 637, 702, 752, 663, 709,
	753, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 706, 747, 659, 708,
	710, 616, 705, 0, 623, 630, 762, 743, 652, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 681, 690,
	721, 674, 0, 0, 0, 0, 0, 0, 1412, 0,
	650, 0, 700, 0, 0, 0, 631, 624, 0, 0,
	679, 0, 0, 0, 636, 130, 651, 722, 0, 614,
	184, 232, 142, 727, 742, 676, 196, 345, 746, 673,
	672, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 720, 288, 660, 615, 731, 647, 657, 163,
	655, 281, 251, 334, 0, 697, 258, 280, 209, 323,
	717, 332, 333, 665, 766, 342, 347, 0, 687, 634,
	302, 173, 0, 132, 0, 265, 168, 201, 675, 712,
	648, 160, 718, 701, 736, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 671, 291, 290, 666, 192, 725, 704,
	620, 274, 715, 197, 131, 313, 350, 147, 203, 318,
	613, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 658, 716, 335, 724, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 621, 0, 307,
	337, 352, 150, 643, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 641, 642, 639, 0, 640,
	692, 693, 754, 755, 756, 723, 633, 0, 738, 739,
	0, 0, 0, 0, 0, 729, 744, 745, 714, 764,
	668, 669, 638, 293, 275, 622, 625, 626, 627, 635,
	683, 684, 696, 699, 734, 733, 732, 735, 740, 760,
	759, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 695, 129, 138, 207, 765, 273, 179,
	338, 617, 170, 0, 685, 688, 698, 719, 127, 139,
	149, 155, 169, 174, 178, 661, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 741, 748,
	728, 316, 678, 751, 645, 664, 763, 667, 670, 711,
	628, 691, 247, 662, 629, 0, 649, 618, 656, 619,
	646, 680, 172, 644, 730, 694, 750, 205, 707, 0,
	162, 213, 211, 0, 0, 0, 254, 315, 749, 686,
	0, 757, 208, 0, 703, 758, 305, 231, 0, 0,
	682, 737, 689, 726, 677, 713, 637, 702, 752, 663,
	709, 753, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 706, 747, 659,
	708, 710, 616, 705, 0, 623, 630, 762, 743, 652,
	653, 654, 0, 0, 0, 0, 0, 0, 0, 681,
	690, 721, 674, 0, 0, 0, 0, 0, 0, 1272,
	0, 650, 0, 700, 0, 0, 0, 631, 624, 0,
	0, 679, 0, 0, 0, 636, 130, 651, 722, 0,
	614, 184, 232, 142, 727, 742, 676, 196, 345, 746,
	673, 672, 268, 0, 310, 186, 206, 146, 126, 140,
	156, 185, 243, 720, 288, 660, 615, 731, 647, 657,
	163, 655, 281, 251, 334, 0, 697, 258, 280, 209,
	323, 717, 332, 333, 665, 766, 342, 347, 0, 687,
	634, 302, 173, 0, 132, 0, 265, 168, 201, 675,
	712, 648, 160, 718, 701, 736, 301, 321, 148, 317,
	230, 236, 157, 159, 158, 141, 296, 320, 152, 161,
	306, 284, 311, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 671, 291, 290, 666, 192, 725,
	704, 620, 274, 715, 197, 131, 313, 350, 147, 203,
	318, 613, 180, 242, 165, 252, 253, 177, 128, 270,
	224, 225, 223, 226, 658, 716, 335, 724, 272, 133,
	314, 331, 153, 292, 294, 348, 279, 135, 329, 309,
	228, 198, 199, 134, 0, 277, 171, 183, 166, 246,
	0, 182, 267, 326, 327, 164, 351, 143, 341, 137,
	144, 340, 239, 0, 238, 343, 322, 330, 229, 217,
	0, 136, 328, 227, 216, 204, 176, 188, 263, 212,
	264, 189, 234, 233, 235, 214, 218, 0, 621, 0,
	307, 337, 352, 150, 643, 295, 319, 0, 0, 151,
	181, 175, 262, 237, 145, 191, 304, 202, 210, 276,
	349, 250, 282, 154, 336, 303, 641, 642, 639, 0,
	640, 692, 693, 754, 755, 756, 723, 633, 0, 738,
	739, 0, 0, 0, 0, 0, 729, 744, 745, 714,
	764, 668, 669, 638, 293, 275, 622, 625, 626, 627,
	635, 683, 684, 696, 699, 734, 733, 732, 735, 740,
	760, 759, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 695, 129, 138, 207, 765, 273,
	179, 338, 617, 170, 0, 685, 688, 698, 719, 127,
	139, 149, 155, 169, 174, 178, 661, 187, 190, 193,
	194, 195, 200, 215, 219, 220, 221, 222, 240, 241,
	244, 245, 248, 249, 255, 256, 257, 259, 260, 261,
	266, 269, 271, 278, 283, 285, 286, 287, 289, 297,
	298, 299, 300, 308, 312, 324, 325, 344, 346, 741,
	748, 728, 316, 678, 751, 645, 664, 763, 667, 670,
	711, 628, 691, 247, 662, 629, 0, 649, 618, 656,
	619, 646, 680, 172, 644, 730, 694, 750, 205, 707,
	0, 162, 213, 211, 0, 0, 0, 254, 315, 749,
	686, 0, 757, 208, 0, 703, 758, 305, 231, 0,
	0, 682, 737, 689, 726, 677, 713, 637, 702, 752,
	663, 709, 753, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 0, 706, 747,
	659, 708, 710, 616, 705, 0, 623, 630, 762, 743,
	652, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	681, 690, 721, 674, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 0, 700, 0, 0, 0, 631, 624,
	0, 0, 679, 0, 0, 0, 636, 130, 651, 722,
	0, 614, 184, 232, 142, 727, 742, 676, 196, 345,
	746, 673, 672, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 720, 288, 660, 615, 731, 647,
	657, 163, 655, 281, 251, 334, 0, 697, 258, 280,
	209, 323, 717, 332, 333, 665, 766, 342, 347, 0,
	687, 634, 302, 173, 0, 132, 0, 265, 168, 201,
	675, 712, 648, 160, 718, 701, 736, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 671, 291, 290, 666, 192,
	725, 704, 620, 274, 715, 197, 131, 313, 350, 147,
	203, 318, 613, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 658, 716, 335, 724, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 621,
	0, 307, 337, 352, 150, 643, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 641, 642, 639,
	0, 640, 692, 693, 754, 755, 756, 723, 633, 0,
	738, 739, 0, 0, 0, 0, 0, 729, 744, 745,
	714, 764, 668, 669, 638, 293, 275, 622, 625, 626,
	627, 635, 683, 684, 696, 699, 734, 733, 732, 735,
	740, 760, 759, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 129, 138, 207, 765,
	273, 179, 338, 617, 170, 0, 685, 688, 698, 719,
	127, 139, 149, 155, 169, 174, 178, 661, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	741, 748, 728, 316, 678, 751, 645, 664, 763, 667,
	670, 711, 628, 691, 247, 662, 629, 0, 649, 618,
	656, 619, 646, 680, 172, 644, 730, 694, 750, 205,
	707, 0, 162, 213, 211, 0, 0, 0, 254, 315,
	749, 686, 0, 757, 208, 0, 703, 758, 305, 231,
	0, 0, 682, 737, 689, 726, 677, 713, 637, 702,
	752, 663, 709, 753, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 706,
	747, 659, 708, 710, 616, 705, 0, 623, 630, 762,
	743, 652, 653, 654, 0, 0, 0, 0, 0, 0,
	0, 681, 690, 721, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 650, 0, 700, 0, 0, 0, 631,
	624, 0, 0, 679, 0, 0, 0, 636, 130, 651,
	722, 0, 614, 184, 232, 142, 727, 742, 676, 196,
	345, 746, 673, 672, 268, 0, 310, 186, 206, 146,
	126, 140, 156, 185, 243, 720, 288, 660, 615, 731,
	647, 657, 163, 655, 281, 251, 334, 0, 697, 258,
	280, 209, 323, 717, 332, 333, 665, 766, 342, 347,
	0, 687, 634, 302, 173, 0, 132, 0, 265, 168,
	201, 675, 712, 648, 160, 718, 701, 736, 301, 321,
	148, 317, 230, 236, 157, 159, 158, 141, 296, 320,
	152, 161, 306, 284, 311, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 671, 291, 290, 666,
	192, 725, 704, 620, 274, 715, 197, 131, 313, 350,
	147, 203, 318, 613, 180, 242, 165, 252, 253, 177,
	128, 270, 224, 225, 223, 226, 658, 716, 335, 724,
	272, 133, 314, 331, 153, 292, 294, 348, 279, 135,
	329, 309, 228, 198, 199, 134, 0, 277, 171, 183,
	166, 246, 0, 182, 267, 326, 327, 164, 351, 143,
	341, 137, 144, 340, 239, 0, 238, 343, 322, 330,
	229, 217, 0, 136, 328, 227, 216, 204, 176, 188,
	263, 212, 264, 189, 234, 233, 235, 214, 218, 0,
	621, 0, 307, 337, 352, 150, 643, 295, 319, 0,
	0, 151, 181, 175, 262, 237, 145, 191, 304, 202,
	210, 276, 349, 250, 282, 154, 336, 303, 641, 642,
	639, 0, 640, 692, 693, 754, 755, 756, 723, 633,
	0, 738, 739, 0, 0, 0, 0, 0, 729, 744,
	745, 714, 764, 668, 669, 638, 293, 275, 622, 625,
	626, 627, 635, 683, 684, 696, 699, 734, 733, 732,
	735, 740, 760, 759, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 129, 138, 207,
	765, 273, 179, 338, 617, 170, 0, 685, 688, 698,
	719, 127, 139, 149, 155, 169, 174, 178, 661, 187,
	190, 193, 194, 195, 200, 215, 219, 220, 221, 222,
	240, 241, 244, 245, 248, 249, 255, 256, 257, 259,
	260, 261, 266, 269, 271, 278, 283, 285, 286, 287,
	289, 297, 298, 299, 300, 308, 312, 324, 325, 344,
	346, 741, 748, 728, 316, 678, 751, 645, 664, 763,
	667, 670, 711, 628, 691, 247, 662, 629, 0, 649,
	618, 656, 619, 646, 680, 172, 644, 730, 694, 750,
	205, 707, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 1444, 1448, 0, 757, 208, 0, 703, 758, 305,
	231, 0, 0, 682, 737, 689, 726, 677, 713, 637,
	702, 752, 663, 709, 753, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 0,
	706, 747, 659, 708, 710, 616, 705, 0, 623, 630,
	762, 743, 652, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 681, 690, 721, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 650, 0, 700, 0, 0, 0,
	631, 624, 0, 0, 679, 0, 0, 0, 636, 130,
	651, 722, 0, 614, 184, 232, 142, 727, 742, 1447,
	196, 345, 746, 673, 672, 1442, 0, 1443, 186, 206,
	610, 126, 140, 1440, 1446, 243, 720, 288, 660, 615,
	731, 647, 657, 163, 655, 281, 251, 334, 0, 697,
	258, 280, 209, 323, 717, 332, 333, 665, 766, 342,
	347, 0, 687, 634, 302, 173, 0, 132, 0, 265,
	168, 201, 675, 712, 648, 160, 718, 701, 736, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 671, 291, 290,
	666, 192, 725, 704, 620, 274, 715, 197, 131, 313,
	350, 147, 203, 318, 613, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 658, 716, 335,
	724, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 621, 0, 307, 337, 352, 150, 643, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 641,
	642, 639, 0, 640, 692, 693, 754, 755, 756, 723,
	633, 0, 738, 739, 0, 0, 0, 0, 0, 729,
	744, 745, 714, 764, 668, 669, 638, 293, 275, 622,
	625, 626, 627, 635, 683, 684, 696, 699, 734, 733,
	732, 735, 740, 760, 759, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 695, 129, 138,
	207, 765, 273, 179, 338, 617, 170, 0, 685, 688,
	698, 719, 127, 139, 149, 155, 169, 174, 178, 661,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 741, 748, 728, 316, 678, 751, 645, 664,
	763, 667, 670, 711, 628, 691, 247, 662, 629, 0,
	649, 618, 656, 619, 646, 680, 172, 644, 730, 694,
	750, 205, 707, 0, 162, 213, 211, 0, 0, 0,
	254, 315, 749, 686, 0, 757, 208, 0, 703, 758,
	305, 231, 0, 0, 682, 737, 689, 726, 677, 713,
	637, 702, 752, 663, 709, 753, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 632,
	0, 706, 747, 659, 708, 710, 616, 705, 0, 623,
	630, 762, 743, 652, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 681, 690, 721, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 700, 0, 0,
	0, 631, 624, 0, 0, 679, 0, 0, 0, 636,
	130, 651, 722, 0, 614, 184, 232, 142, 727, 742,
	676, 196, 345, 746, 673, 672, 268, 0, 310, 186,
	206, 146, 126, 140, 156, 185, 243, 720, 288, 660,
	615, 731, 647, 657, 163, 655, 281, 251, 334, 0,
	697, 258, 280, 209, 323, 717, 332, 333, 665, 766,
	342, 347, 0, 687, 634, 302, 173, 0, 132, 0,
	265, 168, 201, 675, 712, 648, 160, 718, 701, 736,
	301, 321, 148, 317, 230, 236, 157, 159, 158, 141,
	296, 320, 152, 161, 306, 284, 311, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 671, 291,
	290, 666, 192, 725, 704, 620, 274, 715, 197, 131,
	313, 350, 147, 203, 318, 613, 180, 242, 165, 252,
	253, 177, 128, 270, 224, 225, 223, 226, 658, 716,
	335, 724, 272, 133, 314, 331, 153, 292, 294, 348,
	279, 135, 329, 309, 228, 198, 199, 134, 0, 277,
	171, 183, 166, 246, 0, 182, 267, 326, 327, 164,
	351, 143, 341, 137, 144, 340, 239, 0, 238, 343,
	322, 330, 229, 217, 0, 136, 328, 227, 216, 204,
	176, 188, 263, 212, 264, 189, 234, 233, 235, 214,
	218, 0, 621, 0, 307, 337, 352, 150, 643, 295,
	319, 0, 0, 151, 181, 175, 262, 237, 145, 191,
	304, 202, 210, 276, 349, 250, 282, 154, 336, 303,
	641, 642, 639, 0, 640, 692, 693, 754, 755, 756,
	723, 633, 0, 738, 739, 0, 0, 0, 0, 0,
	729, 744, 745, 714, 764, 668, 669, 638, 293, 275,
	622, 625, 626, 627, 635, 683, 684, 696, 699, 734,
	733, 732, 735, 740, 760, 759, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 695, 129,
	138, 207, 765, 273, 179, 338, 617, 170, 0, 685,
	688, 698, 719, 127, 139, 149, 155, 169, 174, 178,
	661, 187, 190, 193, 194, 195, 200, 215, 219, 220,
	221, 222, 240, 241, 244, 245, 248, 249, 255, 256,
	257, 259, 260, 261, 266, 269, 271, 278, 283, 285,
	286, 287, 289, 297, 298, 299, 300, 308, 312, 324,
	325, 344, 346, 741, 748, 728, 316, 678, 751, 645,
	664, 763, 667, 670, 711, 628, 691, 247, 662, 629,
	0, 649, 618, 656, 619, 646, 680, 172, 644, 730,
	694, 750, 205, 707, 0, 162, 213, 211, 0, 0,
	0, 254, 315, 749, 686, 0, 757, 208, 0, 703,
	758, 305, 231, 0, 0, 682, 737, 689, 726, 677,
	713, 637, 702, 752, 663, 709, 753, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 706, 747, 659, 708, 710, 616, 705, 0,
	623, 630, 762, 743, 652, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 681, 690, 721, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 650, 0, 700, 0,
	0, 0, 631, 624, 0, 0, 679, 0, 0, 0,
	636, 130, 651, 722, 0, 614, 184, 232, 142, 727,
	742, 676, 196, 345, 746, 673, 672, 268, 0, 310,
	186, 206, 610, 126, 140, 606, 185, 243, 720, 288,
	660, 615, 731, 647, 657, 163, 655, 281, 251, 334,
	0, 697, 258, 280, 209, 323, 717, 332, 333, 665,
	766, 342, 347, 0, 687, 634, 302, 173, 0, 132,
	0, 265, 168, 201, 675, 712, 648, 160, 718, 701,
	736, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 671,
	291, 290, 666, 192, 725, 704, 620, 274, 715, 197,
	131, 313, 350, 147, 203, 318, 613, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 658,
	716, 335, 724, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 621, 0, 307, 337, 352, 150, 643,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 641, 642, 639, 0, 640, 692, 693, 754, 755,
	756, 723, 633, 0, 738, 739, 0, 0, 0, 0,
	0, 729, 744, 745, 714, 764, 668, 669, 638, 293,
	275, 622, 625, 626, 627, 635, 683, 684, 696, 699,
	734, 733, 732, 735, 740, 760, 759, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 695,
	129, 138, 207, 765, 273, 179, 338, 617, 170, 0,
	685, 688, 698, 719, 127, 139, 149, 155, 169, 174,
	178, 661, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 741, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 481, 0, 0, 0, 172, 478, 0, 0,
	0, 205, 0, 0, 162, 213, 211, 0, 0, 0,
	254, 315, 0, 0, 0, 556, 208, 0, 0, 443,
	305, 231, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 1422, 0, 79, 0, 0, 0,
	479, 503, 502, 505, 506, 507, 508, 0, 0, 0,
	504, 509, 538, 539, 1423, 0, 0, 476, 494, 0,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 570, 0, 493,
	0, 0, 488, 489, 490, 495, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 184, 232, 142, 546, 0,
	0, 196, 345, 0, 0, 568, 268, 0, 310, 186,
	206, 146, 126, 140, 156, 185, 243, 0, 288, 553,
	0, 0, 0, 0, 163, 0, 281, 251, 334, 545,
	0, 258, 280, 209, 323, 0, 332, 333, 0, 437,
	342, 347, 0, 0, 0, 302, 173, 0, 132, 0,
	265, 168, 201, 0, 0, 0, 160, 0, 0, 0,
	301, 321, 148, 317, 230, 236, 157, 159, 158, 141,
	296, 320, 152, 161, 306, 284, 311, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 291,
	290, 0, 192, 0, 0, 0, 274, 0, 197, 131,
	313, 350, 147, 203, 318, 0, 180, 242, 165, 252,
	253, 177, 128, 270, 224, 225, 223, 226, 0, 0,
	335, 0, 272, 133, 314, 331, 153, 292, 294, 348,
	279, 135, 329, 309, 228, 198, 199, 134, 0, 277,
	171, 183, 166, 246, 0, 182, 267, 326, 327, 164,
	351, 143, 341, 137, 144, 340, 239, 0, 238, 343,
	322, 330, 229, 217, 0, 136, 328, 227, 216, 204,
	176, 188, 263, 212, 264, 189, 234, 233, 235, 214,
	218, 0, 0, 0, 307, 337, 352, 150, 0, 295,
	319, 0, 0, 151, 181, 175, 262, 237, 145, 191,
	304, 202, 210, 276, 349, 250, 282, 154, 336, 303,
	557, 569, 563, 565, 564, 561, 562, 560, 559, 558,
	571, 547, 548, 549, 550, 551, 0, 0, 0, 554,
	0, 566, 567, 0, 0, 0, 0, 0, 293, 275,
	510, 511, 512, 513, 514, 518, 519, 523, 524, 532,
	531, 530, 533, 534, 536, 535, 537, 515, 516, 517,
	520, 521, 522, 525, 526, 529, 527, 528, 552, 129,
	138, 207, 0, 273, 179, 338, 0, 170, 0, 0,
	0, 0, 0, 127, 139, 149, 155, 169, 174, 178,
	0, 187, 190, 193, 194, 195, 200, 215, 219, 220,
	221, 222, 240, 241, 244, 245, 248, 249, 255, 256,
	257, 259, 260, 261, 266, 269, 271, 278, 283, 285,
	286, 287, 289, 297, 298, 299, 300, 308, 312, 324,
	325, 344, 346, 35, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 481, 0, 0, 0, 172, 478, 0, 0, 0,
	205, 0, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 556, 208, 0, 0, 443, 305,
	231, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 479,
	503, 502, 505, 506, 507, 508, 0, 0, 0, 504,
	509, 538, 539, 0, 0, 0, 476, 494, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 492, 0, 0, 0, 0, 570, 0, 493, 0,
	0, 488, 489, 490, 495, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 546, 0, 0,
	196, 345, 0, 0, 568, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 553, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 545, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 437, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 557,
	569, 563, 565, 564, 561, 562, 560, 559, 558, 571,
	547, 548, 549, 550, 551, 0, 0, 0, 554, 0,
	566, 567, 0, 0, 0, 0, 0, 293, 275, 510,
	511, 512, 513, 514, 518, 519, 523, 524, 532, 531,
	530, 533, 534, 536, 535, 537, 515, 516, 517, 520,
	521, 522, 525, 526, 529, 527, 528, 552, 129, 138,
	207, 77, 273, 179, 338, 0, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 481,
	0, 0, 0, 172, 478, 0, 0, 0, 205, 0,
	0, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 556, 208, 0, 0, 443, 305, 231, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 479, 503, 502,
	505, 506, 507, 508, 0, 0, 0, 504, 509, 538,
	539, 0, 0, 0, 476, 494, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	472, 0, 0, 0, 570, 0, 493, 0, 0, 488,
	489, 490, 495, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 546, 0, 0, 196, 345,
	0, 0, 568, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 553, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 545, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 437, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 0, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 557, 569, 563,
	565, 564, 561, 562, 560, 559, 558, 571, 547, 548,
	549, 550, 551, 0, 0, 0, 554, 0, 566, 567,
	0, 0, 0, 0, 0, 293, 275, 510, 511, 512,
	513, 514, 518, 519, 523, 524, 532, 531, 530, 533,
	534, 536, 535, 537, 515, 516, 517, 520, 521, 522,
	525, 526, 529, 527, 528, 552, 129, 138, 207, 0,
	273, 179, 338, 0, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 172, 478, 0, 0, 0, 205, 0, 0, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	556, 208, 0, 0, 443, 305, 231, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 899, 0, 479, 503, 502, 505, 506,
	507, 508, 0, 0, 0, 504, 509, 538, 539, 0,
	0, 0, 476, 494, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 570, 0, 493, 0, 0, 488, 489, 490,
	495, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 546, 0, 0, 196, 345, 0, 0,
	568, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 553, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 545, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 437, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 557, 569, 563, 565, 564,
	561, 562, 560, 559, 558, 571, 547, 548, 549, 550,
	551, 0, 0, 0, 554, 0, 566, 567, 0, 0,
	0, 0, 0, 293, 275, 510, 511, 512, 513, 514,
	518, 519, 523, 524, 532, 531, 530, 533, 534, 536,
	535, 537, 515, 516, 517, 520, 521, 522, 525, 526,
	529, 527, 528, 552, 129, 138, 207, 0, 273, 179,
	338, 0, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 481, 0, 0, 0, 172,
	478, 0, 0, 0, 205, 0, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 556, 208,
	0, 0, 443, 305, 231, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 479, 503, 502, 505, 506, 507, 508,
	0, 0, 0, 504, 509, 538, 539, 0, 0, 0,
	476, 494, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 492, 1310, 0, 0, 0,
	570, 0, 493, 0, 0, 488, 489, 490, 495, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 546, 0, 0, 196, 345, 0, 0, 568, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 553, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 545, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 437, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 557, 569, 563, 565, 564, 561, 562,
	560, 559, 558, 571, 547, 548, 549, 550, 551, 0,
	0, 0, 554, 0, 566, 567, 0, 0, 0, 0,
	0, 293, 275, 510, 511, 512, 513, 514, 518, 519,
	523, 524, 532, 531, 530, 533, 534, 536, 535, 537,
	515, 516, 517, 520, 521, 522, 525, 526, 529, 527,
	528, 552, 129, 138, 207, 0, 273, 179, 338, 0,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 481, 0, 0, 0, 172, 478, 0,
	0, 0, 205, 0, 0, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 556, 208, 0, 0,
	443, 305, 231, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 479, 503, 1354, 505, 506, 507, 508, 0, 0,
	0, 504, 509, 538, 539, 0, 0, 0, 476, 494,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 1310, 0, 0, 0, 570, 0,
	493, 0, 0, 488, 489, 490, 495, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 546,
	0, 0, 196, 345, 0, 0, 568, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	553, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	545, 0, 258, 280, 209, 323, 0, 332, 333, 0,
	437, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 557, 569, 563, 565, 564, 561, 562, 560, 559,
	558, 571, 547, 548, 549, 550, 551, 0, 0, 0,
	554, 0, 566, 567, 0, 0, 0, 0, 0, 293,
	275, 510, 511, 512, 513, 514, 518, 519, 523, 524,
	532, 531, 530, 533, 534, 536, 535, 537, 515, 516,
	517, 520, 521, 522, 525, 526, 529, 527, 528, 552,
	129, 138, 207, 0, 273, 179, 338, 0, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 481, 0, 0, 0, 172, 478, 0, 0, 0,
	205, 0, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 556, 208, 0, 0, 443, 305,
	231, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 479,
	503, 1351, 505, 506, 507, 508, 0, 0, 0, 504,
	509, 538, 539, 0, 0, 0, 476, 494, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 492, 1310, 0, 0, 0, 570, 0, 493, 0,
	0, 488, 489, 490, 495, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 546, 0, 0,
	196, 345, 0, 0, 568, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 553, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 545, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 437, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 557,
	569, 563, 565, 564, 561, 562, 560, 559, 558, 571,
	547, 548, 549, 550, 551, 0, 0, 0, 554, 0,
	566, 567, 0, 0, 0, 0, 0, 293, 275, 510,
	511, 512, 513, 514, 518, 519, 523, 524, 532, 531,
	530, 533, 534, 536, 535, 537, 515, 516, 517, 520,
	521, 522, 525, 526, 529, 527, 528, 552, 129, 138,
	207, 0, 273, 179, 338, 0, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 481,
	0, 0, 0, 172, 478, 0, 0, 0, 205, 0,
	0, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 556, 208, 0, 0, 443, 305, 231, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 1210, 0, 479, 503, 502,
	505, 506, 507, 508, 0, 0, 0, 504, 509, 538,
	539, 0, 0, 0, 476, 494, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	0, 0, 0, 0, 570, 0, 493, 0, 0, 488,
	489, 490, 495, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 546, 0, 0, 196, 345,
	0, 0, 568, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 553, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 545, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 437, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 0, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 557, 569, 563,
	565, 564, 561, 562, 560, 559, 558, 571, 547, 548,
	549, 550, 551, 0, 0, 0, 554, 0, 566, 567,
	0, 0, 0, 0, 0, 293, 275, 510, 511, 512,
	513, 514, 518, 519, 523, 524, 532, 531, 530, 533,
	534, 536, 535, 537, 515, 516, 517, 520, 521, 522,
	525, 526, 529, 527, 528, 552, 129, 138, 207, 0,
	273, 179, 338, 0, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 172, 478, 0, 0, 0, 205, 0, 0, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	556, 208, 0, 0, 443, 305, 231, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 479, 503, 502, 505, 506,
	507, 508, 0, 0, 0, 504, 509, 538, 539, 0,
	0, 0, 476, 494, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 570, 0, 493, 0, 0, 488, 489, 490,
	495, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 546, 0, 0, 196, 345, 0, 0,
	568, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 553, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 545, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 437, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 557, 569, 563, 565, 564,
	561, 562, 560, 559, 558, 571, 547, 548, 549, 550,
	551, 0, 0, 0, 554, 0, 566, 567, 0, 0,
	0, 0, 0, 293, 275, 510, 511, 512, 513, 514,
	518, 519, 523, 524, 532, 531, 530, 533, 534, 536,
	535, 537, 515, 516, 517, 520, 521, 522, 525, 526,
	529, 527, 528, 552, 129, 138, 207, 0, 273, 179,
	338, 0, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 205, 0, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 556, 208,
	0, 0, 443, 305, 231, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 479, 503, 502, 505, 506, 507, 508,
	0, 0, 0, 504, 509, 538, 539, 0, 0, 0,
	0, 494, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 492, 0, 0, 0, 0,
	570, 0, 493, 0, 0, 488, 489, 490, 495, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 546, 0, 0, 196, 345, 0, 0, 568, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 553, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 545, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 437, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 557, 569, 563, 565, 564, 561, 562,
	560, 559, 558, 571, 547, 548, 549, 550, 551, 1357,
	1358, 1359, 554, 0, 566, 567, 0, 0, 0, 0,
	0, 293, 275, 510, 511, 512, 513, 514, 518, 519,
	523, 524, 532, 531, 530, 533, 534, 536, 535, 537,
	515, 516, 517, 520, 521, 522, 525, 526, 529, 527,
	528, 552, 129, 138, 207, 0, 273, 179, 338, 0,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 205, 0, 0, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 556, 208, 0, 0,
	443, 305, 231, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 479, 503, 502, 505, 506, 507, 508, 0, 0,
	0, 504, 509, 538, 539, 0, 0, 0, 0, 494,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 0, 0, 0, 0, 570, 0,
	493, 0, 0, 488, 489, 490, 495, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 546,
	0, 0, 196, 345, 0, 0, 568, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	553, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	545, 2632, 258, 280, 209, 323, 0, 332, 333, 0,
	437, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 557, 569, 563, 565, 564, 561, 562, 560, 559,
	558, 571, 547, 548, 549, 550, 551, 0, 0, 0,
	554, 0, 566, 567, 0, 0, 0, 0, 0, 293,
	275, 510, 511, 512, 513, 514, 518, 519, 523, 524,
	532, 531, 530, 533, 534, 536, 535, 537, 515, 516,
	517, 520, 521, 522, 525, 526, 529, 527, 528, 552,
	129, 138, 207, 0, 273, 179, 338, 0, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	205, 0, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 556, 208, 0, 0, 443, 305,
	231, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 899, 0, 479,
	503, 502, 505, 506, 507, 508, 0, 0, 0, 504,
	509, 538, 539, 0, 0, 0, 0, 494, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 492, 0, 0, 0, 0, 570, 0, 493, 0,
	0, 488, 489, 490, 495, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 546, 0, 0,
	196, 345, 0, 0, 568, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 553, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 545, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 437, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 557,
	569, 563, 565, 564, 561, 562, 560, 559, 558, 571,
	547, 548, 549, 550, 551, 0, 0, 0, 554, 0,
	566, 567, 0, 0, 0, 0, 0, 293, 275, 510,
	511, 512, 513, 514, 518, 519, 523, 524, 532, 531,
	530, 533, 534, 536, 535, 537, 515, 516, 517, 520,
	521, 522, 525, 526, 529, 527, 528, 552, 129, 138,
	207, 0, 273, 179, 338, 0, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 205, 0,
	0, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 556, 208, 0, 0, 443, 305, 231, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 479, 503, 502,
	505, 506, 507, 508, 0, 0, 0, 504, 509, 538,
	539, 0, 0, 0, 0, 494, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	0, 0, 0, 0, 570, 0, 493, 0, 0, 488,
	489, 490, 495, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 546, 0, 0, 196, 345,
	0, 0, 568, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 553, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 545, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 437, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 0, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 557, 569, 563,
	565, 564, 561, 562, 560, 559, 558, 571, 547, 548,
	549, 550, 551, 0, 0, 0, 554, 0, 566, 567,
	0, 0, 0, 0, 0, 293, 275, 510, 511, 512,
	513, 514, 518, 519, 523, 524, 532, 531, 530, 533,
	534, 536, 535, 537, 515, 516, 517, 520, 521, 522,
	525, 526, 529, 527, 528, 552, 129, 138, 207, 0,
	273, 179, 338, 0, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	410, 316, 408, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 205, 0, 0,
	162, 213, 211, 0, 0, 0, 254, 315, 0, 0,
	0, 0, 208, 0, 0, 443, 305, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 184, 232, 142, 0, 0, 0, 196, 345, 0,
	0, 0, 268, 0, 310, 186, 206, 146, 126, 140,
	156, 185, 243, 409, 288, 0, 0, 0, 0, 0,
	163, 0, 281, 251, 334, 0, 0, 258, 280, 209,
	323, 0, 332, 333, 0, 437, 342, 347, 0, 0,
	0, 302, 173, 0, 132, 0, 265, 168, 201, 0,
	0, 0, 160, 0, 0, 0, 301, 321, 148, 317,
	230, 236, 157, 159, 158, 141, 296, 320, 152, 161,
	306, 284, 311, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 291, 290, 0, 192, 0,
	0, 0, 274, 0, 197, 131, 313, 350, 147, 203,
	318, 0, 180, 242, 165, 252, 253, 177, 128, 270,
	224, 225, 223, 226, 0, 0, 335, 0, 450, 133,
	314, 331, 153, 292, 294, 348, 279, 135, 329, 309,
	228, 198, 199, 134, 0, 277, 171, 183, 166, 246,
	0, 182, 267, 326, 327, 164, 351, 143, 341, 137,
	144, 340, 239, 0, 238, 343, 322, 330, 229, 217,
	0, 136, 328, 227, 216, 204, 176, 188, 263, 212,
	264, 189, 234, 233, 235, 214, 218, 0, 0, 0,
	307, 337, 352, 150, 0, 295, 319, 0, 0, 151,
	181, 175, 262, 237, 145, 191, 304, 202, 210, 276,
	349, 250, 282, 154, 336, 303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 275, 417, 418, 419, 420,
	421, 425, 426, 430, 431, 440, 439, 438, 441, 442,
	445, 444, 446, 422, 423, 424, 427, 428, 429, 432,
	433, 436, 434, 435, 0, 129, 138, 207, 0, 273,
	179, 338, 0, 170, 0, 0, 0, 0, 0, 127,
	139, 149, 155, 169, 174, 178, 0, 187, 190, 193,
	194, 195, 200, 215, 219, 220, 221, 222, 240, 241,
	244, 245, 248, 249, 255, 256, 257, 259, 260, 261,
	266, 269, 271, 278, 283, 285, 286, 287, 289, 297,
	298, 299, 300, 308, 312, 324, 325, 344, 346, 410,
	316, 408, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 205, 0, 0, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 443, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 409, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 437, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 405, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 275, 417, 418, 419, 420, 421,
	425, 426, 430, 431, 440, 439, 438, 441, 442, 445,
	444, 446, 422, 423, 424, 427, 428, 429, 432, 433,
	436, 434, 435, 0, 129, 138, 207, 0, 273, 179,
	338, 0, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 1400, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 205, 0, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 0, 208,
	0, 0, 443, 305, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1402, 1404, 0, 0, 0,
	0, 0, 0, 124, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 0, 0, 0, 196, 345, 0, 1403, 0, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 0, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 0, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 437, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 275, 417, 418, 419, 420, 421, 425, 426,
	430, 431, 440, 439, 438, 441, 442, 445, 444, 446,
	422, 423, 424, 427, 428, 429, 432, 433, 436, 434,
	435, 0, 129, 138, 207, 0, 273, 179, 338, 0,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 1400, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 205, 0, 0, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 0, 208, 0, 0,
	443, 305, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 1404, 0, 0, 0, 0, 0,
	0, 124, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 0,
	0, 0, 196, 345, 0, 1403, 0, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	0, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	0, 0, 1398, 280, 209, 323, 0, 332, 333, 0,
	437, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	275, 417, 418, 419, 420, 421, 425, 426, 430, 431,
	440, 439, 438, 441, 442, 445, 444, 446, 422, 423,
	424, 427, 428, 429, 432, 433, 436, 434, 435, 0,
	129, 138, 207, 0, 273, 179, 338, 0, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	921, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	205, 0, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 0, 208, 0, 0, 443, 305,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 922,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 919, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 0, 0, 0,
	196, 345, 0, 0, 0, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 0, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 0, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 437, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 275, 417,
	418, 419, 420, 421, 425, 426, 430, 431, 440, 439,
	438, 441, 442, 445, 444, 446, 422, 423, 424, 427,
	428, 429, 432, 433, 436, 434, 435, 0, 129, 138,
	207, 0, 273, 179, 338, 0, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 2553, 0, 0, 0,
	0, 0, 0, 172, 2551, 0, 0, 0, 205, 0,
	0, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 0, 208, 0, 0, 443, 305, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 0, 0, 0, 196, 345,
	0, 0, 0, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 0, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 0, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 437, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 2552, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 275, 417, 418, 419,
	420, 421, 425, 426, 430, 431, 440, 439, 438, 441,
	442, 445, 444, 446, 422, 423, 424, 427, 428, 429,
	432, 433, 436, 434, 435, 0, 129, 138, 207, 0,
	273, 179, 338, 0, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 205, 1692, 0, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 443, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 437, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 275, 417, 418, 419, 420, 421,
	425, 426, 430, 431, 440, 439, 438, 441, 442, 445,
	444, 446, 422, 423, 424, 427, 428, 429, 432, 433,
	436, 434, 435, 0, 129, 138, 207, 0, 273, 179,
	338, 0, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 205, 0, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 0, 208,
	0, 0, 443, 305, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 0, 0, 0, 196, 345, 0, 0, 0, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 0, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 0, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 437, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 0, 0, 0, 1197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 275, 417, 418, 419, 420, 421, 425, 426,
	430, 431, 440, 439, 438, 441, 442, 445, 444, 446,
	422, 423, 424, 427, 428, 429, 432, 433, 436, 434,
	435, 0, 129, 138, 207, 0, 273, 179, 338, 0,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 205, 0, 0, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 0, 208, 0, 0,
	443, 305, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 0,
	0, 0, 196, 345, 0, 0, 0, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	0, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	0, 0, 258, 280, 209, 323, 0, 332, 333, 0,
	437, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	275, 417, 418, 419, 420, 421, 425, 426, 430, 431,
	440, 439, 438, 441, 442, 445, 444, 446, 422, 423,
	424, 427, 428, 429, 432, 433, 436, 434, 435, 0,
	129, 138, 207, 0, 273, 179, 338, 0, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	205, 0, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 0, 208, 0, 0, 443, 305,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 0, 0, 0,
	196, 345, 0, 0, 0, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 0, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 0, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 437, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 275, 417,
	418, 419, 420, 421, 425, 426, 430, 431, 440, 439,
	438, 441, 442, 445, 444, 446, 422, 423, 424, 427,
	428, 429, 432, 433, 436, 434, 435, 0, 129, 138,
	207, 0, 273, 179, 338, 0, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 205, 0,
	0, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 0, 208, 0, 0, 443, 305, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 0, 925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 0, 0, 0, 196, 345,
	0, 0, 0, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 0, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 0, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 437, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 0, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 275, 417, 418, 419,
	420, 421, 425, 426, 430, 431, 440, 439, 438, 441,
	442, 445, 444, 446, 422, 423, 424, 427, 428, 429,
	432, 433, 436, 434, 435, 0, 129, 138, 207, 0,
	273, 179, 338, 0, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 205, 0, 0, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 443, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 437, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 275, 417, 418, 419, 420, 421,
	425, 426, 430, 431, 440, 439, 438, 441, 442, 445,
	444, 446, 422, 423, 424, 427, 428, 429, 432, 433,
	436, 434, 435, 0, 129, 138, 207, 0, 273, 179,
	338, 0, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 205, 0, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 0, 208,
	0, 0, 0, 305, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	935, 934, 944, 945, 937, 938, 939, 940, 941, 942,
	943, 936, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 0, 0, 0, 196, 345, 0, 0, 0, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 0, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 0, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 0, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 35, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	205, 293, 275, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 1395, 208, 0, 0, 0, 305,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 207, 79, 273, 179, 338, 124,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 0, 0, 0,
	196, 345, 0, 0, 0, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 0, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 0, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 0, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 1071, 0, 0, 0, 205, 293, 275, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 0, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	207, 77, 273, 179, 338, 611, 170, 1070, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 0, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 205, 293, 275, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 0, 208, 0, 0,
	0, 305, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 207, 79, 273, 179,
	338, 124, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 0,
	0, 0, 196, 345, 0, 0, 0, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	0, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	0, 0, 258, 280, 209, 323, 0, 332, 333, 0,
	0, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 207, 0, 273, 179, 338, 0, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	205, 0, 0, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 0, 208, 0, 0, 0, 305,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 0, 0, 0,
	196, 345, 0, 0, 0, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 0, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 0, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 0, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 205, 293, 275, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 0, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	207, 79, 273, 179, 338, 611, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 0, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 207, 0, 273, 179,
	338, 0, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 205, 0, 0, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 0, 208,
	0, 0, 0, 305, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 0, 0, 0, 196, 345, 0, 0, 0, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 0, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 0, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 0, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 1040, 172, 0, 0, 0, 0,
	205, 293, 275, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 0, 208, 0, 0, 0, 305,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 207, 0, 273, 179, 338, 124,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 0, 0, 0,
	196, 345, 0, 0, 0, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 0, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 0, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 0, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 0,
	316, 0, 0, 0, 574, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 205, 293, 275, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 0, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	207, 0, 273, 179, 338, 124, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 0, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 144,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 214, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 237, 145, 191, 304, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 205, 293, 275, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 0, 208, 0, 0,
	0, 305, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 207, 0, 273, 179,
	338, 124, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 260, 261, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 0,
	121, 0, 196, 345, 0, 0, 0, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	0, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	0, 0, 258, 280, 209, 323, 0, 332, 333, 0,
	0, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 331, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 205, 293,
	275, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 0, 208, 0, 0, 0, 305, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 207, 0, 273, 179, 338, 611, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 0, 0, 0, 196, 345,
	0, 0, 0, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 0, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 0, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 0, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 0, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 331, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 144, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 214, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 237, 145, 191, 304, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 0, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 205, 293, 275, 162, 213, 211,
	0, 0, 0, 254, 315, 0, 0, 0, 0, 208,
	0, 0, 0, 305, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 207, 0,
	273, 179, 338, 124, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 260,
	261, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	0, 0, 0, 130, 0, 0, 0, 0, 184, 232,
	142, 0, 0, 0, 196, 345, 0, 0, 0, 268,
	0, 310, 186, 206, 146, 126, 140, 156, 185, 243,
	0, 288, 0, 0, 0, 0, 0, 163, 0, 281,
	251, 334, 0, 0, 258, 280, 209, 323, 0, 332,
	333, 0, 0, 342, 347, 0, 0, 0, 302, 173,
	0, 132, 0, 265, 168, 201, 0, 0, 0, 160,
	0, 0, 0, 301, 321, 148, 317, 230, 236, 157,
	159, 158, 141, 296, 320, 152, 161, 306, 284, 311,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 291, 290, 0, 192, 0, 0, 0, 274,
	0, 197, 131, 313, 350, 147, 203, 318, 0, 180,
	242, 165, 252, 253, 177, 128, 270, 224, 225, 223,
	226, 0, 0, 335, 0, 272, 133, 314, 331, 153,
	292, 294, 348, 279, 135, 329, 309, 228, 198, 199,
	134, 0, 277, 171, 183, 166, 246, 0, 182, 267,
	326, 327, 164, 351, 143, 341, 137, 144, 340, 239,
	0, 238, 343, 322, 330, 229, 217, 0, 136, 328,
	227, 216, 204, 176, 188, 263, 212, 264, 189, 234,
	233, 235, 214, 218, 0, 0, 0, 307, 337, 352,
	150, 0, 295, 319, 0, 0, 151, 181, 175, 262,
	237, 145, 191, 304, 202, 210, 276, 349, 250, 282,
	154, 336, 303, 0, 316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	205, 293, 275, 162, 213, 211, 0, 0, 0, 254,
	315, 0, 0, 0, 0, 208, 0, 0, 0, 305,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 207, 0, 273, 179, 338, 479,
	170, 0, 0, 0, 0, 0, 127, 139, 149, 155,
	169, 174, 178, 0, 187, 190, 193, 194, 195, 200,
	215, 219, 220, 221, 222, 240, 241, 244, 245, 248,
	249, 255, 256, 257, 259, 260, 261, 266, 269, 271,
	278, 283, 285, 286, 287, 289, 297, 298, 299, 300,
	308, 312, 324, 325, 344, 346, 0, 0, 0, 130,
	0, 0, 0, 0, 184, 232, 142, 0, 0, 0,
	196, 345, 0, 0, 0, 268, 0, 310, 186, 206,
	146, 126, 140, 156, 185, 243, 0, 288, 0, 0,
	0, 0, 0, 163, 0, 281, 251, 334, 0, 0,
	258, 280, 209, 323, 0, 332, 333, 0, 0, 342,
	347, 0, 0, 0, 302, 173, 0, 132, 0, 265,
	168, 201, 0, 0, 0, 160, 0, 0, 0, 301,
	321, 148, 317, 230, 236, 157, 159, 158, 141, 296,
	320, 152, 161, 306, 284, 311, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 291, 290,
	0, 192, 0, 0, 0, 274, 0, 197, 131, 313,
	350, 147, 203, 318, 0, 180, 242, 165, 252, 253,
	177, 128, 270, 224, 225, 223, 226, 0, 0, 335,
	0, 272, 133, 314, 331, 153, 292, 294, 348, 279,
	135, 329, 309, 228, 198, 199, 134, 0, 277, 171,
	183, 166, 246, 0, 182, 267, 326, 327, 164, 351,
	143, 341, 137, 144, 340, 239, 0, 238, 343, 322,
	330, 229, 217, 0, 136, 328, 227, 216, 204, 176,
	188, 263, 212, 264, 189, 234, 233, 235, 214, 218,
	0, 0, 0, 307, 337, 352, 150, 0, 295, 319,
	0, 0, 151, 181, 175, 262, 237, 145, 191, 304,
	202, 210, 276, 349, 250, 282, 154, 336, 303, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 205, 293, 275, 162,
	213, 211, 0, 0, 0, 254, 315, 0, 0, 0,
	0, 208, 0, 0, 0, 305, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	207, 0, 273, 179, 338, 479, 170, 0, 0, 0,
	0, 0, 127, 139, 149, 155, 169, 174, 178, 0,
	187, 190, 193, 194, 195, 200, 215, 219, 220, 221,
	222, 240, 241, 244, 245, 248, 249, 255, 256, 257,
	259, 260, 261, 266, 269, 271, 278, 283, 285, 286,
	287, 289, 297, 298, 299, 300, 308, 312, 324, 325,
	344, 346, 0, 0, 0, 130, 0, 0, 0, 0,
	184, 232, 142, 0, 0, 0, 196, 345, 0, 0,
	0, 268, 0, 310, 186, 206, 146, 126, 140, 156,
	185, 243, 0, 288, 0, 0, 0, 0, 0, 163,
	0, 281, 251, 334, 0, 0, 258, 280, 209, 323,
	0, 332, 333, 0, 0, 342, 347, 0, 0, 0,
	302, 173, 0, 132, 0, 265, 168, 201, 0, 0,
	0, 160, 0, 0, 0, 301, 321, 148, 317, 230,
	236, 157, 159, 158, 141, 296, 320, 152, 161, 306,
	284, 311, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 291, 290, 0, 192, 0, 0,
	0, 274, 0, 197, 131, 313, 350, 147, 203, 318,
	0, 180, 242, 165, 252, 253, 177, 128, 270, 224,
	225, 223, 226, 0, 0, 335, 0, 272, 133, 314,
	331, 153, 292, 294, 348, 279, 135, 329, 309, 228,
	198, 199, 134, 0, 277, 171, 183, 166, 246, 0,
	182, 267, 326, 327, 164, 351, 143, 341, 137, 594,
	340, 239, 0, 238, 343, 322, 330, 229, 217, 0,
	136, 328, 227, 216, 204, 176, 188, 263, 212, 264,
	189, 234, 233, 235, 590, 218, 0, 0, 0, 307,
	337, 352, 150, 0, 295, 319, 0, 0, 151, 181,
	175, 262, 595, 593, 584, 585, 202, 210, 276, 349,
	250, 282, 154, 336, 303, 0, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 205, 293, 275, 162, 213, 211, 0, 0,
	0, 254, 315, 0, 0, 0, 0, 208, 0, 0,
	0, 305, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 207, 0, 273, 179,
	338, 479, 170, 0, 0, 0, 0, 0, 127, 139,
	149, 155, 169, 174, 178, 0, 187, 190, 193, 194,
	195, 200, 215, 219, 220, 221, 222, 240, 241, 244,
	245, 248, 249, 255, 256, 257, 259, 591, 592, 266,
	269, 271, 278, 283, 285, 286, 287, 289, 297, 298,
	299, 300, 308, 312, 324, 325, 344, 346, 0, 0,
	0, 130, 0, 0, 0, 0, 184, 232, 142, 0,
	0, 0, 196, 345, 0, 0, 0, 268, 0, 310,
	186, 206, 146, 126, 140, 156, 185, 243, 0, 288,
	0, 0, 0, 0, 0, 163, 0, 281, 251, 334,
	0, 0, 258, 280, 209, 323, 0, 332, 333, 0,
	0, 342, 347, 0, 0, 0, 302, 173, 0, 132,
	0, 265, 168, 201, 0, 0, 0, 160, 0, 0,
	0, 301, 321, 148, 317, 230, 236, 157, 159, 158,
	141, 296, 320, 152, 161, 306, 284, 311, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	291, 290, 0, 192, 0, 0, 0, 274, 0, 197,
	131, 313, 350, 147, 203, 318, 0, 180, 242, 165,
	252, 253, 177, 128, 270, 224, 225, 223, 226, 0,
	0, 335, 0, 272, 133, 314, 1065, 153, 292, 294,
	348, 279, 135, 329, 309, 228, 198, 199, 134, 0,
	277, 171, 183, 166, 246, 0, 182, 267, 326, 327,
	164, 351, 143, 341, 137, 144, 340, 239, 0, 238,
	343, 322, 330, 229, 217, 0, 136, 328, 227, 216,
	204, 176, 188, 263, 212, 264, 189, 234, 233, 235,
	214, 218, 0, 0, 0, 307, 337, 352, 150, 0,
	295, 319, 0, 0, 151, 181, 175, 262, 237, 145,
	191, 304, 202, 210, 276, 349, 250, 282, 154, 336,
	303, 0, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 205, 293,
	275, 162, 213, 211, 0, 0, 0, 254, 315, 0,
	0, 0, 0, 208, 0, 0, 0, 305, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 207, 0, 273, 179, 338, 479, 170, 0,
	0, 0, 0, 0, 127, 139, 149, 155, 169, 174,
	178, 0, 187, 190, 193, 194, 195, 200, 215, 219,
	220, 221, 222, 240, 241, 244, 245, 248, 249, 255,
	256, 257, 259, 260, 261, 266, 269, 271, 278, 283,
	285, 286, 287, 289, 297, 298, 299, 300, 308, 312,
	324, 325, 344, 346, 0, 0, 0, 130, 0, 0,
	0, 0, 184, 232, 142, 0, 0, 0, 196, 345,
	0, 0, 0, 268, 0, 310, 186, 206, 146, 126,
	140, 156, 185, 243, 0, 288, 0, 0, 0, 0,
	0, 163, 0, 281, 251, 334, 0, 0, 258, 280,
	209, 323, 0, 332, 333, 0, 0, 342, 347, 0,
	0, 0, 302, 173, 0, 132, 0, 265, 168, 201,
	0, 0, 0, 160, 0, 0, 0, 301, 321, 148,
	317, 230, 236, 157, 159, 158, 141, 296, 320, 152,
	161, 306, 284, 311, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 291, 290, 0, 192,
	0, 0, 0, 274, 0, 197, 131, 313, 350, 147,
	203, 318, 0, 180, 242, 165, 252, 253, 177, 128,
	270, 224, 225, 223, 226, 0, 0, 335, 0, 272,
	133, 314, 581, 153, 292, 294, 348, 279, 135, 329,
	309, 228, 198, 199, 134, 0, 277, 171, 183, 166,
	246, 0, 182, 267, 326, 327, 164, 351, 143, 341,
	137, 594, 340, 239, 0, 238, 343, 322, 330, 229,
	217, 0, 136, 328, 227, 216, 204, 176, 188, 263,
	212, 264, 189, 234, 233, 235, 590, 218, 0, 0,
	0, 307, 337, 352, 150, 0, 295, 319, 0, 0,
	151, 181, 175, 262, 595, 593, 584, 585, 202, 210,
	276, 349, 250, 282, 154, 336, 303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 207, 0,
	273, 179, 338, 0, 170, 0, 0, 0, 0, 0,
	127, 139, 149, 155, 169, 174, 178, 0, 187, 190,
	193, 194, 195, 200, 215, 219, 220, 221, 222, 240,
	241, 244, 245, 248, 249, 255, 256, 257, 259, 591,
	592, 266, 269, 271, 278, 283, 285, 286, 287, 289,
	297, 298, 299, 300, 308, 312, 324, 325, 344, 346,
	35, 0, 70, 38, 39, 0, 0, 0, 35, 0,
	70, 38, 39, 0, 58, 0, 0, 0, 0, 0,
	76, 0, 58, 0, 40, 0, 0, 0, 76, 0,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 2609, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2393, 0, 0, 0,
	0, 0, 0, 0, 2393, 0, 0, 0, 0, 2547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 72, 45, 44, 47,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 2394, 0, 0, 0, 0, 0, 0, 0, 2394,
	0, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 48, 75, 74, 0, 0,
	0, 35, 46, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 57, 0, 2395, 0, 0, 0, 0, 56, 57,
	0, 2395, 0, 0, 0, 0, 0, 65, 0, 66,
	0, 0, 0, 79, 0, 65, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2393, 0, 2396,
	73, 0, 52, 53, 60, 0, 61, 2396, 73, 0,
	52, 53, 60, 0, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 72, 45, 44,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 57, 0, 2395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2396, 73, 0, 52, 53, 60, 0, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
}
var yyPact = [...]int{

	4527, -1000, -301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1758, -1000, -1000, -1000, -1000, -1000,
	-1000, 998, 596, -1000, 255, 233, 26949, 618, 3222, 27641,
	-1000, -1000, -1000, 192, 503, 27641, 387, 603, 1169, 1629,
	1166, 66, -33, -63, 141, 18443, 17974, -1000, 1816, 1794,
	-1000, -1000, 555, 72, -1000, -1000, -1000, 22187, 179, -1000,
	-1000, 1739, 1755, 1571, -1000, 12825, 555, 555, 26603, 29025,
	-1000, 1815, 27641, 11419, -1000, 612, 27641, -128, 545, 545,
	309, 545, 545, 616, -1000, 753, -1000, -1000, -1000, -1000,
	27641, 21719, 549, 27295, 549, 549, 549, 549, 549, 549,
	549, 27641, -1000, 666, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27641, 1164, 1663, 863, 148, -1000, -1000,
	-1000, 827, -1000, 304, 302, 295, 297, 87, 866, 1744,
	-1000, 1450, 1739, 1739, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 326, 589, 217, 179, 746, -1000, 1657, 1652, 1056,
	1649, 657, 1648, 1489, -5, -1000, 1159, 27641, -1000, -1000,
	1012, 1008, 1523, 1395, 630, 1521, -1000, -1000, 1488, 1488,
	1488, 1488, 1180, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 349, 1391, 1423,
	1519, -1000, 1509, 1737, 615, -1000, -93, 1441, -1000, 1494,
	-1000, -1000, -1000, 1179, 1690, 947, 15633, 1610, -1000, -1000,
	852, 1793, -1000, 19847, 665, -1000, 15633, 2759, 1450, -1000,
	-1000, 1450, -1000, -1000, -1000, 631, -1000, -1000, 17505, 17505,
	17505, 17505, 17505, 17505, 17505, 17505, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450,
	1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450,
	1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, -1000, -1000,
	1450, -1000, 12357, 1450, 1450, 1450, 1450, 1450, 1450, 1450,
	1450, 1450, 1450, 1450, 1450, 15633, 1450, 1450, 1450, 1450,
	1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450, 1450,
	1450, 1450, 26257, 24629, 27641, 1387, 1382, -1000, -1000, 664,
	1440, -97, 28679, -1000, -1000, -1000, -1000, 27987, 24283, 741,
	-1000, -1000, -1000, -1000, 1642, -1000, -1000, 663, -1000, 1758,
	-1000, -1000, 1356, 352, -1000, 4207, 3773, -1000, -1000, -1000,
	1486, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27295, 1722, 593,
	1158, 806, 1157, 1149, 1147, 21719, 21719, 545, 1146, 1436,
	583, 1435, 579, 867, 27641, 1700, 1518, 27641, 1144, 1143,
	1140, 1138, 21719, 21719, -1000, 10948, -1000, -1000, 863, -1000,
	1083, 15633, 545, 545, 27641, 27641, 27641, 27641, -1000, -1000,
	863, 863, -1000, 863, 798, 1792, 798, -1000, 798, -1000,
	-1000, 15633, -1000, 17505, 21251, 699, -1000, -1000, -1000, 1136,
	319, -1000, -1000, -1000, -1000, -1000, -1000, 1135, 657, 657,
	-1000, 1082, 657, 1422, -1000, 739, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 657, -1000,
	15165, -299, -1000, -1000, 1434, -1000, 270, -1000, -1000, 459,
	459, 676, 21719, 21719, 21719, -1000, 27295, -1000, -1000, -1000,
	21719, 459, 146, 1432, 459, 21719, 21719, 1571, -1000, -1000,
	179, -1000, -1000, 27641, -89, 22187, 1450, 9535, -1000, -1000,
	-1000, 1808, 707, 1371, -1000, -1000, 1431, -1000, 857, 660,
	1054, 1584, -1000, -1000, -1000, 27641, -1000, 15633, 15633, 1014,
	-1000, 22655, -1000, -1000, -1000, -1000, 9064, 712, 17505, 882,
	820, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505, 17505,
	17505, 17505, 17505, 17505, 17505, 17505, 1003, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1134, -1000, 179, 1225, 1225,
	685, 685, 685, 685, 685, 685, 685, 23591, 1714, 13761,
	13761, 13761, 1714, 1179, 1179, 13761, 13761, 13761, 13761, 13761,
	13761, 1714, 1714, 13761, 1179, 1179, 1179, 1179, 13761, 13761,
	13761, 13761, 1714, 13761, 13761, 13761, 1714, 1179, 1354, 986,
	12357, 13761, 13761, 13761, 1179, 15633, 15633, 14697, 14229, 16101,
	13761, 13761, 1714, 764, 986, 27987, -1000, -1000, 17037, -1000,
	-1000, -1000, -1000, -1000, 1179, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27295, 27295, 13761, 13761, 13761, 13761, 327,
	27641, -1000, 1400, 1417, -1000, -1000, -1000, 1721, 23937, 19379,
	-1000, 327, 1366, 24629, 27641, -1000, -1000, 24629, 27641, 8593,
	28333, 1399, -1000, -84, -105, -97, -1000, -1000, 679, -1000,
	-1000, -1000, 11888, -1000, 10006, 1739, 1571, 6238, 10477, -1000,
	3773, 1486, -1000, -17, -1000, -1000, -1000, 1464, -1000, 1464,
	281, 35, 1464, 1464, 1464, 1464, 1464, 21, 21, 21,
	21, 39, -1000, -1000, -1000, -1000, -1000, 1485, 1484, -1000,
	1464, 1464, 1464, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1476, 300, 1467, 1467, 1467, 1467, 1467, 353, 353,
	-1000, 15633, 1496, -1000, 27641, -1000, 1695, -1000, 290, 1478,
	1379, -1000, 153, 1208, 27641, -1000, 27641, 27641, 21719, 21719,
	21719, 552, -1000, 27641, 1430, -1000, -1000, -1000, -1000, -1000,
	1381, -1000, 1208, -1000, -1000, -1000, -1000, -1000, 986, 1133,
	1131, -1000, -1000, -1000, 805, -1000, -1000, -1000, 863, 27641,
	27641, 27641, 1715, 863, 986, 900, 1497, 1450, 1179, -1000,
	-1000, 1130, -1000, 1422, 1422, -1000, 1422, 657, 1225, 1422,
	-1000, 1352, 1693, 1081, 27641, -1000, 22187, -7, -1000, -109,
	25911, -1000, -1000, -1000, 25911, -1000, 167, -1000, 566, 1343,
	-1000, -1000, 25911, 113, 145, 25911, 1381, 1791, 1714, 1179,
	296, -1000, -1000, -1000, -1000, 188, 1305, 655, -1000, 1578,
	947, 947, 15633, -1000, -1000, -1000, 10006, 1735, -1000, 1590,
	1589, 1554, -1000, -1000, 712, 855, -1000, -1000, 1027, -1000,
	-1000, -1000, -1000, 651, 1450, -1000, 3804, -1000, -1000, -1000,
	-1000, 882, 17505, 17505, 17505, 900, 3804, 3571, 2681, 1059,
	685, 730, 730, 687, 687, 687, 687, 687, 864, 864,
	-1000, -1000, -1000, 1179, -1000, -1000, -1000, 13761, 1335, -1000,
	-1000, 986, 650, 1335, 1335, 13761, -155, -155, 1179, 1335,
	1335, 1335, 1179, 1335, 13761, 13761, 1335, -155, -155, -155,
	-155, 1335, 1335, 1335, 1335, 13761, 1335, 1335, 1335, 13761,
	-1000, 15633, -1000, 1179, 1335, 1335, 1335, -1000, 887, 973,
	774, 1790, 1335, 770, 1789, 1335, 1244, 17505, 17505, 17505,
	1335, 1335, 13761, 803, -1000, 15633, 1179, -1000, 2023, 1413,
	1412, 1335, 1179, 1402, 1335, 1335, 183, 1450, -1000, 10006,
	24629, 24629, 24629, 24629, 24629, -1000, 1563, 1561, -1000, 1536,
	1534, 1557, 22187, 1341, 1179, 282, 23937, -1000, 1450, -1000,
	20783, 626, 610, 608, 601, 1769, 24629, 1337, -1000, 1337,
	-1000, 648, -1000, -1000, 27987, -97, -86, -1000, -1000, 1399,
	-1000, 1049, -1000, -1000, 986, -1000, 646, 1690, 1714, 1398,
	5767, -1000, -1000, -1000, -1000, 352, -1000, -1000, -1000, 1477,
	935, -1000, 1604, 694, 690, 1093, 1601, -1000, -1000, 642,
	-27, -1000, -1000, 1005, 21, 21, 1464, 1464, 275, 1464,
	-1000, 21, -1000, -1000, -1000, 679, 1641, 679, 679, 679,
	679, 21, 1079, 1079, -1000, -1000, -1000, -1000, 993, -1000,
	1476, -1000, 990, -1000, -1000, -1000, -1000, -1000, -1000, 854,
	1517, 27295, 179, 1711, -1000, 1788, -1000, -1000, 526, 78,
	21719, 151, 361, 181, -1000, 564, -1000, 561, -1000, -1000,
	-1000, -1000, -1000, -1000, 27641, 21719, -1000, -1000, 1769, 1129,
	1128, -1000, -1000, -1000, 798, 863, 1634, -1000, -1000, 17505,
	21719, -1000, 291, -1000, -1000, -1000, -1000, 327, 604, -1000,
	-1000, -78, -1000, -1000, 559, 645, 641, 558, -1000, 88,
	21719, -1000, 27295, 1783, 1782, 112, 1778, 21719, 1584, -1000,
	1396, -1000, 737, 732, 710, 355, 355, -1000, 720, 355,
	325, 1710, 9535, 9535, 1574, -1000, -1000, -1000, 27641, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8122, 13761,
	-1000, 900, 3804, 3501, -1000, 17505, -1000, 1335, 13761, -155,
	7651, -155, -155, 1335, -1000, 25443, -1000, -155, -155, -155,
	-155, -155, -155, 1335, 1335, -155, -1000, -1000, -1000, -1000,
	-155, -155, -155, -155, 1335, -155, -155, -155, 1179, 986,
	-1000, -1000, -1000, -1000, 460, 1003, 460, 17505, 17505, -1000,
	17505, 17505, -1000, -1000, 17505, 3651, 3486, 3392, -199, -1000,
	1416, 733, -1000, 15633, 959, -1000, -1000, 17505, 17505, -1000,
	-1000, -1000, -1000, 1514, 10006, 1450, 6709, -1000, 27295, 1374,
	-1000, 728, 721, 1417, 1475, 1513, 1207, -1000, -1000, -1000,
	-1000, 1556, -1000, 1535, -1000, -1000, 1458, -1000, -1000, 1394,
	1450, 27295, 17505, 626, -1000, 1450, 1450, 1450, 1758, 15633,
	1337, -1000, -1000, 698, -1000, -1000, -95, -110, -1000, -1000,
	-1000, 9535, -1000, 6238, -1000, 6238, -1000, 23123, 540, 1607,
	519, -1000, 1093, -1000, -1000, 1093, -1000, -1000, -1000, 1472,
	-1000, 847, -1000, -1000, -1000, -1000, -1000, 17505, 1807, -1000,
	1603, -1000, 1602, 1078, -1000, -1000, 1298, 679, 679, 21,
	-1000, -1000, 1464, -1000, 679, -1000, 734, -1000, -1000, -1000,
	-1000, 679, 1333, -1000, 1331, 1390, -1000, 1326, 109, 27641,
	-1000, -1000, -1000, 1510, -1000, -1000, -1000, 1223, 1383, -1000,
	4207, 1125, 1119, 1117, -204, 202, -1000, 21719, 125, 153,
	381, 1116, 27641, 21719, -1000, -1000, -1000, -1000, -1000, 863,
	-1000, 17505, 3804, 1208, -1000, -1000, 21, 27641, -1000, 21719,
	653, 25097, 21719, 96, 126, -1000, 21719, 21719, 1772, 21719,
	1381, 1554, 296, 3341, 1093, 654, -1000, -1000, 359, -1000,
	260, 1601, 1115, 4815, 4757, 27295, 1600, 1599, 1114, 27641,
	27295, -1000, -1000, 4621, 1113, 15633, -1000, 27295, 27295, 1450,
	639, -1000, -1000, -1000, 1368, 12825, -1000, -1000, 1179, -1000,
	17505, 3804, -155, -1000, -1000, -1000, -1000, 638, -1000, -1000,
	-155, -1000, 591, -1000, -1000, -1000, -1000, -1000, -1000, -155,
	-155, -1000, -1000, -1000, -1000, -1000, -155, -1000, -1000, -1000,
	-1000, 1179, 1464, 1464, -1000, 1464, 1467, -1000, 1464, 56,
	1464, 52, 1179, 1179, 3112, 3071, 2818, 2711, 2023, 17505,
	17505, 17505, 1450, -151, -1000, 986, 15633, 2602, 2303, -1000,
	1686, 1247, 1376, -1000, -1000, 13293, 1179, 1588, 1305, -1000,
	22187, 1278, -1000, 1758, 10006, 15633, 15633, -1000, -1000, 15633,
	1465, -1000, 15633, -1000, -1000, -1000, -1000, 27295, 280, -1000,
	15633, 1278, 2664, -1000, 27295, 27295, 27295, 1739, 986, -1000,
	-1000, -1000, -1000, 5767, -1000, 1242, -1000, 1464, 1464, 1598,
	-1000, 694, -1000, -1000, -1000, 27295, -1000, 3804, -52, -1000,
	-1000, -1000, -1000, -1000, -1000, 679, -1000, -1000, -1000, -1000,
	-1000, 21, 1075, 21, 982, -1000, 963, -1000, -1000, -248,
	1462, -1000, 179, 27641, 97, 526, -1000, 4207, 4207, 4207,
	101, 94, -1000, 830, -1000, -1000, -1000, 1074, 1073, 1071,
	1208, 160, 819, 132, -1000, 1706, -1000, -1000, -1000, 3804,
	-23, -1000, 126, -1000, -1000, -1000, 126, -1000, -1000, 143,
	1381, 1381, 21719, 1381, -1000, -1000, 4621, 341, 4207, 4207,
	1496, 694, 1595, 519, -1000, -1000, -1000, -1000, -1000, -1000,
	1111, -1000, 677, -1000, 557, 341, 4621, 986, 740, 1688,
	-1000, 9535, 1767, 24629, -1000, -1000, -1000, 3804, -1000, 7180,
	-1000, 1179, 1754, -1000, -1000, -1000, -1000, -1000, 287, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17505, 17505, 17505,
	17505, -1000, 2023, 2023, 2023, 17505, 1179, 1070, 986, 17505,
	17505, 1594, -1000, 1450, -1000, -1000, 1450, 177, -1000, 27295,
	1739, -1000, 986, 986, 986, 27295, 986, 1240, -1000, 1450,
	18911, -1000, 22187, 1235, 1235, 1235, -1000, 613, 23123, 1692,
	1692, -1000, 1093, -1000, 1226, -1000, -1000, 679, -1000, 679,
	1209, 1206, -1000, 23123, -1000, 1741, -1000, 97, -1000, 1069,
	230, 227, -1000, 219, 213, 208, 201, 199, -1000, -1000,
	-1000, -1000, 376, 101, -1000, -41, 952, 337, 1638, 94,
	-1000, 918, 898, 893, 888, 162, -1000, -1000, -1000, -1000,
	180, 153, -1000, 380, 1068, 1624, 1619, 1708, 1708, 95,
	1381, 1403, 1202, -1000, -1000, 1109, -1000, -1000, 1461, 1093,
	1460, -1000, 1090, -1000, -1000, 27295, -1000, 341, 1684, 1682,
	1450, -1000, 1761, 1753, 1337, 12825, -1000, -1000, -1000, 15633,
	-1000, -1000, 2023, 2023, 2023, 2023, -1000, -1000, -1000, 164,
	-1000, -1000, 2023, 2023, 1801, -1000, 1376, 1450, -1000, 179,
	-1000, -1000, 1220, -1000, 27295, -1000, -1000, 626, -1000, -1000,
	-1000, 613, -1000, 1089, 720, 1067, -1000, -1000, -1000, -1000,
	335, -1000, -1000, -1000, -1000, 1192, -1000, 284, 29665, -1000,
	-1000, -1000, -1000, -1000, -1000, 1628, 1627, 257, -1000, 1066,
	1064, -1000, 363, 1042, 669, -165, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 369, 1088, -1000,
	130, -1000, -1000, 527, 1609, 1611, 1752, -1000, 21719, -1000,
	-1000, 24629, -1000, -1000, 642, 642, 23123, 1496, 23123, -1000,
	-1000, -1000, 17505, -1000, 324, -1000, 15633, 15633, 1767, -1000,
	1276, -1000, -1000, -1000, -1000, 1179, 165, -225, -1000, -1000,
	10006, 1376, 1179, -1000, -1000, -1000, -1000, -1000, 878, -1000,
	27641, 613, 278, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15633, 15633, 5296, 29665, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 877, -1000, -1000, 1021, 351,
	128, -1000, 1705, -1000, 1458, 865, 1619, 1751, 1616, 1614,
	-1000, 1063, -206, 1337, 1188, 1456, 1184, 3804, 1178, -1000,
	27295, -1000, 986, 1372, -1000, 986, 1761, -1000, -162, -1000,
	1568, -202, -229, 1370, -1000, -1000, 1453, -1000, 613, 274,
	-1000, 832, 957, 206, 174, 3592, -1000, -1000, -1000, -1000,
	-302, -1000, 115, -1000, 110, -1000, -1000, -1000, 1060, -1000,
	1623, -1000, 1051, -1000, 1750, 1749, -1000, 150, 1767, 613,
	23123, 613, -1000, 324, 1587, 15633, -1000, 1179, 163, 163,
	-1000, 1522, -1000, 27295, -1000, 1086, 1029, 933, -1000, 15633,
	29665, 1733, 1731, 1729, 1666, 9535, 29502, -1000, -1000, -1000,
	-1000, -1000, 1041, 1026, 20315, 1761, -1000, 1175, -1000, -1000,
	321, -1000, -1000, -1000, 211, -1000, -251, 272, -252, -1000,
	1225, -1000, -221, 1173, 315, -1000, -1000, 795, 29665, -1000,
	954, -303, 393, 179, 606, 17505, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 91, 1208, -1000, 613, 305, 804, -1000,
	-1000, -1000, -1000, -1000, 27295, -227, 1507, -1000, -1000, -1000,
	-1000, -1000, -1000, 29665, -1000, -304, 29665, 223, -1000, -1000,
	-1000, 29494, -1000, -1000, -1000, -1000, 168, -1000, -1000, 3804,
	21719, -1000, 1450, 211, -1000, -232, 1502, 1501, 1776, -1000,
	-305, 4830, -306, 542, 29665, 902, -1000, 15633, -1000, 606,
	-1000, 1208, 16569, -1000, -1000, -1000, 1800, -1000, 1796, 640,
	640, 4720, 784, 29665, -1000, -307, 478, 29665, -1000, 901,
	-1000, 2023, 1179, -1000, -1000, -1000, 345, 917, -1000, -1000,
	-1000, 4535, -1000, -308, 29665, -1000, -1000, -1000, -1000, -1000,
	476, 2894, -309, -1000, 470, 29665, -1000,
}
var yyPgo = [...]int{

	0, 2256, 2255, 32, 2254, 179, 2252, 2245, 2243, 19,
	16, 13, 21, 2242, 1950, 1938, 1936, 1931, 1923, 2239,
	5, 2238, 2237, 1901, 2235, 2234, 1898, 1889, 1880, 1878,
	2233, 2232, 2228, 1872, 1869, 18, 2227, 23, 2226, 2,
	142, 165, 2225, 6, 2223, 2222, 15, 2220, 2219, 1867,
	2217, 2216, 2215, 98, 2214, 1865, 1858, 2213, 1856, 1840,
	2212, 2211, 1838, 1826, 1824, 2203, 162, 2196, 2192, 2191,
	153, 100, 151, 2190, 2186, 2185, 108, 81, 2332, 118,
	59, 106, 1151, 2183, 27, 48, 2182, 2176, 127, 131,
	2175, 156, 2173, 94, 105, 99, 2172, 2170, 163, 2169,
	2167, 2165, 130, 2164, 2162, 2638, 2160, 2159, 155, 2154,
	78, 45, 36, 2153, 2149, 2148, 2147, 2145, 11, 1109,
	2144, 2124, 139, 2123, 2111, 86, 2110, 2108, 167, 2106,
	2105, 2101, 133, 40, 2099, 46, 2098, 64, 66, 2097,
	47, 2095, 134, 2092, 2091, 44, 24, 2088, 41, 2087,
	50, 2086, 135, 166, 209, 2085, 25, 10, 42, 37,
	65, 63, 121, 95, 30, 28, 116, 96, 88, 38,
	2084, 145, 2083, 87, 152, 122, 123, 148, 2081, 2079,
	2076, 1032, 2075, 117, 89, 2073, 103, 1167, 161, 114,
	2071, 90, 2068, 2067, 2066, 83, 110, 2064, 2059, 58,
	35, 1453, 1864, 49, 150, 2058, 43, 2057, 2040, 3056,
	109, 77, 107, 2037, 104, 53, 51, 2034, 2033, 2032,
	2031, 2030, 2029, 1224, 2028, 2027, 2025, 2018, 270, 215,
	2017, 2015, 126, 97, 2014, 2013, 2009, 2008, 120, 84,
	144, 2007, 112, 138, 125, 2005, 75, 2004, 2002, 61,
	34, 2001, 2000, 1997, 93, 92, 1996, 68, 39, 29,
	62, 9, 71, 141, 1995, 26, 1989, 4, 8, 12,
	1988, 1984, 1981, 1980, 1979, 1976, 1974, 76, 1971, 1969,
	60, 1965, 1962, 1961, 31, 1960, 1959, 1957, 136, 115,
	80, 160, 206, 7, 1956, 1952, 3, 1947, 119, 1943,
	52, 1941, 55, 1925, 1909, 56, 1904, 1885, 57, 1863,
	1861, 159, 1543, 217, 1854, 158, 140, 54, 67, 1851,
	1849, 0, 573, 164, 154, 1846, 1844,
}
var yyR1 = [...]int{

	0, 320, 320, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 86, 87, 87, 91, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 323, 323, 100, 100, 98, 98, 99, 99,
	166, 166, 12, 12, 12, 171, 171, 176, 176, 176,
	179, 179, 179, 179, 158, 159, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 294, 294,
	303, 303, 303, 304, 304, 302, 302, 302, 302, 302,
	306, 306, 307, 307, 305, 305, 305, 305, 309, 309,
	310, 310, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 297, 297, 297, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 311,
	311, 311, 311, 312, 312, 313, 313, 314, 314, 315,
	315, 315, 315, 316, 316, 316, 316, 316, 317, 317,
	317, 317, 317, 317, 317, 318, 318, 319, 319, 2,
	275, 275, 276, 276, 277, 277, 277, 277, 278, 278,
	279, 279, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 24, 198, 198, 296, 296, 296, 296, 290,
	290, 290, 292, 292, 291, 291, 291, 293, 293, 298,
	298, 298, 298, 298, 300, 300, 300, 300, 300, 300,
	301, 301, 301, 299, 299, 47, 47, 48, 48, 48,
	151, 151, 151, 13, 13, 13, 13, 13, 19, 21,
	21, 36, 36, 37, 22, 22, 22, 22, 38, 38,
	39, 25, 25, 25, 25, 25, 25, 45, 45, 45,
	44, 44, 43, 43, 43, 43, 43, 43, 23, 23,
	23, 23, 46, 46, 41, 41, 40, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 26,
	26, 26, 26, 26, 26, 18, 274, 274, 274, 35,
	35, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	51, 251, 252, 252, 252, 252, 252, 252, 252, 252,
	239, 239, 240, 216, 216, 216, 216, 216, 216, 216,
	216, 215, 215, 215, 215, 219, 219, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 218, 218, 218, 218,
	218, 218, 218, 218, 220, 220, 220, 220, 220, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 222, 222, 222, 222, 222, 222,
	222, 222, 238, 238, 223, 223, 232, 232, 233, 233,
	233, 230, 230, 231, 231, 226, 227, 234, 228, 228,
	228, 229, 229, 229, 237, 237, 237, 237, 224, 241,
	241, 261, 261, 260, 260, 259, 259, 259, 250, 250,
	256, 256, 256, 256, 256, 256, 256, 245, 245, 245,
	244, 244, 246, 246, 249, 249, 258, 258, 257, 257,
	242, 242, 242, 262, 262, 262, 262, 262, 243, 243,
	243, 243, 263, 247, 247, 248, 248, 248, 268, 269,
	267, 267, 267, 267, 267, 115, 115, 115, 253, 253,
	253, 254, 254, 254, 255, 255, 255, 272, 272, 271,
	271, 49, 50, 54, 54, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 150,
	150, 150, 196, 196, 266, 264, 264, 265, 265, 15,
	15, 52, 52, 295, 295, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 270, 270, 270, 17, 17, 55,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 83, 185, 185, 184, 184, 183,
	183, 183, 186, 186, 186, 213, 213, 213, 57, 57,
	61, 61, 64, 64, 64, 62, 63, 27, 28, 28,
	28, 28, 29, 197, 197, 59, 59, 60, 60, 60,
	60, 75, 75, 325, 325, 58, 326, 66, 67, 67,
	68, 68, 68, 189, 189, 72, 72, 72, 70, 70,
	70, 71, 71, 77, 77, 81, 81, 81, 81, 80,
	80, 80, 80, 153, 153, 153, 154, 154, 155, 155,
	155, 156, 156, 157, 157, 157, 157, 157, 123, 123,
	205, 205, 205, 204, 204, 204, 204, 85, 85, 88,
	88, 89, 89, 89, 89, 92, 136, 136, 109, 109,
	110, 110, 110, 110, 110, 121, 121, 165, 165, 164,
	164, 167, 167, 90, 90, 90, 90, 95, 95, 96,
	96, 97, 97, 195, 195, 211, 211, 211, 101, 101,
	101, 103, 102, 102, 102, 102, 104, 104, 106, 107,
	107, 105, 105, 108, 111, 111, 111, 111, 112, 112,
	82, 82, 82, 82, 82, 82, 82, 182, 182, 114,
	114, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 131, 131, 131, 131, 131, 131, 116, 116, 116,
	116, 116, 116, 116, 76, 76, 132, 132, 132, 94,
	93, 93, 79, 79, 78, 78, 133, 133, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 126, 126, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 324, 324, 128, 127, 127, 127, 127, 127, 127,
	73, 73, 73, 73, 73, 212, 212, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	143, 143, 74, 74, 141, 141, 142, 144, 144, 140,
	140, 140, 118, 118, 118, 118, 118, 118, 118, 118,
	120, 120, 120, 145, 145, 134, 134, 84, 146, 146,
	147, 148, 148, 149, 149, 152, 160, 160, 160, 161,
	161, 161, 161, 122, 122, 162, 162, 162, 117, 117,
	117, 117, 117, 117, 117, 163, 163, 163, 163, 168,
	168, 135, 135, 138, 138, 137, 139, 169, 169, 173,
	173, 170, 170, 174, 174, 174, 174, 177, 177, 178,
	178, 178, 175, 175, 175, 172, 172, 172, 208, 208,
	208, 180, 180, 190, 190, 187, 187, 188, 188, 181,
	181, 225, 225, 194, 194, 193, 193, 193, 191, 191,
	191, 192, 192, 206, 206, 202, 202, 207, 207, 203,
	203, 209, 209, 210, 210, 273, 273, 235, 235, 283,
	283, 236, 236, 284, 284, 286, 286, 281, 281, 282,
	282, 285, 285, 30, 287, 287, 288, 288, 289, 289,
	289, 289, 31, 32, 32, 32, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 321, 322,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	2, 2, 2, 1, 3, 0, 3, 1, 3, 0,
	1, 1, 1, 1, 3, 1, 3, 3, 0, 2,
	5, 5, 5, 7, 5, 0, 3, 0, 3, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 4, 0, 3, 1, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 6, 5, 5,
	4, 3, 5, 1, 3, 1, 1, 1, 1, 1,
	0, 2, 2, 1, 1, 1, 1, 1, 4, 5,
	8, 1, 2, 5, 7, 10, 8, 11, 1, 2,
	5, 5, 5, 5, 6, 3, 5, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 2, 4,
	2, 4, 2, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 0, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 3, 3, 2, 4, 5, 2, 3, 4, 2,
	2, 3, 3, 3, 3, 3, 4, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 2, 3, 1, 0, 3,
	3, 0, 2, 2, 2, 1, 2, 1, 2, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	2, 4, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 2, 0,
	2, 1, 5, 1, 3, 5, 4, 3, 5, 3,
	8, 10, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 8, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 4, 4, 4, 2, 2,
	2, 6, 2, 4, 4, 3, 5, 7, 6, 3,
	5, 4, 2, 4, 3, 2, 4, 5, 6, 2,
	6, 6, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 4, 8, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 4, 1, 3, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 3, 2,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 6,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 0, 2, 4, 2, 4,
	1, 3, 5, 4, 6, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -320, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 131, -50, 134, 133, 170, 135, 163, 64,
	265, -64, 268, 269, -325, -197, 216, 217, 20, 37,
	270, 272, 31, 32, 185, 233, 235, -5, -86, -6,
	8, 362, 132, 266, 165, 164, 26, 414, -321, 68,
	477, -148, 15, -66, -326, -66, -66, -66, -66, -66,
	-251, -195, 106, 68, 23, -192, 144, 87, 353, 140,
	-198, 229, 231, -190, -191, 193, 203, 44, 151, 150,
	141, 229, 141, 142, 144, 353, 140, 178, 177, 229,
	231, 141, -105, -209, 72, -200, 154, 425, 254, 411,
	132, 241, 190, 265, 279, 273, 307, 295, 412, 426,
	155, 211, 139, 293, 296, 340, 153, 244, 204, 427,
	329, 335, 214, 268, 349, 428, 156, 208, 210, 209,
	198, 215, 36, 166, 291, 250, 284, 219, 193, 429,
	419, 282, 28, 188, 430, 337, 312, 253, 431, 416,
	248, 336, 287, 283, 137, 157, 151, 433, 313, 317,
	434, 341, 234, 435, 436, 437, 143, 240, 277, 278,
	438, 194, 343, 245, 311, 33, 152, 413, 48, 175,
	344, 38, 315, 37, 321, 439, 310, 305, 322, 440,
	441, 442, 443, 258, 256, 257, 259, 309, 276, 304,
	206, 53, 138, 319, 318, 320, 207, 339, 300, 298,
	444, 445, 249, 158, 446, 447, 285, 18, 448, 449,
	347, 169, 251, 252, 42, 450, 451, 452, 173, 453,
	454, 455, 338, 314, 316, 192, 456, 288, 148, 457,
	255, 458, 264, 415, 238, 381, 345, 281, 459, 272,
	174, 168, 348, 460, 217, 461, 462, 463, 160, 464,
	232, 231, 269, 380, 270, 331, 212, 465, 466, 467,
	468, 202, 187, 351, 342, 52, 216, 326, 469, 275,
	150, 218, 470, 242, 266, 43, 7, 205, 246, 332,
	213, 203, 302, 176, 471, 472, 289, 290, 308, 274,
	303, 267, 178, 179, 170, 262, 350, 327, 417, 229,
	297, 294, 182, 301, 473, 144, 474, 183, 271, 346,
	243, 292, 328, 141, 124, 296, 340, 131, 330, 331,
	337, -245, 338, 177, 180, -213, 141, -185, 329, 234,
	255, 386, 183, 184, 142, 143, 33, 342, 341, 333,
	-209, 145, 271, -75, 135, 171, -105, -46, 72, 218,
	-46, 30, 72, 72, 36, 72, 270, 332, 332, 75,
	415, 186, 21, -312, -293, 264, -311, -291, 8, 159,
	6, 9, -296, 74, 72, -200, -201, 382, 383, 384,
	385, 386, 399, 400, 401, 387, 388, 402, 403, 404,
	389, 390, 405, 406, 408, 409, 407, 181, 393, 392,
	391, 394, 395, 51, 397, 396, 398, 21, -312, -293,
	264, 6, -68, 5, -181, 146, 267, -87, -91, -211,
	-209, -201, 74, -3, -161, 17, 16, -72, 54, 55,
	-67, -80, 115, -82, -209, -113, 89, -119, 29, 72,
	-200, 24, -118, -201, -114, -140, -139, -94, 124, 125,
	126, 113, 114, 121, 90, 127, -126, -124, -125, -127,
	-129, -130, 74, 73, 82, 75, 76, 77, 78, 83,
	382, 383, 384, 385, 386, 399, 400, 401, 387, 388,
	402, 403, 404, 389, 390, 405, 406, 408, 409, 407,
	393, 392, 391, 394, 395, 397, 396, 398, 84, 85,
	-202, -137, -321, 58, 59, 171, 140, 363, 364, 365,
	366, 367, 410, 161, 371, 92, 47, 352, 361, 360,
	359, 357, 358, 354, 356, 355, 373, 374, 147, 353,
	119, 362, -181, -181, 11, -98, -99, -105, -108, -209,
	-170, 267, -177, -174, 341, 342, -175, -178, -172, -140,
	321, 454, 455, 340, 296, 339, -202, -209, -2, -5,
	6, -105, -252, -240, -243, -203, 156, -263, -202, -199,
	153, 72, -200, 247, 136, 162, 88, 418, 23, 25,
	237, 324, 382, 91, 124, 383, 384, 385, 16, 20,
	92, 123, 81, 363, 186, 386, 131, 62, 379, 354,
	356, 352, 353, 330, 29, 10, 26, 164, 197, 22,
	117, 133, 95, 96, 97, 167, 24, 165, 260, 85,
	161, 432, 19, 65, 11, 180, 233, 13, 377, 378,
	14, 230, 147, 146, 108, 195, 142, 60, 8, 127,
	27, 105, 56, 387, 388, 421, 45, 185, 422, 58,
	106, 17, 357, 358, 31, 410, 389, 172, 423, 390,
	119, 200, 63, 50, 236, 89, 83, 34, 86, 66,
	87, 15, 196, 61, 375, 239, 261, 177, 199, 424,
	159, 107, 134, 362, 263, 235, 59, 140, 6, 372,
	30, 163, 393, 392, 391, 394, 201, 57, 365, 366,
	395, 475, 141, 94, 373, 374, 145, 84, 5, 44,
	32, 9, 64, 67, 359, 360, 361, 47, 51, 397,
	396, 398, 93, 12, 376, 414, 181, 142, -105, 362,
	-188, 147, -188, 178, 177, -188, -188, 141, 98, -52,
	-105, -295, -290, -296, -187, 147, -202, -187, -187, -187,
	-187, -187, -187, -187, -105, 128, -105, 72, 30, -186,
	106, 12, 353, 140, 141, 178, 144, -247, 11, 108,
	181, 181, 181, 182, 181, -184, 332, 334, 179, 335,
	336, 12, -83, 106, 19, -321, -161, -161, 72, 270,
	145, -60, -3, -11, -9, -10, -3, 98, 30, 30,
	74, 51, 30, -41, -40, -42, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 30, -274,
	68, -235, 321, 72, -287, -288, -105, 75, 75, 66,
	66, 69, 145, 69, 66, -313, 68, -313, -313, -313,
	71, 66, 69, 255, 66, 11, 66, -66, -7, -5,
	-321, 21, 22, 141, 345, 69, 23, -321, -322, 70,
	-162, 19, 31, -122, 75, 78, -149, -152, -82, -209,
	50, -70, 21, 22, 80, 11, -205, 88, 87, 105,
	-204, 23, 72, -200, -201, 74, 128, -82, -116, 108,
	89, 106, 107, 91, 110, 109, 120, 113, 114, 115,
	116, 117, 118, 119, 111, 112, 123, 98, 99, 100,
	101, 102, 103, 104, -182, -321, -94, -321, 129, 130,
	-119, -119, -119, -119, -119, -119, -119, -119, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -3, -133, -82,
	-321, -321, -321, -321, -321, -321, -321, -321, -321, -321,
	-321, -321, -321, -143, -82, -321, -324, -128, -321, -324,
	-128, -324, -128, -324, -321, -324, -128, -324, -128, -324,
	-324, -128, -324, -321, -321, -321, -321, -321, -321, -107,
	27, -105, -85, -88, -89, -90, -109, -93, -321, -105,
	-94, -105, -98, -323, 69, 11, 67, -323, 69, 128,
	69, -171, -176, 343, 345, 267, -175, -175, -208, -202,
	74, 29, 98, 30, 128, -148, -66, 70, 69, -243,
	156, 153, -215, -219, -221, -220, -222, -217, -218, 293,
	296, 300, 298, 294, 299, 124, 297, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 30, 166,
	289, 290, 291, 292, 313, 314, 315, 316, 317, 318,
	319, 320, 273, 295, 412, 274, 275, 276, 277, 278,
	279, 281, 282, 283, 284, 285, 286, 287, 72, -201,
	-263, 68, -202, 23, 144, 72, 89, 72, 72, 72,
	-299, -298, -290, -293, -188, 72, 69, 145, 69, 145,
	71, -98, 24, 66, -100, -105, 72, 72, 72, 72,
	-292, -290, -293, -210, -209, -199, -186, 74, -82, -188,
	-188, -105, -105, -105, -105, -186, -186, -186, -183, 11,
	108, 11, -183, -183, -82, -119, -290, 355, 115, 72,
	72, 270, 72, -41, -41, 74, -41, 69, 98, -41,
	70, -133, -273, 476, 69, -289, 23, 345, 346, 322,
	-315, 141, 180, 177, -315, -311, -292, -291, -290, -314,
	-202, -296, -315, 233, 69, -315, -292, -290, -72, -3,
	-105, 346, 347, -91, -93, -321, -163, -203, 9, 108,
	69, 18, 69, -160, 25, 26, 128, -120, 51, 75,
	78, -189, 49, -105, -82, -82, -131, 83, 89, 84,
	85, -204, 115, -210, -203, -199, -119, -132, -137, -94,
	79, 108, 106, 107, 91, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-212, 72, 74, 72, -118, -118, -202, -70, -78, -81,
	115, -82, -209, -78, -78, -70, -322, -322, -81, -78,
	-78, -78, -81, -78, -70, -70, -78, -322, -322, -322,
	-322, -78, -78, -78, -78, -70, -78, -78, -78, -70,
	-322, 69, -322, -3, -78, -78, -78, -322, -82, -82,
	-140, 74, -78, -140, 74, -78, -119, 368, 369, 370,
	-78, -78, -70, -141, -142, 93, -140, -322, -119, -202,
	-202, -78, -79, -78, -78, -78, -166, 173, -105, 30,
	69, -101, -103, -102, -104, 56, 60, 62, 57, 58,
	59, 63, -195, -85, -92, 47, -321, -110, 173, -111,
	23, -211, 64, 146, 65, -166, 67, -85, -105, -85,
	-108, -209, 115, -174, -177, 69, 344, 346, 347, -171,
	-229, 123, 66, 86, -82, -203, -210, -161, -72, -253,
	-254, -255, -203, 74, 75, -240, -241, -242, -243, -256,
	156, -262, 148, 150, 44, -244, 157, 142, 45, -216,
	-230, 327, -223, 68, -223, -223, 301, 293, 296, 294,
	-223, -223, -223, -223, -223, -228, 296, -228, -228, -228,
	-228, 294, 68, 68, -223, -223, -223, -232, 68, -232,
	288, -233, 68, -233, -233, -233, -233, -263, -263, -82,
	-206, 67, -158, -105, 24, -47, 190, 162, 68, -294,
	69, 29, -300, 230, -105, -105, -105, -290, -290, -296,
	-270, 160, 155, -105, 69, 69, 72, 72, -248, 11,
	108, -186, -209, -209, -105, -121, 23, -186, -76, 167,
	67, -324, -322, 72, -40, -118, 70, -106, 27, 74,
	-288, -211, 321, 346, -316, 115, -202, -316, -319, 414,
	145, 70, 69, -316, 251, 233, -316, 11, -70, -322,
	-54, -53, 136, 133, 134, 138, 139, -266, 324, 132,
	174, -322, 69, 128, 52, -122, -122, -152, -180, 19,
	11, 47, 47, -71, 57, 83, 84, 85, 128, -321,
	-132, -119, -119, -119, -76, 88, -322, -78, 69, -322,
	128, -322, -322, -78, -153, 375, -153, -322, -322, -322,
	-322, -322, -322, -78, -78, -322, -153, -153, -153, -153,
	-322, -322, -322, -322, -78, -322, -322, -322, -79, -82,
	-322, -322, -322, -322, 69, 67, 23, 11, 11, -322,
	11, 11, -322, -322, 11, -119, -119, -119, -322, -322,
	-78, -144, -142, 95, -82, -322, -322, 69, 69, -322,
	-322, -322, -322, -117, 30, 47, -321, -3, -321, -169,
	-173, -140, -199, -88, -89, -89, -88, -89, 56, 56,
	56, 61, 56, 61, 56, -102, -211, -322, -322, -136,
	189, -321, 34, -211, -111, 142, 142, 142, -112, 12,
	-85, -112, -112, 128, -176, -179, 348, 345, 351, 72,
	74, 128, -162, 69, -255, 98, -243, 68, 72, -249,
	-201, 45, -244, 142, 45, -244, -249, 72, -249, 45,
	83, 89, -226, -227, -234, -237, -224, 29, 66, 324,
	148, 45, 44, 81, -231, 328, 75, -228, -228, -223,
	-223, -223, 301, -223, -228, -229, 30, -229, -229, -229,
	-229, -228, -238, 74, -238, 75, -232, 75, 70, 66,
	-202, -3, 23, -48, 8, 9, 10, -275, -276, -277,
	72, 108, 195, 196, -303, 263, -298, 231, 240, 88,
	16, 414, 145, 145, -105, -290, -112, 72, 72, -183,
	-186, 34, -119, -293, 183, 184, -166, 141, -289, 145,
	128, 128, 145, 254, -292, -202, 11, 11, 251, 11,
	-292, -189, 69, -196, -244, -272, -242, -243, -271, 149,
	156, 157, -196, 156, 153, -244, 157, 148, 149, -193,
	-244, 145, 23, -196, -196, -250, 98, -196, 173, 23,
	-203, -203, 53, -105, -77, -159, 115, -203, -79, -76,
	88, -119, -322, -81, -154, -153, 115, -210, -154, -154,
	-322, -202, -321, -153, -154, -154, -153, -153, -153, -322,
	-322, -153, -154, -154, -154, -154, -322, -154, -154, -154,
	-322, -214, 124, 293, 166, 291, 284, 311, 298, 326,
	289, 327, -212, -214, -119, -119, -119, -119, -119, 11,
	11, 11, 411, -148, 97, -82, 94, -119, -119, -168,
	66, -169, -135, -138, -137, -321, -3, -322, -163, 6,
	414, -167, -202, -112, 69, 98, 98, -96, -95, 66,
	67, -97, 66, -95, 56, 56, -165, 68, 69, -137,
	-321, -167, -119, -111, -321, -321, -321, -148, -82, -112,
	345, 349, 350, -254, -255, -258, -257, -202, -201, 148,
	-262, 44, -262, -249, -249, 68, 83, -119, 9, 45,
	45, 74, 70, -229, -229, -228, -223, -229, 72, 124,
	-229, 70, 69, 70, 69, 70, 69, -115, 430, 89,
	-105, -158, -158, 66, 70, 69, -215, 72, 72, 72,
	-306, 414, 236, -304, -302, 242, 243, 244, 245, 246,
	-293, 241, -300, 238, 74, 72, -105, -290, -186, -119,
	-228, -105, -292, 115, 115, -202, -292, 251, -318, 414,
	-292, -292, 11, -292, -71, -53, 68, -239, 72, -201,
	-249, -191, 148, 72, 72, 72, -201, 72, -201, -202,
	45, 45, 72, -105, -202, -239, 72, -82, -202, -202,
	-93, 128, -112, 11, 69, -80, -322, -119, -154, 128,
	-154, -148, 173, -154, -154, -154, -322, -223, -223, -223,
	-233, -223, 278, -223, 278, -322, -322, 19, 19, 19,
	19, -322, -119, -119, -119, -321, -74, 372, -82, 69,
	69, 28, -168, 69, -322, -322, 47, -322, -322, 69,
	-148, -173, -82, -82, -82, 68, -82, -164, -202, 189,
	-322, -111, -195, -164, -164, -164, -161, 70, 69, -223,
	-223, 45, -246, -244, -164, -125, -229, -228, 74, -228,
	75, 75, 430, 68, -3, -105, -278, -279, -280, 81,
	413, 89, 197, 198, 158, 199, 200, 201, -277, -215,
	-215, -215, -309, -310, -308, 239, 260, 261, 247, -307,
	-305, 256, 257, 258, 259, 88, 74, 74, 74, -301,
	230, 88, 239, 16, 23, -281, -184, -318, -318, 233,
	-292, -77, -239, -150, 161, 162, -215, -215, -206, -246,
	45, 72, -194, 145, 23, 145, -150, -239, 30, 133,
	27, -203, -145, 13, -85, -159, -159, 115, -322, 16,
	-228, 72, -119, -119, -119, -119, -322, -322, -322, -119,
	-322, 74, -119, -119, 45, -138, -135, 47, -3, -321,
	-202, -161, -164, 70, 69, -137, -110, -211, -322, -322,
	-322, -260, -259, 67, 152, 81, -257, -160, -160, -249,
	70, -229, -229, 70, 70, -258, -158, 19, -158, -280,
	74, 201, 197, 201, 201, 201, 201, 202, -297, 81,
	237, -308, 248, 436, 232, 263, 75, 75, 262, 31,
	32, -305, 75, 75, 75, 75, -302, 16, 414, -300,
	238, 74, 74, -282, 38, -284, 39, -317, 23, -317,
	251, 11, 70, 72, -216, -216, 68, -249, 68, 72,
	-202, -150, 29, 29, -321, -146, 14, 16, -112, -80,
	-133, -322, -322, -322, -322, -73, 108, 414, -322, -322,
	9, -135, -3, 70, -202, -111, -259, 72, -250, 74,
	159, 70, 188, -20, -3, -9, -10, -11, -12, -14,
	-49, -15, -16, -21, -22, -17, -55, -56, -64, -62,
	-63, -59, -58, -25, -23, -26, -18, -27, -28, -29,
	-33, -34, -24, 92, 147, 219, 265, 36, 36, 193,
	194, 74, 74, 29, 249, 127, 29, 75, 127, 379,
	238, 74, 72, 239, -225, 146, -285, 43, -283, -236,
	42, 16, -290, -85, -258, -206, -258, -119, -264, -265,
	173, -147, -82, -134, -84, -82, -145, -159, -148, -322,
	412, 63, 415, -169, -322, 75, -105, -261, -260, 189,
	-158, -82, -82, 72, -45, -207, 222, 223, 224, -203,
	-35, -20, 75, 29, 75, 29, 252, 239, 23, -165,
	75, -284, 16, -286, 40, 41, 74, 414, -112, 70,
	68, 70, -322, 69, -202, 69, -146, -155, 380, 381,
	53, 413, 416, 68, -151, 191, 192, -36, -37, 93,
	94, 220, 221, 225, -215, 69, 477, 250, 250, 74,
	38, 74, 16, 16, 231, -145, -261, -258, -261, -265,
	47, -84, -322, -156, 91, -157, 262, 379, -123, 75,
	127, -156, 53, -164, -158, 72, 72, 97, 95, -37,
	-82, -35, 19, 19, 19, 29, -203, 97, -20, 74,
	74, 29, 236, 21, -293, -146, 70, 175, -157, 456,
	432, 189, 456, 432, -118, 414, 70, -13, -19, -12,
	-9, -10, -11, 265, 92, -35, 94, 477, -46, 75,
	-3, -44, -43, 75, -46, 227, 89, 228, 72, -119,
	253, -261, 176, 88, -202, 415, -268, -269, 66, -158,
	-35, 477, -35, 97, 95, -38, -39, 96, -20, 69,
	226, -293, -321, -157, 416, -269, 66, -268, 66, 10,
	9, 477, 97, 477, 147, -35, 97, 95, -39, -82,
	-43, -119, 172, -267, 160, 155, 158, 30, -267, 97,
	92, 477, 147, -35, 94, -322, -322, 154, 29, 83,
	97, 477, -35, 147, 97, 477, 147,
}
var yyDef = [...]int{

	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 656, 656, 656, 656, 656,
	656, 743, -2, 521, 0, 0, 0, 0, -2, 629,
	630, 631, 635, 636, 651, 653, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1049, 0, 654, 643, 644, 0, 0, 1517,
	2, 989, 0, 665, 658, 0, 1049, 1049, 0, 0,
	86, 0, 0, 0, 744, 0, 0, 0, 1047, 1047,
	0, 1047, 1047, 0, 1062, 0, 1044, 1058, 1059, 1060,
	0, 0, 1045, 0, 1045, 1045, 1045, 1045, 1045, 1045,
	1045, 0, 578, 761, 1071, 1072, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 0, 0, 0, 622, 0, 588, 589,
	590, 0, 592, 0, 0, 0, 0, 0, 602, 605,
	609, 0, 989, 989, 467, 468, 469, 626, 627, 616,
	628, 0, 0, 0, 0, 0, 655, 278, 280, 0,
	300, 0, 303, 306, 1077, 637, 0, 0, 1102, 1103,
	0, 0, 0, 0, 0, 1406, 153, 217, 155, 155,
	155, 155, 216, 205, 206, 207, 208, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 0, 0, 0,
	1406, 656, 0, 660, 0, 1050, 632, 44, 45, 0,
	745, 746, 747, 0, 995, 0, 0, 668, 666, 667,
	657, 0, 679, 700, 0, 770, 0, 775, 777, -2,
	-2, 0, 818, 819, 820, 821, 822, 823, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 848, 849, 850,
	851, 852, 962, 963, 964, 965, 966, 967, 968, 969,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 779, 780,
	959, 1016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 921, 921, 921,
	921, 921, 921, 921, 921, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 68, 761,
	72, 1465, 0, 1021, -2, -2, 1023, 0, 0, 0,
	-2, -2, -2, -2, 1278, -2, 959, 0, 87, 981,
	656, 88, 0, 342, 343, 0, 1290, 491, 1069, 1070,
	1280, 1065, 1066, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 559,
	0, 560, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 579, 580, 622, 582,
	0, 0, 1047, 1047, 0, 0, 0, 0, 493, 494,
	622, 622, 595, 622, 619, 0, 619, 599, 619, 617,
	618, 0, 604, 0, 0, 0, 612, 613, 638, 0,
	0, 645, 647, 648, 649, 650, 646, 0, 0, 0,
	282, 0, 0, 302, 284, 0, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 298, 0, 305,
	0, 1075, 1078, 642, 1093, 1094, 0, 1104, 1105, 159,
	159, 0, 0, 0, 0, 149, 0, 150, 151, 152,
	215, 159, 0, 0, 159, 0, 0, 665, 41, 51,
	0, 661, 662, 0, 0, 0, 0, 0, 50, 1518,
	36, 0, 0, 990, 993, 994, 982, 983, 986, 0,
	0, 663, 669, 670, 659, 0, 680, 0, 0, 0,
	701, 0, 703, 704, 705, 706, 0, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 797, 798, 799,
	800, 801, 802, 803, 776, 0, 790, 0, 0, 0,
	839, 840, 841, 842, 843, 844, 845, 0, 668, 0,
	0, 0, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 668, 0, 0, 0, 668, 0, 0, 816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 668, 0, 951, 0, 904, 913, 0, 905,
	914, 906, 915, 907, 0, 908, 916, 909, 917, 910,
	911, 918, 912, 0, 0, 0, 812, 0, 0, 70,
	0, 760, 0, 707, 709, 710, 711, -2, 0, 764,
	810, -2, 0, 0, 0, 62, 63, 0, 0, 0,
	0, 73, 75, 0, 0, 1465, 1024, 1025, 441, 1038,
	1039, 1040, 0, 1036, 0, 989, 665, 508, 0, 344,
	0, 0, 353, 431, 362, 363, 364, 424, 366, 424,
	424, 0, 424, 424, 424, 424, 424, 438, 438, 438,
	438, 438, 407, 408, 409, 410, 411, 0, 0, 384,
	424, 424, 424, 388, 414, 415, 416, 417, 418, 419,
	420, 421, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 426, 426, 428, 428, 428, 428, 428, 0, 0,
	490, 0, 1063, 84, 0, 92, 0, 93, 0, 0,
	98, 233, 219, 97, 0, 204, 0, 0, 0, 0,
	210, 574, 1046, 0, 567, 64, 568, 569, 570, 571,
	572, 212, 573, 762, 1073, 1074, 581, 623, 624, 0,
	0, 585, 586, 587, 495, 593, 594, 601, 622, 0,
	0, 0, 725, 622, 603, 804, 606, 921, 0, 640,
	639, 0, 652, 279, 281, 283, 301, 0, 0, 304,
	307, 0, 0, 0, 0, 1096, 0, 1098, 1100, 0,
	0, 160, 161, 162, 0, 154, 177, 218, 0, 0,
	157, 214, 0, 0, 0, 0, 147, 0, 668, 0,
	0, 633, 634, 46, 47, 0, 0, 1005, 996, 0,
	0, 0, 0, 985, 987, 988, 0, 0, 970, 0,
	0, 671, 664, 38, 771, 772, 774, 791, 0, 793,
	795, 702, 681, 0, 960, -2, 781, 782, 806, 807,
	808, 0, 0, 0, 0, 804, 786, 0, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	838, 935, 936, 0, 836, 837, 846, 0, 0, 814,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 812,
	809, 0, 1015, 0, 0, 0, 0, 886, 0, 0,
	821, 962, 0, 821, 962, 0, 0, 0, 0, 0,
	0, 0, 0, 957, 954, 0, 0, 922, 0, 0,
	0, 0, 0, 813, 0, 0, 0, 0, 759, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 751, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 1392, 720,
	0, 764, 0, 0, 0, 768, 0, 768, 67, 768,
	69, 0, 763, 1022, 0, 0, 0, 78, 79, 74,
	1026, 0, 1032, 1033, 1034, 960, 0, 995, 668, 341,
	509, 511, 514, 515, 516, 345, 347, 348, 349, 0,
	-2, 482, 1402, 1444, -2, 474, 1319, -2, -2, 352,
	433, 432, 365, 0, 438, 438, 424, 424, 424, 424,
	393, 438, 396, 399, 400, 441, 0, 441, 441, 441,
	441, 438, 0, 0, 385, 386, 387, 376, 0, 377,
	426, 379, 0, 380, 381, 382, 383, 488, 489, 0,
	0, 0, 0, 0, 1048, 0, 235, 236, 180, 100,
	0, 0, 220, 0, 340, 0, 561, 0, 563, 209,
	565, 575, 576, 566, 0, 0, 583, 584, 768, 0,
	0, 596, 620, 621, 619, 622, 0, 600, 614, 0,
	0, 607, 0, 641, 285, 286, 308, 70, 0, 1076,
	1095, 0, 1099, 1101, 0, 163, 165, 0, 141, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 663, 52,
	522, 523, -2, 552, 1055, 552, 552, 540, 458, 552,
	0, 0, 0, 0, 0, 991, 992, 984, 0, 1041,
	1042, 971, 972, 85, 672, 792, 794, 796, 0, 812,
	783, 804, 787, 0, 784, 0, 778, 0, 0, 686,
	0, 686, 686, 0, 872, 0, 873, 0, 686, 686,
	0, 0, 0, 0, 0, 0, 879, 880, 881, 882,
	686, 686, 686, 686, 0, 686, 686, 686, 0, 817,
	-2, 883, 884, 885, 0, 0, 0, 0, 0, 928,
	0, 0, 929, 894, 0, 0, 0, 0, 0, 900,
	981, 0, 955, 0, 0, 903, 923, 0, 0, 924,
	925, 926, 927, 1009, 0, 0, 0, 1000, 0, 768,
	1017, 0, 0, 708, 739, 741, 0, 736, 749, 750,
	752, 0, 754, 0, 756, 757, 727, 714, 811, 715,
	0, 0, 0, 764, 724, 0, 0, 0, 981, 0,
	768, 60, 61, 0, 76, 77, 0, 0, 83, 442,
	443, 0, 179, 0, 512, 0, 346, 0, 475, 0,
	0, 460, 474, 470, 471, 474, 465, 475, 466, 0,
	354, 0, 356, 357, 358, 359, 360, 0, 0, 437,
	0, 445, 447, 0, 361, 434, 0, 441, 441, 438,
	391, 392, 424, 397, 441, 401, 0, 402, 403, 404,
	405, 441, 0, 422, 0, 0, 378, 0, 505, 0,
	1064, 84, 84, 0, 237, 238, 239, 0, 181, 182,
	0, 0, 0, 0, 110, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 65, 213, 591, 496, 497, 622,
	598, 0, 805, 608, 610, 611, 438, 0, 1097, 0,
	0, 0, 0, 0, 175, 158, 0, 0, 0, 0,
	148, 671, 0, 0, 474, 0, 541, 542, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1056, 1057, 0, 0, 0, 459, 0, 0, 0,
	1007, 1006, 997, 37, 768, 0, 682, 961, 0, 785,
	0, 788, 686, 815, 857, 687, 677, 0, 858, 859,
	686, 683, 981, 874, 861, 862, 875, 876, 877, 686,
	686, 878, 866, 865, 864, 867, 686, 870, 869, 871,
	853, 0, 424, 424, 940, 424, 428, 943, 424, 945,
	424, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 902, 958, 0, 0, 0, 53,
	0, 1009, 998, 1011, 1013, 0, 0, 0, 0, -2,
	1258, 0, 731, 981, 0, 0, 0, 733, 740, 0,
	0, 734, 0, 735, 753, 755, 712, 0, 0, 716,
	0, 0, -2, 723, 0, 0, 0, 989, 769, 59,
	80, 81, 82, 510, 513, 0, 476, 424, 424, 0,
	480, 472, 481, 462, 464, 0, 355, 435, 0, 444,
	446, 448, 425, 389, 390, 441, 398, 394, 439, 440,
	406, 438, 0, 438, 0, 429, 0, 492, 506, 0,
	0, 90, 0, 0, 188, 0, 184, 0, 0, 0,
	118, 0, 101, 102, 103, 105, 106, 0, 0, 0,
	99, 0, 222, 0, 225, 226, 562, 564, 597, 726,
	1087, 758, 175, 164, 166, 167, 175, 178, 142, 0,
	143, 145, 0, 144, 85, 524, 0, 549, 0, 0,
	1063, 472, 0, -2, 527, 532, 533, 534, 535, 536,
	0, 547, 0, 529, 0, 549, 0, 544, 0, 0,
	48, 0, 973, 0, 85, 85, 854, 789, 856, 0,
	860, 0, 0, 855, 863, 868, 887, 937, 438, 941,
	942, 944, 946, 947, 949, 889, 888, 0, 0, 0,
	0, 895, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 0, 54, 0, 1014, -2, 0, 0, 71, 0,
	989, 1018, 1019, 1020, 737, 0, 742, 0, 729, 0,
	764, 721, 0, 0, 0, 0, 58, 450, 0, 986,
	986, 461, 474, 473, 0, 436, 395, 441, 423, 441,
	0, 0, 507, 0, 84, 0, 84, 189, 190, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 183, 185,
	186, 187, 136, 119, 120, 0, 0, 0, 0, 111,
	112, 0, 0, 0, 0, 0, 107, 108, 109, 221,
	0, 0, 224, 0, 0, 1089, 1083, 168, 168, 0,
	146, 0, 0, 526, 550, 0, 353, 353, 0, 474,
	0, 543, 0, 1053, 1054, 0, 538, 549, 0, 0,
	0, 1008, 978, 0, 768, 0, 673, 678, 684, 0,
	938, 939, 0, 0, 0, 0, 896, 897, 898, 930,
	901, 953, 0, 0, 0, 1012, 999, 0, 1003, 0,
	732, 57, 0, 728, 0, 717, 719, 764, 765, 766,
	767, 449, 453, 0, 458, 0, 477, 478, 479, 463,
	0, 412, 413, 427, 430, 0, 91, 0, 0, 191,
	192, 193, 194, 196, 197, 0, 0, 0, 96, 0,
	0, 121, 0, 0, 0, 0, 131, 132, 133, 134,
	135, 113, 114, 115, 116, 117, 104, 0, 0, 223,
	0, 228, 229, 1051, 1091, -2, 0, 139, 0, 140,
	176, 0, 525, 551, 350, 351, 0, 1063, 0, 528,
	537, 539, 0, 546, 0, 42, 0, 0, 973, 85,
	981, 890, 892, 891, 893, 0, 0, 0, 919, 920,
	0, 1002, 0, 738, 730, 722, 454, 455, 0, 457,
	0, 451, 0, 84, 311, 312, 313, 314, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 325, 326,
	327, 328, 329, 330, 331, 332, 333, 334, 335, 336,
	337, 338, 339, 0, 0, 0, 0, 198, 199, 200,
	201, 137, 138, 122, 123, 0, 125, 126, 0, 0,
	0, 231, 0, 227, 727, 0, 1083, 0, 1085, 0,
	1082, 0, 169, 768, 0, 0, 0, 545, 0, 555,
	0, 979, 980, 974, 975, 977, 978, 674, 688, 899,
	0, 0, 0, 1010, -2, 456, 0, 89, 452, 240,
	95, 0, 0, 1065, 0, 0, 267, 268, 269, 1067,
	0, 309, 0, 127, 0, 129, 130, 230, 0, 35,
	0, 1090, 0, 1088, 0, 0, 1084, 0, 973, 451,
	0, 451, 554, 0, 0, 0, 43, 0, 0, 0,
	931, 0, 934, 0, 84, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 265, 0, 0, 124, 128, 232,
	1052, 1092, 0, 0, 0, 978, 530, 0, 548, 556,
	0, 976, 685, 689, 0, 692, 0, 0, 0, 698,
	0, 690, 932, 0, 0, 241, 242, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 1068, 202, 310, 1086,
	1080, 170, 171, 172, 174, 40, 451, 0, 0, 693,
	694, 695, 696, 697, 0, 0, 483, 84, 243, 244,
	245, 246, 247, 0, 249, 0, 0, 0, 261, 262,
	263, 0, 270, 272, 273, 274, 0, 276, 277, 266,
	0, 531, 0, 0, 699, 0, 484, 485, 0, 94,
	0, 0, 0, 0, 0, 0, 258, 0, 264, 0,
	275, 173, 0, 691, 933, 486, 0, 487, 0, 0,
	0, 0, 0, 253, 254, 0, 0, 0, 259, 0,
	271, 0, 0, 498, 500, 501, 0, 0, 499, 248,
	250, 0, 256, 0, 0, 557, 558, 502, 503, 504,
	0, 0, 0, 255, 0, 260, 257,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 477,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:469
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:476
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:510
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:516
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:522
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:529
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:535
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:546
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:559
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:575
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:585
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:591
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:595
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:621
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:633
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:669
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:673
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:683
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:712
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:716
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:726
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:733
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:752
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:756
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:770
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:783
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:794
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:813
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:817
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:821
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:825
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:833
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:845
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:849
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:868
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:886
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:890
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:918
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:922
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:931
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:955
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:959
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:968
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:972
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:982
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:996
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1008
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1020
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1045
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1060
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1065
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1069
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1073
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1079
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1084
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1088
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1092
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1133
		{
			yyVAL.strs = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantAssumption = nil
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1220
		{
			yyVAL.boolean = false
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.boolean = true
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1229
		{
			yyVAL.boolean = false
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yyVAL.boolean = true
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1240
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1248
		{
			yyVAL.procedureParams = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.characteristics = nil
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1337
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1352
		{
			yyVAL.str = ""
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1388
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1392
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1448
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1452
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1456
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1460
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1466
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1478
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1486
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1492
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1496
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1500
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1510
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = BeforeStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = AfterStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = InsertStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = UpdateStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = DeleteStr
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.triggerOrder = nil
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1543
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1563
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1569
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 250:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1573
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1589
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1595
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 255:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1600
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 256:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1605
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 257:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1611
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1629
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1635
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1639
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1643
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1647
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1655
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1680
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1716
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &Resignal{}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.exprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.exprs = nil
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1911
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1938
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2332
		{
			yyVAL.sqlVal = nil
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2341
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2345
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2353
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2363
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2380
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = ""
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = ""
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.colKeyOpt = colKey
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2458
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2462
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2467
		{
			yyVAL.indexOptions = nil
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = ""
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2516
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2524
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2533
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2537
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2570
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.str = yyDollar[1].str
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2593
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2617
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 483:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2623
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 484:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2627
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 485:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2631
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 486:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2635
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 487:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2639
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2663
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2725
		{
			yyVAL.boolean = true
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.boolean = true
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.boolean = false
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = ""
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = yyDollar[1].str
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = string("")
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2803
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2826
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2833
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2840
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2844
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 530:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2853
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 531:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2857
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2871
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2889
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2896
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2906
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2918
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2923
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2927
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2931
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 548:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2939
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.columnOrder = nil
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2959
		{
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
		}
	case 554:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2965
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2981
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2985
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3001
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3005
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3017
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3023
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3031
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3035
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3043
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3051
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3059
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3067
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3075
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3083
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3092
		{

		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3126
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3130
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3134
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3138
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3142
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3146
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3154
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3162
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3166
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3174
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3178
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3182
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3186
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3190
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3195
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3204
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3208
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3216
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3230
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3234
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3239
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3243
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3252
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3256
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3276
		{
			yyVAL.boolean = false
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.boolean = true
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3290
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = ""
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.showFilter = nil
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = ""
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = SessionStr
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = GlobalStr
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3338
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.statement = &Begin{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.statement = &Begin{}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3362
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3366
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.statement = &Commit{}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.statement = &Rollback{}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3384
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3390
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3394
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3398
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3402
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3436
		{
			yyVAL.str = ""
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3456
		{
			setAllowComments(yylex, true)
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3460
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3466
		{
			yyVAL.bytes2 = nil
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3470
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.str = UnionStr
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = UnionAllStr
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = UnionDistinctStr
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3489
		{
			yyVAL.byt = 0
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.byt = 1
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = SQLCacheStr
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = ""
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = DistinctStr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = StraightJoinHint
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3542
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3565
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3583
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3589
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 685:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3597
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3603
		{
			yyVAL.over = nil
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3607
		{
			yyVAL.over = yyDollar[1].over
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.frame = nil
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3627
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3703
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3717
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3785
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3796
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3811
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3815
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3819
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3823
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3834
		{
			yyVAL.expr = nil
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3843
		{
			yyVAL.columns = nil
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3892
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3900
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3904
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3915
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.empty = struct{}{}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = JoinStr
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = JoinStr
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.str = JoinStr
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = StraightJoinStr
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = LeftJoinStr
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = LeftJoinStr
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = RightJoinStr
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = RightJoinStr
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = NaturalJoinStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4010
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4015
		{
			yyVAL.indexHints = nil
		}
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4019
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4023
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4027
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.expr = nil
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4046
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4050
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4058
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4076
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4100
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4104
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4108
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4112
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4116
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4120
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4124
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4128
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.str = IsNullStr
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = IsNotNullStr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = IsTrueStr
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = IsNotTrueStr
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = IsFalseStr
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = IsNotFalseStr
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = EqualStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = LessThanStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.str = GreaterThanStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = LessEqualStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = GreaterEqualStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = NotEqualStr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4189
		{
			yyVAL.expr = nil
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4193
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4213
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4229
		{
			yyVAL.selectExprs = nil
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4240
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4352
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4360
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4374
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4378
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4402
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4406
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 855:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4416
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4420
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4428
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4464
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4489
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4509
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4513
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4525
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4560
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4564
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 890:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 891:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 892:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 898:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 899:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 901:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4664
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4696
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4700
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4704
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4737
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4741
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4745
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4751
		{
			yyVAL.str = ""
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = BooleanModeStr
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4759
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = QueryExpansionStr
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4799
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4813
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4825
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4833
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = nil
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = string("")
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4857
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4867
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = nil
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4882
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4890
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &NullVal{}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4943
		{
			yyVAL.exprs = nil
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = nil
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4983
		{
			yyVAL.orderBy = nil
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5003
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5008
		{
			yyVAL.str = AscScr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = AscScr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = DescScr
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5021
		{
			yyVAL.limit = nil
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5029
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5033
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5048
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5052
		{
			yyVAL.str = ForUpdateStr
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5056
		{
			yyVAL.str = ShareModeStr
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5073
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5077
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5081
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5086
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5090
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5094
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5105
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5113
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			yyVAL.assignExprs = nil
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5122
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5142
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5148
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5168
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5177
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5183
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5193
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5217
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5230
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5240
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5250
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5260
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5264
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5268
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5275
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5282
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = &Default{}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5299
		{
			yyVAL.byt = 0
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.byt = 1
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5304
		{
			yyVAL.byt = 0
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5306
		{
			yyVAL.byt = 1
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5309
		{
			yyVAL.byt = 0
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.byt = 1
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = IgnoreStr
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5319
		{
			yyVAL.sqlVal = nil
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5321
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.empty = struct{}{}
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.empty = struct{}{}
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5330
		{
			yyVAL.empty = struct{}{}
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5332
		{
			yyVAL.empty = struct{}{}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.empty = struct{}{}
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = UniqueStr
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = FulltextStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = SpatialStr
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = ""
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5350
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5352
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5366
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5370
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = string("")
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5404
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5409
		{
			yyVAL.EnclosedBy = nil
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5413
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5418
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5427
		{
			yyVAL.sqlVal = nil
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5431
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5436
		{
			yyVAL.sqlVal = nil
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5440
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5445
		{
			yyVAL.Fields = nil
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5449
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5454
		{
			yyVAL.Lines = nil
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5458
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5463
		{
			yyVAL.sqlVal = nil
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5467
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5473
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5483
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5489
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5493
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.lockType = LockRead
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5503
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.lockType = LockWrite
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5511
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5517
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5523
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5527
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5972
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
