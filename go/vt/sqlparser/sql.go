// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const UNIQUE = 57377
const KEY = 57378
const SYSTEM_TIME = 57379
const VALUES = 57380
const LAST_INSERT_ID = 57381
const NEXT = 57382
const VALUE = 57383
const SHARE = 57384
const MODE = 57385
const SQL_NO_CACHE = 57386
const SQL_CACHE = 57387
const JOIN = 57388
const STRAIGHT_JOIN = 57389
const LEFT = 57390
const RIGHT = 57391
const INNER = 57392
const OUTER = 57393
const CROSS = 57394
const NATURAL = 57395
const USE = 57396
const FORCE = 57397
const ON = 57398
const USING = 57399
const ID = 57400
const HEX = 57401
const STRING = 57402
const INTEGRAL = 57403
const FLOAT = 57404
const HEXNUM = 57405
const VALUE_ARG = 57406
const LIST_ARG = 57407
const COMMENT = 57408
const COMMENT_KEYWORD = 57409
const BIT_LITERAL = 57410
const NULL = 57411
const TRUE = 57412
const FALSE = 57413
const OFF = 57414
const OR = 57415
const AND = 57416
const NOT = 57417
const BETWEEN = 57418
const CASE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const ELSEIF = 57423
const END = 57424
const LE = 57425
const GE = 57426
const NE = 57427
const NULL_SAFE_EQUAL = 57428
const IS = 57429
const LIKE = 57430
const REGEXP = 57431
const IN = 57432
const SHIFT_LEFT = 57433
const SHIFT_RIGHT = 57434
const DIV = 57435
const MOD = 57436
const UNARY = 57437
const COLLATE = 57438
const BINARY = 57439
const UNDERSCORE_BINARY = 57440
const UNDERSCORE_UTF8MB4 = 57441
const INTERVAL = 57442
const JSON_EXTRACT_OP = 57443
const JSON_UNQUOTE_EXTRACT_OP = 57444
const CREATE = 57445
const ALTER = 57446
const DROP = 57447
const RENAME = 57448
const ANALYZE = 57449
const ADD = 57450
const FLUSH = 57451
const MODIFY = 57452
const CHANGE = 57453
const SCHEMA = 57454
const TABLE = 57455
const INDEX = 57456
const INDEXES = 57457
const VIEW = 57458
const TO = 57459
const IGNORE = 57460
const IF = 57461
const PRIMARY = 57462
const COLUMN = 57463
const SPATIAL = 57464
const FULLTEXT = 57465
const KEY_BLOCK_SIZE = 57466
const CHECK = 57467
const ACTION = 57468
const CASCADE = 57469
const CONSTRAINT = 57470
const FOREIGN = 57471
const NO = 57472
const REFERENCES = 57473
const RESTRICT = 57474
const FIRST = 57475
const AFTER = 57476
const SHOW = 57477
const DESCRIBE = 57478
const EXPLAIN = 57479
const DATE = 57480
const ESCAPE = 57481
const REPAIR = 57482
const OPTIMIZE = 57483
const TRUNCATE = 57484
const FORMAT = 57485
const MAXVALUE = 57486
const PARTITION = 57487
const REORGANIZE = 57488
const LESS = 57489
const THAN = 57490
const PROCEDURE = 57491
const TRIGGER = 57492
const TRIGGERS = 57493
const FUNCTION = 57494
const VINDEX = 57495
const VINDEXES = 57496
const STATUS = 57497
const VARIABLES = 57498
const WARNINGS = 57499
const CODE = 57500
const SEQUENCE = 57501
const EACH = 57502
const ROW = 57503
const BEFORE = 57504
const FOLLOWS = 57505
const PRECEDES = 57506
const DEFINER = 57507
const INVOKER = 57508
const INOUT = 57509
const OUT = 57510
const DETERMINISTIC = 57511
const CONTAINS = 57512
const READS = 57513
const MODIFIES = 57514
const SQL = 57515
const DATA = 57516
const SECURITY = 57517
const CLASS_ORIGIN = 57518
const SUBCLASS_ORIGIN = 57519
const MESSAGE_TEXT = 57520
const MYSQL_ERRNO = 57521
const CONSTRAINT_CATALOG = 57522
const CONSTRAINT_SCHEMA = 57523
const CONSTRAINT_NAME = 57524
const CATALOG_NAME = 57525
const SCHEMA_NAME = 57526
const TABLE_NAME = 57527
const COLUMN_NAME = 57528
const CURSOR_NAME = 57529
const SIGNAL = 57530
const SQLSTATE = 57531
const BEGIN = 57532
const START = 57533
const TRANSACTION = 57534
const COMMIT = 57535
const ROLLBACK = 57536
const BIT = 57537
const TINYINT = 57538
const SMALLINT = 57539
const MEDIUMINT = 57540
const INT = 57541
const INTEGER = 57542
const BIGINT = 57543
const INTNUM = 57544
const REAL = 57545
const DOUBLE = 57546
const FLOAT_TYPE = 57547
const DECIMAL = 57548
const NUMERIC = 57549
const DEC = 57550
const FIXED = 57551
const PRECISION = 57552
const TIME = 57553
const TIMESTAMP = 57554
const DATETIME = 57555
const YEAR = 57556
const CHAR = 57557
const VARCHAR = 57558
const BOOL = 57559
const CHARACTER = 57560
const VARBINARY = 57561
const NCHAR = 57562
const NVARCHAR = 57563
const NATIONAL = 57564
const VARYING = 57565
const TEXT = 57566
const TINYTEXT = 57567
const MEDIUMTEXT = 57568
const LONGTEXT = 57569
const LONG = 57570
const BLOB = 57571
const TINYBLOB = 57572
const MEDIUMBLOB = 57573
const LONGBLOB = 57574
const JSON = 57575
const ENUM = 57576
const GEOMETRY = 57577
const POINT = 57578
const LINESTRING = 57579
const POLYGON = 57580
const GEOMETRYCOLLECTION = 57581
const MULTIPOINT = 57582
const MULTILINESTRING = 57583
const MULTIPOLYGON = 57584
const NULLX = 57585
const AUTO_INCREMENT = 57586
const APPROXNUM = 57587
const SIGNED = 57588
const UNSIGNED = 57589
const ZEROFILL = 57590
const COLLATION = 57591
const DATABASES = 57592
const SCHEMAS = 57593
const TABLES = 57594
const VITESS_METADATA = 57595
const VSCHEMA = 57596
const FULL = 57597
const PROCESSLIST = 57598
const COLUMNS = 57599
const FIELDS = 57600
const ENGINES = 57601
const PLUGINS = 57602
const NAMES = 57603
const CHARSET = 57604
const GLOBAL = 57605
const SESSION = 57606
const ISOLATION = 57607
const LEVEL = 57608
const READ = 57609
const WRITE = 57610
const ONLY = 57611
const REPEATABLE = 57612
const COMMITTED = 57613
const UNCOMMITTED = 57614
const SERIALIZABLE = 57615
const CURRENT_TIMESTAMP = 57616
const DATABASE = 57617
const CURRENT_DATE = 57618
const CURRENT_USER = 57619
const CURRENT_TIME = 57620
const LOCALTIME = 57621
const LOCALTIMESTAMP = 57622
const UTC_DATE = 57623
const UTC_TIME = 57624
const UTC_TIMESTAMP = 57625
const REPLACE = 57626
const CONVERT = 57627
const CAST = 57628
const SUBSTR = 57629
const SUBSTRING = 57630
const GROUP_CONCAT = 57631
const SEPARATOR = 57632
const TIMESTAMPADD = 57633
const TIMESTAMPDIFF = 57634
const OVER = 57635
const WINDOW = 57636
const GROUPING = 57637
const GROUPS = 57638
const AVG = 57639
const BIT_AND = 57640
const BIT_OR = 57641
const BIT_XOR = 57642
const COUNT = 57643
const JSON_ARRAYAGG = 57644
const JSON_OBJECTAGG = 57645
const MAX = 57646
const MIN = 57647
const STDDEV_POP = 57648
const STDDEV = 57649
const STD = 57650
const STDDEV_SAMP = 57651
const SUM = 57652
const VAR_POP = 57653
const VARIANCE = 57654
const VAR_SAMP = 57655
const CUME_DIST = 57656
const DENSE_RANK = 57657
const FIRST_VALUE = 57658
const LAG = 57659
const LAST_VALUE = 57660
const LEAD = 57661
const NTH_VALUE = 57662
const NTILE = 57663
const ROW_NUMBER = 57664
const PERCENT_RANK = 57665
const RANK = 57666
const MATCH = 57667
const AGAINST = 57668
const BOOLEAN = 57669
const LANGUAGE = 57670
const WITH = 57671
const QUERY = 57672
const EXPANSION = 57673
const UNUSED = 57674
const ARRAY = 57675
const DESCRIPTION = 57676
const EMPTY = 57677
const EXCEPT = 57678
const JSON_TABLE = 57679
const LATERAL = 57680
const MEMBER = 57681
const RECURSIVE = 57682
const ACTIVE = 57683
const ADMIN = 57684
const BUCKETS = 57685
const CLONE = 57686
const COMPONENT = 57687
const DEFINITION = 57688
const ENFORCED = 57689
const EXCLUDE = 57690
const FOLLOWING = 57691
const GEOMCOLLECTION = 57692
const GET_MASTER_PUBLIC_KEY = 57693
const HISTOGRAM = 57694
const HISTORY = 57695
const INACTIVE = 57696
const INVISIBLE = 57697
const LOCKED = 57698
const MASTER_COMPRESSION_ALGORITHMS = 57699
const MASTER_PUBLIC_KEY_PATH = 57700
const MASTER_TLS_CIPHERSUITES = 57701
const MASTER_ZSTD_COMPRESSION_LEVEL = 57702
const NESTED = 57703
const NETWORK_NAMESPACE = 57704
const NOWAIT = 57705
const NULLS = 57706
const OJ = 57707
const OLD = 57708
const OPTIONAL = 57709
const ORDINALITY = 57710
const ORGANIZATION = 57711
const OTHERS = 57712
const PATH = 57713
const PERSIST = 57714
const PERSIST_ONLY = 57715
const PRECEDING = 57716
const PRIVILEGE_CHECKS_USER = 57717
const PROCESS = 57718
const RANDOM = 57719
const REFERENCE = 57720
const REQUIRE_ROW_FORMAT = 57721
const RESOURCE = 57722
const RESPECT = 57723
const RESTART = 57724
const RETAIN = 57725
const REUSE = 57726
const ROLE = 57727
const SECONDARY = 57728
const SECONDARY_ENGINE = 57729
const SECONDARY_LOAD = 57730
const SECONDARY_UNLOAD = 57731
const SKIP = 57732
const SRID = 57733
const THREAD_PRIORITY = 57734
const TIES = 57735
const UNBOUNDED = 57736
const VCPU = 57737
const VISIBLE = 57738
const SYSTEM = 57739

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CODE",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"DATA",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 33,
	-2, 4,
	-1, 35,
	131, 864,
	-2, 128,
	-1, 43,
	172, 470,
	173, 470,
	-2, 458,
	-1, 50,
	1, 1229,
	415, 1229,
	-2, 490,
	-1, 366,
	117, 872,
	-2, 868,
	-1, 367,
	117, 873,
	-2, 869,
	-1, 468,
	87, 1153,
	117, 1153,
	-2, 69,
	-1, 469,
	87, 1064,
	117, 1064,
	-2, 70,
	-1, 474,
	87, 1023,
	117, 1023,
	-2, 833,
	-1, 476,
	87, 1097,
	117, 1097,
	-2, 835,
	-1, 680,
	5, 33,
	-2, 484,
	-1, 684,
	5, 33,
	-2, 483,
	-1, 904,
	1, 542,
	5, 542,
	12, 542,
	13, 542,
	14, 542,
	15, 542,
	17, 542,
	19, 542,
	30, 542,
	31, 542,
	46, 542,
	47, 542,
	48, 542,
	49, 542,
	50, 542,
	52, 542,
	53, 542,
	56, 542,
	57, 542,
	59, 542,
	60, 542,
	415, 542,
	-2, 567,
	-1, 907,
	57, 50,
	59, 50,
	-2, 54,
	-1, 1099,
	117, 875,
	-2, 871,
	-1, 1258,
	58, 326,
	-2, 993,
	-1, 1261,
	58, 322,
	61, 322,
	-2, 929,
	-1, 1262,
	58, 323,
	61, 323,
	-2, 939,
	-1, 1337,
	58, 395,
	61, 395,
	-2, 359,
	-1, 1386,
	5, 34,
	-2, 632,
	-1, 1446,
	5, 33,
	-2, 810,
	-1, 1541,
	5, 33,
	-2, 71,
	-1, 1684,
	1, 587,
	5, 587,
	12, 587,
	13, 587,
	14, 587,
	15, 587,
	17, 587,
	19, 587,
	30, 587,
	31, 587,
	46, 587,
	47, 587,
	48, 587,
	49, 587,
	50, 587,
	52, 587,
	53, 587,
	56, 587,
	57, 587,
	59, 587,
	60, 587,
	415, 587,
	-2, 567,
	-1, 1801,
	5, 34,
	-2, 811,
	-1, 1831,
	5, 33,
	-2, 71,
	-1, 1888,
	5, 33,
	-2, 813,
	-1, 1969,
	5, 33,
	-2, 103,
	-1, 2021,
	5, 34,
	-2, 814,
	-1, 2070,
	415, 181,
	-2, 33,
}

const yyPrivate = 57344

const yyLast = 21859

var yyAct = [...]int{
	400, 58, 2110, 2132, 2100, 2025, 2068, 2012, 2101, 1814,
	1303, 1968, 2078, 2003, 464, 1221, 2073, 7, 1595, 69,
	2072, 6, 2076, 2069, 2077, 24, 2075, 2049, 2071, 5,
	1697, 2074, 8, 1592, 1866, 1214, 644, 371, 399, 1246,
	1850, 1664, 1263, 1698, 1758, 1835, 829, 1496, 1074, 1301,
	330, 2026, 1216, 1255, 1549, 1212, 1665, 1740, 1902, 58,
	345, 384, 1661, 1208, 1296, 1671, 90, 1259, 1329, 1245,
	1675, 1612, 350, 1124, 1137, 1210, 1646, 1252, 1569, 1024,
	1472, 1160, 932, 1570, 1043, 1032, 1291, 1152, 901, 369,
	1533, 900, 1009, 920, 1199, 701, 1101, 479, 373, 707,
	919, 467, 331, 332, 751, 620, 335, 482, 1192, 462,
	459, 354, 909, 2153, 2149, 2139, 2122, 470, 1240, 480,
	845, 2112, 2104, 2095, 2052, 68, 2114, 2042, 846, 2099,
	2018, 2084, 1759, 2041, 1629, 1415, 1786, 73, 364, 619,
	1481, 1693, 1694, 1480, 1692, 742, 1482, 647, 1235, 1236,
	358, 1949, 794, 793, 803, 804, 796, 797, 798, 799,
	800, 801, 802, 795, 1234, 667, 805, 75, 76, 77,
	78, 79, 2017, 334, 333, 59, 31, 32, 921, 677,
	922, 2070, 3, 1516, 1265, 1155, 28, 642, 59, 31,
	32, 1279, 341, 622, 343, 625, 1597, 33, 1836, 1267,
	1267, 1271, 1273, 92, 1272, 413, 1838, 419, 421, 420,
	417, 418, 416, 415, 414, 646, 650, 1873, 1285, 652,
	1280, 1280, 422, 423, 1777, 344, 100, 96, 97, 1292,
	98, 1645, 1775, 337, 1925, 1995, 1994, 1924, 66, 1923,
	339, 1922, 1921, 1613, 85, 1919, 1920, 1550, 1996, 1997,
	2046, 2047, 648, 651, 2027, 649, 1310, 1967, 28, 1064,
	59, 31, 32, 102, 101, 1065, 670, 662, 663, 675,
	671, 668, 669, 661, 1599, 1841, 660, 676, 659, 1062,
	2098, 658, 33, 1551, 1309, 1615, 2004, 1598, 624, 623,
	2083, 1965, 1701, 1594, 1193, 2145, 327, 87, 89, 1063,
	1574, 84, 2154, 643, 343, 643, 643, 94, 93, 2151,
	66, 1066, 1903, 643, 1839, 1840, 1842, 1843, 1844, 643,
	1851, 1852, 70, 2140, 2123, 1905, 621, 58, 58, 630,
	342, 1861, 328, 1991, 1554, 999, 2107, 2111, 2106, 990,
	1471, 1470, 1469, 681, 617, 695, 299, 683, 95, 1360,
	91, 58, 1359, 1617, 1957, 682, 1804, 2136, 1621, 1860,
	1616, 92, 1614, 709, 817, 818, 814, 1619, 738, 816,
	1552, 1553, 1241, 1485, 2079, 1477, 755, 1494, 645, 1375,
	1618, 1523, 1270, 1072, 686, 687, 928, 915, 1992, 99,
	785, 1280, 638, 1620, 1622, 1494, 1904, 805, 1294, 827,
	1950, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 1230, 844, 847, 847, 847, 853, 847, 847,
	853, 847, 853, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 56, 905, 2079,
	86, 1069, 1494, 2016, 1396, 94, 93, 815, 60, 1791,
	1859, 2134, 1493, 1837, 2135, 28, 2133, 59, 31, 32,
	917, 60, 1589, 795, 1217, 1219, 805, 1497, 1393, 740,
	1493, 1039, 653, 654, 750, 1494, 1578, 1574, 1026, 33,
	664, 1575, 1717, 470, 1582, 1584, 678, 1593, 680, 684,
	1938, 672, 1033, 819, 820, 821, 822, 823, 824, 825,
	826, 1579, 82, 700, 1334, 693, 923, 66, 1494, 685,
	749, 748, 739, 899, 748, 848, 850, 852, 854, 856,
	858, 859, 861, 849, 851, 1319, 855, 857, 750, 860,
	1991, 750, 626, 60, 1718, 2152, 904, 1493, 1631, 81,
	1348, 656, 1153, 2138, 28, 1218, 59, 31, 32, 908,
	2092, 817, 818, 913, 1347, 992, 28, 1508, 59, 31,
	32, 1025, 828, 1513, 1512, 1705, 1108, 697, 33, 698,
	1493, 745, 699, 1588, 674, 817, 818, 1585, 1034, 629,
	33, 1106, 1107, 1105, 1509, 1992, 1352, 796, 797, 798,
	799, 800, 801, 802, 795, 1346, 66, 805, 1514, 1153,
	1506, 1404, 1964, 1493, 26, 66, 1507, 2023, 66, 1578,
	1574, 1320, 340, 1829, 1575, 1104, 1828, 1576, 1577, 1991,
	1538, 643, 643, 1125, 2148, 1126, 1918, 657, 643, 643,
	643, 1991, 2146, 2050, 1579, 2065, 2129, 2064, 1536, 643,
	1517, 643, 690, 643, 643, 1880, 1344, 1338, 1339, 1483,
	1337, 1484, 1340, 1341, 56, 1826, 2079, 1710, 798, 799,
	800, 801, 802, 795, 689, 1511, 805, 749, 748, 2126,
	2111, 2125, 1534, 2050, 1992, 2147, 349, 643, 632, 633,
	634, 635, 636, 1075, 1076, 750, 1992, 1350, 1353, 456,
	457, 880, 881, 882, 883, 884, 868, 869, 870, 885,
	886, 871, 872, 873, 879, 887, 874, 875, 876, 877,
	878, 890, 889, 888, 891, 892, 894, 893, 895, 1059,
	1000, 1028, 1391, 1082, 1390, 1331, 1011, 1321, 2063, 749,
	748, 1014, 1015, 1035, 749, 748, 2142, 360, 1077, 1057,
	2062, 749, 748, 56, 1962, 2079, 1083, 750, 755, 1084,
	60, 1739, 750, 1932, 1741, 56, 1497, 2079, 1928, 750,
	1345, 28, 1741, 59, 31, 32, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1857, 1078,
	749, 748, 1897, 2085, 1071, 33, 1343, 2094, 694, 1510,
	1091, 1093, 1094, 1037, 1392, 1761, 1092, 58, 750, 1820,
	2082, 1926, 1098, 749, 748, 2036, 694, 1102, 1012, 1013,
	2051, 1755, 831, 66, 1751, 1016, 1017, 1018, 1820, 2033,
	28, 750, 59, 31, 32, 1070, 1023, 1349, 1027, 1748,
	1029, 1030, 1080, 1372, 1373, 1374, 1991, 1095, 1746, 60,
	1745, 2121, 749, 748, 33, 749, 748, 749, 748, 1897,
	2007, 60, 1633, 1820, 1966, 1142, 1145, 1735, 1097, 1734,
	750, 1733, 1154, 750, 1061, 750, 1561, 1103, 1897, 1958,
	1897, 1908, 66, 1099, 1351, 389, 388, 391, 392, 393,
	394, 1897, 694, 1912, 390, 395, 1211, 1128, 1129, 1560,
	905, 1992, 1820, 1819, 905, 1991, 1490, 1201, 1204, 1205,
	1206, 1202, 1317, 1203, 1207, 1079, 1100, 1676, 1677, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1316, 1166, 1127, 1168, 1806, 694,
	1803, 694, 1725, 1724, 470, 1721, 1722, 1721, 1720, 1387,
	694, 1196, 694, 1133, 1335, 1242, 1041, 1247, 480, 1008,
	1992, 1133, 694, 1131, 1007, 28, 1006, 1005, 997, 995,
	56, 994, 2079, 993, 991, 1225, 1156, 1150, 640, 1227,
	931, 930, 643, 338, 643, 1911, 911, 911, 828, 1444,
	1662, 1730, 70, 916, 904, 28, 1711, 1445, 904, 1473,
	916, 1603, 904, 1135, 1132, 1134, 1223, 2039, 1231, 1232,
	1139, 1243, 70, 1011, 1228, 1175, 1176, 66, 1473, 1250,
	1180, 1195, 1224, 1183, 910, 1799, 1099, 1887, 1188, 56,
	28, 2079, 912, 912, 914, 910, 1133, 1937, 1196, 1731,
	1298, 1299, 1300, 1723, 1164, 1165, 1196, 66, 351, 1387,
	1196, 1171, 1172, 1173, 1174, 1486, 1387, 1233, 1387, 1293,
	1295, 1409, 1408, 1333, 1315, 916, 60, 1201, 1204, 1205,
	1206, 1202, 910, 1203, 1207, 1073, 998, 828, 66, 709,
	2044, 2034, 66, 1930, 1868, 1830, 1267, 1809, 1297, 1376,
	1704, 1676, 1677, 1596, 704, 708, 1292, 1489, 1311, 1098,
	66, 1287, 1286, 692, 1302, 1328, 1869, 2118, 2116, 2102,
	1729, 786, 1679, 1662, 1539, 1040, 367, 1002, 1459, 1885,
	1682, 1457, 1681, 1460, 1086, 60, 1458, 1456, 1455, 2059,
	1281, 1282, 1283, 1284, 1102, 794, 793, 803, 804, 796,
	797, 798, 799, 800, 801, 802, 795, 1361, 830, 805,
	1461, 2040, 1205, 1206, 1600, 1243, 355, 356, 107, 843,
	2056, 107, 1370, 1364, 1365, 1369, 1499, 107, 1381, 1305,
	1099, 1307, 793, 803, 804, 796, 797, 798, 799, 800,
	801, 802, 795, 1447, 1448, 805, 1750, 905, 905, 905,
	905, 905, 1377, 1330, 1103, 107, 1709, 1564, 107, 484,
	1449, 107, 1211, 1384, 1465, 743, 744, 1708, 1491, 1527,
	702, 929, 107, 688, 484, 905, 641, 1797, 1075, 1076,
	107, 694, 703, 470, 741, 1864, 1306, 1001, 1542, 1403,
	1325, 1414, 1416, 743, 744, 1378, 1379, 1380, 1422, 1423,
	1424, 1425, 1468, 1209, 989, 1368, 1266, 352, 353, 1915,
	346, 1463, 1943, 1367, 1884, 347, 70, 1942, 1467, 794,
	793, 803, 804, 796, 797, 798, 799, 800, 801, 802,
	795, 1871, 1247, 805, 1473, 1487, 1451, 1452, 1450, 1454,
	1397, 1453, 1544, 1545, 1546, 904, 904, 904, 904, 904,
	1474, 1394, 1462, 1031, 58, 746, 1475, 1498, 1476, 2119,
	904, 2120, 2119, 1383, 2120, 643, 1954, 643, 643, 1707,
	1068, 1386, 1388, 904, 1389, 1492, 1495, 1478, 72, 74,
	1395, 1983, 46, 1398, 1399, 1400, 1985, 19, 1984, 18,
	1406, 49, 1407, 1986, 20, 1410, 1411, 67, 1412, 1413,
	1987, 21, 1417, 1418, 1419, 1420, 1421, 1982, 15, 1981,
	14, 1975, 10, 1428, 1429, 1430, 1, 1432, 1433, 1834,
	1435, 1436, 1437, 1438, 1446, 1440, 1441, 1442, 1535, 1989,
	25, 1537, 1980, 13, 1977, 12, 1833, 1568, 1976, 11,
	1974, 9, 1548, 1135, 1547, 691, 1464, 1572, 1526, 1559,
	1528, 1529, 1530, 1531, 1563, 1571, 1583, 1587, 1760, 1562,
	1161, 1865, 1605, 1342, 2002, 1573, 1637, 1580, 1566, 1590,
	1591, 1630, 1581, 1253, 1567, 1244, 107, 478, 80, 484,
	1036, 484, 484, 1318, 655, 1855, 307, 1251, 1504, 484,
	1503, 1500, 1515, 1264, 1502, 484, 1667, 1607, 58, 1501,
	830, 1505, 936, 934, 935, 933, 938, 937, 1606, 1663,
	1518, 1519, 1611, 311, 1624, 1623, 465, 1525, 107, 1565,
	1686, 1687, 1688, 924, 747, 88, 50, 1532, 1858, 1586,
	1336, 83, 470, 1209, 1666, 1541, 1038, 754, 665, 666,
	313, 813, 1689, 1366, 1638, 1639, 1640, 1641, 1642, 1479,
	471, 1669, 1555, 1685, 1557, 1558, 1088, 1089, 2045, 706,
	2008, 1941, 1870, 1402, 1217, 1219, 842, 1151, 372, 2011,
	1090, 1609, 1605, 1247, 1680, 1247, 387, 386, 1696, 385,
	1673, 1683, 1625, 1626, 382, 1627, 1628, 383, 1324, 1081,
	1702, 1443, 787, 1703, 1700, 370, 362, 1634, 1635, 903,
	896, 1200, 1727, 1728, 1198, 1691, 1695, 1197, 794, 793,
	803, 804, 796, 797, 798, 799, 800, 801, 802, 795,
	1610, 1003, 805, 460, 1678, 1674, 902, 1602, 673, 326,
	1785, 1948, 1085, 107, 107, 107, 30, 71, 357, 830,
	17, 679, 22, 1140, 1141, 1218, 16, 627, 484, 34,
	38, 37, 36, 1543, 905, 1684, 1308, 336, 1044, 1042,
	2108, 2048, 1643, 1644, 2031, 1990, 23, 1649, 2086, 1743,
	1652, 1742, 4, 348, 27, 1657, 2, 0, 0, 1668,
	1784, 0, 1747, 1732, 0, 0, 0, 1712, 1713, 1744,
	0, 0, 1737, 0, 1716, 0, 0, 1706, 1754, 0,
	0, 1719, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 1647, 1648, 0, 1650, 1651, 0, 1653, 1654, 1655,
	1656, 0, 1658, 1659, 1660, 0, 0, 0, 0, 1766,
	0, 1239, 1773, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 1816, 1817, 0,
	0, 0, 904, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 1714, 0, 1822, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 1798, 0, 0, 58,
	0, 0, 1247, 0, 0, 1487, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 1768, 1813, 0,
	1818, 0, 107, 0, 0, 0, 107, 0, 0, 107,
	0, 0, 0, 0, 0, 107, 0, 484, 484, 1823,
	0, 0, 0, 0, 484, 484, 484, 107, 107, 107,
	0, 0, 107, 0, 1322, 484, 1845, 484, 0, 484,
	484, 0, 1767, 1854, 0, 1862, 1867, 1849, 1769, 1700,
	1667, 0, 0, 1889, 0, 0, 0, 0, 0, 1778,
	1779, 0, 1856, 1863, 0, 0, 1846, 1847, 1848, 1894,
	0, 0, 107, 484, 1853, 0, 0, 107, 1362, 1363,
	0, 708, 0, 1824, 0, 0, 0, 0, 1666, 0,
	0, 0, 1914, 0, 1916, 0, 0, 0, 0, 0,
	0, 0, 0, 1800, 1801, 1802, 1886, 1805, 0, 0,
	0, 1913, 0, 0, 1906, 1936, 1896, 1895, 1893, 1811,
	1907, 1901, 0, 107, 0, 1792, 1793, 0, 1939, 754,
	1917, 1794, 0, 0, 1795, 0, 0, 0, 1667, 1796,
	58, 1385, 0, 0, 0, 0, 1929, 0, 0, 0,
	0, 1927, 0, 1931, 1935, 0, 0, 0, 398, 0,
	1831, 1405, 1825, 1934, 1827, 0, 0, 58, 0, 1874,
	1875, 1876, 1877, 1878, 0, 0, 1666, 1881, 1882, 1955,
	0, 1953, 1959, 1972, 0, 0, 0, 1971, 1963, 1979,
	0, 1988, 0, 1978, 1909, 1970, 1910, 0, 1973, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 2010, 2014,
	1961, 1999, 0, 1872, 0, 0, 0, 0, 0, 2020,
	0, 1879, 2005, 2019, 1867, 1247, 1883, 1998, 2006, 2028,
	0, 2000, 0, 0, 1888, 0, 2001, 0, 472, 484,
	484, 481, 470, 0, 58, 0, 0, 0, 0, 0,
	1898, 0, 1899, 1900, 0, 2032, 631, 0, 0, 0,
	1972, 0, 0, 0, 1971, 0, 1979, 0, 1988, 0,
	1978, 0, 1970, 0, 107, 1973, 2038, 0, 0, 0,
	0, 0, 107, 107, 0, 0, 107, 107, 0, 2053,
	107, 107, 107, 0, 0, 0, 0, 2058, 0, 0,
	2055, 0, 58, 58, 2060, 2014, 2061, 484, 484, 0,
	1944, 1945, 1946, 1947, 2081, 2054, 58, 1951, 1952, 1972,
	0, 1956, 2093, 1971, 2087, 1979, 2066, 1988, 2091, 1978,
	58, 1970, 2090, 2057, 1973, 1961, 2096, 0, 2097, 0,
	2089, 0, 0, 2088, 0, 58, 58, 2103, 1969, 2113,
	0, 2105, 0, 0, 0, 58, 2117, 0, 58, 2115,
	0, 2127, 0, 58, 2124, 0, 0, 107, 484, 2109,
	484, 0, 0, 58, 2137, 107, 107, 58, 2109, 107,
	0, 0, 0, 2141, 2015, 0, 2109, 0, 0, 0,
	58, 0, 2021, 58, 0, 0, 2109, 0, 0, 2150,
	58, 0, 0, 0, 58, 0, 0, 0, 107, 0,
	107, 107, 1632, 2109, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 2109, 0, 1969, 0, 2109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 107,
	107, 107, 107, 107, 0, 0, 1268, 1269, 0, 1274,
	1275, 1276, 1277, 1278, 0, 2043, 0, 0, 0, 0,
	0, 481, 0, 481, 481, 0, 0, 1288, 1289, 1290,
	0, 481, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 1690, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 1138, 0, 0, 0, 1144, 1147,
	1148, 1149, 2130, 803, 804, 796, 797, 798, 799, 800,
	801, 802, 795, 958, 0, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 1162, 1163, 0,
	0, 0, 1167, 0, 1169, 1170, 0, 0, 0, 0,
	0, 0, 1177, 1178, 1179, 0, 1181, 1182, 0, 1184,
	1185, 1186, 1187, 0, 1189, 1190, 1191, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 2143, 2144, 0, 0,
	0, 0, 0, 107, 107, 107, 107, 107, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 107, 0,
	0, 0, 107, 0, 0, 0, 945, 0, 0, 0,
	1756, 107, 794, 793, 803, 804, 796, 797, 798, 799,
	800, 801, 802, 795, 0, 0, 805, 0, 0, 0,
	0, 0, 484, 0, 472, 0, 0, 0, 0, 0,
	925, 0, 0, 789, 0, 792, 0, 0, 959, 0,
	0, 1787, 806, 807, 808, 809, 810, 811, 812, 0,
	790, 791, 788, 794, 793, 803, 804, 796, 797, 798,
	799, 800, 801, 802, 795, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 1783, 830, 0, 0, 0, 484,
	0, 0, 0, 0, 1808, 0, 0, 1810, 0, 0,
	0, 484, 107, 484, 484, 972, 975, 976, 977, 978,
	979, 980, 0, 981, 982, 983, 984, 985, 986, 987,
	0, 960, 961, 962, 963, 939, 943, 973, 940, 946,
	942, 944, 941, 0, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 957, 964, 965, 966, 967, 968,
	969, 970, 971, 107, 0, 0, 1371, 0, 0, 0,
	0, 0, 484, 794, 793, 803, 804, 796, 797, 798,
	799, 800, 801, 802, 795, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 0, 988, 1520, 1521, 1522,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 0, 0, 0, 481,
	481, 705, 0, 0, 0, 0, 481, 481, 481, 0,
	0, 1401, 0, 0, 0, 0, 0, 481, 0, 481,
	0, 481, 481, 0, 484, 484, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 1427, 0, 0,
	0, 1431, 484, 105, 1434, 0, 325, 0, 0, 1439,
	0, 0, 105, 0, 0, 481, 0, 0, 0, 0,
	0, 0, 484, 484, 0, 484, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	463, 473, 0, 105, 0, 0, 105, 0, 0, 0,
	0, 0, 830, 0, 0, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 28,
	29, 59, 31, 32, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 57, 0, 1782, 0, 0, 0, 65,
	0, 107, 0, 33, 53, 54, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 1788, 0,
	2009, 2013, 1781, 0, 0, 0, 0, 44, 0, 0,
	484, 66, 0, 107, 484, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 484, 484, 484, 0, 0, 0,
	107, 0, 0, 0, 0, 1130, 0, 794, 793, 803,
	804, 796, 797, 798, 799, 800, 801, 802, 795, 2029,
	2030, 805, 0, 472, 794, 793, 803, 804, 796, 797,
	798, 799, 800, 801, 802, 795, 0, 0, 805, 0,
	0, 1157, 1158, 35, 61, 40, 39, 42, 0, 55,
	1715, 794, 793, 803, 804, 796, 797, 798, 799, 800,
	801, 802, 795, 0, 0, 805, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 43, 64, 63, 2067, 0,
	51, 52, 41, 484, 484, 484, 0, 0, 0, 0,
	0, 0, 484, 0, 1780, 472, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 0, 481, 0, 481,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 107, 0, 56, 0,
	45, 62, 0, 47, 48, 0, 0, 0, 0, 2128,
	1770, 1771, 0, 1772, 0, 0, 1774, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 0, 0,
	481, 0, 481, 794, 793, 803, 804, 796, 797, 798,
	799, 800, 801, 802, 795, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 28, 0, 59, 31, 32,
	484, 484, 0, 484, 0, 0, 484, 1608, 107, 57,
	107, 0, 0, 0, 0, 65, 0, 484, 0, 33,
	0, 0, 0, 0, 60, 0, 1821, 484, 794, 793,
	803, 804, 796, 797, 798, 799, 800, 801, 802, 795,
	0, 0, 805, 0, 0, 0, 0, 66, 0, 0,
	0, 481, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 0, 0, 0, 484, 107, 0, 0, 0,
	1991, 0, 0, 0, 0, 2080, 0, 0, 105, 105,
	105, 0, 0, 0, 0, 0, 0, 473, 906, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 35,
	61, 40, 39, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 484, 0, 0,
	104, 0, 0, 0, 484, 484, 0, 0, 0, 329,
	0, 43, 64, 63, 0, 0, 0, 0, 41, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 461, 0, 0,
	477, 0, 0, 618, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 56, 0, 1993, 62, 0, 47,
	48, 484, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 28, 0, 59, 31, 32, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 57, 0,
	0, 484, 318, 0, 65, 0, 0, 0, 33, 0,
	0, 484, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 105, 0, 0, 105, 0, 0, 0, 0, 0,
	1010, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 105, 105, 105, 0, 0, 105, 0, 0,
	0, 1540, 0, 1382, 300, 0, 0, 0, 0, 1991,
	60, 303, 0, 481, 0, 481, 481, 0, 0, 0,
	0, 312, 319, 320, 794, 793, 803, 804, 796, 797,
	798, 799, 800, 801, 802, 795, 0, 105, 805, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 35, 61,
	40, 39, 42, 0, 0, 0, 0, 309, 0, 0,
	310, 0, 0, 0, 1992, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, 0,
	43, 64, 63, 0, 0, 0, 0, 41, 105, 794,
	793, 803, 804, 796, 797, 798, 799, 800, 801, 802,
	795, 0, 0, 805, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 1010, 0, 0,
	0, 0, 0, 56, 0, 1993, 62, 0, 47, 48,
	0, 0, 0, 472, 0, 0, 1670, 1672, 0, 0,
	696, 0, 0, 0, 0, 0, 0, 314, 304, 305,
	0, 315, 316, 324, 1672, 0, 0, 306, 308, 0,
	302, 323, 322, 0, 361, 361, 0, 0, 0, 361,
	361, 361, 361, 0, 481, 481, 473, 481, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 361, 361, 361,
	0, 0, 361, 361, 361, 361, 361, 0, 0, 0,
	0, 0, 0, 361, 361, 361, 0, 361, 361, 60,
	361, 361, 361, 361, 0, 361, 361, 361, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 105, 1220, 0,
	0, 105, 105, 0, 0, 105, 1229, 1010, 473, 0,
	0, 0, 0, 0, 0, 898, 0, 907, 0, 0,
	1010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 1762, 1763, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	105, 105, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 1326, 1327, 0, 0, 0,
	0, 0, 105, 0, 0, 1815, 1815, 1815, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 105, 105, 105, 105, 105, 0,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 0, 0, 996, 0, 0, 0, 461, 0,
	0, 1004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 1019,
	1020, 1021, 0, 0, 1022, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 1891, 1060, 1892, 0, 0, 1815, 1067,
	0, 0, 0, 0, 0, 0, 0, 361, 361, 1699,
	0, 0, 361, 0, 0, 361, 0, 0, 0, 1699,
	361, 0, 0, 0, 0, 0, 0, 473, 105, 105,
	105, 105, 105, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 105, 0, 1087, 0, 1220, 0, 0,
	1933, 0, 0, 0, 0, 0, 105, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1699,
	0, 0, 0, 0, 0, 0, 481, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 2022, 105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 1194, 0, 105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 1312, 1313, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 1355, 1356, 1357, 1358, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1220, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 483, 0, 1248, 1249, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	1488, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 1832, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 1940, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 483, 0, 1248, 1249, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 1604, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 66, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 1258, 1262,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 1261, 0, 288, 599, 535, 534,
	1256, 0, 1257, 158, 175, 124, 109, 119, 1254, 1260,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 1230, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 1096, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 601, 581,
	0, 540, 604, 512, 529, 615, 530, 533, 571, 498,
	552, 205, 527, 499, 0, 516, 489, 523, 490, 513,
	542, 147, 511, 583, 555, 603, 174, 567, 602, 548,
	0, 610, 177, 564, 0, 254, 192, 0, 0, 544,
	590, 550, 579, 539, 573, 505, 563, 605, 528, 569,
	606, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 566, 600, 525, 568, 570,
	487, 565, 0, 493, 500, 614, 596, 519, 520, 521,
	0, 0, 0, 0, 0, 0, 0, 543, 551, 576,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	0, 561, 0, 0, 0, 501, 494, 0, 0, 541,
	0, 0, 0, 504, 0, 518, 577, 0, 485, 155,
	0, 0, 580, 595, 538, 0, 288, 599, 535, 534,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 526, 486, 584, 514, 524, 141, 522,
	234, 209, 279, 0, 558, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 537, 572, 515,
	138, 229, 562, 589, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 491, 0, 256, 282, 298, 128,
	510, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 508, 509, 506, 0, 507, 553,
	554, 607, 608, 609, 578, 502, 0, 591, 592, 0,
	582, 597, 598, 574, 616, 531, 532, 492, 495, 496,
	497, 503, 545, 546, 557, 560, 587, 586, 585, 588,
	593, 612, 611, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 108, 117, 176, 295,
	226, 152, 283, 488, 145, 0, 0, 547, 549, 559,
	575, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 594, 205, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 147, 365,
	0, 0, 0, 174, 0, 0, 0, 0, 412, 177,
	0, 0, 254, 192, 0, 0, 0, 0, 401, 402,
	0, 0, 0, 0, 0, 0, 1237, 0, 66, 0,
	0, 366, 389, 388, 391, 392, 393, 394, 0, 0,
	131, 390, 395, 396, 397, 1238, 0, 0, 363, 380,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 0, 0, 0, 0, 426, 0,
	379, 0, 0, 374, 375, 376, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 403,
	0, 0, 0, 288, 0, 0, 424, 222, 0, 259,
	158, 175, 124, 109, 119, 0, 157, 201, 232, 240,
	409, 0, 0, 0, 0, 141, 0, 234, 209, 279,
	0, 0, 214, 233, 178, 268, 224, 277, 278, 159,
	289, 290, 263, 286, 294, 127, 251, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 138, 229, 0,
	0, 140, 250, 125, 264, 191, 196, 135, 137, 136,
	120, 245, 266, 130, 139, 255, 260, 112, 262, 276,
	132, 244, 114, 274, 258, 189, 168, 169, 113, 0,
	230, 146, 154, 143, 204, 0, 0, 0, 271, 272,
	142, 297, 121, 285, 116, 122, 284, 198, 0, 0,
	0, 267, 275, 190, 183, 0, 115, 273, 188, 182,
	173, 150, 161, 219, 180, 220, 162, 194, 193, 195,
	0, 0, 0, 256, 282, 298, 128, 0, 0, 265,
	292, 293, 0, 0, 129, 153, 149, 218, 197, 123,
	164, 253, 172, 179, 228, 296, 208, 235, 133, 281,
	252, 413, 425, 419, 421, 420, 417, 418, 416, 415,
	414, 427, 404, 405, 406, 407, 410, 0, 422, 423,
	0, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	446, 439, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 428, 429, 430, 431, 432, 433, 434, 435, 438,
	436, 437, 408, 108, 117, 176, 295, 226, 152, 283,
	0, 145, 0, 0, 0, 0, 0, 0, 110, 111,
	118, 126, 134, 144, 148, 151, 156, 160, 163, 165,
	166, 167, 170, 181, 184, 185, 186, 187, 199, 200,
	202, 203, 206, 207, 210, 211, 212, 213, 215, 216,
	217, 221, 223, 225, 227, 231, 236, 237, 238, 239,
	241, 242, 243, 246, 247, 248, 249, 257, 261, 269,
	270, 280, 287, 291, 205, 0, 0, 0, 0, 0,
	368, 0, 0, 0, 147, 365, 0, 0, 0, 174,
	0, 0, 0, 0, 412, 177, 0, 0, 254, 192,
	0, 0, 0, 0, 401, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 694, 366, 389, 388,
	391, 392, 393, 394, 0, 0, 131, 390, 395, 396,
	397, 0, 0, 0, 363, 380, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	0, 0, 0, 0, 426, 0, 379, 0, 0, 374,
	375, 376, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 403, 0, 0, 0, 288,
	0, 0, 424, 222, 0, 259, 158, 175, 124, 109,
	119, 0, 157, 201, 232, 240, 409, 0, 0, 0,
	0, 141, 0, 234, 209, 279, 0, 0, 214, 233,
	178, 268, 224, 277, 278, 159, 289, 290, 263, 286,
	294, 127, 251, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 138, 229, 0, 0, 140, 250, 125,
	264, 191, 196, 135, 137, 136, 120, 245, 266, 130,
	139, 255, 260, 112, 262, 276, 132, 244, 114, 274,
	258, 189, 168, 169, 113, 0, 230, 146, 154, 143,
	204, 0, 0, 0, 271, 272, 142, 297, 121, 285,
	116, 122, 284, 198, 0, 0, 0, 267, 275, 190,
	183, 0, 115, 273, 188, 182, 173, 150, 161, 219,
	180, 220, 162, 194, 193, 195, 0, 0, 0, 256,
	282, 298, 128, 0, 0, 265, 292, 293, 0, 0,
	129, 153, 149, 218, 197, 123, 164, 253, 172, 179,
	228, 296, 208, 235, 133, 281, 252, 413, 425, 419,
	421, 420, 417, 418, 416, 415, 414, 427, 404, 405,
	406, 407, 410, 0, 422, 423, 0, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 446, 439, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 436, 437, 408, 108,
	117, 176, 295, 226, 152, 283, 0, 145, 0, 0,
	0, 0, 0, 0, 110, 111, 118, 126, 134, 144,
	148, 151, 156, 160, 163, 165, 166, 167, 170, 181,
	184, 185, 186, 187, 199, 200, 202, 203, 206, 207,
	210, 211, 212, 213, 215, 216, 217, 221, 223, 225,
	227, 231, 236, 237, 238, 239, 241, 242, 243, 246,
	247, 248, 249, 257, 261, 269, 270, 280, 287, 291,
	205, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	147, 365, 0, 0, 0, 174, 0, 0, 0, 0,
	412, 177, 0, 0, 254, 192, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 366, 389, 388, 391, 392, 393, 394,
	0, 0, 131, 390, 395, 396, 397, 0, 0, 0,
	363, 380, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 359, 0, 0, 0,
	426, 0, 379, 0, 0, 374, 375, 376, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 403, 0, 0, 0, 288, 0, 0, 424, 222,
	0, 259, 158, 175, 124, 109, 119, 0, 157, 201,
	232, 240, 409, 0, 0, 0, 0, 141, 0, 234,
	209, 279, 0, 0, 214, 233, 178, 268, 224, 277,
	278, 159, 289, 290, 263, 286, 294, 127, 251, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 138,
	229, 0, 0, 140, 250, 125, 264, 191, 196, 135,
	137, 136, 120, 245, 266, 130, 139, 255, 260, 112,
	262, 276, 132, 244, 114, 274, 258, 189, 168, 169,
	113, 0, 230, 146, 154, 143, 204, 0, 0, 0,
	271, 272, 142, 297, 121, 285, 116, 122, 284, 198,
	0, 0, 0, 267, 275, 190, 183, 0, 115, 273,
	188, 182, 173, 150, 161, 219, 180, 220, 162, 194,
	193, 195, 0, 0, 0, 256, 282, 298, 128, 0,
	0, 265, 292, 293, 0, 0, 129, 153, 149, 218,
	197, 123, 164, 253, 172, 179, 228, 296, 208, 235,
	133, 281, 252, 413, 425, 419, 421, 420, 417, 418,
	416, 415, 414, 427, 404, 405, 406, 407, 410, 0,
	422, 423, 0, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 446, 439, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 436, 437, 408, 108, 117, 176, 295, 226,
	152, 283, 0, 145, 0, 0, 0, 0, 0, 0,
	110, 111, 118, 126, 134, 144, 148, 151, 156, 160,
	163, 165, 166, 167, 170, 181, 184, 185, 186, 187,
	199, 200, 202, 203, 206, 207, 210, 211, 212, 213,
	215, 216, 217, 221, 223, 225, 227, 231, 236, 237,
	238, 239, 241, 242, 243, 246, 247, 248, 249, 257,
	261, 269, 270, 280, 287, 291, 205, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 147, 365, 0, 0,
	0, 174, 0, 0, 0, 0, 412, 177, 0, 0,
	254, 192, 0, 0, 0, 0, 401, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 366,
	389, 1146, 391, 392, 393, 394, 0, 0, 131, 390,
	395, 396, 397, 0, 0, 0, 363, 380, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 359, 0, 0, 0, 426, 0, 379, 0,
	0, 374, 375, 376, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 403, 0, 0,
	0, 288, 0, 0, 424, 222, 0, 259, 158, 175,
	124, 109, 119, 0, 157, 201, 232, 240, 409, 0,
	0, 0, 0, 141, 0, 234, 209, 279, 0, 0,
	214, 233, 178, 268, 224, 277, 278, 159, 289, 290,
	263, 286, 294, 127, 251, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 138, 229, 0, 0, 140,
	250, 125, 264, 191, 196, 135, 137, 136, 120, 245,
	266, 130, 139, 255, 260, 112, 262, 276, 132, 244,
	114, 274, 258, 189, 168, 169, 113, 0, 230, 146,
	154, 143, 204, 0, 0, 0, 271, 272, 142, 297,
	121, 285, 116, 122, 284, 198, 0, 0, 0, 267,
	275, 190, 183, 0, 115, 273, 188, 182, 173, 150,
	161, 219, 180, 220, 162, 194, 193, 195, 0, 0,
	0, 256, 282, 298, 128, 0, 0, 265, 292, 293,
	0, 0, 129, 153, 149, 218, 197, 123, 164, 253,
	172, 179, 228, 296, 208, 235, 133, 281, 252, 413,
	425, 419, 421, 420, 417, 418, 416, 415, 414, 427,
	404, 405, 406, 407, 410, 0, 422, 423, 0, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 446, 439,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 436, 437,
	408, 108, 117, 176, 295, 226, 152, 283, 0, 145,
	0, 0, 0, 0, 0, 0, 110, 111, 118, 126,
	134, 144, 148, 151, 156, 160, 163, 165, 166, 167,
	170, 181, 184, 185, 186, 187, 199, 200, 202, 203,
	206, 207, 210, 211, 212, 213, 215, 216, 217, 221,
	223, 225, 227, 231, 236, 237, 238, 239, 241, 242,
	243, 246, 247, 248, 249, 257, 261, 269, 270, 280,
	287, 291, 205, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 147, 365, 0, 0, 0, 174, 0, 0,
	0, 0, 412, 177, 0, 0, 254, 192, 0, 0,
	0, 0, 401, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 366, 389, 1143, 391, 392,
	393, 394, 0, 0, 131, 390, 395, 396, 397, 0,
	0, 0, 363, 380, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 359, 0,
	0, 0, 426, 0, 379, 0, 0, 374, 375, 376,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 403, 0, 0, 0, 288, 0, 0,
	424, 222, 0, 259, 158, 175, 124, 109, 119, 0,
	157, 201, 232, 240, 409, 0, 0, 0, 0, 141,
	0, 234, 209, 279, 0, 0, 214, 233, 178, 268,
	224, 277, 278, 159, 289, 290, 263, 286, 294, 127,
	251, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 138, 229, 0, 0, 140, 250, 125, 264, 191,
	196, 135, 137, 136, 120, 245, 266, 130, 139, 255,
	260, 112, 262, 276, 132, 244, 114, 274, 258, 189,
	168, 169, 113, 0, 230, 146, 154, 143, 204, 0,
	0, 0, 271, 272, 142, 297, 121, 285, 116, 122,
	284, 198, 0, 0, 0, 267, 275, 190, 183, 0,
	115, 273, 188, 182, 173, 150, 161, 219, 180, 220,
	162, 194, 193, 195, 0, 0, 0, 256, 282, 298,
	128, 0, 0, 265, 292, 293, 0, 0, 129, 153,
	149, 218, 197, 123, 164, 253, 172, 179, 228, 296,
	208, 235, 133, 281, 252, 413, 425, 419, 421, 420,
	417, 418, 416, 415, 414, 427, 404, 405, 406, 407,
	410, 0, 422, 423, 0, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 446, 439, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 436, 437, 408, 108, 117, 176,
	295, 226, 152, 283, 0, 145, 0, 0, 0, 0,
	0, 0, 110, 111, 118, 126, 134, 144, 148, 151,
	156, 160, 163, 165, 166, 167, 170, 181, 184, 185,
	186, 187, 199, 200, 202, 203, 206, 207, 210, 211,
	212, 213, 215, 216, 217, 221, 223, 225, 227, 231,
	236, 237, 238, 239, 241, 242, 243, 246, 247, 248,
	249, 257, 261, 269, 270, 280, 287, 291, 28, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	147, 365, 0, 0, 0, 174, 0, 0, 0, 0,
	412, 177, 0, 0, 254, 192, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 366, 389, 388, 391, 392, 393, 394,
	0, 0, 131, 390, 395, 396, 397, 0, 0, 0,
	363, 380, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 0, 0, 0, 0,
	426, 0, 379, 0, 0, 374, 375, 376, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 403, 0, 0, 0, 288, 0, 0, 424, 222,
	0, 259, 158, 175, 124, 109, 119, 0, 157, 201,
	232, 240, 409, 0, 0, 0, 0, 141, 0, 234,
	209, 279, 0, 0, 214, 233, 178, 268, 224, 277,
	278, 159, 289, 290, 263, 286, 294, 127, 251, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 138,
	229, 0, 0, 140, 250, 125, 264, 191, 196, 135,
	137, 136, 120, 245, 266, 130, 139, 255, 260, 112,
	262, 276, 132, 244, 114, 274, 258, 189, 168, 169,
	113, 0, 230, 146, 154, 143, 204, 0, 0, 0,
	271, 272, 142, 297, 121, 285, 116, 122, 284, 198,
	0, 0, 0, 267, 275, 190, 183, 0, 115, 273,
	188, 182, 173, 150, 161, 219, 180, 220, 162, 194,
	193, 195, 0, 0, 0, 256, 282, 298, 128, 0,
	0, 265, 292, 293, 0, 0, 129, 153, 149, 218,
	197, 123, 164, 253, 172, 179, 228, 296, 208, 235,
	133, 281, 252, 413, 425, 419, 421, 420, 417, 418,
	416, 415, 414, 427, 404, 405, 406, 407, 410, 0,
	422, 423, 0, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 446, 439, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 436, 437, 408, 108, 117, 176, 295, 226,
	152, 283, 0, 145, 0, 0, 0, 0, 0, 0,
	110, 111, 118, 126, 134, 144, 148, 151, 156, 160,
	163, 165, 166, 167, 170, 181, 184, 185, 186, 187,
	199, 200, 202, 203, 206, 207, 210, 211, 212, 213,
	215, 216, 217, 221, 223, 225, 227, 231, 236, 237,
	238, 239, 241, 242, 243, 246, 247, 248, 249, 257,
	261, 269, 270, 280, 287, 291, 205, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 147, 365, 0, 0,
	0, 174, 0, 0, 0, 0, 412, 177, 0, 0,
	254, 192, 0, 0, 0, 0, 401, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 1058, 366,
	389, 388, 391, 392, 393, 394, 0, 0, 131, 390,
	395, 396, 397, 0, 0, 0, 363, 380, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 0, 0, 0, 0, 426, 0, 379, 0,
	0, 374, 375, 376, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 403, 0, 0,
	0, 288, 0, 0, 424, 222, 0, 259, 158, 175,
	124, 109, 119, 0, 157, 201, 232, 240, 409, 0,
	0, 0, 0, 141, 0, 234, 209, 279, 0, 0,
	214, 233, 178, 268, 224, 277, 278, 159, 289, 290,
	263, 286, 294, 127, 251, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 138, 229, 0, 0, 140,
	250, 125, 264, 191, 196, 135, 137, 136, 120, 245,
	266, 130, 139, 255, 260, 112, 262, 276, 132, 244,
	114, 274, 258, 189, 168, 169, 113, 0, 230, 146,
	154, 143, 204, 0, 0, 0, 271, 272, 142, 297,
	121, 285, 116, 122, 284, 198, 0, 0, 0, 267,
	275, 190, 183, 0, 115, 273, 188, 182, 173, 150,
	161, 219, 180, 220, 162, 194, 193, 195, 0, 0,
	0, 256, 282, 298, 128, 0, 0, 265, 292, 293,
	0, 0, 129, 153, 149, 218, 197, 123, 164, 253,
	172, 179, 228, 296, 208, 235, 133, 281, 252, 413,
	425, 419, 421, 420, 417, 418, 416, 415, 414, 427,
	404, 405, 406, 407, 410, 0, 422, 423, 0, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 446, 439,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 436, 437,
	408, 108, 117, 176, 295, 226, 152, 283, 0, 145,
	0, 0, 0, 0, 0, 0, 110, 111, 118, 126,
	134, 144, 148, 151, 156, 160, 163, 165, 166, 167,
	170, 181, 184, 185, 186, 187, 199, 200, 202, 203,
	206, 207, 210, 211, 212, 213, 215, 216, 217, 221,
	223, 225, 227, 231, 236, 237, 238, 239, 241, 242,
	243, 246, 247, 248, 249, 257, 261, 269, 270, 280,
	287, 291, 205, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 147, 365, 0, 0, 0, 174, 0, 0,
	0, 0, 412, 177, 0, 0, 254, 192, 0, 0,
	0, 0, 401, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 366, 389, 388, 391, 392,
	393, 394, 0, 0, 131, 390, 395, 396, 397, 0,
	0, 0, 363, 380, 0, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 0, 0,
	0, 0, 426, 0, 379, 0, 0, 374, 375, 376,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 403, 0, 0, 0, 288, 0, 0,
	424, 222, 0, 259, 158, 175, 124, 109, 119, 0,
	157, 201, 232, 240, 409, 0, 0, 0, 0, 141,
	0, 234, 209, 279, 0, 0, 214, 233, 178, 268,
	224, 277, 278, 159, 289, 290, 263, 286, 294, 127,
	251, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 138, 229, 0, 0, 140, 250, 125, 264, 191,
	196, 135, 137, 136, 120, 245, 266, 130, 139, 255,
	260, 112, 262, 276, 132, 244, 114, 274, 258, 189,
	168, 169, 113, 0, 230, 146, 154, 143, 204, 0,
	0, 0, 271, 272, 142, 297, 121, 285, 116, 122,
	284, 198, 0, 0, 0, 267, 275, 190, 183, 0,
	115, 273, 188, 182, 173, 150, 161, 219, 180, 220,
	162, 194, 193, 195, 0, 0, 0, 256, 282, 298,
	128, 0, 0, 265, 292, 293, 0, 0, 129, 153,
	149, 218, 197, 123, 164, 253, 172, 179, 228, 296,
	208, 235, 133, 281, 252, 413, 425, 419, 421, 420,
	417, 418, 416, 415, 414, 427, 404, 405, 406, 407,
	410, 0, 422, 423, 0, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 446, 439, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 428, 429, 430, 431, 432,
	433, 434, 435, 438, 436, 437, 408, 108, 117, 176,
	295, 226, 152, 283, 0, 145, 0, 0, 0, 0,
	0, 0, 110, 111, 118, 126, 134, 144, 148, 151,
	156, 160, 163, 165, 166, 167, 170, 181, 184, 185,
	186, 187, 199, 200, 202, 203, 206, 207, 210, 211,
	212, 213, 215, 216, 217, 221, 223, 225, 227, 231,
	236, 237, 238, 239, 241, 242, 243, 246, 247, 248,
	249, 257, 261, 269, 270, 280, 287, 291, 205, 0,
	0, 0, 0, 0, 368, 0, 0, 0, 147, 365,
	0, 0, 0, 174, 0, 0, 0, 0, 412, 177,
	0, 0, 254, 192, 0, 0, 0, 0, 401, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 366, 389, 388, 391, 392, 393, 394, 0, 0,
	131, 390, 395, 396, 397, 0, 0, 0, 363, 380,
	0, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 0, 0, 0, 0, 426, 0,
	379, 0, 0, 374, 375, 376, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 403,
	0, 0, 0, 288, 0, 0, 424, 222, 0, 259,
	158, 175, 124, 109, 119, 0, 157, 201, 232, 240,
	409, 0, 0, 0, 0, 141, 0, 234, 209, 279,
	0, 0, 214, 233, 178, 268, 224, 277, 278, 159,
	289, 290, 263, 286, 294, 127, 251, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 138, 229, 0,
	0, 140, 250, 125, 264, 191, 196, 135, 137, 136,
	120, 245, 266, 130, 139, 255, 260, 112, 262, 276,
	132, 244, 114, 274, 258, 189, 168, 169, 113, 0,
	230, 146, 154, 143, 204, 0, 0, 0, 271, 272,
	142, 297, 121, 285, 116, 122, 284, 198, 0, 0,
	0, 267, 275, 190, 183, 0, 115, 273, 188, 182,
	173, 150, 161, 219, 180, 220, 162, 194, 193, 195,
	0, 0, 0, 256, 282, 298, 128, 0, 0, 265,
	292, 293, 0, 0, 129, 153, 149, 218, 197, 123,
	164, 253, 172, 179, 228, 296, 208, 235, 133, 281,
	252, 413, 425, 419, 421, 420, 417, 418, 416, 415,
	414, 427, 404, 405, 406, 407, 410, 0, 422, 423,
	0, 0, 0, 0, 710, 711, 712, 713, 714, 718,
	719, 723, 724, 732, 731, 730, 733, 734, 736, 735,
	737, 715, 716, 717, 720, 721, 722, 725, 726, 729,
	727, 728, 408, 108, 117, 176, 295, 226, 152, 283,
	0, 145, 0, 0, 0, 0, 0, 0, 110, 111,
	118, 126, 134, 144, 148, 151, 156, 160, 163, 165,
	166, 167, 170, 181, 184, 185, 186, 187, 199, 200,
	202, 203, 206, 207, 210, 211, 212, 213, 215, 216,
	217, 221, 223, 225, 227, 231, 236, 237, 238, 239,
	241, 242, 243, 246, 247, 248, 249, 257, 261, 269,
	270, 280, 287, 291, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 412, 177, 0, 0, 254, 192,
	0, 0, 0, 0, 401, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 366, 389, 388,
	391, 392, 393, 394, 0, 0, 131, 390, 395, 396,
	397, 0, 0, 0, 0, 380, 0, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	0, 0, 0, 0, 426, 0, 379, 0, 0, 374,
	375, 376, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 403, 0, 0, 0, 288,
	0, 0, 424, 222, 0, 259, 158, 175, 124, 109,
	119, 0, 157, 201, 232, 240, 409, 0, 0, 0,
	0, 141, 0, 234, 209, 279, 0, 2131, 214, 233,
	178, 268, 224, 277, 278, 159, 289, 290, 263, 286,
	294, 127, 251, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 138, 229, 0, 0, 140, 250, 125,
	264, 191, 196, 135, 137, 136, 120, 245, 266, 130,
	139, 255, 260, 112, 262, 276, 132, 244, 114, 274,
	258, 189, 168, 169, 113, 0, 230, 146, 154, 143,
	204, 0, 0, 0, 271, 272, 142, 297, 121, 285,
	116, 122, 284, 198, 0, 0, 0, 267, 275, 190,
	183, 0, 115, 273, 188, 182, 173, 150, 161, 219,
	180, 220, 162, 194, 193, 195, 0, 0, 0, 256,
	282, 298, 128, 0, 0, 265, 292, 293, 0, 0,
	129, 153, 149, 218, 197, 123, 164, 253, 172, 179,
	228, 296, 208, 235, 133, 281, 252, 413, 425, 419,
	421, 420, 417, 418, 416, 415, 414, 427, 404, 405,
	406, 407, 410, 0, 422, 423, 0, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 446, 439, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 428, 429, 430,
	431, 432, 433, 434, 435, 438, 436, 437, 408, 108,
	117, 176, 295, 226, 152, 283, 0, 145, 0, 0,
	0, 0, 0, 0, 110, 111, 118, 126, 134, 144,
	148, 151, 156, 160, 163, 165, 166, 167, 170, 181,
	184, 185, 186, 187, 199, 200, 202, 203, 206, 207,
	210, 211, 212, 213, 215, 216, 217, 221, 223, 225,
	227, 231, 236, 237, 238, 239, 241, 242, 243, 246,
	247, 248, 249, 257, 261, 269, 270, 280, 287, 291,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	412, 177, 0, 0, 254, 192, 0, 0, 0, 0,
	401, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 694, 366, 389, 388, 391, 392, 393, 394,
	0, 0, 131, 390, 395, 396, 397, 0, 0, 0,
	0, 380, 0, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 0, 0, 0, 0,
	426, 0, 379, 0, 0, 374, 375, 376, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 403, 0, 0, 0, 288, 0, 0, 424, 222,
	0, 259, 158, 175, 124, 109, 119, 0, 157, 201,
	232, 240, 409, 0, 0, 0, 0, 141, 0, 234,
	209, 279, 0, 0, 214, 233, 178, 268, 224, 277,
	278, 159, 289, 290, 263, 286, 294, 127, 251, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 138,
	229, 0, 0, 140, 250, 125, 264, 191, 196, 135,
	137, 136, 120, 245, 266, 130, 139, 255, 260, 112,
	262, 276, 132, 244, 114, 274, 258, 189, 168, 169,
	113, 0, 230, 146, 154, 143, 204, 0, 0, 0,
	271, 272, 142, 297, 121, 285, 116, 122, 284, 198,
	0, 0, 0, 267, 275, 190, 183, 0, 115, 273,
	188, 182, 173, 150, 161, 219, 180, 220, 162, 194,
	193, 195, 0, 0, 0, 256, 282, 298, 128, 0,
	0, 265, 292, 293, 0, 0, 129, 153, 149, 218,
	197, 123, 164, 253, 172, 179, 228, 296, 208, 235,
	133, 281, 252, 413, 425, 419, 421, 420, 417, 418,
	416, 415, 414, 427, 404, 405, 406, 407, 410, 0,
	422, 423, 0, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 446, 439, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 428, 429, 430, 431, 432, 433, 434,
	435, 438, 436, 437, 408, 108, 117, 176, 295, 226,
	152, 283, 0, 145, 0, 0, 0, 0, 0, 0,
	110, 111, 118, 126, 134, 144, 148, 151, 156, 160,
	163, 165, 166, 167, 170, 181, 184, 185, 186, 187,
	199, 200, 202, 203, 206, 207, 210, 211, 212, 213,
	215, 216, 217, 221, 223, 225, 227, 231, 236, 237,
	238, 239, 241, 242, 243, 246, 247, 248, 249, 257,
	261, 269, 270, 280, 287, 291, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 412, 177, 0, 0,
	254, 192, 0, 0, 0, 0, 401, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 366,
	389, 388, 391, 392, 393, 394, 0, 0, 131, 390,
	395, 396, 397, 0, 0, 0, 0, 380, 0, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 0, 0, 0, 0, 426, 0, 379, 0,
	0, 374, 375, 376, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 403, 0, 0,
	0, 288, 0, 0, 424, 222, 0, 259, 158, 175,
	124, 109, 119, 0, 157, 201, 232, 240, 409, 0,
	0, 0, 0, 141, 0, 234, 209, 279, 0, 0,
	214, 233, 178, 268, 224, 277, 278, 159, 289, 290,
	263, 286, 294, 127, 251, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 138, 229, 0, 0, 140,
	250, 125, 264, 191, 196, 135, 137, 136, 120, 245,
	266, 130, 139, 255, 260, 112, 262, 276, 132, 244,
	114, 274, 258, 189, 168, 169, 113, 0, 230, 146,
	154, 143, 204, 0, 0, 0, 271, 272, 142, 297,
	121, 285, 116, 122, 284, 198, 0, 0, 0, 267,
	275, 190, 183, 0, 115, 273, 188, 182, 173, 150,
	161, 219, 180, 220, 162, 194, 193, 195, 0, 0,
	0, 256, 282, 298, 128, 0, 0, 265, 292, 293,
	0, 0, 129, 153, 149, 218, 197, 123, 164, 253,
	172, 179, 228, 296, 208, 235, 133, 281, 252, 413,
	425, 419, 421, 420, 417, 418, 416, 415, 414, 427,
	404, 405, 406, 407, 410, 0, 422, 423, 0, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 446, 439,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 428,
	429, 430, 431, 432, 433, 434, 435, 438, 436, 437,
	408, 108, 117, 176, 295, 226, 152, 283, 0, 145,
	0, 0, 0, 0, 0, 0, 110, 111, 118, 126,
	134, 144, 148, 151, 156, 160, 163, 165, 166, 167,
	170, 181, 184, 185, 186, 187, 199, 200, 202, 203,
	206, 207, 210, 211, 212, 213, 215, 216, 217, 221,
	223, 225, 227, 231, 236, 237, 238, 239, 241, 242,
	243, 246, 247, 248, 249, 257, 261, 269, 270, 280,
	287, 291, 205, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 177, 0, 0, 254, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1217, 1219,
	0, 0, 0, 0, 0, 106, 0, 1222, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 288, 0, 1218,
	0, 222, 0, 259, 158, 175, 124, 109, 119, 0,
	157, 201, 232, 240, 0, 0, 0, 0, 0, 141,
	0, 234, 209, 279, 0, 0, 214, 233, 178, 268,
	224, 277, 278, 159, 289, 290, 263, 286, 294, 127,
	251, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 138, 229, 0, 0, 140, 250, 125, 264, 191,
	196, 135, 137, 136, 120, 245, 266, 130, 139, 255,
	260, 112, 262, 276, 132, 244, 114, 274, 258, 189,
	168, 169, 113, 0, 230, 146, 154, 143, 204, 0,
	0, 0, 271, 272, 142, 297, 121, 285, 116, 122,
	284, 198, 0, 0, 0, 267, 275, 190, 183, 0,
	115, 273, 188, 182, 173, 150, 161, 219, 180, 220,
	162, 194, 193, 195, 0, 0, 0, 256, 282, 298,
	128, 0, 0, 265, 292, 293, 0, 0, 129, 153,
	149, 218, 197, 123, 164, 253, 172, 179, 228, 296,
	208, 235, 133, 281, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 757, 758,
	759, 760, 761, 765, 766, 770, 771, 779, 778, 777,
	780, 781, 783, 782, 784, 762, 763, 764, 767, 768,
	769, 772, 773, 776, 774, 775, 0, 108, 117, 176,
	295, 226, 152, 283, 0, 145, 0, 0, 0, 0,
	0, 0, 110, 111, 118, 126, 134, 144, 148, 151,
	156, 160, 163, 165, 166, 167, 170, 181, 184, 185,
	186, 187, 199, 200, 202, 203, 206, 207, 210, 211,
	212, 213, 215, 216, 217, 221, 223, 225, 227, 231,
	236, 237, 238, 239, 241, 242, 243, 246, 247, 248,
	249, 257, 261, 269, 270, 280, 287, 291, 205, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 177,
	0, 0, 254, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 1219, 0, 0, 0, 0,
	0, 106, 0, 1222, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 288, 0, 1218, 0, 222, 0, 259,
	158, 175, 124, 109, 119, 0, 157, 201, 232, 240,
	0, 0, 0, 0, 0, 141, 0, 234, 209, 279,
	0, 0, 1213, 233, 178, 268, 224, 277, 278, 159,
	289, 290, 263, 286, 294, 127, 251, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 138, 229, 0,
	0, 140, 250, 125, 264, 191, 196, 135, 137, 136,
	120, 245, 266, 130, 139, 255, 260, 112, 262, 276,
	132, 244, 114, 274, 258, 189, 168, 169, 113, 0,
	230, 146, 154, 143, 204, 0, 0, 0, 271, 272,
	142, 297, 121, 285, 116, 122, 284, 198, 0, 0,
	0, 267, 275, 190, 183, 0, 115, 273, 188, 182,
	173, 150, 161, 219, 180, 220, 162, 194, 193, 195,
	0, 0, 0, 256, 282, 298, 128, 0, 0, 265,
	292, 293, 0, 0, 129, 153, 149, 218, 197, 123,
	164, 253, 172, 179, 228, 296, 208, 235, 133, 281,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 757, 758, 759, 760, 761, 765,
	766, 770, 771, 779, 778, 777, 780, 781, 783, 782,
	784, 762, 763, 764, 767, 768, 769, 772, 773, 776,
	774, 775, 0, 108, 117, 176, 295, 226, 152, 283,
	0, 145, 0, 0, 0, 0, 0, 0, 110, 111,
	118, 126, 134, 144, 148, 151, 156, 160, 163, 165,
	166, 167, 170, 181, 184, 185, 186, 187, 199, 200,
	202, 203, 206, 207, 210, 211, 212, 213, 215, 216,
	217, 221, 223, 225, 227, 231, 236, 237, 238, 239,
	241, 242, 243, 246, 247, 248, 249, 257, 261, 269,
	270, 280, 287, 291, 205, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 177, 0, 0, 254, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 756,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 0, 749, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 222, 0, 259, 158, 175, 124, 109,
	119, 0, 157, 201, 232, 240, 0, 0, 0, 0,
	0, 141, 0, 234, 209, 279, 0, 0, 214, 233,
	178, 268, 224, 277, 278, 159, 289, 290, 263, 286,
	294, 127, 251, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 138, 229, 0, 0, 140, 250, 125,
	264, 191, 196, 135, 137, 136, 120, 245, 266, 130,
	139, 255, 260, 112, 262, 276, 132, 244, 114, 274,
	258, 189, 168, 169, 113, 0, 230, 146, 154, 143,
	204, 0, 0, 0, 271, 272, 142, 297, 121, 285,
	116, 122, 284, 198, 0, 0, 0, 267, 275, 190,
	183, 0, 115, 273, 188, 182, 173, 150, 161, 219,
	180, 220, 162, 194, 193, 195, 0, 0, 0, 256,
	282, 298, 128, 0, 0, 265, 292, 293, 0, 0,
	129, 153, 149, 218, 197, 123, 164, 253, 172, 179,
	228, 296, 208, 235, 133, 281, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 759, 760, 761, 765, 766, 770, 771, 779,
	778, 777, 780, 781, 783, 782, 784, 762, 763, 764,
	767, 768, 769, 772, 773, 776, 774, 775, 0, 108,
	117, 176, 295, 226, 152, 283, 0, 145, 0, 0,
	0, 0, 0, 0, 110, 111, 118, 126, 134, 144,
	148, 151, 156, 160, 163, 165, 166, 167, 170, 181,
	184, 185, 186, 187, 199, 200, 202, 203, 206, 207,
	210, 211, 212, 213, 215, 216, 217, 221, 223, 225,
	227, 231, 236, 237, 238, 239, 241, 242, 243, 246,
	247, 248, 249, 257, 261, 269, 270, 280, 287, 291,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 0, 0, 0, 174, 1466, 0, 0, 0,
	0, 177, 0, 0, 254, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 1222, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 222,
	0, 259, 158, 175, 124, 109, 119, 0, 157, 201,
	232, 240, 0, 0, 0, 0, 0, 141, 0, 234,
	209, 279, 0, 0, 214, 233, 178, 268, 224, 277,
	278, 159, 289, 290, 263, 286, 294, 127, 251, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 138,
	229, 0, 0, 140, 250, 125, 264, 191, 196, 135,
	137, 136, 120, 245, 266, 130, 139, 255, 260, 112,
	262, 276, 132, 244, 114, 274, 258, 189, 168, 169,
	113, 0, 230, 146, 154, 143, 204, 0, 0, 0,
	271, 272, 142, 297, 121, 285, 116, 122, 284, 198,
	0, 0, 0, 267, 275, 190, 183, 0, 115, 273,
	188, 182, 173, 150, 161, 219, 180, 220, 162, 194,
	193, 195, 0, 0, 0, 256, 282, 298, 128, 0,
	0, 265, 292, 293, 0, 0, 129, 153, 149, 218,
	197, 123, 164, 253, 172, 179, 228, 296, 208, 235,
	133, 281, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 757, 758, 759, 760,
	761, 765, 766, 770, 771, 779, 778, 777, 780, 781,
	783, 782, 784, 762, 763, 764, 767, 768, 769, 772,
	773, 776, 774, 775, 0, 108, 117, 176, 295, 226,
	152, 283, 0, 145, 0, 0, 0, 0, 0, 0,
	110, 111, 118, 126, 134, 144, 148, 151, 156, 160,
	163, 165, 166, 167, 170, 181, 184, 185, 186, 187,
	199, 200, 202, 203, 206, 207, 210, 211, 212, 213,
	215, 216, 217, 221, 223, 225, 227, 231, 236, 237,
	238, 239, 241, 242, 243, 246, 247, 248, 249, 257,
	261, 269, 270, 280, 287, 291, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 177, 0, 0,
	254, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 1222, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 222, 0, 259, 158, 175,
	124, 109, 119, 0, 157, 201, 232, 240, 0, 0,
	0, 0, 0, 141, 0, 234, 209, 279, 0, 0,
	214, 233, 178, 268, 224, 277, 278, 159, 289, 290,
	263, 286, 294, 127, 251, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 138, 229, 0, 0, 140,
	250, 125, 264, 191, 196, 135, 137, 136, 120, 245,
	266, 130, 139, 255, 260, 112, 262, 276, 132, 244,
	114, 274, 258, 189, 168, 169, 113, 0, 230, 146,
	154, 143, 204, 0, 0, 0, 271, 272, 142, 297,
	121, 285, 116, 122, 284, 198, 0, 0, 0, 267,
	275, 190, 183, 0, 115, 273, 188, 182, 173, 150,
	161, 219, 180, 220, 162, 194, 193, 195, 0, 0,
	0, 256, 282, 298, 128, 0, 0, 265, 292, 293,
	0, 0, 129, 153, 149, 218, 197, 123, 164, 253,
	172, 179, 228, 296, 208, 235, 133, 281, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 757, 758, 759, 760, 761, 765, 766, 770,
	771, 779, 778, 777, 780, 781, 783, 782, 784, 762,
	763, 764, 767, 768, 769, 772, 773, 776, 774, 775,
	0, 108, 117, 176, 295, 226, 152, 283, 0, 145,
	0, 0, 0, 0, 0, 0, 110, 111, 118, 126,
	134, 144, 148, 151, 156, 160, 163, 165, 166, 167,
	170, 181, 184, 185, 186, 187, 199, 200, 202, 203,
	206, 207, 210, 211, 212, 213, 215, 216, 217, 221,
	223, 225, 227, 231, 236, 237, 238, 239, 241, 242,
	243, 246, 247, 248, 249, 257, 261, 269, 270, 280,
	287, 291, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 177, 0, 0, 254, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 753, 0, 756, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 222, 0, 259, 158, 175, 124, 109, 119, 0,
	157, 201, 232, 240, 0, 0, 0, 0, 0, 141,
	0, 234, 209, 279, 0, 0, 214, 233, 178, 268,
	224, 277, 278, 159, 289, 290, 263, 286, 294, 127,
	251, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 138, 229, 0, 0, 140, 250, 125, 264, 191,
	196, 135, 137, 136, 120, 245, 266, 130, 139, 255,
	260, 112, 262, 276, 132, 244, 114, 274, 258, 189,
	168, 169, 113, 0, 230, 146, 154, 143, 204, 0,
	0, 0, 271, 272, 142, 297, 121, 285, 116, 122,
	284, 198, 0, 0, 0, 267, 275, 190, 183, 0,
	115, 273, 188, 182, 173, 150, 161, 219, 180, 220,
	162, 194, 193, 195, 0, 0, 0, 256, 282, 298,
	128, 0, 0, 265, 292, 293, 0, 0, 129, 153,
	149, 218, 197, 123, 164, 253, 172, 179, 228, 296,
	208, 235, 133, 281, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 757, 758,
	759, 760, 761, 765, 766, 770, 771, 779, 778, 777,
	780, 781, 783, 782, 784, 762, 763, 764, 767, 768,
	769, 772, 773, 776, 774, 775, 0, 108, 117, 176,
	295, 226, 152, 283, 0, 145, 0, 0, 0, 0,
	0, 0, 110, 111, 118, 126, 134, 144, 148, 151,
	156, 160, 163, 165, 166, 167, 170, 181, 184, 185,
	186, 187, 199, 200, 202, 203, 206, 207, 210, 211,
	212, 213, 215, 216, 217, 221, 223, 225, 227, 231,
	236, 237, 238, 239, 241, 242, 243, 246, 247, 248,
	249, 257, 261, 269, 270, 280, 287, 291, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 177,
	0, 0, 254, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 794, 793,
	803, 804, 796, 797, 798, 799, 800, 801, 802, 795,
	0, 0, 805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 222, 0, 259,
	158, 175, 124, 109, 119, 0, 157, 201, 232, 240,
	0, 0, 0, 0, 0, 141, 0, 234, 209, 279,
	0, 0, 214, 233, 178, 268, 224, 277, 278, 159,
	289, 290, 263, 286, 294, 127, 251, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 138, 229, 0,
	0, 140, 250, 125, 264, 191, 196, 135, 137, 136,
	120, 245, 266, 130, 139, 255, 260, 112, 262, 276,
	132, 244, 114, 274, 258, 189, 168, 169, 113, 0,
	230, 146, 154, 143, 204, 0, 0, 0, 271, 272,
	142, 297, 121, 285, 116, 122, 284, 198, 0, 0,
	0, 267, 275, 190, 183, 0, 115, 273, 188, 182,
	173, 150, 161, 219, 180, 220, 162, 194, 193, 195,
	0, 0, 0, 256, 282, 298, 128, 0, 0, 265,
	292, 293, 0, 0, 129, 153, 149, 218, 197, 123,
	164, 253, 172, 179, 228, 296, 208, 235, 133, 281,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 117, 176, 295, 226, 152, 283,
	0, 145, 0, 0, 0, 0, 0, 0, 110, 111,
	118, 126, 134, 144, 148, 151, 156, 160, 163, 165,
	166, 167, 170, 181, 184, 185, 186, 187, 199, 200,
	202, 203, 206, 207, 210, 211, 212, 213, 215, 216,
	217, 221, 223, 225, 227, 231, 236, 237, 238, 239,
	241, 242, 243, 246, 247, 248, 249, 257, 261, 269,
	270, 280, 287, 291, 28, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 177, 0, 0,
	254, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 222, 0, 259, 158, 175,
	124, 109, 119, 0, 157, 201, 232, 240, 0, 0,
	0, 0, 0, 141, 0, 234, 209, 279, 0, 0,
	214, 233, 178, 268, 224, 277, 278, 159, 289, 290,
	263, 286, 294, 127, 251, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 138, 229, 0, 0, 140,
	250, 125, 264, 191, 196, 135, 137, 136, 120, 245,
	266, 130, 139, 255, 260, 112, 262, 276, 132, 244,
	114, 274, 258, 189, 168, 169, 113, 0, 230, 146,
	154, 143, 204, 0, 0, 0, 271, 272, 142, 297,
	121, 285, 116, 122, 284, 198, 0, 0, 0, 267,
	275, 190, 183, 0, 115, 273, 188, 182, 173, 150,
	161, 219, 180, 220, 162, 194, 193, 195, 0, 0,
	0, 256, 282, 298, 128, 0, 0, 265, 292, 293,
	0, 0, 129, 153, 149, 218, 197, 123, 164, 253,
	172, 179, 228, 296, 208, 235, 133, 281, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 117, 176, 295, 226, 152, 283, 0, 145,
	0, 0, 0, 0, 0, 0, 110, 111, 118, 126,
	134, 144, 148, 151, 156, 160, 163, 165, 166, 167,
	170, 181, 184, 185, 186, 187, 199, 200, 202, 203,
	206, 207, 210, 211, 212, 213, 215, 216, 217, 221,
	223, 225, 227, 231, 236, 237, 238, 239, 241, 242,
	243, 246, 247, 248, 249, 257, 261, 269, 270, 280,
	287, 291, 28, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 177, 0, 0, 254, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 222, 0, 259, 158, 175, 124, 109,
	119, 0, 157, 201, 232, 240, 0, 0, 0, 0,
	0, 141, 0, 234, 209, 279, 0, 0, 214, 233,
	178, 268, 224, 277, 278, 159, 289, 290, 263, 286,
	294, 127, 251, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 138, 229, 0, 0, 140, 250, 125,
	264, 191, 196, 135, 137, 136, 120, 245, 266, 130,
	139, 255, 260, 112, 262, 276, 132, 244, 114, 274,
	258, 189, 168, 169, 113, 0, 230, 146, 154, 143,
	204, 0, 0, 0, 271, 272, 142, 297, 121, 285,
	116, 122, 284, 198, 0, 0, 0, 267, 275, 190,
	183, 0, 115, 273, 188, 182, 173, 150, 161, 219,
	180, 220, 162, 194, 193, 195, 0, 0, 0, 256,
	282, 298, 128, 0, 0, 265, 292, 293, 0, 0,
	129, 153, 149, 218, 197, 123, 164, 253, 172, 179,
	228, 296, 208, 235, 133, 281, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	117, 176, 295, 226, 152, 283, 0, 145, 0, 0,
	0, 0, 0, 0, 110, 111, 118, 126, 134, 144,
	148, 151, 156, 160, 163, 165, 166, 167, 170, 181,
	184, 185, 186, 187, 199, 200, 202, 203, 206, 207,
	210, 211, 212, 213, 215, 216, 217, 221, 223, 225,
	227, 231, 236, 237, 238, 239, 241, 242, 243, 246,
	247, 248, 249, 257, 261, 269, 270, 280, 287, 291,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 927, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 177, 0, 0, 254, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 926, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 222,
	0, 259, 158, 175, 124, 109, 119, 0, 157, 201,
	232, 240, 0, 0, 0, 0, 0, 141, 0, 234,
	209, 279, 0, 0, 214, 233, 178, 268, 224, 277,
	278, 159, 289, 290, 263, 286, 294, 127, 251, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 138,
	229, 0, 0, 140, 250, 125, 264, 191, 196, 135,
	137, 136, 120, 245, 266, 130, 139, 255, 260, 112,
	262, 276, 132, 244, 114, 274, 258, 189, 168, 169,
	113, 0, 230, 146, 154, 143, 204, 0, 0, 0,
	271, 272, 142, 297, 121, 285, 116, 122, 284, 198,
	0, 0, 0, 267, 275, 190, 183, 0, 115, 273,
	188, 182, 173, 150, 161, 219, 180, 220, 162, 194,
	193, 195, 0, 0, 0, 256, 282, 298, 128, 0,
	0, 265, 292, 293, 0, 0, 129, 153, 149, 218,
	197, 123, 164, 253, 172, 179, 228, 296, 208, 235,
	133, 281, 252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 117, 176, 295, 226,
	152, 283, 0, 145, 0, 0, 0, 0, 0, 0,
	110, 111, 118, 126, 134, 144, 148, 151, 156, 160,
	163, 165, 166, 167, 170, 181, 184, 185, 186, 187,
	199, 200, 202, 203, 206, 207, 210, 211, 212, 213,
	215, 216, 217, 221, 223, 225, 227, 231, 236, 237,
	238, 239, 241, 242, 243, 246, 247, 248, 249, 257,
	261, 269, 270, 280, 287, 291, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 177, 0, 0,
	254, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 222, 0, 259, 158, 175,
	124, 109, 119, 0, 157, 201, 232, 240, 0, 0,
	0, 0, 0, 141, 0, 234, 209, 279, 0, 0,
	214, 233, 178, 268, 224, 277, 278, 159, 289, 290,
	263, 286, 294, 127, 251, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 138, 229, 0, 0, 140,
	250, 125, 264, 191, 196, 135, 137, 136, 120, 245,
	266, 130, 139, 255, 260, 112, 262, 276, 132, 244,
	114, 274, 258, 189, 168, 169, 113, 0, 230, 146,
	154, 143, 204, 0, 0, 0, 271, 272, 142, 297,
	121, 285, 116, 122, 284, 198, 0, 0, 0, 267,
	275, 190, 183, 0, 115, 273, 188, 182, 173, 150,
	161, 219, 180, 220, 162, 194, 193, 195, 0, 0,
	0, 256, 282, 298, 128, 0, 0, 265, 292, 293,
	0, 0, 129, 153, 149, 218, 197, 123, 164, 253,
	172, 179, 228, 296, 208, 235, 133, 281, 252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 117, 176, 295, 226, 152, 283, 0, 145,
	0, 0, 0, 0, 0, 0, 110, 111, 118, 126,
	134, 144, 148, 151, 156, 160, 163, 165, 166, 167,
	170, 181, 184, 185, 186, 187, 199, 200, 202, 203,
	206, 207, 210, 211, 212, 213, 215, 216, 217, 221,
	223, 225, 227, 231, 236, 237, 238, 239, 241, 242,
	243, 246, 247, 248, 249, 257, 261, 269, 270, 280,
	287, 291, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 177, 0, 0, 254, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 222, 0, 259, 158, 175, 124, 109, 119, 0,
	157, 201, 232, 240, 0, 0, 0, 0, 0, 141,
	0, 234, 209, 279, 0, 0, 214, 233, 178, 268,
	224, 277, 278, 159, 289, 290, 263, 286, 294, 127,
	251, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 138, 229, 0, 0, 140, 250, 125, 264, 191,
	196, 135, 137, 136, 120, 245, 266, 130, 139, 255,
	260, 112, 262, 276, 132, 244, 114, 274, 258, 189,
	168, 169, 113, 0, 230, 146, 154, 143, 204, 0,
	0, 0, 271, 272, 142, 297, 121, 285, 116, 122,
	284, 198, 0, 0, 0, 267, 275, 190, 183, 0,
	115, 273, 188, 182, 173, 150, 161, 219, 180, 220,
	162, 194, 193, 195, 0, 0, 0, 256, 282, 298,
	128, 0, 0, 265, 292, 293, 0, 0, 129, 153,
	149, 218, 197, 123, 164, 253, 172, 179, 228, 296,
	208, 235, 133, 281, 252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 117, 176,
	295, 226, 152, 283, 0, 145, 0, 0, 0, 0,
	0, 0, 110, 111, 118, 126, 134, 144, 148, 151,
	156, 160, 163, 165, 166, 167, 170, 181, 184, 185,
	186, 187, 199, 200, 202, 203, 206, 207, 210, 211,
	212, 213, 215, 216, 217, 221, 223, 225, 227, 231,
	236, 237, 238, 239, 241, 242, 243, 246, 247, 248,
	249, 257, 261, 269, 270, 280, 287, 291, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 897, 147, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 177,
	0, 0, 254, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 222, 0, 259,
	158, 175, 124, 109, 119, 0, 157, 201, 232, 240,
	0, 0, 0, 0, 0, 141, 0, 234, 209, 279,
	0, 0, 214, 233, 178, 268, 224, 277, 278, 159,
	289, 290, 263, 286, 294, 127, 251, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 138, 229, 0,
	0, 140, 250, 125, 264, 191, 196, 135, 137, 136,
	120, 245, 266, 130, 139, 255, 260, 112, 262, 276,
	132, 244, 114, 274, 258, 189, 168, 169, 113, 0,
	230, 146, 154, 143, 204, 0, 0, 0, 271, 272,
	142, 297, 121, 285, 116, 122, 284, 198, 0, 0,
	0, 267, 275, 190, 183, 0, 115, 273, 188, 182,
	173, 150, 161, 219, 180, 220, 162, 194, 193, 195,
	0, 0, 0, 256, 282, 298, 128, 0, 0, 265,
	292, 293, 0, 0, 129, 153, 149, 218, 197, 123,
	164, 253, 172, 179, 228, 296, 208, 235, 133, 281,
	252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 117, 176, 295, 226, 152, 283,
	0, 145, 0, 0, 0, 0, 0, 0, 110, 111,
	118, 126, 134, 144, 148, 151, 156, 160, 163, 165,
	166, 167, 170, 181, 184, 185, 186, 187, 199, 200,
	202, 203, 206, 207, 210, 211, 212, 213, 215, 216,
	217, 221, 223, 225, 227, 231, 236, 237, 238, 239,
	241, 242, 243, 246, 247, 248, 249, 257, 261, 269,
	270, 280, 287, 291, 458, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 177, 0, 0, 254, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 0, 0, 0, 0, 0, 141, 0,
	234, 209, 279, 0, 0, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	138, 229, 0, 0, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 0, 0, 256, 282, 298, 128,
	0, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 117, 176, 295,
	226, 152, 283, 0, 145, 0, 0, 0, 0, 0,
	0, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 177, 0,
	0, 254, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 103,
	0, 0, 288, 0, 0, 0, 222, 0, 259, 158,
	175, 124, 109, 119, 0, 157, 201, 232, 240, 0,
	0, 0, 0, 0, 141, 0, 234, 209, 279, 0,
	0, 214, 233, 178, 268, 224, 277, 278, 159, 289,
	290, 263, 286, 294, 127, 251, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 138, 229, 0, 0,
	140, 250, 125, 264, 191, 196, 135, 137, 136, 120,
	245, 266, 130, 139, 255, 260, 112, 262, 276, 132,
	244, 114, 274, 258, 189, 168, 169, 113, 0, 230,
	146, 154, 143, 204, 0, 0, 0, 271, 272, 142,
	297, 121, 285, 116, 122, 284, 198, 0, 0, 0,
	267, 275, 190, 183, 0, 115, 273, 188, 182, 173,
	150, 161, 219, 180, 220, 162, 194, 193, 195, 0,
	0, 0, 256, 282, 298, 128, 0, 0, 265, 292,
	293, 0, 0, 129, 153, 149, 218, 197, 123, 164,
	253, 172, 179, 228, 296, 208, 235, 133, 281, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 117, 176, 295, 226, 152, 283, 0,
	145, 0, 0, 0, 0, 0, 0, 110, 111, 118,
	126, 134, 144, 148, 151, 156, 160, 163, 165, 166,
	167, 170, 181, 184, 185, 186, 187, 199, 200, 202,
	203, 206, 207, 210, 211, 212, 213, 215, 216, 217,
	221, 223, 225, 227, 231, 236, 237, 238, 239, 241,
	242, 243, 246, 247, 248, 249, 257, 261, 269, 270,
	280, 287, 291, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 177, 0, 0, 254, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 222, 0, 259, 158, 175, 124, 109, 119,
	0, 157, 201, 232, 240, 0, 0, 0, 0, 0,
	141, 0, 234, 209, 279, 0, 0, 214, 233, 178,
	268, 224, 277, 278, 159, 289, 290, 263, 286, 294,
	127, 251, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 138, 229, 0, 0, 140, 250, 125, 264,
	191, 196, 135, 137, 136, 120, 245, 266, 130, 139,
	255, 260, 112, 262, 276, 132, 244, 114, 274, 258,
	189, 168, 169, 113, 0, 230, 146, 154, 143, 204,
	0, 0, 0, 271, 272, 142, 297, 121, 285, 116,
	122, 284, 198, 0, 0, 0, 267, 275, 190, 183,
	0, 115, 273, 188, 182, 173, 150, 161, 219, 180,
	220, 162, 194, 193, 195, 0, 0, 0, 256, 282,
	298, 128, 0, 0, 265, 292, 293, 0, 0, 129,
	153, 149, 218, 197, 123, 164, 253, 172, 179, 228,
	296, 208, 235, 133, 281, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 117,
	176, 295, 226, 152, 283, 0, 145, 0, 0, 0,
	0, 0, 0, 110, 111, 118, 126, 134, 144, 148,
	151, 156, 160, 163, 165, 166, 167, 170, 181, 184,
	185, 186, 187, 199, 200, 202, 203, 206, 207, 210,
	211, 212, 213, 215, 216, 217, 221, 223, 225, 227,
	231, 236, 237, 238, 239, 241, 242, 243, 246, 247,
	248, 249, 257, 261, 269, 270, 280, 287, 291, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	177, 0, 0, 254, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 222, 0,
	259, 158, 175, 124, 109, 119, 0, 157, 201, 232,
	240, 0, 0, 0, 0, 0, 141, 0, 234, 209,
	279, 0, 0, 214, 233, 178, 268, 224, 277, 278,
	159, 289, 290, 263, 286, 294, 127, 251, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 138, 229,
	0, 0, 140, 250, 125, 264, 191, 196, 135, 137,
	136, 120, 245, 266, 130, 139, 255, 260, 112, 262,
	276, 132, 244, 114, 274, 258, 189, 168, 169, 113,
	0, 230, 146, 154, 143, 204, 0, 0, 0, 271,
	272, 142, 297, 121, 285, 116, 122, 284, 198, 0,
	0, 0, 267, 275, 190, 183, 0, 115, 273, 188,
	182, 173, 150, 161, 219, 180, 220, 162, 194, 193,
	195, 0, 0, 0, 256, 282, 298, 128, 0, 0,
	265, 292, 293, 0, 0, 129, 153, 149, 218, 197,
	123, 164, 253, 172, 179, 228, 296, 208, 235, 133,
	281, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 117, 176, 295, 226, 152,
	283, 0, 145, 0, 0, 0, 0, 0, 0, 110,
	111, 118, 126, 134, 144, 148, 151, 156, 160, 163,
	165, 166, 167, 170, 181, 184, 185, 186, 187, 199,
	200, 202, 203, 206, 207, 210, 211, 212, 213, 215,
	216, 217, 221, 223, 225, 227, 231, 236, 237, 238,
	239, 241, 242, 243, 246, 247, 248, 249, 257, 261,
	269, 270, 280, 287, 291, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 177, 0, 0, 254,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 222, 0, 259, 158, 175, 124,
	109, 119, 0, 157, 201, 232, 240, 0, 0, 0,
	0, 0, 141, 0, 234, 209, 279, 0, 0, 214,
	233, 178, 268, 224, 277, 278, 159, 289, 290, 263,
	286, 294, 127, 251, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 138, 229, 0, 0, 140, 250,
	125, 264, 191, 196, 135, 137, 136, 120, 245, 266,
	130, 139, 255, 260, 112, 262, 276, 132, 244, 114,
	274, 258, 189, 168, 169, 113, 0, 230, 146, 154,
	143, 204, 0, 0, 0, 271, 272, 142, 297, 121,
	285, 116, 475, 284, 198, 0, 0, 0, 267, 275,
	190, 183, 0, 115, 273, 188, 182, 173, 150, 161,
	219, 180, 220, 162, 194, 193, 195, 0, 0, 0,
	256, 282, 298, 128, 0, 0, 265, 292, 293, 0,
	0, 129, 153, 149, 218, 476, 474, 164, 253, 172,
	179, 228, 296, 208, 235, 133, 281, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 117, 176, 295, 226, 152, 283, 0, 145, 0,
	0, 0, 0, 0, 0, 110, 111, 118, 126, 134,
	144, 148, 151, 156, 160, 163, 165, 166, 167, 170,
	181, 184, 185, 186, 187, 199, 200, 202, 203, 206,
	207, 210, 211, 212, 213, 215, 216, 217, 221, 223,
	225, 227, 231, 236, 237, 238, 239, 241, 242, 243,
	246, 247, 248, 249, 257, 261, 269, 270, 280, 287,
	291, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 177, 0, 0, 254, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	222, 0, 259, 158, 175, 124, 109, 119, 0, 157,
	201, 232, 240, 0, 0, 0, 0, 0, 141, 0,
	234, 209, 279, 0, 0, 214, 233, 178, 268, 224,
	277, 278, 159, 289, 290, 263, 286, 294, 127, 251,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	138, 229, 0, 0, 140, 250, 125, 264, 191, 196,
	135, 137, 136, 120, 245, 266, 130, 139, 255, 260,
	112, 262, 276, 132, 244, 114, 274, 258, 189, 168,
	169, 113, 0, 230, 146, 154, 143, 204, 0, 0,
	0, 271, 272, 142, 297, 121, 285, 116, 122, 284,
	198, 0, 0, 0, 267, 275, 190, 183, 0, 115,
	273, 188, 182, 173, 150, 161, 219, 180, 220, 162,
	194, 193, 195, 0, 0, 0, 256, 282, 298, 128,
	0, 0, 265, 292, 293, 0, 0, 129, 153, 149,
	218, 197, 123, 164, 253, 172, 179, 228, 296, 208,
	235, 133, 281, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 117, 176, 295,
	226, 152, 283, 0, 145, 0, 0, 0, 0, 0,
	0, 110, 111, 118, 126, 134, 144, 148, 151, 156,
	160, 163, 165, 166, 167, 170, 181, 184, 185, 186,
	187, 199, 200, 202, 203, 206, 207, 210, 211, 212,
	213, 215, 216, 217, 221, 223, 225, 227, 231, 236,
	237, 238, 239, 241, 242, 243, 246, 247, 248, 249,
	257, 261, 269, 270, 280, 287, 291, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 177, 0,
	0, 254, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 222, 0, 259, 158,
	175, 124, 109, 119, 0, 157, 201, 232, 240, 0,
	0, 0, 0, 0, 141, 0, 234, 209, 279, 0,
	0, 214, 233, 178, 268, 224, 277, 278, 159, 289,
	290, 263, 286, 294, 127, 251, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 138, 229, 0, 0,
	140, 250, 125, 264, 191, 196, 135, 137, 136, 120,
	245, 266, 130, 139, 255, 260, 112, 262, 918, 132,
	244, 114, 274, 258, 189, 168, 169, 113, 0, 230,
	146, 154, 143, 204, 0, 0, 0, 271, 272, 142,
	297, 121, 285, 116, 475, 284, 198, 0, 0, 0,
	267, 275, 190, 183, 0, 115, 273, 188, 182, 173,
	150, 161, 219, 180, 220, 162, 194, 193, 195, 0,
	0, 0, 256, 282, 298, 128, 0, 0, 265, 292,
	293, 0, 0, 129, 153, 149, 218, 476, 474, 164,
	253, 172, 179, 228, 296, 208, 235, 133, 281, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 117, 176, 295, 226, 152, 283, 0,
	145, 0, 0, 0, 0, 0, 0, 110, 111, 118,
	126, 134, 144, 148, 151, 156, 160, 163, 165, 166,
	167, 170, 181, 184, 185, 186, 187, 199, 200, 202,
	203, 206, 207, 210, 211, 212, 213, 215, 216, 217,
	221, 223, 225, 227, 231, 236, 237, 238, 239, 241,
	242, 243, 246, 247, 248, 249, 257, 261, 269, 270,
	280, 287, 291, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 177, 0, 0, 254, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 222, 0, 259, 158, 175, 124, 109, 119,
	0, 157, 201, 232, 240, 0, 0, 0, 0, 0,
	141, 0, 234, 209, 279, 0, 0, 214, 233, 178,
	268, 224, 277, 278, 159, 289, 290, 263, 286, 294,
	127, 251, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 138, 229, 0, 0, 140, 250, 125, 264,
	191, 196, 135, 137, 136, 120, 245, 266, 130, 139,
	255, 260, 112, 262, 466, 132, 244, 114, 274, 258,
	189, 168, 169, 113, 0, 230, 146, 154, 143, 204,
	0, 0, 0, 271, 272, 142, 297, 121, 285, 116,
	475, 284, 198, 0, 0, 0, 267, 275, 190, 183,
	0, 115, 273, 188, 182, 173, 150, 161, 219, 180,
	220, 162, 194, 193, 195, 0, 0, 0, 256, 282,
	298, 128, 0, 0, 265, 292, 293, 0, 0, 129,
	153, 149, 218, 476, 474, 469, 468, 172, 179, 228,
	296, 208, 235, 133, 281, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 117,
	176, 295, 226, 152, 283, 0, 145, 0, 0, 0,
	0, 0, 0, 110, 111, 118, 126, 134, 144, 148,
	151, 156, 160, 163, 165, 166, 167, 170, 181, 184,
	185, 186, 187, 199, 200, 202, 203, 206, 207, 210,
	211, 212, 213, 215, 216, 217, 221, 223, 225, 227,
	231, 236, 237, 238, 239, 241, 242, 243, 246, 247,
	248, 249, 257, 261, 269, 270, 280, 287, 291,
}

var yyPact = [...]int{
	2653, -1000, -290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1251, 1323, -1000, -1000,
	-1000, -1000, -1000, -1000, 464, 168, -1000, -1000, -1000, 218,
	97, 19069, 216, 3101, 19861, -1000, -1000, -1000, -1000, 172,
	19861, -1000, -1000, -95, -96, -1000, 27, 932, 1034, -1000,
	-1000, 59, 16, -1000, -1000, -1000, -1000, -1000, -1000, 1243,
	1249, 1052, 1236, 1122, -1000, 9522, 169, 169, 18673, 21445,
	-1000, 19861, 7513, 213, 19861, -162, 190, 190, 122, 190,
	-1000, 465, -1000, -1000, -1000, 19861, 193, 19465, 193, 193,
	193, 193, 193, 19861, -1000, 275, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19861,
	927, 1196, 5873, 86, 5873, 5873, -1000, 550, -1000, 106,
	101, 95, 5873, -3, 499, 96, 8, -1000, 5873, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 180, 1034, 442, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1193, 621, 1055, 748,
	215, 19861, 467, -1000, -1000, 1201, 11514, 11910, 1251, -1000,
	1034, -1000, -1000, -1000, 1194, -1000, -1000, 522, 1294, -1000,
	14286, 273, -1000, 11514, 2305, 1030, -1000, -1000, 1030, -1000,
	-1000, 246, -1000, -1000, 13098, 13098, 13098, 13098, 13098, 13098,
	13098, 13098, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1030, -1000,
	10722, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 11514, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 18270, 17478, 19861, 986,
	985, -1000, -1000, 270, 951, 21049, -104, -1000, -1000, -1000,
	439, 17082, -1000, 269, -1000, 1191, -1000, -1000, 931, -1000,
	2233, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19465, 1231, 206,
	923, 497, 922, 920, 918, 19861, 917, 1027, 201, 19861,
	1213, 1071, 19861, 916, 915, 913, 908, -1000, 8333, -1000,
	5873, 5873, -1000, -1000, -1000, 190, 190, 5873, 5873, 5873,
	19861, 19861, 19861, -1000, -1000, 19861, -1000, -1000, 5873, 486,
	5873, 486, 5873, 5873, -1000, 1292, 501, 501, -1000, -1000,
	-1000, -1000, 11514, -1000, 13098, 396, -1000, 1069, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 905, -1000, -1000, 593, -1000,
	696, -1000, 11118, -1000, -1000, 19861, 5873, 109, 129, 135,
	19861, -1000, 1311, 364, 786, 266, 1026, -1000, 678, 1203,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1243, 748,
	1122, 702, 1087, -1000, -1000, -1000, 19861, -1000, 11514, 11514,
	738, -1000, 15474, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7103, 400, 13098, 567, 506,
	13098, 13098, 13098, 13098, 13098, 13098, 13098, 13098, 13098, 13098,
	13098, 13098, 13098, 13098, 13098, 582, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 885, -1000, 1034, 833, 833, 285,
	285, 285, 285, 285, 285, 285, 15870, 1222, 748, 912,
	454, 10722, 9522, 9522, 748, 11514, 11514, 10314, 9918, 9522,
	9522, 1222, 480, 454, 20653, -1000, -1000, 12702, -1000, -1000,
	-1000, -1000, -1000, 748, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19465, 19465, 9522, 9522, 9522, 9522, 748, 748,
	9522, 9522, 9522, 9522, 9522, 748, 748, 748, 748, 1222,
	1222, 9522, 9522, 9522, 1222, 9522, 9522, 1222, 9522, 9522,
	9522, 9522, 1222, 9522, 9522, 9522, 132, 19861, -1000, 1001,
	1031, -1000, -1000, -1000, 1230, 16686, 13890, 132, 975, 17478,
	19861, -1000, -1000, 17478, 19861, 6693, 20257, 951, -104, 1008,
	-1000, -119, -137, 8730, 260, -1000, -1000, -1000, 7923, -1000,
	5053, 6283, -1000, -80, -1000, -1000, -1000, 1038, -1000, 1038,
	142, -31, 1038, 1038, 1038, 1038, 1038, -14, -14, -14,
	-14, -15, -1000, -1000, -1000, -1000, -1000, 1054, 1053, -1000,
	1038, 1038, 1038, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1048, 171, 1048, 1040, 1040, 1040, 1040, 1057, -1000,
	19861, 5873, 1212, 5873, 105, 1050, -1000, -1000, 19861, 19861,
	1023, -1000, 19861, 1015, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 883, 861, -1000, -1000, -1000, -1000,
	-1000, -1000, 534, -1000, -1000, 684, 11514, -1000, -1000, -1000,
	-1000, 19861, 1217, 19861, 19861, 486, 454, 1047, -1000, 682,
	19861, -1000, 1014, -1000, 437, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 904,
	545, -1000, 19861, 19861, 19861, 19861, 19861, 227, -1000, 1115,
	11514, 11514, 7923, 11910, -1000, -1000, -1000, -1000, 1201, -1000,
	1222, 1244, -1000, 1137, 1134, 9522, -1000, -1000, 400, 457,
	-1000, -1000, 781, -1000, -1000, -1000, -1000, 262, 1030, -1000,
	3201, -1000, -1000, -1000, -1000, 567, 13098, 13098, 13098, 1047,
	3201, 3136, 2153, 1083, 285, 574, 574, 374, 374, 374,
	374, 374, 505, 505, -1000, -1000, -1000, 748, -1000, -1000,
	-1000, 9522, -1000, 11514, -1000, 748, 900, -1000, 900, -1000,
	685, 791, 477, 1290, 900, 453, 1279, 900, 900, 900,
	9522, 537, -1000, 11514, 748, -1000, 1171, 1013, 1012, 900,
	748, 1009, 900, 900, -175, -175, 748, 900, 748, 900,
	900, -175, -175, -175, -175, 9522, 9522, 900, 900, 900,
	9522, 900, 900, 9522, 900, 900, 900, 900, 9522, 900,
	900, 900, 969, 1030, -1000, 20257, 17478, 17478, 17478, 17478,
	17478, -1000, 1092, 1091, -1000, 1085, 1082, 1114, 15078, -1000,
	902, 16686, -1000, 1030, -1000, 14682, 430, 211, 210, 209,
	-1000, -1000, -1000, 1272, 17478, 997, -1000, 997, -1000, 258,
	-1000, -1000, 1008, -104, -144, -1000, -1000, -1000, -1000, 454,
	-1000, 608, -1000, 256, 1006, 4643, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1049, 855, -1000, 1182, 341, 426, 715,
	1140, -1000, -1000, 548, -82, -1000, -1000, 596, -14, -14,
	1038, 1038, 141, 1038, -1000, -14, -1000, -1000, -1000, 260,
	1189, 260, 260, 260, 260, -14, 629, 629, -1000, -1000,
	-1000, -1000, 594, -1000, 1048, -1000, -1000, 576, -1000, -1000,
	-1000, 1068, 19465, 1034, 1215, -1000, -1000, -1000, 1284, -1000,
	-1000, 186, 200, -1000, 5873, 19861, 5873, 5873, 1272, 848,
	825, -1000, 454, 501, 486, 1173, -1000, -1000, -1000, -1000,
	13098, -1000, -1000, 593, 833, -1000, -1000, 492, 359, 459,
	162, 162, -1000, 420, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 131, 1046, -1000, -1000, -1000, -1000, 26,
	104, 1121, 454, 454, -1000, -1000, 19861, -1000, -1000, -1000,
	-1000, 1000, -1000, -1000, -1000, 5463, 9522, -1000, 1047, 3201,
	2860, -1000, 13098, -1000, 748, 454, -1000, 9522, -1000, -1000,
	130, 582, 130, 13098, 13098, -1000, 13098, 13098, -1000, -209,
	-1000, 1007, 472, -1000, 11514, 789, -1000, -1000, 13098, 13098,
	-1000, -1000, -1000, -1000, -1000, 17874, -1000, -175, -175, -175,
	-175, -175, -1000, -1000, -1000, -1000, 900, 900, -175, -175,
	-175, 900, -175, -175, 900, -175, -175, -175, -175, 900,
	-175, -175, -175, 1067, 20257, 1030, -1000, 16278, 19465, 1016,
	1031, 1045, 1066, 871, -1000, -1000, -1000, -1000, 1086, -1000,
	1084, -1000, -1000, -1000, -1000, 19465, 13098, 430, -1000, 1030,
	1030, 1030, 1251, 11514, 997, -1000, -1000, 308, -1000, -1000,
	-140, -147, -1000, -1000, -1000, 7513, 5053, -1000, 5053, 19465,
	146, -1000, 715, -1000, -1000, 715, -1000, -1000, -1000, 1042,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 513, 13098, 1310,
	-1000, 1181, -1000, 1170, 614, -1000, -1000, 946, 260, 260,
	-14, -1000, -1000, 1038, -1000, 260, -1000, 441, -1000, -1000,
	-1000, -1000, 260, 898, -1000, 896, 994, -1000, 893, 19861,
	-1000, -1000, -1000, 1064, -1000, -1000, -1000, 941, 990, -1000,
	2233, 820, 818, 816, 19861, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 486, -1000, 13098, 3201, -1000, -1000, -1000, 713,
	-1000, 715, 326, -1000, -1000, -1000, 799, 1140, -1000, -1000,
	797, -1000, 788, 19465, 1160, 773, 19861, 19465, -1000, -1000,
	721, 770, 11514, -1000, 19465, -214, 754, 19465, 19465, 19465,
	-1000, -1000, 1272, 17478, -1000, -1000, 748, -1000, 13098, 3201,
	-1000, -1000, 748, 1038, 1038, -1000, 1038, 1040, -1000, 1038,
	15, 1038, 7, 748, 748, 2805, 2683, 2656, 2405, 1030,
	-171, -1000, 454, 11514, 2639, 2254, -1000, 307, -1000, -1000,
	-1000, -1000, -1000, -175, -175, -1000, -1000, -1000, -1000, -175,
	-1000, -1000, -175, -1000, -1000, -1000, -1000, -175, -1000, -1000,
	-1000, -1000, 1199, 944, 976, -1000, -1000, 9126, 748, 891,
	239, 889, -1000, 1251, -1000, -1000, 11514, 1039, -1000, 11514,
	-1000, -1000, -1000, 889, 1460, -1000, 19465, 19465, 19465, 1243,
	454, -1000, -1000, -1000, -1000, 4643, -1000, 853, -1000, 1038,
	-1000, 1140, -1000, -1000, 19465, -1000, 3201, -86, -1000, -1000,
	-1000, -1000, -1000, -1000, 260, -1000, -1000, -1000, -1000, -1000,
	-14, 612, -14, 572, -1000, 569, 1037, -1000, 1034, 19861,
	128, 186, -1000, 2233, 2233, 2233, -1000, -1000, 3201, 721,
	170, 2233, -1000, 1057, 341, 146, -1000, -1000, -1000, -1000,
	737, 336, -1000, 197, 170, 721, 454, 1208, -1000, 7513,
	-1000, -1000, 1036, 1059, -1000, 1268, 989, -1000, 3201, -1000,
	-1000, 156, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13098, 13098, 13098, 13098, 13098, 748, 602, 454, 13098, 13098,
	748, 1248, -1000, -1000, -1000, -1000, -1000, 1093, -1000, 1030,
	-1000, -1000, 999, 19465, 19465, -1000, 19465, 1243, 454, 19465,
	454, 13494, -1000, 15078, 842, -1000, 842, 842, -1000, 255,
	19465, 1203, 831, -1000, -1000, 260, -1000, 260, 935, 843,
	19465, -1000, 1240, -1000, 128, -1000, 583, 55, 60, -1000,
	52, 51, 49, 47, 42, -1000, -1000, -1000, -1000, 761,
	-1000, -1000, 717, -1000, 1035, 715, -1000, -1000, 712, -1000,
	-1000, 19465, -1000, 170, 1030, 988, -1000, 423, 19465, 19861,
	1253, 1246, -1000, -1000, 1171, 1171, 1171, 1171, 54, -1000,
	-1000, 1171, 1171, -1000, 11514, 1307, -1000, 1030, -1000, 1034,
	237, -1000, -1000, -1000, 829, -1000, 430, 19465, -1000, -1000,
	-1000, 255, -1000, 703, 420, 559, -1000, -1000, 143, -1000,
	-1000, -1000, -1000, 814, -1000, 80, 3138, -1000, -1000, -1000,
	-1000, -1000, -1000, 45, 44, 66, -1000, -1000, -1000, 548,
	19465, 1057, -1000, -1000, -1000, -1000, 124, 7513, 5053, 810,
	-1000, -1000, 11910, 11910, -1000, -1000, -1000, -1000, 748, 119,
	-217, -1000, -1000, 987, 20257, 976, 748, 19465, -1000, -1000,
	-1000, -1000, -1000, 563, -1000, 19861, 255, 76, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11514, 11514, 3138, -1000, -1000, -1000, -1000, -1000, 779,
	1033, -1000, 766, -1000, 19465, -1000, -1000, 1046, -1000, 454,
	-1000, 958, -1000, 454, -1000, -1000, 1118, -212, -221, 748,
	951, -1000, -1000, -1000, 1032, -1000, 255, 70, -1000, 611,
	747, -291, -1000, 255, 19465, -1000, 124, 1132, -214, 11910,
	-1000, 1096, -1000, -1000, 19465, -1000, 699, 687, 571, -1000,
	11514, 834, 2919, -1000, 760, -1000, 126, -1000, -1000, -215,
	743, 167, -1000, -1000, 489, 834, -1000, 724, -292, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 834,
	-1000, -1000, 255, 115, -218, 1063, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -293, 834, 252, -294, -1000, 1030, -222,
	1062, 1061, 1302, -1000, 775, -299, 188, 834, 605, -1000,
	-1000, 11514, 570, 12306, -1000, -1000, 1305, -1000, 1299, 327,
	327, 482, 834, -1000, -300, 187, 834, -1000, 673, -1000,
	1171, 748, -1000, -1000, -1000, 152, 623, -1000, -1000, 558,
	-1000, -301, 834, -1000, -1000, -1000, -1000, -1000, 173, 469,
	-302, -1000, 166, 834, -1000,
}

var yyPgo = [...]int{
	0, 1626, 181, 624, 1624, 1623, 1622, 28, 20, 16,
	31, 1618, 1390, 1388, 1384, 1382, 1616, 1379, 12, 23,
	26, 22, 24, 11, 1615, 6, 1614, 1611, 27, 1610,
	2, 84, 1609, 1608, 1607, 1606, 1603, 1361, 1602, 1601,
	1600, 1599, 1597, 1359, 1357, 1596, 1592, 1350, 1343, 1591,
	1590, 1338, 1336, 1331, 137, 1588, 1587, 1586, 145, 1582,
	111, 1581, 1580, 1579, 68, 1410, 81, 74, 757, 1578,
	7, 1577, 75, 91, 88, 1576, 70, 1575, 1574, 110,
	1573, 1571, 1557, 94, 1554, 1551, 3018, 1550, 109, 1549,
	55, 35, 80, 1546, 1545, 1542, 1541, 89, 138, 1539,
	1538, 1537, 61, 1534, 1529, 128, 1527, 1526, 1520, 96,
	46, 1519, 41, 38, 56, 1518, 98, 37, 1517, 87,
	1516, 1513, 1512, 1511, 1510, 19, 1509, 40, 1508, 99,
	76, 231, 10, 48, 60, 95, 1501, 9, 108, 65,
	62, 14, 100, 1500, 101, 93, 1499, 1493, 632, 1491,
	1490, 85, 1489, 1488, 79, 1486, 599, 105, 66, 1481,
	1480, 1479, 1478, 63, 78, 1476, 1475, 50, 187, 107,
	1126, 15, 1908, 36, 104, 1474, 49, 1473, 2551, 92,
	52, 73, 1466, 1463, 71, 82, 42, 1457, 1456, 1455,
	1454, 1453, 1452, 1256, 1451, 1449, 1444, 191, 118, 1443,
	1442, 86, 64, 1441, 1440, 1438, 90, 57, 97, 1437,
	77, 67, 1436, 1435, 1434, 1433, 47, 33, 1428, 1427,
	1425, 69, 39, 1423, 43, 30, 58, 51, 5, 53,
	1414, 13, 1413, 34, 1411, 44, 1408, 18, 83, 3,
	4, 8, 1397, 1395, 1394, 1392, 54, 1386, 1369, 45,
	1366, 1347, 0, 185, 112, 1341, 1329, 120,
}

var yyR1 = [...]int{
	0, 250, 251, 251, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 6, 3, 4, 4, 5, 5, 7, 7, 57,
	57, 8, 9, 9, 9, 9, 254, 254, 81, 81,
	79, 79, 80, 80, 138, 138, 10, 10, 10, 10,
	142, 142, 145, 145, 145, 146, 146, 146, 146, 182,
	182, 132, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 244, 244, 245, 245, 246, 246, 246, 246, 247,
	247, 248, 248, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 24, 26, 26, 166, 166,
	35, 35, 36, 36, 36, 128, 128, 128, 11, 11,
	11, 11, 11, 18, 20, 20, 27, 27, 28, 21,
	21, 21, 21, 29, 29, 30, 22, 22, 34, 34,
	32, 32, 31, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 17, 243, 243, 243, 25,
	25, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	237, 237, 236, 235, 235, 234, 234, 233, 41, 218,
	219, 219, 219, 219, 207, 208, 186, 186, 186, 186,
	186, 186, 186, 185, 185, 185, 185, 189, 189, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 188, 188,
	188, 188, 188, 188, 188, 188, 190, 190, 190, 190,
	190, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 192, 192, 192, 192,
	192, 192, 192, 192, 206, 206, 193, 193, 201, 201,
	202, 202, 202, 199, 199, 200, 200, 203, 203, 195,
	196, 204, 197, 197, 197, 198, 198, 198, 205, 205,
	205, 205, 194, 209, 209, 228, 228, 227, 227, 226,
	226, 226, 217, 217, 223, 223, 223, 223, 223, 212,
	212, 212, 211, 211, 213, 213, 216, 216, 225, 225,
	224, 210, 210, 229, 229, 229, 229, 229, 214, 214,
	215, 215, 215, 240, 241, 239, 239, 239, 239, 239,
	220, 220, 220, 221, 221, 221, 222, 222, 222, 242,
	242, 37, 37, 37, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 127, 127, 127, 39, 40, 40, 40,
	40, 40, 40, 40, 40, 164, 164, 238, 238, 238,
	238, 238, 232, 230, 230, 231, 231, 13, 42, 42,
	14, 14, 14, 14, 14, 14, 14, 15, 15, 43,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 69, 152, 152, 150, 150,
	153, 153, 151, 151, 151, 154, 154, 154, 155, 155,
	183, 183, 183, 45, 45, 50, 50, 53, 51, 52,
	165, 165, 48, 48, 49, 49, 49, 49, 63, 63,
	255, 255, 47, 47, 46, 46, 46, 46, 16, 256,
	54, 55, 55, 56, 56, 56, 60, 60, 60, 58,
	58, 58, 59, 59, 66, 66, 65, 65, 67, 67,
	67, 67, 130, 130, 130, 131, 131, 175, 175, 175,
	174, 174, 174, 174, 71, 71, 72, 72, 73, 73,
	74, 74, 74, 74, 89, 89, 90, 90, 90, 90,
	90, 100, 100, 137, 137, 139, 139, 75, 75, 75,
	75, 76, 76, 77, 77, 78, 78, 163, 163, 180,
	180, 180, 82, 82, 82, 84, 83, 83, 83, 83,
	85, 85, 87, 87, 86, 86, 88, 91, 91, 91,
	91, 92, 92, 68, 68, 68, 68, 68, 68, 68,
	149, 149, 94, 94, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 108, 108, 108, 108, 108, 108,
	95, 95, 95, 95, 95, 95, 95, 64, 64, 109,
	109, 109, 116, 110, 110, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 103,
	103, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 257, 257, 105, 104, 104, 104, 104, 104, 104,
	61, 61, 61, 61, 61, 181, 181, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	120, 120, 62, 62, 118, 118, 119, 121, 121, 117,
	117, 117, 97, 97, 97, 97, 97, 97, 97, 97,
	99, 99, 99, 122, 122, 111, 111, 70, 70, 123,
	123, 124, 124, 125, 125, 126, 126, 129, 129, 133,
	133, 133, 134, 134, 134, 134, 135, 135, 135, 96,
	96, 96, 96, 96, 96, 136, 136, 136, 136, 140,
	140, 112, 112, 114, 114, 113, 115, 141, 141, 144,
	144, 144, 144, 143, 143, 143, 177, 177, 177, 147,
	147, 156, 156, 157, 157, 148, 148, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 162, 162, 161, 161,
	161, 158, 158, 158, 159, 159, 176, 176, 172, 172,
	173, 173, 178, 178, 179, 179, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 252, 253, 167,
	168, 168, 168,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 4, 6,
	7, 5, 10, 1, 3, 1, 3, 7, 8, 1,
	1, 9, 8, 7, 6, 6, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 4, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 0, 2, 3, 11, 7, 9, 5, 5, 15,
	11, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 1, 3, 0, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 0, 2, 1, 3, 3, 4, 4,
	1, 3, 3, 3, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 1, 2, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 2, 1,
	2, 1, 2, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 2, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 1, 1, 1, 6, 10, 9, 7, 7, 7,
	9, 7, 12, 14, 7, 7, 9, 9, 10, 5,
	6, 8, 7, 0, 1, 2, 4, 7, 5, 5,
	5, 12, 7, 5, 9, 0, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 4, 4, 4, 4, 4, 3, 2, 3,
	4, 4, 3, 6, 6, 4, 4, 4, 4, 4,
	4, 3, 3, 2, 6, 2, 4, 4, 4, 4,
	4, 3, 7, 6, 5, 4, 2, 4, 3, 4,
	3, 3, 5, 2, 3, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 1, 3, 1, 2,
	3, 5, 2, 4, 7, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 1, 3, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 1, 1, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 9,
	4, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 1, 0,
	2, 1, 1, 0, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 4, 4, 0, 2, 4, 2,
	1, 3, 5, 4, 6, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -250, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -3, -4, 6, 7,
	-57, 9, 10, 30, -41, 120, -38, -39, -40, 123,
	122, 159, 124, 152, 54, 207, -53, 210, 211, -255,
	-165, 157, 158, 31, 32, 126, 205, 20, -252, 8,
	301, 121, 208, 154, 153, 26, 58, -251, 415, -125,
	15, -56, 5, -54, -256, -54, -54, -54, -54, -54,
	-218, 95, 58, -159, 133, 76, 292, 129, -166, 130,
	-158, 182, 35, 140, 139, 130, 130, 131, 133, 292,
	129, 167, 166, 130, -86, -178, 61, -170, 343, 143,
	358, 359, 207, 218, 212, 246, 234, 344, 360, 144,
	200, 232, 235, 279, 142, 193, 361, 175, 266, 274,
	203, 70, 210, 288, 362, 197, 199, 198, 187, 204,
	191, 155, 230, 223, 363, 351, 221, 28, 364, 276,
	251, 365, 348, 275, 222, 126, 366, 146, 140, 169,
	367, 252, 256, 368, 280, 369, 370, 371, 216, 217,
	372, 183, 282, 250, 33, 141, 345, 39, 164, 283,
	254, 373, 249, 244, 374, 375, 376, 377, 248, 215,
	243, 195, 43, 258, 257, 259, 196, 278, 237, 378,
	379, 147, 380, 381, 224, 18, 382, 383, 286, 158,
	384, 385, 386, 387, 162, 388, 389, 390, 277, 253,
	255, 391, 137, 392, 166, 393, 347, 394, 284, 188,
	220, 395, 148, 163, 157, 287, 396, 397, 398, 399,
	149, 400, 401, 402, 211, 201, 403, 404, 405, 406,
	192, 176, 290, 281, 42, 205, 263, 407, 214, 139,
	206, 408, 208, 172, 194, 269, 202, 241, 165, 409,
	410, 228, 229, 247, 213, 242, 209, 167, 168, 159,
	411, 289, 264, 349, 236, 233, 173, 412, 133, 170,
	171, 413, 270, 271, 174, 346, 285, 231, 265, 130,
	113, 235, 279, 120, 267, 268, 276, -212, 277, 166,
	169, -183, 130, -150, 266, 270, 271, 174, 61, 131,
	132, 33, 281, 280, 272, -178, -63, 124, 160, -86,
	-167, -167, -167, 269, 269, -167, -34, 206, 61, -2,
	-148, 133, 271, 135, 209, -134, 17, 16, -5, -3,
	-252, 6, 21, 22, -60, 44, 45, -55, -67, 104,
	-68, -178, -93, 78, -98, 29, 61, -170, 24, -97,
	-94, -117, -115, -116, 113, 114, 115, 102, 103, 110,
	79, 116, -103, -101, -102, -104, -106, -107, 63, 62,
	71, 64, 65, 66, 67, 72, 73, 74, -172, -113,
	-252, 48, 49, 129, 302, 303, 304, 305, 342, 150,
	306, 81, 38, 291, 300, 299, 298, 296, 297, 293,
	295, 294, 308, 309, 136, 292, 108, 301, 331, 332,
	333, 334, 335, 336, 337, 338, 340, 341, 339, 321,
	314, 315, 316, 317, 318, 319, 320, 322, 323, 324,
	325, 326, 327, 328, 329, 330, -148, -148, 11, -79,
	-80, -86, -88, -178, -141, -182, 209, -144, 281, 280,
	-117, -143, -172, -178, 279, 235, 278, -86, -219, -208,
	-173, -172, -169, 61, -170, 125, 151, 77, 350, 23,
	25, 261, 314, 80, 113, 315, 316, 317, 16, 20,
	81, 112, 302, 318, 120, 52, 293, 295, 291, 292,
	267, 29, 10, 26, 153, 186, 22, 106, 122, 84,
	85, 86, 156, 24, 154, 74, 150, 19, 55, 11,
	13, 312, 313, 14, 136, 135, 97, 184, 131, 50,
	8, 116, 27, 94, 46, 319, 320, 354, 36, 355,
	48, 95, 17, 296, 297, 31, 342, 321, 161, 356,
	322, 108, 189, 53, 40, 78, 72, 34, 75, 56,
	76, 15, 185, 51, 310, 357, 96, 123, 301, 49,
	129, 6, 307, 30, 152, 325, 324, 323, 326, 190,
	47, 304, 305, 327, 414, 130, 83, 308, 309, 134,
	73, 5, 35, 32, 9, 54, 57, 298, 299, 300,
	38, 329, 328, 330, 82, 12, 311, 131, -86, 301,
	-157, 136, -157, 167, 166, -157, 87, -42, -86, -156,
	136, -172, -156, -156, -156, -156, -156, -86, 117, -86,
	61, 30, -168, -252, -173, 292, 129, 61, 166, 169,
	130, 167, 133, -168, -168, -214, 11, 97, 175, 172,
	175, 172, 172, 173, -168, -153, -152, 168, 274, 275,
	269, 273, 12, -69, 95, 173, 269, 171, -168, -49,
	-2, -9, -7, -8, -2, 87, -167, -167, 30, 63,
	41, -243, 58, -253, 60, 130, -86, 120, 122, 125,
	56, -135, 19, 31, -68, -178, -126, -129, -68, -171,
	314, 315, 316, 317, 318, 331, 332, 333, 319, 320,
	334, 335, 336, 321, 322, 337, 338, 340, 341, 339,
	325, 324, 323, 326, 327, 329, 328, 330, -125, -2,
	-54, 40, -58, 21, 22, 69, 11, -175, 77, 76,
	94, -174, 23, 61, -170, -171, 63, 314, 315, 316,
	317, 318, 331, 332, 333, 319, 320, 334, 335, 336,
	321, 322, 337, 338, 340, 341, 339, 325, 324, 323,
	326, 327, 329, 328, 330, 117, -68, -95, 97, 78,
	95, 96, 80, 99, 98, 109, 102, 103, 104, 105,
	106, 107, 108, 100, 101, 112, 87, 88, 89, 90,
	91, 92, 93, -149, -252, -116, -252, 118, 119, -98,
	-98, -98, -98, -98, -98, -98, -98, -252, -2, -110,
	-68, -252, -252, -252, -252, -252, -252, -252, -252, -252,
	-252, -252, -120, -68, -252, -257, -105, -252, -257, -105,
	-257, -105, -257, -252, -257, -105, -257, -105, -257, -257,
	-105, -257, -252, -252, -252, -252, -252, -252, -252, -252,
	-252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
	-252, -252, -252, -252, -252, -252, -252, -252, -252, -252,
	-252, -252, -252, -252, -252, -252, -87, 27, -86, -72,
	-73, -74, -75, -89, -116, -252, -86, -86, -79, -254,
	59, 11, 57, -254, 59, 117, 59, -141, 209, -142,
	-145, 282, 284, 87, -177, -172, 63, 29, 117, 30,
	60, 59, -185, -189, -191, -190, -192, -187, -188, 232,
	235, 239, 237, 233, 238, 113, 236, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 30, 155,
	228, 229, 230, 231, 252, 253, 254, 255, 256, 257,
	258, 259, 212, 234, 344, 213, 214, 215, 216, 217,
	218, 220, 221, 222, 223, 224, 225, 226, -172, 23,
	133, 61, 78, 61, 61, 61, -86, 61, 59, 134,
	-79, 24, 56, -81, -86, 61, 61, 61, 61, -179,
	-178, -169, -168, -168, -157, -157, -168, -168, -168, -86,
	-86, -86, -86, -168, -154, 95, 12, -168, -154, -168,
	-168, 11, -151, 11, 97, -151, -68, -98, -155, 95,
	56, 61, -32, -31, -33, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 63, 60, -110,
	-86, -168, 170, 170, 130, 130, 176, -86, 9, 97,
	59, 18, 117, 59, -133, 25, 26, -133, -134, -253,
	-60, -99, 41, 64, 67, -59, 47, -86, -68, -68,
	-108, 72, 78, 73, 74, -174, 104, -179, -173, -169,
	-98, -109, -113, -116, 68, 97, 95, 96, 80, -98,
	-98, -98, -98, -98, -98, -98, -98, -98, -98, -98,
	-98, -98, -98, -98, -181, 61, 63, 61, -97, -97,
	-172, -58, -253, 59, -253, -2, -65, -67, -65, -253,
	-68, -68, -117, 63, -65, -117, 63, -65, -65, -65,
	-58, -118, -119, 82, -117, -253, -98, -172, -172, -65,
	-66, -65, -65, -65, -253, -253, -67, -65, -67, -65,
	-65, -253, -253, -253, -253, -58, -58, -65, -65, -65,
	-58, -65, -65, -58, -65, -65, -65, -65, -58, -65,
	-65, -65, -138, 162, -86, 30, 59, -82, -84, -83,
	-85, 46, 50, 52, 47, 48, 49, 53, -163, 23,
	-72, -252, -90, 162, -91, 23, -180, 54, 135, 55,
	-178, -171, 63, -138, 57, -72, -86, -72, -88, -178,
	104, -144, -142, 59, 283, 285, 286, 56, 75, -68,
	-198, 112, -173, -179, -220, -221, -222, -173, 63, 64,
	-208, -209, -210, -223, 145, -229, 137, 139, 35, -211,
	146, 131, 36, -186, -199, 264, -193, 58, -193, -193,
	240, 232, 235, 233, -193, -193, -193, -193, -193, -197,
	235, -197, -197, -197, -197, 233, 58, 58, -193, -193,
	-193, -201, 58, -201, 227, -201, -202, 58, -202, -202,
	-202, -176, 57, -132, -86, -168, 24, -168, -35, 179,
	151, 58, -86, -86, -86, 59, 61, 61, -215, 11,
	97, 63, -68, -86, -100, 23, -178, -178, -154, -64,
	156, 63, -86, 59, 87, 60, -160, 125, 122, 123,
	127, 128, -232, 261, 121, 235, 70, 29, 15, 302,
	162, 349, 61, 163, -86, -86, -86, -86, -86, 125,
	122, 42, -68, -68, -129, -135, -147, 19, 11, 38,
	38, -65, 72, 73, 74, 117, -252, -109, -98, -98,
	-98, -64, 77, -253, -66, -68, -253, 59, -253, -253,
	59, 57, 23, 11, 11, -253, 11, 11, -253, -253,
	-253, -65, -121, -119, 84, -68, -253, -253, 59, 59,
	-253, -253, -253, -253, -130, 310, -130, -253, -253, -253,
	-253, -253, -130, -130, -130, -130, -65, -65, -253, -253,
	-253, -65, -253, -253, -65, -253, -253, -253, -253, -65,
	-253, -253, -253, -96, 30, 38, -2, -252, -252, -141,
	-73, -74, -74, -73, -74, 46, 46, 46, 51, 46,
	51, 46, -83, -180, -253, -252, 34, -180, -91, 131,
	131, 131, -92, 12, -72, -92, -92, 117, -145, -146,
	287, 284, 290, 61, 63, 117, 59, -222, 87, 58,
	61, 36, -211, 131, 36, -211, -216, 61, -216, 36,
	-203, -195, -196, -204, -205, -194, 72, 78, 29, 56,
	261, 137, 36, 35, 70, -200, 265, 64, -197, -197,
	-193, -193, -193, 240, -193, -197, -198, 30, -198, -198,
	-198, -198, -197, -206, 63, -206, 64, -201, 64, 56,
	-172, -2, 23, -36, 8, 9, 10, -244, -245, -246,
	61, 97, 184, 185, 134, -168, -86, -168, -168, -92,
	61, 61, -151, -154, 34, -98, -31, -97, -167, -164,
	-238, -211, -242, -210, 138, 142, 145, 146, 137, 162,
	-164, -238, 145, -211, 146, 138, -161, -211, 134, 23,
	-164, -164, -217, 87, 162, -237, 57, 170, 261, 170,
	43, -86, -71, 11, 104, -173, -66, -64, 77, -98,
	-253, -67, -184, 113, 232, 155, 230, 223, 250, 237,
	263, 228, 264, -181, -184, -98, -98, -98, -98, 343,
	-125, 86, -68, 83, -98, -98, -172, -252, -130, -130,
	-130, -130, -130, -253, -253, -131, -130, -131, -131, -253,
	-131, -131, -253, -131, -131, -131, -131, -253, -131, -131,
	-131, -140, 56, -141, -112, -114, -113, -252, -2, -136,
	-172, -139, -172, -92, -77, -76, 56, 57, -78, 56,
	-76, 46, 46, -139, -98, -91, -252, -252, -252, -125,
	-68, -92, 284, 288, 289, -221, -222, -225, -224, -172,
	-229, 146, -216, -216, 58, 72, -98, 9, 36, 36,
	63, 60, -198, -198, -197, -193, -198, 61, 113, -198,
	60, 59, 60, 59, 60, 59, -86, -132, -132, 56,
	60, 59, -185, 61, 61, 61, -86, -154, -98, 58,
	-207, 61, -167, -216, -158, 61, 61, -167, 61, -172,
	36, 61, -86, -172, -207, 61, -68, -172, -235, 346,
	-236, 61, -172, -172, -172, -92, -72, -253, -98, -253,
	-193, -193, -193, -202, -193, 217, -193, 217, -253, -253,
	19, 19, 19, 19, -252, -62, 307, -68, 59, 59,
	-125, 162, -131, -131, -131, -131, -131, 28, -140, 59,
	-253, -253, -253, 59, 117, -253, 59, -125, -68, 58,
	-68, -253, -91, -163, -137, -172, -137, -137, -134, 60,
	59, -193, -137, -102, -198, -197, 63, -197, 64, 64,
	58, -2, -86, -247, -248, -249, 70, 345, 78, 186,
	187, 147, 188, 189, 190, -246, -185, -185, -185, -207,
	-127, 150, 151, -185, -176, -213, -211, 61, -162, 134,
	23, 134, -127, -207, 27, -234, -233, -173, 58, 57,
	-122, 13, -197, 61, -98, -98, -98, -98, -98, -253,
	63, -98, -98, -253, 16, 36, -114, 38, -2, -252,
	-172, -172, -172, -134, -137, -90, -180, 59, -253, -253,
	-253, -227, -226, 57, 141, 70, -224, -133, 60, -198,
	-198, 60, 60, -225, -132, 19, -132, -249, 63, 190,
	186, 190, 190, 190, 190, 192, 60, -167, 61, -186,
	58, -216, 61, -172, -167, -127, -252, 59, 87, -137,
	-86, -123, 14, 16, -253, -253, -253, -253, -61, 97,
	346, -253, -253, -110, 9, -112, -2, 117, 60, -91,
	-172, -226, 61, -217, 63, 148, 60, 177, -23, -2,
	-7, -8, -9, -10, -12, -37, -13, -14, -20, -21,
	-15, -43, -44, -53, -51, -52, -48, -47, -22, -17,
	-24, 81, 136, 207, 191, 191, 182, 183, -167, -225,
	-176, -167, -230, -231, 162, -233, -222, 60, -124, -68,
	-171, -111, -70, -68, -171, -253, 344, 53, 347, -125,
	-141, -253, -172, 64, -86, -228, -227, 178, -132, -68,
	-68, -26, -23, 60, 58, -253, 59, -172, -237, 59,
	43, 345, 348, -253, 58, -128, 180, 181, -27, -28,
	82, 83, 415, -228, -225, -231, 38, -235, -70, 43,
	-137, -132, 61, 61, 86, 84, -28, -68, -25, -19,
	-2, -7, -8, -9, -10, -20, -21, -22, -18, 207,
	86, -23, 60, 164, 346, 60, -11, -18, -10, -7,
	-8, -9, 81, -25, 83, 415, -25, -228, 165, 347,
	-240, -241, 56, -132, 415, -25, 86, 84, -29, -19,
	-30, 85, 415, -252, 348, -241, 56, -240, 56, 10,
	9, 86, 415, 136, -25, 86, 84, -30, -68, 86,
	-98, 161, -239, 149, 144, 147, 30, -239, 81, 415,
	136, -25, 83, -253, -253, 143, 29, 72, 86, 415,
	-25, 136, 86, 415, 136,
}

var yyDef = [...]int{
	27, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 793, 0, 499, 499,
	499, 499, 499, 499, 0, -2, 361, 362, 363, 0,
	0, 0, 0, -2, 474, 475, 476, 478, 479, 488,
	-2, 1229, 1229, 0, 0, 1229, 0, 0, 0, 39,
	40, 845, 0, 491, 480, 481, 1227, 1, 3, 802,
	0, 0, 503, 506, 501, 0, 845, 845, 0, 0,
	72, 0, 0, 0, 0, 0, 843, 843, 0, 843,
	865, 0, 861, 862, 863, 0, 841, 0, 841, 841,
	841, 841, 841, 0, 418, 584, 872, 873, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 0,
	0, 0, 1230, 0, 1230, 1230, 433, 0, 435, 0,
	0, 0, 1230, 0, 446, 0, 0, 453, 1230, 319,
	320, 321, 471, 472, 459, 473, 0, 0, 0, 492,
	493, 494, 495, 1229, 1229, 498, 156, 0, 176, 33,
	0, 0, 0, 846, 477, 806, 0, 0, 793, 35,
	0, 499, 504, 505, 509, 507, 508, 500, 0, 518,
	527, 0, 593, 0, 598, 600, -2, -2, 0, 635,
	636, 637, 638, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 663, 664, 665, 666, 667, 668, 772, 773,
	774, 775, 776, 777, 778, 779, 602, 603, 769, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 731, 731, 731, 731, 731, 731, 731,
	731, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 52, 584, 56, 0, 1176, 827, -2, -2,
	0, 0, 769, 0, -2, 1022, -2, 73, 0, 200,
	0, 870, 871, 868, 869, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 0, 419,
	1230, 1230, 422, 1231, 1232, 843, 843, 1230, 1230, 1230,
	0, 0, 0, 431, 432, 0, 338, 339, 1230, 465,
	1230, 465, 1230, 1230, 441, 0, 462, 462, 460, 461,
	456, 457, 0, 448, 0, 468, 450, 451, 454, 482,
	-2, 485, 486, 487, -2, 0, 496, 497, 0, 158,
	0, 175, 0, 34, 1228, 0, 1230, 0, 0, 0,
	0, 28, 0, 0, 803, 0, 794, 795, 799, 799,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 802, 33,
	506, 0, 512, 510, 511, 502, 0, 519, 0, 0,
	0, 528, 0, 530, 531, 532, 533, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 0, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 621, 622, 623,
	624, 625, 626, 599, 0, 613, 0, 0, 0, 655,
	656, 657, 658, 659, 660, 661, 0, 509, 33, 0,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 0, 761, 0, 714, 723, 0, 715, 724,
	716, 725, 717, 0, 718, 726, 719, 727, 720, 721,
	728, 722, 0, 0, 0, 514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	509, 0, 0, 0, 509, 0, 0, 509, 0, 0,
	0, 0, 509, 0, 0, 0, 54, 0, 583, 0,
	536, 538, 539, 540, -2, 0, 587, -2, 0, 0,
	0, 46, 47, 0, 0, 0, 0, 57, 1176, 59,
	60, 0, 0, 0, 295, 836, 837, 838, 0, 834,
	350, 0, 206, 283, 214, 215, 216, 276, 218, 276,
	276, 0, 276, 276, 276, 276, 276, 292, 292, 292,
	292, 292, 259, 260, 261, 262, 263, 0, 0, 236,
	276, 276, 276, 240, 266, 267, 268, 269, 270, 271,
	272, 273, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 278, 278, 278, 280, 280, 280, 280, 866, 71,
	0, 1230, 0, 1230, 0, 0, 198, 129, 0, 0,
	410, 842, 0, 412, 48, 413, 414, 415, 416, 585,
	874, 875, 420, 421, 0, 0, 425, 426, 427, 428,
	429, 430, 340, 436, 437, 0, 0, 438, 439, 440,
	445, 0, 551, 0, 0, 465, 447, 627, 449, 0,
	0, 489, 157, 160, 0, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 159, 177, 0,
	0, 386, 0, 0, 0, 0, 0, 0, 807, 0,
	0, 0, 0, 0, 797, 800, 801, 798, 806, 36,
	509, 0, 780, 0, 0, 0, 513, 31, 594, 595,
	597, 614, 0, 616, 618, 529, 520, 0, 770, -2,
	604, 605, 629, 630, 631, 0, 0, 0, 0, 627,
	609, 0, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 654, 745, 746, 0, 652, 653,
	662, 514, 632, 0, 825, 33, 0, 516, 0, 701,
	0, 0, 637, 772, 0, 637, 772, 0, 0, 0,
	0, 767, 764, 0, 0, 732, 0, 0, 0, 0,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 0,
	0, 572, 0, 0, 575, 0, 0, 0, 0, 568,
	0, 0, 544, 1114, 546, 0, 587, 0, 0, 0,
	569, 570, 571, 591, 0, 591, 51, 591, 53, 0,
	586, 828, 58, 0, 0, 63, 64, 829, 830, 831,
	832, 0, 770, 0, 199, 351, 353, 356, 357, 358,
	201, 202, 203, 0, 0, 332, 1122, 1159, -2, 326,
	1057, -2, -2, 205, 285, 284, 217, 0, 292, 292,
	276, 276, 276, 276, 245, 292, 248, 251, 252, 295,
	0, 295, 295, 295, 295, 292, 0, 0, 237, 238,
	239, 228, 0, 229, 278, 231, 232, 0, 233, 234,
	235, 0, 0, 0, 0, 77, 844, 78, 0, 130,
	131, 81, 0, 408, 1230, 0, 1230, 1230, 591, 0,
	0, 466, 467, 462, 465, 0, 463, 464, 444, 455,
	0, 469, 452, 0, 0, 178, 1229, -2, 395, 858,
	395, 395, 379, 312, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 0, 190, 388, 390, 389, 393, 0,
	0, 0, 804, 805, 796, 29, 0, 839, 840, 781,
	782, 534, 615, 617, 619, 0, 514, 606, 627, 610,
	0, 607, 0, 601, 0, 634, -2, 0, 699, 700,
	0, 0, 0, 0, 0, 738, 0, 0, 739, 0,
	710, 793, 0, 765, 0, 0, 713, 733, 0, 0,
	734, 735, 736, 737, 688, 0, 689, 0, 0, 0,
	0, 0, 695, 696, 697, 698, 0, 0, 525, 525,
	525, 0, 525, 525, 0, 525, 525, 525, 525, 0,
	525, 525, 525, 819, 0, 0, -2, 0, 0, 591,
	537, 563, 565, 0, 560, 573, 574, 576, 0, 578,
	0, 580, 581, 541, 543, 0, 0, 587, 550, 0,
	0, 0, 793, 0, 591, 44, 45, 0, 61, 62,
	0, 0, 68, 296, 297, 0, 0, 354, 0, 0,
	0, 314, 326, 322, 323, 326, 317, 327, 318, 0,
	207, 208, 209, 210, 211, 212, 287, 0, 0, 0,
	291, 0, 299, 301, 0, 213, 286, 0, 295, 295,
	292, 243, 244, 276, 249, 295, 253, 0, 254, 255,
	256, 257, 295, 0, 274, 0, 0, 230, 0, 0,
	867, -2, 71, 0, 132, 133, 134, 0, 82, 83,
	0, 0, 0, 0, 0, 411, 49, 423, 424, 434,
	341, 342, 465, 443, 0, 628, 161, 162, 364, 0,
	1229, 326, 0, 380, 396, 397, 398, 399, 400, 401,
	0, 1229, 398, 0, 399, 0, 0, 0, 859, 860,
	0, 0, 0, 313, 0, 193, 0, 0, 0, 0,
	808, 30, 591, 0, 521, 771, 0, 608, 0, 611,
	669, 517, 0, 276, 276, 750, 276, 280, 753, 276,
	755, 276, 758, 0, 0, 0, 0, 0, 0, 0,
	762, 712, 768, 0, 0, 0, 522, 793, 690, 691,
	692, 693, 694, 525, 525, 673, 526, 674, 675, 525,
	677, 678, 525, 680, 681, 682, 683, 525, 685, 686,
	687, 37, 0, 819, 809, 821, 823, 0, 33, 0,
	815, 0, 555, 793, 557, 564, 0, 0, 558, 0,
	559, 577, 579, 0, -2, 549, 0, 0, 0, 802,
	592, 43, 65, 66, 67, 352, 355, 0, 328, 276,
	331, 0, 315, 316, 0, 288, 289, 0, 298, 300,
	302, 277, 241, 242, 295, 250, 246, 293, 294, 258,
	292, 0, 292, 0, 281, 0, 0, 75, 0, 0,
	89, 0, 85, 0, 0, 0, 409, 442, 552, 0,
	383, 0, 367, 866, 324, 360, 368, 369, 374, 375,
	0, 0, 371, 0, 383, 0, 382, 0, 387, 0,
	191, 192, 0, 0, 392, 783, 535, 670, 612, 702,
	747, 292, 751, 752, 754, 756, 757, 759, 704, 703,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 671, 672, 676, 679, 684, 0, 38, 0,
	824, -2, 0, 0, 0, 55, 0, 802, 561, 0,
	566, 587, 547, 0, 0, 553, 0, 0, 42, 304,
	0, 799, 0, 290, 247, 295, 275, 295, 0, 0,
	0, -2, 0, 71, 90, 91, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 84, 86, 87, 88, 0,
	1229, 384, 0, 206, 0, 326, 325, 381, 0, 856,
	857, 0, 1229, 383, 0, 194, 195, 0, 0, 0,
	789, 0, 748, 749, 0, 0, 0, 0, 740, 711,
	763, 0, 0, 523, 0, 0, 822, 0, -2, 0,
	817, 816, 556, 41, 0, 545, 587, 0, 588, 589,
	590, 303, 307, 0, 312, 0, 329, 330, 0, 264,
	265, 279, 282, 0, 76, 0, 0, 92, 93, 94,
	95, 97, 98, 0, 0, 0, 1229, 366, 385, 204,
	0, 866, 370, 376, 377, 1229, 0, 0, 0, 0,
	394, 32, 0, 0, 705, 707, 706, 708, 0, 0,
	0, 729, 730, 793, 0, 812, 33, 0, 562, 548,
	554, 308, 309, 0, 311, 0, 305, 0, 71, -2,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	124, 0, 0, 0, 99, 100, 101, 102, 365, 0,
	0, 378, 0, 403, 0, 196, 197, 190, 790, 791,
	792, 784, 785, 787, 788, 709, 0, 0, 0, 0,
	820, -2, 818, 310, 0, 74, 306, 135, 80, 0,
	0, 0, 126, 305, 0, 402, 0, 0, 193, 0,
	741, 0, 744, 524, 0, 71, 0, 0, 0, 146,
	0, 0, 0, 372, 0, 404, 0, 391, 786, 742,
	0, 0, 136, 137, 0, 0, 147, 0, 0, 179,
	-2, 182, 183, 184, 185, 186, 187, 188, 189, 0,
	125, 127, 305, 0, 0, 333, 71, 138, 139, 140,
	141, 142, 144, 0, 0, 0, 0, 373, 0, 0,
	334, 335, 0, 79, 0, 0, 0, 0, 0, 180,
	153, 0, 0, 0, 743, 336, 0, 337, 0, 0,
	0, 0, 148, 149, 0, 0, 0, 154, 0, 143,
	0, 0, 343, 345, 346, 0, 0, 344, 145, 0,
	151, 0, 0, 405, 406, 347, 348, 349, 0, 0,
	0, 150, 0, 155, 152,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 79, 3, 3, 3, 107, 99, 3,
	58, 60, 104, 102, 59, 103, 117, 105, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 415,
	88, 87, 89, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 98, 3, 110,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 80, 81, 82, 83, 84, 85,
	86, 90, 91, 92, 93, 94, 95, 96, 97, 100,
	101, 106, 108, 111, 112, 113, 114, 115, 116, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:378
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:383
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:384
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:388
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:414
		{
			setParseTree(yylex, nil)
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:420
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:428
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 30:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:432
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 31:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:438
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 32:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:445
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:451
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:455
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:465
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:472
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:484
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.str = InsertStr
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:500
		{
			yyVAL.str = ReplaceStr
		}
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:506
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:512
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:516
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:520
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:524
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:529
		{
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:530
		{
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:534
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:538
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:558
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			yyVAL.partitions = nil
		}
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:567
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:573
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:577
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:581
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:585
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:595
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:605
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:609
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:615
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:623
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.str = SessionStr
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.str = GlobalStr
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:642
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:648
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 74:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:669
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:673
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:681
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 79:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:689
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 80:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:693
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:698
		{
			yyVAL.procedureParams = nil
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:735
		{
			yyVAL.characteristics = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:755
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:779
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:783
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:787
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:791
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:797
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:824
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:830
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:839
		{
			yyVAL.str = ""
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
			yyVAL.str = BeforeStr
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:853
		{
			yyVAL.str = AfterStr
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:859
		{
			yyVAL.str = InsertStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.str = UpdateStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.str = DeleteStr
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:872
		{
			yyVAL.triggerOrder = nil
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:876
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:880
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:896
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:902
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 145:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:906
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:912
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:922
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:928
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 150:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:933
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:938
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:944
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:952
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:956
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:962
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:972
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:978
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1026
		{
			yyVAL.exprs = nil
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1030
		{
			yyVAL.exprs = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1040
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1073
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1078
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1106
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1117
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.columnType = ColumnType{}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1260
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1496
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1501
		{
			yyVAL.sqlVal = nil
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1514
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1522
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1532
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1540
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1549
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1564
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = ""
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = ""
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1614
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.colKeyOpt = colKey
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1638
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1642
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1647
		{
			yyVAL.indexOptions = nil
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1671
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1676
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = ""
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1692
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1704
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = yyDollar[1].str
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 333:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1783
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 334:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1787
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 335:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1791
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 336:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1795
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 337:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1799
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1828
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = yyDollar[1].str
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 365:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1923
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 366:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1930
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 370:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1953
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 372:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 373:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 376:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 377:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1979
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 378:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1986
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1992
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1996
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2002
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2007
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnOrder = nil
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2044
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2054
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2058
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 391:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 394:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2102
		{
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
		}
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2115
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 405:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2131
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 406:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2135
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2159
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 411:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2171
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2179
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2187
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2195
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2203
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2228
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2233
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2245
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2250
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2254
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2258
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2270
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2286
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2294
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2298
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2302
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2318
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2323
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2333
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2337
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2345
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2359
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = ""
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.str = "full "
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = ""
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2446
		{
			yyVAL.showFilter = nil
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2460
		{
			yyVAL.showFilter = nil
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = SessionStr
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = GlobalStr
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.statement = &Begin{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2504
		{
			yyVAL.statement = &Begin{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.statement = &Commit{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.statement = &Rollback{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.statement = &OtherRead{}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2581
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			setAllowComments(yylex, true)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2601
		{
			yyVAL.bytes2 = nil
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.str = UnionStr
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.str = UnionAllStr
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = UnionDistinctStr
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2632
		{
			yyVAL.str = SQLCacheStr
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = DistinctStr
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = StraightJoinHint
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.selectExprs = nil
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2691
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2702
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 524:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2706
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2711
		{
			yyVAL.over = nil
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.over = yyDollar[1].over
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2720
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2751
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2755
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2765
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2789
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2800
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2811
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2815
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2819
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = nil
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2852
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2875
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2879
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2883
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2895
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2899
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.empty = struct{}{}
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.empty = struct{}{}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = JoinStr
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = JoinStr
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = JoinStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = StraightJoinStr
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = LeftJoinStr
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = LeftJoinStr
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = RightJoinStr
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = RightJoinStr
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = NaturalJoinStr
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2989
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3004
		{
			yyVAL.indexHints = nil
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3008
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3012
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3016
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3021
		{
			yyVAL.expr = nil
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3035
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3055
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = ""
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3089
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3093
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3097
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = IsNullStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = IsNotNullStr
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = IsTrueStr
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = IsNotTrueStr
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = IsFalseStr
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = IsNotFalseStr
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.str = EqualStr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.str = LessThanStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.str = GreaterThanStr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = LessEqualStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = GreaterEqualStr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = NotEqualStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3178
		{
			yyVAL.expr = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3182
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3222
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3250
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3254
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3266
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3302
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3332
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3360
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3364
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3386
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3390
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3394
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3406
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3410
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3414
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3418
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3509
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3513
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3517
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 705:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3521
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3525
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 707:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3529
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 708:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3533
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 709:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3545
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3601
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3633
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 730:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3637
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = BooleanModeStr
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 743:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = QueryExpansionStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3745
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3753
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3761
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3770
		{
			yyVAL.expr = nil
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = string("")
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3799
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = nil
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3818
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3822
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = &NullVal{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3866
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3870
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.exprs = nil
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3879
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3889
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = nil
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3908
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3923
		{
			yyVAL.orderBy = nil
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3927
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3943
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3947
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = AscScr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = AscScr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = DescScr
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.limit = nil
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3973
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3977
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = ""
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = ForUpdateStr
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3990
		{
			yyVAL.str = ShareModeStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4011
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4016
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4020
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4024
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4043
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.setExprs = nil
		}
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4052
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4098
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4104
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4108
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4112
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.bytes = []byte("charset")
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.expr = &Default{}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.byt = 0
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.byt = 1
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			yyVAL.byt = 0
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4154
		{
			yyVAL.byt = 1
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = IgnoreStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.empty = struct{}{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.empty = struct{}{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.empty = struct{}{}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4188
		{
			yyVAL.empty = struct{}{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = UniqueStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = FulltextStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = SpatialStr
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = yyDollar[1].str
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4208
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			decNesting(yylex)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			skipToEnd(yylex)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			skipToEnd(yylex)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			skipToEnd(yylex)
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
