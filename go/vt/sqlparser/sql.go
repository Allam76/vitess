// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const BEGIN = 57589
const START = 57590
const TRANSACTION = 57591
const COMMIT = 57592
const ROLLBACK = 57593
const SAVEPOINT = 57594
const WORK = 57595
const RELEASE = 57596
const BIT = 57597
const TINYINT = 57598
const SMALLINT = 57599
const MEDIUMINT = 57600
const INT = 57601
const INTEGER = 57602
const BIGINT = 57603
const INTNUM = 57604
const SERIAL = 57605
const REAL = 57606
const DOUBLE = 57607
const FLOAT_TYPE = 57608
const DECIMAL = 57609
const NUMERIC = 57610
const DEC = 57611
const FIXED = 57612
const PRECISION = 57613
const TIME = 57614
const TIMESTAMP = 57615
const DATETIME = 57616
const YEAR = 57617
const CHAR = 57618
const VARCHAR = 57619
const BOOL = 57620
const CHARACTER = 57621
const VARBINARY = 57622
const NCHAR = 57623
const NVARCHAR = 57624
const NATIONAL = 57625
const VARYING = 57626
const TEXT = 57627
const TINYTEXT = 57628
const MEDIUMTEXT = 57629
const LONGTEXT = 57630
const LONG = 57631
const BLOB = 57632
const TINYBLOB = 57633
const MEDIUMBLOB = 57634
const LONGBLOB = 57635
const JSON = 57636
const ENUM = 57637
const GEOMETRY = 57638
const POINT = 57639
const LINESTRING = 57640
const POLYGON = 57641
const GEOMETRYCOLLECTION = 57642
const MULTIPOINT = 57643
const MULTILINESTRING = 57644
const MULTIPOLYGON = 57645
const LOCAL = 57646
const LOW_PRIORITY = 57647
const NULLX = 57648
const AUTO_INCREMENT = 57649
const APPROXNUM = 57650
const SIGNED = 57651
const UNSIGNED = 57652
const ZEROFILL = 57653
const COLLATION = 57654
const DATABASES = 57655
const SCHEMAS = 57656
const TABLES = 57657
const FULL = 57658
const PROCESSLIST = 57659
const COLUMNS = 57660
const FIELDS = 57661
const ENGINES = 57662
const PLUGINS = 57663
const NAMES = 57664
const CHARSET = 57665
const GLOBAL = 57666
const SESSION = 57667
const ISOLATION = 57668
const LEVEL = 57669
const READ = 57670
const WRITE = 57671
const ONLY = 57672
const REPEATABLE = 57673
const COMMITTED = 57674
const UNCOMMITTED = 57675
const SERIALIZABLE = 57676
const CURRENT_TIMESTAMP = 57677
const DATABASE = 57678
const CURRENT_DATE = 57679
const CURRENT_USER = 57680
const CURRENT_TIME = 57681
const LOCALTIME = 57682
const LOCALTIMESTAMP = 57683
const UTC_DATE = 57684
const UTC_TIME = 57685
const UTC_TIMESTAMP = 57686
const REPLACE = 57687
const CONVERT = 57688
const CAST = 57689
const SUBSTR = 57690
const SUBSTRING = 57691
const TRIM = 57692
const LEADING = 57693
const TRAILING = 57694
const BOTH = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const OVER = 57700
const WINDOW = 57701
const GROUPING = 57702
const GROUPS = 57703
const CURRENT = 57704
const ROWS = 57705
const RANGE = 57706
const AVG = 57707
const BIT_AND = 57708
const BIT_OR = 57709
const BIT_XOR = 57710
const COUNT = 57711
const JSON_ARRAYAGG = 57712
const JSON_OBJECTAGG = 57713
const MAX = 57714
const MIN = 57715
const STDDEV_POP = 57716
const STDDEV = 57717
const STD = 57718
const STDDEV_SAMP = 57719
const SUM = 57720
const VAR_POP = 57721
const VARIANCE = 57722
const VAR_SAMP = 57723
const CUME_DIST = 57724
const DENSE_RANK = 57725
const FIRST_VALUE = 57726
const LAG = 57727
const LAST_VALUE = 57728
const LEAD = 57729
const NTH_VALUE = 57730
const NTILE = 57731
const ROW_NUMBER = 57732
const PERCENT_RANK = 57733
const RANK = 57734
const MATCH = 57735
const AGAINST = 57736
const BOOLEAN = 57737
const LANGUAGE = 57738
const WITH = 57739
const QUERY = 57740
const EXPANSION = 57741
const UNUSED = 57742
const ARRAY = 57743
const DESCRIPTION = 57744
const EMPTY = 57745
const JSON_TABLE = 57746
const LATERAL = 57747
const MEMBER = 57748
const RECURSIVE = 57749
const ACTIVE = 57750
const BUCKETS = 57751
const CLONE = 57752
const COMPONENT = 57753
const DEFINITION = 57754
const ENFORCED = 57755
const EXCLUDE = 57756
const FOLLOWING = 57757
const GEOMCOLLECTION = 57758
const GET_MASTER_PUBLIC_KEY = 57759
const HISTOGRAM = 57760
const HISTORY = 57761
const INACTIVE = 57762
const INVISIBLE = 57763
const LOCKED = 57764
const MASTER_COMPRESSION_ALGORITHMS = 57765
const MASTER_PUBLIC_KEY_PATH = 57766
const MASTER_TLS_CIPHERSUITES = 57767
const MASTER_ZSTD_COMPRESSION_LEVEL = 57768
const NESTED = 57769
const NETWORK_NAMESPACE = 57770
const NOWAIT = 57771
const NULLS = 57772
const OJ = 57773
const OLD = 57774
const ORDINALITY = 57775
const ORGANIZATION = 57776
const OTHERS = 57777
const PATH = 57778
const PERSIST = 57779
const PERSIST_ONLY = 57780
const PRECEDING = 57781
const PRIVILEGE_CHECKS_USER = 57782
const PROCESS = 57783
const REFERENCE = 57784
const REQUIRE_ROW_FORMAT = 57785
const RESOURCE = 57786
const RESPECT = 57787
const RESTART = 57788
const RETAIN = 57789
const SECONDARY = 57790
const SECONDARY_ENGINE = 57791
const SECONDARY_LOAD = 57792
const SECONDARY_UNLOAD = 57793
const SKIP = 57794
const SRID = 57795
const THREAD_PRIORITY = 57796
const TIES = 57797
const VCPU = 57798
const VISIBLE = 57799
const SYSTEM = 57800
const INFILE = 57801

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 982,
	-1, 42,
	141, 1046,
	142, 1064,
	-2, 203,
	-1, 48,
	181, 626,
	182, 626,
	-2, 616,
	-1, 481,
	128, 1074,
	-2, 1068,
	-1, 482,
	128, 1075,
	-2, 1069,
	-1, 586,
	98, 1329,
	128, 1329,
	-2, 1030,
	-1, 587,
	98, 1442,
	128, 1442,
	-2, 1031,
	-1, 592,
	98, 1352,
	128, 1352,
	-2, 1032,
	-1, 593,
	98, 1398,
	128, 1398,
	-2, 1033,
	-1, 594,
	98, 1399,
	128, 1399,
	-2, 1034,
	-1, 595,
	98, 1283,
	128, 1283,
	-2, 1038,
	-1, 597,
	98, 1375,
	128, 1375,
	-2, 1040,
	-1, 1050,
	1, 714,
	5, 714,
	12, 714,
	13, 714,
	14, 714,
	15, 714,
	17, 714,
	19, 714,
	30, 714,
	31, 714,
	56, 714,
	57, 714,
	58, 714,
	59, 714,
	60, 714,
	62, 714,
	63, 714,
	66, 714,
	67, 714,
	69, 714,
	70, 714,
	478, 714,
	-2, 744,
	-1, 1054,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1278,
	128, 1077,
	-2, 1073,
	-1, 1443,
	44, 475,
	-2, 1294,
	-1, 1447,
	68, 475,
	-2, 1245,
	-1, 1450,
	68, 471,
	72, 471,
	-2, 1172,
	-1, 1451,
	68, 472,
	72, 472,
	-2, 1182,
	-1, 1565,
	44, 518,
	148, 520,
	150, 518,
	151, 518,
	-2, 553,
	-1, 1635,
	5, 50,
	-2, 810,
	-1, 1933,
	69, 1224,
	70, 1224,
	128, 1224,
	-2, 657,
	-1, 1956,
	1, 765,
	5, 765,
	12, 765,
	13, 765,
	14, 765,
	15, 765,
	17, 765,
	19, 765,
	30, 765,
	31, 765,
	56, 765,
	57, 765,
	58, 765,
	59, 765,
	60, 765,
	62, 765,
	63, 765,
	66, 765,
	67, 765,
	69, 765,
	70, 765,
	478, 765,
	-2, 744,
	-1, 2057,
	148, 521,
	-2, 519,
	-1, 2118,
	5, 50,
	-2, 1002,
	-1, 2318,
	41, 1084,
	-2, 1082,
	-1, 2447,
	5, 50,
	-2, 1005,
}

const yyPrivate = 57344

const yyLast = 30229

var yyAct = [...]int{
	544, 78, 2585, 2609, 2636, 2464, 785, 405, 2599, 2528,
	2338, 2600, 2450, 2587, 2370, 7, 1495, 2501, 2463, 2369,
	6, 484, 2437, 2368, 5, 2371, 8, 2526, 1674, 2432,
	2225, 2265, 2367, 3, 2318, 482, 81, 1085, 1950, 2130,
	1703, 611, 1850, 1969, 487, 1859, 543, 1493, 473, 1724,
	1001, 1402, 2206, 1452, 2320, 1926, 1435, 2018, 2183, 2177,
	1505, 2161, 1256, 2451, 1400, 1970, 466, 461, 1927, 2145,
	388, 391, 413, 413, 450, 2051, 1784, 1423, 1858, 78,
	1444, 817, 125, 500, 1434, 125, 1675, 1923, 1175, 91,
	104, 125, 609, 1396, 1433, 1564, 1942, 1174, 1588, 1935,
	2042, 416, 416, 1249, 1484, 1895, 1312, 1303, 1531, 1869,
	1177, 465, 1440, 125, 1264, 1828, 1219, 1375, 1379, 588,
	1480, 1767, 1386, 2146, 125, 801, 1155, 606, 125, 614,
	903, 1280, 125, 1065, 591, 1047, 910, 1192, 1046, 906,
	1050, 867, 1367, 846, 605, 469, 125, 416, 1064, 614,
	607, 584, 585, 923, 1224, 460, 580, 125, 408, 407,
	845, 1547, 772, 1019, 577, 83, 1056, 2658, 2654, 2644,
	2626, 2624, 2604, 1020, 2580, 2509, 80, 1217, 67, 458,
	2155, 2617, 2297, 2566, 2563, 35, 2495, 70, 38, 39,
	35, 35, 2598, 35, 35, 2445, 2310, 1795, 2295, 2003,
	784, 2568, 85, 86, 87, 88, 89, 2565, 2562, 2480,
	2015, 2162, 1518, 2298, 1669, 2494, 1916, 2491, 2492, 2164,
	479, 2412, 1468, 1610, 877, 2110, 771, 1965, 1966, 1518,
	2444, 1670, 2250, 1546, 35, 1398, 70, 38, 39, 489,
	400, 805, 806, 1712, 1223, 808, 1711, 79, 58, 1713,
	1420, 1421, 79, 79, 76, 79, 79, 1964, 40, 1245,
	1246, 1066, 774, 1067, 777, 778, 896, 1221, 1222, 559,
	601, 565, 567, 566, 563, 564, 562, 561, 560, 807,
	1419, 2532, 1220, 914, 821, 822, 399, 398, 2167, 1750,
	568, 569, 820, 1454, 1545, 864, 79, 2349, 938, 937,
	947, 948, 940, 941, 942, 943, 944, 945, 946, 939,
	1460, 1462, 949, 1461, 1469, 1474, 2532, 1469, 2097, 2095,
	2396, 397, 457, 2607, 2610, 2606, 2178, 2165, 2166, 2168,
	2169, 2170, 2527, 2533, 2181, 70, 38, 39, 1790, 1818,
	382, 2593, 2323, 2041, 1456, 1456, 1823, 2179, 2180, 1557,
	2511, 402, 2184, 2185, 2186, 2187, 2510, 40, 2234, 42,
	72, 45, 44, 47, 1481, 2468, 2025, 2470, 2533, 2202,
	2416, 2195, 1558, 827, 1237, 2397, 116, 112, 113, 2517,
	114, 1792, 1506, 2193, 110, 78, 78, 2296, 2406, 2613,
	125, 48, 75, 74, 2506, 1204, 2290, 2300, 46, 835,
	830, 2289, 2504, 2505, 837, 2288, 2287, 2285, 836, 2286,
	2284, 2564, 883, 118, 117, 884, 2452, 834, 838, 2402,
	2403, 2132, 1572, 1566, 1567, 2365, 1565, 1695, 1568, 1569,
	1500, 392, 1809, 1810, 125, 2019, 2020, 2021, 2022, 2023,
	828, 829, 2498, 2499, 56, 57, 818, 2398, 819, 821,
	822, 2292, 2414, 2314, 892, 804, 2028, 1794, 1499, 814,
	815, 65, 900, 66, 1573, 119, 383, 120, 2529, 2016,
	2582, 1225, 111, 393, 816, 2019, 2020, 2021, 2022, 2023,
	813, 958, 389, 812, 960, 2595, 2408, 776, 775, 2560,
	2433, 1853, 1380, 2399, 73, 125, 52, 53, 60, 2363,
	61, 2650, 82, 2529, 2207, 2208, 1084, 1227, 1084, 1083,
	1226, 926, 1836, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 2002, 71, 999, 2163, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 2043, 1018,
	1021, 1021, 1021, 1027, 1021, 1021, 1027, 1021, 1027, 1036,
	1037, 1038, 1039, 1040, 1041, 1552, 1051, 1000, 1757, 1459,
	2443, 401, 1223, 1469, 2301, 1483, 2530, 107, 2469, 1896,
	115, 71, 2576, 1205, 77, 2311, 1796, 1785, 831, 77,
	77, 885, 77, 77, 2350, 1221, 1222, 2293, 2407, 1793,
	125, 125, 125, 390, 1057, 1571, 2413, 2313, 889, 390,
	2027, 2530, 1084, 2640, 1834, 1742, 614, 385, 390, 591,
	97, 1898, 891, 1786, 591, 879, 880, 881, 1078, 898,
	1747, 1746, 2591, 77, 2056, 2586, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 2659, 2589,
	2085, 2656, 1743, 386, 411, 1973, 409, 412, 2645, 1045,
	1084, 2627, 1729, 773, 1836, 2266, 787, 1748, 2418, 1735,
	1405, 1407, 2217, 99, 107, 1736, 456, 96, 1148, 2268,
	71, 875, 2218, 109, 108, 1817, 1814, 1847, 1798, 1797,
	1515, 1144, 1553, 1163, 1069, 1514, 1161, 832, 1702, 1070,
	1729, 963, 964, 965, 966, 967, 968, 969, 970, 1729,
	1787, 1788, 1701, 959, 1022, 1024, 1026, 1028, 1030, 1032,
	1033, 1035, 1700, 1082, 1023, 1025, 105, 1029, 1031, 1729,
	1034, 1055, 769, 1812, 1745, 1060, 106, 895, 2638, 1645,
	1900, 2639, 779, 2637, 354, 1904, 2221, 1899, 1642, 1897,
	2267, 1729, 1406, 2082, 1902, 2074, 1732, 874, 1079, 1728,
	961, 962, 101, 1816, 102, 1842, 1834, 1901, 1815, 1716,
	1839, 1708, 1605, 1838, 1841, 413, 1157, 2411, 390, 1593,
	109, 108, 1903, 1905, 1578, 1259, 1077, 2588, 2590, 1062,
	929, 797, 413, 1176, 2216, 614, 939, 1728, 1424, 949,
	949, 1992, 2037, 416, 416, 1053, 1728, 410, 1415, 1846,
	1202, 1252, 125, 1843, 922, 125, 94, 2630, 2610, 2629,
	416, 416, 1193, 125, 803, 1522, 1728, 810, 1851, 1179,
	1257, 1258, 125, 125, 125, 125, 938, 937, 947, 948,
	940, 941, 942, 943, 944, 945, 946, 939, 1728, 2222,
	949, 823, 416, 1993, 1940, 1834, 1156, 961, 962, 1084,
	1939, 93, 1835, 1836, 921, 920, 961, 962, 1640, 786,
	1639, 2647, 413, 942, 943, 944, 945, 946, 939, 1235,
	1287, 949, 922, 78, 1212, 1075, 839, 98, 921, 920,
	920, 1918, 921, 920, 1532, 1285, 1286, 1284, 780, 92,
	416, 416, 416, 1215, 614, 1200, 922, 922, 416, 2643,
	922, 1744, 94, 416, 416, 1243, 1180, 1368, 802, 1194,
	2577, 125, 1523, 125, 811, 1368, 614, 1658, 1189, 1190,
	1150, 1191, 1158, 940, 941, 942, 943, 944, 945, 946,
	939, 1165, 2596, 949, 125, 825, 1196, 1250, 1197, 2194,
	926, 78, 455, 1405, 1407, 1232, 2188, 1183, 1184, 921,
	920, 1278, 1230, 921, 920, 2651, 2579, 1241, 1980, 1281,
	2503, 79, 2473, 1307, 1308, 1240, 1277, 922, 917, 921,
	920, 922, 1283, 1000, 789, 790, 791, 792, 793, 794,
	795, 1207, 1208, 2465, 1003, 1210, 614, 922, 938, 937,
	947, 948, 940, 941, 942, 943, 944, 945, 946, 939,
	2448, 1213, 949, 1649, 921, 920, 2308, 1228, 907, 2652,
	2502, 908, 1314, 1229, 1231, 1242, 1346, 2466, 1236, 2307,
	1276, 1239, 922, 2306, 2409, 1406, 1199, 921, 920, 574,
	575, 1773, 1399, 1247, 1920, 1353, 1356, 1051, 2502, 2305,
	2541, 1051, 2540, 1369, 2299, 922, 2553, 1370, 921, 920,
	2154, 2153, 614, 614, 1270, 1272, 1273, 1772, 1274, 125,
	1271, 1770, 902, 2467, 1000, 1321, 922, 125, 125, 1325,
	2410, 843, 125, 125, 1751, 870, 125, 125, 125, 1590,
	1591, 1592, 869, 1304, 1179, 1305, 2552, 2514, 591, 1261,
	1641, 1714, 2512, 1715, 842, 2479, 614, 614, 475, 1278,
	1404, 938, 937, 947, 948, 940, 941, 942, 943, 944,
	945, 946, 939, 1262, 1428, 949, 1263, 2405, 607, 2404,
	1395, 2362, 2315, 2283, 2244, 1430, 2191, 2190, 2189, 2151,
	1410, 1985, 1279, 1768, 1412, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1542, 1512, 1282, 1408, 921, 920, 1144, 1209, 1181, 2539,
	2538, 2415, 1868, 2360, 125, 2332, 1732, 2326, 1429, 2214,
	2070, 2066, 922, 2058, 125, 2029, 125, 125, 416, 416,
	416, 2013, 1027, 125, 2012, 1448, 2011, 1803, 1802, 1441,
	1536, 1520, 1519, 1306, 1206, 1417, 1416, 1422, 1413, 1203,
	1173, 1172, 1171, 1170, 1159, 1431, 1438, 1153, 1152, 125,
	125, 125, 1151, 1359, 1538, 1490, 1491, 1149, 865, 799,
	396, 394, 1371, 1486, 1487, 1488, 1489, 1164, 1455, 1575,
	882, 1510, 1511, 902, 125, 1310, 125, 1482, 1704, 1318,
	614, 2257, 2569, 2113, 614, 2141, 2559, 2325, 1327, 1328,
	2486, 902, 614, 2141, 2484, 614, 2141, 2482, 1594, 1338,
	2141, 2364, 2277, 1342, 485, 2257, 2356, 2276, 1544, 2257,
	2273, 1053, 2008, 902, 2257, 902, 1053, 2257, 2256, 1365,
	1053, 1278, 1986, 938, 937, 947, 948, 940, 941, 942,
	943, 944, 945, 946, 939, 1383, 1277, 949, 1524, 2141,
	2140, 2122, 902, 1530, 1470, 1471, 1472, 1473, 1577, 902,
	875, 1281, 938, 937, 947, 948, 940, 941, 942, 943,
	944, 945, 946, 939, 2000, 1999, 949, 2076, 1704, 2324,
	417, 417, 1996, 1997, 82, 1537, 1996, 1995, 1603, 902,
	1543, 1704, 463, 1383, 902, 1534, 1555, 1554, 1344, 1539,
	1429, 1344, 902, 505, 504, 507, 508, 509, 510, 887,
	1671, 1673, 506, 511, 1051, 1051, 1051, 1051, 1051, 1574,
	1550, 1058, 1582, 1580, 1581, 1382, 417, 1599, 1556, 1058,
	1399, 1559, 1696, 1081, 1080, 2077, 1924, 2077, 1344, 1938,
	1051, 82, 1672, 1409, 1504, 1057, 1595, 1254, 1938, 125,
	125, 125, 125, 125, 1677, 886, 1938, 1676, 873, 1609,
	1611, 125, 1346, 2112, 1383, 125, 2488, 875, 2116, 125,
	1621, 1622, 1623, 1624, 1518, 125, 2009, 1059, 1998, 1061,
	1952, 1706, 1827, 1707, 1503, 1059, 1699, 1057, 872, 1718,
	1633, 873, 591, 1691, 1418, 1603, 1603, 1663, 1253, 614,
	1662, 1698, 1211, 938, 937, 947, 948, 940, 941, 942,
	943, 944, 945, 946, 939, 1517, 1255, 949, 1053, 897,
	1238, 1218, 1162, 1160, 1063, 602, 78, 1731, 1733, 79,
	2496, 911, 2483, 1705, 1951, 2331, 1596, 1597, 1598, 1657,
	2329, 930, 2156, 1456, 2128, 1485, 1979, 1690, 1719, 1481,
	1679, 1680, 1678, 1682, 1282, 1681, 1561, 1722, 1776, 1501,
	614, 1943, 1944, 901, 1476, 1475, 1144, 1069, 1145, 416,
	413, 1808, 878, 862, 1494, 1533, 1760, 2621, 1762, 1763,
	1764, 1765, 1709, 125, 416, 404, 2619, 79, 2601, 2007,
	1946, 1717, 1801, 1924, 1774, 1167, 1721, 888, 876, 416,
	1727, 1730, 871, 1687, 1685, 1949, 78, 1002, 1688, 1686,
	1589, 1650, 1651, 1652, 1689, 1948, 1392, 1393, 1684, 416,
	1017, 614, 1156, 1683, 470, 471, 416, 2535, 1769, 1388,
	1391, 1392, 1393, 1389, 1771, 1390, 1394, 1800, 1000, 1943,
	1944, 1876, 2493, 614, 614, 1856, 1579, 1265, 2523, 125,
	2119, 1587, 449, 1053, 1053, 1053, 1053, 1053, 1586, 614,
	1791, 915, 916, 2247, 1854, 1855, 2213, 2144, 2065, 1053,
	2064, 1734, 1984, 1983, 1726, 1975, 614, 1278, 2420, 1053,
	1861, 1819, 2477, 2423, 1805, 2478, 2319, 2513, 1825, 1811,
	913, 1813, 1277, 2317, 2401, 1804, 2400, 395, 1806, 2302,
	2303, 1929, 78, 1761, 904, 1076, 1826, 860, 1831, 844,
	1752, 1753, 1837, 1915, 1848, 1849, 905, 1759, 1852, 1829,
	1840, 1845, 1917, 1832, 841, 840, 1954, 1766, 1925, 800,
	2548, 1958, 1959, 1960, 1930, 1863, 2336, 614, 2335, 614,
	1867, 1677, 1862, 2114, 1676, 1937, 1871, 1928, 1257, 1258,
	2471, 2223, 1877, 1541, 2196, 1880, 1881, 1882, 1250, 1497,
	1885, 2197, 614, 1166, 2321, 1777, 915, 916, 2547, 1529,
	1961, 94, 1953, 1248, 463, 1147, 1963, 1907, 1906, 1585,
	1957, 2546, 614, 1807, 614, 2545, 614, 1584, 614, 2280,
	927, 937, 947, 948, 940, 941, 942, 943, 944, 945,
	946, 939, 826, 1861, 949, 1932, 467, 1977, 1947, 2516,
	1978, 938, 937, 947, 948, 940, 941, 942, 943, 944,
	945, 946, 939, 2005, 2006, 949, 1955, 893, 894, 413,
	2024, 2515, 2475, 2424, 1974, 1968, 1976, 2340, 2232, 468,
	125, 82, 2339, 1967, 2226, 1704, 1490, 2046, 1491, 2623,
	2622, 1865, 1824, 2010, 1779, 1780, 1781, 2622, 416, 1822,
	1987, 1988, 1821, 125, 416, 1646, 1182, 1991, 1643, 1560,
	1195, 2103, 918, 2623, 1994, 2353, 1982, 1251, 125, 602,
	416, 452, 614, 416, 454, 2026, 1198, 416, 416, 84,
	416, 2381, 51, 1908, 1909, 54, 1910, 1911, 2383, 19,
	1912, 2382, 18, 1376, 2384, 20, 614, 2385, 21, 2054,
	125, 614, 1, 1921, 1922, 2380, 15, 2031, 614, 614,
	2379, 14, 1551, 1143, 1233, 1002, 2373, 10, 2176, 2075,
	2394, 33, 2175, 542, 2393, 32, 2392, 28, 2078, 2391,
	27, 2182, 2036, 2084, 2014, 2040, 2017, 2108, 1956, 2044,
	2045, 2055, 2047, 2049, 2069, 2048, 2390, 26, 1144, 1789,
	2032, 938, 937, 947, 948, 940, 941, 942, 943, 944,
	945, 946, 939, 2388, 23, 949, 2387, 22, 2389, 24,
	2378, 13, 2192, 1267, 1268, 1388, 1391, 1392, 1393, 1389,
	1154, 1390, 1394, 1981, 2375, 12, 2374, 11, 2372, 9,
	125, 2291, 783, 1502, 2123, 866, 2476, 1989, 2419, 2421,
	1677, 2316, 2198, 1676, 2160, 2159, 1783, 614, 1782, 861,
	1216, 1830, 1833, 598, 614, 614, 614, 610, 2136, 2137,
	2138, 1513, 1570, 614, 2431, 2093, 1442, 78, 2134, 1432,
	604, 90, 1521, 2115, 809, 614, 362, 788, 1439, 2147,
	1740, 2422, 863, 1739, 1749, 2124, 1453, 2033, 2139, 1738,
	1737, 2417, 1741, 1089, 2034, 1087, 1002, 1088, 1086, 2157,
	1091, 1351, 1352, 125, 1319, 1320, 2135, 1090, 366, 2172,
	2173, 2174, 1719, 1071, 2458, 1330, 1331, 1332, 1333, 919,
	100, 55, 417, 417, 2215, 1844, 2148, 2149, 1343, 1345,
	95, 103, 368, 957, 1583, 1350, 1710, 1051, 589, 417,
	417, 590, 416, 582, 899, 2080, 2171, 2490, 2497, 909,
	2209, 2210, 947, 948, 940, 941, 942, 943, 944, 945,
	946, 939, 2211, 2434, 949, 1656, 1016, 1366, 1427, 488,
	614, 417, 125, 1694, 2436, 1269, 2199, 1929, 614, 503,
	1929, 2252, 2219, 2228, 2229, 2212, 2205, 2204, 502, 501,
	498, 2224, 499, 1954, 2105, 2106, 2107, 2200, 1974, 1861,
	2531, 2201, 1528, 1260, 2203, 1668, 2220, 931, 2001, 486,
	1490, 477, 1049, 2251, 1042, 1540, 1387, 1385, 614, 417,
	417, 417, 1384, 1928, 614, 1168, 1928, 417, 2255, 125,
	2227, 125, 417, 417, 2279, 2249, 2281, 614, 1492, 2258,
	578, 1945, 463, 1941, 1397, 2248, 1048, 68, 824, 384,
	2254, 2109, 614, 2348, 37, 2272, 453, 472, 2259, 25,
	2278, 1404, 17, 2260, 2264, 2270, 2271, 2269, 833, 927,
	16, 1563, 781, 41, 43, 1778, 1498, 2457, 2150, 2584,
	2152, 847, 2282, 2608, 2337, 2500, 31, 30, 2274, 29,
	2275, 2386, 2395, 2377, 2376, 2571, 2294, 2570, 4, 890,
	69, 2304, 34, 600, 2, 0, 2309, 0, 0, 0,
	0, 1929, 0, 78, 614, 2312, 2322, 0, 0, 0,
	0, 0, 2330, 2327, 2328, 0, 0, 0, 2341, 0,
	1535, 0, 0, 2334, 0, 0, 0, 2342, 0, 0,
	0, 0, 78, 2343, 0, 2355, 0, 2366, 911, 0,
	0, 0, 0, 614, 0, 0, 2359, 1928, 0, 0,
	0, 0, 0, 0, 0, 0, 2354, 0, 0, 0,
	2361, 1562, 2358, 0, 2233, 0, 1053, 1576, 0, 0,
	0, 2235, 2236, 2237, 2238, 1051, 0, 0, 0, 2242,
	0, 0, 0, 2245, 2246, 0, 0, 463, 0, 0,
	0, 1457, 1458, 0, 1463, 1464, 1465, 1466, 1467, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	125, 0, 1477, 1478, 1479, 614, 0, 614, 1143, 0,
	0, 0, 2439, 2427, 1601, 2429, 0, 1634, 2428, 1604,
	2441, 2102, 2446, 2453, 1606, 1607, 0, 0, 2440, 1612,
	1613, 1614, 1615, 1616, 1617, 1677, 0, 1620, 1676, 125,
	78, 1659, 1625, 1626, 1627, 1628, 0, 1630, 1631, 1632,
	2425, 0, 0, 0, 1635, 1636, 1637, 1638, 2426, 0,
	0, 0, 0, 1644, 0, 0, 1647, 1648, 0, 0,
	0, 1653, 1654, 0, 614, 0, 0, 1660, 0, 1661,
	0, 0, 1664, 1665, 0, 1666, 1667, 417, 417, 417,
	2489, 0, 0, 0, 2474, 2462, 2472, 0, 0, 0,
	0, 0, 0, 0, 1692, 1693, 0, 2481, 0, 614,
	0, 938, 937, 947, 948, 940, 941, 942, 943, 944,
	945, 946, 939, 2359, 0, 949, 0, 0, 598, 0,
	0, 0, 0, 598, 1072, 2519, 2507, 2521, 0, 0,
	0, 0, 0, 0, 78, 463, 0, 0, 0, 0,
	78, 2524, 2518, 0, 2537, 2551, 2522, 0, 2542, 614,
	2534, 0, 2544, 0, 413, 2557, 0, 2520, 0, 2558,
	0, 0, 614, 0, 0, 0, 2536, 2561, 0, 0,
	0, 0, 78, 0, 614, 0, 0, 78, 0, 0,
	0, 0, 2575, 416, 0, 2567, 2430, 2574, 0, 2581,
	2578, 2573, 0, 2572, 1053, 2549, 0, 0, 0, 0,
	0, 0, 2594, 0, 0, 0, 0, 78, 0, 2583,
	78, 78, 0, 0, 0, 78, 2551, 2602, 0, 0,
	2611, 0, 0, 0, 0, 2603, 2615, 0, 2605, 0,
	413, 2614, 0, 614, 0, 78, 2616, 0, 78, 2620,
	2551, 2618, 2631, 0, 0, 2633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 2628, 78, 2641, 416,
	2551, 78, 2551, 0, 0, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 78, 2646,
	2551, 0, 0, 0, 0, 78, 0, 0, 0, 78,
	2551, 0, 0, 0, 2551, 912, 2655, 0, 0, 0,
	1866, 0, 0, 1146, 0, 0, 1874, 0, 0, 0,
	463, 0, 0, 0, 0, 122, 1883, 1884, 463, 0,
	0, 1919, 0, 0, 387, 0, 0, 1890, 0, 0,
	0, 1894, 0, 0, 0, 0, 0, 0, 1754, 1755,
	1756, 1758, 123, 0, 0, 381, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 579, 1725, 0,
	2101, 603, 0, 0, 0, 770, 0, 1962, 0, 1931,
	0, 0, 0, 462, 0, 0, 0, 0, 0, 782,
	0, 476, 0, 0, 581, 599, 0, 0, 123, 0,
	796, 0, 123, 0, 0, 0, 0, 0, 0, 2592,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 1234, 0, 0, 0, 0, 123, 417, 1872,
	1873, 0, 0, 0, 0, 377, 1878, 1879, 0, 0,
	0, 0, 0, 417, 610, 0, 0, 0, 1886, 1887,
	1888, 1889, 0, 1891, 1892, 1893, 0, 0, 417, 0,
	938, 937, 947, 948, 940, 941, 942, 943, 944, 945,
	946, 939, 0, 610, 949, 0, 2634, 0, 417, 0,
	0, 0, 0, 0, 0, 417, 1311, 1316, 1317, 0,
	0, 0, 0, 1322, 1323, 1324, 0, 1326, 0, 0,
	1329, 0, 0, 0, 0, 1334, 1335, 1336, 1337, 0,
	1339, 1340, 1341, 0, 1309, 0, 0, 0, 1347, 1348,
	1349, 0, 0, 2071, 1355, 1358, 355, 1363, 1364, 0,
	0, 0, 475, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 375, 376, 0, 0, 0, 0,
	0, 0, 1374, 0, 1377, 1378, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	2079, 0, 0, 0, 2100, 0, 0, 0, 0, 364,
	1372, 1373, 365, 0, 0, 373, 374, 0, 0, 0,
	0, 0, 0, 2111, 0, 0, 0, 0, 0, 0,
	0, 0, 1002, 2089, 0, 0, 0, 598, 0, 0,
	0, 0, 2125, 2126, 2098, 2099, 2127, 0, 0, 2129,
	2104, 610, 0, 0, 610, 610, 0, 1002, 0, 0,
	0, 0, 0, 798, 0, 0, 370, 2117, 2118, 0,
	2120, 0, 0, 2121, 0, 0, 1990, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	123, 0, 0, 2133, 938, 937, 947, 948, 940, 941,
	942, 943, 944, 945, 946, 939, 0, 868, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 356,
	0, 0, 0, 0, 123, 0, 2086, 2087, 0, 0,
	0, 0, 0, 2088, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 359, 360, 0, 380, 0, 0, 417,
	361, 363, 417, 357, 379, 378, 417, 417, 0, 417,
	0, 0, 0, 2053, 0, 0, 0, 0, 0, 0,
	1725, 0, 0, 2060, 2062, 462, 1914, 0, 1549, 0,
	0, 0, 1549, 2053, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 1549, 0, 2090, 2091, 0, 2092, 372,
	0, 2094, 2231, 2096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2239, 2240, 2241, 0, 2243, 0, 0,
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
	0, 0, 1608, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 1619, 0, 2261, 2262, 2263, 0, 0, 0,
	0, 0, 1629, 1044, 0, 1054, 0, 0, 0, 463,
	2142, 2143, 0, 0, 938, 937, 947, 948, 940, 941,
	942, 943, 944, 945, 946, 939, 0, 0, 949, 1655,
	123, 123, 123, 0, 1913, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	0, 475, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 35, 0,
	70, 38, 39, 0, 0, 0, 598, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 40, 2344, 2345, 2346, 2347, 0, 0, 0,
	0, 0, 0, 2351, 2352, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 0, 0, 0, 2053, 0, 610, 0, 0,
	79, 0, 938, 937, 947, 948, 940, 941, 942, 943,
	944, 945, 946, 939, 0, 2053, 949, 0, 0, 0,
	0, 0, 0, 0, 2396, 933, 0, 936, 0, 2657,
	0, 0, 2435, 2438, 950, 951, 952, 953, 954, 955,
	956, 0, 934, 935, 932, 938, 937, 947, 948, 940,
	941, 942, 943, 944, 945, 946, 939, 0, 1775, 949,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 2442, 0, 463, 2397,
	463, 0, 0, 2447, 0, 579, 1972, 0, 1169, 2454,
	2455, 0, 0, 0, 0, 48, 75, 74, 0, 0,
	0, 1972, 46, 0, 0, 1185, 1186, 1187, 1188, 0,
	0, 0, 123, 0, 0, 123, 0, 0, 0, 1820,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 123, 123, 123, 0, 0, 0, 0,
	0, 610, 610, 0, 0, 0, 0, 0, 56, 57,
	0, 2398, 0, 0, 0, 0, 0, 610, 0, 2485,
	0, 1864, 0, 0, 0, 65, 0, 66, 0, 610,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 2438, 938, 937, 947, 948, 940, 941, 942, 943,
	944, 945, 946, 939, 1244, 2543, 949, 2399, 73, 0,
	52, 53, 60, 0, 61, 938, 937, 947, 948, 940,
	941, 942, 943, 944, 945, 946, 939, 1266, 2525, 949,
	0, 123, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 0, 610, 0, 1936, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 1972, 0, 0, 0,
	610, 0, 610, 0, 610, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 1315, 1315,
	1315, 0, 0, 2632, 1315, 1315, 1315, 1315, 1315, 1315,
	0, 0, 1315, 1111, 0, 0, 0, 1315, 1315, 1315,
	1315, 0, 1315, 1315, 1315, 0, 0, 0, 0, 0,
	1315, 1315, 1315, 0, 0, 0, 1315, 1315, 0, 1315,
	1315, 0, 1381, 0, 599, 0, 0, 77, 0, 0,
	0, 0, 2508, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 2648, 2649, 1315, 1315, 1315, 1315, 0, 123,
	1600, 0, 0, 0, 0, 0, 0, 123, 462, 0,
	2039, 0, 123, 123, 0, 0, 123, 1414, 1178, 599,
	0, 938, 937, 947, 948, 940, 941, 942, 943, 944,
	945, 946, 939, 1178, 2063, 949, 0, 1098, 0, 2068,
	0, 0, 0, 0, 0, 0, 2072, 2073, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1496, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1508,
	1509, 0, 417, 0, 0, 0, 1516, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 123, 123, 0, 0,
	0, 0, 0, 123, 1527, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 0, 0, 2131, 0, 868, 0, 1525,
	1526, 123, 2131, 2131, 2131, 0, 0, 0, 0, 0,
	0, 610, 0, 2057, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 2131, 123, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1125, 1128, 1129, 1130,
	1131, 1132, 1133, 0, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 0, 1113, 1114, 1115, 1116, 1092, 1096, 1126,
	1093, 1099, 1095, 1097, 1094, 1178, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 610, 0,
	0, 0, 438, 0, 1315, 0, 610, 0, 0, 0,
	0, 0, 0, 1315, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 1315, 0,
	0, 0, 0, 0, 35, 0, 70, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 2253, 0, 58, 0,
	0, 1315, 2131, 0, 76, 0, 1127, 0, 40, 0,
	0, 0, 0, 1111, 0, 1971, 0, 0, 599, 123,
	123, 123, 123, 123, 0, 0, 0, 0, 0, 0,
	1971, 462, 0, 0, 0, 123, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 123, 79, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2396, 0, 0, 0, 0, 2653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 0, 42,
	72, 45, 44, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2397, 1799, 0, 0, 0,
	0, 2357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 1112,
	0, 0, 0, 123, 418, 419, 420, 421, 422, 426,
	427, 431, 432, 441, 440, 439, 442, 443, 446, 445,
	447, 423, 424, 425, 428, 429, 430, 433, 434, 437,
	435, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 56, 57, 0, 2398, 0, 0,
	0, 0, 0, 1971, 0, 1971, 0, 0, 0, 0,
	0, 65, 0, 66, 0, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	1315, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 1178, 0, 2399, 73, 0, 52, 53, 60, 0,
	61, 0, 0, 0, 0, 0, 1125, 1128, 1129, 1130,
	1131, 1132, 1133, 0, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 610, 1113, 1114, 1115, 1116, 1092, 1096, 1126,
	1093, 1099, 1095, 1097, 1094, 0, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 599, 0, 2487, 0, 35,
	36, 70, 38, 39, 0, 0, 0, 0, 35, 0,
	70, 38, 39, 58, 0, 0, 0, 0, 0, 76,
	0, 0, 58, 40, 62, 63, 0, 0, 76, 0,
	59, 71, 40, 0, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 2050, 0, 0, 0, 2052, 0, 49, 0, 0,
	2131, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 610, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 1127, 0, 35, 0,
	70, 38, 39, 0, 2396, 0, 2030, 0, 0, 2642,
	123, 0, 58, 0, 0, 0, 0, 0, 76, 0,
	0, 2035, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 42, 72, 45, 44, 47, 0,
	0, 2597, 0, 42, 72, 45, 44, 47, 123, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 2397,
	79, 0, 0, 0, 0, 0, 48, 75, 74, 0,
	0, 0, 0, 46, 438, 48, 75, 74, 0, 0,
	123, 0, 46, 444, 2396, 0, 0, 0, 64, 2625,
	0, 0, 0, 0, 0, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	57, 0, 0, 42, 72, 45, 44, 47, 56, 57,
	0, 2398, 0, 444, 0, 0, 65, 0, 66, 2397,
	0, 0, 0, 0, 0, 65, 0, 66, 0, 0,
	0, 0, 0, 0, 1142, 48, 75, 74, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 50, 73,
	462, 52, 53, 60, 599, 61, 0, 2399, 73, 0,
	52, 53, 60, 0, 61, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 57,
	0, 2398, 0, 438, 0, 0, 2158, 0, 0, 0,
	0, 0, 0, 0, 0, 65, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2399, 73, 0,
	52, 53, 60, 438, 61, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 418, 419, 420, 421,
	422, 426, 427, 431, 432, 441, 440, 439, 442, 443,
	446, 445, 447, 423, 424, 425, 428, 429, 430, 433,
	434, 437, 435, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 462,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 418, 419, 420, 421, 422,
	426, 427, 431, 432, 441, 440, 439, 442, 443, 446,
	445, 447, 423, 424, 425, 428, 429, 430, 433, 434,
	437, 435, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 418, 419, 420, 421, 422,
	426, 427, 431, 432, 441, 440, 439, 442, 443, 446,
	445, 447, 423, 424, 425, 428, 429, 430, 433, 434,
	437, 435, 436, 0, 0, 750, 730, 317, 680, 753,
	647, 666, 765, 669, 672, 713, 630, 693, 248, 664,
	631, 0, 651, 620, 658, 621, 648, 682, 173, 646,
	732, 696, 752, 206, 709, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 751, 688, 0, 759, 209, 0,
	705, 760, 306, 232, 0, 0, 684, 739, 691, 728,
	679, 715, 639, 704, 754, 665, 711, 755, 0, 0,
	123, 0, 2456, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 2449, 708, 749, 661, 710, 712, 618, 707,
	0, 625, 632, 764, 745, 654, 655, 656, 0, 599,
	0, 0, 0, 0, 0, 683, 692, 723, 676, 123,
	0, 0, 0, 0, 0, 0, 0, 652, 0, 702,
	0, 0, 0, 633, 626, 0, 0, 681, 0, 0,
	0, 638, 130, 653, 724, 0, 616, 185, 233, 143,
	729, 744, 678, 197, 346, 748, 675, 674, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 722,
	289, 662, 617, 733, 649, 659, 164, 657, 282, 252,
	335, 0, 699, 259, 281, 210, 324, 719, 333, 334,
	667, 768, 343, 348, 0, 689, 636, 303, 174, 0,
	132, 0, 266, 169, 202, 677, 714, 650, 161, 720,
	703, 738, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 2459, 2460, 2461, 0, 0, 0, 0, 340,
	673, 292, 291, 668, 193, 727, 706, 622, 275, 717,
	198, 131, 314, 351, 148, 204, 319, 615, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	660, 718, 336, 726, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 623, 0, 308, 338, 353,
	151, 645, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 643, 644, 641, 0, 642, 694, 695,
	756, 757, 758, 725, 635, 0, 740, 741, 0, 0,
	0, 0, 0, 731, 746, 747, 716, 766, 670, 671,
	640, 294, 276, 624, 627, 628, 629, 637, 685, 686,
	698, 701, 736, 735, 734, 737, 742, 762, 761, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 697, 129, 139, 208, 767, 274, 180, 339, 619,
	171, 0, 687, 690, 700, 721, 127, 140, 150, 156,
	170, 175, 179, 663, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 743, 750, 730, 317,
	680, 753, 647, 666, 765, 669, 672, 713, 630, 693,
	248, 664, 631, 0, 651, 620, 658, 621, 648, 682,
	173, 646, 732, 696, 752, 206, 709, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 751, 688, 0, 759,
	209, 0, 705, 760, 306, 232, 0, 0, 684, 739,
	691, 728, 679, 715, 639, 704, 754, 665, 711, 755,
	0, 0, 0, 0, 613, 0, 1436, 1437, 0, 0,
	0, 0, 0, 634, 0, 708, 749, 661, 710, 712,
	618, 707, 0, 625, 632, 764, 745, 654, 655, 656,
	1720, 0, 0, 0, 0, 0, 0, 683, 692, 723,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 652,
	0, 702, 0, 0, 0, 633, 626, 0, 0, 681,
	0, 0, 0, 638, 130, 653, 724, 0, 616, 185,
	233, 143, 729, 744, 678, 197, 346, 748, 675, 674,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 722, 289, 662, 617, 733, 649, 659, 164, 657,
	282, 252, 335, 0, 699, 259, 281, 210, 324, 719,
	333, 334, 667, 768, 343, 348, 0, 689, 636, 303,
	174, 0, 132, 0, 266, 169, 202, 677, 714, 650,
	161, 720, 703, 738, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 673, 292, 291, 668, 193, 727, 706, 622,
	275, 717, 198, 131, 314, 351, 148, 204, 319, 615,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 660, 718, 336, 726, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 623, 0, 308,
	338, 353, 151, 645, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 643, 644, 641, 0, 642,
	694, 695, 756, 757, 758, 725, 635, 0, 740, 741,
	0, 0, 0, 0, 0, 731, 746, 747, 716, 766,
	670, 671, 640, 294, 276, 624, 627, 628, 629, 637,
	685, 686, 698, 701, 736, 735, 734, 737, 742, 762,
	761, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 129, 139, 208, 767, 274, 180,
	339, 619, 171, 0, 687, 690, 700, 721, 127, 140,
	150, 156, 170, 175, 179, 663, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 743, 750,
	730, 317, 680, 753, 647, 666, 765, 669, 672, 713,
	630, 693, 248, 664, 631, 0, 651, 620, 658, 621,
	648, 682, 173, 646, 732, 696, 752, 206, 709, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 751, 688,
	0, 759, 209, 0, 705, 760, 306, 232, 0, 0,
	684, 739, 691, 728, 679, 715, 639, 704, 754, 665,
	711, 755, 0, 0, 0, 0, 613, 0, 1436, 1437,
	0, 0, 0, 0, 0, 634, 0, 708, 749, 661,
	710, 712, 618, 707, 0, 625, 632, 764, 745, 654,
	655, 656, 0, 0, 0, 0, 0, 0, 0, 683,
	692, 723, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 652, 0, 702, 0, 0, 0, 633, 626, 0,
	0, 681, 0, 0, 0, 638, 130, 653, 724, 0,
	616, 185, 233, 143, 729, 744, 678, 197, 346, 748,
	675, 674, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 722, 289, 662, 617, 733, 649, 659,
	164, 657, 282, 252, 335, 0, 699, 259, 281, 210,
	324, 719, 333, 334, 667, 768, 343, 348, 0, 689,
	636, 303, 174, 0, 132, 0, 266, 169, 202, 677,
	714, 650, 161, 720, 703, 738, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 673, 292, 291, 668, 193, 727,
	706, 622, 275, 717, 198, 131, 314, 351, 148, 204,
	319, 615, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 660, 718, 336, 726, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 623,
	0, 308, 338, 353, 151, 645, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 643, 644, 641,
	0, 642, 694, 695, 756, 757, 758, 725, 635, 0,
	740, 741, 0, 0, 0, 0, 0, 731, 746, 747,
	716, 766, 670, 671, 640, 294, 276, 624, 627, 628,
	629, 637, 685, 686, 698, 701, 736, 735, 734, 737,
	742, 762, 761, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 129, 139, 208, 767,
	274, 180, 339, 619, 171, 0, 687, 690, 700, 721,
	127, 140, 150, 156, 170, 175, 179, 663, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	743, 750, 1933, 317, 680, 753, 647, 666, 765, 669,
	672, 713, 630, 693, 248, 664, 631, 0, 651, 620,
	658, 621, 648, 682, 173, 646, 732, 696, 752, 206,
	709, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	751, 688, 0, 759, 209, 0, 705, 760, 306, 232,
	0, 0, 684, 739, 691, 728, 679, 715, 639, 704,
	754, 665, 711, 755, 79, 0, 902, 0, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 708,
	749, 661, 710, 712, 618, 707, 0, 625, 632, 764,
	745, 654, 655, 656, 0, 0, 0, 0, 0, 0,
	0, 683, 692, 723, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 0, 702, 0, 0, 0, 633,
	626, 0, 0, 681, 0, 0, 0, 638, 130, 653,
	724, 0, 616, 185, 233, 143, 729, 744, 678, 197,
	346, 748, 675, 674, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 722, 289, 662, 617, 733,
	649, 659, 164, 657, 282, 252, 335, 0, 699, 259,
	281, 210, 324, 719, 333, 334, 667, 768, 343, 348,
	0, 689, 636, 303, 174, 0, 132, 0, 266, 169,
	202, 677, 714, 650, 161, 720, 703, 738, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 673, 292, 291, 668,
	193, 727, 706, 622, 275, 717, 198, 131, 314, 351,
	148, 204, 319, 615, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 660, 718, 336, 726,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 623, 0, 308, 338, 353, 151, 645, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 643,
	644, 641, 0, 642, 694, 695, 756, 757, 758, 725,
	635, 0, 740, 741, 0, 0, 0, 0, 0, 731,
	746, 747, 716, 766, 670, 671, 640, 294, 276, 624,
	627, 628, 629, 637, 685, 686, 698, 701, 736, 735,
	734, 737, 742, 762, 761, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 129, 139,
	208, 1934, 274, 180, 339, 619, 171, 0, 687, 690,
	700, 721, 127, 140, 150, 156, 170, 175, 179, 663,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 743, 750, 730, 317, 680, 753, 647, 666,
	765, 669, 672, 713, 630, 693, 248, 664, 631, 0,
	651, 620, 658, 621, 648, 682, 173, 646, 732, 696,
	752, 206, 709, 0, 163, 214, 212, 0, 0, 0,
	255, 316, 751, 688, 0, 759, 209, 0, 705, 760,
	306, 232, 0, 0, 684, 739, 691, 728, 679, 715,
	639, 704, 754, 665, 711, 755, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 708, 749, 661, 710, 712, 618, 707, 0, 625,
	632, 764, 745, 654, 655, 656, 0, 0, 0, 0,
	0, 0, 0, 683, 692, 723, 676, 0, 0, 0,
	0, 0, 0, 2230, 0, 652, 0, 702, 0, 0,
	0, 633, 626, 0, 0, 681, 0, 0, 0, 638,
	130, 653, 724, 0, 616, 185, 233, 143, 729, 744,
	678, 197, 346, 748, 675, 674, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 722, 289, 662,
	617, 733, 649, 659, 164, 657, 282, 252, 335, 0,
	699, 259, 281, 210, 324, 719, 333, 334, 667, 768,
	343, 348, 0, 689, 636, 303, 174, 0, 132, 0,
	266, 169, 202, 677, 714, 650, 161, 720, 703, 738,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 673, 292,
	291, 668, 193, 727, 706, 622, 275, 717, 198, 131,
	314, 351, 148, 204, 319, 615, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 660, 718,
	336, 726, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 623, 0, 308, 338, 353, 151, 645,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 643, 644, 641, 0, 642, 694, 695, 756, 757,
	758, 725, 635, 0, 740, 741, 0, 0, 0, 0,
	0, 731, 746, 747, 716, 766, 670, 671, 640, 294,
	276, 624, 627, 628, 629, 637, 685, 686, 698, 701,
	736, 735, 734, 737, 742, 762, 761, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 697,
	129, 139, 208, 767, 274, 180, 339, 619, 171, 0,
	687, 690, 700, 721, 127, 140, 150, 156, 170, 175,
	179, 663, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 743, 750, 730, 317, 680, 753,
	647, 666, 765, 669, 672, 713, 630, 693, 248, 664,
	631, 0, 651, 620, 658, 621, 648, 682, 173, 646,
	732, 696, 752, 206, 709, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 751, 688, 0, 759, 209, 0,
	705, 760, 306, 232, 0, 0, 684, 739, 691, 728,
	679, 715, 639, 704, 754, 665, 711, 755, 0, 0,
	0, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 708, 749, 661, 710, 712, 618, 707,
	0, 625, 632, 764, 745, 654, 655, 656, 0, 0,
	0, 0, 0, 0, 0, 683, 692, 723, 676, 0,
	0, 0, 0, 0, 0, 1870, 0, 652, 0, 702,
	0, 0, 0, 633, 626, 0, 0, 681, 0, 0,
	0, 638, 130, 653, 724, 0, 616, 185, 233, 143,
	729, 744, 678, 197, 346, 748, 675, 674, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 722,
	289, 662, 617, 733, 649, 659, 164, 657, 282, 252,
	335, 0, 699, 259, 281, 210, 324, 719, 333, 334,
	667, 768, 343, 348, 0, 689, 636, 303, 174, 0,
	132, 0, 266, 169, 202, 677, 714, 650, 161, 720,
	703, 738, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	673, 292, 291, 668, 193, 727, 706, 622, 275, 717,
	198, 131, 314, 351, 148, 204, 319, 615, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	660, 718, 336, 726, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 623, 0, 308, 338, 353,
	151, 645, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 643, 644, 641, 0, 642, 694, 695,
	756, 757, 758, 725, 635, 0, 740, 741, 0, 0,
	0, 0, 0, 731, 746, 747, 716, 766, 670, 671,
	640, 294, 276, 624, 627, 628, 629, 637, 685, 686,
	698, 701, 736, 735, 734, 737, 742, 762, 761, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 697, 129, 139, 208, 767, 274, 180, 339, 619,
	171, 0, 687, 690, 700, 721, 127, 140, 150, 156,
	170, 175, 179, 663, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 743, 750, 730, 317,
	680, 753, 647, 666, 765, 669, 672, 713, 630, 693,
	248, 664, 631, 0, 651, 620, 658, 621, 648, 682,
	173, 646, 732, 696, 752, 206, 709, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 751, 688, 0, 759,
	209, 0, 705, 760, 306, 232, 0, 0, 684, 739,
	691, 728, 679, 715, 639, 704, 754, 665, 711, 755,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 0, 708, 749, 661, 710, 712,
	618, 707, 0, 625, 632, 764, 745, 654, 655, 656,
	0, 0, 0, 0, 0, 0, 0, 683, 692, 723,
	676, 0, 0, 0, 0, 0, 0, 1860, 0, 652,
	0, 702, 0, 0, 0, 633, 626, 0, 0, 681,
	0, 0, 0, 638, 130, 653, 724, 0, 616, 185,
	233, 143, 729, 744, 678, 197, 346, 748, 675, 674,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 722, 289, 662, 617, 733, 649, 659, 164, 657,
	282, 252, 335, 0, 699, 259, 281, 210, 324, 719,
	333, 334, 667, 768, 343, 348, 0, 689, 636, 303,
	174, 0, 132, 0, 266, 169, 202, 677, 714, 650,
	161, 720, 703, 738, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 673, 292, 291, 668, 193, 727, 706, 622,
	275, 717, 198, 131, 314, 351, 148, 204, 319, 615,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 660, 718, 336, 726, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 623, 0, 308,
	338, 353, 151, 645, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 643, 644, 641, 0, 642,
	694, 695, 756, 757, 758, 725, 635, 0, 740, 741,
	0, 0, 0, 0, 0, 731, 746, 747, 716, 766,
	670, 671, 640, 294, 276, 624, 627, 628, 629, 637,
	685, 686, 698, 701, 736, 735, 734, 737, 742, 762,
	761, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 129, 139, 208, 767, 274, 180,
	339, 619, 171, 0, 687, 690, 700, 721, 127, 140,
	150, 156, 170, 175, 179, 663, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 743, 750,
	730, 317, 680, 753, 647, 666, 765, 669, 672, 713,
	630, 693, 248, 664, 631, 0, 651, 620, 658, 621,
	648, 682, 173, 646, 732, 696, 752, 206, 709, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 751, 688,
	0, 759, 209, 0, 705, 760, 306, 232, 0, 0,
	684, 739, 691, 728, 679, 715, 639, 704, 754, 665,
	711, 755, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 708, 749, 661,
	710, 712, 618, 707, 0, 625, 632, 764, 745, 654,
	655, 656, 0, 0, 0, 0, 0, 0, 0, 683,
	692, 723, 676, 0, 0, 0, 0, 0, 0, 1415,
	0, 652, 0, 702, 0, 0, 0, 633, 626, 0,
	0, 681, 0, 0, 0, 638, 130, 653, 724, 0,
	616, 185, 233, 143, 729, 744, 678, 197, 346, 748,
	675, 674, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 722, 289, 662, 617, 733, 649, 659,
	164, 657, 282, 252, 335, 0, 699, 259, 281, 210,
	324, 719, 333, 334, 667, 768, 343, 348, 0, 689,
	636, 303, 174, 0, 132, 0, 266, 169, 202, 677,
	714, 650, 161, 720, 703, 738, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 673, 292, 291, 668, 193, 727,
	706, 622, 275, 717, 198, 131, 314, 351, 148, 204,
	319, 615, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 660, 718, 336, 726, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 623,
	0, 308, 338, 353, 151, 645, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 643, 644, 641,
	0, 642, 694, 695, 756, 757, 758, 725, 635, 0,
	740, 741, 0, 0, 0, 0, 0, 731, 746, 747,
	716, 766, 670, 671, 640, 294, 276, 624, 627, 628,
	629, 637, 685, 686, 698, 701, 736, 735, 734, 737,
	742, 762, 761, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 129, 139, 208, 767,
	274, 180, 339, 619, 171, 0, 687, 690, 700, 721,
	127, 140, 150, 156, 170, 175, 179, 663, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	743, 750, 730, 317, 680, 753, 647, 666, 765, 669,
	672, 713, 630, 693, 248, 664, 631, 0, 651, 620,
	658, 621, 648, 682, 173, 646, 732, 696, 752, 206,
	709, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	751, 688, 0, 759, 209, 0, 705, 760, 306, 232,
	0, 0, 684, 739, 691, 728, 679, 715, 639, 704,
	754, 665, 711, 755, 0, 0, 0, 0, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 708,
	749, 661, 710, 712, 618, 707, 0, 625, 632, 764,
	745, 654, 655, 656, 0, 0, 0, 0, 0, 0,
	0, 683, 692, 723, 676, 0, 0, 0, 0, 0,
	0, 1275, 0, 652, 0, 702, 0, 0, 0, 633,
	626, 0, 0, 681, 0, 0, 0, 638, 130, 653,
	724, 0, 616, 185, 233, 143, 729, 744, 678, 197,
	346, 748, 675, 674, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 722, 289, 662, 617, 733,
	649, 659, 164, 657, 282, 252, 335, 0, 699, 259,
	281, 210, 324, 719, 333, 334, 667, 768, 343, 348,
	0, 689, 636, 303, 174, 0, 132, 0, 266, 169,
	202, 677, 714, 650, 161, 720, 703, 738, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 673, 292, 291, 668,
	193, 727, 706, 622, 275, 717, 198, 131, 314, 351,
	148, 204, 319, 615, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 660, 718, 336, 726,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 623, 0, 308, 338, 353, 151, 645, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 643,
	644, 641, 0, 642, 694, 695, 756, 757, 758, 725,
	635, 0, 740, 741, 0, 0, 0, 0, 0, 731,
	746, 747, 716, 766, 670, 671, 640, 294, 276, 624,
	627, 628, 629, 637, 685, 686, 698, 701, 736, 735,
	734, 737, 742, 762, 761, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 129, 139,
	208, 767, 274, 180, 339, 619, 171, 0, 687, 690,
	700, 721, 127, 140, 150, 156, 170, 175, 179, 663,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 743, 750, 730, 317, 680, 753, 647, 666,
	765, 669, 672, 713, 630, 693, 248, 664, 631, 0,
	651, 620, 658, 621, 648, 682, 173, 646, 732, 696,
	752, 206, 709, 0, 163, 214, 212, 0, 0, 0,
	255, 316, 751, 688, 0, 759, 209, 0, 705, 760,
	306, 232, 0, 0, 684, 739, 691, 728, 679, 715,
	639, 704, 754, 665, 711, 755, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 708, 749, 661, 710, 712, 618, 707, 0, 625,
	632, 764, 745, 654, 655, 656, 0, 0, 0, 0,
	0, 0, 0, 683, 692, 723, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 652, 0, 702, 0, 0,
	0, 633, 626, 0, 0, 681, 0, 0, 0, 638,
	130, 653, 724, 0, 616, 185, 233, 143, 729, 744,
	678, 197, 346, 748, 675, 674, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 722, 289, 662,
	617, 733, 649, 659, 164, 657, 282, 252, 335, 0,
	699, 259, 281, 210, 324, 719, 333, 334, 667, 768,
	343, 348, 0, 689, 636, 303, 174, 0, 132, 0,
	266, 169, 202, 677, 714, 650, 161, 720, 703, 738,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 673, 292,
	291, 668, 193, 727, 706, 622, 275, 717, 198, 131,
	314, 351, 148, 204, 319, 615, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 660, 718,
	336, 726, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 623, 0, 308, 338, 353, 151, 645,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 643, 644, 641, 0, 642, 694, 695, 756, 757,
	758, 725, 635, 0, 740, 741, 0, 0, 0, 0,
	0, 731, 746, 747, 716, 766, 670, 671, 640, 294,
	276, 624, 627, 628, 629, 637, 685, 686, 698, 701,
	736, 735, 734, 737, 742, 762, 761, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 697,
	129, 139, 208, 767, 274, 180, 339, 619, 171, 0,
	687, 690, 700, 721, 127, 140, 150, 156, 170, 175,
	179, 663, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 743, 750, 730, 317, 680, 753,
	647, 666, 765, 669, 672, 713, 630, 693, 248, 664,
	631, 0, 651, 620, 658, 621, 648, 682, 173, 646,
	732, 696, 752, 206, 709, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 751, 688, 0, 759, 209, 0,
	705, 760, 306, 232, 0, 0, 684, 739, 691, 728,
	679, 715, 639, 704, 754, 665, 711, 755, 0, 0,
	0, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 708, 749, 661, 710, 712, 618, 707,
	0, 625, 632, 764, 745, 654, 655, 656, 0, 0,
	0, 0, 0, 0, 0, 683, 692, 723, 676, 0,
	0, 0, 0, 0, 0, 0, 0, 652, 0, 702,
	0, 0, 0, 633, 626, 0, 0, 681, 0, 0,
	0, 638, 130, 653, 724, 0, 616, 185, 233, 143,
	729, 744, 678, 197, 346, 748, 675, 674, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 722,
	289, 662, 617, 733, 649, 659, 164, 657, 282, 252,
	335, 0, 699, 259, 281, 210, 324, 719, 333, 334,
	667, 768, 343, 348, 0, 689, 636, 303, 174, 0,
	132, 0, 266, 169, 202, 677, 714, 650, 161, 720,
	703, 738, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	673, 292, 291, 668, 193, 727, 706, 622, 275, 717,
	198, 131, 314, 351, 148, 204, 319, 615, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	660, 718, 336, 726, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 623, 0, 308, 338, 353,
	151, 645, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 643, 644, 641, 0, 642, 694, 695,
	756, 757, 758, 725, 635, 0, 740, 741, 0, 0,
	0, 0, 0, 731, 746, 747, 716, 766, 670, 671,
	640, 294, 276, 624, 627, 628, 629, 637, 685, 686,
	698, 701, 736, 735, 734, 737, 742, 762, 761, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 697, 129, 139, 208, 767, 274, 180, 339, 619,
	171, 0, 687, 690, 700, 721, 127, 140, 150, 156,
	170, 175, 179, 663, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 743, 750, 730, 317,
	680, 753, 647, 666, 765, 669, 672, 713, 630, 693,
	248, 664, 631, 0, 651, 620, 658, 621, 648, 682,
	173, 646, 732, 696, 752, 206, 709, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 1447, 1451, 0, 759,
	209, 0, 705, 760, 306, 232, 0, 0, 684, 739,
	691, 728, 679, 715, 639, 704, 754, 665, 711, 755,
	0, 0, 0, 0, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 0, 708, 749, 661, 710, 712,
	618, 707, 0, 625, 632, 764, 745, 654, 655, 656,
	0, 0, 0, 0, 0, 0, 0, 683, 692, 723,
	676, 0, 0, 0, 0, 0, 0, 0, 0, 652,
	0, 702, 0, 0, 0, 633, 626, 0, 0, 681,
	0, 0, 0, 638, 130, 653, 724, 0, 616, 185,
	233, 143, 729, 744, 1450, 197, 346, 748, 675, 674,
	1445, 0, 1446, 187, 207, 612, 126, 141, 1443, 1449,
	244, 722, 289, 662, 617, 733, 649, 659, 164, 657,
	282, 252, 335, 0, 699, 259, 281, 210, 324, 719,
	333, 334, 667, 768, 343, 348, 0, 689, 636, 303,
	174, 0, 132, 0, 266, 169, 202, 677, 714, 650,
	161, 720, 703, 738, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 673, 292, 291, 668, 193, 727, 706, 622,
	275, 717, 198, 131, 314, 351, 148, 204, 319, 615,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 660, 718, 336, 726, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 623, 0, 308,
	338, 353, 151, 645, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 643, 644, 641, 0, 642,
	694, 695, 756, 757, 758, 725, 635, 0, 740, 741,
	0, 0, 0, 0, 0, 731, 746, 747, 716, 766,
	670, 671, 640, 294, 276, 624, 627, 628, 629, 637,
	685, 686, 698, 701, 736, 735, 734, 737, 742, 762,
	761, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 129, 139, 208, 767, 274, 180,
	339, 619, 171, 0, 687, 690, 700, 721, 127, 140,
	150, 156, 170, 175, 179, 663, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 743, 750,
	730, 317, 680, 753, 647, 666, 765, 669, 672, 713,
	630, 693, 248, 664, 631, 0, 651, 620, 658, 621,
	648, 682, 173, 646, 732, 696, 752, 206, 709, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 751, 688,
	0, 759, 209, 0, 705, 760, 306, 232, 0, 0,
	684, 739, 691, 728, 679, 715, 639, 704, 754, 665,
	711, 755, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 708, 749, 661,
	710, 712, 618, 707, 0, 625, 632, 764, 745, 654,
	655, 656, 0, 0, 0, 0, 0, 0, 0, 683,
	692, 723, 676, 0, 0, 0, 0, 0, 0, 0,
	0, 652, 0, 702, 0, 0, 0, 633, 626, 0,
	0, 681, 0, 0, 0, 638, 130, 653, 724, 0,
	616, 185, 233, 143, 729, 744, 678, 197, 346, 748,
	675, 674, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 722, 289, 662, 617, 733, 649, 659,
	164, 657, 282, 252, 335, 0, 699, 259, 281, 210,
	324, 719, 333, 334, 667, 768, 343, 348, 0, 689,
	636, 303, 174, 0, 132, 0, 266, 169, 202, 677,
	714, 650, 161, 720, 703, 738, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 673, 292, 291, 668, 193, 727,
	706, 622, 275, 717, 198, 131, 314, 351, 148, 204,
	319, 615, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 660, 718, 336, 726, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 623,
	0, 308, 338, 353, 151, 645, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 643, 644, 641,
	0, 642, 694, 695, 756, 757, 758, 725, 635, 0,
	740, 741, 0, 0, 0, 0, 0, 731, 746, 747,
	716, 766, 670, 671, 640, 294, 276, 624, 627, 628,
	629, 637, 685, 686, 698, 701, 736, 735, 734, 737,
	742, 762, 761, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 129, 139, 208, 767,
	274, 180, 339, 619, 171, 0, 687, 690, 700, 721,
	127, 140, 150, 156, 170, 175, 179, 663, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	743, 750, 730, 317, 680, 753, 647, 666, 765, 669,
	672, 713, 630, 693, 248, 664, 631, 0, 651, 620,
	658, 621, 648, 682, 173, 646, 732, 696, 752, 206,
	709, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	751, 688, 0, 759, 209, 0, 705, 760, 306, 232,
	0, 0, 684, 739, 691, 728, 679, 715, 639, 704,
	754, 665, 711, 755, 0, 0, 0, 0, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 708,
	749, 661, 710, 712, 618, 707, 0, 625, 632, 764,
	745, 654, 655, 656, 0, 0, 0, 0, 0, 0,
	0, 683, 692, 723, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 0, 702, 0, 0, 0, 633,
	626, 0, 0, 681, 0, 0, 0, 638, 130, 653,
	724, 0, 616, 185, 233, 143, 729, 744, 678, 197,
	346, 748, 675, 674, 269, 0, 311, 187, 207, 612,
	126, 141, 608, 186, 244, 722, 289, 662, 617, 733,
	649, 659, 164, 657, 282, 252, 335, 0, 699, 259,
	281, 210, 324, 719, 333, 334, 667, 768, 343, 348,
	0, 689, 636, 303, 174, 0, 132, 0, 266, 169,
	202, 677, 714, 650, 161, 720, 703, 738, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 673, 292, 291, 668,
	193, 727, 706, 622, 275, 717, 198, 131, 314, 351,
	148, 204, 319, 615, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 660, 718, 336, 726,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 623, 0, 308, 338, 353, 151, 645, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 643,
	644, 641, 0, 642, 694, 695, 756, 757, 758, 725,
	635, 0, 740, 741, 0, 0, 0, 0, 0, 731,
	746, 747, 716, 766, 670, 671, 640, 294, 276, 624,
	627, 628, 629, 637, 685, 686, 698, 701, 736, 735,
	734, 737, 742, 762, 761, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 129, 139,
	208, 767, 274, 180, 339, 619, 171, 0, 687, 690,
	700, 721, 127, 140, 150, 156, 170, 175, 179, 663,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 743, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 173, 480, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 558, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	0, 0, 1425, 0, 79, 0, 0, 0, 481, 505,
	504, 507, 508, 509, 510, 0, 0, 0, 506, 511,
	540, 541, 1426, 0, 0, 478, 496, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 0, 0, 0, 0, 572, 0, 495, 0, 0,
	490, 491, 492, 497, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 548, 0, 0, 197,
	346, 0, 0, 570, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 555, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 547, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 559,
	571, 565, 567, 566, 563, 564, 562, 561, 560, 573,
	549, 550, 551, 552, 553, 0, 0, 0, 556, 0,
	568, 569, 0, 0, 0, 0, 0, 294, 276, 512,
	513, 514, 515, 516, 520, 521, 525, 526, 534, 533,
	532, 535, 536, 538, 537, 539, 517, 518, 519, 522,
	523, 524, 527, 528, 531, 529, 530, 554, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 35, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 173, 480, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 558, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 481, 505,
	504, 507, 508, 509, 510, 0, 0, 0, 506, 511,
	540, 541, 0, 0, 0, 478, 496, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 0, 0, 0, 0, 572, 0, 495, 0, 0,
	490, 491, 492, 497, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 548, 0, 0, 197,
	346, 0, 0, 570, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 555, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 547, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 559,
	571, 565, 567, 566, 563, 564, 562, 561, 560, 573,
	549, 550, 551, 552, 553, 0, 0, 0, 556, 0,
	568, 569, 0, 0, 0, 0, 0, 294, 276, 512,
	513, 514, 515, 516, 520, 521, 525, 526, 534, 533,
	532, 535, 536, 538, 537, 539, 517, 518, 519, 522,
	523, 524, 527, 528, 531, 529, 530, 554, 129, 139,
	208, 77, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 173, 480, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 558, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 481, 505, 504,
	507, 508, 509, 510, 0, 0, 0, 506, 511, 540,
	541, 0, 0, 0, 478, 496, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	474, 0, 0, 0, 572, 0, 495, 0, 0, 490,
	491, 492, 497, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 548, 0, 0, 197, 346,
	0, 0, 570, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 555, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 547, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 559, 571,
	565, 567, 566, 563, 564, 562, 561, 560, 573, 549,
	550, 551, 552, 553, 0, 0, 0, 556, 0, 568,
	569, 0, 0, 0, 0, 0, 294, 276, 512, 513,
	514, 515, 516, 520, 521, 525, 526, 534, 533, 532,
	535, 536, 538, 537, 539, 517, 518, 519, 522, 523,
	524, 527, 528, 531, 529, 530, 554, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 173, 480, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 558, 209, 0, 0, 444, 306, 232, 0, 0,
	0, 0, 545, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 902, 0, 481, 505, 504, 507,
	508, 509, 510, 0, 0, 0, 506, 511, 540, 541,
	0, 0, 0, 478, 496, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 0,
	0, 0, 0, 572, 0, 495, 0, 0, 490, 491,
	492, 497, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 548, 0, 0, 197, 346, 0,
	0, 570, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 555, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 547, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 438, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 559, 571, 565,
	567, 566, 563, 564, 562, 561, 560, 573, 549, 550,
	551, 552, 553, 0, 0, 0, 556, 0, 568, 569,
	0, 0, 0, 0, 0, 294, 276, 512, 513, 514,
	515, 516, 520, 521, 525, 526, 534, 533, 532, 535,
	536, 538, 537, 539, 517, 518, 519, 522, 523, 524,
	527, 528, 531, 529, 530, 554, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 173, 480, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	558, 209, 0, 0, 444, 306, 232, 0, 0, 0,
	0, 545, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 481, 505, 504, 507, 508,
	509, 510, 0, 0, 0, 506, 511, 540, 541, 0,
	0, 0, 478, 496, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 1313, 0,
	0, 0, 572, 0, 495, 0, 0, 490, 491, 492,
	497, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 548, 0, 0, 197, 346, 0, 0,
	570, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 555, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 547, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 438, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 559, 571, 565, 567,
	566, 563, 564, 562, 561, 560, 573, 549, 550, 551,
	552, 553, 0, 0, 0, 556, 0, 568, 569, 0,
	0, 0, 0, 0, 294, 276, 512, 513, 514, 515,
	516, 520, 521, 525, 526, 534, 533, 532, 535, 536,
	538, 537, 539, 517, 518, 519, 522, 523, 524, 527,
	528, 531, 529, 530, 554, 129, 139, 208, 0, 274,
	180, 339, 0, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	173, 480, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 558,
	209, 0, 0, 444, 306, 232, 0, 0, 0, 0,
	545, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 481, 505, 1357, 507, 508, 509,
	510, 0, 0, 0, 506, 511, 540, 541, 0, 0,
	0, 478, 496, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 1313, 0, 0,
	0, 572, 0, 495, 0, 0, 490, 491, 492, 497,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 548, 0, 0, 197, 346, 0, 0, 570,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 555, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 547, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 438, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 559, 571, 565, 567, 566,
	563, 564, 562, 561, 560, 573, 549, 550, 551, 552,
	553, 0, 0, 0, 556, 0, 568, 569, 0, 0,
	0, 0, 0, 294, 276, 512, 513, 514, 515, 516,
	520, 521, 525, 526, 534, 533, 532, 535, 536, 538,
	537, 539, 517, 518, 519, 522, 523, 524, 527, 528,
	531, 529, 530, 554, 129, 139, 208, 0, 274, 180,
	339, 0, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 173,
	480, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 0, 0, 0, 558, 209,
	0, 0, 444, 306, 232, 0, 0, 0, 0, 545,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 481, 505, 1354, 507, 508, 509, 510,
	0, 0, 0, 506, 511, 540, 541, 0, 0, 0,
	478, 496, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 1313, 0, 0, 0,
	572, 0, 495, 0, 0, 490, 491, 492, 497, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 185, 233,
	143, 548, 0, 0, 197, 346, 0, 0, 570, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	0, 289, 555, 0, 0, 0, 0, 164, 0, 282,
	252, 335, 547, 0, 259, 281, 210, 324, 0, 333,
	334, 0, 438, 343, 348, 0, 0, 0, 303, 174,
	0, 132, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 292, 291, 0, 193, 0, 0, 0, 275,
	0, 198, 131, 314, 351, 148, 204, 319, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 336, 0, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 308, 338,
	353, 151, 0, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 559, 571, 565, 567, 566, 563,
	564, 562, 561, 560, 573, 549, 550, 551, 552, 553,
	0, 0, 0, 556, 0, 568, 569, 0, 0, 0,
	0, 0, 294, 276, 512, 513, 514, 515, 516, 520,
	521, 525, 526, 534, 533, 532, 535, 536, 538, 537,
	539, 517, 518, 519, 522, 523, 524, 527, 528, 531,
	529, 530, 554, 129, 139, 208, 0, 274, 180, 339,
	0, 171, 0, 0, 0, 0, 0, 127, 140, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 173, 480,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 558, 209, 0,
	0, 444, 306, 232, 0, 0, 0, 0, 545, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	1214, 0, 481, 505, 504, 507, 508, 509, 510, 0,
	0, 0, 506, 511, 540, 541, 0, 0, 0, 478,
	496, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 0, 0, 0, 0, 572,
	0, 495, 0, 0, 490, 491, 492, 497, 0, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	548, 0, 0, 197, 346, 0, 0, 570, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 555, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 547, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 438, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 559, 571, 565, 567, 566, 563, 564,
	562, 561, 560, 573, 549, 550, 551, 552, 553, 0,
	0, 0, 556, 0, 568, 569, 0, 0, 0, 0,
	0, 294, 276, 512, 513, 514, 515, 516, 520, 521,
	525, 526, 534, 533, 532, 535, 536, 538, 537, 539,
	517, 518, 519, 522, 523, 524, 527, 528, 531, 529,
	530, 554, 129, 139, 208, 0, 274, 180, 339, 0,
	171, 0, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 173, 480, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 558, 209, 0, 0,
	444, 306, 232, 0, 0, 0, 0, 545, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 481, 505, 504, 507, 508, 509, 510, 0, 0,
	0, 506, 511, 540, 541, 0, 0, 0, 478, 496,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 0, 0, 0, 0, 572, 0,
	495, 0, 0, 490, 491, 492, 497, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 548,
	0, 0, 197, 346, 0, 0, 570, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	555, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	547, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	438, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 559, 571, 565, 567, 566, 563, 564, 562,
	561, 560, 573, 549, 550, 551, 552, 553, 0, 0,
	0, 556, 0, 568, 569, 0, 0, 0, 0, 0,
	294, 276, 512, 513, 514, 515, 516, 520, 521, 525,
	526, 534, 533, 532, 535, 536, 538, 537, 539, 517,
	518, 519, 522, 523, 524, 527, 528, 531, 529, 530,
	554, 129, 139, 208, 0, 274, 180, 339, 0, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 316, 0, 0, 0, 558, 209, 0, 0, 444,
	306, 232, 0, 0, 0, 0, 545, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	481, 505, 504, 507, 508, 509, 510, 0, 0, 0,
	506, 511, 540, 541, 0, 0, 0, 0, 496, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 0, 0, 0, 0, 572, 0, 495,
	0, 0, 490, 491, 492, 497, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 185, 233, 143, 548, 0,
	0, 197, 346, 0, 0, 570, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 0, 289, 555,
	0, 0, 0, 0, 164, 0, 282, 252, 335, 547,
	0, 259, 281, 210, 324, 0, 333, 334, 0, 438,
	343, 348, 0, 0, 0, 303, 174, 0, 132, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 292,
	291, 0, 193, 0, 0, 0, 275, 0, 198, 131,
	314, 351, 148, 204, 319, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	336, 0, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 308, 338, 353, 151, 0,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 559, 571, 565, 567, 566, 563, 564, 562, 561,
	560, 573, 549, 550, 551, 552, 553, 1360, 1361, 1362,
	556, 0, 568, 569, 0, 0, 0, 0, 0, 294,
	276, 512, 513, 514, 515, 516, 520, 521, 525, 526,
	534, 533, 532, 535, 536, 538, 537, 539, 517, 518,
	519, 522, 523, 524, 527, 528, 531, 529, 530, 554,
	129, 139, 208, 0, 274, 180, 339, 0, 171, 0,
	0, 0, 0, 0, 127, 140, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 558, 209, 0, 0, 444, 306,
	232, 0, 0, 0, 0, 545, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 481,
	505, 504, 507, 508, 509, 510, 0, 0, 0, 506,
	511, 540, 541, 0, 0, 0, 0, 496, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 0, 0, 0, 0, 572, 0, 495, 0,
	0, 490, 491, 492, 497, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 548, 0, 0,
	197, 346, 0, 0, 570, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 555, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 547, 2635,
	259, 281, 210, 324, 0, 333, 334, 0, 438, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	559, 571, 565, 567, 566, 563, 564, 562, 561, 560,
	573, 549, 550, 551, 552, 553, 0, 0, 0, 556,
	0, 568, 569, 0, 0, 0, 0, 0, 294, 276,
	512, 513, 514, 515, 516, 520, 521, 525, 526, 534,
	533, 532, 535, 536, 538, 537, 539, 517, 518, 519,
	522, 523, 524, 527, 528, 531, 529, 530, 554, 129,
	139, 208, 0, 274, 180, 339, 0, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 558, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 545, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 902, 0, 481, 505,
	504, 507, 508, 509, 510, 0, 0, 0, 506, 511,
	540, 541, 0, 0, 0, 0, 496, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 0, 0, 0, 0, 572, 0, 495, 0, 0,
	490, 491, 492, 497, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 548, 0, 0, 197,
	346, 0, 0, 570, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 555, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 547, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 559,
	571, 565, 567, 566, 563, 564, 562, 561, 560, 573,
	549, 550, 551, 552, 553, 0, 0, 0, 556, 0,
	568, 569, 0, 0, 0, 0, 0, 294, 276, 512,
	513, 514, 515, 516, 520, 521, 525, 526, 534, 533,
	532, 535, 536, 538, 537, 539, 517, 518, 519, 522,
	523, 524, 527, 528, 531, 529, 530, 554, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 558, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 545, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 481, 505, 504,
	507, 508, 509, 510, 0, 0, 0, 506, 511, 540,
	541, 0, 0, 0, 0, 496, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	0, 0, 0, 0, 572, 0, 495, 0, 0, 490,
	491, 492, 497, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 548, 0, 0, 197, 346,
	0, 0, 570, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 555, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 547, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 444, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 2052, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 559, 571,
	565, 567, 566, 563, 564, 562, 561, 560, 573, 549,
	550, 551, 552, 553, 438, 0, 0, 556, 0, 568,
	569, 0, 0, 0, 0, 0, 294, 276, 512, 513,
	514, 515, 516, 520, 521, 525, 526, 534, 533, 532,
	535, 536, 538, 537, 539, 517, 518, 519, 522, 523,
	524, 527, 528, 531, 529, 530, 554, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 411, 317, 409, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 448, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 419, 420, 421,
	422, 426, 427, 431, 432, 441, 440, 439, 442, 443,
	446, 445, 447, 423, 424, 425, 428, 429, 430, 433,
	434, 437, 435, 436, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 410, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 444, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 2061, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 451,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 276, 418, 419,
	420, 421, 422, 426, 427, 431, 432, 441, 440, 439,
	442, 443, 446, 445, 447, 423, 424, 425, 428, 429,
	430, 433, 434, 437, 435, 436, 0, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 411, 317, 409, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 415, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 419, 420, 421, 422, 426, 427,
	431, 432, 441, 440, 439, 442, 443, 446, 445, 447,
	423, 424, 425, 428, 429, 430, 433, 434, 437, 435,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 410, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 444, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 2059, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 406,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 276, 418, 419,
	420, 421, 422, 426, 427, 431, 432, 441, 440, 439,
	442, 443, 446, 445, 447, 423, 424, 425, 428, 429,
	430, 433, 434, 437, 435, 436, 0, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 1403, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 0, 209, 0, 0, 444, 306, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 1407,
	0, 0, 0, 0, 0, 0, 124, 0, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 418, 419, 420, 421, 422, 426, 427,
	431, 432, 441, 440, 439, 442, 443, 446, 445, 447,
	423, 424, 425, 428, 429, 430, 433, 434, 437, 435,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 0, 0, 0, 197, 346, 0,
	1406, 0, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 0, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 438, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 276, 418, 419, 420,
	421, 422, 426, 427, 431, 432, 441, 440, 439, 442,
	443, 446, 445, 447, 423, 424, 425, 428, 429, 430,
	433, 434, 437, 435, 436, 0, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 1403, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	0, 209, 0, 0, 444, 306, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1405, 1407, 0,
	0, 0, 0, 0, 0, 124, 0, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 0, 0, 0, 197, 346, 0, 1406,
	0, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 0, 0, 1401, 281, 210, 324,
	0, 333, 334, 0, 438, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 276, 418, 419, 420, 421,
	422, 426, 427, 431, 432, 441, 440, 439, 442, 443,
	446, 445, 447, 423, 424, 425, 428, 429, 430, 433,
	434, 437, 435, 436, 0, 129, 139, 208, 0, 274,
	180, 339, 0, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 924, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 0,
	209, 0, 0, 444, 306, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 925, 0, 928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 921,
	920, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 0, 0, 0, 197, 346, 0, 0, 0,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 0, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 438, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 332,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 145,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 238, 146, 192, 305, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 276, 418, 419, 420, 421, 422,
	426, 427, 431, 432, 441, 440, 439, 442, 443, 446,
	445, 447, 423, 424, 425, 428, 429, 430, 433, 434,
	437, 435, 436, 0, 129, 139, 208, 0, 274, 180,
	339, 0, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 2556, 0, 0, 0, 0, 0, 0, 173,
	2554, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 316, 0, 0, 0, 0, 209,
	0, 0, 444, 306, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 185, 233,
	143, 0, 0, 0, 197, 346, 0, 0, 0, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 282,
	252, 335, 0, 0, 259, 281, 210, 324, 0, 333,
	334, 0, 438, 343, 348, 0, 0, 0, 303, 174,
	0, 132, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 292, 291, 0, 193, 0, 2555, 0, 275,
	0, 198, 131, 314, 351, 148, 204, 319, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 336, 0, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 308, 338,
	353, 151, 0, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 276, 418, 419, 420, 421, 422, 426,
	427, 431, 432, 441, 440, 439, 442, 443, 446, 445,
	447, 423, 424, 425, 428, 429, 430, 433, 434, 437,
	435, 436, 0, 129, 139, 208, 0, 274, 180, 339,
	0, 171, 0, 0, 0, 0, 0, 127, 140, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 0, 209, 0,
	0, 444, 306, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 464, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	0, 0, 0, 197, 346, 0, 0, 0, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 0, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 438, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 276, 418, 419, 420, 421, 422, 426, 427,
	431, 432, 441, 440, 439, 442, 443, 446, 445, 447,
	423, 424, 425, 428, 429, 430, 433, 434, 437, 435,
	436, 0, 129, 139, 208, 0, 274, 180, 339, 0,
	171, 0, 0, 0, 0, 459, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 1697, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 0, 209, 0, 0,
	444, 306, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 0,
	0, 0, 197, 346, 0, 0, 0, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	0, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	438, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 276, 418, 419, 420, 421, 422, 426, 427, 431,
	432, 441, 440, 439, 442, 443, 446, 445, 447, 423,
	424, 425, 428, 429, 430, 433, 434, 437, 435, 436,
	0, 129, 139, 208, 0, 274, 180, 339, 0, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 316, 0, 0, 0, 0, 209, 0, 0, 444,
	306, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 185, 233, 143, 0, 0,
	0, 197, 346, 0, 0, 0, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 282, 252, 335, 0,
	0, 259, 281, 210, 324, 0, 333, 334, 0, 438,
	343, 348, 0, 0, 0, 303, 174, 0, 132, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 292,
	291, 0, 193, 0, 0, 0, 275, 0, 198, 131,
	314, 351, 148, 204, 319, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	336, 0, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 145, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 308, 338, 353, 151, 0,
	296, 320, 0, 0, 152, 182, 176, 263, 238, 146,
	192, 305, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	276, 418, 419, 420, 421, 422, 426, 427, 431, 432,
	441, 440, 439, 442, 443, 446, 445, 447, 423, 424,
	425, 428, 429, 430, 433, 434, 437, 435, 436, 0,
	129, 139, 208, 0, 274, 180, 339, 0, 171, 0,
	0, 0, 0, 0, 127, 140, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 0, 209, 0, 0, 444, 306,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 0, 0, 0,
	197, 346, 0, 0, 0, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 0, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 438, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 276,
	418, 419, 420, 421, 422, 426, 427, 431, 432, 441,
	440, 439, 442, 443, 446, 445, 447, 423, 424, 425,
	428, 429, 430, 433, 434, 437, 435, 436, 0, 129,
	139, 208, 0, 274, 180, 339, 0, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 444, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 438, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 276, 418,
	419, 420, 421, 422, 426, 427, 431, 432, 441, 440,
	439, 442, 443, 446, 445, 447, 423, 424, 425, 428,
	429, 430, 433, 434, 437, 435, 436, 0, 129, 139,
	208, 0, 274, 180, 339, 0, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 444, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 925, 0, 928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 438, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 332, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 276, 418, 419,
	420, 421, 422, 426, 427, 431, 432, 441, 440, 439,
	442, 443, 446, 445, 447, 423, 424, 425, 428, 429,
	430, 433, 434, 437, 435, 436, 0, 129, 139, 208,
	0, 274, 180, 339, 0, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 0, 209, 0, 0, 444, 306, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 0, 0, 0, 197, 346, 0,
	0, 0, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 0, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 438, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 276, 418, 419, 420,
	421, 422, 426, 427, 431, 432, 441, 440, 439, 442,
	443, 446, 445, 447, 423, 424, 425, 428, 429, 430,
	433, 434, 437, 435, 436, 0, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	0, 209, 0, 0, 0, 306, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 938, 937, 947, 948, 940, 941, 942, 943,
	944, 945, 946, 939, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 0, 0, 0, 197, 346, 0, 0,
	0, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 0, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 0, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 35, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 294, 276, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 1398, 209, 0,
	0, 0, 306, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 139, 208, 79, 274,
	180, 339, 124, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	0, 0, 0, 197, 346, 0, 0, 0, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 0, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 0, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 1074, 0, 0, 0,
	206, 294, 276, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 0, 209, 0, 0, 0, 306,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 139, 208, 77, 274, 180, 339, 613,
	171, 1073, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 0, 0, 0,
	197, 346, 0, 0, 0, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 0, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 0, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 294, 276,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 0, 209, 0, 0, 0, 306, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	139, 208, 79, 274, 180, 339, 124, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 0, 0, 0, 197, 346, 0,
	0, 0, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 0, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 0, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 139, 208, 0,
	274, 180, 339, 0, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	0, 209, 0, 0, 0, 306, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 0, 0, 0, 197, 346, 0, 0,
	0, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 0, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 0, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 294, 276, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 0, 209, 0,
	0, 0, 306, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 139, 208, 79, 274,
	180, 339, 613, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	0, 0, 0, 197, 346, 0, 0, 0, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 0, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 0, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 139, 208, 0, 274, 180, 339, 0,
	171, 0, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 316, 0, 0, 0, 0, 209, 0, 0,
	0, 306, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 185, 233, 143, 0,
	0, 0, 197, 346, 0, 0, 0, 269, 0, 311,
	187, 207, 147, 126, 141, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 282, 252, 335,
	0, 0, 259, 281, 210, 324, 0, 333, 334, 0,
	0, 343, 348, 0, 0, 0, 303, 174, 0, 132,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 302, 322, 149, 318, 231, 237, 158, 160, 159,
	142, 297, 321, 153, 162, 307, 285, 312, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	292, 291, 0, 193, 0, 0, 0, 275, 0, 198,
	131, 314, 351, 148, 204, 319, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 336, 0, 273, 133, 315, 332, 154, 293, 295,
	349, 280, 136, 330, 310, 229, 199, 200, 134, 0,
	135, 278, 172, 184, 167, 247, 0, 183, 268, 327,
	328, 165, 352, 144, 342, 138, 145, 341, 240, 0,
	239, 344, 323, 331, 230, 218, 0, 137, 329, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 308, 338, 353, 151,
	0, 296, 320, 0, 0, 152, 182, 176, 263, 238,
	146, 192, 305, 203, 211, 277, 350, 251, 283, 155,
	337, 304, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 1043, 173, 0, 0, 0, 0, 206,
	294, 276, 163, 214, 212, 0, 0, 0, 255, 316,
	0, 0, 0, 0, 209, 0, 0, 0, 306, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 139, 208, 0, 274, 180, 339, 124, 171,
	0, 0, 0, 0, 0, 127, 140, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 272, 279,
	284, 286, 287, 288, 290, 298, 299, 300, 301, 309,
	313, 325, 326, 345, 347, 0, 0, 0, 130, 0,
	0, 0, 0, 185, 233, 143, 0, 0, 0, 197,
	346, 0, 0, 0, 269, 0, 311, 187, 207, 147,
	126, 141, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 282, 252, 335, 0, 0, 259,
	281, 210, 324, 0, 333, 334, 0, 0, 343, 348,
	0, 0, 0, 303, 174, 0, 132, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 302, 322,
	149, 318, 231, 237, 158, 160, 159, 142, 297, 321,
	153, 162, 307, 285, 312, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 292, 291, 0,
	193, 0, 0, 0, 275, 0, 198, 131, 314, 351,
	148, 204, 319, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 336, 0,
	273, 133, 315, 332, 154, 293, 295, 349, 280, 136,
	330, 310, 229, 199, 200, 134, 0, 135, 278, 172,
	184, 167, 247, 0, 183, 268, 327, 328, 165, 352,
	144, 342, 138, 145, 341, 240, 0, 239, 344, 323,
	331, 230, 218, 0, 137, 329, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 308, 338, 353, 151, 0, 296, 320,
	0, 0, 152, 182, 176, 263, 238, 146, 192, 305,
	203, 211, 277, 350, 251, 283, 155, 337, 304, 0,
	317, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 294, 276, 163,
	214, 212, 0, 0, 0, 255, 316, 0, 0, 0,
	0, 209, 0, 0, 0, 306, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 139,
	208, 0, 274, 180, 339, 124, 171, 0, 0, 0,
	0, 0, 127, 140, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 272, 279, 284, 286, 287,
	288, 290, 298, 299, 300, 301, 309, 313, 325, 326,
	345, 347, 0, 0, 0, 130, 0, 0, 0, 0,
	185, 233, 143, 0, 0, 0, 197, 346, 0, 0,
	0, 269, 0, 311, 187, 207, 147, 126, 141, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 282, 252, 335, 0, 0, 259, 281, 210, 324,
	0, 333, 334, 0, 0, 343, 348, 0, 0, 0,
	303, 174, 0, 132, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 302, 322, 149, 318, 231,
	237, 158, 160, 159, 142, 297, 321, 153, 162, 307,
	285, 312, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 292, 291, 0, 193, 0, 0,
	0, 275, 0, 198, 131, 314, 351, 148, 204, 319,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 336, 0, 273, 133, 315,
	332, 154, 293, 295, 349, 280, 136, 330, 310, 229,
	199, 200, 134, 0, 135, 278, 172, 184, 167, 247,
	0, 183, 268, 327, 328, 165, 352, 144, 342, 138,
	145, 341, 240, 0, 239, 344, 323, 331, 230, 218,
	0, 137, 329, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	308, 338, 353, 151, 0, 296, 320, 0, 0, 152,
	182, 176, 263, 238, 146, 192, 305, 203, 211, 277,
	350, 251, 283, 155, 337, 304, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 294, 276, 163, 214, 212, 0,
	0, 0, 255, 316, 0, 0, 0, 0, 209, 0,
	0, 0, 306, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 139, 208, 0, 274,
	180, 339, 124, 171, 0, 0, 0, 0, 0, 127,
	140, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 272, 279, 284, 286, 287, 288, 290, 298,
	299, 300, 301, 309, 313, 325, 326, 345, 347, 0,
	0, 0, 130, 0, 0, 0, 0, 185, 233, 143,
	0, 121, 0, 197, 346, 0, 0, 0, 269, 0,
	311, 187, 207, 147, 126, 141, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 282, 252,
	335, 0, 0, 259, 281, 210, 324, 0, 333, 334,
	0, 0, 343, 348, 0, 0, 0, 303, 174, 0,
	132, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 302, 322, 149, 318, 231, 237, 158, 160,
	159, 142, 297, 321, 153, 162, 307, 285, 312, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 292, 291, 0, 193, 0, 0, 0, 275, 0,
	198, 131, 314, 351, 148, 204, 319, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 336, 0, 273, 133, 315, 332, 154, 293,
	295, 349, 280, 136, 330, 310, 229, 199, 200, 134,
	0, 135, 278, 172, 184, 167, 247, 0, 183, 268,
	327, 328, 165, 352, 144, 342, 138, 145, 341, 240,
	0, 239, 344, 323, 331, 230, 218, 0, 137, 329,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 308, 338, 353,
	151, 0, 296, 320, 0, 0, 152, 182, 176, 263,
	238, 146, 192, 305, 203, 211, 277, 350, 251, 283,
	155, 337, 304, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 294, 276, 163, 214, 212, 0, 0, 0, 255,
	316, 0, 0, 0, 0, 209, 0, 0, 0, 306,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 139, 208, 0, 274, 180, 339, 613,
	171, 0, 0, 0, 0, 0, 127, 140, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 272,
	279, 284, 286, 287, 288, 290, 298, 299, 300, 301,
	309, 313, 325, 326, 345, 347, 0, 0, 0, 130,
	0, 0, 0, 0, 185, 233, 143, 0, 0, 0,
	197, 346, 0, 0, 0, 269, 0, 311, 187, 207,
	147, 126, 141, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 282, 252, 335, 0, 0,
	259, 281, 210, 324, 0, 333, 334, 0, 0, 343,
	348, 0, 0, 0, 303, 174, 0, 132, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 302,
	322, 149, 318, 231, 237, 158, 160, 159, 142, 297,
	321, 153, 162, 307, 285, 312, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 292, 291,
	0, 193, 0, 0, 0, 275, 0, 198, 131, 314,
	351, 148, 204, 319, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 336,
	0, 273, 133, 315, 332, 154, 293, 295, 349, 280,
	136, 330, 310, 229, 199, 200, 134, 0, 135, 278,
	172, 184, 167, 247, 0, 183, 268, 327, 328, 165,
	352, 144, 342, 138, 145, 341, 240, 0, 239, 344,
	323, 331, 230, 218, 0, 137, 329, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 308, 338, 353, 151, 0, 296,
	320, 0, 0, 152, 182, 176, 263, 238, 146, 192,
	305, 203, 211, 277, 350, 251, 283, 155, 337, 304,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 294, 276,
	163, 214, 212, 0, 0, 0, 255, 316, 0, 0,
	0, 0, 209, 0, 0, 0, 306, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	139, 208, 0, 274, 180, 339, 124, 171, 0, 0,
	0, 0, 0, 127, 140, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 272, 279, 284, 286,
	287, 288, 290, 298, 299, 300, 301, 309, 313, 325,
	326, 345, 347, 0, 0, 0, 130, 0, 0, 0,
	0, 185, 233, 143, 0, 0, 0, 197, 346, 0,
	0, 0, 269, 0, 311, 187, 207, 147, 126, 141,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 282, 252, 335, 0, 0, 259, 281, 210,
	324, 0, 333, 334, 0, 0, 343, 348, 0, 0,
	0, 303, 174, 0, 132, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 302, 322, 149, 318,
	231, 237, 158, 160, 159, 142, 297, 321, 153, 162,
	307, 285, 312, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 292, 291, 0, 193, 0,
	0, 0, 275, 0, 198, 131, 314, 351, 148, 204,
	319, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 336, 0, 273, 133,
	315, 332, 154, 293, 295, 349, 280, 136, 330, 310,
	229, 199, 200, 134, 0, 135, 278, 172, 184, 167,
	247, 0, 183, 268, 327, 328, 165, 352, 144, 342,
	138, 145, 341, 240, 0, 239, 344, 323, 331, 230,
	218, 0, 137, 329, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 308, 338, 353, 151, 0, 296, 320, 0, 0,
	152, 182, 176, 263, 238, 146, 192, 305, 203, 211,
	277, 350, 251, 283, 155, 337, 304, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 294, 276, 163, 214, 212,
	0, 0, 0, 255, 316, 0, 0, 0, 0, 209,
	0, 0, 0, 306, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 139, 208, 0,
	274, 180, 339, 481, 171, 0, 0, 0, 0, 0,
	127, 140, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 272, 279, 284, 286, 287, 288, 290,
	298, 299, 300, 301, 309, 313, 325, 326, 345, 347,
	0, 0, 0, 130, 0, 0, 0, 0, 185, 233,
	143, 0, 0, 0, 197, 346, 0, 0, 0, 269,
	0, 311, 187, 207, 147, 126, 141, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 282,
	252, 335, 0, 0, 259, 281, 210, 324, 0, 333,
	334, 0, 0, 343, 348, 0, 0, 0, 303, 174,
	0, 132, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 302, 322, 149, 318, 231, 237, 158,
	160, 159, 142, 297, 321, 153, 162, 307, 285, 312,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 292, 291, 0, 193, 0, 0, 0, 275,
	0, 198, 131, 314, 351, 148, 204, 319, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 336, 0, 273, 133, 315, 332, 154,
	293, 295, 349, 280, 136, 330, 310, 229, 199, 200,
	134, 0, 135, 278, 172, 184, 167, 247, 0, 183,
	268, 327, 328, 165, 352, 144, 342, 138, 145, 341,
	240, 0, 239, 344, 323, 331, 230, 218, 0, 137,
	329, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 308, 338,
	353, 151, 0, 296, 320, 0, 0, 152, 182, 176,
	263, 238, 146, 192, 305, 203, 211, 277, 350, 251,
	283, 155, 337, 304, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 294, 276, 163, 214, 212, 0, 0, 0,
	255, 316, 0, 0, 0, 0, 209, 0, 0, 0,
	306, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 139, 208, 0, 274, 180, 339,
	481, 171, 0, 0, 0, 0, 0, 127, 140, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	272, 279, 284, 286, 287, 288, 290, 298, 299, 300,
	301, 309, 313, 325, 326, 345, 347, 0, 0, 0,
	130, 0, 0, 0, 0, 185, 233, 143, 0, 0,
	0, 197, 346, 0, 0, 0, 269, 0, 311, 187,
	207, 147, 126, 141, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 282, 252, 335, 0,
	0, 259, 281, 210, 324, 0, 333, 334, 0, 0,
	343, 348, 0, 0, 0, 303, 174, 0, 132, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	302, 322, 149, 318, 231, 237, 158, 160, 159, 142,
	297, 321, 153, 162, 307, 285, 312, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 292,
	291, 0, 193, 0, 0, 0, 275, 0, 198, 131,
	314, 351, 148, 204, 319, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	336, 0, 273, 133, 315, 332, 154, 293, 295, 349,
	280, 136, 330, 310, 229, 199, 200, 134, 0, 135,
	278, 172, 184, 167, 247, 0, 183, 268, 327, 328,
	165, 352, 144, 342, 138, 596, 341, 240, 0, 239,
	344, 323, 331, 230, 218, 0, 137, 329, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	592, 219, 0, 0, 0, 308, 338, 353, 151, 0,
	296, 320, 0, 0, 152, 182, 176, 263, 597, 595,
	586, 587, 203, 211, 277, 350, 251, 283, 155, 337,
	304, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 294,
	276, 163, 214, 212, 0, 0, 0, 255, 316, 0,
	0, 0, 0, 209, 0, 0, 0, 306, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 139, 208, 0, 274, 180, 339, 481, 171, 0,
	0, 0, 0, 0, 127, 140, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 593, 594, 267, 270, 272, 279, 284,
	286, 287, 288, 290, 298, 299, 300, 301, 309, 313,
	325, 326, 345, 347, 0, 0, 0, 130, 0, 0,
	0, 0, 185, 233, 143, 0, 0, 0, 197, 346,
	0, 0, 0, 269, 0, 311, 187, 207, 147, 126,
	141, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 282, 252, 335, 0, 0, 259, 281,
	210, 324, 0, 333, 334, 0, 0, 343, 348, 0,
	0, 0, 303, 174, 0, 132, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 302, 322, 149,
	318, 231, 237, 158, 160, 159, 142, 297, 321, 153,
	162, 307, 285, 312, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 292, 291, 0, 193,
	0, 0, 0, 275, 0, 198, 131, 314, 351, 148,
	204, 319, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 336, 0, 273,
	133, 315, 1068, 154, 293, 295, 349, 280, 136, 330,
	310, 229, 199, 200, 134, 0, 135, 278, 172, 184,
	167, 247, 0, 183, 268, 327, 328, 165, 352, 144,
	342, 138, 145, 341, 240, 0, 239, 344, 323, 331,
	230, 218, 0, 137, 329, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 308, 338, 353, 151, 0, 296, 320, 0,
	0, 152, 182, 176, 263, 238, 146, 192, 305, 203,
	211, 277, 350, 251, 283, 155, 337, 304, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 294, 276, 163, 214,
	212, 0, 0, 0, 255, 316, 0, 0, 0, 0,
	209, 0, 0, 0, 306, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 139, 208,
	0, 274, 180, 339, 481, 171, 0, 0, 0, 0,
	0, 127, 140, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 272, 279, 284, 286, 287, 288,
	290, 298, 299, 300, 301, 309, 313, 325, 326, 345,
	347, 0, 0, 0, 130, 0, 0, 0, 0, 185,
	233, 143, 0, 0, 0, 197, 346, 0, 0, 0,
	269, 0, 311, 187, 207, 147, 126, 141, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	282, 252, 335, 0, 0, 259, 281, 210, 324, 0,
	333, 334, 0, 0, 343, 348, 0, 0, 0, 303,
	174, 0, 132, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 302, 322, 149, 318, 231, 237,
	158, 160, 159, 142, 297, 321, 153, 162, 307, 285,
	312, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 292, 291, 0, 193, 0, 0, 0,
	275, 0, 198, 131, 314, 351, 148, 204, 319, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 336, 0, 273, 133, 315, 583,
	154, 293, 295, 349, 280, 136, 330, 310, 229, 199,
	200, 134, 0, 135, 278, 172, 184, 167, 247, 0,
	183, 268, 327, 328, 165, 352, 144, 342, 138, 596,
	341, 240, 0, 239, 344, 323, 331, 230, 218, 0,
	137, 329, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 592, 219, 0, 0, 0, 308,
	338, 353, 151, 0, 296, 320, 0, 0, 152, 182,
	176, 263, 597, 595, 586, 587, 203, 211, 277, 350,
	251, 283, 155, 337, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 139, 208, 0, 274, 180,
	339, 0, 171, 0, 0, 0, 0, 0, 127, 140,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 593, 594, 267,
	270, 272, 279, 284, 286, 287, 288, 290, 298, 299,
	300, 301, 309, 313, 325, 326, 345, 347, 35, 0,
	70, 38, 39, 0, 0, 0, 35, 0, 70, 38,
	39, 0, 58, 0, 0, 0, 0, 0, 76, 0,
	58, 0, 40, 0, 0, 0, 76, 0, 0, 0,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 2612, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2396, 0, 0, 0, 0, 0,
	0, 0, 2396, 0, 0, 0, 0, 2550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 72, 45, 44, 47, 0, 0,
	0, 42, 72, 45, 44, 47, 0, 0, 0, 2397,
	0, 0, 0, 0, 0, 0, 0, 2397, 0, 0,
	0, 0, 0, 0, 0, 48, 75, 74, 0, 0,
	0, 0, 46, 48, 75, 74, 0, 0, 0, 35,
	46, 70, 38, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 57,
	0, 2398, 0, 0, 0, 0, 56, 57, 0, 2398,
	0, 0, 0, 0, 0, 65, 0, 66, 0, 0,
	0, 79, 0, 65, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2396, 0, 2399, 73, 0,
	52, 53, 60, 0, 61, 2399, 73, 0, 52, 53,
	60, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 72, 45, 44, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 75, 74, 0,
	0, 0, 0, 46, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	57, 0, 2398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 65, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2399, 73,
	0, 52, 53, 60, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77,
}

var yyPact = [...]int{
	4333, -1000, -302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1796, -1000, -1000, -1000, -1000, -1000,
	-1000, 803, 543, -1000, 243, 236, 27090, 613, 2762, 27784,
	-1000, -1000, -1000, 195, 492, 27784, 410, 401, 1169, 1631,
	1168, 51, -46, -47, 165, 18095, 17625, -1000, 1845, 1849,
	-1000, -1000, 540, 55, -1000, -1000, -1000, 20440, 187, -1000,
	-1000, 1759, 1793, 1540, -1000, 12465, 540, 540, 26743, 29172,
	-1000, 1843, 27784, 11056, -1000, 600, 27784, -137, 526, 526,
	310, 526, 526, 611, -1000, 810, -1000, -1000, -1000, -1000,
	27784, 21847, 529, 27437, 529, 529, 529, 529, 529, 529,
	529, 27784, -1000, 673, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 27784, 1167, 1669, 822, 101, -1000,
	-1000, -1000, 826, -1000, 302, 299, 278, 293, 113, 849,
	1753, -1000, 1431, 1759, 1759, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 328, 562, 179, 187, 798, -1000, 1665, 1664,
	1040, 1649, 442, 1647, 1475, -27, -1000, 1166, 27784, -1000,
	-1000, 1027, 1020, 1506, 1392, 622, 1502, -1000, -1000, 1474,
	1474, 1474, 1474, 1179, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 346, 1359,
	1368, 1501, -1000, 1489, 1776, 606, -1000, -80, 1420, 22316,
	-1000, 1431, -1000, -1000, -1000, 1183, 1655, 953, 15279, 1610,
	-1000, -1000, 908, 1831, -1000, 19502, 672, -1000, 15279, 3276,
	1431, -1000, -1000, 1431, -1000, -1000, -1000, 641, -1000, -1000,
	17155, 17155, 17155, 17155, 17155, 17155, 17155, 17155, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	-1000, -1000, 1431, -1000, 11996, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 15279, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 26396, 24764, 27784, 1388, 1380, -1000,
	-1000, 671, 1425, -83, 28825, -1000, -1000, -1000, -1000, 28131,
	24417, 797, -1000, -1000, -1000, -1000, 1645, -1000, -1000, 668,
	-1000, 1796, -1000, -1000, 1334, 353, -1000, 4013, 4512, -1000,
	-1000, -1000, 1470, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27437,
	1722, 544, 1165, 851, 1160, 1156, 1155, 21847, 21847, 526,
	1152, 1424, 561, 1423, 558, 1176, 27784, 1709, 1499, 27784,
	1151, 1150, 1149, 1148, 21847, 21847, -1000, 10584, -1000, -1000,
	822, -1000, 1104, 15279, 526, 526, 27784, 27784, 27784, 27784,
	-1000, -1000, 822, 822, -1000, 822, 821, 1829, 821, -1000,
	821, -1000, -1000, 15279, -1000, 17155, 21378, 705, -1000, -1000,
	-1000, 1147, 323, -1000, -1000, -1000, -1000, -1000, -1000, 1142,
	442, 442, -1000, 1103, 442, 1403, -1000, 796, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	442, -1000, 14810, -300, -1000, -1000, 1422, -1000, 259, -1000,
	-1000, 330, 330, 658, 21847, 21847, 21847, -1000, 27437, -1000,
	-1000, -1000, 21847, 330, 141, 1421, 330, 21847, 21847, 1540,
	-1000, -1000, 187, -1000, -1000, 27784, -88, 22316, 1420, 1720,
	9168, -1000, -1000, -1000, 1838, 713, 1399, -1000, -1000, 1417,
	-1000, 815, 667, 1058, 1568, -1000, -1000, -1000, 27784, -1000,
	15279, 15279, 991, -1000, 22785, -1000, -1000, -1000, -1000, 8696,
	719, 17155, 913, 799, 17155, 17155, 17155, 17155, 17155, 17155,
	17155, 17155, 17155, 17155, 17155, 17155, 17155, 17155, 17155, 1031,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1141, -1000,
	187, 1300, 1300, 687, 687, 687, 687, 687, 687, 687,
	23723, 1715, 13403, 13403, 13403, 1715, 1183, 1183, 13403, 13403,
	13403, 13403, 13403, 13403, 1715, 1715, 13403, 1183, 1183, 1183,
	1183, 13403, 13403, 13403, 13403, 1715, 13403, 13403, 13403, 1715,
	1183, 1302, 902, 11996, 13403, 13403, 13403, 1183, 15279, 15279,
	14341, 13872, 15748, 13403, 13403, 1715, 834, 902, 28131, -1000,
	-1000, 16686, -1000, -1000, -1000, -1000, -1000, 1183, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27437, 27437, 13403, 13403,
	13403, 13403, 319, 27784, -1000, 1365, 1899, -1000, -1000, -1000,
	1718, 24070, 19033, -1000, 319, 1346, 24764, 27784, -1000, -1000,
	24764, 27784, 8224, 28478, 1395, -1000, -65, -97, -83, -1000,
	-1000, 685, -1000, -1000, -1000, 11526, -1000, 9640, 1759, 1540,
	5864, 10112, -1000, 4512, 1470, -1000, -35, -1000, -1000, -1000,
	1445, -1000, 1445, 277, 16, 1445, 1445, 1445, 1445, 1445,
	17, 17, 17, 17, 20, -1000, -1000, -1000, -1000, -1000,
	1467, 1466, -1000, 1445, 1445, 1445, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1451, 296, 1447, 1447, 1447,
	1447, 1447, 469, 469, -1000, 15279, 1477, -1000, 27784, -1000,
	1705, -1000, 268, 1461, 1385, -1000, 152, 1261, 27784, -1000,
	27784, 27784, 21847, 21847, 21847, 545, -1000, 27784, 1416, -1000,
	-1000, -1000, -1000, -1000, 1375, -1000, 1261, -1000, -1000, -1000,
	-1000, -1000, 902, 1140, 1139, -1000, -1000, -1000, 824, -1000,
	-1000, -1000, 822, 27784, 27784, 27784, 1716, 822, 902, 737,
	1478, 1431, 1183, -1000, -1000, 1138, -1000, 1403, 1403, -1000,
	1403, 442, 1300, 1403, -1000, 1299, 1696, 1096, 27784, -1000,
	22316, -28, -1000, -114, 26049, -1000, -1000, -1000, 26049, -1000,
	160, -1000, 557, 1297, -1000, -1000, 26049, 98, 139, 26049,
	1375, 1828, 1715, 1183, 290, -1000, -1000, -1000, 1431, 1259,
	666, -1000, 1564, 953, 953, 15279, -1000, -1000, -1000, 9640,
	1738, -1000, 1581, 1574, 1523, -1000, -1000, 719, 812, -1000,
	-1000, 1016, -1000, -1000, -1000, -1000, 661, 1431, -1000, 3436,
	-1000, -1000, -1000, -1000, 913, 17155, 17155, 17155, 737, 3436,
	3622, 1981, 1651, 687, 768, 768, 686, 686, 686, 686,
	686, 830, 830, -1000, -1000, -1000, 1183, -1000, -1000, -1000,
	13403, 1289, -1000, -1000, 902, 654, 1289, 1289, 13403, -153,
	-153, 1183, 1289, 1289, 1289, 1183, 1289, 13403, 13403, 1289,
	-153, -153, -153, -153, 1289, 1289, 1289, 1289, 13403, 1289,
	1289, 1289, 13403, -1000, 15279, -1000, 1183, 1289, 1289, 1289,
	-1000, 811, 1087, 747, 1827, 1289, 738, 1824, 1289, 1012,
	17155, 17155, 17155, 1289, 1289, 13403, 842, -1000, 15279, 1183,
	-1000, 1223, 1401, 1398, 1289, 1183, 1397, 1289, 1289, 184,
	1431, -1000, 9640, 24764, 24764, 24764, 24764, 24764, -1000, 1537,
	1532, -1000, 1518, 1517, 1528, 22316, 1294, 1183, 238, 24070,
	-1000, 1431, -1000, 20909, 616, 590, 580, 566, 1803, 24764,
	1246, -1000, 1246, -1000, 653, -1000, -1000, 28131, -83, -103,
	-1000, -1000, 1395, -1000, 1039, -1000, -1000, 902, -1000, 651,
	1655, 1715, 1390, 5392, -1000, -1000, -1000, -1000, 353, -1000,
	-1000, -1000, 1459, 4462, -1000, 1599, 665, 694, 1114, 1596,
	-1000, -1000, 596, -40, -1000, -1000, 1019, 17, 17, 1445,
	1445, 276, 1445, -1000, 17, -1000, -1000, -1000, 685, 1643,
	685, 685, 685, 685, 17, 1079, 1079, -1000, -1000, -1000,
	-1000, 1006, -1000, 1451, -1000, 1002, -1000, -1000, -1000, -1000,
	-1000, -1000, 981, 1498, 27437, 187, 1712, -1000, 1816, -1000,
	-1000, 525, 75, 21847, 150, 369, 181, -1000, 554, -1000,
	553, -1000, -1000, -1000, -1000, -1000, -1000, 27784, 21847, -1000,
	-1000, 1803, 1136, 1135, -1000, -1000, -1000, 821, 822, 1634,
	-1000, -1000, 17155, 21847, -1000, 249, -1000, -1000, -1000, -1000,
	319, 602, -1000, -1000, -79, -1000, -1000, 551, 650, 645,
	550, -1000, 85, 21847, -1000, 27437, 1821, 1818, 95, 1811,
	21847, 1568, -1000, 1383, -1000, 716, 627, 674, 475, 475,
	-1000, 740, 475, 318, -1000, 188, -1000, 9168, 9168, 1562,
	-1000, -1000, -1000, 27784, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7752, 13403, -1000, 737, 3436, 3413, -1000,
	17155, -1000, 1289, 13403, -153, 7280, -153, -153, 1289, -1000,
	25580, -1000, -153, -153, -153, -153, -153, -153, 1289, 1289,
	-153, -1000, -1000, -1000, -1000, -153, -153, -153, -153, 1289,
	-153, -153, -153, 1183, 902, -1000, -1000, -1000, -1000, 465,
	1031, 465, 17155, 17155, -1000, 17155, 17155, -1000, -1000, 17155,
	3233, 3115, 1672, -196, -1000, 1396, 804, -1000, 15279, 960,
	-1000, -1000, 17155, 17155, -1000, -1000, -1000, -1000, 1497, 9640,
	1431, 6336, -1000, 27437, 1349, -1000, 772, 766, 1899, 1465,
	1494, 1543, -1000, -1000, -1000, -1000, 1529, -1000, 1519, -1000,
	-1000, 1436, -1000, -1000, 1381, 1431, 27437, 17155, 616, -1000,
	1431, 1431, 1431, 1796, 15279, 1246, -1000, -1000, 703, -1000,
	-1000, -89, -123, -1000, -1000, -1000, 9168, -1000, 5864, -1000,
	5864, -1000, 23254, 517, 1601, 355, -1000, 1114, -1000, -1000,
	1114, -1000, -1000, -1000, 1448, -1000, 895, -1000, -1000, -1000,
	-1000, -1000, 17155, 1837, -1000, 1598, -1000, 1597, 1077, -1000,
	-1000, 1232, 685, 685, 17, -1000, -1000, 1445, -1000, 685,
	-1000, 739, -1000, -1000, -1000, -1000, 685, 1287, -1000, 1283,
	1379, -1000, 1275, 110, 27784, -1000, -1000, -1000, 1493, -1000,
	-1000, -1000, 1222, 1377, -1000, 4013, 1134, 1132, 1129, -205,
	233, -1000, 21847, 125, 152, 382, 1123, 27784, 21847, -1000,
	-1000, -1000, -1000, -1000, 822, -1000, 17155, 3436, 1261, -1000,
	-1000, 17, 27784, -1000, 21847, 697, 25233, 21847, 92, 143,
	-1000, 21847, 21847, 1806, 21847, 1375, 1523, 290, 4323, 1114,
	640, -1000, -1000, 496, -1000, 3801, 1596, 1121, 18270, 17800,
	27437, 1595, 1593, 1119, 27784, 27437, -1000, -1000, 17343, 1118,
	15279, -1000, 27437, 27437, 637, -1000, -1000, -1000, 1336, 12465,
	-1000, -1000, 1183, -1000, 17155, 3436, -153, -1000, -1000, -1000,
	-1000, 635, -1000, -1000, -153, -1000, 487, -1000, -1000, -1000,
	-1000, -1000, -1000, -153, -153, -1000, -1000, -1000, -1000, -1000,
	-153, -1000, -1000, -1000, -1000, 1183, 1445, 1445, -1000, 1445,
	1447, -1000, 1445, 41, 1445, 40, 1183, 1183, 2915, 2711,
	2362, 1822, 1223, 17155, 17155, 17155, 1431, -148, -1000, 902,
	15279, 1364, 1194, -1000, 1685, 1340, 1369, -1000, -1000, 12934,
	1183, 1573, 1259, -1000, 20440, 1252, -1000, 1796, 9640, 15279,
	15279, -1000, -1000, 15279, 1446, -1000, 15279, -1000, -1000, -1000,
	-1000, 27437, 232, -1000, 15279, 1252, 899, -1000, 27437, 27437,
	27437, 1759, 902, -1000, -1000, -1000, -1000, 5392, -1000, 1250,
	-1000, 1445, 1445, 1592, -1000, 665, -1000, -1000, -1000, 27437,
	-1000, 3436, -84, -1000, -1000, -1000, -1000, -1000, -1000, 685,
	-1000, -1000, -1000, -1000, -1000, 17, 1075, 17, 996, -1000,
	995, -1000, -1000, -251, 1444, -1000, 187, 27784, 130, 525,
	-1000, 4013, 4013, 4013, 87, 96, -1000, 878, -1000, -1000,
	-1000, 1074, 1073, 1072, 1261, 153, 871, 132, -1000, 1708,
	-1000, -1000, -1000, 3436, -52, -1000, 143, -1000, -1000, -1000,
	143, -1000, -1000, 136, 1375, 1375, 21847, 1375, -1000, -1000,
	17343, 343, 4013, 4013, 1477, 665, 1591, 355, -1000, -1000,
	-1000, -1000, -1000, -1000, 1117, -1000, 659, -1000, 547, 343,
	17343, 902, 726, 1694, 9168, 1801, 24764, -1000, -1000, -1000,
	3436, -1000, 6808, -1000, 1183, 1792, -1000, -1000, -1000, -1000,
	-1000, 286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17155, 17155, 17155, 17155, -1000, 1223, 1223, 1223, 17155, 1183,
	1070, 902, 17155, 17155, 1588, -1000, 1431, -1000, -1000, 1431,
	185, -1000, 27437, 1759, -1000, 902, 902, 902, 27437, 902,
	1228, -1000, 1431, 18564, -1000, 22316, 1225, 1225, 1225, -1000,
	608, 23254, 1693, 1693, -1000, 1114, -1000, 1220, -1000, -1000,
	685, -1000, 685, 1217, 1212, -1000, 23254, -1000, 1740, -1000,
	130, -1000, 1069, 209, 210, -1000, 208, 205, 204, 200,
	194, -1000, -1000, -1000, -1000, 370, 87, -1000, -50, 989,
	322, 1638, 96, -1000, 984, 968, 964, 951, 193, -1000,
	-1000, -1000, -1000, 180, 152, -1000, 379, 1068, 1625, 1617,
	1711, 1711, 91, 1375, 1338, 1197, -1000, -1000, 1115, -1000,
	-1000, 1442, 1114, 1437, -1000, 1113, -1000, -1000, 27437, -1000,
	343, 1679, 1677, 1431, -1000, 1798, 1791, 1246, 12465, -1000,
	-1000, -1000, 15279, -1000, -1000, 1223, 1223, 1223, 1223, -1000,
	-1000, -1000, 189, -1000, -1000, 1223, 1223, 1836, -1000, 1369,
	1431, -1000, 187, -1000, -1000, 1216, -1000, 27437, -1000, -1000,
	616, -1000, -1000, -1000, 608, -1000, 1111, 740, 1067, -1000,
	-1000, -1000, -1000, 340, -1000, -1000, -1000, -1000, 1211, -1000,
	237, 29813, -1000, -1000, -1000, -1000, -1000, -1000, 1630, 1628,
	226, -1000, 1065, 1063, -1000, 359, 1015, 660, -159, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	378, 1109, -1000, 131, -1000, -1000, 532, 1605, 1611, 1787,
	-1000, 21847, -1000, -1000, 24764, -1000, -1000, 596, 596, 23254,
	1477, 23254, -1000, -1000, -1000, 17155, -1000, 317, -1000, 15279,
	15279, 1801, -1000, 1339, -1000, -1000, -1000, -1000, 1183, 167,
	-221, -1000, -1000, 9640, 1369, 1183, -1000, -1000, -1000, -1000,
	-1000, 945, -1000, 27784, 608, 227, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 15279, 15279, 4920, 29813,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 928, -1000,
	-1000, 1008, 336, 128, -1000, 1697, -1000, 1436, 907, 1617,
	1786, 1612, 1614, -1000, 1041, -206, 1246, 1207, 1434, 1204,
	3436, 1201, -1000, 27437, -1000, 902, 1367, -1000, 902, 1798,
	-1000, -164, -1000, 1559, -199, -231, 1357, -1000, -1000, 1432,
	-1000, 608, 251, -1000, 937, 886, 182, 169, 3623, -1000,
	-1000, -1000, -1000, -303, -1000, 106, -1000, 100, -1000, -1000,
	-1000, 1038, -1000, 1619, -1000, 1033, -1000, 1785, 1763, -1000,
	148, 1801, 608, 23254, 608, -1000, 317, 1571, 15279, -1000,
	1183, 241, 241, -1000, 1544, -1000, 27437, -1000, 1108, 1107,
	965, -1000, 15279, 29813, 1736, 1732, 1719, 1671, 9168, 29650,
	-1000, -1000, -1000, -1000, -1000, 1032, 992, 19971, 1798, -1000,
	1196, -1000, -1000, 314, -1000, -1000, -1000, 206, -1000, -249,
	222, -250, -1000, 1300, -1000, -214, 1192, 327, -1000, -1000,
	838, 29813, -1000, 882, -304, 395, 187, 570, 17155, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 88, 1261, -1000, 608,
	309, 864, -1000, -1000, -1000, -1000, -1000, 27437, -224, 1492,
	-1000, -1000, -1000, -1000, -1000, -1000, 29813, -1000, -306, 29813,
	228, -1000, -1000, -1000, 29642, -1000, -1000, -1000, -1000, 163,
	-1000, -1000, 3436, 21847, -1000, 1431, 206, -1000, -236, 1490,
	1481, 1810, -1000, -307, 4422, -308, 524, 29813, 732, -1000,
	15279, -1000, 570, -1000, 1261, 16217, -1000, -1000, -1000, 1834,
	-1000, 1817, 593, 593, 4342, 827, 29813, -1000, -309, 521,
	29813, -1000, 787, -1000, 1223, 1183, -1000, -1000, -1000, 347,
	946, -1000, -1000, -1000, 4008, -1000, -310, 29813, -1000, -1000,
	-1000, -1000, -1000, 514, 3272, -311, -1000, 511, 29813, -1000,
}

var yyPgo = [...]int{
	0, 2244, 2243, 32, 2242, 178, 2240, 2239, 2238, 23,
	19, 14, 25, 2237, 1968, 1966, 1964, 1950, 1948, 2235,
	5, 2234, 2233, 1946, 2232, 2231, 1943, 1926, 1909, 1906,
	2229, 2227, 2226, 1904, 1900, 18, 2225, 17, 2223, 3,
	143, 160, 2221, 2, 2219, 2217, 13, 2216, 2215, 1896,
	2214, 2213, 2212, 95, 2211, 1890, 1885, 2210, 1877, 1874,
	2208, 2202, 1871, 1868, 1861, 2199, 165, 2197, 2196, 2194,
	283, 98, 145, 2193, 2191, 2189, 108, 78, 1873, 117,
	48, 106, 1032, 2188, 22, 93, 179, 2187, 138, 135,
	2186, 155, 2184, 140, 239, 96, 2183, 2181, 164, 2180,
	2165, 2162, 122, 2157, 2156, 2638, 2155, 2154, 156, 2152,
	64, 51, 40, 2151, 2149, 2148, 2147, 2145, 21, 220,
	2143, 2142, 139, 2140, 2132, 83, 2130, 2129, 173, 2128,
	2119, 2115, 131, 50, 2114, 55, 2113, 46, 68, 2109,
	44, 2107, 142, 2106, 2105, 30, 10, 2103, 36, 2089,
	52, 2088, 136, 109, 1182, 2087, 27, 9, 16, 45,
	62, 66, 130, 103, 2084, 39, 38, 118, 99, 87,
	28, 2083, 148, 2081, 86, 152, 119, 133, 151, 2078,
	2076, 2074, 962, 2073, 137, 81, 2072, 125, 879, 162,
	114, 2071, 90, 2070, 2065, 2064, 89, 115, 2061, 2060,
	41, 35, 1284, 1903, 56, 153, 2059, 47, 2054, 2053,
	2665, 110, 67, 107, 2048, 105, 37, 53, 2047, 2040,
	2038, 2037, 2035, 2033, 1248, 2032, 2031, 2030, 2029, 222,
	77, 2026, 2024, 120, 104, 2023, 2022, 2021, 2020, 121,
	75, 144, 2018, 112, 127, 123, 2016, 69, 2014, 2012,
	49, 42, 2011, 2010, 2009, 94, 84, 2006, 65, 43,
	31, 63, 12, 80, 92, 2004, 29, 2002, 4, 8,
	11, 2001, 1992, 1991, 1990, 1989, 1988, 1986, 76, 1985,
	1984, 61, 1982, 1981, 1979, 34, 1978, 1976, 1975, 141,
	116, 88, 158, 97, 7, 1973, 1972, 6, 1971, 126,
	1960, 60, 1952, 57, 1929, 1916, 58, 1914, 1911, 59,
	1902, 1898, 159, 1555, 224, 1894, 154, 161, 54, 100,
	1892, 1882, 0, 1067, 166, 163, 1865, 1859,
}

var yyR1 = [...]int{
	0, 321, 321, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 87, 86, 86, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 324, 324, 100, 100, 98, 98, 99, 99,
	167, 167, 12, 12, 12, 172, 172, 177, 177, 177,
	180, 180, 180, 180, 158, 159, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 295, 295,
	304, 304, 304, 305, 305, 303, 303, 303, 303, 303,
	307, 307, 308, 308, 306, 306, 306, 306, 310, 310,
	311, 311, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 298, 298, 298, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 312,
	312, 312, 312, 313, 313, 314, 314, 315, 315, 316,
	316, 316, 316, 317, 317, 317, 317, 317, 318, 318,
	318, 318, 318, 318, 318, 319, 319, 320, 320, 2,
	276, 276, 277, 277, 278, 278, 278, 278, 279, 279,
	280, 280, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 24, 199, 199, 297, 297, 297, 297, 291,
	291, 291, 293, 293, 292, 292, 292, 294, 294, 299,
	299, 299, 299, 299, 301, 301, 301, 301, 301, 301,
	302, 302, 302, 300, 300, 47, 47, 48, 48, 48,
	151, 151, 151, 13, 13, 13, 13, 13, 19, 21,
	21, 36, 36, 37, 22, 22, 22, 22, 38, 38,
	39, 25, 25, 25, 25, 25, 25, 45, 45, 45,
	44, 44, 43, 43, 43, 43, 43, 43, 23, 23,
	23, 23, 46, 46, 41, 41, 40, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 26,
	26, 26, 26, 26, 26, 18, 275, 275, 275, 35,
	35, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	51, 252, 253, 253, 253, 253, 253, 253, 253, 253,
	240, 240, 241, 217, 217, 217, 217, 217, 217, 217,
	217, 216, 216, 216, 216, 220, 220, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 219, 219, 219,
	219, 219, 219, 219, 219, 221, 221, 221, 221, 221,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 223, 223, 223, 223, 223,
	223, 223, 223, 239, 239, 224, 224, 233, 233, 234,
	234, 234, 231, 231, 232, 232, 227, 228, 235, 229,
	229, 229, 230, 230, 230, 238, 238, 238, 238, 225,
	242, 242, 262, 262, 261, 261, 260, 260, 260, 251,
	251, 257, 257, 257, 257, 257, 257, 257, 246, 246,
	246, 245, 245, 247, 247, 250, 250, 259, 259, 258,
	258, 243, 243, 243, 263, 263, 263, 263, 263, 244,
	244, 244, 244, 264, 248, 248, 249, 249, 249, 269,
	270, 268, 268, 268, 268, 268, 115, 115, 115, 254,
	254, 254, 255, 255, 255, 256, 256, 256, 273, 273,
	272, 272, 49, 50, 54, 54, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	150, 150, 150, 197, 197, 267, 265, 265, 266, 266,
	15, 15, 52, 52, 296, 296, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 271, 271, 271, 17, 17,
	55, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 83, 186, 186, 185, 185,
	184, 184, 184, 187, 187, 187, 214, 214, 214, 57,
	57, 61, 61, 64, 64, 64, 62, 63, 27, 28,
	28, 28, 28, 29, 198, 198, 59, 59, 60, 60,
	60, 60, 75, 75, 326, 326, 58, 327, 66, 67,
	67, 68, 68, 68, 190, 190, 72, 72, 72, 70,
	70, 70, 71, 71, 77, 77, 81, 81, 81, 81,
	80, 80, 80, 80, 153, 153, 153, 154, 154, 155,
	155, 155, 156, 156, 157, 157, 157, 157, 157, 123,
	123, 206, 206, 206, 205, 205, 205, 205, 85, 85,
	88, 88, 89, 89, 89, 89, 92, 136, 136, 109,
	109, 110, 110, 110, 110, 110, 121, 121, 166, 166,
	165, 165, 168, 168, 90, 90, 90, 90, 95, 95,
	96, 96, 97, 97, 196, 196, 212, 212, 212, 101,
	101, 101, 103, 102, 102, 102, 102, 104, 104, 106,
	107, 107, 105, 105, 108, 111, 111, 111, 111, 112,
	112, 82, 82, 82, 82, 82, 82, 82, 183, 183,
	114, 114, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 131, 131, 131, 131, 131, 131, 116, 116,
	116, 116, 116, 116, 116, 76, 76, 132, 132, 132,
	94, 93, 93, 79, 79, 78, 78, 133, 133, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 126, 126, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 325, 325, 128, 127, 127, 127, 127, 127,
	127, 73, 73, 73, 73, 73, 213, 213, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 143, 143, 74, 74, 141, 141, 142, 144, 144,
	140, 140, 140, 118, 118, 118, 118, 118, 118, 118,
	118, 120, 120, 120, 145, 145, 134, 134, 84, 146,
	146, 147, 148, 148, 149, 149, 152, 160, 160, 160,
	161, 161, 161, 161, 122, 122, 162, 162, 162, 117,
	117, 117, 117, 117, 117, 117, 164, 164, 163, 163,
	163, 163, 169, 169, 135, 135, 138, 138, 137, 139,
	170, 170, 174, 174, 171, 171, 175, 175, 175, 175,
	178, 178, 179, 179, 179, 176, 176, 176, 173, 173,
	173, 209, 209, 209, 181, 181, 191, 191, 188, 188,
	189, 189, 182, 182, 226, 226, 195, 195, 194, 194,
	194, 192, 192, 192, 193, 193, 207, 207, 203, 203,
	208, 208, 204, 204, 210, 210, 211, 211, 274, 274,
	236, 236, 284, 284, 237, 237, 285, 285, 287, 287,
	282, 282, 283, 283, 286, 286, 30, 288, 288, 289,
	289, 290, 290, 290, 290, 31, 32, 32, 32, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 322, 323,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 3, 1, 3, 4, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	2, 2, 2, 1, 3, 0, 3, 1, 3, 0,
	1, 1, 1, 1, 3, 1, 3, 3, 0, 2,
	5, 5, 5, 7, 5, 0, 3, 0, 3, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 4, 0, 3, 1, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 6, 5, 5,
	4, 3, 5, 1, 3, 1, 1, 1, 1, 1,
	0, 2, 2, 1, 1, 1, 1, 1, 4, 5,
	8, 1, 2, 5, 7, 10, 8, 11, 1, 2,
	5, 5, 5, 5, 6, 3, 5, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 2, 4,
	2, 4, 2, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 0, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 2, 3, 1, 0,
	3, 3, 0, 2, 2, 2, 1, 2, 1, 2,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 2, 4, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 8,
	0, 1, 2, 0, 1, 7, 1, 3, 8, 8,
	3, 3, 3, 5, 3, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 4, 3, 5, 5, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 3, 5, 7, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 1, 1, 2,
	1, 1, 1, 2, 4, 4, 1, 1, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 8, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -321, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 131, -50, 134, 133, 170, 135, 163, 64,
	265, -64, 268, 269, -326, -198, 216, 217, 20, 37,
	270, 272, 31, 32, 185, 233, 235, -5, -87, -6,
	8, 363, 132, 266, 165, 164, 26, 415, -322, 68,
	478, -148, 15, -66, -327, -66, -66, -66, -66, -66,
	-252, -196, 106, 68, 23, -193, 144, 87, 354, 140,
	-199, 229, 231, -191, -192, 193, 203, 44, 151, 150,
	141, 229, 141, 142, 144, 354, 140, 178, 177, 229,
	231, 141, -105, -210, 72, -201, 154, 426, 254, 412,
	132, 241, 190, 265, 279, 281, 273, 308, 296, 413,
	427, 155, 211, 139, 294, 297, 341, 153, 244, 204,
	428, 330, 336, 214, 268, 350, 429, 156, 208, 210,
	209, 198, 215, 36, 166, 292, 250, 285, 219, 193,
	430, 420, 283, 28, 188, 431, 338, 313, 253, 432,
	417, 248, 337, 288, 284, 137, 157, 151, 434, 314,
	318, 435, 342, 234, 436, 437, 438, 143, 240, 277,
	278, 439, 194, 344, 245, 312, 33, 152, 414, 48,
	175, 345, 38, 316, 37, 322, 440, 311, 306, 323,
	441, 442, 443, 444, 258, 256, 257, 259, 310, 276,
	305, 206, 53, 138, 320, 319, 321, 207, 340, 301,
	299, 445, 446, 249, 158, 447, 448, 286, 18, 449,
	450, 348, 169, 251, 252, 42, 451, 452, 453, 173,
	454, 455, 456, 339, 315, 317, 192, 457, 289, 148,
	458, 255, 459, 264, 416, 238, 382, 346, 282, 460,
	272, 174, 168, 349, 461, 217, 462, 463, 464, 160,
	465, 232, 231, 269, 381, 270, 332, 212, 466, 467,
	468, 469, 202, 187, 352, 343, 52, 216, 327, 470,
	275, 150, 218, 471, 242, 266, 43, 7, 205, 246,
	333, 213, 203, 303, 176, 472, 473, 290, 291, 309,
	274, 304, 267, 178, 179, 170, 262, 351, 328, 418,
	229, 298, 295, 182, 302, 474, 144, 475, 183, 271,
	347, 243, 293, 329, 141, 124, 297, 341, 131, 331,
	332, 338, -246, 339, 177, 180, -214, 141, -186, 330,
	234, 255, 387, 183, 184, 142, 143, 33, 343, 342,
	334, -210, 145, 271, -75, 135, 171, -105, -46, 72,
	218, -46, 30, 72, 72, 36, 72, 270, 333, 333,
	75, 416, 186, 21, -313, -294, 264, -312, -292, 8,
	159, 6, 9, -297, 74, 72, -201, -202, 383, 384,
	385, 386, 387, 400, 401, 402, 388, 389, 403, 404,
	405, 390, 391, 406, 407, 409, 410, 408, 181, 394,
	393, 392, 395, 396, 51, 398, 397, 399, 21, -313,
	-294, 264, 6, -68, 5, -182, 146, 267, -86, 425,
	-91, -212, -210, -202, 74, -3, -161, 17, 16, -72,
	54, 55, -67, -80, 115, -82, -210, -113, 89, -119,
	29, 72, -201, 24, -118, -202, -114, -140, -139, -94,
	124, 125, 126, 113, 114, 121, 90, 127, -126, -124,
	-125, -127, -129, -130, 74, 73, 82, 75, 76, 77,
	78, 83, 383, 384, 385, 386, 387, 400, 401, 402,
	388, 389, 403, 404, 405, 390, 391, 406, 407, 409,
	410, 408, 394, 393, 392, 395, 396, 398, 397, 399,
	84, 85, -203, -137, -322, 58, 59, 171, 140, 364,
	365, 366, 367, 368, 411, 161, 372, 92, 47, 353,
	362, 361, 360, 358, 359, 355, 357, 356, 374, 375,
	147, 354, 119, 363, -182, -182, 11, -98, -99, -105,
	-108, -210, -171, 267, -178, -175, 342, 343, -176, -179,
	-173, -140, 322, 455, 456, 341, 297, 340, -203, -210,
	-2, -5, 6, -105, -253, -241, -244, -204, 156, -264,
	-203, -200, 153, 72, -201, 247, 136, 162, 88, 419,
	23, 25, 237, 325, 383, 91, 124, 384, 385, 386,
	16, 20, 92, 123, 81, 364, 186, 387, 131, 62,
	380, 355, 357, 353, 354, 331, 29, 10, 26, 164,
	197, 22, 117, 133, 95, 96, 97, 167, 24, 165,
	260, 85, 161, 433, 19, 65, 11, 180, 233, 13,
	378, 379, 14, 230, 147, 146, 108, 195, 142, 60,
	8, 127, 27, 105, 56, 388, 389, 422, 45, 185,
	423, 58, 106, 17, 358, 359, 31, 411, 390, 172,
	424, 391, 119, 200, 63, 50, 236, 89, 83, 34,
	86, 66, 87, 15, 196, 61, 376, 239, 261, 177,
	199, 425, 159, 107, 134, 363, 263, 235, 59, 140,
	6, 373, 30, 163, 394, 393, 392, 395, 201, 57,
	366, 367, 396, 476, 141, 94, 374, 375, 145, 84,
	5, 44, 32, 9, 64, 67, 360, 361, 362, 47,
	51, 398, 397, 399, 93, 12, 377, 415, 181, 142,
	-105, 363, -189, 147, -189, 178, 177, -189, -189, 141,
	98, -52, -105, -296, -291, -297, -188, 147, -203, -188,
	-188, -188, -188, -188, -188, -188, -105, 128, -105, 72,
	30, -187, 106, 12, 354, 140, 141, 178, 144, -248,
	11, 108, 181, 181, 181, 182, 181, -185, 333, 335,
	179, 336, 337, 12, -83, 106, 19, -322, -161, -161,
	72, 270, 145, -60, -3, -11, -9, -10, -3, 98,
	30, 30, 74, 51, 30, -41, -40, -42, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	30, -275, 68, -236, 322, 72, -288, -289, -105, 75,
	75, 66, 66, 69, 145, 69, 66, -314, 68, -314,
	-314, -314, 71, 66, 69, 255, 66, 11, 66, -66,
	-7, -5, -322, 21, 22, 141, 346, 69, -86, -164,
	-322, -323, 70, -162, 19, 31, -122, 75, 78, -149,
	-152, -82, -210, 50, -70, 21, 22, 80, 11, -206,
	88, 87, 105, -205, 23, 72, -201, -202, 74, 128,
	-82, -116, 108, 89, 106, 107, 91, 110, 109, 120,
	113, 114, 115, 116, 117, 118, 119, 111, 112, 123,
	98, 99, 100, 101, 102, 103, 104, -183, -322, -94,
	-322, 129, 130, -119, -119, -119, -119, -119, -119, -119,
	-119, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -322, -322, -322,
	-3, -133, -82, -322, -322, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -143, -82, -322, -325,
	-128, -322, -325, -128, -325, -128, -325, -322, -325, -128,
	-325, -128, -325, -325, -128, -325, -322, -322, -322, -322,
	-322, -322, -107, 27, -105, -85, -88, -89, -90, -109,
	-93, -322, -105, -94, -105, -98, -324, 69, 11, 67,
	-324, 69, 128, 69, -172, -177, 344, 346, 267, -176,
	-176, -209, -203, 74, 29, 98, 30, 128, -148, -66,
	70, 69, -244, 156, 153, -216, -220, -222, -221, -223,
	-218, -219, 294, 297, 301, 299, 295, 300, 124, 298,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 30, 166, 290, 291, 292, 293, 314, 315, 316,
	317, 318, 319, 320, 321, 273, 296, 413, 274, 275,
	276, 277, 278, 279, 281, 282, 283, 284, 285, 286,
	287, 288, 72, -202, -264, 68, -203, 23, 144, 72,
	89, 72, 72, 72, -300, -299, -291, -294, -189, 72,
	69, 145, 69, 145, 71, -98, 24, 66, -100, -105,
	72, 72, 72, 72, -293, -291, -294, -211, -210, -200,
	-187, 74, -82, -189, -189, -105, -105, -105, -105, -187,
	-187, -187, -184, 11, 108, 11, -184, -184, -82, -119,
	-291, 356, 115, 72, 72, 270, 72, -41, -41, 74,
	-41, 69, 98, -41, 70, -133, -274, 477, 69, -290,
	23, 346, 347, 323, -316, 141, 180, 177, -316, -312,
	-293, -292, -291, -315, -203, -297, -316, 233, 69, -316,
	-293, -291, -72, -3, -105, 347, 348, -91, 23, -163,
	-204, 9, 108, 69, 18, 69, -160, 25, 26, 128,
	-120, 51, 75, 78, -190, 49, -105, -82, -82, -131,
	83, 89, 84, 85, -205, 115, -211, -204, -200, -119,
	-132, -137, -94, 79, 108, 106, 107, 91, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -213, 72, 74, 72, -118, -118, -203,
	-70, -78, -81, 115, -82, -210, -78, -78, -70, -323,
	-323, -81, -78, -78, -78, -81, -78, -70, -70, -78,
	-323, -323, -323, -323, -78, -78, -78, -78, -70, -78,
	-78, -78, -70, -323, 69, -323, -3, -78, -78, -78,
	-323, -82, -82, -140, 74, -78, -140, 74, -78, -119,
	369, 370, 371, -78, -78, -70, -141, -142, 93, -140,
	-323, -119, -203, -203, -78, -79, -78, -78, -78, -167,
	173, -105, 30, 69, -101, -103, -102, -104, 56, 60,
	62, 57, 58, 59, 63, -196, -85, -92, 47, -322,
	-110, 173, -111, 23, -212, 64, 146, 65, -167, 67,
	-85, -105, -85, -108, -210, 115, -175, -178, 69, 345,
	347, 348, -172, -230, 123, 66, 86, -82, -204, -211,
	-161, -72, -254, -255, -256, -204, 74, 75, -241, -242,
	-243, -244, -257, 156, -263, 148, 150, 44, -245, 157,
	142, 45, -217, -231, 328, -224, 68, -224, -224, 302,
	294, 297, 295, -224, -224, -224, -224, -224, -229, 297,
	-229, -229, -229, -229, 295, 68, 68, -224, -224, -224,
	-233, 68, -233, 289, -234, 68, -234, -234, -234, -234,
	-264, -264, -82, -207, 67, -158, -105, 24, -47, 190,
	162, 68, -295, 69, 29, -301, 230, -105, -105, -105,
	-291, -291, -297, -271, 160, 155, -105, 69, 69, 72,
	72, -249, 11, 108, -187, -210, -210, -105, -121, 23,
	-187, -76, 167, 67, -325, -323, 72, -40, -118, 70,
	-106, 27, 74, -289, -212, 322, 347, -317, 115, -203,
	-317, -320, 415, 145, 70, 69, -317, 251, 233, -317,
	11, -70, -323, -54, -53, 136, 133, 134, 138, 139,
	-267, 325, 132, 174, -93, -322, -323, 69, 128, 52,
	-122, -122, -152, -181, 19, 11, 47, 47, -71, 57,
	83, 84, 85, 128, -322, -132, -119, -119, -119, -76,
	88, -323, -78, 69, -323, 128, -323, -323, -78, -153,
	376, -153, -323, -323, -323, -323, -323, -323, -78, -78,
	-323, -153, -153, -153, -153, -323, -323, -323, -323, -78,
	-323, -323, -323, -79, -82, -323, -323, -323, -323, 69,
	67, 23, 11, 11, -323, 11, 11, -323, -323, 11,
	-119, -119, -119, -323, -323, -78, -144, -142, 95, -82,
	-323, -323, 69, 69, -323, -323, -323, -323, -117, 30,
	47, -322, -3, -322, -170, -174, -140, -200, -88, -89,
	-89, -88, -89, 56, 56, 56, 61, 56, 61, 56,
	-102, -212, -323, -323, -136, 189, -322, 34, -212, -111,
	142, 142, 142, -112, 12, -85, -112, -112, 128, -177,
	-180, 349, 346, 352, 72, 74, 128, -162, 69, -256,
	98, -244, 68, 72, -250, -202, 45, -245, 142, 45,
	-245, -250, 72, -250, 45, 83, 89, -227, -228, -235,
	-238, -225, 29, 66, 325, 148, 45, 44, 81, -232,
	329, 75, -229, -229, -224, -224, -224, 302, -224, -229,
	-230, 30, -230, -230, -230, -230, -229, -239, 74, -239,
	75, -233, 75, 70, 66, -203, -3, 23, -48, 8,
	9, 10, -276, -277, -278, 72, 108, 195, 196, -304,
	263, -299, 231, 240, 88, 16, 415, 145, 145, -105,
	-291, -112, 72, 72, -184, -187, 34, -119, -294, 183,
	184, -167, 141, -290, 145, 128, 128, 145, 254, -293,
	-203, 11, 11, 251, 11, -293, -190, 69, -197, -245,
	-273, -243, -244, -272, 149, 156, 157, -197, 156, 153,
	-245, 157, 148, 149, -194, -245, 145, 23, -197, -197,
	-251, 98, -197, 173, -204, -204, 53, -105, -77, -159,
	115, -204, -79, -76, 88, -119, -323, -81, -154, -153,
	115, -211, -154, -154, -323, -203, -322, -153, -154, -154,
	-153, -153, -153, -323, -323, -153, -154, -154, -154, -154,
	-323, -154, -154, -154, -323, -215, 124, 294, 166, 292,
	285, 312, 299, 327, 290, 328, -213, -215, -119, -119,
	-119, -119, -119, 11, 11, 11, 412, -148, 97, -82,
	94, -119, -119, -169, 66, -170, -135, -138, -137, -322,
	-3, -323, -163, 6, 415, -168, -203, -112, 69, 98,
	98, -96, -95, 66, 67, -97, 66, -95, 56, 56,
	-166, 68, 69, -137, -322, -168, -119, -111, -322, -322,
	-322, -148, -82, -112, 346, 350, 351, -255, -256, -259,
	-258, -203, -202, 148, -263, 44, -263, -250, -250, 68,
	83, -119, 9, 45, 45, 74, 70, -230, -230, -229,
	-224, -230, 72, 124, -230, 70, 69, 70, 69, 70,
	69, -115, 431, 89, -105, -158, -158, 66, 70, 69,
	-216, 72, 72, 72, -307, 415, 236, -305, -303, 242,
	243, 244, 245, 246, -294, 241, -301, 238, 74, 72,
	-105, -291, -187, -119, -229, -105, -293, 115, 115, -203,
	-293, 251, -319, 415, -293, -293, 11, -293, -71, -53,
	68, -240, 72, -202, -250, -192, 148, 72, 72, 72,
	-202, 72, -202, -203, 45, 45, 72, -105, -203, -240,
	72, -82, -203, -203, 128, -112, 11, 69, -80, -323,
	-119, -154, 128, -154, -148, 173, -154, -154, -154, -323,
	-224, -224, -224, -234, -224, 278, -224, 278, -323, -323,
	19, 19, 19, 19, -323, -119, -119, -119, -322, -74,
	373, -82, 69, 69, 28, -169, 69, -323, -323, 47,
	-323, -323, 69, -148, -174, -82, -82, -82, 68, -82,
	-165, -203, 189, -323, -111, -196, -165, -165, -165, -161,
	70, 69, -224, -224, 45, -247, -245, -165, -125, -230,
	-229, 74, -229, 75, 75, 431, 68, -3, -105, -279,
	-280, -281, 81, 414, 89, 197, 198, 158, 199, 200,
	201, -278, -216, -216, -216, -310, -311, -309, 239, 260,
	261, 247, -308, -306, 256, 257, 258, 259, 88, 74,
	74, 74, -302, 230, 88, 239, 16, 23, -282, -185,
	-319, -319, 233, -293, -77, -240, -150, 161, 162, -216,
	-216, -207, -247, 45, 72, -195, 145, 23, 145, -150,
	-240, 30, 133, 27, -204, -145, 13, -85, -159, -159,
	115, -323, 16, -229, 72, -119, -119, -119, -119, -323,
	-323, -323, -119, -323, 74, -119, -119, 45, -138, -135,
	47, -3, -322, -203, -161, -165, 70, 69, -137, -110,
	-212, -323, -323, -323, -261, -260, 67, 152, 81, -258,
	-160, -160, -250, 70, -230, -230, 70, 70, -259, -158,
	19, -158, -281, 74, 201, 197, 201, 201, 201, 201,
	202, -298, 81, 237, -309, 248, 437, 232, 263, 75,
	75, 262, 31, 32, -306, 75, 75, 75, 75, -303,
	16, 415, -301, 238, 74, 74, -283, 38, -285, 39,
	-318, 23, -318, 251, 11, 70, 72, -217, -217, 68,
	-250, 68, 72, -203, -150, 29, 29, -322, -146, 14,
	16, -112, -80, -133, -323, -323, -323, -323, -73, 108,
	415, -323, -323, 9, -135, -3, 70, -203, -111, -260,
	72, -251, 74, 159, 70, 188, -20, -3, -9, -10,
	-11, -12, -14, -49, -15, -16, -21, -22, -17, -55,
	-56, -64, -62, -63, -59, -58, -25, -23, -26, -18,
	-27, -28, -29, -33, -34, -24, 92, 147, 219, 265,
	36, 36, 193, 194, 74, 74, 29, 249, 127, 29,
	75, 127, 380, 238, 74, 72, 239, -226, 146, -286,
	43, -284, -237, 42, 16, -291, -85, -259, -207, -259,
	-119, -265, -266, 173, -147, -82, -134, -84, -82, -145,
	-159, -148, -323, 413, 63, 416, -170, -323, 75, -105,
	-262, -261, 189, -158, -82, -82, 72, -45, -208, 222,
	223, 224, -204, -35, -20, 75, 29, 75, 29, 252,
	239, 23, -166, 75, -285, 16, -287, 40, 41, 74,
	415, -112, 70, 68, 70, -323, 69, -203, 69, -146,
	-155, 381, 382, 53, 414, 417, 68, -151, 191, 192,
	-36, -37, 93, 94, 220, 221, 225, -216, 69, 478,
	250, 250, 74, 38, 74, 16, 16, 231, -145, -262,
	-259, -262, -266, 47, -84, -323, -156, 91, -157, 262,
	380, -123, 75, 127, -156, 53, -165, -158, 72, 72,
	97, 95, -37, -82, -35, 19, 19, 19, 29, -204,
	97, -20, 74, 74, 29, 236, 21, -294, -146, 70,
	175, -157, 457, 433, 189, 457, 433, -118, 415, 70,
	-13, -19, -12, -9, -10, -11, 265, 92, -35, 94,
	478, -46, 75, -3, -44, -43, 75, -46, 227, 89,
	228, 72, -119, 253, -262, 176, 88, -203, 416, -269,
	-270, 66, -158, -35, 478, -35, 97, 95, -38, -39,
	96, -20, 69, 226, -294, -322, -157, 417, -270, 66,
	-269, 66, 10, 9, 478, 97, 478, 147, -35, 97,
	95, -39, -82, -43, -119, 172, -268, 160, 155, 158,
	30, -268, 97, 92, 478, 147, -35, 94, -323, -323,
	154, 29, 83, 97, 478, -35, 147, 97, 478, 147,
}

var yyDef = [...]int{
	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 657, 657, 657, 657, 657,
	657, 744, -2, 522, 0, 0, 0, 0, -2, 630,
	631, 632, 636, 637, 652, 654, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1052, 0, 655, 644, 645, 0, 0, 1521,
	2, 990, 0, 666, 659, 0, 1052, 1052, 0, 0,
	86, 0, 0, 0, 745, 0, 0, 0, 1050, 1050,
	0, 1050, 1050, 0, 1065, 0, 1047, 1061, 1062, 1063,
	0, 0, 1048, 0, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 0, 579, 762, 1074, 1075, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 0, 0, 0, 623, 0, 589,
	590, 591, 0, 593, 0, 0, 0, 0, 0, 603,
	606, 610, 0, 990, 990, 468, 469, 470, 627, 628,
	617, 629, 0, 0, 0, 0, 0, 656, 278, 280,
	0, 300, 0, 303, 306, 1080, 638, 0, 0, 1105,
	1106, 0, 0, 0, 0, 0, 1410, 153, 217, 155,
	155, 155, 155, 216, 205, 206, 207, 208, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 0, 0,
	0, 1410, 657, 0, 661, 0, 1053, 633, 44, 0,
	46, 1006, 746, 747, 748, 0, 996, 0, 0, 669,
	667, 668, 658, 0, 680, 701, 0, 771, 0, 776,
	778, -2, -2, 0, 819, 820, 821, 822, 823, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 848, 849,
	850, 851, 852, 853, 963, 964, 965, 966, 967, 968,
	969, 970, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520,
	780, 781, 960, 1019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 951, 0, 922,
	922, 922, 922, 922, 922, 922, 922, 922, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	68, 762, 72, 1469, 0, 1024, -2, -2, 1026, 0,
	0, 0, -2, -2, -2, -2, 1282, -2, 960, 0,
	87, 982, 657, 88, 0, 342, 343, 0, 1294, 492,
	1072, 1073, 1284, 1068, 1069, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 560, 0, 561, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 580, 581,
	623, 583, 0, 0, 1050, 1050, 0, 0, 0, 0,
	494, 495, 623, 623, 596, 623, 620, 0, 620, 600,
	620, 618, 619, 0, 605, 0, 0, 0, 613, 614,
	639, 0, 0, 646, 648, 649, 650, 651, 647, 0,
	0, 0, 282, 0, 0, 302, 284, 0, 287, 288,
	289, 290, 291, 292, 293, 294, 295, 296, 297, 298,
	0, 305, 0, 1078, 1081, 643, 1096, 1097, 0, 1107,
	1108, 159, 159, 0, 0, 0, 0, 149, 0, 150,
	151, 152, 215, 159, 0, 0, 159, 0, 0, 666,
	41, 51, 0, 662, 663, 0, 0, 0, 45, 0,
	0, 50, 1522, 36, 0, 0, 991, 994, 995, 983,
	984, 987, 0, 0, 664, 670, 671, 660, 0, 681,
	0, 0, 0, 702, 0, 704, 705, 706, 707, 0,
	774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	798, 799, 800, 801, 802, 803, 804, 777, 0, 791,
	0, 0, 0, 840, 841, 842, 843, 844, 845, 846,
	0, 669, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 0, 0, 669,
	0, 0, 817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 952, 0, 905,
	914, 0, 906, 915, 907, 916, 908, 0, 909, 917,
	910, 918, 911, 912, 919, 913, 0, 0, 0, 813,
	0, 0, 70, 0, 761, 0, 708, 710, 711, 712,
	-2, 0, 765, 811, -2, 0, 0, 0, 62, 63,
	0, 0, 0, 0, 73, 75, 0, 0, 1469, 1027,
	1028, 442, 1041, 1042, 1043, 0, 1039, 0, 990, 666,
	509, 0, 344, 0, 0, 353, 432, 362, 363, 364,
	425, 366, 425, 425, 0, 425, 425, 425, 425, 425,
	439, 439, 439, 439, 439, 408, 409, 410, 411, 412,
	0, 0, 385, 425, 425, 425, 389, 415, 416, 417,
	418, 419, 420, 421, 422, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 427, 427, 429, 429, 429,
	429, 429, 0, 0, 491, 0, 1066, 84, 0, 92,
	0, 93, 0, 0, 98, 233, 219, 97, 0, 204,
	0, 0, 0, 0, 210, 575, 1049, 0, 568, 64,
	569, 570, 571, 572, 573, 212, 574, 763, 1076, 1077,
	582, 624, 625, 0, 0, 586, 587, 588, 496, 594,
	595, 602, 623, 0, 0, 0, 726, 623, 604, 805,
	607, 922, 0, 641, 640, 0, 653, 279, 281, 283,
	301, 0, 0, 304, 307, 0, 0, 0, 0, 1099,
	0, 1101, 1103, 0, 0, 160, 161, 162, 0, 154,
	177, 218, 0, 0, 157, 214, 0, 0, 0, 0,
	147, 0, 669, 0, 0, 634, 635, 47, 0, 0,
	1008, 997, 0, 0, 0, 0, 986, 988, 989, 0,
	0, 971, 0, 0, 672, 665, 38, 772, 773, 775,
	792, 0, 794, 796, 703, 682, 0, 961, -2, 782,
	783, 807, 808, 809, 0, 0, 0, 0, 805, 787,
	0, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 936, 937, 0, 837, 838, 847,
	0, 0, 815, 676, 677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 810, 0, 1018, 0, 0, 0, 0,
	887, 0, 0, 822, 963, 0, 822, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 958, 955, 0, 0,
	923, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 749, 0,
	0, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 1396, 721, 0, 765, 0, 0, 0, 769, 0,
	769, 67, 769, 69, 0, 764, 1025, 0, 0, 0,
	78, 79, 74, 1029, 0, 1035, 1036, 1037, 961, 0,
	996, 669, 341, 510, 512, 515, 516, 517, 345, 347,
	348, 349, 0, -2, 483, 1406, 1448, -2, 475, 1323,
	-2, -2, 352, 434, 433, 365, 0, 439, 439, 425,
	425, 425, 425, 394, 439, 397, 400, 401, 442, 0,
	442, 442, 442, 442, 439, 0, 0, 386, 387, 388,
	377, 0, 378, 427, 380, 0, 381, 382, 383, 384,
	489, 490, 0, 0, 0, 0, 0, 1051, 0, 235,
	236, 180, 100, 0, 0, 220, 0, 340, 0, 562,
	0, 564, 209, 566, 576, 577, 567, 0, 0, 584,
	585, 769, 0, 0, 597, 621, 622, 620, 623, 0,
	601, 615, 0, 0, 608, 0, 642, 285, 286, 308,
	70, 0, 1079, 1098, 0, 1102, 1104, 0, 163, 165,
	0, 141, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 664, 52, 523, 524, -2, 553, 1058, 553, 553,
	541, 459, 553, 0, 48, 0, 1007, 0, 0, 0,
	992, 993, 985, 0, 1044, 1045, 972, 973, 85, 673,
	793, 795, 797, 0, 813, 784, 805, 788, 0, 785,
	0, 779, 0, 0, 687, 0, 687, 687, 0, 873,
	0, 874, 0, 687, 687, 0, 0, 0, 0, 0,
	0, 880, 881, 882, 883, 687, 687, 687, 687, 0,
	687, 687, 687, 0, 818, -2, 884, 885, 886, 0,
	0, 0, 0, 0, 929, 0, 0, 930, 895, 0,
	0, 0, 0, 0, 901, 982, 0, 956, 0, 0,
	904, 924, 0, 0, 925, 926, 927, 928, 1012, 0,
	0, 0, 1001, 0, 769, 1020, 0, 0, 709, 740,
	742, 0, 737, 750, 751, 753, 0, 755, 0, 757,
	758, 728, 715, 812, 716, 0, 0, 0, 765, 725,
	0, 0, 0, 982, 0, 769, 60, 61, 0, 76,
	77, 0, 0, 83, 443, 444, 0, 179, 0, 513,
	0, 346, 0, 476, 0, 0, 461, 475, 471, 472,
	475, 466, 476, 467, 0, 354, 0, 356, 357, 358,
	359, 360, 0, 0, 438, 0, 446, 448, 0, 361,
	435, 0, 442, 442, 439, 392, 393, 425, 398, 442,
	402, 0, 403, 404, 405, 406, 442, 0, 423, 0,
	0, 379, 0, 506, 0, 1067, 84, 84, 0, 237,
	238, 239, 0, 181, 182, 0, 0, 0, 0, 110,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 65,
	213, 592, 497, 498, 623, 599, 0, 806, 609, 611,
	612, 439, 0, 1100, 0, 0, 0, 0, 0, 175,
	158, 0, 0, 0, 0, 148, 672, 0, 0, 475,
	0, 542, 543, 0, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1059, 1060, 0, 0,
	0, 460, 0, 0, 1010, 1009, 998, 37, 769, 0,
	683, 962, 0, 786, 0, 789, 687, 816, 858, 688,
	678, 0, 859, 860, 687, 684, 982, 875, 862, 863,
	876, 877, 878, 687, 687, 879, 867, 866, 865, 868,
	687, 871, 870, 872, 854, 0, 425, 425, 941, 425,
	429, 944, 425, 946, 425, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 953, 903, 959,
	0, 0, 0, 53, 0, 1012, 999, 1014, 1016, 0,
	0, 0, 0, -2, 1261, 0, 732, 982, 0, 0,
	0, 734, 741, 0, 0, 735, 0, 736, 754, 756,
	713, 0, 0, 717, 0, 0, -2, 724, 0, 0,
	0, 990, 770, 59, 80, 81, 82, 511, 514, 0,
	477, 425, 425, 0, 481, 473, 482, 463, 465, 0,
	355, 436, 0, 445, 447, 449, 426, 390, 391, 442,
	399, 395, 440, 441, 407, 439, 0, 439, 0, 430,
	0, 493, 507, 0, 0, 90, 0, 0, 188, 0,
	184, 0, 0, 0, 118, 0, 101, 102, 103, 105,
	106, 0, 0, 0, 99, 0, 222, 0, 225, 226,
	563, 565, 598, 727, 1090, 759, 175, 164, 166, 167,
	175, 178, 142, 0, 143, 145, 0, 144, 85, 525,
	0, 550, 0, 0, 1066, 473, 0, -2, 528, 533,
	534, 535, 536, 537, 0, 548, 0, 530, 0, 550,
	0, 545, 0, 0, 0, 974, 0, 85, 85, 855,
	790, 857, 0, 861, 0, 0, 856, 864, 869, 888,
	938, 439, 942, 943, 945, 947, 948, 950, 890, 889,
	0, 0, 0, 0, 896, 0, 0, 0, 0, 0,
	0, 957, 0, 0, 0, 54, 0, 1017, -2, 0,
	0, 71, 0, 990, 1021, 1022, 1023, 738, 0, 743,
	0, 730, 0, 765, 722, 0, 0, 0, 0, 58,
	451, 0, 987, 987, 462, 475, 474, 0, 437, 396,
	442, 424, 442, 0, 0, 508, 0, 84, 0, 84,
	189, 190, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 183, 185, 186, 187, 136, 119, 120, 0, 0,
	0, 0, 111, 112, 0, 0, 0, 0, 0, 107,
	108, 109, 221, 0, 0, 224, 0, 0, 1092, 1086,
	168, 168, 0, 146, 0, 0, 527, 551, 0, 353,
	353, 0, 475, 0, 544, 0, 1056, 1057, 0, 539,
	550, 0, 0, 0, 1011, 979, 0, 769, 0, 674,
	679, 685, 0, 939, 940, 0, 0, 0, 0, 897,
	898, 899, 931, 902, 954, 0, 0, 0, 1015, 1000,
	0, 1004, 0, 733, 57, 0, 729, 0, 718, 720,
	765, 766, 767, 768, 450, 454, 0, 459, 0, 478,
	479, 480, 464, 0, 413, 414, 428, 431, 0, 91,
	0, 0, 191, 192, 193, 194, 196, 197, 0, 0,
	0, 96, 0, 0, 121, 0, 0, 0, 0, 131,
	132, 133, 134, 135, 113, 114, 115, 116, 117, 104,
	0, 0, 223, 0, 228, 229, 1054, 1094, -2, 0,
	139, 0, 140, 176, 0, 526, 552, 350, 351, 0,
	1066, 0, 529, 538, 540, 0, 547, 0, 42, 0,
	0, 974, 85, 982, 891, 893, 892, 894, 0, 0,
	0, 920, 921, 0, 1003, 0, 739, 731, 723, 455,
	456, 0, 458, 0, 452, 0, 84, 311, 312, 313,
	314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 0, 0, 0, 0,
	198, 199, 200, 201, 137, 138, 122, 123, 0, 125,
	126, 0, 0, 0, 231, 0, 227, 728, 0, 1086,
	0, 1088, 0, 1085, 0, 169, 769, 0, 0, 0,
	546, 0, 556, 0, 980, 981, 975, 976, 978, 979,
	675, 689, 900, 0, 0, 0, 1013, -2, 457, 0,
	89, 453, 240, 95, 0, 0, 1068, 0, 0, 267,
	268, 269, 1070, 0, 309, 0, 127, 0, 129, 130,
	230, 0, 35, 0, 1093, 0, 1091, 0, 0, 1087,
	0, 974, 452, 0, 452, 555, 0, 0, 0, 43,
	0, 0, 0, 932, 0, 935, 0, 84, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 265, 0, 0,
	124, 128, 232, 1055, 1095, 0, 0, 0, 979, 531,
	0, 549, 557, 0, 977, 686, 690, 0, 693, 0,
	0, 0, 699, 0, 691, 933, 0, 0, 241, 242,
	0, 0, 252, 0, 0, 0, 0, 0, 0, 1071,
	202, 310, 1089, 1083, 170, 171, 172, 174, 40, 452,
	0, 0, 694, 695, 696, 697, 698, 0, 0, 484,
	84, 243, 244, 245, 246, 247, 0, 249, 0, 0,
	0, 261, 262, 263, 0, 270, 272, 273, 274, 0,
	276, 277, 266, 0, 532, 0, 0, 700, 0, 485,
	486, 0, 94, 0, 0, 0, 0, 0, 0, 258,
	0, 264, 0, 275, 173, 0, 692, 934, 487, 0,
	488, 0, 0, 0, 0, 0, 253, 254, 0, 0,
	0, 259, 0, 271, 0, 0, 499, 501, 502, 0,
	0, 500, 248, 250, 0, 256, 0, 0, 558, 559,
	503, 504, 505, 0, 0, 0, 255, 0, 260, 257,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 478,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:467
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:471
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:512
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:518
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:524
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:531
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:561
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:577
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:581
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:591
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:597
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:617
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:623
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:635
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:657
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:663
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:667
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:675
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:689
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:699
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:714
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:718
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:728
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:735
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:748
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:758
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:762
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:780
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:785
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:790
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:796
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:819
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:827
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:835
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:843
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:847
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:851
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:870
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:879
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:892
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:896
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:902
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:912
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:933
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:937
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:943
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:957
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:961
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:965
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:970
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:984
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:998
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1010
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1030
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1047
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1062
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1067
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1071
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1075
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1081
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1086
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1090
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1094
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1098
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1102
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1135
		{
			yyVAL.strs = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1154
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1158
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1162
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1166
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1176
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.grantAssumption = nil
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1201
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1205
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1209
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1213
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1217
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.boolean = false
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.boolean = true
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1231
		{
			yyVAL.boolean = false
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.boolean = true
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1242
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1250
		{
			yyVAL.procedureParams = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1260
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.characteristics = nil
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1301
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = ""
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1418
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1454
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1458
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1462
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1468
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1480
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1484
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1488
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1494
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1502
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = BeforeStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = AfterStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = InsertStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = UpdateStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = DeleteStr
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1541
		{
			yyVAL.triggerOrder = nil
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1545
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1571
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 250:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1575
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1591
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1597
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 255:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1602
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 256:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1607
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 257:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1613
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1625
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1631
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1637
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1641
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1649
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1657
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1700
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1718
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1726
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.statement = &Resignal{}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1816
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1839
		{
			yyVAL.exprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.exprs = nil
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1913
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2338
		{
			yyVAL.sqlVal = nil
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2347
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2351
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2359
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2369
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2377
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2386
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.colKeyOpt = colKey
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2464
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2473
		{
			yyVAL.indexOptions = nil
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2497
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2522
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2530
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.str = yyDollar[1].str
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = ""
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2605
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 484:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2629
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 485:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2633
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 486:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2637
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 487:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2641
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 488:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2645
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2655
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2659
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2669
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2731
		{
			yyVAL.boolean = true
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.boolean = true
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.boolean = false
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.str = yyDollar[1].str
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2778
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2796
		{
			yyVAL.str = string("")
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2809
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2832
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2839
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2850
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 531:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2859
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 532:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2863
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2867
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2891
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2895
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2902
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2924
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2929
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2933
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2937
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 549:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2945
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.columnOrder = nil
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2965
		{
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
		}
	case 555:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2971
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2977
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2987
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2991
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3001
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3011
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3023
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3029
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3037
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3041
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3049
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3057
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3065
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3073
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3081
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3089
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3098
		{

		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3116
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3132
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3140
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3144
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3148
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3152
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3156
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3172
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3180
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3196
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3201
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3206
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3210
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3214
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3218
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3222
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3236
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3240
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3245
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3249
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3258
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3262
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3266
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3270
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3276
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3282
		{
			yyVAL.boolean = false
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.boolean = true
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3302
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3316
		{
			yyVAL.showFilter = nil
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = SessionStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = GlobalStr
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.statement = &Begin{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3364
		{
			yyVAL.statement = &Begin{}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3368
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3372
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.statement = &Commit{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.statement = &Rollback{}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3400
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3404
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3408
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3414
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3442
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3457
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3462
		{
			setAllowComments(yylex, true)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3466
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3472
		{
			yyVAL.bytes2 = nil
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3476
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = UnionStr
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = UnionAllStr
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = UnionDistinctStr
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3495
		{
			yyVAL.byt = 0
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3499
		{
			yyVAL.byt = 1
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = SQLCacheStr
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.str = DistinctStr
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = StraightJoinHint
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3548
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3559
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3563
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3571
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3589
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3599
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 686:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3603
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3609
		{
			yyVAL.over = nil
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
			yyVAL.over = yyDollar[1].over
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3618
		{
			yyVAL.frame = nil
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3626
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3633
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3709
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3717
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3731
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3759
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3775
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3791
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3802
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3821
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3825
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = nil
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3849
		{
			yyVAL.columns = nil
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3873
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3886
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3890
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3894
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3904
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3906
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3916
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3918
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.empty = struct{}{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = JoinStr
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = JoinStr
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = JoinStr
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = StraightJoinStr
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = LeftJoinStr
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = LeftJoinStr
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = RightJoinStr
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = RightJoinStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = NaturalJoinStr
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4010
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			yyVAL.indexHints = nil
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4025
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4029
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4033
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4038
		{
			yyVAL.expr = nil
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4042
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4052
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4098
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4106
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4110
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4114
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4118
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4122
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4126
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 790:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4130
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4134
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = IsNullStr
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = IsNotNullStr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = IsTrueStr
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = IsNotTrueStr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.str = IsFalseStr
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = IsNotFalseStr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = EqualStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = LessThanStr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = GreaterThanStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = LessEqualStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = GreaterEqualStr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = NotEqualStr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4195
		{
			yyVAL.expr = nil
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4229
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.selectExprs = nil
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4286
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4302
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4310
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4314
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4350
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4388
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4408
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 855:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4412
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 856:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4422
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4426
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4430
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4442
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4446
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4450
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4454
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4458
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4462
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4466
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4470
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4474
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4478
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4482
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4486
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4495
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4499
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4511
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4515
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4523
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4527
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4531
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4535
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4562
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4566
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4570
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 891:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4574
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 892:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4578
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4582
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 894:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4586
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4594
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4598
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 898:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4602
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4606
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 900:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4610
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4622
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4626
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4649
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4654
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4757
		{
			yyVAL.str = ""
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.str = BooleanModeStr
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4765
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4769
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = QueryExpansionStr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4789
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4809
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4819
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4831
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4839
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4844
		{
			yyVAL.expr = nil
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4853
		{
			yyVAL.str = string("")
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4857
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4867
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4873
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = nil
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4892
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4896
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4926
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.expr = &NullVal{}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4949
		{
			yyVAL.exprs = nil
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4953
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = nil
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4989
		{
			yyVAL.orderBy = nil
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5014
		{
			yyVAL.str = AscScr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.str = AscScr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.str = DescScr
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5027
		{
			yyVAL.limit = nil
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5031
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5035
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5039
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = ""
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = ForUpdateStr
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = ShareModeStr
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5079
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5092
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5096
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5100
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			yyVAL.columns = nil
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5110
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5116
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5120
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5128
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			yyVAL.assignExprs = nil
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5137
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5179
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5192
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5198
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5202
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5232
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5245
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5275
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5279
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5283
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5290
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.expr = &Default{}
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5314
		{
			yyVAL.byt = 0
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			yyVAL.byt = 1
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5319
		{
			yyVAL.byt = 0
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5321
		{
			yyVAL.byt = 1
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5324
		{
			yyVAL.byt = 0
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5326
		{
			yyVAL.byt = 1
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = IgnoreStr
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5334
		{
			yyVAL.sqlVal = nil
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5336
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.empty = struct{}{}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.empty = struct{}{}
		}
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5345
		{
			yyVAL.empty = struct{}{}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.empty = struct{}{}
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5349
		{
			yyVAL.empty = struct{}{}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = UniqueStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = FulltextStr
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5357
		{
			yyVAL.str = SpatialStr
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5360
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5365
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5367
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5385
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5398
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5402
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = string("")
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5419
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5424
		{
			yyVAL.EnclosedBy = nil
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5428
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5433
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5442
		{
			yyVAL.sqlVal = nil
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5446
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5451
		{
			yyVAL.sqlVal = nil
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5455
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5460
		{
			yyVAL.Fields = nil
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5464
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5469
		{
			yyVAL.Lines = nil
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5473
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5478
		{
			yyVAL.sqlVal = nil
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5482
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5504
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5508
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.lockType = LockRead
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5518
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5522
		{
			yyVAL.lockType = LockWrite
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5532
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5538
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5542
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5546
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5988
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
