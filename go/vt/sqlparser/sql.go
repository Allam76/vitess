// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	boolean               bool
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	140, 879,
	-2, 130,
	-1, 44,
	181, 480,
	182, 480,
	-2, 468,
	-1, 51,
	1, 1282,
	424, 1282,
	-2, 500,
	-1, 388,
	126, 887,
	-2, 883,
	-1, 389,
	126, 888,
	-2, 884,
	-1, 490,
	96, 1202,
	126, 1202,
	-2, 71,
	-1, 491,
	96, 1104,
	126, 1104,
	-2, 72,
	-1, 496,
	96, 1060,
	126, 1060,
	-2, 846,
	-1, 498,
	96, 1142,
	126, 1142,
	-2, 848,
	-1, 705,
	5, 35,
	-2, 494,
	-1, 709,
	5, 35,
	-2, 493,
	-1, 931,
	1, 552,
	5, 552,
	12, 552,
	13, 552,
	14, 552,
	15, 552,
	17, 552,
	19, 552,
	30, 552,
	31, 552,
	55, 552,
	56, 552,
	57, 552,
	58, 552,
	59, 552,
	61, 552,
	62, 552,
	65, 552,
	66, 552,
	68, 552,
	69, 552,
	424, 552,
	-2, 579,
	-1, 934,
	66, 52,
	68, 52,
	-2, 56,
	-1, 1131,
	126, 890,
	-2, 886,
	-1, 1291,
	67, 332,
	-2, 1027,
	-1, 1294,
	67, 328,
	70, 328,
	-2, 962,
	-1, 1295,
	67, 329,
	70, 329,
	-2, 972,
	-1, 1375,
	67, 409,
	70, 409,
	-2, 371,
	-1, 1424,
	5, 36,
	-2, 645,
	-1, 1484,
	5, 35,
	-2, 823,
	-1, 1581,
	5, 35,
	-2, 73,
	-1, 1727,
	1, 600,
	5, 600,
	12, 600,
	13, 600,
	14, 600,
	15, 600,
	17, 600,
	19, 600,
	30, 600,
	31, 600,
	55, 600,
	56, 600,
	57, 600,
	58, 600,
	59, 600,
	61, 600,
	62, 600,
	65, 600,
	66, 600,
	68, 600,
	69, 600,
	424, 600,
	-2, 579,
	-1, 1850,
	5, 36,
	-2, 824,
	-1, 1881,
	5, 35,
	-2, 73,
	-1, 1940,
	5, 35,
	-2, 826,
	-1, 1980,
	41, 897,
	-2, 895,
	-1, 2025,
	5, 35,
	-2, 105,
	-1, 2085,
	5, 36,
	-2, 827,
	-1, 2148,
	424, 183,
	-2, 35,
}

const yyPrivate = 57344

const yyLast = 23140

var yyAct = [...]int{

	422, 60, 2147, 2213, 2181, 2156, 2146, 2191, 2182, 2089,
	1253, 2151, 7, 1338, 2150, 6, 2149, 5, 2076, 2122,
	1863, 1807, 1638, 1954, 2067, 1278, 2152, 8, 1740, 2155,
	24, 1980, 393, 671, 2154, 2153, 2024, 486, 1918, 1635,
	1296, 351, 71, 1336, 1707, 1246, 1902, 421, 1885, 1106,
	1535, 856, 1741, 1244, 2090, 367, 1248, 1708, 962, 1788,
	505, 60, 1288, 1589, 406, 1292, 1240, 690, 92, 1704,
	1328, 1718, 1655, 1510, 372, 1242, 1714, 1156, 1277, 1055,
	1689, 1364, 1073, 1572, 1192, 1169, 502, 1611, 1612, 1062,
	1231, 928, 1284, 728, 352, 353, 1688, 386, 356, 1184,
	1324, 1224, 391, 734, 1133, 927, 947, 501, 946, 489,
	769, 778, 376, 484, 492, 481, 1312, 1041, 503, 647,
	936, 2234, 507, 2230, 2220, 872, 2203, 2193, 2185, 2176,
	2125, 70, 1091, 873, 75, 1771, 1879, 2195, 2115, 1386,
	2180, 2082, 1272, 2165, 1808, 2114, 1672, 1453, 1886, 1835,
	646, 1519, 1735, 1385, 1518, 1266, 1888, 1520, 102, 98,
	99, 719, 100, 380, 355, 77, 78, 79, 80, 81,
	1736, 1737, 1267, 1268, 948, 363, 949, 365, 1187, 693,
	694, 702, 692, 61, 32, 33, 354, 1555, 2148, 3,
	1298, 1925, 2081, 1313, 1390, 104, 103, 1826, 1325, 1300,
	1640, 1300, 1318, 1384, 1313, 34, 1824, 366, 358, 649,
	435, 652, 441, 443, 442, 439, 440, 438, 437, 436,
	1304, 1306, 1977, 1305, 1976, 1891, 1975, 444, 445, 1974,
	1973, 2005, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 1971, 1972, 832, 1345, 29, 361,
	61, 32, 33, 2091, 1382, 1376, 1377, 2023, 1375, 1097,
	1378, 1379, 700, 1889, 1890, 1892, 1893, 1894, 2052, 2053,
	2119, 2120, 1590, 94, 1344, 687, 688, 29, 701, 61,
	32, 33, 695, 1547, 686, 685, 696, 693, 694, 1641,
	1096, 1642, 1094, 651, 650, 1388, 1391, 2179, 1552, 1551,
	2164, 34, 2021, 348, 1098, 2226, 2068, 1637, 1591, 68,
	1225, 961, 364, 961, 87, 1903, 1904, 1744, 961, 1548,
	101, 960, 2235, 1617, 670, 2232, 670, 670, 2221, 2204,
	1095, 72, 648, 1553, 670, 1545, 1249, 1251, 68, 349,
	670, 1546, 657, 2055, 365, 1509, 1913, 1594, 60, 60,
	1031, 1022, 1508, 1507, 644, 1609, 722, 320, 97, 706,
	2013, 2047, 708, 1313, 707, 1327, 1383, 89, 91, 1912,
	1853, 86, 1398, 60, 1523, 1397, 1515, 96, 95, 1562,
	736, 1303, 1413, 669, 844, 845, 1104, 2217, 841, 2157,
	1434, 843, 1381, 782, 1592, 1593, 711, 712, 1533, 1273,
	1550, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 765, 1431, 955, 2048, 1250, 942, 93,
	1770, 854, 1887, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 1387, 871, 874, 874, 874, 880,
	874, 874, 880, 874, 880, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 2006,
	932, 1389, 2080, 57, 62, 2157, 94, 1840, 29, 1911,
	61, 32, 33, 1532, 846, 847, 848, 849, 850, 851,
	852, 853, 812, 1955, 665, 1760, 844, 845, 767, 1533,
	2215, 822, 34, 2216, 832, 2214, 1957, 832, 1262, 1533,
	492, 1063, 1549, 382, 29, 944, 61, 32, 33, 88,
	844, 845, 776, 775, 1536, 1354, 705, 709, 58, 2223,
	720, 777, 1101, 727, 67, 1069, 1057, 683, 34, 68,
	777, 62, 84, 1636, 697, 926, 1994, 1761, 1107, 1108,
	1674, 766, 875, 877, 879, 881, 883, 885, 886, 888,
	876, 878, 2047, 882, 884, 1369, 887, 2233, 1140, 950,
	62, 776, 775, 1632, 710, 68, 653, 1956, 959, 83,
	96, 95, 1185, 1138, 1139, 1137, 935, 2219, 29, 777,
	61, 32, 33, 940, 1532, 1533, 775, 724, 2047, 725,
	1024, 855, 726, 2158, 1532, 2173, 1064, 1103, 776, 775,
	1619, 1617, 34, 777, 1748, 1625, 2227, 2048, 1624, 1627,
	1355, 29, 772, 61, 32, 33, 777, 29, 1056, 61,
	32, 33, 684, 2099, 1299, 1620, 699, 36, 63, 41,
	40, 43, 776, 775, 1429, 34, 1428, 27, 2123, 68,
	2123, 34, 2143, 2048, 2142, 776, 775, 1102, 670, 670,
	777, 2087, 2175, 776, 775, 670, 670, 670, 2228, 44,
	66, 65, 2047, 777, 776, 775, 42, 2229, 670, 670,
	1114, 777, 68, 1185, 57, 1442, 2157, 1878, 68, 1877,
	1532, 1577, 777, 1631, 776, 775, 674, 1628, 1575, 680,
	681, 2124, 1556, 1115, 656, 2047, 1116, 689, 2188, 2192,
	2187, 2047, 777, 703, 670, 2162, 2210, 2207, 2192, 2206,
	57, 371, 2049, 64, 2161, 48, 49, 2048, 907, 908,
	909, 910, 911, 895, 896, 897, 912, 913, 898, 899,
	900, 906, 914, 901, 902, 903, 904, 905, 917, 916,
	915, 918, 919, 921, 920, 922, 1058, 68, 2128, 1089,
	2048, 1157, 1032, 1158, 673, 677, 2048, 1136, 679, 1578,
	776, 775, 1065, 715, 1241, 362, 1109, 1676, 1043, 2141,
	782, 62, 1046, 1047, 2105, 776, 775, 1067, 777, 29,
	2020, 61, 32, 33, 57, 714, 2157, 1410, 1411, 1412,
	1970, 675, 678, 777, 676, 659, 660, 661, 662, 663,
	1932, 1110, 1430, 34, 1249, 1251, 1875, 62, 823, 824,
	825, 826, 827, 828, 829, 822, 1753, 57, 832, 2157,
	1521, 1573, 1522, 57, 60, 2157, 1130, 1656, 820, 830,
	831, 823, 824, 825, 826, 827, 828, 829, 822, 858,
	68, 832, 1373, 1134, 478, 479, 1366, 1356, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	1112, 1087, 832, 2047, 776, 775, 2140, 1787, 2202, 1658,
	1789, 1127, 731, 735, 1123, 1125, 1126, 1174, 1177, 2018,
	1124, 62, 777, 1988, 1186, 1250, 1949, 2166, 721, 813,
	1869, 2163, 1132, 1949, 2160, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1129, 2109, 721, 1243, 62, 1131, 672, 932, 2048, 1536,
	62, 932, 1869, 2106, 1982, 1111, 857, 1160, 1161, 411,
	410, 413, 414, 415, 416, 1660, 1984, 870, 412, 417,
	1664, 1789, 1659, 1909, 1657, 1163, 1949, 2071, 1964, 1662,
	1869, 2022, 1188, 1949, 2014, 1963, 492, 1949, 1960, 1182,
	1949, 721, 1661, 1198, 1810, 1200, 1869, 1868, 1776, 1274,
	1804, 1279, 503, 1855, 721, 1663, 1665, 1852, 721, 1533,
	1800, 1797, 1796, 1794, 1793, 57, 1781, 2157, 1780, 1779,
	1768, 1767, 1257, 1764, 1765, 29, 1259, 1207, 1208, 1764,
	1763, 1754, 1212, 1601, 670, 1215, 670, 1425, 721, 68,
	1220, 1600, 855, 1529, 1164, 1166, 1255, 1228, 721, 1482,
	1171, 1165, 1370, 1511, 1352, 1285, 1351, 1167, 1018, 1165,
	721, 1044, 1045, 1263, 1264, 1260, 1483, 1159, 1048, 1049,
	1050, 1071, 1040, 1039, 1038, 1043, 1282, 1037, 1029, 1027,
	1026, 1059, 1060, 1275, 1196, 1197, 68, 1025, 1131, 1334,
	1023, 1203, 1204, 1205, 1206, 1330, 1331, 1332, 1333, 958,
	957, 72, 667, 359, 1532, 1314, 1315, 1316, 1317, 1228,
	1619, 1617, 62, 1705, 1511, 961, 943, 1093, 1621, 1618,
	938, 938, 1256, 1326, 937, 1646, 736, 72, 943, 2112,
	1848, 855, 1993, 1228, 1227, 1620, 1777, 1766, 1524, 1265,
	1425, 1414, 825, 826, 827, 828, 829, 822, 1130, 1447,
	832, 29, 1446, 1368, 1165, 1363, 1350, 821, 820, 830,
	831, 823, 824, 825, 826, 827, 828, 829, 822, 937,
	943, 832, 1228, 1105, 1030, 939, 939, 941, 937, 816,
	1425, 819, 1425, 29, 373, 2117, 2107, 2098, 833, 834,
	835, 836, 837, 838, 839, 1134, 817, 818, 815, 821,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 1986, 68, 832, 1403, 1365, 395, 1920, 1880, 1402,
	1300, 1858, 1329, 1747, 1939, 1719, 1720, 1725, 1325, 1528,
	1346, 1066, 1275, 1419, 1320, 1485, 1486, 1131, 1319, 932,
	932, 932, 932, 932, 68, 68, 1416, 1417, 1418, 1019,
	717, 857, 1415, 1639, 1243, 1337, 1503, 1921, 1422, 2199,
	2197, 2183, 1233, 1236, 1237, 1238, 1234, 932, 1235, 1239,
	492, 1775, 1719, 1720, 1722, 1487, 1705, 830, 831, 823,
	824, 825, 826, 827, 828, 829, 822, 1452, 1454, 832,
	1579, 1070, 1034, 1441, 1460, 1461, 1462, 1463, 1118, 1233,
	1236, 1237, 1238, 1234, 1506, 1235, 1239, 1501, 1724, 1120,
	1121, 1497, 1495, 1525, 1505, 1494, 1498, 1496, 1493, 2137,
	1499, 1279, 1237, 1238, 377, 378, 2113, 1643, 1399, 2134,
	1408, 1489, 1490, 1407, 1492, 1937, 770, 771, 1538, 1799,
	1500, 1513, 1512, 1514, 1488, 1752, 1751, 1491, 1421, 60,
	1530, 2057, 2060, 1537, 2104, 1981, 1424, 1426, 2103, 1427,
	670, 2127, 670, 670, 768, 1433, 1531, 1534, 1436, 1437,
	1438, 1979, 2051, 2050, 360, 1444, 1604, 1445, 1566, 1527,
	1448, 1449, 1516, 1450, 1451, 956, 713, 1455, 1456, 1457,
	1458, 1459, 857, 668, 1846, 1916, 1172, 1173, 1466, 1467,
	1468, 729, 1470, 1471, 389, 1473, 1474, 1475, 1476, 1341,
	1478, 1479, 1480, 730, 1574, 1107, 1108, 1340, 1372, 1342,
	1033, 1582, 1360, 1484, 770, 771, 1610, 1241, 1557, 1558,
	1021, 1502, 374, 375, 1967, 1564, 1406, 1599, 1576, 368,
	2130, 72, 1167, 2129, 1405, 1571, 2101, 109, 2061, 1603,
	109, 1613, 1626, 1630, 1999, 1936, 109, 1648, 1602, 369,
	1998, 1606, 1923, 1511, 1680, 1565, 1435, 1567, 1568, 1569,
	1570, 1432, 1616, 1605, 1622, 1623, 1633, 1634, 1615, 1584,
	1585, 1586, 1607, 1608, 1271, 109, 2201, 2200, 109, 510,
	1061, 109, 1673, 773, 1710, 2200, 60, 2201, 2010, 1750,
	1100, 74, 109, 76, 510, 2039, 47, 50, 1650, 1649,
	109, 2041, 19, 1667, 2040, 18, 69, 1666, 1729, 1730,
	1731, 1654, 2042, 20, 1, 492, 2043, 21, 1652, 2102,
	1706, 2038, 15, 2037, 14, 2031, 10, 1581, 2056, 1668,
	1669, 1709, 1670, 1671, 2045, 25, 1681, 1682, 1683, 1684,
	1685, 2036, 13, 1335, 1677, 1678, 2033, 12, 2032, 11,
	2058, 1728, 1739, 1732, 2030, 9, 1978, 1648, 1279, 1899,
	1279, 1716, 1884, 1723, 1690, 1691, 1883, 1693, 1694, 1588,
	1696, 1697, 1698, 1699, 1587, 1701, 1702, 1703, 716, 1090,
	1726, 1357, 1745, 1614, 1809, 1746, 1734, 1917, 1380, 2066,
	1334, 1286, 1743, 1276, 500, 1773, 1774, 842, 82, 1353,
	682, 1653, 1727, 1738, 1907, 328, 1283, 1543, 2059, 718,
	1542, 1539, 1554, 1297, 1301, 1302, 1541, 1307, 1308, 1309,
	1310, 1311, 1540, 2054, 1544, 966, 1400, 1401, 964, 735,
	965, 963, 968, 967, 332, 1321, 1322, 1323, 487, 951,
	774, 90, 51, 1686, 1687, 1749, 1910, 932, 1692, 1778,
	1629, 1695, 1374, 85, 1790, 1068, 1700, 691, 334, 840,
	1404, 1517, 493, 2097, 1791, 1795, 1712, 2118, 733, 2072,
	1997, 1922, 1440, 1833, 1711, 869, 1757, 1183, 394, 2075,
	1122, 409, 1783, 1792, 408, 407, 931, 404, 405, 1423,
	1359, 1113, 1481, 1803, 814, 1769, 392, 384, 930, 923,
	1755, 1756, 1784, 1371, 1232, 1230, 1229, 1759, 1035, 1443,
	482, 1721, 1717, 929, 1762, 109, 1645, 698, 510, 1814,
	510, 510, 1815, 1839, 347, 1785, 1834, 2004, 510, 1117,
	31, 1822, 73, 1595, 510, 1597, 1598, 379, 26, 17,
	704, 22, 16, 654, 35, 39, 38, 37, 1583, 1817,
	1343, 1865, 1866, 357, 1074, 1072, 2189, 2121, 109, 1856,
	721, 2095, 2046, 23, 1525, 2167, 4, 370, 1871, 28,
	2, 0, 1279, 1861, 0, 60, 1847, 781, 0, 0,
	0, 0, 0, 1841, 1842, 0, 0, 0, 1867, 1843,
	0, 0, 1844, 0, 1862, 1651, 0, 1845, 821, 820,
	830, 831, 823, 824, 825, 826, 827, 828, 829, 822,
	0, 0, 832, 0, 0, 1872, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 1816, 0,
	832, 0, 0, 0, 1818, 1906, 0, 0, 1896, 1897,
	1898, 1895, 1919, 0, 0, 1827, 1828, 1901, 1905, 1710,
	1914, 0, 1941, 1900, 1334, 0, 1743, 0, 1908, 0,
	0, 0, 0, 0, 1915, 0, 0, 0, 0, 1193,
	0, 0, 0, 109, 109, 109, 0, 0, 0, 1946,
	1874, 0, 1876, 0, 0, 0, 420, 0, 510, 1849,
	1850, 1851, 0, 1854, 0, 1966, 1709, 1968, 0, 0,
	1873, 0, 0, 0, 0, 1860, 1938, 0, 0, 1965,
	0, 0, 1945, 0, 1947, 0, 0, 1992, 0, 1948,
	1959, 0, 1958, 1953, 0, 0, 0, 1926, 1927, 1928,
	1929, 1930, 0, 1969, 0, 1933, 1934, 1924, 0, 0,
	1710, 1995, 60, 0, 1983, 0, 1985, 0, 1559, 1560,
	1561, 1563, 0, 0, 0, 0, 1990, 0, 1987, 0,
	0, 0, 1991, 1881, 0, 0, 1675, 0, 494, 60,
	0, 506, 0, 0, 0, 0, 0, 2017, 0, 0,
	2028, 0, 0, 2027, 2011, 2026, 658, 1709, 2009, 0,
	0, 0, 0, 0, 2015, 2029, 2019, 0, 2044, 0,
	0, 0, 0, 2035, 2034, 0, 0, 0, 0, 2074,
	2078, 0, 0, 1931, 0, 2063, 0, 1961, 1935, 1962,
	2070, 0, 1135, 0, 2062, 0, 0, 1919, 1279, 0,
	0, 2064, 2069, 2065, 0, 1733, 0, 0, 2092, 510,
	1940, 0, 1950, 492, 1951, 1952, 0, 109, 2084, 0,
	60, 109, 2083, 0, 109, 0, 0, 0, 0, 0,
	109, 2028, 510, 510, 2027, 0, 2026, 0, 0, 510,
	510, 510, 109, 109, 109, 0, 2029, 109, 0, 2044,
	0, 0, 510, 510, 2035, 2034, 2096, 0, 2100, 0,
	0, 0, 0, 0, 2111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 2001, 2002, 2003, 0,
	0, 0, 2007, 2008, 2017, 0, 2131, 109, 510, 2126,
	0, 0, 109, 2078, 0, 60, 60, 0, 0, 0,
	2012, 2136, 2139, 2135, 2133, 0, 2132, 2028, 2138, 931,
	2027, 2144, 2026, 931, 60, 2168, 0, 931, 0, 0,
	2174, 2172, 2029, 0, 2171, 2044, 2170, 2025, 60, 1805,
	2035, 2034, 2159, 0, 2177, 0, 2169, 0, 109, 0,
	0, 0, 0, 2178, 781, 0, 60, 60, 0, 2190,
	2194, 2184, 2186, 2079, 0, 0, 60, 2198, 2190, 60,
	2196, 2085, 0, 0, 60, 2205, 2190, 2208, 0, 0,
	1836, 0, 0, 0, 60, 2218, 2190, 1758, 60, 0,
	506, 1838, 506, 506, 2222, 0, 0, 0, 0, 0,
	506, 60, 0, 2190, 60, 0, 506, 1837, 0, 0,
	2231, 60, 0, 2190, 857, 60, 0, 2190, 2025, 0,
	0, 0, 0, 1857, 0, 2108, 1859, 0, 510, 0,
	821, 820, 830, 831, 823, 824, 825, 826, 827, 828,
	829, 822, 2116, 0, 832, 0, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 0, 0,
	832, 0, 0, 0, 510, 510, 0, 0, 0, 0,
	0, 0, 2211, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1820, 0, 1821, 1832, 0, 1823, 0, 1825,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 109, 109, 0,
	0, 109, 109, 0, 0, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 510, 510, 0, 0, 0, 0, 29, 30,
	61, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 0, 494, 0, 0, 0, 67, 0,
	952, 0, 34, 54, 55, 0, 0, 1870, 0, 59,
	2224, 2225, 0, 821, 820, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 0, 1831, 832, 0, 0,
	0, 0, 0, 0, 0, 45, 0, 109, 510, 68,
	510, 0, 0, 0, 0, 109, 109, 0, 0, 109,
	0, 0, 0, 0, 0, 931, 931, 931, 931, 931,
	0, 0, 0, 0, 1830, 1420, 0, 0, 0, 0,
	931, 0, 0, 0, 0, 0, 109, 0, 109, 109,
	857, 0, 0, 931, 0, 109, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 0, 0,
	832, 36, 63, 41, 40, 43, 0, 56, 1829, 109,
	109, 109, 109, 109, 821, 820, 830, 831, 823, 824,
	825, 826, 827, 828, 829, 822, 0, 0, 832, 0,
	0, 0, 0, 44, 66, 65, 0, 0, 52, 53,
	42, 0, 2073, 2077, 0, 0, 0, 0, 0, 0,
	0, 1020, 821, 820, 830, 831, 823, 824, 825, 826,
	827, 828, 829, 822, 0, 0, 832, 0, 0, 0,
	0, 0, 0, 0, 506, 506, 0, 0, 0, 0,
	0, 506, 506, 506, 57, 0, 46, 64, 0, 48,
	49, 2093, 2094, 0, 506, 506, 821, 820, 830, 831,
	823, 824, 825, 826, 827, 828, 829, 822, 0, 0,
	832, 0, 0, 0, 29, 0, 61, 32, 33, 0,
	0, 0, 0, 0, 0, 933, 0, 0, 58, 0,
	506, 0, 0, 0, 67, 0, 0, 342, 34, 0,
	0, 0, 0, 109, 109, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 109, 2077, 0, 109, 0,
	0, 0, 109, 0, 0, 0, 0, 2145, 106, 0,
	0, 109, 0, 0, 339, 68, 0, 350, 0, 0,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 2047, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 499,
	0, 0, 645, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 655, 0, 0, 321, 0, 0, 0,
	0, 664, 0, 324, 0, 0, 2209, 36, 63, 41,
	40, 43, 0, 333, 340, 341, 0, 0, 0, 1168,
	1170, 0, 510, 2048, 1176, 1179, 1180, 1181, 0, 0,
	1162, 0, 0, 0, 510, 109, 510, 510, 0, 44,
	66, 65, 0, 0, 0, 0, 42, 0, 494, 330,
	0, 1191, 331, 1194, 1195, 0, 0, 338, 1199, 0,
	1201, 1202, 0, 0, 0, 0, 1189, 1190, 1209, 1210,
	1211, 0, 1213, 1214, 0, 1216, 1217, 1218, 1219, 0,
	1221, 1222, 1223, 0, 0, 0, 0, 0, 0, 109,
	57, 0, 2049, 64, 0, 48, 49, 0, 510, 821,
	820, 830, 831, 823, 824, 825, 826, 827, 828, 829,
	822, 0, 0, 832, 0, 0, 322, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 0, 506, 506, 0, 0, 510, 0,
	0, 0, 0, 931, 0, 0, 0, 0, 335, 325,
	326, 0, 336, 337, 345, 0, 0, 0, 327, 329,
	0, 323, 344, 343, 0, 0, 0, 0, 0, 0,
	510, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 506, 0, 0, 0, 732, 0, 510, 510,
	0, 510, 0, 510, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 346, 0, 0, 0, 0, 0, 107, 723,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 109,
	0, 506, 0, 0, 383, 0, 0, 485, 495, 0,
	107, 0, 0, 107, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 510, 107, 0, 109, 510, 0, 0, 0, 0,
	0, 0, 510, 0, 0, 510, 510, 510, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1464, 1465, 0,
	0, 0, 1469, 0, 925, 1472, 934, 0, 0, 0,
	1477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 510, 510, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 107, 506, 506,
	0, 0, 0, 0, 0, 0, 988, 510, 510, 0,
	510, 0, 0, 510, 0, 109, 0, 109, 1028, 0,
	0, 0, 483, 0, 510, 1036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 0, 0, 0, 0,
	107, 0, 0, 1051, 1052, 1053, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 510, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 975, 0,
	1679, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 1713, 1715, 0, 0, 0, 0, 0, 1119,
	989, 510, 0, 0, 0, 0, 0, 0, 510, 510,
	1715, 0, 0, 0, 0, 107, 107, 107, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 510, 0,
	506, 506, 0, 506, 0, 1742, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1002, 1005, 1006, 1007, 1008,
	1009, 1010, 0, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	0, 990, 991, 992, 993, 969, 973, 1003, 970, 976,
	972, 974, 971, 510, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 994, 995, 996, 997, 998,
	999, 1000, 1001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 1798, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 1811, 1812, 1813,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 107,
	0, 0, 0, 107, 0, 0, 107, 0, 0, 0,
	0, 0, 1042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 107, 107, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 1864, 1864, 0,
	0, 0, 0, 0, 0, 506, 0, 0, 1339, 0,
	0, 0, 0, 0, 1864, 0, 1347, 1348, 0, 107,
	1349, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	1392, 1393, 1394, 1395, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1942,
	1943, 0, 1944, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1742, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 383, 0, 0,
	0, 383, 383, 383, 383, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 1864, 383, 383,
	383, 383, 0, 0, 383, 383, 383, 383, 383, 0,
	0, 0, 0, 0, 0, 383, 383, 383, 0, 383,
	383, 0, 383, 383, 383, 383, 2016, 383, 383, 383,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 107,
	1252, 0, 0, 107, 107, 0, 0, 107, 1261, 1042,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1042, 1742, 0, 0, 0, 0, 0, 0,
	506, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 107, 107, 0,
	0, 107, 0, 0, 0, 2110, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	1361, 1362, 0, 0, 0, 1864, 0, 107, 0, 0,
	0, 0, 0, 0, 1742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	1644, 107, 107, 107, 107, 107, 0, 0, 0, 0,
	0, 1042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 383, 0, 0, 0, 383,
	0, 0, 383, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 495, 107, 107, 107, 107, 107,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	107, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 0, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 628, 608, 282, 566, 631, 538,
	555, 642, 556, 559, 597, 524, 578, 219, 553, 525,
	0, 542, 515, 549, 516, 539, 568, 153, 537, 610,
	581, 630, 183, 593, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 629, 574, 0, 637, 186, 590, 303,
	271, 204, 0, 0, 570, 617, 576, 606, 565, 599,
	531, 589, 632, 554, 595, 633, 0, 0, 0, 509,
	0, 1280, 1281, 0, 0, 0, 0, 0, 135, 0,
	592, 627, 551, 594, 596, 513, 591, 495, 519, 526,
	641, 623, 545, 546, 547, 1526, 0, 0, 107, 0,
	0, 0, 569, 577, 603, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 587, 0, 0, 0,
	527, 520, 0, 0, 567, 0, 0, 0, 530, 114,
	544, 604, 0, 511, 163, 205, 125, 607, 622, 564,
	176, 309, 626, 561, 560, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 552, 512,
	611, 540, 550, 146, 548, 250, 223, 298, 0, 584,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 563, 598, 541, 143, 601, 588, 616, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 517, 0, 273,
	301, 319, 192, 132, 536, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 534, 535,
	532, 0, 533, 579, 580, 634, 635, 636, 605, 528,
	0, 618, 619, 0, 609, 624, 625, 600, 643, 557,
	558, 518, 521, 522, 523, 529, 571, 572, 583, 586,
	614, 613, 612, 615, 620, 639, 638, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	110, 121, 185, 316, 243, 159, 302, 514, 151, 0,
	0, 573, 575, 585, 602, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 621, 628, 608, 282, 566, 631, 538, 555, 642,
	556, 559, 597, 524, 578, 219, 553, 525, 0, 542,
	515, 549, 516, 539, 568, 153, 537, 610, 581, 630,
	183, 593, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 629, 574, 0, 637, 186, 590, 303, 271, 204,
	0, 0, 570, 617, 576, 606, 565, 599, 531, 589,
	632, 554, 595, 633, 0, 0, 0, 509, 0, 1280,
	1281, 0, 0, 0, 0, 0, 135, 0, 592, 627,
	551, 594, 596, 513, 591, 0, 519, 526, 641, 623,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	569, 577, 603, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 587, 0, 0, 0, 527, 520,
	0, 0, 567, 0, 0, 0, 530, 114, 544, 604,
	0, 511, 163, 205, 125, 607, 622, 564, 176, 309,
	626, 561, 560, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 552, 512, 611, 540,
	550, 146, 548, 250, 223, 298, 0, 584, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 563,
	598, 541, 143, 601, 588, 616, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 517, 0, 273, 301, 319,
	192, 132, 536, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 534, 535, 532, 0,
	533, 579, 580, 634, 635, 636, 605, 528, 0, 618,
	619, 0, 609, 624, 625, 600, 643, 557, 558, 518,
	521, 522, 523, 529, 571, 572, 583, 586, 614, 613,
	612, 615, 620, 639, 638, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 110, 121,
	185, 316, 243, 159, 302, 514, 151, 0, 0, 573,
	575, 585, 602, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 621,
	628, 608, 282, 566, 631, 538, 555, 642, 556, 559,
	597, 524, 578, 219, 553, 525, 0, 542, 515, 549,
	516, 539, 568, 153, 537, 610, 581, 630, 183, 593,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 629,
	574, 0, 637, 186, 590, 303, 271, 204, 0, 0,
	570, 617, 576, 606, 565, 599, 531, 589, 632, 554,
	595, 633, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 592, 627, 551, 594,
	596, 513, 591, 0, 519, 526, 641, 623, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 569, 577,
	603, 562, 0, 0, 0, 0, 0, 0, 1647, 0,
	543, 0, 587, 0, 0, 0, 527, 520, 0, 0,
	567, 0, 0, 0, 530, 114, 544, 604, 0, 511,
	163, 205, 125, 607, 622, 564, 176, 309, 626, 561,
	560, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 552, 512, 611, 540, 550, 146,
	548, 250, 223, 298, 0, 584, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 563, 598, 541,
	143, 601, 588, 616, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 517, 0, 273, 301, 319, 192, 132,
	536, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 534, 535, 532, 0, 533, 579,
	580, 634, 635, 636, 605, 528, 0, 618, 619, 0,
	609, 624, 625, 600, 643, 557, 558, 518, 521, 522,
	523, 529, 571, 572, 583, 586, 614, 613, 612, 615,
	620, 639, 638, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 110, 121, 185, 316,
	243, 159, 302, 514, 151, 0, 0, 573, 575, 585,
	602, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 621, 628, 608,
	282, 566, 631, 538, 555, 642, 556, 559, 597, 524,
	578, 219, 553, 525, 0, 542, 515, 549, 516, 539,
	568, 153, 537, 610, 581, 630, 183, 593, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 629, 574, 0,
	637, 186, 590, 303, 271, 204, 0, 0, 570, 617,
	576, 606, 565, 599, 531, 589, 632, 554, 595, 633,
	68, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 592, 627, 551, 594, 596, 513,
	591, 0, 519, 526, 641, 623, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 569, 577, 603, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	587, 0, 0, 0, 527, 520, 0, 0, 567, 0,
	0, 0, 530, 114, 544, 604, 0, 511, 163, 205,
	125, 607, 622, 564, 176, 309, 626, 561, 560, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 552, 512, 611, 540, 550, 146, 548, 250,
	223, 298, 0, 584, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 563, 598, 541, 143, 601,
	588, 616, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 517, 0, 273, 301, 319, 192, 132, 536, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 534, 535, 532, 0, 533, 579, 580, 634,
	635, 636, 605, 528, 0, 618, 619, 0, 609, 624,
	625, 600, 643, 557, 558, 518, 521, 522, 523, 529,
	571, 572, 583, 586, 614, 613, 612, 615, 620, 639,
	638, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 110, 121, 185, 316, 243, 159,
	302, 514, 151, 0, 0, 573, 575, 585, 602, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 621, 628, 608, 282, 566,
	631, 538, 555, 642, 556, 559, 597, 524, 578, 219,
	553, 525, 0, 542, 515, 549, 516, 539, 568, 153,
	537, 610, 581, 630, 183, 593, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 629, 574, 0, 637, 186,
	590, 303, 271, 204, 0, 0, 570, 617, 576, 606,
	565, 599, 531, 589, 632, 554, 595, 633, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 592, 627, 551, 594, 596, 513, 591, 0,
	519, 526, 641, 623, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 569, 577, 603, 562, 0, 0,
	0, 0, 0, 0, 1262, 0, 543, 0, 587, 0,
	0, 0, 527, 520, 0, 0, 567, 0, 0, 0,
	530, 114, 544, 604, 0, 511, 163, 205, 125, 607,
	622, 564, 176, 309, 626, 561, 560, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	552, 512, 611, 540, 550, 146, 548, 250, 223, 298,
	0, 584, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 563, 598, 541, 143, 601, 588, 616,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 517,
	0, 273, 301, 319, 192, 132, 536, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	534, 535, 532, 0, 533, 579, 580, 634, 635, 636,
	605, 528, 0, 618, 619, 0, 609, 624, 625, 600,
	643, 557, 558, 518, 521, 522, 523, 529, 571, 572,
	583, 586, 614, 613, 612, 615, 620, 639, 638, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 110, 121, 185, 316, 243, 159, 302, 514,
	151, 0, 0, 573, 575, 585, 602, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 621, 628, 608, 282, 566, 631, 538,
	555, 642, 556, 559, 597, 524, 578, 219, 553, 525,
	0, 542, 515, 549, 516, 539, 568, 153, 537, 610,
	581, 630, 183, 593, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 629, 574, 0, 637, 186, 590, 303,
	271, 204, 0, 0, 570, 617, 576, 606, 565, 599,
	531, 589, 632, 554, 595, 633, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	592, 627, 551, 594, 596, 513, 591, 0, 519, 526,
	641, 623, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 569, 577, 603, 562, 0, 0, 0, 0,
	0, 0, 1128, 0, 543, 0, 587, 0, 0, 0,
	527, 520, 0, 0, 567, 0, 0, 0, 530, 114,
	544, 604, 0, 511, 163, 205, 125, 607, 622, 564,
	176, 309, 626, 561, 560, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 552, 512,
	611, 540, 550, 146, 548, 250, 223, 298, 0, 584,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 563, 598, 541, 143, 601, 588, 616, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 517, 0, 273,
	301, 319, 192, 132, 536, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 534, 535,
	532, 0, 533, 579, 580, 634, 635, 636, 605, 528,
	0, 618, 619, 0, 609, 624, 625, 600, 643, 557,
	558, 518, 521, 522, 523, 529, 571, 572, 583, 586,
	614, 613, 612, 615, 620, 639, 638, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	110, 121, 185, 316, 243, 159, 302, 514, 151, 0,
	0, 573, 575, 585, 602, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 621, 628, 608, 282, 566, 631, 538, 555, 642,
	556, 559, 597, 524, 578, 219, 553, 525, 0, 542,
	515, 549, 516, 539, 568, 153, 537, 610, 581, 630,
	183, 593, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 629, 574, 0, 637, 186, 590, 303, 271, 204,
	0, 0, 570, 617, 576, 606, 565, 599, 531, 589,
	632, 554, 595, 633, 0, 0, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 592, 627,
	551, 594, 596, 513, 591, 0, 519, 526, 641, 623,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	569, 577, 603, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 587, 0, 0, 0, 527, 520,
	0, 0, 567, 0, 0, 0, 530, 114, 544, 604,
	0, 511, 163, 205, 125, 607, 622, 564, 176, 309,
	626, 561, 560, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 552, 512, 611, 540,
	550, 146, 548, 250, 223, 298, 0, 584, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 563,
	598, 541, 143, 601, 588, 616, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 517, 0, 273, 301, 319,
	192, 132, 536, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 534, 535, 532, 0,
	533, 579, 580, 634, 635, 636, 605, 528, 0, 618,
	619, 0, 609, 624, 625, 600, 643, 557, 558, 518,
	521, 522, 523, 529, 571, 572, 583, 586, 614, 613,
	612, 615, 620, 639, 638, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 110, 121,
	185, 316, 243, 159, 302, 514, 151, 0, 0, 573,
	575, 585, 602, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 621,
	628, 608, 282, 566, 631, 538, 555, 642, 556, 559,
	597, 524, 578, 219, 553, 525, 0, 542, 515, 549,
	516, 539, 568, 153, 537, 610, 581, 630, 183, 593,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 629,
	574, 0, 637, 186, 590, 303, 271, 204, 0, 0,
	570, 617, 576, 606, 565, 599, 531, 589, 632, 554,
	595, 633, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 592, 627, 551, 594,
	596, 513, 591, 0, 519, 526, 641, 623, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 569, 577,
	603, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 0, 587, 0, 0, 0, 527, 520, 0, 0,
	567, 0, 0, 0, 530, 114, 544, 604, 0, 511,
	163, 205, 125, 607, 622, 564, 176, 309, 626, 561,
	560, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 552, 512, 611, 540, 550, 146,
	548, 250, 223, 298, 0, 584, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 563, 598, 541,
	143, 601, 588, 616, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 517, 0, 273, 301, 319, 192, 132,
	536, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 534, 535, 532, 0, 533, 579,
	580, 634, 635, 636, 605, 528, 0, 618, 619, 0,
	609, 624, 625, 600, 643, 557, 558, 518, 521, 522,
	523, 529, 571, 572, 583, 586, 614, 613, 612, 615,
	620, 639, 638, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 110, 121, 185, 316,
	243, 159, 302, 514, 151, 0, 0, 573, 575, 585,
	602, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 621, 628, 608,
	282, 566, 631, 538, 555, 642, 556, 559, 597, 524,
	578, 219, 553, 525, 0, 542, 515, 549, 516, 539,
	568, 153, 537, 610, 581, 630, 183, 593, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 1291, 1295, 0,
	637, 186, 590, 303, 271, 204, 0, 0, 570, 617,
	576, 606, 565, 599, 531, 589, 632, 554, 595, 633,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 592, 627, 551, 594, 596, 513,
	591, 0, 519, 526, 641, 623, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 569, 577, 603, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	587, 0, 0, 0, 527, 520, 0, 0, 567, 0,
	0, 0, 530, 114, 544, 604, 0, 511, 163, 205,
	125, 607, 622, 1294, 176, 309, 626, 561, 560, 1289,
	0, 1290, 166, 184, 508, 111, 123, 1287, 1293, 215,
	248, 256, 552, 512, 611, 540, 550, 146, 548, 250,
	223, 298, 0, 584, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 563, 598, 541, 143, 601,
	588, 616, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 517, 0, 273, 301, 319, 192, 132, 536, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 534, 535, 532, 0, 533, 579, 580, 634,
	635, 636, 605, 528, 0, 618, 619, 0, 609, 624,
	625, 600, 643, 557, 558, 518, 521, 522, 523, 529,
	571, 572, 583, 586, 614, 613, 612, 615, 620, 639,
	638, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 110, 121, 185, 316, 243, 159,
	302, 514, 151, 0, 0, 573, 575, 585, 602, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 621, 628, 608, 282, 566,
	631, 538, 555, 642, 556, 559, 597, 524, 578, 219,
	553, 525, 0, 542, 515, 549, 516, 539, 568, 153,
	537, 610, 581, 630, 183, 593, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 629, 574, 0, 637, 186,
	590, 303, 271, 204, 0, 0, 570, 617, 576, 606,
	565, 599, 531, 589, 632, 554, 595, 633, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 592, 627, 551, 594, 596, 513, 591, 0,
	519, 526, 641, 623, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 569, 577, 603, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 587, 0,
	0, 0, 527, 520, 0, 0, 567, 0, 0, 0,
	530, 114, 544, 604, 0, 511, 163, 205, 125, 607,
	622, 564, 176, 309, 626, 561, 560, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	552, 512, 611, 540, 550, 146, 548, 250, 223, 298,
	0, 584, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 563, 598, 541, 143, 601, 588, 616,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 517,
	0, 273, 301, 319, 192, 132, 536, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	534, 535, 532, 0, 533, 579, 580, 634, 635, 636,
	605, 528, 0, 618, 619, 0, 609, 624, 625, 600,
	643, 557, 558, 518, 521, 522, 523, 529, 571, 572,
	583, 586, 614, 613, 612, 615, 620, 639, 638, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 110, 121, 185, 316, 243, 159, 302, 514,
	151, 0, 0, 573, 575, 585, 602, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 621, 628, 608, 282, 566, 631, 538,
	555, 642, 556, 559, 597, 524, 578, 219, 553, 525,
	0, 542, 515, 549, 516, 539, 568, 153, 537, 610,
	581, 630, 183, 593, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 629, 574, 0, 637, 186, 590, 303,
	271, 204, 0, 0, 570, 617, 576, 606, 565, 599,
	531, 589, 632, 554, 595, 633, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	592, 627, 551, 594, 596, 513, 591, 0, 519, 526,
	641, 623, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 569, 577, 603, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 0, 587, 0, 0, 0,
	527, 520, 0, 0, 567, 0, 0, 0, 530, 114,
	544, 604, 0, 511, 163, 205, 125, 607, 622, 564,
	176, 309, 626, 561, 560, 239, 0, 276, 166, 184,
	508, 111, 123, 504, 165, 215, 248, 256, 552, 512,
	611, 540, 550, 146, 548, 250, 223, 298, 0, 584,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 563, 598, 541, 143, 601, 588, 616, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 517, 0, 273,
	301, 319, 192, 132, 536, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 534, 535,
	532, 0, 533, 579, 580, 634, 635, 636, 605, 528,
	0, 618, 619, 0, 609, 624, 625, 600, 643, 557,
	558, 518, 521, 522, 523, 529, 571, 572, 583, 586,
	614, 613, 612, 615, 620, 639, 638, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	110, 121, 185, 316, 243, 159, 302, 514, 151, 0,
	0, 573, 575, 585, 602, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 621, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	1269, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 1270,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 721,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 381, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 1178, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 381, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 1175, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 381, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 29, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 153,
	387, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 388, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 385, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 153, 387, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 1088, 388, 411, 410, 413,
	414, 415, 416, 0, 0, 135, 412, 417, 418, 419,
	0, 0, 0, 385, 402, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 448, 0, 401, 0, 0, 396, 397,
	398, 403, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 425, 0, 0, 176, 309, 0,
	0, 446, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 431, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 435, 447, 441, 443, 442,
	439, 440, 438, 437, 436, 449, 426, 427, 428, 429,
	432, 0, 444, 445, 0, 0, 0, 0, 462, 463,
	464, 465, 466, 467, 468, 461, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 458, 459, 430, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 153,
	387, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 388, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 385, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 153, 387, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 388, 411, 410, 413,
	414, 415, 416, 0, 0, 135, 412, 417, 418, 419,
	0, 0, 0, 385, 402, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 448, 0, 401, 0, 0, 396, 397,
	398, 403, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 425, 0, 0, 176, 309, 0,
	0, 446, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 431, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 435, 447, 441, 443, 442,
	439, 440, 438, 437, 436, 449, 426, 427, 428, 429,
	432, 0, 444, 445, 0, 0, 0, 0, 737, 738,
	739, 740, 741, 745, 746, 750, 751, 759, 758, 757,
	760, 761, 763, 762, 764, 742, 743, 744, 747, 748,
	749, 752, 753, 756, 754, 755, 430, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 388, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 0, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 2212, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 434, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 423, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 721, 388, 411, 410, 413,
	414, 415, 416, 0, 0, 135, 412, 417, 418, 419,
	0, 0, 0, 0, 402, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 448, 0, 401, 0, 0, 396, 397,
	398, 403, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 425, 0, 0, 176, 309, 0,
	0, 446, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 431, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 435, 447, 441, 443, 442,
	439, 440, 438, 437, 436, 449, 426, 427, 428, 429,
	432, 0, 444, 445, 0, 0, 0, 0, 462, 463,
	464, 465, 466, 467, 468, 461, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 458, 459, 430, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 434, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 423, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 388, 411, 410, 413, 414, 415, 416, 0, 0,
	135, 412, 417, 418, 419, 0, 0, 0, 0, 402,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 448, 0,
	401, 0, 0, 396, 397, 398, 403, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 425,
	0, 0, 176, 309, 0, 0, 446, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	431, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	435, 447, 441, 443, 442, 439, 440, 438, 437, 436,
	449, 426, 427, 428, 429, 432, 0, 444, 445, 0,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	461, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 458,
	459, 430, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 0, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	1251, 0, 0, 0, 0, 0, 108, 0, 1254, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	1250, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	786, 787, 788, 792, 793, 797, 798, 806, 805, 804,
	807, 808, 810, 809, 811, 789, 790, 791, 794, 795,
	796, 799, 800, 803, 801, 802, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 1251, 0, 0, 0, 0,
	0, 108, 0, 1254, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 0,
	0, 0, 176, 309, 0, 1250, 0, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	0, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 1245, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 784, 785, 786, 787, 788, 792, 793,
	797, 798, 806, 805, 804, 807, 808, 810, 809, 811,
	789, 790, 791, 794, 795, 796, 799, 800, 803, 801,
	802, 0, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 779,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 0, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 780, 0, 783, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 776, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	0, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	786, 787, 788, 792, 793, 797, 798, 806, 805, 804,
	807, 808, 810, 809, 811, 789, 790, 791, 794, 795,
	796, 799, 800, 803, 801, 802, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 1504, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 0, 1254, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 0,
	0, 0, 176, 309, 0, 0, 0, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	0, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 784, 785, 786, 787, 788, 792, 793,
	797, 798, 806, 805, 804, 807, 808, 810, 809, 811,
	789, 790, 791, 794, 795, 796, 799, 800, 803, 801,
	802, 0, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 0, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 1254, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	0, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 785,
	786, 787, 788, 792, 793, 797, 798, 806, 805, 804,
	807, 808, 810, 809, 811, 789, 790, 791, 794, 795,
	796, 799, 800, 803, 801, 802, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 780, 0, 783, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 0,
	0, 0, 176, 309, 0, 0, 0, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	0, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 784, 785, 786, 787, 788, 792, 793,
	797, 798, 806, 805, 804, 807, 808, 810, 809, 811,
	789, 790, 791, 794, 795, 796, 799, 800, 803, 801,
	802, 0, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 183,
	0, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	0, 0, 0, 0, 186, 0, 303, 271, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 820, 830, 831, 823, 824, 825,
	826, 827, 828, 829, 822, 0, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 0, 0,
	0, 163, 205, 125, 0, 0, 0, 176, 309, 0,
	0, 0, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 0, 0, 0, 0, 0,
	146, 0, 250, 223, 298, 0, 0, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 0, 0,
	0, 143, 0, 0, 0, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 0, 0, 273, 301, 319, 192,
	132, 0, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 121, 185,
	316, 243, 159, 302, 0, 151, 0, 0, 0, 0,
	0, 0, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 29, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 29, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 954, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 0, 953, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 105, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 497, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 498,
	496, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 945,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 497, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 498,
	496, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 488, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	497, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 498, 496, 491, 490, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
}
var yyPact = [...]int{

	2352, -1000, -293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1416, 1486, -1000,
	-1000, -1000, -1000, -1000, -1000, 485, 229, -1000, -1000, -1000,
	219, 20, 20228, 218, 2584, 21058, -1000, -1000, -1000, -1000,
	170, 21058, -1000, -1000, -91, -113, -1000, -5, 1023, 1328,
	1135, -1000, -1000, 33, -9, -1000, -1000, -1000, -1000, -1000,
	-1000, 1412, 1433, 1168, 1401, 1261, -1000, 10265, 200, 200,
	19813, 22718, -1000, 21058, 9019, 214, 21058, -159, 187, 187,
	118, 187, -1000, 490, -1000, -1000, -1000, 21058, 197, 20643,
	197, 197, 197, 197, 197, 21058, -1000, 378, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21058, 1022, 1353, 6093, 636, 6093, 6093, -1000, 536, -1000,
	104, 103, 94, 6093, 5, 542, 80, 1, -1000, 6093,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 242, 1135, 488,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1346, 733, 1173,
	-112, 839, 217, 21058, 478, -1000, -1000, 1372, 12341, 12756,
	1416, -1000, 1135, -1000, -1000, -1000, 1305, -1000, -1000, 554,
	1472, -1000, 15246, 376, -1000, 12341, 1082, 962, -1000, -1000,
	962, -1000, -1000, 257, -1000, -1000, 14001, 14001, 14001, 14001,
	14001, 14001, 14001, 14001, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	962, -1000, 11511, 962, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 12341, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 962, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 962, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 962, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 962, 962, 962, 962, 962, 19398, 18568,
	21058, 1100, 1099, -1000, -1000, 292, 1050, 22303, -116, -1000,
	-1000, -1000, 483, 18153, -1000, 289, -1000, 1345, -1000, -1000,
	1021, 167, -1000, 3216, 978, -1000, -1000, -1000, 1172, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20643, 1397, 209, 1010, 523, 1007,
	1000, 999, 21058, 998, 1096, 207, 21058, 1386, 1217, 21058,
	997, 994, 993, 992, -1000, 8601, -1000, 6093, 6093, -1000,
	-1000, -1000, 187, 187, 6093, 6093, 6093, 21058, 21058, 21058,
	-1000, -1000, 21058, -1000, -1000, 534, 534, 6093, 6093, -1000,
	1469, 510, 510, -1000, -1000, -1000, -1000, 12341, -1000, 14001,
	441, -1000, 1216, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	991, -1000, -1000, 201, -1000, 809, -1000, 11926, -291, -1000,
	-1000, -1000, 21058, 6093, 113, 151, 120, 21058, -1000, 1481,
	436, 599, 260, 1095, -1000, 533, 1380, 962, 962, 962,
	962, 962, 962, 962, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 962, 962, 962, 962, 962, 962, 962,
	962, 962, 962, 962, 962, 1412, 839, 1261, 640, 1232,
	-1000, -1000, -1000, 21058, -1000, 12341, 12341, 813, -1000, 16491,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6929, 438, 14001, 700, 489, 14001, 14001, 14001,
	14001, 14001, 14001, 14001, 14001, 14001, 14001, 14001, 14001, 14001,
	14001, 14001, 701, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 987, -1000, 1135, 878, 878, 396, 396, 396, 396,
	396, 396, 396, 16906, 1393, 839, 981, 496, 11511, 10265,
	10265, 839, 12341, 12341, 11095, 10680, 10265, 10265, 1393, 501,
	496, 21888, -1000, -1000, 13586, -1000, -1000, -1000, -1000, -1000,
	839, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20643,
	20643, 10265, 10265, 10265, 10265, 839, 839, 10265, 10265, 10265,
	10265, 10265, 839, 839, 839, 839, 1393, 1393, 10265, 10265,
	10265, 1393, 10265, 10265, 1393, 10265, 10265, 10265, 10265, 1393,
	10265, 10265, 10265, 139, 21058, -1000, 1094, 1234, -1000, -1000,
	-1000, 1394, 17738, 14831, 139, 1046, 18568, 21058, -1000, -1000,
	18568, 21058, 6511, 21473, 1050, -116, 1061, -1000, -136, -121,
	9435, 278, -1000, -1000, -1000, 7765, -1000, 5257, 8183, -1000,
	978, 1172, -1000, -81, -1000, -1000, -1000, 1143, -1000, 1143,
	134, -19, 1143, 1143, 1143, 1143, 1143, -49, -49, -49,
	-49, -38, -1000, -1000, -1000, -1000, -1000, 1161, 1157, -1000,
	1143, 1143, 1143, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1151, 131, 1145, 1145, 1145, 1145, 1145, 160, 12341,
	1179, -1000, 21058, 6093, 1375, 6093, 87, 1153, -1000, -1000,
	21058, 21058, 1091, -1000, 21058, 1078, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 976, 974, -1000, -1000,
	-1000, -1000, -1000, -1000, 524, -1000, 795, 12341, -1000, -1000,
	-1000, 21058, 1389, 21058, 21058, 534, 496, 1040, -1000, 794,
	21058, -1000, 1075, -1000, 479, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 973,
	1381, 790, 124, -1000, 21058, 21058, 21058, 21058, 21058, 241,
	-1000, 1267, 12341, 12341, 7765, 12756, -1000, -1000, -1000, -1000,
	1372, -1000, 1393, 1415, -1000, 1276, 1273, 10265, -1000, -1000,
	438, 520, -1000, -1000, 726, -1000, -1000, -1000, -1000, 256,
	962, -1000, 2702, -1000, -1000, -1000, -1000, 700, 14001, 14001,
	14001, 1040, 2702, 2359, 1158, 740, 396, 1019, 1019, 393,
	393, 393, 393, 393, 717, 717, -1000, -1000, -1000, 839,
	-1000, -1000, -1000, 10265, -1000, 12341, -1000, 839, 959, -1000,
	959, -1000, 588, 799, 403, 1450, 959, 379, 1445, 959,
	959, 959, 10265, 602, -1000, 12341, 839, -1000, 1691, 1074,
	1071, 959, 839, 1062, 959, 959, -171, -171, 839, 959,
	839, 959, 959, -171, -171, -171, -171, 10265, 10265, 959,
	959, 959, 10265, 959, 959, 10265, 959, 959, 959, 959,
	10265, 959, 959, 959, 1009, 962, -1000, 21473, 18568, 18568,
	18568, 18568, 18568, -1000, 1253, 1250, -1000, 1247, 1246, 1255,
	16076, -1000, 969, 17738, -1000, 962, -1000, 15661, 273, 213,
	212, 205, -1000, -1000, -1000, 1441, 18568, 1031, -1000, 1031,
	-1000, 250, -1000, -1000, 1061, -116, -141, -1000, -1000, -1000,
	-1000, 496, -1000, 770, -1000, 248, 1060, 4839, -1000, -1000,
	-1000, -1000, 167, -1000, -1000, -1000, 1152, 963, -1000, 1295,
	353, 464, 869, 1283, -1000, -1000, 254, -85, -1000, -1000,
	639, -49, -49, 1143, 1143, 132, 1143, -1000, -49, -1000,
	-1000, -1000, 278, 1338, 278, 278, 278, 278, -49, 769,
	769, -1000, -1000, -1000, -1000, 635, -1000, 1151, -1000, 628,
	-1000, -1000, -1000, -1000, -1000, 710, 1215, 20643, 1135, 1388,
	-1000, -1000, -1000, 1461, -1000, -1000, 202, 204, -1000, 6093,
	21058, 6093, 6093, 1441, 961, 953, -1000, 496, 510, 534,
	1332, -1000, -1000, -1000, -1000, 14001, -1000, -1000, 201, 878,
	-1000, 139, 216, -1000, -1000, 954, 474, 560, 176, 176,
	-1000, 457, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 136, 1177, -1000, -1000, -1000, -1000, 21, 112, 1265,
	496, 496, -1000, -1000, 21058, -1000, -1000, -1000, -1000, 1104,
	-1000, -1000, -1000, 5675, 10265, -1000, 1040, 2702, 1709, -1000,
	14001, -1000, 839, 496, -1000, 10265, -1000, -1000, 725, 701,
	725, 14001, 14001, -1000, 14001, 14001, -1000, -205, -1000, 1102,
	465, -1000, 12341, 695, -1000, -1000, 14001, 14001, -1000, -1000,
	-1000, -1000, -1000, 18983, -1000, -171, -171, -171, -171, -171,
	-1000, -1000, -1000, -1000, 959, 959, -171, -171, -171, 959,
	-171, -171, 959, -171, -171, -171, -171, 959, -171, -171,
	-171, 1201, 21473, 962, -1000, 17322, 20643, 1092, 1234, 1150,
	1199, 1197, -1000, -1000, -1000, -1000, 1243, -1000, 1162, -1000,
	-1000, -1000, -1000, 20643, 14001, 273, -1000, 962, 962, 962,
	1416, 12341, 1031, -1000, -1000, 405, -1000, -1000, -140, -126,
	-1000, -1000, -1000, 7347, 5257, -1000, 5257, -1000, 20643, 162,
	-1000, 869, -1000, -1000, 869, -1000, -1000, -1000, 1146, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 543, 14001, 1480, -1000,
	1291, -1000, 1290, 764, -1000, -1000, 952, 278, 278, -49,
	-1000, -1000, 1143, -1000, 278, -1000, 435, -1000, -1000, -1000,
	-1000, 278, 951, -1000, 945, 1059, -1000, 942, 48, 21058,
	-1000, -1000, -1000, 1196, -1000, -1000, -1000, 919, 1058, -1000,
	3216, 939, 938, 936, 21058, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 534, -1000, 14001, 2702, -1000, -1000, -49, 21058,
	-1000, 820, -1000, 869, 442, -1000, -1000, -1000, 1283, -1000,
	-1000, 934, 933, -1000, 932, 931, 20643, 1284, 930, 21058,
	20643, -1000, -1000, 891, 920, 12341, -1000, 20643, -210, 914,
	20643, 20643, 20643, -1000, -1000, 1441, 18568, -1000, -1000, 839,
	-1000, 14001, 2702, -1000, -1000, 839, 1143, 1143, -1000, 1143,
	1145, -1000, 1143, -18, 1143, -27, 839, 839, 2469, 2425,
	2387, 2286, 962, -166, -1000, 496, 12341, 2159, 2143, -1000,
	316, -1000, -1000, -1000, -1000, -1000, -171, -171, -1000, -1000,
	-1000, -1000, -171, -1000, -1000, -171, -1000, -1000, -1000, -1000,
	-171, -1000, -1000, -1000, -1000, 1356, 1038, 1052, -1000, -1000,
	9850, 839, 929, 244, 925, -1000, 1416, -1000, -1000, 12341,
	1144, -1000, 12341, -1000, -1000, -1000, 925, 761, -1000, 20643,
	20643, 20643, 1412, 496, -1000, -1000, -1000, -1000, 4839, -1000,
	918, -1000, 1143, -1000, 1283, -1000, -1000, 20643, -1000, 2702,
	-89, -1000, -1000, -1000, -1000, -1000, -1000, 278, -1000, -1000,
	-1000, -1000, -1000, -49, 754, -49, 626, -1000, 624, -1000,
	-1000, -236, 1141, -1000, 1135, 21058, 69, 202, -1000, 3216,
	3216, 3216, -1000, -1000, 2702, -103, -1000, 891, 156, 3216,
	-1000, 1179, 353, 162, -1000, -1000, -1000, -1000, -1000, 893,
	346, -1000, 203, 156, 891, 496, 1358, -1000, 7347, -1000,
	-1000, 1140, 1181, -1000, 1439, 1055, -1000, 2702, -1000, -1000,
	121, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14001,
	14001, 14001, 14001, 14001, 839, 748, 496, 14001, 14001, 839,
	1429, -1000, -1000, -1000, -1000, -1000, 1280, -1000, 962, -1000,
	-1000, 1167, 20643, 20643, -1000, 20643, 1412, 496, 20643, 496,
	14416, -1000, 16076, 912, -1000, 912, 912, -1000, 437, 20643,
	1380, 909, -1000, -1000, 278, -1000, 278, 906, 899, -1000,
	20643, -1000, 1405, -1000, 69, -1000, 738, 46, 51, -1000,
	32, 31, 28, 26, 23, -1000, -1000, -1000, -1000, 1323,
	1306, 875, -1000, -1000, 886, -1000, 1134, 869, -1000, -1000,
	833, -1000, -1000, 20643, -1000, 156, 962, 1054, -1000, 460,
	20643, 21058, 1436, 1428, -1000, -1000, 1691, 1691, 1691, 1691,
	125, -1000, -1000, 1691, 1691, -1000, 12341, 1479, -1000, 962,
	-1000, 1135, 234, -1000, -1000, -1000, 905, -1000, 273, 20643,
	-1000, -1000, -1000, 437, -1000, 829, 457, 728, -1000, -1000,
	145, -1000, -1000, -1000, -1000, 902, -1000, 72, 2588, -1000,
	-1000, -1000, -1000, -1000, -1000, 1327, 1326, 78, 199, 1298,
	1300, 1422, -1000, -1000, -1000, 254, 20643, 1179, -1000, -1000,
	-1000, -1000, 135, 7347, 5257, 898, -1000, -1000, 12756, 12756,
	-1000, -1000, -1000, -1000, 839, 130, -214, -1000, -1000, 1076,
	21473, 1052, 839, 20643, -1000, -1000, -1000, -1000, -1000, 598,
	-1000, 21058, 437, 67, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12341, 12341, 2588,
	-1000, -1000, -1000, -1000, 1110, 570, 1306, 1420, 1308, 1303,
	-1000, 722, -1000, 874, 1109, -1000, 863, -1000, 20643, -1000,
	-1000, 1177, -1000, 496, -1000, 1051, -1000, 496, -1000, -1000,
	1264, -208, -218, 839, 1050, -1000, -1000, -1000, 1108, -1000,
	437, 82, -1000, 567, 619, -294, -1000, -1000, 20643, 1313,
	-1000, 696, -1000, 1417, 1414, -1000, 437, 20643, -1000, 135,
	1272, -210, 12756, -1000, 1257, -1000, -1000, 20643, -1000, 816,
	719, 569, -1000, 12341, 271, 518, 845, -1000, -1000, 662,
	653, -1000, 842, -1000, 127, -1000, -1000, -211, 838, 175,
	-1000, -1000, 525, 271, -1000, 580, -295, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 271, -1000, -1000,
	-1000, -1000, -1000, 437, 123, -215, 1186, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -296, 271, 625, -297, -1000, 962,
	-219, 1185, 1184, 1467, -1000, 793, -298, 184, 271, 634,
	-1000, -1000, 12341, 631, 13171, -1000, -1000, 1478, -1000, 1475,
	357, 357, 507, 271, -1000, -300, 183, 271, -1000, 447,
	-1000, 1691, 839, -1000, -1000, -1000, 153, 597, -1000, -1000,
	592, -1000, -301, 271, -1000, -1000, -1000, -1000, -1000, 180,
	482, -303, -1000, 177, 271, -1000,
}
var yyPgo = [...]int{

	0, 1770, 188, 657, 1769, 1767, 1766, 16, 14, 11,
	26, 1765, 1554, 1548, 1546, 1541, 1763, 1534, 5, 2,
	35, 34, 29, 36, 1762, 6, 1761, 1757, 19, 1756,
	7, 82, 1755, 1754, 1753, 1750, 1748, 1525, 1747, 1746,
	1745, 1744, 1743, 1523, 1521, 1742, 1741, 1516, 1512, 1740,
	1739, 1504, 1501, 1495, 1738, 134, 1737, 1732, 1730, 110,
	1729, 112, 1727, 1726, 1724, 81, 1869, 84, 85, 523,
	1717, 18, 1716, 75, 105, 91, 1713, 71, 1712, 1711,
	115, 1710, 1708, 1706, 90, 1705, 1704, 2605, 1703, 1699,
	113, 1698, 53, 45, 73, 1697, 1696, 1695, 1694, 1692,
	102, 97, 1691, 1690, 1688, 64, 1687, 1685, 133, 1684,
	1681, 1680, 104, 51, 1679, 44, 47, 57, 1678, 1206,
	32, 1677, 99, 1675, 1672, 1671, 1670, 1669, 42, 1668,
	46, 1667, 103, 80, 96, 13, 49, 55, 93, 1666,
	20, 1663, 101, 76, 69, 37, 108, 1662, 109, 106,
	1661, 1660, 785, 1659, 1658, 89, 1657, 67, 79, 1655,
	714, 119, 68, 1653, 1652, 1650, 1646, 66, 87, 1642,
	1641, 41, 383, 122, 1394, 10, 1886, 33, 111, 1640,
	43, 1639, 2916, 117, 56, 77, 1638, 1634, 72, 58,
	40, 1633, 1632, 1631, 1630, 1628, 1625, 644, 1624, 1623,
	1622, 1616, 116, 142, 1613, 1612, 100, 70, 1611, 1610,
	1609, 1608, 1607, 83, 59, 107, 1606, 92, 86, 65,
	1605, 1604, 1600, 1599, 50, 39, 1598, 1594, 1593, 78,
	25, 1591, 52, 28, 23, 54, 9, 62, 60, 1589,
	24, 1588, 38, 1587, 21, 1584, 22, 88, 3, 4,
	8, 1583, 1579, 1578, 1574, 1569, 63, 1566, 1562, 48,
	1559, 1556, 1550, 31, 1528, 1519, 1514, 1506, 0, 178,
	120, 1497, 1493, 125,
}
var yyR1 = [...]int{

	0, 266, 267, 267, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 54,
	2, 2, 2, 6, 3, 4, 4, 5, 5, 7,
	7, 58, 58, 8, 9, 9, 9, 9, 270, 270,
	82, 82, 80, 80, 81, 81, 142, 142, 10, 10,
	10, 10, 146, 146, 149, 149, 149, 150, 150, 150,
	150, 186, 186, 135, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 254, 254, 255, 255, 256, 256, 256,
	256, 257, 257, 258, 258, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 26, 26,
	170, 170, 35, 35, 36, 36, 36, 131, 131, 131,
	11, 11, 11, 11, 11, 18, 20, 20, 27, 27,
	28, 21, 21, 21, 21, 29, 29, 30, 22, 22,
	34, 34, 32, 32, 31, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 17, 253, 253,
	253, 25, 25, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 246, 246, 245, 244, 244, 243, 243, 242,
	41, 226, 227, 227, 227, 227, 227, 227, 227, 227,
	214, 215, 190, 190, 190, 190, 190, 190, 190, 189,
	189, 189, 189, 193, 193, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 192, 192, 192, 192, 192, 192,
	192, 192, 194, 194, 194, 194, 194, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 196, 196, 196, 196, 196, 196, 196, 196,
	213, 213, 197, 197, 206, 206, 207, 207, 207, 204,
	204, 205, 205, 208, 208, 200, 201, 209, 202, 202,
	202, 203, 203, 203, 212, 212, 212, 212, 198, 216,
	216, 236, 236, 235, 235, 234, 234, 234, 225, 225,
	231, 231, 231, 231, 231, 220, 220, 220, 219, 219,
	221, 221, 224, 224, 233, 233, 232, 217, 217, 237,
	237, 237, 237, 237, 218, 218, 238, 222, 222, 223,
	223, 223, 249, 250, 248, 248, 248, 248, 248, 97,
	97, 97, 228, 228, 228, 229, 229, 229, 230, 230,
	230, 251, 251, 37, 37, 37, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 130, 130, 130,
	39, 40, 40, 40, 40, 40, 40, 40, 40, 168,
	168, 247, 247, 247, 241, 239, 239, 240, 240, 13,
	42, 42, 14, 14, 14, 14, 14, 14, 14, 15,
	15, 43, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 70, 156, 156, 154, 154,
	157, 157, 155, 155, 155, 158, 158, 158, 159, 159,
	187, 187, 187, 45, 45, 50, 50, 53, 51, 52,
	169, 169, 48, 48, 49, 49, 49, 49, 64, 64,
	271, 271, 47, 47, 46, 46, 46, 46, 16, 272,
	55, 56, 56, 57, 57, 57, 61, 61, 61, 59,
	59, 59, 60, 60, 67, 67, 66, 66, 68, 68,
	68, 68, 133, 133, 133, 134, 134, 179, 179, 179,
	178, 178, 178, 178, 72, 72, 73, 73, 74, 74,
	75, 75, 75, 75, 91, 91, 92, 92, 92, 92,
	92, 103, 103, 141, 141, 140, 140, 143, 143, 76,
	76, 76, 76, 77, 77, 78, 78, 79, 79, 167,
	167, 184, 184, 184, 83, 83, 83, 85, 84, 84,
	84, 84, 86, 86, 88, 89, 89, 87, 87, 90,
	93, 93, 93, 93, 94, 94, 69, 69, 69, 69,
	69, 69, 69, 153, 153, 96, 96, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 111, 111, 111,
	111, 111, 111, 98, 98, 98, 98, 98, 98, 98,
	65, 65, 112, 112, 112, 119, 113, 113, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 106, 106, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 273, 273, 108, 107, 107, 107,
	107, 107, 107, 62, 62, 62, 62, 62, 185, 185,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 123, 123, 63, 63, 121, 121, 122,
	124, 124, 120, 120, 120, 100, 100, 100, 100, 100,
	100, 100, 100, 102, 102, 102, 125, 125, 114, 114,
	71, 71, 126, 126, 127, 127, 128, 128, 129, 129,
	132, 132, 136, 136, 136, 137, 137, 137, 137, 138,
	138, 138, 99, 99, 99, 99, 99, 99, 139, 139,
	139, 139, 144, 144, 115, 115, 117, 117, 116, 118,
	145, 145, 148, 148, 148, 148, 147, 147, 147, 181,
	181, 181, 151, 151, 160, 160, 161, 161, 152, 152,
	199, 199, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 166, 166, 165, 165, 165, 162, 162, 162, 163,
	163, 180, 180, 176, 176, 177, 177, 182, 182, 183,
	183, 252, 252, 210, 210, 262, 262, 211, 211, 263,
	263, 265, 265, 260, 260, 261, 261, 264, 264, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	268, 269, 171, 172, 172, 172,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 1, 3,
	0, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 1, 2, 2, 3, 1, 0, 3,
	3, 0, 2, 2, 2, 1, 2, 1, 2, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 1, 5, 1, 1, 0,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 0, 2, 1, 1, 1, 6, 10, 9, 7,
	7, 7, 9, 7, 12, 14, 7, 7, 7, 9,
	9, 10, 5, 6, 6, 8, 7, 0, 1, 2,
	4, 7, 5, 5, 5, 12, 7, 5, 9, 0,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 4, 4, 4, 4, 4, 3,
	2, 3, 4, 4, 3, 6, 6, 4, 4, 4,
	4, 4, 4, 3, 3, 2, 6, 2, 4, 4,
	4, 3, 7, 6, 5, 4, 2, 4, 3, 4,
	3, 3, 5, 2, 3, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 1, 3, 1, 2,
	3, 5, 2, 4, 7, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 1, 3, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 3, 2, 1, 1, 3, 3,
	0, 5, 5, 5, 0, 2, 1, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 9, 4, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 1, 0, 2, 1, 1, 0, 3, 1, 3,
	2, 2, 0, 1, 1, 0, 2, 4, 4, 0,
	2, 4, 2, 1, 3, 5, 4, 6, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -266, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -54, -3, -4, 6,
	7, -58, 9, 10, 30, -41, 129, -38, -39, -40,
	132, 131, 168, 133, 161, 63, 214, -53, 217, 218,
	-271, -169, 166, 167, 31, 32, 135, 212, 20, 37,
	-268, 8, 309, 130, 215, 163, 162, 26, 67, -267,
	424, -128, 15, -57, 5, -55, -272, -55, -55, -55,
	-55, -55, -226, 104, 67, -163, 142, 85, 300, 138,
	-170, 139, -162, 190, 44, 149, 148, 139, 139, 140,
	142, 300, 138, 176, 175, 139, -87, -182, 70, -174,
	351, 152, 366, 367, 130, 187, 214, 225, 219, 253,
	241, 352, 368, 153, 207, 137, 239, 242, 287, 151,
	200, 369, 274, 282, 210, 79, 217, 296, 370, 154,
	204, 206, 205, 195, 211, 36, 164, 237, 230, 190,
	371, 359, 228, 28, 185, 372, 284, 258, 373, 356,
	283, 233, 229, 135, 374, 155, 149, 178, 375, 259,
	263, 376, 288, 377, 378, 379, 141, 223, 224, 380,
	191, 290, 257, 33, 150, 353, 48, 173, 291, 38,
	261, 37, 273, 381, 256, 251, 382, 383, 384, 385,
	255, 222, 250, 202, 52, 136, 265, 264, 266, 203,
	286, 246, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 189, 399, 234, 146,
	400, 175, 401, 355, 402, 292, 227, 403, 157, 172,
	166, 295, 404, 405, 406, 407, 158, 408, 409, 410,
	218, 276, 208, 411, 412, 413, 414, 199, 184, 298,
	289, 51, 212, 270, 415, 221, 148, 213, 416, 215,
	43, 181, 7, 201, 277, 209, 248, 174, 417, 418,
	235, 236, 254, 220, 249, 216, 176, 177, 168, 419,
	297, 271, 357, 50, 243, 240, 182, 247, 420, 142,
	179, 180, 421, 278, 279, 183, 354, 293, 238, 272,
	139, 122, 242, 287, 129, 275, 276, 284, -220, 285,
	175, 178, -187, 139, -154, 274, 278, 279, 183, 70,
	140, 141, 33, 289, 288, 280, -182, -64, 133, 169,
	-87, -171, -171, -171, 277, 277, -171, -34, 213, 70,
	36, -2, -152, 142, 279, 144, 216, -137, 17, 16,
	-5, -3, -268, 6, 21, 22, -61, 53, 54, -56,
	-68, 113, -69, -182, -95, 87, -101, 29, 70, -174,
	24, -100, -96, -120, -118, -119, 122, 123, 124, 111,
	112, 119, 88, 125, -106, -104, -105, -107, -109, -110,
	72, 71, 80, 73, 74, 75, 76, 81, 82, 83,
	-176, -116, -268, 57, 58, 138, 310, 311, 312, 313,
	350, 159, 314, 90, 47, 299, 308, 307, 306, 304,
	305, 301, 303, 302, 316, 317, 145, 300, 117, 309,
	339, 340, 341, 342, 343, 344, 345, 346, 348, 349,
	347, 329, 322, 323, 324, 325, 326, 327, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, -152, -152,
	11, -80, -81, -87, -90, -182, -145, -186, 216, -148,
	289, 288, -120, -147, -176, -182, 287, 242, 286, -87,
	-227, -215, -218, -177, 154, -238, -176, -173, 151, 70,
	-174, 134, 160, 86, 358, 23, 25, 268, 322, 89,
	122, 323, 324, 325, 16, 20, 90, 121, 310, 326,
	129, 61, 301, 303, 299, 300, 275, 29, 10, 26,
	162, 194, 22, 115, 131, 93, 94, 95, 165, 24,
	163, 83, 159, 19, 64, 11, 13, 320, 321, 14,
	145, 144, 106, 192, 140, 59, 8, 125, 27, 103,
	55, 327, 328, 362, 45, 363, 57, 104, 17, 304,
	305, 31, 350, 329, 170, 364, 330, 117, 197, 62,
	49, 87, 81, 34, 84, 65, 85, 15, 193, 60,
	318, 196, 365, 105, 132, 309, 58, 138, 6, 315,
	30, 161, 333, 332, 331, 334, 198, 56, 312, 313,
	335, 422, 139, 92, 316, 317, 143, 82, 5, 44,
	32, 9, 63, 66, 306, 307, 308, 47, 337, 336,
	338, 91, 12, 319, 140, -87, 309, -161, 145, -161,
	176, 175, -161, 96, -42, -87, -160, 145, -176, -160,
	-160, -160, -160, -160, -87, 126, -87, 70, 30, -172,
	-268, -177, 300, 138, 70, 175, 178, 139, 176, 142,
	-172, -172, -222, 11, 106, 181, 181, 181, 182, -172,
	-157, -156, 177, 282, 283, 277, 281, 12, -70, 104,
	182, 277, 180, -172, -49, -2, -9, -7, -8, -2,
	96, -171, -171, 30, 72, 50, -253, 67, -210, 273,
	-269, 69, 139, -87, 129, 131, 134, 65, -138, 19,
	31, -69, -182, -129, -132, -69, -175, 322, 323, 324,
	325, 326, 339, 340, 341, 327, 328, 342, 343, 344,
	329, 330, 345, 346, 348, 349, 347, 333, 332, 331,
	334, 335, 337, 336, 338, -128, -2, -55, 49, -59,
	21, 22, 78, 11, -179, 86, 85, 103, -178, 23,
	70, -174, -175, 72, 322, 323, 324, 325, 326, 339,
	340, 341, 327, 328, 342, 343, 344, 329, 330, 345,
	346, 348, 349, 347, 333, 332, 331, 334, 335, 337,
	336, 338, 126, -69, -98, 106, 87, 104, 105, 89,
	108, 107, 118, 111, 112, 113, 114, 115, 116, 117,
	109, 110, 121, 96, 97, 98, 99, 100, 101, 102,
	-153, -268, -119, -268, 127, 128, -101, -101, -101, -101,
	-101, -101, -101, -101, -268, -2, -113, -69, -268, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -123,
	-69, -268, -273, -108, -268, -273, -108, -273, -108, -273,
	-268, -273, -108, -273, -108, -273, -273, -108, -273, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -268, -268, -268, -268, -268, -268, -268,
	-268, -268, -268, -89, 27, -87, -73, -74, -75, -76,
	-91, -119, -268, -87, -87, -80, -270, 68, 11, 66,
	-270, 68, 126, 68, -145, 216, -146, -149, 290, 292,
	96, -181, -176, 72, 29, 126, 30, 69, 68, -218,
	154, 151, -189, -193, -195, -194, -196, -191, -192, 239,
	242, 246, 244, 240, 245, 122, 243, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 30, 164,
	235, 236, 237, 238, 259, 260, 261, 262, 263, 264,
	265, 266, 219, 241, 352, 220, 221, 222, 223, 224,
	225, 227, 228, 229, 230, 231, 232, 233, 70, 67,
	-176, 23, 142, 70, 87, 70, 70, 70, -87, 70,
	68, 143, -80, 24, 65, -82, -87, 70, 70, 70,
	70, -183, -182, -173, -172, -172, -161, -161, -172, -172,
	-172, -87, -87, -87, -87, -158, 104, 12, -158, -172,
	-172, 11, -155, 11, 106, -155, -69, -101, -159, 104,
	65, 70, -32, -31, -33, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 72, 69, -113,
	-252, 423, -87, -172, 179, 179, 139, 139, 184, -87,
	9, 106, 68, 18, 126, 68, -136, 25, 26, -136,
	-137, -269, -61, -102, 50, 73, 76, -60, 56, -87,
	-69, -69, -111, 81, 87, 82, 83, -178, 113, -183,
	-177, -173, -101, -112, -116, -119, 77, 106, 104, 105,
	89, -101, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -101, -101, -101, -101, -101, -185, 70, 72, 70,
	-100, -100, -176, -59, -269, 68, -269, -2, -66, -68,
	-66, -269, -69, -69, -120, 72, -66, -120, 72, -66,
	-66, -66, -59, -121, -122, 91, -120, -269, -101, -176,
	-176, -66, -67, -66, -66, -66, -269, -269, -68, -66,
	-68, -66, -66, -269, -269, -269, -269, -59, -59, -66,
	-66, -66, -59, -66, -66, -59, -66, -66, -66, -66,
	-59, -66, -66, -66, -142, 171, -87, 30, 68, -83,
	-85, -84, -86, 55, 59, 61, 56, 57, 58, 62,
	-167, 23, -73, -268, -92, 171, -93, 23, -184, 63,
	144, 64, -182, -175, 72, -142, 66, -73, -87, -73,
	-90, -182, 113, -148, -146, 68, 291, 293, 294, 65,
	84, -69, -203, 121, -177, -183, -228, -229, -230, -177,
	72, 73, -215, -216, -217, -218, -231, 154, -237, 146,
	148, 44, -219, 155, 140, 45, -190, -204, 271, -197,
	67, -197, -197, 247, 239, 242, 240, -197, -197, -197,
	-197, -197, -202, 242, -202, -202, -202, -202, 240, 67,
	67, -197, -197, -197, -206, 67, -206, 234, -207, 67,
	-207, -207, -207, -207, -238, -69, -180, 66, -135, -87,
	-172, 24, -172, -35, 187, 160, 67, -87, -87, -87,
	68, 70, 70, -223, 11, 106, 72, -69, -87, -103,
	23, -182, -182, -158, -65, 165, 72, -87, 68, 96,
	69, -88, 27, 72, -164, 134, 131, 132, 136, 137,
	-241, 268, 130, 242, 79, 29, 15, 310, 171, 357,
	70, 172, -87, -87, -87, -87, -87, 134, 131, 51,
	-69, -69, -132, -138, -151, 19, 11, 47, 47, -66,
	81, 82, 83, 126, -268, -112, -101, -101, -101, -65,
	86, -269, -67, -69, -269, 68, -269, -269, 68, 66,
	23, 11, 11, -269, 11, 11, -269, -269, -269, -66,
	-124, -122, 93, -69, -269, -269, 68, 68, -269, -269,
	-269, -269, -133, 318, -133, -269, -269, -269, -269, -269,
	-133, -133, -133, -133, -66, -66, -269, -269, -269, -66,
	-269, -269, -66, -269, -269, -269, -269, -66, -269, -269,
	-269, -99, 30, 47, -2, -268, -268, -145, -74, -75,
	-75, -74, -75, 55, 55, 55, 60, 55, 60, 55,
	-84, -184, -269, -268, 34, -184, -93, 140, 140, 140,
	-94, 12, -73, -94, -94, 126, -149, -150, 295, 292,
	298, 70, 72, 126, 68, -230, 96, -218, 67, 70,
	45, -219, 140, 45, -219, -224, 70, -224, 45, -208,
	-200, -201, -209, -212, -198, 81, 87, 29, 65, 268,
	146, 45, 44, 79, -205, 272, 73, -202, -202, -197,
	-197, -197, 247, -197, -202, -203, 30, -203, -203, -203,
	-203, -202, -213, 72, -213, 73, -206, 73, 69, 65,
	-176, -2, 23, -36, 8, 9, 10, -254, -255, -256,
	70, 106, 192, 193, 143, -172, -87, -172, -172, -94,
	70, 70, -155, -158, 34, -101, -31, -100, -142, 139,
	-171, -168, -247, -219, -251, -217, -218, 147, 155, 146,
	171, 154, -168, -247, 154, 151, -219, 155, 147, -165,
	-219, 143, 23, -168, -168, -225, 96, 171, -246, 66,
	179, 268, 179, 52, -87, -72, 11, 113, -177, -67,
	-65, 86, -101, -269, -68, -188, 122, 239, 164, 237,
	230, 257, 244, 270, 235, 271, -185, -188, -101, -101,
	-101, -101, 351, -128, 95, -69, 92, -101, -101, -176,
	-268, -133, -133, -133, -133, -133, -269, -269, -134, -133,
	-134, -134, -269, -134, -134, -269, -134, -134, -134, -134,
	-269, -134, -134, -134, -144, 65, -145, -115, -117, -116,
	-268, -2, -139, -176, -143, -176, -94, -78, -77, 65,
	66, -79, 65, -77, 55, 55, -143, -101, -93, -268,
	-268, -268, -128, -69, -94, 292, 296, 297, -229, -230,
	-233, -232, -176, -237, 155, -224, -224, 67, 81, -101,
	9, 45, 45, 72, 69, -203, -203, -202, -197, -203,
	70, 122, -203, 69, 68, 69, 68, 69, 68, -97,
	372, 87, -87, -135, -135, 65, 69, 68, -189, 70,
	70, 70, -87, -158, -101, -202, -87, 67, -214, 70,
	-171, -224, -162, 70, 70, -171, 70, 70, -176, 45,
	70, -87, -176, -214, 70, -69, -176, -244, 354, -245,
	70, -176, -176, -176, -94, -73, -269, -101, -269, -197,
	-197, -197, -207, -197, 224, -197, 224, -269, -269, 19,
	19, 19, 19, -268, -63, 315, -69, 68, 68, -128,
	171, -134, -134, -134, -134, -134, 28, -144, 68, -269,
	-269, -269, 68, 126, -269, 68, -128, -69, 67, -69,
	-269, -93, -167, -140, -176, -140, -140, -137, 69, 68,
	-197, -140, -105, -203, -202, 72, -202, 73, 73, 372,
	67, -2, -87, -257, -258, -259, 79, 353, 87, 194,
	195, 156, 196, 197, 198, -256, -189, -189, -189, -260,
	-157, -214, -130, 159, 160, -189, -180, -221, -219, 70,
	-166, 143, 23, 143, -130, -214, 27, -243, -242, -177,
	67, 66, -125, 13, -202, 70, -101, -101, -101, -101,
	-101, -269, 72, -101, -101, -269, 16, 45, -117, 47,
	-2, -268, -176, -176, -176, -137, -140, -92, -184, 68,
	-269, -269, -269, -235, -234, 66, 150, 79, -232, -136,
	69, -203, -203, 69, 69, -233, -135, 19, -135, -259,
	72, 198, 194, 198, 198, 198, 198, 199, -261, 38,
	-263, 39, 69, -171, 70, -190, 67, -224, 70, -176,
	-171, -130, -268, 68, 96, -140, -87, -126, 14, 16,
	-269, -269, -269, -269, -62, 106, 354, -269, -269, -113,
	9, -115, -2, 126, 69, -93, -176, -234, 70, -225,
	72, 157, 69, 185, -23, -2, -7, -8, -9, -10,
	-12, -37, -13, -14, -20, -21, -15, -43, -44, -53,
	-51, -52, -48, -47, -22, -17, -24, 90, 145, 214,
	36, 36, 190, 191, -199, 144, -264, 43, -262, -211,
	42, 16, -171, -233, -180, -171, -239, -240, 171, -242,
	-230, 69, -127, -69, -175, -114, -71, -69, -175, -269,
	352, 62, 355, -128, -145, -269, -176, 73, -87, -236,
	-235, 186, -135, -69, -69, -26, -23, -141, 67, 73,
	-263, 16, -265, 40, 41, 72, 69, 67, -269, 68,
	-176, -246, 68, 52, 353, 356, -269, 67, -131, 188,
	189, -27, -28, 91, 92, 424, -140, 38, 72, 16,
	16, -236, -233, -240, 47, -244, -71, 52, -140, -135,
	70, 70, 95, 93, -28, -69, -25, -19, -2, -7,
	-8, -9, -10, -20, -21, -22, -18, 214, 95, -23,
	69, 72, 72, 69, 173, 354, 69, -11, -18, -10,
	-7, -8, -9, 90, -25, 92, 424, -25, -236, 174,
	355, -249, -250, 65, -135, 424, -25, 95, 93, -29,
	-19, -30, 94, 424, -268, 356, -250, 65, -249, 65,
	10, 9, 95, 424, 145, -25, 95, 93, -30, -69,
	95, -101, 170, -248, 158, 153, 156, 30, -248, 90,
	424, 145, -25, 92, -269, -269, 152, 29, 81, 95,
	424, -25, 145, 95, 424, 145,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 806, 0, 509,
	509, 509, 509, 509, 509, 0, -2, 373, 374, 375,
	0, 0, 0, 0, -2, 484, 485, 486, 488, 489,
	498, -2, 1282, 1282, 0, 0, 1282, 0, 0, 0,
	0, 41, 42, 858, 0, 501, 490, 491, 1280, 1,
	3, 815, 0, 0, 513, 516, 511, 0, 858, 858,
	0, 0, 74, 0, 0, 0, 0, 0, 856, 856,
	0, 856, 880, 0, 876, 877, 878, 0, 854, 0,
	854, 854, 854, 854, 854, 0, 430, 597, 887, 888,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	0, 0, 0, 1283, 0, 1283, 1283, 445, 0, 447,
	0, 0, 0, 1283, 0, 456, 0, 0, 463, 1283,
	325, 326, 327, 481, 482, 469, 483, 0, 0, 0,
	502, 503, 504, 505, 1282, 1282, 508, 158, 0, 178,
	893, 35, 0, 0, 0, 859, 487, 819, 0, 0,
	806, 37, 0, 509, 514, 515, 519, 517, 518, 510,
	0, 528, 537, 0, 606, 0, 611, 613, -2, -2,
	0, 648, 649, 650, 651, 652, 0, 0, 0, 0,
	0, 0, 0, 0, 676, 677, 678, 679, 680, 681,
	785, 786, 787, 788, 789, 790, 791, 792, 615, 616,
	782, 839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 0, 744, 744, 744, 744, 744,
	744, 744, 744, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 597, 58, 0, 1227, 840,
	-2, -2, 0, 0, 782, 0, -2, 1059, -2, 75,
	0, 202, 203, 0, 1071, 345, 885, 886, 1061, 883,
	884, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 431, 1283, 1283, 434,
	1284, 1285, 856, 856, 1283, 1283, 1283, 0, 0, 0,
	443, 444, 0, 347, 348, 475, 475, 1283, 1283, 451,
	0, 472, 472, 470, 471, 466, 467, 0, 458, 0,
	478, 460, 461, 464, 492, -2, 495, 496, 497, -2,
	0, 506, 507, 0, 160, 0, 177, 0, 891, 894,
	36, 1281, 0, 1283, 0, 0, 0, 0, 30, 0,
	0, 816, 0, 807, 808, 812, 812, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 815, 35, 516, 0, 522,
	520, 521, 512, 0, 529, 0, 0, 0, 538, 0,
	540, 541, 542, 543, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 0, 609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 633, 634, 635, 636, 637, 638, 639,
	612, 0, 626, 0, 0, 0, 668, 669, 670, 671,
	672, 673, 674, 0, 519, 35, 0, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 0,
	774, 0, 727, 736, 0, 728, 737, 729, 738, 730,
	0, 731, 739, 732, 740, 733, 734, 741, 735, 0,
	0, 0, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 519, 0, 0,
	0, 519, 0, 0, 519, 0, 0, 0, 0, 519,
	0, 0, 0, 56, 0, 596, 0, 546, 548, 549,
	550, -2, 0, 600, -2, 0, 0, 0, 48, 49,
	0, 0, 0, 0, 59, 1227, 61, 62, 0, 0,
	0, 301, 849, 850, 851, 0, 847, 362, 0, 204,
	0, 0, 212, 289, 220, 221, 222, 282, 224, 282,
	282, 0, 282, 282, 282, 282, 282, 298, 298, 298,
	298, 298, 265, 266, 267, 268, 269, 0, 0, 242,
	282, 282, 282, 246, 272, 273, 274, 275, 276, 277,
	278, 279, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 284, 284, 286, 286, 286, 286, 286, 0, 0,
	881, 73, 0, 1283, 0, 1283, 0, 0, 200, 131,
	0, 0, 422, 855, 0, 424, 50, 425, 426, 427,
	428, 598, 889, 890, 432, 433, 0, 0, 437, 438,
	439, 440, 441, 442, 349, 448, 0, 0, 449, 450,
	455, 0, 561, 0, 0, 475, 457, 640, 459, 0,
	0, 499, 159, 162, 0, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 161, 179, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	820, 0, 0, 0, 0, 0, 810, 813, 814, 811,
	819, 38, 519, 0, 793, 0, 0, 0, 523, 33,
	607, 608, 610, 627, 0, 629, 631, 539, 530, 0,
	783, -2, 617, 618, 642, 643, 644, 0, 0, 0,
	0, 640, 622, 0, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 667, 758, 759, 0,
	665, 666, 675, 524, 645, 0, 838, 35, 0, 526,
	0, 714, 0, 0, 650, 785, 0, 650, 785, 0,
	0, 0, 0, 780, 777, 0, 0, 745, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 0, 0, 0,
	0, 0, 0, 584, 0, 0, 587, 0, 0, 0,
	0, 580, 0, 0, 554, 1161, 556, 0, 600, 0,
	0, 0, 581, 582, 583, 604, 0, 604, 53, 604,
	55, 0, 599, 841, 60, 0, 0, 65, 66, 842,
	843, 844, 845, 0, 783, 0, 201, 363, 365, 368,
	369, 370, 205, 207, 208, 209, 0, 1071, 338, 1171,
	1208, -2, 332, 1097, -2, -2, 211, 291, 290, 223,
	0, 298, 298, 282, 282, 282, 282, 251, 298, 254,
	257, 258, 301, 0, 301, 301, 301, 301, 298, 0,
	0, 243, 244, 245, 234, 0, 235, 284, 237, 0,
	238, 239, 240, 241, 344, 0, 0, 0, 0, 0,
	79, 857, 80, 0, 132, 133, 83, 0, 420, 1283,
	0, 1283, 1283, 604, 0, 0, 476, 477, 472, 475,
	0, 473, 474, 454, 465, 0, 479, 462, 0, 0,
	180, 56, 0, 892, 1282, -2, 409, 873, 409, 409,
	392, 318, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 0, 192, 402, 404, 403, 407, 0, 0, 0,
	817, 818, 809, 31, 0, 852, 853, 794, 795, 544,
	628, 630, 632, 0, 524, 619, 640, 623, 0, 620,
	0, 614, 0, 647, -2, 0, 712, 713, 0, 0,
	0, 0, 0, 751, 0, 0, 752, 0, 723, 806,
	0, 778, 0, 0, 726, 746, 0, 0, 747, 748,
	749, 750, 701, 0, 702, 0, 0, 0, 0, 0,
	708, 709, 710, 711, 0, 0, 535, 535, 535, 0,
	535, 535, 0, 535, 535, 535, 535, 0, 535, 535,
	535, 832, 0, 0, -2, 0, 0, 604, 547, 575,
	577, 0, 572, 585, 586, 588, 0, 590, 0, 592,
	593, 551, 553, 0, 0, 600, 560, 0, 0, 0,
	806, 0, 604, 46, 47, 0, 63, 64, 0, 0,
	70, 302, 303, 0, 0, 366, 0, 206, 0, 0,
	320, 332, 328, 329, 332, 323, 333, 324, 0, 213,
	214, 215, 216, 217, 218, 293, 0, 0, 0, 297,
	0, 305, 307, 0, 219, 292, 0, 301, 301, 298,
	249, 250, 282, 255, 301, 259, 0, 260, 261, 262,
	263, 301, 0, 280, 0, 0, 236, 0, 359, 0,
	882, -2, 73, 0, 134, 135, 136, 0, 84, 85,
	0, 0, 0, 0, 0, 423, 51, 435, 436, 446,
	350, 351, 475, 453, 0, 641, 163, 164, 298, 0,
	376, 0, 1282, 332, 0, 393, 394, 410, 411, 412,
	413, 0, 0, 1282, 0, 0, 0, 411, 0, 0,
	0, 874, 875, 0, 0, 0, 319, 0, 195, 0,
	0, 0, 0, 821, 32, 604, 0, 531, 784, 0,
	621, 0, 624, 682, 527, 0, 282, 282, 763, 282,
	286, 766, 282, 768, 282, 771, 0, 0, 0, 0,
	0, 0, 0, 775, 725, 781, 0, 0, 0, 532,
	806, 703, 704, 705, 706, 707, 535, 535, 686, 536,
	687, 688, 535, 690, 691, 535, 693, 694, 695, 696,
	535, 698, 699, 700, 39, 0, 832, 822, 834, 836,
	0, 35, 0, 828, 0, 567, 806, 569, 576, 0,
	0, 570, 0, 571, 589, 591, 0, -2, 559, 0,
	0, 0, 815, 605, 45, 67, 68, 69, 364, 367,
	0, 334, 282, 337, 0, 321, 322, 0, 294, 295,
	0, 304, 306, 308, 283, 247, 248, 301, 256, 252,
	299, 300, 264, 298, 0, 298, 0, 287, 0, 346,
	360, 0, 0, 77, 0, 0, 91, 0, 87, 0,
	0, 0, 421, 452, 562, 903, 594, 0, 397, 0,
	379, 881, 330, 372, 380, 381, 386, 387, 388, 0,
	0, 383, 0, 397, 0, 396, 0, 401, 0, 193,
	194, 0, 0, 406, 796, 545, 683, 625, 715, 760,
	298, 764, 765, 767, 769, 770, 772, 717, 716, 0,
	0, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	0, 684, 685, 689, 692, 697, 0, 40, 0, 837,
	-2, 0, 0, 0, 57, 0, 815, 573, 0, 578,
	600, 557, 0, 0, 565, 0, 0, 44, 310, 0,
	812, 0, 296, 253, 301, 281, 301, 0, 0, 361,
	0, -2, 0, 73, 92, 93, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 86, 88, 89, 90, 905,
	899, 0, 1282, 398, 0, 212, 0, 332, 331, 395,
	0, 871, 872, 0, 1282, 397, 0, 196, 197, 0,
	0, 0, 802, 0, 761, 762, 0, 0, 0, 0,
	753, 724, 776, 0, 0, 533, 0, 0, 835, 0,
	-2, 0, 830, 829, 568, 43, 0, 555, 600, 0,
	601, 602, 603, 309, 313, 0, 318, 0, 335, 336,
	0, 270, 271, 285, 288, 0, 78, 0, 0, 94,
	95, 96, 97, 99, 100, 0, 0, 0, 860, 907,
	-2, 0, 1282, 378, 399, 210, 0, 881, 382, 389,
	390, 1282, 0, 0, 0, 0, 408, 34, 0, 0,
	718, 720, 719, 721, 0, 0, 0, 742, 743, 806,
	0, 825, 35, 0, 574, 558, 566, 314, 315, 0,
	317, 0, 311, 0, 73, -2, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 0, 0, 0,
	101, 102, 103, 104, 563, 0, 899, 0, 901, 0,
	898, 0, 377, 0, 0, 391, 0, 415, 0, 198,
	199, 192, 803, 804, 805, 797, 798, 800, 801, 722,
	0, 0, 0, 0, 833, -2, 831, 316, 0, 76,
	312, 137, 82, 0, 0, 0, 128, 29, 0, 0,
	906, 0, 904, 0, 0, 900, 311, 0, 414, 0,
	0, 195, 0, 754, 0, 757, 534, 0, 73, 0,
	0, 0, 148, 0, 0, 0, 0, 861, 908, 0,
	0, 384, 0, 416, 0, 405, 799, 755, 0, 0,
	138, 139, 0, 0, 149, 0, 0, 181, -2, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 127, 129,
	564, 902, 896, 311, 0, 0, 339, 73, 140, 141,
	142, 143, 144, 146, 0, 0, 0, 0, 385, 0,
	0, 340, 341, 0, 81, 0, 0, 0, 0, 0,
	182, 155, 0, 0, 0, 756, 342, 0, 343, 0,
	0, 0, 0, 150, 151, 0, 0, 0, 156, 0,
	145, 0, 0, 352, 354, 355, 0, 0, 353, 147,
	0, 153, 0, 0, 417, 418, 356, 357, 358, 0,
	0, 0, 152, 0, 157, 154,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:388
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:393
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:394
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:398
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:425
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:431
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:437
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:445
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:449
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:455
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:462
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:472
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:482
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:489
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:501
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:523
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:529
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:541
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:546
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:555
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:565
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:575
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:580
		{
			yyVAL.partitions = nil
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:584
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:594
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:598
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:608
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:612
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:622
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:626
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:632
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:636
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:640
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.str = SessionStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.str = GlobalStr
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:659
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:665
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 76:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:686
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:690
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:698
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 81:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:706
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 82:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:710
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:715
		{
			yyVAL.procedureParams = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:735
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:752
		{
			yyVAL.characteristics = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:756
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:856
		{
			yyVAL.str = ""
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.str = BeforeStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.str = AfterStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.str = InsertStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.str = UpdateStr
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.str = DeleteStr
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.triggerOrder = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:897
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:919
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:923
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:939
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:945
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:950
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:955
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 154:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:961
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:979
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:989
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1043
		{
			yyVAL.exprs = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.exprs = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1051
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1057
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1134
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1161
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.columnType = ColumnType{}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1248
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1391
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1395
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1538
		{
			yyVAL.sqlVal = nil
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1547
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1551
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1559
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1569
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1577
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1586
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = ""
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = ""
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1651
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.colKeyOpt = colKey
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1675
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1679
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1684
		{
			yyVAL.indexOptions = nil
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1704
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = ""
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = yyDollar[1].str
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1803
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 339:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1819
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 340:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1823
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 341:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1827
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 342:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1831
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 343:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1835
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1851
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1886
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1904
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1908
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1913
		{
			yyVAL.boolean = true
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.boolean = true
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.boolean = false
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = ""
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1988
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 378:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1995
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2002
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2010
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2014
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2018
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 384:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 385:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:2027
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 386:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2031
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2045
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 390:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2049
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 391:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2056
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2066
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2072
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 395:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2078
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnOrder = nil
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2108
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 405:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 406:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 408:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2178
		{
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
		}
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2189
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2199
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2205
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2209
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2225
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2233
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2245
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2261
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2269
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2277
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2302
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2307
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2324
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2384
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2389
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2399
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2403
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2411
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2425
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2438
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = "full "
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.showFilter = nil
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2526
		{
			yyVAL.showFilter = nil
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = ""
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = SessionStr
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = GlobalStr
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.statement = &Begin{}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.statement = &Begin{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.statement = &Commit{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.statement = &Rollback{}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2610
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2614
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.statement = &OtherRead{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2639
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2657
		{
			setAllowComments(yylex, true)
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2667
		{
			yyVAL.bytes2 = nil
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = UnionStr
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.str = UnionAllStr
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = UnionDistinctStr
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = SQLCacheStr
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = DistinctStr
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2716
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.str = StraightJoinHint
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2725
		{
			yyVAL.selectExprs = nil
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2739
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2749
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2753
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2757
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2768
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2772
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2777
		{
			yyVAL.over = nil
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.over = yyDollar[1].over
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2817
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2821
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2831
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2866
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2881
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2885
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2889
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.expr = nil
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.columns = nil
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2927
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2937
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2950
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2954
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2958
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2970
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2974
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2980
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2985
		{
			yyVAL.empty = struct{}{}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.empty = struct{}{}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = JoinStr
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = JoinStr
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = JoinStr
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3016
		{
			yyVAL.str = StraightJoinStr
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			yyVAL.str = LeftJoinStr
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			yyVAL.str = LeftJoinStr
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.str = RightJoinStr
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = RightJoinStr
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.str = NaturalJoinStr
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3060
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3085
		{
			yyVAL.indexHints = nil
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3089
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3093
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3097
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3102
		{
			yyVAL.expr = nil
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.str = ""
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3166
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3174
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3178
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3182
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3186
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3190
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3194
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3198
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3204
		{
			yyVAL.str = IsNullStr
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = IsNotNullStr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.str = IsTrueStr
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.str = IsNotTrueStr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.str = IsFalseStr
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = IsNotFalseStr
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.str = EqualStr
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.str = LessThanStr
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.str = GreaterThanStr
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3242
		{
			yyVAL.str = LessEqualStr
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.str = GreaterEqualStr
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.str = NotEqualStr
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3259
		{
			yyVAL.expr = nil
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3263
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3391
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3441
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3445
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3528
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3560
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 718:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 719:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 720:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 722:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 724:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3626
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 742:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3714
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3718
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = BooleanModeStr
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 756:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = QueryExpansionStr
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3804
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3851
		{
			yyVAL.expr = nil
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = string("")
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3874
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.expr = nil
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3889
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3903
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = &NullVal{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3947
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3951
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.exprs = nil
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3985
		{
			yyVAL.expr = nil
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4004
		{
			yyVAL.orderBy = nil
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4018
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = AscScr
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.str = AscScr
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = DescScr
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4046
		{
			yyVAL.limit = nil
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4054
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4058
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = ""
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = ForUpdateStr
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = ShareModeStr
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4084
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4097
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4101
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4105
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4120
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4124
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			yyVAL.setExprs = nil
		}
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4133
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4143
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4159
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4185
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4189
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4204
		{
			yyVAL.bytes = []byte("charset")
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.expr = &Default{}
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4228
		{
			yyVAL.byt = 0
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.byt = 1
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4233
		{
			yyVAL.byt = 0
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4235
		{
			yyVAL.byt = 1
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = IgnoreStr
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.sqlVal = nil
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4245
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.empty = struct{}{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.empty = struct{}{}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.empty = struct{}{}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.empty = struct{}{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = UniqueStr
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = FulltextStr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = SpatialStr
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4294
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = string("")
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4338
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4343
		{
			yyVAL.EnclosedBy = nil
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4347
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4352
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4361
		{
			yyVAL.sqlVal = nil
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4370
		{
			yyVAL.sqlVal = nil
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.Fields = nil
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4383
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4388
		{
			yyVAL.Lines = nil
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.sqlVal = nil
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			decNesting(yylex)
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4816
		{
			skipToEnd(yylex)
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4821
		{
			skipToEnd(yylex)
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			skipToEnd(yylex)
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
