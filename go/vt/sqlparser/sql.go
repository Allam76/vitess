// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const TEMPORARY = 57525
const CLASS_ORIGIN = 57526
const SUBCLASS_ORIGIN = 57527
const MESSAGE_TEXT = 57528
const MYSQL_ERRNO = 57529
const CONSTRAINT_CATALOG = 57530
const CONSTRAINT_SCHEMA = 57531
const CONSTRAINT_NAME = 57532
const CATALOG_NAME = 57533
const SCHEMA_NAME = 57534
const TABLE_NAME = 57535
const COLUMN_NAME = 57536
const CURSOR_NAME = 57537
const SIGNAL = 57538
const RESIGNAL = 57539
const SQLSTATE = 57540
const DECLARE = 57541
const CONDITION = 57542
const CURSOR = 57543
const CONTINUE = 57544
const EXIT = 57545
const UNDO = 57546
const HANDLER = 57547
const FOUND = 57548
const SQLWARNING = 57549
const SQLEXCEPTION = 57550
const BEGIN = 57551
const START = 57552
const TRANSACTION = 57553
const COMMIT = 57554
const ROLLBACK = 57555
const SAVEPOINT = 57556
const WORK = 57557
const RELEASE = 57558
const BIT = 57559
const TINYINT = 57560
const SMALLINT = 57561
const MEDIUMINT = 57562
const INT = 57563
const INTEGER = 57564
const BIGINT = 57565
const INTNUM = 57566
const REAL = 57567
const DOUBLE = 57568
const FLOAT_TYPE = 57569
const DECIMAL = 57570
const NUMERIC = 57571
const DEC = 57572
const FIXED = 57573
const PRECISION = 57574
const TIME = 57575
const TIMESTAMP = 57576
const DATETIME = 57577
const YEAR = 57578
const CHAR = 57579
const VARCHAR = 57580
const BOOL = 57581
const CHARACTER = 57582
const VARBINARY = 57583
const NCHAR = 57584
const NVARCHAR = 57585
const NATIONAL = 57586
const VARYING = 57587
const TEXT = 57588
const TINYTEXT = 57589
const MEDIUMTEXT = 57590
const LONGTEXT = 57591
const LONG = 57592
const BLOB = 57593
const TINYBLOB = 57594
const MEDIUMBLOB = 57595
const LONGBLOB = 57596
const JSON = 57597
const ENUM = 57598
const GEOMETRY = 57599
const POINT = 57600
const LINESTRING = 57601
const POLYGON = 57602
const GEOMETRYCOLLECTION = 57603
const MULTIPOINT = 57604
const MULTILINESTRING = 57605
const MULTIPOLYGON = 57606
const LOCAL = 57607
const LOW_PRIORITY = 57608
const NULLX = 57609
const AUTO_INCREMENT = 57610
const APPROXNUM = 57611
const SIGNED = 57612
const UNSIGNED = 57613
const ZEROFILL = 57614
const COLLATION = 57615
const DATABASES = 57616
const SCHEMAS = 57617
const TABLES = 57618
const FULL = 57619
const PROCESSLIST = 57620
const COLUMNS = 57621
const FIELDS = 57622
const ENGINES = 57623
const PLUGINS = 57624
const NAMES = 57625
const CHARSET = 57626
const GLOBAL = 57627
const SESSION = 57628
const ISOLATION = 57629
const LEVEL = 57630
const READ = 57631
const WRITE = 57632
const ONLY = 57633
const REPEATABLE = 57634
const COMMITTED = 57635
const UNCOMMITTED = 57636
const SERIALIZABLE = 57637
const CURRENT_TIMESTAMP = 57638
const DATABASE = 57639
const CURRENT_DATE = 57640
const CURRENT_USER = 57641
const CURRENT_TIME = 57642
const LOCALTIME = 57643
const LOCALTIMESTAMP = 57644
const UTC_DATE = 57645
const UTC_TIME = 57646
const UTC_TIMESTAMP = 57647
const REPLACE = 57648
const CONVERT = 57649
const CAST = 57650
const SUBSTR = 57651
const SUBSTRING = 57652
const TRIM = 57653
const LEADING = 57654
const TRAILING = 57655
const BOTH = 57656
const GROUP_CONCAT = 57657
const SEPARATOR = 57658
const TIMESTAMPADD = 57659
const TIMESTAMPDIFF = 57660
const OVER = 57661
const WINDOW = 57662
const GROUPING = 57663
const GROUPS = 57664
const AVG = 57665
const BIT_AND = 57666
const BIT_OR = 57667
const BIT_XOR = 57668
const COUNT = 57669
const JSON_ARRAYAGG = 57670
const JSON_OBJECTAGG = 57671
const MAX = 57672
const MIN = 57673
const STDDEV_POP = 57674
const STDDEV = 57675
const STD = 57676
const STDDEV_SAMP = 57677
const SUM = 57678
const VAR_POP = 57679
const VARIANCE = 57680
const VAR_SAMP = 57681
const CUME_DIST = 57682
const DENSE_RANK = 57683
const FIRST_VALUE = 57684
const LAG = 57685
const LAST_VALUE = 57686
const LEAD = 57687
const NTH_VALUE = 57688
const NTILE = 57689
const ROW_NUMBER = 57690
const PERCENT_RANK = 57691
const RANK = 57692
const MATCH = 57693
const AGAINST = 57694
const BOOLEAN = 57695
const LANGUAGE = 57696
const WITH = 57697
const QUERY = 57698
const EXPANSION = 57699
const UNUSED = 57700
const ARRAY = 57701
const DESCRIPTION = 57702
const EMPTY = 57703
const EXCEPT = 57704
const JSON_TABLE = 57705
const LATERAL = 57706
const MEMBER = 57707
const RECURSIVE = 57708
const ACTIVE = 57709
const ADMIN = 57710
const BUCKETS = 57711
const CLONE = 57712
const COMPONENT = 57713
const DEFINITION = 57714
const ENFORCED = 57715
const EXCLUDE = 57716
const FOLLOWING = 57717
const GEOMCOLLECTION = 57718
const GET_MASTER_PUBLIC_KEY = 57719
const HISTOGRAM = 57720
const HISTORY = 57721
const INACTIVE = 57722
const INVISIBLE = 57723
const LOCKED = 57724
const MASTER_COMPRESSION_ALGORITHMS = 57725
const MASTER_PUBLIC_KEY_PATH = 57726
const MASTER_TLS_CIPHERSUITES = 57727
const MASTER_ZSTD_COMPRESSION_LEVEL = 57728
const NESTED = 57729
const NETWORK_NAMESPACE = 57730
const NOWAIT = 57731
const NULLS = 57732
const OJ = 57733
const OLD = 57734
const OPTIONAL = 57735
const ORDINALITY = 57736
const ORGANIZATION = 57737
const OTHERS = 57738
const PATH = 57739
const PERSIST = 57740
const PERSIST_ONLY = 57741
const PRECEDING = 57742
const PRIVILEGE_CHECKS_USER = 57743
const PROCESS = 57744
const RANDOM = 57745
const REFERENCE = 57746
const REQUIRE_ROW_FORMAT = 57747
const RESOURCE = 57748
const RESPECT = 57749
const RESTART = 57750
const RETAIN = 57751
const REUSE = 57752
const ROLE = 57753
const SECONDARY = 57754
const SECONDARY_ENGINE = 57755
const SECONDARY_LOAD = 57756
const SECONDARY_UNLOAD = 57757
const SKIP = 57758
const SRID = 57759
const THREAD_PRIORITY = 57760
const TIES = 57761
const UNBOUNDED = 57762
const VCPU = 57763
const VISIBLE = 57764
const SYSTEM = 57765
const INFILE = 57766

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 48,
	-2, 859,
	-1, 41,
	140, 921,
	141, 947,
	-2, 119,
	-1, 48,
	180, 511,
	181, 511,
	-2, 501,
	-1, 55,
	1, 1367,
	442, 1367,
	-2, 539,
	-1, 439,
	127, 957,
	-2, 951,
	-1, 440,
	127, 958,
	-2, 952,
	-1, 544,
	97, 1188,
	127, 1188,
	-2, 905,
	-1, 545,
	97, 1290,
	127, 1290,
	-2, 906,
	-1, 550,
	97, 1208,
	127, 1208,
	-2, 907,
	-1, 551,
	97, 1248,
	127, 1248,
	-2, 908,
	-1, 552,
	97, 1249,
	127, 1249,
	-2, 909,
	-1, 553,
	97, 1143,
	127, 1143,
	-2, 913,
	-1, 555,
	97, 1227,
	127, 1227,
	-2, 915,
	-1, 971,
	1, 591,
	5, 591,
	12, 591,
	13, 591,
	14, 591,
	15, 591,
	17, 591,
	19, 591,
	30, 591,
	31, 591,
	56, 591,
	57, 591,
	58, 591,
	59, 591,
	60, 591,
	62, 591,
	63, 591,
	66, 591,
	67, 591,
	69, 591,
	70, 591,
	442, 591,
	-2, 621,
	-1, 975,
	67, 65,
	69, 65,
	-2, 69,
	-1, 1175,
	127, 960,
	-2, 956,
	-1, 1344,
	68, 358,
	-2, 1107,
	-1, 1347,
	68, 354,
	71, 354,
	-2, 1042,
	-1, 1348,
	68, 355,
	71, 355,
	-2, 1052,
	-1, 1440,
	44, 401,
	147, 403,
	149, 401,
	150, 401,
	-2, 441,
	-1, 1516,
	5, 49,
	-2, 687,
	-1, 1799,
	69, 1086,
	70, 1086,
	127, 1086,
	-2, 546,
	-1, 1822,
	1, 642,
	5, 642,
	12, 642,
	13, 642,
	14, 642,
	15, 642,
	17, 642,
	19, 642,
	30, 642,
	31, 642,
	56, 642,
	57, 642,
	58, 642,
	59, 642,
	60, 642,
	62, 642,
	63, 642,
	66, 642,
	67, 642,
	69, 642,
	70, 642,
	442, 642,
	-2, 621,
	-1, 1896,
	147, 404,
	-2, 402,
	-1, 1959,
	5, 49,
	-2, 879,
	-1, 2106,
	41, 967,
	-2, 965,
	-1, 2215,
	5, 49,
	-2, 882,
}

const yyPrivate = 57344

const yyLast = 26401

var yyAct = [...]int{

	502, 78, 2231, 2318, 2364, 2339, 2329, 2232, 2320, 2330,
	2122, 2218, 2154, 7, 2153, 6, 1392, 2152, 5, 2155,
	8, 2205, 2259, 1971, 2200, 2039, 2079, 2106, 1816, 1835,
	445, 1725, 1299, 1715, 922, 1555, 431, 2019, 81, 1390,
	569, 1792, 1584, 1612, 2001, 501, 1153, 1006, 1297, 1836,
	1349, 2219, 1793, 1724, 458, 1665, 424, 1365, 757, 1889,
	567, 1331, 91, 1556, 1789, 971, 1341, 364, 368, 371,
	1381, 102, 1469, 1345, 1808, 1438, 734, 1330, 1801, 78,
	1293, 1146, 1761, 1209, 1200, 747, 2151, 3, 1421, 1320,
	1690, 1691, 1161, 1087, 745, 564, 1337, 1132, 1272, 1107,
	1276, 389, 1377, 1648, 1283, 1177, 831, 986, 824, 1267,
	1264, 827, 808, 787, 967, 546, 563, 442, 985, 542,
	549, 427, 543, 538, 365, 366, 367, 388, 844, 712,
	535, 786, 977, 2386, 2382, 83, 2372, 2354, 2352, 2334,
	2313, 2267, 80, 447, 1130, 1995, 2345, 1870, 941, 2002,
	2253, 2328, 2213, 67, 2301, 2252, 968, 2004, 2212, 1782,
	1491, 1951, 711, 1434, 1593, 423, 940, 1592, 1317, 1318,
	1594, 85, 86, 87, 88, 89, 34, 34, 34, 565,
	34, 1831, 1832, 1133, 437, 1141, 1142, 2133, 859, 858,
	868, 869, 861, 862, 863, 864, 865, 866, 867, 860,
	1550, 739, 870, 987, 1735, 988, 517, 1830, 523, 525,
	524, 521, 522, 520, 519, 518, 818, 1551, 2064, 1295,
	1316, 34, 379, 70, 37, 38, 2007, 526, 527, 714,
	34, 35, 70, 37, 38, 760, 761, 378, 79, 79,
	79, 835, 79, 1631, 61, 559, 70, 37, 38, 1351,
	76, 1136, 1433, 805, 39, 65, 66, 1366, 113, 109,
	110, 62, 111, 2005, 2006, 2008, 2009, 2010, 39, 738,
	742, 105, 2048, 744, 1134, 1135, 1353, 1357, 1359, 759,
	1358, 1378, 1371, 79, 1366, 1938, 1936, 377, 49, 386,
	2343, 358, 79, 2264, 2315, 115, 114, 369, 2103, 1117,
	771, 2262, 2263, 2102, 2101, 1353, 740, 743, 2100, 741,
	2099, 2098, 1623, 97, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 2097, 1628, 1627, 2184,
	2185, 2256, 2257, 756, 2220, 1973, 1576, 746, 746, 2149,
	2300, 1399, 753, 1682, 1683, 754, 755, 752, 767, 1624,
	2327, 746, 716, 715, 41, 72, 45, 44, 47, 2201,
	58, 78, 78, 1629, 1718, 1616, 99, 1398, 1277, 372,
	96, 1617, 2147, 776, 2378, 778, 107, 106, 777, 359,
	361, 1895, 813, 82, 1005, 1005, 48, 75, 74, 1841,
	821, 56, 57, 46, 762, 1697, 763, 760, 761, 2020,
	2021, 1005, 1839, 2387, 1004, 768, 769, 1005, 419, 2384,
	373, 1841, 2324, 2373, 2355, 2319, 362, 103, 713, 722,
	384, 2187, 385, 385, 2032, 1888, 1762, 104, 1890, 2322,
	1626, 1670, 748, 112, 1077, 370, 773, 59, 60, 879,
	2003, 370, 881, 1136, 737, 770, 105, 775, 779, 1869,
	50, 73, 2134, 52, 53, 63, 2031, 64, 1366, 1118,
	772, 1068, 1380, 1583, 2309, 2211, 1134, 1135, 1764, 1582,
	1638, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 1356,
	1666, 920, 2368, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 810, 939, 942, 942,
	942, 948, 942, 942, 948, 942, 948, 957, 958, 959,
	960, 961, 962, 822, 972, 812, 1667, 413, 71, 1581,
	1926, 98, 77, 77, 77, 1610, 77, 71, 1766, 1302,
	1304, 107, 106, 1770, 370, 1765, 370, 1763, 709, 978,
	1685, 71, 1768, 816, 1610, 2321, 2323, 717, 1625, 2080,
	331, 108, 2035, 549, 1923, 1767, 1915, 2030, 549, 882,
	883, 1597, 2082, 1589, 1486, 880, 1610, 77, 1474, 921,
	1769, 1771, 1459, 1156, 998, 983, 77, 850, 999, 859,
	858, 868, 869, 861, 862, 863, 864, 865, 866, 867,
	860, 1526, 1613, 870, 966, 730, 860, 1321, 1523, 870,
	870, 1668, 1669, 1859, 1312, 1115, 2366, 1064, 1451, 2367,
	1303, 2365, 1149, 884, 885, 886, 887, 888, 889, 890,
	891, 1609, 1450, 1108, 1406, 736, 1716, 1707, 1697, 1405,
	843, 1610, 1704, 2081, 1712, 1703, 1706, 1422, 990, 1003,
	1609, 1412, 1806, 991, 1184, 976, 1805, 944, 946, 981,
	950, 952, 1699, 955, 2036, 1860, 1610, 974, 750, 1182,
	1183, 1181, 1609, 1211, 1455, 943, 945, 947, 949, 951,
	953, 954, 956, 1449, 1530, 1125, 1000, 393, 394, 395,
	396, 397, 401, 402, 406, 407, 416, 415, 414, 417,
	418, 421, 420, 422, 398, 399, 400, 403, 404, 405,
	408, 409, 412, 410, 411, 842, 841, 996, 882, 883,
	764, 94, 2375, 746, 780, 882, 883, 718, 735, 1109,
	746, 746, 746, 843, 1447, 1441, 1442, 1609, 1440, 721,
	1443, 1444, 1784, 823, 1697, 746, 841, 1413, 1005, 842,
	841, 1700, 1698, 842, 841, 2371, 2312, 1265, 1070, 433,
	2261, 1089, 1609, 843, 751, 1711, 93, 843, 1699, 1708,
	2310, 843, 2358, 2340, 2357, 1453, 1456, 1521, 1265, 1520,
	1539, 859, 858, 868, 869, 861, 862, 863, 864, 865,
	866, 867, 860, 2379, 838, 870, 842, 841, 842, 841,
	1091, 1847, 79, 92, 78, 1786, 383, 2234, 746, 842,
	841, 1145, 1180, 766, 843, 2260, 843, 1090, 2216, 1103,
	1104, 1158, 1106, 2297, 1096, 1097, 1098, 843, 1128, 1994,
	863, 864, 865, 866, 867, 860, 1522, 1074, 870, 1105,
	1993, 2260, 1078, 2285, 1159, 2284, 2380, 1160, 1111, 1112,
	1653, 724, 725, 726, 727, 728, 828, 1094, 1095, 829,
	1448, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 78, 1651, 870, 1654, 1144, 1154, 1155, 2296,
	1201, 1175, 1202, 842, 841, 1471, 1472, 1473, 1446, 1178,
	1138, 842, 841, 532, 533, 1632, 1595, 1147, 1596, 842,
	841, 843, 1140, 1120, 1121, 2269, 784, 1123, 2240, 843,
	1167, 1169, 1170, 2146, 2096, 924, 1168, 843, 2058, 1991,
	1852, 1649, 1137, 1126, 1430, 2283, 1174, 1452, 783, 1122,
	1092, 2071, 2302, 823, 1173, 1982, 2299, 1143, 842, 841,
	2282, 1114, 2246, 823, 1982, 2244, 1982, 2242, 1982, 2148,
	1804, 2144, 1250, 1253, 974, 2116, 843, 1613, 921, 2110,
	1266, 2071, 2140, 1296, 1171, 2071, 2086, 2109, 972, 2071,
	823, 2090, 972, 1218, 2071, 2070, 2089, 1222, 1454, 861,
	862, 863, 864, 865, 866, 867, 860, 1179, 2028, 870,
	1204, 1205, 1982, 1981, 1963, 823, 1875, 1216, 1217, 1458,
	823, 1243, 1910, 1917, 1585, 549, 1906, 1897, 1227, 1228,
	1229, 1230, 1880, 1879, 1089, 1878, 1867, 1866, 1863, 1864,
	1853, 1240, 1242, 1677, 1292, 1863, 1862, 1176, 1247, 1175,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1676, 1327, 1424, 1307, 921,
	1484, 823, 1309, 1280, 823, 1064, 1241, 1427, 1734, 1410,
	746, 1918, 746, 2248, 1409, 1301, 1305, 1241, 823, 1585,
	1367, 1368, 1369, 1370, 1325, 1203, 1119, 1332, 565, 1116,
	1086, 1085, 1326, 1084, 1083, 1075, 1073, 1072, 1338, 1071,
	1069, 1002, 1001, 1585, 1314, 979, 1310, 1313, 1319, 443,
	832, 979, 806, 732, 376, 94, 974, 374, 1256, 1335,
	851, 974, 1328, 1387, 1388, 974, 1279, 1268, 82, 1383,
	1384, 1385, 1386, 2108, 1207, 1957, 1280, 1151, 1215, 82,
	463, 462, 465, 466, 467, 468, 78, 1224, 1225, 464,
	469, 1790, 1876, 1306, 1804, 978, 1302, 1304, 1235, 1379,
	1804, 980, 1239, 982, 1394, 1280, 1396, 980, 1865, 978,
	1285, 1288, 1289, 1290, 1286, 1475, 1287, 1291, 1262, 1818,
	1809, 1810, 1241, 820, 1414, 1688, 923, 391, 1150, 1420,
	1599, 1918, 1315, 1484, 1484, 1544, 1543, 1175, 1124, 938,
	859, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 1408, 1152, 870, 1285, 1288, 1289, 1290, 1286,
	1131, 1287, 1291, 1391, 1076, 1423, 984, 1178, 79, 560,
	819, 79, 921, 2254, 2243, 1432, 1817, 1303, 1425, 2115,
	2113, 1996, 1174, 1426, 1431, 1353, 1969, 1382, 1436, 1846,
	1326, 1809, 1810, 1470, 1378, 1603, 1457, 1400, 1373, 1463,
	1372, 1065, 1461, 1462, 868, 869, 861, 862, 863, 864,
	865, 866, 867, 860, 1480, 803, 870, 1552, 1554, 2349,
	2347, 972, 972, 972, 972, 972, 2331, 1476, 1874, 1815,
	1812, 79, 1790, 1655, 1080, 1568, 1566, 1296, 1814, 1577,
	1569, 1567, 1570, 1565, 1289, 1290, 1564, 972, 428, 429,
	1557, 2279, 1352, 1482, 2251, 1722, 1460, 1162, 1485, 2277,
	1558, 1960, 1468, 1487, 1488, 1179, 1467, 2061, 1493, 1494,
	1495, 1496, 1497, 1498, 1580, 2027, 1501, 1615, 1514, 1985,
	1905, 1506, 1507, 1508, 1509, 549, 1511, 1512, 1513, 1904,
	1587, 1851, 1588, 1516, 1517, 1518, 1519, 836, 837, 1850,
	1607, 2189, 1525, 1553, 2192, 1528, 1529, 1477, 1478, 1479,
	1534, 1535, 2239, 2238, 1538, 1944, 1541, 2107, 1542, 1435,
	2268, 1545, 1546, 1243, 1547, 1548, 834, 1586, 2105, 1614,
	2183, 2182, 1600, 78, 1572, 1559, 1571, 375, 1562, 1680,
	1642, 1064, 1579, 1573, 1574, 997, 801, 785, 746, 782,
	746, 746, 1633, 1634, 781, 733, 1332, 1608, 1611, 1640,
	1093, 1490, 1492, 1590, 974, 974, 974, 974, 974, 1647,
	990, 1602, 1502, 1503, 1504, 1505, 1598, 825, 1560, 1561,
	974, 1563, 1531, 1532, 1533, 2292, 2120, 1955, 1113, 826,
	974, 2119, 1154, 1155, 1675, 1641, 2037, 1643, 1644, 1645,
	1646, 1429, 440, 1395, 859, 858, 868, 869, 861, 862,
	863, 864, 865, 866, 867, 860, 1079, 1650, 870, 1657,
	1719, 1658, 1419, 1652, 836, 837, 1466, 923, 94, 1067,
	814, 815, 1742, 2291, 1465, 1679, 2290, 2289, 2093, 425,
	2271, 2270, 1671, 2236, 1673, 1674, 2193, 1689, 2124, 120,
	2046, 426, 120, 82, 1692, 1705, 1710, 1678, 120, 2123,
	2040, 1585, 1660, 1661, 1662, 1164, 1165, 1175, 1687, 1684,
	1686, 1527, 1701, 1702, 1713, 1714, 1695, 1694, 1717, 1524,
	120, 1110, 839, 848, 1720, 1721, 2351, 2350, 2350, 2351,
	2137, 120, 1795, 78, 1849, 120, 572, 1148, 560, 120,
	1727, 380, 382, 2165, 51, 84, 1729, 54, 1733, 2167,
	19, 120, 1174, 572, 1728, 1783, 1, 1820, 807, 120,
	1737, 1557, 1824, 1825, 1826, 2237, 1791, 2166, 18, 2168,
	20, 1558, 2188, 1732, 2169, 21, 2190, 1794, 1803, 1740,
	2164, 15, 823, 2163, 14, 1773, 1772, 1681, 923, 1749,
	1750, 2104, 1823, 1248, 1249, 2157, 10, 2176, 30, 2015,
	1756, 2000, 1819, 1827, 1760, 2175, 29, 2174, 28, 1829,
	2172, 25, 2171, 24, 1798, 2173, 26, 1813, 1147, 1796,
	859, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 1844, 1999, 870, 1845, 1821, 2162, 13, 2159,
	12, 1664, 1797, 1834, 1663, 1387, 1731, 1388, 2158, 11,
	802, 1840, 1129, 1843, 1872, 1873, 1063, 1833, 1693, 1842,
	1324, 2156, 9, 1727, 1696, 1332, 1404, 1332, 1445, 2199,
	1339, 1329, 562, 1856, 90, 1411, 749, 2025, 1743, 339,
	1336, 1746, 1747, 1748, 1621, 2191, 1751, 804, 1774, 1775,
	1620, 1776, 1777, 1630, 1877, 1778, 1350, 1619, 1618, 2186,
	1145, 1622, 1010, 1854, 1855, 1008, 1009, 1007, 1787, 1788,
	1858, 1012, 1011, 343, 992, 2226, 1893, 1861, 840, 100,
	55, 2029, 1884, 1709, 1439, 95, 101, 758, 345, 1389,
	878, 1464, 1591, 547, 548, 1882, 540, 2255, 830, 1892,
	1886, 1064, 1919, 1822, 1887, 1894, 2202, 1916, 1537, 937,
	1898, 1263, 446, 1909, 1575, 1954, 2204, 1166, 461, 460,
	459, 1925, 456, 1949, 457, 1914, 1418, 1157, 1549, 852,
	1868, 444, 435, 970, 120, 963, 1428, 1284, 1282, 572,
	572, 1281, 1081, 536, 1811, 1807, 1294, 969, 1848, 387,
	68, 765, 360, 572, 859, 858, 868, 869, 861, 862,
	863, 864, 865, 866, 867, 860, 1950, 2132, 870, 36,
	381, 430, 27, 17, 774, 1557, 832, 1934, 1920, 22,
	16, 120, 1964, 1437, 719, 1558, 40, 120, 1977, 1978,
	1979, 43, 42, 1659, 1397, 1975, 1956, 2225, 2317, 788,
	2338, 2258, 32, 974, 31, 1883, 2170, 2177, 1965, 2161,
	1987, 1930, 2160, 2304, 78, 23, 2303, 4, 811, 69,
	33, 558, 1939, 1940, 1980, 1976, 1986, 2, 1945, 500,
	0, 0, 0, 0, 0, 1600, 847, 0, 0, 0,
	0, 0, 0, 0, 1988, 1958, 1959, 0, 1961, 0,
	0, 1962, 0, 0, 0, 1921, 0, 0, 972, 1332,
	1990, 0, 1992, 0, 0, 1515, 2012, 2013, 2014, 391,
	0, 1974, 2011, 2024, 0, 0, 0, 0, 2022, 2023,
	2017, 0, 0, 2016, 0, 0, 1989, 2033, 2018, 1540,
	2042, 2043, 0, 0, 0, 848, 0, 1387, 1795, 0,
	1997, 1795, 2066, 1840, 1946, 1947, 1948, 0, 2026, 0,
	2034, 0, 0, 0, 1820, 0, 0, 0, 0, 556,
	0, 0, 0, 568, 0, 0, 0, 0, 0, 0,
	2047, 0, 0, 2069, 0, 120, 120, 120, 2041, 0,
	723, 2038, 2063, 1794, 0, 0, 1794, 0, 0, 1727,
	2062, 572, 0, 0, 2092, 0, 2094, 0, 0, 2072,
	0, 2068, 0, 2073, 0, 0, 2091, 0, 0, 0,
	2084, 2085, 2083, 2078, 0, 2045, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 2095, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 2053, 2054, 2055, 0,
	2057, 974, 0, 0, 0, 1795, 0, 78, 1273, 2114,
	0, 0, 2118, 2111, 2112, 0, 1301, 0, 2074, 2126,
	2087, 2127, 2088, 391, 2125, 0, 0, 2075, 2076, 2077,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 2150, 0, 0, 2143, 2138, 2142, 0, 972,
	1794, 0, 0, 0, 1063, 2145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 2050, 2051, 2052,
	0, 0, 0, 0, 2056, 0, 0, 0, 2059, 2060,
	0, 0, 0, 2195, 0, 2197, 0, 0, 0, 0,
	0, 2207, 0, 2139, 2196, 0, 0, 0, 2208, 2128,
	2129, 2130, 2131, 0, 0, 0, 2209, 2221, 1557, 2135,
	2136, 0, 572, 2214, 0, 0, 0, 0, 1558, 0,
	0, 0, 78, 0, 120, 0, 0, 120, 0, 2194,
	0, 0, 0, 120, 0, 572, 0, 0, 0, 0,
	0, 0, 572, 572, 572, 120, 120, 120, 0, 0,
	0, 0, 120, 0, 0, 2233, 2235, 572, 2249, 0,
	0, 0, 0, 1785, 0, 0, 568, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2241, 0, 0,
	568, 0, 2210, 391, 0, 0, 2143, 0, 0, 2215,
	0, 0, 974, 0, 2273, 0, 2275, 0, 0, 0,
	0, 0, 78, 0, 2288, 0, 2230, 2272, 78, 1828,
	2278, 2276, 2281, 2274, 2265, 2295, 0, 0, 2280, 120,
	572, 2286, 120, 2298, 572, 0, 78, 0, 2311, 0,
	0, 78, 0, 0, 2308, 0, 2307, 0, 2314, 2306,
	0, 2305, 120, 0, 2198, 0, 0, 0, 847, 2245,
	78, 2326, 2333, 78, 78, 2335, 0, 0, 78, 2250,
	2332, 2295, 0, 0, 0, 2341, 1354, 1355, 2344, 1360,
	1361, 1362, 1363, 1364, 0, 78, 0, 2348, 78, 2346,
	2356, 0, 2295, 0, 2359, 0, 2361, 1374, 1375, 1376,
	0, 0, 2293, 78, 572, 78, 2369, 0, 0, 78,
	2295, 2374, 2295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 78, 2316, 2383, 0,
	2295, 0, 0, 78, 0, 0, 0, 78, 0, 0,
	2295, 0, 0, 0, 2295, 0, 0, 0, 0, 1911,
	0, 0, 391, 0, 0, 0, 0, 0, 0, 433,
	391, 0, 0, 1953, 0, 0, 1943, 0, 0, 0,
	572, 572, 0, 0, 0, 0, 0, 120, 0, 0,
	0, 0, 556, 0, 0, 120, 120, 556, 993, 0,
	120, 120, 0, 0, 120, 120, 120, 1781, 0, 0,
	1606, 0, 859, 858, 868, 869, 861, 862, 863, 864,
	865, 866, 867, 860, 572, 572, 870, 0, 0, 0,
	1952, 0, 2376, 2377, 0, 0, 0, 2325, 0, 923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	1967, 0, 0, 1968, 0, 0, 1970, 0, 0, 0,
	0, 0, 0, 1780, 923, 859, 858, 868, 869, 861,
	862, 863, 864, 865, 866, 867, 860, 0, 0, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2362,
	0, 120, 572, 0, 572, 1779, 0, 120, 0, 120,
	120, 0, 0, 120, 859, 858, 868, 869, 861, 862,
	863, 864, 865, 866, 867, 860, 1738, 1739, 870, 0,
	0, 0, 0, 1744, 1745, 34, 0, 70, 37, 38,
	973, 120, 120, 120, 0, 1752, 1753, 1754, 1755, 61,
	1757, 1758, 1759, 0, 0, 76, 0, 0, 0, 39,
	0, 0, 0, 0, 120, 0, 120, 0, 0, 1066,
	859, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 0, 0, 870, 0, 0, 117, 0, 0,
	0, 0, 568, 0, 0, 0, 363, 79, 353, 568,
	568, 568, 859, 858, 868, 869, 861, 862, 863, 864,
	865, 866, 867, 860, 568, 0, 870, 0, 0, 0,
	2178, 0, 0, 2337, 2340, 2336, 0, 0, 0, 537,
	0, 0, 0, 561, 0, 0, 350, 710, 0, 1635,
	1636, 1637, 1639, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2179, 0, 568, 0, 0,
	0, 568, 0, 1838, 0, 0, 0, 0, 332, 0,
	0, 48, 75, 74, 0, 335, 433, 0, 46, 0,
	923, 0, 0, 0, 0, 344, 351, 352, 0, 0,
	568, 1942, 0, 120, 120, 120, 120, 120, 0, 0,
	0, 0, 0, 0, 0, 120, 0, 0, 0, 120,
	0, 0, 0, 120, 0, 0, 0, 0, 0, 120,
	0, 341, 59, 60, 342, 2180, 0, 348, 349, 0,
	0, 1206, 0, 0, 0, 2181, 73, 0, 52, 53,
	63, 0, 64, 572, 0, 0, 0, 0, 0, 0,
	1891, 1922, 0, 0, 0, 0, 0, 2203, 2206, 1924,
	1606, 0, 0, 1900, 1902, 0, 0, 0, 1927, 1928,
	0, 0, 0, 1891, 0, 1929, 0, 0, 0, 556,
	859, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 0, 0, 870, 0, 0, 1269, 1270, 0,
	0, 0, 333, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 2222, 2223, 0, 0, 0, 0, 0, 0,
	572, 120, 572, 572, 556, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 346, 336, 337, 568, 356,
	0, 568, 568, 338, 340, 0, 334, 355, 354, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 572, 0, 0, 0, 0, 120, 0, 0,
	0, 77, 2206, 0, 0, 0, 0, 572, 0, 347,
	0, 0, 0, 0, 2287, 0, 0, 0, 0, 809,
	0, 1857, 0, 0, 572, 817, 0, 0, 0, 568,
	0, 568, 1208, 1213, 1214, 0, 0, 0, 0, 1219,
	1220, 1221, 0, 1223, 0, 0, 1226, 0, 0, 0,
	0, 1231, 1232, 1233, 1234, 0, 1236, 1237, 1238, 0,
	0, 0, 0, 0, 1244, 1245, 1246, 0, 1891, 0,
	1252, 1255, 0, 1260, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 572, 0, 572, 0, 0,
	1891, 0, 0, 0, 2360, 0, 0, 0, 1271, 0,
	1274, 1275, 0, 0, 0, 34, 0, 70, 37, 38,
	572, 0, 0, 0, 0, 0, 568, 0, 0, 61,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 39,
	572, 0, 572, 0, 572, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 1931, 1932, 0, 1933, 0,
	0, 1935, 0, 1937, 391, 0, 391, 0, 0, 0,
	0, 0, 1838, 833, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 965, 0, 975, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 0,
	2178, 0, 0, 0, 0, 2385, 0, 0, 0, 0,
	0, 0, 0, 120, 0, 0, 0, 0, 0, 0,
	118, 1941, 0, 357, 0, 0, 0, 0, 120, 118,
	1983, 1984, 0, 0, 0, 0, 0, 0, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 572, 556,
	0, 390, 120, 572, 0, 2179, 0, 0, 0, 434,
	572, 572, 539, 557, 0, 0, 118, 0, 0, 0,
	118, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	1605, 0, 118, 0, 556, 0, 0, 419, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 0, 0, 1838, 0, 1838, 0, 1604, 0, 0,
	859, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 59, 60, 870, 2180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2181, 73, 0, 52, 53,
	63, 0, 64, 120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	572, 1656, 0, 0, 1489, 0, 0, 572, 572, 572,
	0, 0, 537, 1499, 1500, 1082, 572, 568, 0, 568,
	568, 0, 0, 0, 1510, 0, 0, 0, 1005, 572,
	0, 0, 0, 1099, 1100, 1101, 0, 0, 0, 0,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 0, 413, 120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 568,
	0, 0, 71, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 568, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 0, 572, 0,
	120, 1741, 0, 0, 0, 0, 572, 1139, 859, 858,
	868, 869, 861, 862, 863, 864, 865, 866, 867, 860,
	0, 77, 870, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 859, 858, 868, 869, 861, 862, 863,
	864, 865, 866, 867, 860, 118, 572, 870, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 120, 0, 120,
	556, 0, 568, 0, 1802, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 0, 568,
	0, 568, 0, 1837, 0, 572, 393, 394, 395, 396,
	397, 401, 402, 406, 407, 416, 415, 414, 417, 418,
	421, 420, 422, 398, 399, 400, 403, 404, 405, 408,
	409, 412, 410, 411, 0, 0, 0, 0, 0, 1481,
	0, 0, 0, 0, 572, 1278, 1032, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1308,
	859, 858, 868, 869, 861, 862, 863, 864, 865, 866,
	867, 860, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 120, 0, 0, 0, 2266, 572, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1903, 0, 0, 0, 0,
	1908, 0, 0, 0, 0, 0, 0, 1912, 1913, 0,
	120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 118, 118, 1019,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 1393,
	0, 557, 0, 572, 0, 1401, 0, 1402, 1403, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 0,
	0, 1033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 809, 0, 0, 0, 572, 1972, 0, 0,
	0, 0, 0, 0, 1972, 1972, 1972, 572, 0, 0,
	0, 0, 0, 568, 0, 0, 0, 0, 0, 572,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	1046, 1049, 1050, 1051, 1052, 1053, 1054, 0, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 0, 1034, 1035, 1036, 1037,
	1013, 1017, 1047, 1014, 1020, 1016, 1018, 1015, 0, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 0, 0, 0, 0,
	0, 0, 0, 568, 0, 118, 0, 0, 118, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 118, 118, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 1048, 0, 854, 0,
	857, 0, 0, 0, 0, 0, 1837, 871, 872, 873,
	874, 875, 876, 877, 0, 855, 856, 853, 859, 858,
	868, 869, 861, 862, 863, 864, 865, 866, 867, 860,
	118, 0, 870, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 34, 0, 70, 37,
	38, 2141, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 0, 0, 0, 0, 0, 76, 0, 0, 1672,
	39, 0, 0, 0, 0, 0, 0, 1212, 1212, 1212,
	0, 0, 0, 1212, 1212, 1212, 1212, 1212, 1212, 0,
	0, 1212, 0, 1837, 0, 1837, 1212, 1212, 1212, 1212,
	0, 1212, 1212, 1212, 0, 0, 0, 0, 79, 1212,
	1212, 1212, 0, 0, 0, 1212, 1212, 556, 1212, 1212,
	0, 0, 0, 557, 0, 1723, 0, 0, 0, 0,
	0, 2178, 0, 0, 0, 0, 2381, 0, 0, 0,
	0, 0, 0, 1212, 1212, 1212, 1212, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 118, 390, 0, 0,
	568, 118, 118, 0, 0, 118, 1311, 1088, 557, 0,
	41, 72, 45, 44, 47, 0, 0, 0, 0, 0,
	0, 2247, 1088, 0, 0, 0, 2179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 34, 0, 70,
	37, 38, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 61, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 39, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 0, 0, 0,
	0, 0, 118, 59, 60, 0, 2180, 0, 118, 79,
	118, 118, 0, 0, 118, 0, 2181, 73, 0, 52,
	53, 63, 0, 64, 0, 0, 0, 0, 0, 0,
	0, 0, 2178, 0, 0, 0, 0, 2370, 0, 0,
	0, 0, 1415, 1416, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 1032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 1871, 390, 0, 0,
	0, 41, 72, 45, 44, 47, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 2179, 0, 0,
	1088, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 48, 75, 74, 0, 0, 0, 0,
	46, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	1907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1212, 0, 0, 0, 0, 1019, 0, 0, 1212,
	0, 0, 0, 0, 59, 60, 0, 2180, 1212, 1212,
	0, 0, 77, 0, 0, 0, 0, 2181, 73, 1212,
	52, 53, 63, 1212, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 0, 0, 1212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 118, 118, 118, 118, 118, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	118, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 1046, 1049, 1050,
	1051, 1052, 1053, 1054, 71, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 0, 1034, 1035, 1036, 1037, 1013, 1017, 1047,
	1014, 1020, 1016, 1018, 1015, 1998, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 34, 0, 70, 37, 38,
	0, 0, 0, 77, 34, 0, 70, 37, 38, 61,
	0, 0, 0, 0, 0, 76, 0, 0, 61, 39,
	0, 0, 0, 0, 76, 0, 0, 0, 39, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 2342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2178, 0, 0, 1048, 0, 2353, 0, 0, 118, 2178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1212,
	0, 0, 0, 0, 0, 0, 0, 0, 1212, 0,
	1088, 0, 0, 0, 0, 0, 0, 0, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 41, 72,
	45, 44, 47, 0, 0, 2179, 0, 0, 0, 0,
	0, 0, 0, 419, 2179, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	48, 75, 74, 1896, 0, 0, 0, 46, 0, 0,
	0, 0, 0, 34, 557, 70, 37, 38, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 39, 0, 0,
	0, 0, 59, 60, 0, 2180, 0, 0, 0, 0,
	419, 59, 60, 0, 2180, 2181, 73, 0, 52, 53,
	63, 0, 64, 0, 2181, 73, 0, 52, 53, 63,
	1062, 64, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 2217, 0,
	0, 0, 0, 419, 0, 0, 0, 0, 2178, 0,
	0, 0, 34, 2294, 70, 37, 38, 0, 0, 0,
	0, 0, 413, 1890, 0, 0, 61, 0, 0, 118,
	0, 0, 76, 0, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 118, 0, 0, 41, 72, 45,
	44, 47, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 1005, 71, 2179, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 0, 79, 0, 0, 0, 0, 48,
	75, 74, 0, 118, 0, 0, 46, 0, 0, 413,
	0, 0, 419, 0, 0, 0, 0, 2178, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 1901, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 60, 413, 2180, 0, 0, 41, 72, 45, 44,
	47, 0, 0, 2181, 73, 0, 52, 53, 63, 0,
	64, 0, 2179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 0, 390, 46, 0, 0, 557, 0,
	0, 0, 393, 394, 395, 396, 397, 401, 402, 406,
	407, 416, 415, 414, 417, 418, 421, 420, 422, 398,
	399, 400, 403, 404, 405, 408, 409, 412, 410, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	60, 413, 2180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2181, 73, 0, 52, 53, 63, 0, 64,
	71, 0, 0, 0, 0, 0, 0, 0, 118, 393,
	394, 395, 396, 397, 401, 402, 406, 407, 416, 415,
	414, 417, 418, 421, 420, 422, 398, 399, 400, 403,
	404, 405, 408, 409, 412, 410, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 118, 393, 394, 395, 396, 397, 401, 402, 406,
	407, 416, 415, 414, 417, 418, 421, 420, 422, 398,
	399, 400, 403, 404, 405, 408, 409, 412, 410, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 393, 394, 395, 396, 397, 401, 402, 406, 407,
	416, 415, 414, 417, 418, 421, 420, 422, 398, 399,
	400, 403, 404, 405, 408, 409, 412, 410, 411, 0,
	0, 0, 0, 0, 0, 0, 434, 690, 670, 297,
	628, 693, 600, 617, 705, 618, 621, 659, 586, 640,
	232, 615, 587, 0, 604, 577, 611, 578, 601, 630,
	165, 599, 672, 643, 692, 195, 655, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 691, 636, 0, 699,
	198, 0, 652, 700, 287, 217, 0, 0, 632, 679,
	638, 668, 627, 661, 593, 651, 694, 616, 657, 695,
	0, 0, 118, 2224, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 654, 689, 613, 656, 658, 575,
	653, 0, 581, 588, 704, 685, 607, 608, 609, 0,
	0, 557, 0, 0, 0, 0, 631, 639, 665, 624,
	0, 118, 0, 0, 0, 0, 0, 0, 605, 0,
	649, 0, 0, 0, 589, 582, 0, 0, 629, 0,
	0, 0, 592, 125, 606, 666, 0, 573, 175, 218,
	136, 669, 684, 626, 188, 324, 688, 623, 622, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 614, 574, 673, 602, 612, 157, 610, 264,
	236, 314, 0, 646, 242, 263, 199, 303, 254, 312,
	313, 179, 708, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 625, 660, 603, 154, 663, 650,
	678, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 2227, 2228, 2229, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 579, 0, 289,
	317, 330, 143, 598, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 596, 597, 594, 0, 595,
	641, 642, 696, 697, 698, 667, 590, 0, 680, 681,
	0, 0, 0, 0, 0, 671, 686, 687, 662, 706,
	619, 620, 580, 583, 584, 585, 591, 633, 634, 645,
	648, 676, 675, 674, 677, 682, 702, 701, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 121, 132, 197, 707, 256, 171, 318, 576, 163,
	0, 0, 635, 637, 647, 664, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 683, 690, 670, 297, 628, 693, 600, 617,
	705, 618, 621, 659, 586, 640, 232, 615, 587, 0,
	604, 577, 611, 578, 601, 630, 165, 599, 672, 643,
	692, 195, 655, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 691, 636, 0, 699, 198, 0, 652, 700,
	287, 217, 0, 0, 632, 679, 638, 668, 627, 661,
	593, 651, 694, 616, 657, 695, 0, 0, 0, 571,
	0, 1333, 1334, 0, 0, 0, 0, 0, 146, 0,
	654, 689, 613, 656, 658, 575, 653, 0, 581, 588,
	704, 685, 607, 608, 609, 1601, 0, 0, 0, 0,
	0, 0, 631, 639, 665, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 0, 649, 0, 0, 0,
	589, 582, 0, 0, 629, 0, 0, 0, 592, 125,
	606, 666, 0, 573, 175, 218, 136, 669, 684, 626,
	188, 324, 688, 623, 622, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 614, 574,
	673, 602, 612, 157, 610, 264, 236, 314, 0, 646,
	242, 263, 199, 303, 254, 312, 313, 179, 708, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	625, 660, 603, 154, 663, 650, 678, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 579, 0, 289, 317, 330, 143, 598,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 596, 597, 594, 0, 595, 641, 642, 696, 697,
	698, 667, 590, 0, 680, 681, 0, 0, 0, 0,
	0, 671, 686, 687, 662, 706, 619, 620, 580, 583,
	584, 585, 591, 633, 634, 645, 648, 676, 675, 674,
	677, 682, 702, 701, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 121, 132, 197,
	707, 256, 171, 318, 576, 163, 0, 0, 635, 637,
	647, 664, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 683, 690,
	670, 297, 628, 693, 600, 617, 705, 618, 621, 659,
	586, 640, 232, 615, 587, 0, 604, 577, 611, 578,
	601, 630, 165, 599, 672, 643, 692, 195, 655, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 691, 636,
	0, 699, 198, 0, 652, 700, 287, 217, 0, 0,
	632, 679, 638, 668, 627, 661, 593, 651, 694, 616,
	657, 695, 0, 0, 0, 571, 0, 1333, 1334, 0,
	0, 0, 0, 0, 146, 0, 654, 689, 613, 656,
	658, 575, 653, 0, 581, 588, 704, 685, 607, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 631, 639,
	665, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 649, 0, 0, 0, 589, 582, 0, 0,
	629, 0, 0, 0, 592, 125, 606, 666, 0, 573,
	175, 218, 136, 669, 684, 626, 188, 324, 688, 623,
	622, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 614, 574, 673, 602, 612, 157,
	610, 264, 236, 314, 0, 646, 242, 263, 199, 303,
	254, 312, 313, 179, 708, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 625, 660, 603, 154,
	663, 650, 678, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 579,
	0, 289, 317, 330, 143, 598, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 596, 597, 594,
	0, 595, 641, 642, 696, 697, 698, 667, 590, 0,
	680, 681, 0, 0, 0, 0, 0, 671, 686, 687,
	662, 706, 619, 620, 580, 583, 584, 585, 591, 633,
	634, 645, 648, 676, 675, 674, 677, 682, 702, 701,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 121, 132, 197, 707, 256, 171, 318,
	576, 163, 0, 0, 635, 637, 647, 664, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 683, 690, 1799, 297, 628, 693,
	600, 617, 705, 618, 621, 659, 586, 640, 232, 615,
	587, 0, 604, 577, 611, 578, 601, 630, 165, 599,
	672, 643, 692, 195, 655, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 691, 636, 0, 699, 198, 0,
	652, 700, 287, 217, 0, 0, 632, 679, 638, 668,
	627, 661, 593, 651, 694, 616, 657, 695, 79, 0,
	823, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 654, 689, 613, 656, 658, 575, 653, 0,
	581, 588, 704, 685, 607, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 631, 639, 665, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 649, 0,
	0, 0, 589, 582, 0, 0, 629, 0, 0, 0,
	592, 125, 606, 666, 0, 573, 175, 218, 136, 669,
	684, 626, 188, 324, 688, 623, 622, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	614, 574, 673, 602, 612, 157, 610, 264, 236, 314,
	0, 646, 242, 263, 199, 303, 254, 312, 313, 179,
	708, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 625, 660, 603, 154, 663, 650, 678, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 579, 0, 289, 317, 330,
	143, 598, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 596, 597, 594, 0, 595, 641, 642,
	696, 697, 698, 667, 590, 0, 680, 681, 0, 0,
	0, 0, 0, 671, 686, 687, 662, 706, 619, 620,
	580, 583, 584, 585, 591, 633, 634, 645, 648, 676,
	675, 674, 677, 682, 702, 701, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 121,
	132, 197, 1800, 256, 171, 318, 576, 163, 0, 0,
	635, 637, 647, 664, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	683, 690, 670, 297, 628, 693, 600, 617, 705, 618,
	621, 659, 586, 640, 232, 615, 587, 0, 604, 577,
	611, 578, 601, 630, 165, 599, 672, 643, 692, 195,
	655, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	691, 636, 0, 699, 198, 0, 652, 700, 287, 217,
	0, 0, 632, 679, 638, 668, 627, 661, 593, 651,
	694, 616, 657, 695, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 654, 689,
	613, 656, 658, 575, 653, 0, 581, 588, 704, 685,
	607, 608, 609, 0, 0, 0, 0, 0, 0, 0,
	631, 639, 665, 624, 0, 0, 0, 0, 0, 0,
	2044, 0, 605, 0, 649, 0, 0, 0, 589, 582,
	0, 0, 629, 0, 0, 0, 592, 125, 606, 666,
	0, 573, 175, 218, 136, 669, 684, 626, 188, 324,
	688, 623, 622, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 614, 574, 673, 602,
	612, 157, 610, 264, 236, 314, 0, 646, 242, 263,
	199, 303, 254, 312, 313, 179, 708, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 625, 660,
	603, 154, 663, 650, 678, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 579, 0, 289, 317, 330, 143, 598, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 596,
	597, 594, 0, 595, 641, 642, 696, 697, 698, 667,
	590, 0, 680, 681, 0, 0, 0, 0, 0, 671,
	686, 687, 662, 706, 619, 620, 580, 583, 584, 585,
	591, 633, 634, 645, 648, 676, 675, 674, 677, 682,
	702, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 121, 132, 197, 707, 256,
	171, 318, 576, 163, 0, 0, 635, 637, 647, 664,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 683, 690, 670, 297,
	628, 693, 600, 617, 705, 618, 621, 659, 586, 640,
	232, 615, 587, 0, 604, 577, 611, 578, 601, 630,
	165, 599, 672, 643, 692, 195, 655, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 691, 636, 0, 699,
	198, 0, 652, 700, 287, 217, 0, 0, 632, 679,
	638, 668, 627, 661, 593, 651, 694, 616, 657, 695,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 654, 689, 613, 656, 658, 575,
	653, 0, 581, 588, 704, 685, 607, 608, 609, 0,
	0, 0, 0, 0, 0, 0, 631, 639, 665, 624,
	0, 0, 0, 0, 0, 0, 1736, 0, 605, 0,
	649, 0, 0, 0, 589, 582, 0, 0, 629, 0,
	0, 0, 592, 125, 606, 666, 0, 573, 175, 218,
	136, 669, 684, 626, 188, 324, 688, 623, 622, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 614, 574, 673, 602, 612, 157, 610, 264,
	236, 314, 0, 646, 242, 263, 199, 303, 254, 312,
	313, 179, 708, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 625, 660, 603, 154, 663, 650,
	678, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 579, 0, 289,
	317, 330, 143, 598, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 596, 597, 594, 0, 595,
	641, 642, 696, 697, 698, 667, 590, 0, 680, 681,
	0, 0, 0, 0, 0, 671, 686, 687, 662, 706,
	619, 620, 580, 583, 584, 585, 591, 633, 634, 645,
	648, 676, 675, 674, 677, 682, 702, 701, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 121, 132, 197, 707, 256, 171, 318, 576, 163,
	0, 0, 635, 637, 647, 664, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 683, 690, 670, 297, 628, 693, 600, 617,
	705, 618, 621, 659, 586, 640, 232, 615, 587, 0,
	604, 577, 611, 578, 601, 630, 165, 599, 672, 643,
	692, 195, 655, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 691, 636, 0, 699, 198, 0, 652, 700,
	287, 217, 0, 0, 632, 679, 638, 668, 627, 661,
	593, 651, 694, 616, 657, 695, 0, 0, 0, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	654, 689, 613, 656, 658, 575, 653, 0, 581, 588,
	704, 685, 607, 608, 609, 0, 0, 0, 0, 0,
	0, 0, 631, 639, 665, 624, 0, 0, 0, 0,
	0, 0, 1726, 0, 605, 0, 649, 0, 0, 0,
	589, 582, 0, 0, 629, 0, 0, 0, 592, 125,
	606, 666, 0, 573, 175, 218, 136, 669, 684, 626,
	188, 324, 688, 623, 622, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 614, 574,
	673, 602, 612, 157, 610, 264, 236, 314, 0, 646,
	242, 263, 199, 303, 254, 312, 313, 179, 708, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	625, 660, 603, 154, 663, 650, 678, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 579, 0, 289, 317, 330, 143, 598,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 596, 597, 594, 0, 595, 641, 642, 696, 697,
	698, 667, 590, 0, 680, 681, 0, 0, 0, 0,
	0, 671, 686, 687, 662, 706, 619, 620, 580, 583,
	584, 585, 591, 633, 634, 645, 648, 676, 675, 674,
	677, 682, 702, 701, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 121, 132, 197,
	707, 256, 171, 318, 576, 163, 0, 0, 635, 637,
	647, 664, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 683, 690,
	670, 297, 628, 693, 600, 617, 705, 618, 621, 659,
	586, 640, 232, 615, 587, 0, 604, 577, 611, 578,
	601, 630, 165, 599, 672, 643, 692, 195, 655, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 691, 636,
	0, 699, 198, 0, 652, 700, 287, 217, 0, 0,
	632, 679, 638, 668, 627, 661, 593, 651, 694, 616,
	657, 695, 79, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 654, 689, 613, 656,
	658, 575, 653, 0, 581, 588, 704, 685, 607, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 631, 639,
	665, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 649, 0, 0, 0, 589, 582, 0, 0,
	629, 0, 0, 0, 592, 125, 606, 666, 0, 573,
	175, 218, 136, 669, 684, 626, 188, 324, 688, 623,
	622, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 614, 574, 673, 602, 612, 157,
	610, 264, 236, 314, 0, 646, 242, 263, 199, 303,
	254, 312, 313, 179, 708, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 625, 660, 603, 154,
	663, 650, 678, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 579,
	0, 289, 317, 330, 143, 598, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 596, 597, 594,
	0, 595, 641, 642, 696, 697, 698, 667, 590, 0,
	680, 681, 0, 0, 0, 0, 0, 671, 686, 687,
	662, 706, 619, 620, 580, 583, 584, 585, 591, 633,
	634, 645, 648, 676, 675, 674, 677, 682, 702, 701,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 121, 132, 197, 707, 256, 171, 318,
	576, 163, 0, 0, 635, 637, 647, 664, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 683, 690, 670, 297, 628, 693,
	600, 617, 705, 618, 621, 659, 586, 640, 232, 615,
	587, 0, 604, 577, 611, 578, 601, 630, 165, 599,
	672, 643, 692, 195, 655, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 691, 636, 0, 699, 198, 0,
	652, 700, 287, 217, 0, 0, 632, 679, 638, 668,
	627, 661, 593, 651, 694, 616, 657, 695, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 654, 689, 613, 656, 658, 575, 653, 0,
	581, 588, 704, 685, 607, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 631, 639, 665, 624, 0, 0,
	0, 0, 0, 0, 1312, 0, 605, 0, 649, 0,
	0, 0, 589, 582, 0, 0, 629, 0, 0, 0,
	592, 125, 606, 666, 0, 573, 175, 218, 136, 669,
	684, 626, 188, 324, 688, 623, 622, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	614, 574, 673, 602, 612, 157, 610, 264, 236, 314,
	0, 646, 242, 263, 199, 303, 254, 312, 313, 179,
	708, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 625, 660, 603, 154, 663, 650, 678, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 579, 0, 289, 317, 330,
	143, 598, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 596, 597, 594, 0, 595, 641, 642,
	696, 697, 698, 667, 590, 0, 680, 681, 0, 0,
	0, 0, 0, 671, 686, 687, 662, 706, 619, 620,
	580, 583, 584, 585, 591, 633, 634, 645, 648, 676,
	675, 674, 677, 682, 702, 701, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 121,
	132, 197, 707, 256, 171, 318, 576, 163, 0, 0,
	635, 637, 647, 664, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	683, 690, 670, 297, 628, 693, 600, 617, 705, 618,
	621, 659, 586, 640, 232, 615, 587, 0, 604, 577,
	611, 578, 601, 630, 165, 599, 672, 643, 692, 195,
	655, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	691, 636, 0, 699, 198, 0, 652, 700, 287, 217,
	0, 0, 632, 679, 638, 668, 627, 661, 593, 651,
	694, 616, 657, 695, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 654, 689,
	613, 656, 658, 575, 653, 0, 581, 588, 704, 685,
	607, 608, 609, 0, 0, 0, 0, 0, 0, 0,
	631, 639, 665, 624, 0, 0, 0, 0, 0, 0,
	1172, 0, 605, 0, 649, 0, 0, 0, 589, 582,
	0, 0, 629, 0, 0, 0, 592, 125, 606, 666,
	0, 573, 175, 218, 136, 669, 684, 626, 188, 324,
	688, 623, 622, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 614, 574, 673, 602,
	612, 157, 610, 264, 236, 314, 0, 646, 242, 263,
	199, 303, 254, 312, 313, 179, 708, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 625, 660,
	603, 154, 663, 650, 678, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 579, 0, 289, 317, 330, 143, 598, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 596,
	597, 594, 0, 595, 641, 642, 696, 697, 698, 667,
	590, 0, 680, 681, 0, 0, 0, 0, 0, 671,
	686, 687, 662, 706, 619, 620, 580, 583, 584, 585,
	591, 633, 634, 645, 648, 676, 675, 674, 677, 682,
	702, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 121, 132, 197, 707, 256,
	171, 318, 576, 163, 0, 0, 635, 637, 647, 664,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 683, 690, 670, 297,
	628, 693, 600, 617, 705, 618, 621, 659, 586, 640,
	232, 615, 587, 0, 604, 577, 611, 578, 601, 630,
	165, 599, 672, 643, 692, 195, 655, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 691, 636, 0, 699,
	198, 0, 652, 700, 287, 217, 0, 0, 632, 679,
	638, 668, 627, 661, 593, 651, 694, 616, 657, 695,
	0, 0, 0, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 654, 689, 613, 656, 658, 575,
	653, 0, 581, 588, 704, 685, 607, 608, 609, 0,
	0, 0, 0, 0, 0, 0, 631, 639, 665, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 0,
	649, 0, 0, 0, 589, 582, 0, 0, 629, 0,
	0, 0, 592, 125, 606, 666, 0, 573, 175, 218,
	136, 669, 684, 626, 188, 324, 688, 623, 622, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 614, 574, 673, 602, 612, 157, 610, 264,
	236, 314, 0, 646, 242, 263, 199, 303, 254, 312,
	313, 179, 708, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 625, 660, 603, 154, 663, 650,
	678, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 579, 0, 289,
	317, 330, 143, 598, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 596, 597, 594, 0, 595,
	641, 642, 696, 697, 698, 667, 590, 0, 680, 681,
	0, 0, 0, 0, 0, 671, 686, 687, 662, 706,
	619, 620, 580, 583, 584, 585, 591, 633, 634, 645,
	648, 676, 675, 674, 677, 682, 702, 701, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 121, 132, 197, 707, 256, 171, 318, 576, 163,
	0, 0, 635, 637, 647, 664, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 683, 690, 670, 297, 628, 693, 600, 617,
	705, 618, 621, 659, 586, 640, 232, 615, 587, 0,
	604, 577, 611, 578, 601, 630, 165, 599, 672, 643,
	692, 195, 655, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 691, 636, 0, 699, 198, 0, 652, 700,
	287, 217, 0, 0, 632, 679, 638, 668, 627, 661,
	593, 651, 694, 616, 657, 695, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	654, 689, 613, 656, 658, 575, 653, 0, 581, 588,
	704, 685, 607, 608, 609, 0, 0, 0, 0, 0,
	0, 0, 631, 639, 665, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 0, 649, 0, 0, 0,
	589, 582, 0, 0, 629, 0, 0, 0, 592, 125,
	606, 666, 0, 573, 175, 218, 136, 669, 684, 626,
	188, 324, 688, 623, 622, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 614, 574,
	673, 602, 612, 157, 610, 264, 236, 314, 0, 646,
	242, 263, 199, 303, 254, 312, 313, 179, 708, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	625, 660, 603, 154, 663, 650, 678, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 579, 0, 289, 317, 330, 143, 598,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 596, 597, 594, 0, 595, 641, 642, 696, 697,
	698, 667, 590, 0, 680, 681, 0, 0, 0, 0,
	0, 671, 686, 687, 662, 706, 619, 620, 580, 583,
	584, 585, 591, 633, 634, 645, 648, 676, 675, 674,
	677, 682, 702, 701, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 121, 132, 197,
	707, 256, 171, 318, 576, 163, 0, 0, 635, 637,
	647, 664, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 683, 690,
	670, 297, 628, 693, 600, 617, 705, 618, 621, 659,
	586, 640, 232, 615, 587, 0, 604, 577, 611, 578,
	601, 630, 165, 599, 672, 643, 692, 195, 655, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 1344, 1348,
	0, 699, 198, 0, 652, 700, 287, 217, 0, 0,
	632, 679, 638, 668, 627, 661, 593, 651, 694, 616,
	657, 695, 0, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 654, 689, 613, 656,
	658, 575, 653, 0, 581, 588, 704, 685, 607, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 631, 639,
	665, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 649, 0, 0, 0, 589, 582, 0, 0,
	629, 0, 0, 0, 592, 125, 606, 666, 0, 573,
	175, 218, 136, 669, 684, 1347, 188, 324, 688, 623,
	622, 1342, 0, 1343, 178, 196, 570, 122, 134, 1340,
	1346, 228, 261, 271, 614, 574, 673, 602, 612, 157,
	610, 264, 236, 314, 0, 646, 242, 263, 199, 303,
	254, 312, 313, 179, 708, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 625, 660, 603, 154,
	663, 650, 678, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 579,
	0, 289, 317, 330, 143, 598, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 596, 597, 594,
	0, 595, 641, 642, 696, 697, 698, 667, 590, 0,
	680, 681, 0, 0, 0, 0, 0, 671, 686, 687,
	662, 706, 619, 620, 580, 583, 584, 585, 591, 633,
	634, 645, 648, 676, 675, 674, 677, 682, 702, 701,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 121, 132, 197, 707, 256, 171, 318,
	576, 163, 0, 0, 635, 637, 647, 664, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 683, 690, 670, 297, 628, 693,
	600, 617, 705, 618, 621, 659, 586, 640, 232, 615,
	587, 0, 604, 577, 611, 578, 601, 630, 165, 599,
	672, 643, 692, 195, 655, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 691, 636, 0, 699, 198, 0,
	652, 700, 287, 217, 0, 0, 632, 679, 638, 668,
	627, 661, 593, 651, 694, 616, 657, 695, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 654, 689, 613, 656, 658, 575, 653, 0,
	581, 588, 704, 685, 607, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 631, 639, 665, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 649, 0,
	0, 0, 589, 582, 0, 0, 629, 0, 0, 0,
	592, 125, 606, 666, 0, 573, 175, 218, 136, 669,
	684, 626, 188, 324, 688, 623, 622, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	614, 574, 673, 602, 612, 157, 610, 264, 236, 314,
	0, 646, 242, 263, 199, 303, 254, 312, 313, 179,
	708, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 625, 660, 603, 154, 663, 650, 678, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 579, 0, 289, 317, 330,
	143, 598, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 596, 597, 594, 0, 595, 641, 642,
	696, 697, 698, 667, 590, 0, 680, 681, 0, 0,
	0, 0, 0, 671, 686, 687, 662, 706, 619, 620,
	580, 583, 584, 585, 591, 633, 634, 645, 648, 676,
	675, 674, 677, 682, 702, 701, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 121,
	132, 197, 707, 256, 171, 318, 576, 163, 0, 0,
	635, 637, 647, 664, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	683, 690, 670, 297, 628, 693, 600, 617, 705, 618,
	621, 659, 586, 640, 232, 615, 587, 0, 604, 577,
	611, 578, 601, 630, 165, 599, 672, 643, 692, 195,
	655, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	691, 636, 0, 699, 198, 0, 652, 700, 287, 217,
	0, 0, 632, 679, 638, 668, 627, 661, 593, 651,
	694, 616, 657, 695, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 654, 689,
	613, 656, 658, 575, 653, 0, 581, 588, 704, 685,
	607, 608, 609, 0, 0, 0, 0, 0, 0, 0,
	631, 639, 665, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 605, 0, 649, 0, 0, 0, 589, 582,
	0, 0, 629, 0, 0, 0, 592, 125, 606, 666,
	0, 573, 175, 218, 136, 669, 684, 626, 188, 324,
	688, 623, 622, 252, 0, 292, 178, 196, 570, 122,
	134, 566, 177, 228, 261, 271, 614, 574, 673, 602,
	612, 157, 610, 264, 236, 314, 0, 646, 242, 263,
	199, 303, 254, 312, 313, 179, 708, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 625, 660,
	603, 154, 663, 650, 678, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 579, 0, 289, 317, 330, 143, 598, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 596,
	597, 594, 0, 595, 641, 642, 696, 697, 698, 667,
	590, 0, 680, 681, 0, 0, 0, 0, 0, 671,
	686, 687, 662, 706, 619, 620, 580, 583, 584, 585,
	591, 633, 634, 645, 648, 676, 675, 674, 677, 682,
	702, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 121, 132, 197, 707, 256,
	171, 318, 576, 163, 0, 0, 635, 637, 647, 664,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 683, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 441, 0, 0, 0, 165, 438,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 516, 198, 0,
	0, 419, 287, 217, 0, 0, 0, 0, 503, 504,
	0, 0, 0, 0, 0, 0, 1322, 0, 79, 0,
	0, 439, 463, 462, 465, 466, 467, 468, 0, 0,
	146, 464, 469, 498, 499, 1323, 0, 0, 436, 454,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 530, 0,
	453, 0, 0, 448, 449, 450, 455, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 506,
	0, 0, 188, 324, 0, 0, 528, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	513, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	505, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	413, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 517, 529, 523, 525, 524, 521, 522,
	520, 519, 518, 531, 507, 508, 509, 510, 511, 0,
	0, 0, 514, 0, 526, 527, 0, 0, 0, 0,
	470, 471, 472, 473, 474, 478, 479, 483, 484, 492,
	491, 490, 493, 494, 496, 495, 497, 475, 476, 477,
	480, 481, 482, 485, 486, 489, 487, 488, 512, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	34, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 165, 438, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 516, 198, 0, 0, 419, 287, 217, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 439, 463, 462, 465, 466,
	467, 468, 0, 0, 146, 464, 469, 498, 499, 0,
	0, 0, 436, 454, 0, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 530, 0, 453, 0, 0, 448, 449, 450,
	455, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 506, 0, 0, 188, 324, 0, 0,
	528, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 513, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 505, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 413, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 517, 529, 523,
	525, 524, 521, 522, 520, 519, 518, 531, 507, 508,
	509, 510, 511, 0, 0, 0, 514, 0, 526, 527,
	0, 0, 0, 0, 470, 471, 472, 473, 474, 478,
	479, 483, 484, 492, 491, 490, 493, 494, 496, 495,
	497, 475, 476, 477, 480, 481, 482, 485, 486, 489,
	487, 488, 512, 121, 132, 197, 77, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 165, 438, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 516, 198, 0, 0, 419, 287,
	217, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 439, 463,
	462, 465, 466, 467, 468, 0, 0, 146, 464, 469,
	498, 499, 0, 0, 0, 436, 454, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 451,
	452, 432, 0, 0, 0, 530, 0, 453, 0, 0,
	448, 449, 450, 455, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 506, 0, 0, 188,
	324, 0, 0, 528, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 513, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 505, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 413, 321, 326,
	0, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	517, 529, 523, 525, 524, 521, 522, 520, 519, 518,
	531, 507, 508, 509, 510, 511, 0, 0, 0, 514,
	0, 526, 527, 0, 0, 0, 0, 470, 471, 472,
	473, 474, 478, 479, 483, 484, 492, 491, 490, 493,
	494, 496, 495, 497, 475, 476, 477, 480, 481, 482,
	485, 486, 489, 487, 488, 512, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 441, 0, 0, 0, 165, 438,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 516, 198, 0,
	0, 419, 287, 217, 0, 0, 0, 0, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	823, 439, 463, 462, 465, 466, 467, 468, 0, 0,
	146, 464, 469, 498, 499, 0, 0, 0, 436, 454,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 530, 0,
	453, 0, 0, 448, 449, 450, 455, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 506,
	0, 0, 188, 324, 0, 0, 528, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	513, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	505, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	413, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 517, 529, 523, 525, 524, 521, 522,
	520, 519, 518, 531, 507, 508, 509, 510, 511, 0,
	0, 0, 514, 0, 526, 527, 0, 0, 0, 0,
	470, 471, 472, 473, 474, 478, 479, 483, 484, 492,
	491, 490, 493, 494, 496, 495, 497, 475, 476, 477,
	480, 481, 482, 485, 486, 489, 487, 488, 512, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 165, 438, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	516, 198, 0, 0, 419, 287, 217, 0, 0, 0,
	0, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 439, 463, 462, 465, 466, 467,
	468, 0, 0, 146, 464, 469, 498, 499, 0, 0,
	0, 436, 454, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 452, 1210, 0, 0,
	0, 530, 0, 453, 0, 0, 448, 449, 450, 455,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 506, 0, 0, 188, 324, 0, 0, 528,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 513, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 505, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 413, 321, 326, 0, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 517, 529, 523, 525,
	524, 521, 522, 520, 519, 518, 531, 507, 508, 509,
	510, 511, 0, 0, 0, 514, 0, 526, 527, 0,
	0, 0, 0, 470, 471, 472, 473, 474, 478, 479,
	483, 484, 492, 491, 490, 493, 494, 496, 495, 497,
	475, 476, 477, 480, 481, 482, 485, 486, 489, 487,
	488, 512, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 165, 438, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 516, 198, 0, 0, 419, 287, 217,
	0, 0, 0, 0, 503, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 439, 463, 1254,
	465, 466, 467, 468, 0, 0, 146, 464, 469, 498,
	499, 0, 0, 0, 436, 454, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 451, 452,
	1210, 0, 0, 0, 530, 0, 453, 0, 0, 448,
	449, 450, 455, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 506, 0, 0, 188, 324,
	0, 0, 528, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 513, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 505, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 413, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 517,
	529, 523, 525, 524, 521, 522, 520, 519, 518, 531,
	507, 508, 509, 510, 511, 0, 0, 0, 514, 0,
	526, 527, 0, 0, 0, 0, 470, 471, 472, 473,
	474, 478, 479, 483, 484, 492, 491, 490, 493, 494,
	496, 495, 497, 475, 476, 477, 480, 481, 482, 485,
	486, 489, 487, 488, 512, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 165, 438, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 516, 198, 0, 0,
	419, 287, 217, 0, 0, 0, 0, 503, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	439, 463, 1251, 465, 466, 467, 468, 0, 0, 146,
	464, 469, 498, 499, 0, 0, 0, 436, 454, 0,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 451, 452, 1210, 0, 0, 0, 530, 0, 453,
	0, 0, 448, 449, 450, 455, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 506, 0,
	0, 188, 324, 0, 0, 528, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 513,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 505,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 413,
	321, 326, 0, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 517, 529, 523, 525, 524, 521, 522, 520,
	519, 518, 531, 507, 508, 509, 510, 511, 0, 0,
	0, 514, 0, 526, 527, 0, 0, 0, 0, 470,
	471, 472, 473, 474, 478, 479, 483, 484, 492, 491,
	490, 493, 494, 496, 495, 497, 475, 476, 477, 480,
	481, 482, 485, 486, 489, 487, 488, 512, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	165, 438, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 516,
	198, 0, 0, 419, 287, 217, 0, 0, 0, 0,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 1127, 439, 463, 462, 465, 466, 467, 468,
	0, 0, 146, 464, 469, 498, 499, 0, 0, 0,
	436, 454, 0, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 451, 452, 0, 0, 0, 0,
	530, 0, 453, 0, 0, 448, 449, 450, 455, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 506, 0, 0, 188, 324, 0, 0, 528, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 513, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 505, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 413, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 517, 529, 523, 525, 524,
	521, 522, 520, 519, 518, 531, 507, 508, 509, 510,
	511, 0, 0, 0, 514, 0, 526, 527, 0, 0,
	0, 0, 470, 471, 472, 473, 474, 478, 479, 483,
	484, 492, 491, 490, 493, 494, 496, 495, 497, 475,
	476, 477, 480, 481, 482, 485, 486, 489, 487, 488,
	512, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 441,
	0, 0, 0, 165, 438, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 516, 198, 0, 0, 419, 287, 217, 0,
	0, 0, 0, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 439, 463, 462, 465,
	466, 467, 468, 0, 0, 146, 464, 469, 498, 499,
	0, 0, 0, 436, 454, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 452, 0,
	0, 0, 0, 530, 0, 453, 0, 0, 448, 449,
	450, 455, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 506, 0, 0, 188, 324, 0,
	0, 528, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 513, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 505, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 413, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 517, 529,
	523, 525, 524, 521, 522, 520, 519, 518, 531, 507,
	508, 509, 510, 511, 0, 0, 0, 514, 0, 526,
	527, 0, 0, 0, 0, 470, 471, 472, 473, 474,
	478, 479, 483, 484, 492, 491, 490, 493, 494, 496,
	495, 497, 475, 476, 477, 480, 481, 482, 485, 486,
	489, 487, 488, 512, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 516, 198, 0, 0, 419,
	287, 217, 0, 0, 0, 0, 503, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 439,
	463, 462, 465, 466, 467, 468, 0, 0, 146, 464,
	469, 498, 499, 0, 0, 0, 0, 454, 0, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	451, 452, 0, 0, 0, 0, 530, 0, 453, 0,
	0, 448, 449, 450, 455, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 506, 0, 0,
	188, 324, 0, 0, 528, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 513, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 505, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 413, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 517, 529, 523, 525, 524, 521, 522, 520, 519,
	518, 531, 507, 508, 509, 510, 511, 1257, 1258, 1259,
	514, 0, 526, 527, 0, 0, 0, 0, 470, 471,
	472, 473, 474, 478, 479, 483, 484, 492, 491, 490,
	493, 494, 496, 495, 497, 475, 476, 477, 480, 481,
	482, 485, 486, 489, 487, 488, 512, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 516, 198,
	0, 0, 419, 287, 217, 0, 0, 0, 0, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 439, 463, 462, 465, 466, 467, 468, 0,
	0, 146, 464, 469, 498, 499, 0, 0, 0, 0,
	454, 0, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 451, 452, 0, 0, 0, 0, 530,
	0, 453, 0, 0, 448, 449, 450, 455, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	506, 0, 0, 188, 324, 0, 0, 528, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 513, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 505, 2363, 242, 263, 199, 303, 254, 312, 313,
	179, 413, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 517, 529, 523, 525, 524, 521,
	522, 520, 519, 518, 531, 507, 508, 509, 510, 511,
	0, 0, 0, 514, 0, 526, 527, 0, 0, 0,
	0, 470, 471, 472, 473, 474, 478, 479, 483, 484,
	492, 491, 490, 493, 494, 496, 495, 497, 475, 476,
	477, 480, 481, 482, 485, 486, 489, 487, 488, 512,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 516, 198, 0, 0, 419, 287, 217, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 823, 439, 463, 462, 465, 466,
	467, 468, 0, 0, 146, 464, 469, 498, 499, 0,
	0, 0, 0, 454, 0, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 530, 0, 453, 0, 0, 448, 449, 450,
	455, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 506, 0, 0, 188, 324, 0, 0,
	528, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 513, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 505, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 413, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 517, 529, 523,
	525, 524, 521, 522, 520, 519, 518, 531, 507, 508,
	509, 510, 511, 0, 0, 0, 514, 0, 526, 527,
	0, 0, 0, 0, 470, 471, 472, 473, 474, 478,
	479, 483, 484, 492, 491, 490, 493, 494, 496, 495,
	497, 475, 476, 477, 480, 481, 482, 485, 486, 489,
	487, 488, 512, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 516, 198, 0, 0, 419, 287,
	217, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 439, 463,
	462, 465, 466, 467, 468, 0, 0, 146, 464, 469,
	498, 499, 0, 0, 0, 0, 454, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 451,
	452, 0, 0, 0, 0, 530, 0, 453, 0, 0,
	448, 449, 450, 455, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 506, 0, 0, 188,
	324, 0, 0, 528, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 513, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 505, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 413, 321, 326,
	0, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 419, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 1899, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	517, 529, 523, 525, 524, 521, 522, 520, 519, 518,
	531, 507, 508, 509, 510, 511, 0, 0, 0, 514,
	0, 526, 527, 0, 0, 0, 0, 470, 471, 472,
	473, 474, 478, 479, 483, 484, 492, 491, 490, 493,
	494, 496, 495, 497, 475, 476, 477, 480, 481, 482,
	485, 486, 489, 487, 488, 512, 121, 132, 197, 0,
	256, 171, 318, 413, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 1300, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 0, 198, 0,
	0, 419, 287, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 1304, 0, 0, 0, 0,
	0, 119, 0, 392, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 396, 397, 401, 402,
	406, 407, 416, 415, 414, 417, 418, 421, 420, 422,
	398, 399, 400, 403, 404, 405, 408, 409, 412, 410,
	411, 125, 0, 0, 0, 0, 175, 218, 136, 0,
	0, 0, 188, 324, 0, 1303, 0, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	0, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	0, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	413, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 396, 397, 401, 402, 406, 407, 416,
	415, 414, 417, 418, 421, 420, 422, 398, 399, 400,
	403, 404, 405, 408, 409, 412, 410, 411, 0, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	0, 198, 0, 0, 419, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1304, 0,
	0, 0, 0, 0, 119, 0, 392, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 0, 0, 188, 324, 0, 1303, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 1298, 263, 199, 303, 254,
	312, 313, 179, 413, 321, 326, 0, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 396, 397, 401, 402,
	406, 407, 416, 415, 414, 417, 418, 421, 420, 422,
	398, 399, 400, 403, 404, 405, 408, 409, 412, 410,
	411, 0, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 845,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 0, 198, 0, 0, 419, 287, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 846, 0, 849,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 842, 841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 0, 0, 0, 188, 324,
	0, 0, 0, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 0, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 0, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 413, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 396,
	397, 401, 402, 406, 407, 416, 415, 414, 417, 418,
	421, 420, 422, 398, 399, 400, 403, 404, 405, 408,
	409, 412, 410, 411, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 195, 1578, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 0, 198, 0, 0,
	419, 287, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 392, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 0, 0,
	0, 188, 324, 0, 0, 0, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 0,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 0,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 413,
	321, 326, 0, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 396, 397, 401, 402, 406, 407, 416, 415,
	414, 417, 418, 421, 420, 422, 398, 399, 400, 403,
	404, 405, 408, 409, 412, 410, 411, 0, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 0,
	198, 0, 0, 419, 287, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 392, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 0, 0, 0, 188, 324, 0, 0, 0, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 0, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 0, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 413, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 396, 397, 401, 402, 406,
	407, 416, 415, 414, 417, 418, 421, 420, 422, 398,
	399, 400, 403, 404, 405, 408, 409, 412, 410, 411,
	0, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 419, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 846, 0, 849, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 413, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 396, 397,
	401, 402, 406, 407, 416, 415, 414, 417, 418, 421,
	420, 422, 398, 399, 400, 403, 404, 405, 408, 409,
	412, 410, 411, 0, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 419,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 413, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 396, 397, 401, 402, 406, 407, 416, 415, 414,
	417, 418, 421, 420, 422, 398, 399, 400, 403, 404,
	405, 408, 409, 412, 410, 411, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 859,
	858, 868, 869, 861, 862, 863, 864, 865, 866, 867,
	860, 0, 0, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 34, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 1295, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 132, 197, 77, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 995, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 0,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 994, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 0, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 0, 198, 0, 0, 0, 287, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 0, 0, 0, 188, 324, 0, 0,
	0, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 0, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 0, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 0, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 964, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 0, 198, 0, 0, 0, 287,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 0, 0, 0, 188,
	324, 0, 0, 0, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 0, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 0, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 0, 321, 326,
	0, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 0, 198, 0,
	0, 0, 287, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 0,
	0, 0, 188, 324, 0, 0, 0, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	0, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	0, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	0, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	0, 198, 0, 0, 0, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 116, 0, 188, 324, 0, 0, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 0, 321, 326, 0, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 0, 198, 0, 0, 0, 287, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 0, 0, 0, 188, 324,
	0, 0, 0, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 0, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 0, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 0, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 0, 198, 0, 0,
	0, 287, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 0, 0,
	0, 188, 324, 0, 0, 0, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 0,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 0,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 0,
	321, 326, 0, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 0,
	198, 0, 0, 0, 287, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 0, 0, 0, 188, 324, 0, 0, 0, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 0, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 0, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 0, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 554, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 550, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 555, 553, 544, 545, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	551, 552, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 0,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 0, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 989, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 541,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 554, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 550, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 555, 553, 544, 545, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 551, 552, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325,
}
var yyPact = [...]int{

	224, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1498, -1000, -1000, -1000, -1000, -1000, -1000,
	708, 227, -1000, -1000, 431, 119, 23363, 430, 2595, 24229,
	-1000, -1000, -1000, 147, 246, 24229, -1000, -1000, -1000, 226,
	339, 1046, 1361, 1043, 56, -56, -71, -1000, 1555, 1557,
	-1000, -1000, 277, 61, -1000, -1000, -1000, 19032, 174, -1000,
	-1000, 1482, 1495, 1254, -1000, 12537, 278, 278, 22930, 25961,
	-1000, 1552, 24229, 11236, -1000, 417, 24229, -161, 272, 272,
	176, 427, -1000, 640, -1000, -1000, -1000, -1000, 24229, 273,
	23796, 273, 273, 273, 273, 273, 24229, -1000, 488, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 24229, 1042, 1385, 633, 130, 8184, 8184, -1000, 667,
	-1000, 167, 162, 165, 153, 101, 718, 1163, 1482, 1482,
	8184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 229, 292,
	215, 174, 637, -1000, -1000, -1000, -1000, -1000, 1384, 1379,
	865, 1377, 113, 1376, 1207, -29, -1000, 1041, 24229, -1000,
	-1000, 1223, 1469, 423, 24229, -1000, -90, 1161, -1000, 1160,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 873, 1418, 792, 15135, 1336, -1000, -1000,
	725, 1531, -1000, 18166, 470, -1000, 15135, 3790, 1163, -1000,
	-1000, 1163, -1000, -1000, -1000, 451, -1000, -1000, 16867, 16867,
	16867, 16867, 16867, 16867, 16867, 16867, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, -1000, -1000,
	1163, -1000, 12104, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 15135, 1163, 1163, 1163, 1163,
	1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163,
	1163, 1163, 22497, 21631, 24229, 1100, 1094, -1000, -1000, 468,
	1157, -101, 25528, -1000, -1000, -1000, -1000, 24662, 21198, 630,
	-1000, -1000, -1000, -1000, 1375, -1000, -1000, 467, -1000, 1498,
	-1000, -1000, 1032, 249, -1000, 4183, 4629, -1000, -1000, -1000,
	1193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23796,
	1466, 318, 1029, 680, 1028, 1026, 1025, 272, 1024, 1155,
	290, 24229, 1452, 1228, 24229, 1023, 1022, 1020, 1019, -1000,
	10800, -1000, 8184, 633, -1000, 867, 15135, 272, 272, 8184,
	8184, 8184, 24229, 24229, 24229, -1000, -1000, -1000, -1000, 24229,
	-1000, -1000, 633, 633, 8184, 633, 632, 1530, 632, 632,
	-1000, -1000, -1000, -1000, 15135, -1000, 16867, 511, -1000, -1000,
	-1000, -1000, 1018, 228, -1000, -1000, -1000, -1000, -1000, -1000,
	1015, 113, 113, -1000, 866, 113, 1129, -1000, 598, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 113, -1000, 14702, -297, -1000, -1000, 1151, -1000, 160,
	1254, -1000, -1000, 174, -1000, -1000, 24229, 8184, -122, 19032,
	1163, 9492, -1000, -1000, -1000, 1548, 525, 1119, -1000, -1000,
	1144, -1000, 862, 466, 780, 1268, -1000, -1000, -1000, 24229,
	-1000, 15135, 15135, 838, -1000, 19465, -1000, -1000, -1000, -1000,
	9056, 546, 16867, 744, 574, 16867, 16867, 16867, 16867, 16867,
	16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867, 16867,
	819, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014,
	-1000, 174, 1068, 1068, 498, 498, 498, 498, 498, 498,
	498, 20331, 1463, 13403, 13403, 13403, 1463, 873, 873, 13403,
	13403, 13403, 13403, 13403, 13403, 1463, 1463, 13403, 873, 873,
	873, 873, 13403, 13403, 13403, 13403, 1463, 13403, 13403, 13403,
	1463, 873, 1008, 807, 12104, 13403, 13403, 13403, 873, 15135,
	15135, 14269, 13836, 15568, 13403, 13403, 1463, 675, 807, 24662,
	-1000, -1000, 16434, -1000, -1000, -1000, -1000, -1000, 873, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23796, 23796, 13403,
	13403, 13403, 13403, 196, 24229, -1000, 1096, 1159, -1000, -1000,
	-1000, 1465, 20765, 17733, -1000, 196, 1086, 21631, 24229, -1000,
	-1000, 21631, 24229, 8620, 25095, 1123, -1000, -85, -139, -101,
	-1000, -1000, 495, -1000, -1000, -1000, 11670, -1000, 9928, 1482,
	1254, 6004, 10364, -1000, 4629, 1193, -1000, -39, -1000, -1000,
	-1000, 1177, -1000, 1177, 237, 23, 1177, 1177, 1177, 1177,
	1177, 0, 0, 0, 0, 27, -1000, -1000, -1000, -1000,
	-1000, 1192, 1190, -1000, 1177, 1177, 1177, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1186, 213, 1179, 1179, 1179,
	1179, 1179, 232, 232, -1000, 15135, 1156, -1000, 24229, 8184,
	1439, 8184, 180, 1189, 24229, -1000, 24229, 24229, 490, -1000,
	24229, 1143, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 807, 1003, 998, -1000, -1000, -1000, -1000,
	-1000, -1000, 650, -1000, -1000, -1000, -1000, 633, 24229, 24229,
	24229, 1459, 633, 807, 491, 873, -1000, -1000, 986, -1000,
	1129, 1129, -1000, 1129, 113, 1068, 1129, -1000, 997, 1434,
	861, 24229, -1000, 19032, -30, -1000, -144, 1463, 873, 613,
	-1000, -1000, -1000, -1000, -1000, 172, 940, 465, -1000, 1264,
	792, 792, 15135, -1000, -1000, -1000, 9928, 1475, -1000, 1279,
	1275, 1196, -1000, -1000, 546, 669, -1000, -1000, 813, -1000,
	-1000, -1000, -1000, 461, 1163, -1000, 3305, -1000, -1000, -1000,
	-1000, 744, 16867, 16867, 16867, 491, 3305, 3442, 1154, 762,
	498, 726, 726, 497, 497, 497, 497, 497, 877, 877,
	-1000, -1000, -1000, 873, -1000, -1000, -1000, 13403, 991, -1000,
	-1000, 807, 457, 991, 991, 13403, -176, -176, 873, 991,
	991, 991, 873, 991, 13403, 13403, 991, -176, -176, -176,
	-176, 991, 991, 991, 991, 13403, 991, 991, 991, 13403,
	-1000, 15135, -1000, 873, 991, 991, 991, -1000, 720, 823,
	607, 1528, 991, 600, 1520, 991, 683, 16867, 16867, 16867,
	991, 991, 13403, 696, -1000, 15135, 873, -1000, 1532, 1127,
	1126, 991, 873, 1125, 991, 991, 170, 1163, -1000, 9928,
	21631, 21631, 21631, 21631, 21631, -1000, 1250, 1247, -1000, 1240,
	1239, 1246, 19032, 994, 873, 150, 20765, -1000, 1163, -1000,
	18599, 485, 398, 328, 322, 1509, 21631, 1067, -1000, 1067,
	-1000, 456, -1000, -1000, 24662, -101, -142, -1000, -1000, 1123,
	-1000, 835, -1000, -1000, 807, -1000, 454, 1418, 1463, 1121,
	5568, -1000, -1000, -1000, -1000, 249, -1000, -1000, -1000, 1187,
	3156, -1000, 1315, 519, 541, 896, 1292, -1000, -1000, 283,
	-46, -1000, -1000, 831, 0, 0, 1177, 1177, 208, 1177,
	-1000, 0, -1000, -1000, -1000, 495, 1370, 495, 495, 495,
	495, 0, 858, 858, -1000, -1000, -1000, -1000, 809, -1000,
	1186, -1000, 786, -1000, -1000, -1000, -1000, -1000, -1000, 815,
	1227, 23796, 174, 1458, -1000, -1000, -1000, 1514, -1000, -1000,
	429, -1000, 287, -1000, -1000, -1000, -1000, 8184, 24229, 8184,
	8184, 1509, 984, 962, -1000, -1000, -1000, 632, 633, 1365,
	-1000, -1000, 16867, 161, -1000, -1000, -1000, -1000, 196, 420,
	-1000, -1000, -32, -1000, -1000, 1268, -1000, 1116, -1000, -1000,
	606, 500, 631, 247, 247, -1000, 549, 247, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 192, 1457, 9492, 9492,
	1262, -1000, -1000, -1000, 24229, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7748, 13403, -1000, 491, 3305, 3280,
	-1000, 16867, -1000, 991, 13403, -176, 7312, -176, -176, 991,
	-1000, 22064, -1000, -176, -176, -176, -176, -176, -176, 991,
	991, -176, -1000, -1000, -1000, -1000, -176, -176, -176, -176,
	991, -176, -176, -176, 873, 807, -1000, -1000, -1000, -1000,
	303, 819, 303, 16867, 16867, -1000, 16867, 16867, -1000, -1000,
	16867, 2524, 2492, 2436, -210, -1000, 1124, 656, -1000, 15135,
	722, -1000, -1000, 16867, 16867, -1000, -1000, -1000, -1000, 1226,
	9928, 1163, 6440, -1000, 23796, 1091, -1000, 569, 565, 1159,
	1185, 1224, 1114, -1000, -1000, -1000, -1000, 1242, -1000, 1233,
	-1000, -1000, 1168, -1000, -1000, 1110, 1163, 23796, 16867, 485,
	-1000, 1163, 1163, 1163, 1498, 15135, 1067, -1000, -1000, 510,
	-1000, -1000, -99, -129, -1000, -1000, -1000, 9492, -1000, 6004,
	-1000, 6004, -1000, 19898, 255, 519, 233, -1000, 896, -1000,
	-1000, 896, -1000, -1000, -1000, 1181, -1000, 729, -1000, -1000,
	-1000, -1000, -1000, 16867, 1545, -1000, 1314, -1000, 1306, 857,
	-1000, -1000, 960, 495, 495, 0, -1000, -1000, 1177, -1000,
	495, -1000, 552, -1000, -1000, -1000, -1000, 495, 966, -1000,
	959, 1099, -1000, 957, 59, 24229, -1000, -1000, -1000, 1222,
	-1000, -1000, -1000, 936, 1083, -1000, 4183, 954, 952, 951,
	24229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 633, -1000,
	16867, 3305, -1000, -1000, 0, 24229, -1000, 1196, 613, -1000,
	357, -1000, 896, 402, -1000, -1000, 234, -1000, 1292, -1000,
	4562, 946, -1000, 17063, 4761, 23796, 1304, 1295, 945, 24229,
	23796, -1000, -1000, 4672, 941, 15135, -1000, 23796, 23796, 1163,
	449, -1000, -1000, -1000, 1002, 12537, -1000, -1000, 873, -1000,
	16867, 3305, -176, -1000, -1000, -1000, -1000, 447, -1000, -1000,
	-176, -1000, 368, -1000, -1000, -1000, -1000, -1000, -1000, -176,
	-176, -1000, -1000, -1000, -1000, -1000, -176, -1000, -1000, -1000,
	-1000, 873, 1177, 1177, -1000, 1177, 1179, -1000, 1177, 47,
	1177, 46, 873, 873, 3122, 2722, 2397, 1356, 1532, 16867,
	16867, 16867, 1163, -172, -1000, 807, 15135, 2344, 1706, -1000,
	1419, 1085, 1066, -1000, -1000, 12970, 873, 1274, 940, -1000,
	19032, 935, -1000, 1498, 9928, 15135, 15135, -1000, -1000, 15135,
	1178, -1000, 15135, -1000, -1000, -1000, -1000, 23796, 149, -1000,
	15135, 935, 1092, -1000, 23796, 23796, 23796, 1482, 807, -1000,
	-1000, -1000, -1000, 5568, -1000, 933, -1000, 1177, 1177, 1294,
	-1000, 1292, 896, -1000, -1000, -1000, 23796, -1000, 3305, -107,
	-1000, -1000, -1000, -1000, -1000, -1000, 495, -1000, -1000, -1000,
	-1000, -1000, 0, 856, 0, 776, -1000, 765, -1000, -1000,
	-245, 1173, -1000, 174, 24229, 69, 429, -1000, 4183, 4183,
	4183, -1000, -1000, 3305, -61, -1000, -1000, -1000, 4672, 239,
	4183, 4183, -1000, 1156, 519, 1290, 233, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 927, -1000, 433, -1000, 280, 239,
	4672, 807, 542, 1429, -1000, 9492, 1507, 21631, -1000, -1000,
	-1000, 3305, -1000, 6876, -1000, 873, 1494, -1000, -1000, -1000,
	-1000, -1000, 201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16867, 16867, 16867, 16867, -1000, 1532, 1532, 1532, 16867,
	873, 855, 807, 16867, 16867, 1282, -1000, 1163, -1000, -1000,
	1163, 171, -1000, 23796, 1482, -1000, 807, 807, 807, 23796,
	807, 915, -1000, 1163, 17300, -1000, 19032, 910, 910, 910,
	-1000, 502, 19898, 1427, 1427, -1000, -1000, 906, -1000, -1000,
	495, -1000, 495, 916, 911, -1000, 19898, -1000, 1479, -1000,
	69, -1000, 851, 128, 117, -1000, 112, 110, 106, 105,
	99, -1000, -1000, -1000, -1000, 1350, 1338, 1122, 907, -1000,
	-1000, 898, -1000, -1000, 1172, 896, -1000, 1171, -1000, 894,
	-1000, -1000, 23796, -1000, 239, 1422, 1417, 1163, -1000, 1505,
	1492, 1067, 12537, -1000, -1000, -1000, 15135, -1000, -1000, 1532,
	1532, 1532, 1532, -1000, -1000, -1000, 80, -1000, -1000, 1532,
	1532, 1541, -1000, 1066, 1163, -1000, 174, -1000, -1000, 902,
	-1000, 23796, -1000, -1000, 485, -1000, -1000, -1000, 502, -1000,
	890, 549, 850, -1000, -1000, -1000, 214, -1000, -1000, -1000,
	-1000, 889, -1000, 154, 4726, -1000, -1000, -1000, -1000, -1000,
	-1000, 1355, 1354, 139, 276, 1318, 1322, 1490, 21631, -1000,
	-1000, 283, 283, 19898, 1156, 19898, -1000, -1000, -1000, 16867,
	-1000, 187, -1000, 15135, 15135, 1507, -1000, 1113, -1000, -1000,
	-1000, -1000, 873, 95, -221, -1000, -1000, 9928, 1066, 873,
	-1000, -1000, -1000, -1000, -1000, 754, -1000, 24229, 502, 148,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15135, 15135,
	5132, 4726, -1000, -1000, -1000, -1000, 1168, 743, 1338, 1487,
	1333, 1331, -1000, 845, 1067, 887, 1166, 885, 3305, 883,
	-1000, 23796, -1000, 807, 1004, -1000, 807, 1505, -1000, 873,
	-1000, 1261, -216, -224, 891, -1000, -1000, 1165, -1000, 502,
	143, -1000, 733, 677, 84, 71, 3506, -1000, -1000, -1000,
	-1000, -301, -1000, -1000, 1342, -1000, 842, -1000, 1485, 1484,
	-1000, 1507, 502, 19898, 502, -1000, 187, 1272, 15135, -1000,
	-1000, -1000, 1258, -1000, 23796, -1000, 879, 864, 759, -1000,
	15135, 4726, 1478, 1477, 1474, 1416, 9492, 4637, -1000, -1000,
	816, 760, 1505, -1000, 876, -1000, -1000, 166, -1000, -218,
	872, 238, -1000, -1000, 689, 4726, -1000, 673, -302, 220,
	174, 341, 16867, -1000, -1000, -1000, -1000, -1000, -1000, 502,
	175, -222, 1220, -1000, -1000, -1000, -1000, -1000, -1000, 4726,
	-1000, -303, 4726, 2559, -1000, -1000, -1000, 4468, -1000, -1000,
	-1000, -1000, 67, -1000, -1000, 3305, -1000, 1163, -228, 1214,
	1213, 1537, -1000, -304, 4459, -305, 268, 4726, 688, -1000,
	15135, -1000, 341, -1000, 16001, -1000, -1000, 1540, -1000, 1538,
	472, 472, 4101, 674, 4726, -1000, -306, 267, 4726, -1000,
	639, -1000, 1532, 873, -1000, -1000, -1000, 221, 774, -1000,
	-1000, -1000, 3950, -1000, -308, 4726, -1000, -1000, -1000, -1000,
	-1000, 263, 3029, -309, -1000, 257, 4726, -1000,
}
var yyPgo = [...]int{

	0, 1887, 1881, 86, 1880, 153, 1879, 1878, 1877, 17,
	14, 12, 19, 1876, 1681, 1668, 1659, 1657, 1875, 1635,
	1873, 7, 1872, 1869, 1632, 1867, 1866, 1630, 1627, 1625,
	1617, 1864, 1862, 2, 1861, 22, 1860, 5, 113, 131,
	1859, 3, 1858, 1857, 8, 1854, 1853, 1615, 1852, 1851,
	1846, 1844, 75, 1843, 1603, 1600, 1840, 1839, 1594, 1589,
	1834, 1833, 1587, 1569, 1563, 1832, 135, 1831, 1830, 1829,
	241, 72, 121, 1827, 1826, 1812, 88, 53, 2068, 98,
	36, 83, 683, 1811, 21, 80, 1810, 1809, 114, 156,
	1807, 127, 1806, 65, 143, 74, 1805, 1804, 130, 1803,
	1802, 1801, 104, 1798, 1797, 2570, 1796, 1795, 123, 1793,
	48, 32, 42, 1792, 1791, 1790, 1789, 1788, 117, 184,
	1787, 1786, 111, 1784, 54, 1782, 1780, 148, 1779, 1778,
	1777, 105, 34, 1776, 41, 1774, 45, 52, 1772, 30,
	1771, 110, 1769, 1768, 25, 10, 1766, 38, 1758, 37,
	1757, 106, 204, 1068, 16, 31, 46, 56, 108, 81,
	23, 28, 100, 78, 64, 35, 1756, 118, 1754, 63,
	122, 115, 107, 119, 1753, 1752, 1751, 816, 1750, 1748,
	99, 1747, 58, 76, 749, 129, 92, 1746, 71, 1745,
	1744, 1743, 1741, 62, 90, 1740, 1739, 67, 94, 40,
	1462, 1109, 1889, 85, 128, 1738, 39, 1735, 1734, 3093,
	93, 101, 84, 1733, 82, 47, 50, 1732, 1731, 1727,
	1726, 1725, 1722, 1312, 1721, 1719, 1718, 1717, 57, 89,
	1716, 1713, 102, 70, 1710, 1707, 1705, 1704, 103, 59,
	116, 1700, 96, 95, 73, 1699, 1697, 1696, 1695, 43,
	33, 1694, 1692, 1691, 77, 61, 1690, 49, 29, 26,
	51, 11, 66, 60, 1689, 24, 1688, 91, 4, 6,
	9, 1686, 1684, 1678, 1672, 1670, 1664, 1661, 55, 1653,
	1621, 44, 1619, 1611, 1596, 27, 1592, 1585, 1578, 112,
	97, 1576, 0, 109, 132, 1567, 1565, 166,
}
var yyR1 = [...]int{

	0, 291, 291, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 65, 3, 3, 8, 4, 4,
	4, 5, 5, 86, 87, 87, 91, 91, 6, 6,
	7, 7, 9, 9, 69, 69, 10, 11, 11, 11,
	11, 294, 294, 100, 100, 98, 98, 99, 99, 162,
	162, 12, 12, 12, 167, 167, 172, 172, 172, 175,
	175, 175, 175, 154, 155, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 2, 276, 276, 277, 277,
	278, 278, 278, 278, 279, 279, 280, 280, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 25, 196,
	196, 45, 45, 46, 46, 46, 150, 150, 150, 13,
	13, 13, 13, 13, 20, 22, 22, 34, 34, 35,
	23, 23, 23, 23, 36, 36, 37, 26, 26, 26,
	26, 26, 26, 43, 43, 43, 42, 42, 41, 41,
	41, 41, 41, 41, 24, 24, 24, 24, 44, 44,
	39, 39, 38, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 27, 27, 27, 27, 27,
	27, 19, 275, 275, 275, 33, 33, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 50, 251, 252, 252, 252, 252,
	252, 252, 252, 252, 239, 239, 240, 216, 216, 216,
	216, 216, 216, 216, 216, 215, 215, 215, 215, 219,
	219, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	218, 218, 218, 218, 218, 218, 218, 218, 220, 220,
	220, 220, 220, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 222, 222,
	222, 222, 222, 222, 222, 222, 238, 238, 223, 223,
	232, 232, 233, 233, 233, 230, 230, 231, 231, 226,
	227, 234, 228, 228, 228, 229, 229, 229, 237, 237,
	237, 237, 224, 241, 241, 261, 261, 260, 260, 259,
	259, 259, 250, 250, 256, 256, 256, 256, 256, 256,
	256, 245, 245, 245, 244, 244, 246, 246, 249, 249,
	258, 258, 257, 257, 242, 242, 242, 262, 262, 262,
	262, 262, 243, 243, 243, 243, 263, 247, 247, 248,
	248, 248, 269, 270, 268, 268, 268, 268, 268, 115,
	115, 115, 253, 253, 253, 254, 254, 254, 255, 255,
	255, 273, 273, 272, 272, 47, 47, 48, 53, 53,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 149, 149, 149,
	49, 194, 194, 267, 267, 266, 264, 264, 265, 265,
	15, 51, 51, 16, 16, 16, 16, 16, 16, 16,
	271, 271, 271, 17, 17, 54, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 83, 181,
	181, 179, 179, 182, 182, 180, 180, 180, 183, 183,
	183, 213, 213, 213, 56, 56, 61, 61, 64, 64,
	64, 62, 63, 28, 29, 29, 29, 29, 30, 195,
	195, 59, 59, 60, 60, 60, 60, 75, 75, 295,
	295, 58, 58, 57, 57, 18, 296, 66, 67, 67,
	68, 68, 68, 186, 186, 72, 72, 72, 70, 70,
	70, 71, 71, 77, 77, 81, 81, 81, 81, 80,
	80, 80, 80, 152, 152, 152, 153, 153, 205, 205,
	205, 204, 204, 204, 204, 85, 85, 88, 88, 89,
	89, 89, 89, 92, 135, 135, 109, 109, 110, 110,
	110, 110, 110, 121, 121, 161, 161, 160, 160, 163,
	163, 90, 90, 90, 90, 95, 95, 96, 96, 97,
	97, 193, 193, 211, 211, 211, 101, 101, 101, 103,
	102, 102, 102, 102, 104, 104, 106, 107, 107, 105,
	105, 108, 111, 111, 111, 111, 112, 112, 82, 82,
	82, 82, 82, 82, 82, 178, 178, 114, 114, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 130,
	130, 130, 130, 130, 130, 116, 116, 116, 116, 116,
	116, 116, 76, 76, 131, 131, 131, 94, 93, 93,
	79, 79, 78, 78, 132, 132, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 125, 125, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 297,
	297, 127, 126, 126, 126, 126, 126, 126, 73, 73,
	73, 73, 73, 212, 212, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 142, 142,
	74, 74, 140, 140, 141, 143, 143, 139, 139, 139,
	118, 118, 118, 118, 118, 118, 118, 118, 120, 120,
	120, 144, 144, 133, 133, 84, 145, 145, 146, 147,
	147, 148, 148, 151, 156, 156, 156, 157, 157, 157,
	157, 122, 122, 158, 158, 158, 117, 117, 117, 117,
	117, 117, 117, 159, 159, 159, 159, 164, 164, 134,
	134, 137, 137, 136, 138, 165, 165, 169, 169, 166,
	166, 170, 170, 170, 170, 173, 173, 174, 174, 174,
	171, 171, 171, 168, 168, 168, 208, 208, 208, 176,
	176, 187, 187, 184, 184, 185, 185, 177, 177, 225,
	225, 190, 190, 190, 190, 190, 190, 190, 190, 192,
	192, 191, 191, 191, 188, 188, 188, 189, 189, 206,
	206, 202, 202, 207, 207, 203, 203, 209, 209, 210,
	210, 274, 274, 235, 235, 284, 284, 236, 236, 285,
	285, 287, 287, 282, 282, 283, 283, 286, 286, 31,
	288, 288, 289, 289, 290, 290, 290, 290, 32, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 292, 293, 197, 198, 198,
	198,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 11, 4, 7, 5, 1, 13,
	3, 10, 12, 2, 1, 3, 3, 6, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 2, 3, 3, 11, 7,
	9, 5, 5, 15, 11, 4, 0, 1, 1, 3,
	2, 3, 3, 3, 0, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 3, 3, 3, 3, 4, 0,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 4, 1, 1, 2, 3,
	4, 3, 3, 3, 3, 3, 3, 0, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 3, 3, 2, 4, 5,
	2, 3, 4, 2, 2, 3, 3, 3, 3, 3,
	4, 1, 1, 1, 1, 1, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 2, 1,
	2, 1, 2, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 2, 4, 3, 4, 3, 2,
	2, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 3, 3, 3, 3, 3, 1, 10, 11, 11,
	12, 12, 3, 3, 2, 1, 5, 1, 1, 0,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 0, 2, 0, 2, 1, 1, 5, 1, 3,
	2, 5, 4, 3, 3, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	4, 0, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 5, 6, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 5, 4,
	2, 4, 3, 6, 6, 3, 3, 3, 3, 1,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 1, 1, 2, 1, 1, 1, 2, 4,
	4, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 2, 2, 2, 2, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 4, 7, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 3, 2, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}
var yyChk = [...]int{

	-1000, -291, -1, -3, -8, -9, -10, -11, -12, -14,
	-47, -15, -16, -17, -54, -55, -56, -61, -62, -63,
	-59, -58, -57, -18, -24, -27, -19, -65, -28, -29,
	-30, -31, -32, -4, 6, 7, -69, 9, 10, 30,
	-50, 130, -48, -49, 133, 132, 169, 134, 162, 64,
	226, -64, 229, 230, -295, -195, 167, 168, 136, 213,
	214, 20, 37, 231, 233, 31, 32, -5, -86, -6,
	8, 323, 131, 227, 164, 163, 26, 372, -292, 68,
	442, -147, 15, -66, -296, -66, -66, -66, -66, -66,
	-251, -193, 105, 68, 23, -189, 143, 86, 314, 139,
	-196, -187, -188, 190, 200, 44, 150, 149, 140, 140,
	141, 143, 314, 139, 177, 176, 140, -105, -209, 71,
	-200, 369, 153, 384, 385, 131, 187, 226, 240, 234,
	268, 256, 370, 386, 154, 208, 138, 254, 257, 301,
	152, 201, 387, 290, 296, 211, 80, 229, 310, 388,
	155, 205, 207, 206, 195, 212, 36, 165, 252, 245,
	216, 190, 389, 377, 243, 28, 185, 390, 298, 273,
	391, 374, 297, 248, 244, 136, 392, 156, 150, 179,
	393, 274, 278, 394, 302, 395, 396, 397, 142, 238,
	239, 398, 191, 304, 272, 33, 151, 371, 48, 174,
	305, 38, 276, 37, 282, 399, 271, 266, 283, 400,
	401, 402, 403, 270, 237, 265, 203, 53, 137, 280,
	279, 281, 204, 300, 261, 259, 404, 405, 157, 406,
	407, 246, 18, 408, 409, 308, 168, 410, 42, 411,
	412, 413, 172, 414, 415, 416, 299, 275, 277, 189,
	417, 249, 147, 418, 176, 419, 373, 420, 306, 242,
	421, 158, 233, 173, 167, 309, 422, 214, 423, 424,
	425, 159, 426, 427, 428, 230, 231, 292, 209, 429,
	430, 431, 432, 199, 184, 312, 303, 52, 213, 287,
	433, 236, 149, 215, 434, 227, 43, 7, 202, 293,
	210, 200, 263, 175, 435, 436, 250, 251, 269, 235,
	264, 228, 177, 178, 169, 437, 311, 288, 375, 258,
	255, 181, 262, 438, 143, 439, 182, 232, 307, 253,
	289, 140, 123, 257, 301, 130, 291, 292, 298, -245,
	299, 176, 179, -213, 140, -179, 290, 344, 182, 183,
	71, 141, 142, 33, 303, 302, 294, -209, 144, 232,
	-75, 134, 170, -105, -197, -197, -197, -197, -44, 71,
	215, -44, 30, 71, 71, 36, 71, 231, 293, 293,
	6, -68, 5, -177, 143, 145, 228, -87, -91, -211,
	-209, -201, 73, 340, 341, 342, 343, 344, 357, 358,
	359, 345, 346, 360, 361, 362, 347, 348, 363, 364,
	366, 367, 365, 180, 351, 350, 349, 352, 353, 51,
	355, 354, 356, -3, -157, 17, 16, -72, 54, 55,
	-67, -80, 114, -82, -209, -113, 88, -119, 29, 71,
	-200, 24, -118, -201, -114, -139, -138, -94, 123, 124,
	125, 112, 113, 120, 89, 126, -125, -123, -124, -126,
	-128, -129, 73, 72, 81, 74, 75, 76, 77, 82,
	340, 341, 342, 343, 344, 357, 358, 359, 345, 346,
	360, 361, 362, 347, 348, 363, 364, 366, 367, 365,
	351, 350, 349, 352, 353, 355, 354, 356, 83, 84,
	-202, -136, -292, 58, 59, 170, 139, 324, 325, 326,
	327, 328, 368, 160, 332, 91, 47, 313, 322, 321,
	320, 318, 319, 315, 317, 316, 334, 335, 146, 314,
	118, 323, -177, -177, 11, -98, -99, -105, -108, -209,
	-166, 228, -173, -170, 302, 303, -171, -174, -168, -139,
	282, 415, 416, 301, 257, 300, -202, -209, -2, -5,
	6, -105, -252, -240, -243, -203, 155, -263, -202, -199,
	152, 71, -200, 135, 161, 87, 376, 23, 25, 285,
	340, 90, 123, 341, 342, 343, 16, 20, 91, 122,
	324, 344, 130, 62, 315, 317, 313, 314, 291, 29,
	10, 26, 163, 194, 22, 116, 132, 94, 95, 96,
	166, 24, 164, 84, 160, 19, 65, 11, 13, 338,
	339, 14, 146, 145, 107, 192, 141, 60, 8, 126,
	27, 104, 56, 345, 346, 380, 45, 381, 58, 105,
	17, 318, 319, 31, 368, 347, 171, 382, 348, 118,
	197, 63, 50, 88, 82, 34, 85, 66, 86, 15,
	193, 61, 336, 196, 383, 106, 133, 323, 59, 139,
	6, 333, 30, 162, 351, 350, 349, 352, 198, 57,
	326, 327, 353, 440, 140, 93, 334, 335, 144, 83,
	5, 44, 32, 9, 64, 67, 320, 321, 322, 47,
	51, 355, 354, 356, 92, 12, 337, 372, 180, 141,
	-105, 323, -185, 146, -185, 177, 176, 140, 97, -51,
	-105, -184, 146, -202, -184, -184, -184, -184, -184, -105,
	127, -105, 71, 30, -183, 105, 12, 314, 139, 71,
	176, 179, 140, 177, 143, -198, -292, -203, -198, -247,
	11, 107, 180, 180, 180, 181, 180, -182, -181, 178,
	296, 297, 293, 295, 12, -83, 105, -292, -157, -157,
	-198, 71, 231, 144, -60, -3, -11, -9, -10, -3,
	97, 30, 30, 73, 51, 30, -39, -38, -40, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 30, -275, 68, -235, 282, 71, -288, -289, -105,
	-66, -7, -5, -292, 21, 22, 140, -105, 306, 69,
	23, -292, -293, 70, -158, 19, 31, -122, 74, 77,
	-148, -151, -82, -209, 50, -70, 21, 22, 79, 11,
	-205, 87, 86, 104, -204, 23, 71, -200, -201, 73,
	127, -82, -116, 107, 88, 105, 106, 90, 109, 108,
	119, 112, 113, 114, 115, 116, 117, 118, 110, 111,
	122, 97, 98, 99, 100, 101, 102, 103, -178, -292,
	-94, -292, 128, 129, -119, -119, -119, -119, -119, -119,
	-119, -119, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -3, -132, -82, -292, -292, -292, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -292, -142, -82, -292,
	-297, -127, -292, -297, -127, -297, -127, -297, -292, -297,
	-127, -297, -127, -297, -297, -127, -297, -292, -292, -292,
	-292, -292, -292, -107, 27, -105, -85, -88, -89, -90,
	-109, -93, -292, -105, -94, -105, -98, -294, 69, 11,
	67, -294, 69, 127, 69, -167, -172, 304, 306, 228,
	-171, -171, -208, -202, 73, 29, 97, 30, 127, -147,
	-66, 70, 69, -243, 155, 152, -215, -219, -221, -220,
	-222, -217, -218, 254, 257, 261, 259, 255, 260, 123,
	258, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 30, 165, 250, 251, 252, 253, 274, 275,
	276, 277, 278, 279, 280, 281, 234, 256, 370, 235,
	236, 237, 238, 239, 240, 242, 243, 244, 245, 246,
	247, 248, 71, -201, -263, 68, -202, 23, 143, 71,
	88, 71, 71, 71, -185, 71, 69, 144, -98, 24,
	66, -100, -105, 71, 71, 71, 71, -210, -209, -199,
	-198, -183, 73, -82, -185, -185, -198, -198, -198, -105,
	-105, -105, -105, -183, -183, -198, -183, -180, 11, 107,
	11, -180, -180, -82, -119, 114, 71, 71, 231, 71,
	-39, -39, 73, -39, 69, 97, -39, 70, -132, -274,
	441, 69, -290, 23, 306, 307, 283, -72, -3, -105,
	-198, 307, 308, -91, -93, -292, -159, -203, 9, 107,
	69, 18, 69, -156, 25, 26, 127, -120, 51, 74,
	77, -186, 49, -105, -82, -82, -130, 82, 88, 83,
	84, -204, 114, -210, -203, -199, -119, -131, -136, -94,
	78, 107, 105, 106, 90, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-212, 71, 73, 71, -118, -118, -202, -70, -78, -81,
	114, -82, -209, -78, -78, -70, -293, -293, -81, -78,
	-78, -78, -81, -78, -70, -70, -78, -293, -293, -293,
	-293, -78, -78, -78, -78, -70, -78, -78, -78, -70,
	-293, 69, -293, -3, -78, -78, -78, -293, -82, -82,
	-139, 73, -78, -139, 73, -78, -119, 329, 330, 331,
	-78, -78, -70, -140, -141, 92, -139, -293, -119, -202,
	-202, -78, -79, -78, -78, -78, -162, 172, -105, 30,
	69, -101, -103, -102, -104, 56, 60, 62, 57, 58,
	59, 63, -193, -85, -92, 47, -292, -110, 172, -111,
	23, -211, 64, 145, 65, -162, 67, -85, -105, -85,
	-108, -209, 114, -170, -173, 69, 305, 307, 308, -167,
	-229, 122, 66, 85, -82, -203, -210, -157, -72, -253,
	-254, -255, -203, 73, 74, -240, -241, -242, -243, -256,
	155, -262, 147, 149, 44, -244, 156, 141, 45, -216,
	-230, 288, -223, 68, -223, -223, 262, 254, 257, 255,
	-223, -223, -223, -223, -223, -228, 257, -228, -228, -228,
	-228, 255, 68, 68, -223, -223, -223, -232, 68, -232,
	249, -233, 68, -233, -233, -233, -233, -263, -263, -82,
	-206, 67, -154, -105, -198, 24, -198, -45, 187, 161,
	68, -105, -105, -105, -271, 159, 154, -105, 69, 71,
	71, -248, 11, 107, -183, -209, -209, -105, -121, 23,
	-183, -76, 166, -293, 71, -38, -118, 70, -106, 27,
	73, -289, -211, 282, 307, -70, -293, -53, -52, -190,
	135, 132, 133, 137, 138, -266, 285, 131, 257, 80,
	29, 15, 324, 172, 375, 71, 173, -293, 69, 127,
	52, -122, -122, -151, -176, 19, 11, 47, 47, -71,
	57, 82, 83, 84, 127, -292, -131, -119, -119, -119,
	-76, 87, -293, -78, 69, -293, 127, -293, -293, -78,
	-152, 336, -152, -293, -293, -293, -293, -293, -293, -78,
	-78, -293, -152, -152, -152, -152, -293, -293, -293, -293,
	-78, -293, -293, -293, -79, -82, -293, -293, -293, -293,
	69, 67, 23, 11, 11, -293, 11, 11, -293, -293,
	11, -119, -119, -119, -293, -293, -78, -143, -141, 94,
	-82, -293, -293, 69, 69, -293, -293, -293, -293, -117,
	30, 47, -292, -3, -292, -165, -169, -139, -199, -88,
	-89, -89, -88, -89, 56, 56, 56, 61, 56, 61,
	56, -102, -211, -293, -293, -135, 186, -292, 34, -211,
	-111, 141, 141, 141, -112, 12, -85, -112, -112, 127,
	-172, -175, 309, 306, 312, 71, 73, 127, -158, 69,
	-255, 97, -243, 68, 71, 44, -201, 45, -244, 141,
	45, -244, -249, 71, -249, 45, 82, 88, -226, -227,
	-234, -237, -224, 29, 66, 285, 147, 45, 44, 80,
	-231, 289, 74, -228, -228, -223, -223, -223, 262, -223,
	-228, -229, 30, -229, -229, -229, -229, -228, -238, 73,
	-238, 74, -232, 74, 70, 66, -202, -3, 23, -46,
	8, 9, 10, -276, -277, -278, 71, 107, 192, 193,
	144, -198, -105, -198, -198, -112, 71, 71, -180, -183,
	34, -119, 182, 183, -162, 140, -290, -186, 69, -197,
	-194, -267, -244, -273, -242, -243, -272, 148, 156, 172,
	155, -194, -267, 155, 152, -244, 156, 147, 148, -191,
	-244, 144, 23, -194, -194, -250, 97, -194, 172, 23,
	-203, -203, 53, -105, -77, -155, 114, -203, -79, -76,
	87, -119, -293, -81, -153, -152, 114, -210, -153, -153,
	-293, -202, -292, -152, -153, -153, -152, -152, -152, -293,
	-293, -152, -153, -153, -153, -153, -293, -153, -153, -153,
	-293, -214, 123, 254, 165, 252, 245, 272, 259, 287,
	250, 288, -212, -214, -119, -119, -119, -119, -119, 11,
	11, 11, 369, -147, 96, -82, 93, -119, -119, -164,
	66, -165, -134, -137, -136, -292, -3, -293, -159, 6,
	372, -163, -202, -112, 69, 97, 97, -96, -95, 66,
	67, -97, 66, -95, 56, 56, -161, 68, 69, -136,
	-292, -163, -119, -111, -292, -292, -292, -147, -82, -112,
	306, 310, 311, -254, -255, -258, -257, -202, -201, 147,
	-262, 156, -244, -262, -249, -249, 68, 82, -119, 9,
	45, 45, 73, 70, -229, -229, -228, -223, -229, 71,
	123, -229, 70, 69, 70, 69, 70, 69, -115, 390,
	88, -105, -154, -154, 66, 70, 69, -215, 71, 71,
	71, -105, -183, -119, -228, -105, -71, -52, 68, -239,
	71, -201, -197, -249, -188, 147, 71, 71, -197, 71,
	-201, 71, -201, -202, 45, 45, 71, -105, -202, -239,
	71, -82, -202, -202, -93, 127, -112, 11, 69, -80,
	-293, -119, -153, 127, -153, -147, 172, -153, -153, -153,
	-293, -223, -223, -223, -233, -223, 239, -223, 239, -293,
	-293, 19, 19, 19, 19, -293, -119, -119, -119, -292,
	-74, 333, -82, 69, 69, 28, -164, 69, -293, -293,
	47, -293, -293, 69, -147, -169, -82, -82, -82, 68,
	-82, -160, -202, 186, -293, -111, -193, -160, -160, -160,
	-157, 70, 69, -223, -223, 45, -249, -160, -124, -229,
	-228, 73, -228, 74, 74, 390, 68, -3, -105, -279,
	-280, -281, 80, 371, 88, 194, 195, 157, 196, 197,
	198, -278, -215, -215, -215, -282, -182, -77, -239, -149,
	160, 161, -215, -215, -206, -246, -244, 45, 71, -192,
	144, 23, 144, -149, -239, 30, 132, 27, -203, -144,
	13, -85, -155, -155, 114, -293, 16, -228, 71, -119,
	-119, -119, -119, -293, -293, -293, -119, -293, 73, -119,
	-119, 45, -137, -134, 47, -3, -292, -202, -157, -160,
	70, 69, -136, -110, -211, -293, -293, -293, -260, -259,
	67, 151, 80, -257, -156, -156, 70, -229, -229, 70,
	70, -258, -154, 19, -154, -281, 73, 198, 194, 198,
	198, 198, 198, 199, -283, 38, -285, 39, 11, 70,
	71, -216, -216, 68, -249, 68, 71, -202, -149, 29,
	29, -292, -145, 14, 16, -112, -80, -132, -293, -293,
	-293, -293, -73, 107, 372, -293, -293, 9, -134, -3,
	70, -202, -111, -259, 71, -250, 73, 158, 70, 185,
	-21, -3, -9, -10, -11, -12, -14, -47, -15, -16,
	-22, -23, -17, -54, -55, -64, -62, -63, -59, -58,
	-26, -24, -27, -19, -28, -29, -30, -25, 91, 146,
	216, 226, 36, 36, 190, 191, -225, 145, -286, 43,
	-284, -236, 42, 16, -85, -258, -206, -258, -119, -264,
	-265, 172, -146, -82, -133, -84, -82, -144, -155, -147,
	-293, 370, 63, 373, -165, -293, 74, -105, -261, -260,
	186, -154, -82, -82, 71, -43, -207, 219, 220, 221,
	-203, -33, -21, -161, 74, -285, 16, -287, 40, 41,
	73, -112, 70, 68, 70, -293, 69, -202, 69, -145,
	-293, 53, 371, 374, 68, -150, 188, 189, -34, -35,
	92, 93, 217, 218, 222, -215, 69, 442, 38, 73,
	16, 16, -144, -261, -258, -261, -265, 47, -84, 53,
	-160, -154, 71, 71, 96, 94, -35, -82, -33, 19,
	19, 19, 29, -203, 96, -21, 73, 73, -145, 70,
	174, 372, 70, -13, -20, -12, -9, -10, -11, 226,
	91, -33, 93, 442, -44, 74, -3, -42, -41, 74,
	-44, 224, 88, 225, 71, -119, -261, 175, 373, -269,
	-270, 66, -154, -33, 442, -33, 96, 94, -36, -37,
	95, -21, 69, 223, -292, 374, -270, 66, -269, 66,
	10, 9, 442, 96, 442, 146, -33, 96, 94, -37,
	-82, -41, -119, 171, -268, 159, 154, 157, 30, -268,
	96, 91, 442, 146, -33, 93, -293, -293, 153, 29,
	82, 96, 442, -33, 146, 96, 442, 146,
}
var yyDef = [...]int{

	33, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, -2, 546, 546, 546, 546, 546, 546,
	621, -2, 405, 406, 0, 0, 0, 0, -2, 515,
	516, 517, 521, 522, 537, -2, 1367, 1367, 1367, 0,
	185, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	54, 55, 927, 0, 540, 529, 530, 0, 0, 1365,
	2, 867, 0, 555, 548, 0, 927, 927, 0, 0,
	85, 0, 0, 0, 622, 0, 0, 0, 925, 925,
	0, 0, 948, 0, 922, 944, 945, 946, 0, 923,
	0, 923, 923, 923, 923, 923, 0, 464, 639, 957,
	958, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 0, 0, 0, 508, 0, 1368, 1368, 479, 0,
	481, 0, 0, 0, 0, 0, 490, 0, 867, 867,
	1368, 351, 352, 353, 512, 513, 502, 514, 0, 0,
	0, 0, 0, 541, 542, 543, 544, 545, 164, 166,
	0, 186, 0, 189, 192, 963, 523, 0, 0, 988,
	546, 0, 550, 0, 0, 928, 518, 43, 44, 0,
	623, 624, 625, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 0, 873, 0, 0, 558, 556, 557,
	547, 0, 569, 578, 0, 648, 0, 653, 655, -2,
	-2, 0, 696, 697, 698, 699, 700, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 726, 727, 728,
	729, 730, 840, 841, 842, 843, 844, 845, 846, 847,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 657, 658,
	837, 894, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 828, 0, 799, 799, 799,
	799, 799, 799, 799, 799, 799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 67, 639,
	71, 1315, 0, 899, -2, -2, 901, 0, 0, 0,
	-2, -2, -2, -2, 1142, -2, 837, 0, 86, 859,
	546, 87, 0, 226, 227, 0, 1154, 375, 955, 956,
	1144, 951, 952, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 0,
	0, 0, 0, 0, 0, 0, 0, 925, 0, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 465, 1368, 508, 468, 0, 0, 925, 925, 1368,
	1368, 1368, 0, 0, 0, 477, 1369, 1370, 478, 0,
	377, 378, 508, 508, 1368, 508, 505, 0, 505, 505,
	503, 504, 499, 500, 0, 492, 0, 0, 495, 496,
	497, 524, 0, 0, 531, 533, 534, 535, 536, 532,
	0, 0, 0, 168, 0, 0, 188, 170, 0, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 0, 191, 0, 961, 964, 528, 979, 980, 0,
	555, 40, 50, 0, 551, 552, 0, 1368, 0, 0,
	0, 0, 49, 1366, 35, 0, 0, 868, 871, 872,
	860, 861, 864, 0, 0, 553, 559, 560, 549, 0,
	570, 0, 0, 0, 579, 0, 581, 582, 583, 584,
	0, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 676, 677, 678, 679, 680, 681, 654, 0,
	668, 0, 0, 0, 717, 718, 719, 720, 721, 722,
	723, 0, 558, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	558, 0, 0, 694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 829, 0,
	782, 791, 0, 783, 792, 784, 793, 785, 0, 786,
	794, 787, 795, 788, 789, 796, 790, 0, 0, 0,
	690, 0, 0, 69, 0, 638, 0, 585, 587, 588,
	589, -2, 0, 642, 688, -2, 0, 0, 0, 61,
	62, 0, 0, 0, 0, 72, 74, 0, 0, 1315,
	902, 903, 325, 916, 917, 918, 0, 914, 0, 867,
	555, 392, 0, 228, 0, 0, 237, 315, 246, 247,
	248, 308, 250, 308, 308, 0, 308, 308, 308, 308,
	308, 322, 322, 322, 322, 322, 291, 292, 293, 294,
	295, 0, 0, 268, 308, 308, 308, 272, 298, 299,
	300, 301, 302, 303, 304, 305, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 310, 310, 312, 312, 312,
	312, 312, 0, 0, 374, 0, 949, 83, 0, 1368,
	0, 1368, 0, 0, 0, 120, 0, 0, 460, 924,
	0, 455, 63, 456, 457, 458, 459, 640, 959, 960,
	466, 467, 509, 510, 0, 0, 471, 472, 473, 474,
	475, 476, 379, 482, 483, 484, 489, 508, 0, 0,
	0, 603, 508, 491, 682, 0, 526, 525, 0, 538,
	165, 167, 169, 187, 0, 0, 190, 193, 0, 0,
	0, 0, 982, 0, 984, 986, 0, 558, 0, 0,
	440, 519, 520, 45, 46, 0, 0, 883, 874, 0,
	0, 0, 0, 863, 865, 866, 0, 0, 848, 0,
	0, 561, 554, 37, 649, 650, 652, 669, 0, 671,
	673, 580, 571, 0, 838, -2, 659, 660, 684, 685,
	686, 0, 0, 0, 0, 682, 664, 0, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	716, 813, 814, 0, 714, 715, 724, 0, 0, 692,
	565, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 690,
	687, 0, 893, 0, 0, 0, 0, 764, 0, 0,
	699, 840, 0, 699, 840, 0, 0, 0, 0, 0,
	0, 0, 0, 835, 832, 0, 0, 800, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 626, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 1246, 598,
	0, 642, 0, 0, 0, 646, 0, 646, 66, 646,
	68, 0, 641, 900, 0, 0, 0, 77, 78, 73,
	904, 0, 910, 911, 912, 838, 0, 873, 558, 225,
	393, 395, 398, 399, 400, 229, 231, 232, 233, 0,
	1154, 366, 1256, 1296, -2, 358, 1181, -2, -2, 236,
	317, 316, 249, 0, 322, 322, 308, 308, 308, 308,
	277, 322, 280, 283, 284, 325, 0, 325, 325, 325,
	325, 322, 0, 0, 269, 270, 271, 260, 0, 261,
	310, 263, 0, 264, 265, 266, 267, 372, 373, 0,
	0, 0, 0, 0, 91, 926, 92, 0, 121, 122,
	96, 224, 0, 451, 453, 461, 462, 1368, 0, 1368,
	1368, 646, 0, 0, 485, 506, 507, 505, 508, 0,
	488, 498, 0, 0, 527, 171, 172, 194, 69, 0,
	962, 981, 0, 985, 987, 553, 51, 407, 408, 1367,
	-2, 441, 941, 441, 441, 428, 342, 441, 931, 932,
	933, 934, 935, 936, 937, 938, 0, 0, 0, 0,
	0, 869, 870, 862, 0, 919, 920, 849, 850, 84,
	562, 670, 672, 674, 0, 690, 661, 682, 665, 0,
	662, 0, 656, 0, 0, 576, 0, 576, 576, 0,
	750, 0, 751, 0, 576, 576, 0, 0, 0, 0,
	0, 0, 757, 758, 759, 760, 576, 576, 576, 576,
	0, 576, 576, 576, 0, 695, -2, 761, 762, 763,
	0, 0, 0, 0, 0, 806, 0, 0, 807, 772,
	0, 0, 0, 0, 0, 778, 859, 0, 833, 0,
	0, 781, 801, 0, 0, 802, 803, 804, 805, 887,
	0, 0, 0, 878, 0, 646, 895, 0, 0, 586,
	617, 619, 0, 614, 627, 628, 630, 0, 632, 0,
	634, 635, 605, 592, 689, 593, 0, 0, 0, 642,
	602, 0, 0, 0, 859, 0, 646, 59, 60, 0,
	75, 76, 0, 0, 82, 326, 327, 0, 95, 0,
	396, 0, 230, 0, 0, 0, 0, 344, 358, 354,
	355, 358, 349, 359, 350, 0, 238, 0, 240, 241,
	242, 243, 244, 0, 0, 321, 0, 329, 331, 0,
	245, 318, 0, 325, 325, 322, 275, 276, 308, 281,
	325, 285, 0, 286, 287, 288, 289, 325, 0, 306,
	0, 0, 262, 0, 389, 0, 950, 83, 83, 0,
	123, 124, 125, 0, 97, 98, 0, 0, 0, 0,
	0, 454, 64, 469, 470, 480, 380, 381, 508, 487,
	0, 683, 493, 494, 322, 0, 983, 561, 0, 410,
	0, 1367, 358, 0, 429, 430, 0, 442, 443, 444,
	0, 0, 1367, 0, 0, 0, 443, 0, 0, 0,
	0, 942, 943, 0, 0, 0, 343, 0, 0, 0,
	885, 884, 875, 36, 646, 0, 572, 839, 0, 663,
	0, 666, 576, 693, 735, 577, 567, 0, 736, 737,
	576, 573, 859, 752, 739, 740, 753, 754, 755, 576,
	576, 756, 744, 743, 742, 745, 576, 748, 747, 749,
	731, 0, 308, 308, 818, 308, 312, 821, 308, 823,
	308, 826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 780, 836, 0, 0, 0, 52,
	0, 887, 876, 889, 891, 0, 0, 0, 0, -2,
	1123, 0, 609, 859, 0, 0, 0, 611, 618, 0,
	0, 612, 0, 613, 631, 633, 590, 0, 0, 594,
	0, 0, -2, 601, 0, 0, 0, 867, 647, 58,
	79, 80, 81, 394, 397, 0, 360, 308, 308, 0,
	364, 0, 358, 365, 346, 348, 0, 239, 319, 0,
	328, 330, 332, 309, 273, 274, 325, 282, 278, 323,
	324, 290, 322, 0, 322, 0, 313, 0, 376, 390,
	0, 0, 89, 0, 0, 104, 0, 100, 0, 0,
	0, 452, 486, 604, 973, 636, 84, 409, 0, 437,
	0, 0, 413, 949, 356, 0, -2, 414, 415, 420,
	421, 422, 423, 424, 0, 435, 0, 417, 0, 437,
	0, 432, 0, 0, 47, 0, 851, 0, 84, 84,
	732, 667, 734, 0, 738, 0, 0, 733, 741, 746,
	765, 815, 322, 819, 820, 822, 824, 825, 827, 767,
	766, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 834, 0, 0, 0, 53, 0, 892, -2,
	0, 0, 70, 0, 867, 896, 897, 898, 615, 0,
	620, 0, 607, 0, 642, 599, 0, 0, 0, 0,
	57, 334, 0, 864, 864, 345, 347, 0, 320, 279,
	325, 307, 325, 0, 0, 391, 0, 83, 0, 83,
	105, 106, 0, 0, 0, 111, 0, 0, 0, 0,
	0, 99, 101, 102, 103, 975, 969, 0, 0, 412,
	438, 0, 237, 237, 0, 358, 357, 0, 431, 0,
	939, 940, 0, 426, 437, 0, 0, 0, 886, 856,
	0, 646, 0, 563, 568, 574, 0, 816, 817, 0,
	0, 0, 0, 774, 775, 776, 808, 779, 831, 0,
	0, 0, 890, 877, 0, 881, 0, 610, 56, 0,
	606, 0, 595, 597, 642, 643, 644, 645, 333, 337,
	0, 342, 0, 361, 362, 363, 0, 296, 297, 311,
	314, 0, 90, 0, 0, 107, 108, 109, 110, 112,
	113, 0, 0, 0, 929, 977, -2, 0, 0, 411,
	439, 234, 235, 0, 949, 0, 416, 425, 427, 0,
	434, 0, 41, 0, 0, 851, 84, 859, 768, 770,
	769, 771, 0, 0, 0, 797, 798, 0, 880, 0,
	616, 608, 600, 338, 339, 0, 341, 0, 335, 0,
	83, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 0, 0,
	0, 0, 114, 115, 116, 117, 605, 0, 969, 0,
	971, 0, 968, 0, 646, 0, 0, 0, 433, 0,
	446, 0, 857, 858, 852, 853, 855, 856, 564, 0,
	777, 0, 0, 0, 888, -2, 340, 0, 88, 336,
	126, 94, 0, 0, 951, 0, 0, 153, 154, 155,
	953, 0, 195, 34, 0, 976, 0, 974, 0, 0,
	970, 851, 335, 0, 335, 445, 0, 0, 0, 42,
	575, 809, 0, 812, 0, 83, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 151, 0, 0, 930, 978,
	0, 0, 856, 418, 0, 436, 447, 0, 854, 810,
	0, 0, 127, 128, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 954, 118, 196, 972, 966, 39, 335,
	0, 0, 367, 83, 129, 130, 131, 132, 133, 0,
	135, 0, 0, 0, 147, 148, 149, 0, 156, 158,
	159, 160, 0, 162, 163, 152, 419, 0, 0, 368,
	369, 0, 93, 0, 0, 0, 0, 0, 0, 144,
	0, 150, 0, 161, 0, 811, 370, 0, 371, 0,
	0, 0, 0, 0, 139, 140, 0, 0, 0, 145,
	0, 157, 0, 0, 382, 384, 385, 0, 0, 383,
	134, 136, 0, 142, 0, 0, 448, 449, 386, 387,
	388, 0, 0, 0, 141, 0, 146, 143,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 442,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:428
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:432
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:472
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:478
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:484
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:491
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:497
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:515
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:521
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:553
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:557
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:577
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:583
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:595
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.str = InsertStr
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.str = ReplaceStr
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:623
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:627
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:631
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:635
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:669
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:678
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:695
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:728
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:732
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:745
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:750
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:756
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:765
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:770
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:775
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:779
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:787
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:795
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:814
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:822
		{
			yyVAL.procedureParams = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:842
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:854
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:859
		{
			yyVAL.characteristics = nil
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:873
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:883
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:887
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:921
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:926
		{
			yyVAL.str = ""
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.str = BeforeStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.str = AfterStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = InsertStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.str = UpdateStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.str = DeleteStr
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:959
		{
			yyVAL.triggerOrder = nil
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:963
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:989
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:993
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1009
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 140:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1015
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 141:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1020
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1025
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 143:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1031
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1049
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1055
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1059
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1063
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1067
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1075
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1144
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1204
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1208
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1212
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1216
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1220
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &Resignal{}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1246
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1257
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.exprs = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1313
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1330
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1337
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1342
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1403
		{
			yyVAL.columnType = ColumnType{}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1407
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1425
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1452
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1751
		{
			yyVAL.sqlVal = nil
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1760
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1772
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1790
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1799
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.colKeyOpt = colKey
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1881
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1886
		{
			yyVAL.indexOptions = nil
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1900
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1910
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1935
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1943
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.str = yyDollar[1].str
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 367:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2037
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 368:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2041
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 369:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2045
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 370:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2049
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 371:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2053
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2059
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2077
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.boolean = true
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.boolean = true
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.boolean = false
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2152
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = yyDollar[1].str
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = string("")
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2218
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2245
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2252
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2271
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2280
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 419:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2284
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2312
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2323
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2345
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2354
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2358
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2366
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnOrder = nil
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2393
		{
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
		}
	case 445:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2403
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 448:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2419
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2423
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2439
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2447
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2459
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2467
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2475
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2483
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2491
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2500
		{

		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2529
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2542
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2546
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2551
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2555
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2563
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2567
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2571
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2587
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2595
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2599
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2603
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2607
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 486:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2611
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2616
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2630
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2638
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2652
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2656
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2674
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = "full "
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2716
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.showFilter = nil
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = SessionStr
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = GlobalStr
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.statement = &Begin{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.statement = &Begin{}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2782
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2786
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.statement = &Commit{}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.statement = &Rollback{}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2810
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2814
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2818
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2822
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.statement = &OtherRead{}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2895
		{
			setAllowComments(yylex, true)
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.bytes2 = nil
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = UnionStr
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.str = UnionAllStr
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.str = UnionDistinctStr
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2928
		{
			yyVAL.byt = 0
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.byt = 1
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = SQLCacheStr
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2958
		{
			yyVAL.str = DistinctStr
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2963
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.str = StraightJoinHint
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2981
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3000
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3004
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3014
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3022
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3037
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3042
		{
			yyVAL.over = nil
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.over = yyDollar[1].over
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3051
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3059
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3101
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3111
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3117
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3133
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3144
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3159
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 600:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3163
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3167
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3182
		{
			yyVAL.expr = nil
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3186
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3191
		{
			yyVAL.columns = nil
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3195
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3215
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3228
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3232
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3236
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3240
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3246
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3248
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3252
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3258
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3263
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.str = JoinStr
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = JoinStr
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = JoinStr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.str = StraightJoinStr
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = LeftJoinStr
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = LeftJoinStr
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = RightJoinStr
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = RightJoinStr
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.str = NaturalJoinStr
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3322
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3338
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3352
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3363
		{
			yyVAL.indexHints = nil
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3367
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3371
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3375
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = nil
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3384
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3390
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3414
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3420
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3448
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3452
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3464
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3468
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3472
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3476
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = IsNullStr
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = IsNotNullStr
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = IsTrueStr
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			yyVAL.str = IsNotTrueStr
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.str = IsFalseStr
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = IsNotFalseStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = EqualStr
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = LessThanStr
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = GreaterThanStr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = LessEqualStr
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = GreaterEqualStr
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = NotEqualStr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3532
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = nil
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3555
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3567
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3577
		{
			yyVAL.selectExprs = nil
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3644
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3764
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3780
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3784
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3792
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 741:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3796
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3800
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3808
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3820
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3841
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3857
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3861
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3865
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3873
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3877
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 766:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3908
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 767:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3912
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 768:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3916
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 769:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3920
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 770:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3924
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 771:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3928
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3932
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 773:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 774:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 775:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 776:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 777:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 779:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3964
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3968
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4001
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4021
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 797:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4048
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 798:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4052
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4063
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4085
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4089
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4093
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4099
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = BooleanModeStr
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 811:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = QueryExpansionStr
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4131
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4135
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4139
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4173
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.expr = nil
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = string("")
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4215
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.expr = nil
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4238
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = &NullVal{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4286
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4291
		{
			yyVAL.exprs = nil
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = nil
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4331
		{
			yyVAL.orderBy = nil
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4351
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = AscScr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = AscScr
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = DescScr
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.limit = nil
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4377
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4381
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = ForUpdateStr
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = ShareModeStr
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4417
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4421
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4429
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4434
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4438
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4442
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4461
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4466
		{
			yyVAL.assignExprs = nil
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4470
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4535
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4552
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.setScope = SetScope_Global
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.setScope = SetScope_Session
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.setScope = SetScope_Session
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4608
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4616
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.bytes = []byte("charset")
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.expr = &Default{}
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.byt = 0
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.byt = 1
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.byt = 0
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4654
		{
			yyVAL.byt = 1
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4657
		{
			yyVAL.byt = 0
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yyVAL.byt = 1
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = IgnoreStr
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.sqlVal = nil
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.empty = struct{}{}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4685
		{
			yyVAL.empty = struct{}{}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.empty = struct{}{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.empty = struct{}{}
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.empty = struct{}{}
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4696
		{
			yyVAL.empty = struct{}{}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.empty = struct{}{}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.empty = struct{}{}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = UniqueStr
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = FulltextStr
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = SpatialStr
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = yyDollar[1].str
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4716
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4718
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4736
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4743
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4753
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4760
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4765
		{
			yyVAL.str = string("")
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4770
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{
			yyVAL.EnclosedBy = nil
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4779
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4784
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4793
		{
			yyVAL.sqlVal = nil
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4802
		{
			yyVAL.sqlVal = nil
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4806
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4811
		{
			yyVAL.Fields = nil
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4815
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4820
		{
			yyVAL.Lines = nil
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4829
		{
			yyVAL.sqlVal = nil
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4855
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4859
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4865
		{
			yyVAL.lockType = LockRead
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4869
		{
			yyVAL.lockType = LockReadLocal
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.lockType = LockWrite
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			decNesting(yylex)
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5303
		{
			skipToEnd(yylex)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5308
		{
			skipToEnd(yylex)
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			skipToEnd(yylex)
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
