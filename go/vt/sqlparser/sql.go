// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *frameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptions               TLSOptions
	accountLimits            AccountLimits
	passwordOptions          PasswordOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTIONAL = 57575
const MAX_QUERIES_PER_HOUR = 57576
const MAX_UPDATES_PER_HOUR = 57577
const MAX_CONNECTIONS_PER_HOUR = 57578
const MAX_USER_CONNECTIONS = 57579
const FAILED_LOGIN_ATTEMPTS = 57580
const PASSWORD_LOCK_TIME = 57581
const UNBOUNDED = 57582
const BEGIN = 57583
const START = 57584
const TRANSACTION = 57585
const COMMIT = 57586
const ROLLBACK = 57587
const SAVEPOINT = 57588
const WORK = 57589
const RELEASE = 57590
const BIT = 57591
const TINYINT = 57592
const SMALLINT = 57593
const MEDIUMINT = 57594
const INT = 57595
const INTEGER = 57596
const BIGINT = 57597
const INTNUM = 57598
const REAL = 57599
const DOUBLE = 57600
const FLOAT_TYPE = 57601
const DECIMAL = 57602
const NUMERIC = 57603
const DEC = 57604
const FIXED = 57605
const PRECISION = 57606
const TIME = 57607
const TIMESTAMP = 57608
const DATETIME = 57609
const YEAR = 57610
const CHAR = 57611
const VARCHAR = 57612
const BOOL = 57613
const CHARACTER = 57614
const VARBINARY = 57615
const NCHAR = 57616
const NVARCHAR = 57617
const NATIONAL = 57618
const VARYING = 57619
const TEXT = 57620
const TINYTEXT = 57621
const MEDIUMTEXT = 57622
const LONGTEXT = 57623
const LONG = 57624
const BLOB = 57625
const TINYBLOB = 57626
const MEDIUMBLOB = 57627
const LONGBLOB = 57628
const JSON = 57629
const ENUM = 57630
const GEOMETRY = 57631
const POINT = 57632
const LINESTRING = 57633
const POLYGON = 57634
const GEOMETRYCOLLECTION = 57635
const MULTIPOINT = 57636
const MULTILINESTRING = 57637
const MULTIPOLYGON = 57638
const LOCAL = 57639
const LOW_PRIORITY = 57640
const NULLX = 57641
const AUTO_INCREMENT = 57642
const APPROXNUM = 57643
const SIGNED = 57644
const UNSIGNED = 57645
const ZEROFILL = 57646
const COLLATION = 57647
const DATABASES = 57648
const SCHEMAS = 57649
const TABLES = 57650
const FULL = 57651
const PROCESSLIST = 57652
const COLUMNS = 57653
const FIELDS = 57654
const ENGINES = 57655
const PLUGINS = 57656
const NAMES = 57657
const CHARSET = 57658
const GLOBAL = 57659
const SESSION = 57660
const ISOLATION = 57661
const LEVEL = 57662
const READ = 57663
const WRITE = 57664
const ONLY = 57665
const REPEATABLE = 57666
const COMMITTED = 57667
const UNCOMMITTED = 57668
const SERIALIZABLE = 57669
const CURRENT_TIMESTAMP = 57670
const DATABASE = 57671
const CURRENT_DATE = 57672
const CURRENT_USER = 57673
const CURRENT_TIME = 57674
const LOCALTIME = 57675
const LOCALTIMESTAMP = 57676
const UTC_DATE = 57677
const UTC_TIME = 57678
const UTC_TIMESTAMP = 57679
const REPLACE = 57680
const CONVERT = 57681
const CAST = 57682
const SUBSTR = 57683
const SUBSTRING = 57684
const TRIM = 57685
const LEADING = 57686
const TRAILING = 57687
const BOTH = 57688
const GROUP_CONCAT = 57689
const SEPARATOR = 57690
const TIMESTAMPADD = 57691
const TIMESTAMPDIFF = 57692
const OVER = 57693
const WINDOW = 57694
const GROUPING = 57695
const GROUPS = 57696
const CURRENT = 57697
const ROWS = 57698
const RANGE = 57699
const AVG = 57700
const BIT_AND = 57701
const BIT_OR = 57702
const BIT_XOR = 57703
const COUNT = 57704
const JSON_ARRAYAGG = 57705
const JSON_OBJECTAGG = 57706
const MAX = 57707
const MIN = 57708
const STDDEV_POP = 57709
const STDDEV = 57710
const STD = 57711
const STDDEV_SAMP = 57712
const SUM = 57713
const VAR_POP = 57714
const VARIANCE = 57715
const VAR_SAMP = 57716
const CUME_DIST = 57717
const DENSE_RANK = 57718
const FIRST_VALUE = 57719
const LAG = 57720
const LAST_VALUE = 57721
const LEAD = 57722
const NTH_VALUE = 57723
const NTILE = 57724
const ROW_NUMBER = 57725
const PERCENT_RANK = 57726
const RANK = 57727
const MATCH = 57728
const AGAINST = 57729
const BOOLEAN = 57730
const LANGUAGE = 57731
const WITH = 57732
const QUERY = 57733
const EXPANSION = 57734
const UNUSED = 57735
const ARRAY = 57736
const DESCRIPTION = 57737
const EMPTY = 57738
const EXCEPT = 57739
const JSON_TABLE = 57740
const LATERAL = 57741
const MEMBER = 57742
const RECURSIVE = 57743
const ACTIVE = 57744
const ADMIN = 57745
const BUCKETS = 57746
const CLONE = 57747
const COMPONENT = 57748
const DEFINITION = 57749
const ENFORCED = 57750
const EXCLUDE = 57751
const FOLLOWING = 57752
const GEOMCOLLECTION = 57753
const GET_MASTER_PUBLIC_KEY = 57754
const HISTOGRAM = 57755
const HISTORY = 57756
const INACTIVE = 57757
const INVISIBLE = 57758
const LOCKED = 57759
const MASTER_COMPRESSION_ALGORITHMS = 57760
const MASTER_PUBLIC_KEY_PATH = 57761
const MASTER_TLS_CIPHERSUITES = 57762
const MASTER_ZSTD_COMPRESSION_LEVEL = 57763
const NESTED = 57764
const NETWORK_NAMESPACE = 57765
const NOWAIT = 57766
const NULLS = 57767
const OJ = 57768
const OLD = 57769
const ORDINALITY = 57770
const ORGANIZATION = 57771
const OTHERS = 57772
const PATH = 57773
const PERSIST = 57774
const PERSIST_ONLY = 57775
const PRECEDING = 57776
const PRIVILEGE_CHECKS_USER = 57777
const PROCESS = 57778
const REFERENCE = 57779
const REQUIRE_ROW_FORMAT = 57780
const RESOURCE = 57781
const RESPECT = 57782
const RESTART = 57783
const RETAIN = 57784
const SECONDARY = 57785
const SECONDARY_ENGINE = 57786
const SECONDARY_LOAD = 57787
const SECONDARY_UNLOAD = 57788
const SKIP = 57789
const SRID = 57790
const THREAD_PRIORITY = 57791
const TIES = 57792
const VCPU = 57793
const VISIBLE = 57794
const SYSTEM = 57795
const INFILE = 57796

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTIONAL",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 914,
	-1, 42,
	141, 976,
	142, 1002,
	-2, 124,
	-1, 49,
	181, 554,
	182, 554,
	-2, 544,
	-1, 56,
	1, 1456,
	473, 1456,
	-2, 582,
	-1, 474,
	128, 1012,
	-2, 1006,
	-1, 475,
	128, 1013,
	-2, 1007,
	-1, 579,
	98, 1259,
	128, 1259,
	-2, 960,
	-1, 580,
	98, 1374,
	128, 1374,
	-2, 961,
	-1, 585,
	98, 1282,
	128, 1282,
	-2, 962,
	-1, 586,
	98, 1330,
	128, 1330,
	-2, 963,
	-1, 587,
	98, 1331,
	128, 1331,
	-2, 964,
	-1, 588,
	98, 1211,
	128, 1211,
	-2, 968,
	-1, 590,
	98, 1305,
	128, 1305,
	-2, 970,
	-1, 1026,
	1, 646,
	5, 646,
	12, 646,
	13, 646,
	14, 646,
	15, 646,
	17, 646,
	19, 646,
	30, 646,
	31, 646,
	56, 646,
	57, 646,
	58, 646,
	59, 646,
	60, 646,
	62, 646,
	63, 646,
	66, 646,
	67, 646,
	69, 646,
	70, 646,
	473, 646,
	-2, 676,
	-1, 1030,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1244,
	128, 1015,
	-2, 1011,
	-1, 1413,
	68, 393,
	-2, 1172,
	-1, 1416,
	68, 389,
	72, 389,
	-2, 1105,
	-1, 1417,
	68, 390,
	72, 390,
	-2, 1115,
	-1, 1522,
	44, 436,
	148, 438,
	150, 436,
	151, 436,
	-2, 476,
	-1, 1598,
	5, 50,
	-2, 742,
	-1, 1892,
	69, 1151,
	70, 1151,
	128, 1151,
	-2, 589,
	-1, 1915,
	1, 697,
	5, 697,
	12, 697,
	13, 697,
	14, 697,
	15, 697,
	17, 697,
	19, 697,
	30, 697,
	31, 697,
	56, 697,
	57, 697,
	58, 697,
	59, 697,
	60, 697,
	62, 697,
	63, 697,
	66, 697,
	67, 697,
	69, 697,
	70, 697,
	473, 697,
	-2, 676,
	-1, 1996,
	148, 439,
	-2, 437,
	-1, 2059,
	5, 50,
	-2, 934,
	-1, 2218,
	41, 1022,
	-2, 1020,
	-1, 2331,
	5, 50,
	-2, 937,
}

const yyPrivate = 57344

const yyLast = 29184

var yyAct = [...]int{

	537, 80, 2456, 2469, 2479, 2505, 2470, 2348, 1461, 2334,
	2403, 477, 2458, 2266, 7, 2234, 2265, 6, 2071, 2347,
	2379, 2401, 2264, 5, 2267, 8, 2316, 2321, 2185, 1909,
	604, 2218, 83, 1459, 1637, 1928, 1885, 466, 2145, 1808,
	977, 2125, 2101, 1694, 1666, 1368, 1818, 1418, 1473, 2335,
	1222, 1366, 459, 1886, 1362, 1929, 1817, 1400, 1989, 480,
	810, 1747, 493, 1061, 106, 1638, 1410, 1882, 1026, 93,
	395, 1450, 536, 399, 402, 1520, 423, 767, 787, 1894,
	1551, 80, 1399, 602, 1901, 1215, 1131, 1269, 1154, 1278,
	1501, 1414, 1132, 2263, 3, 1854, 599, 1201, 1784, 1230,
	1341, 1406, 1783, 1133, 1730, 1174, 1130, 1041, 1446, 879,
	798, 1336, 800, 1246, 581, 1023, 1345, 1333, 1022, 886,
	861, 840, 882, 1352, 598, 462, 1040, 573, 396, 397,
	398, 899, 577, 578, 422, 570, 1032, 2527, 839, 2523,
	754, 2513, 890, 2495, 2493, 2474, 2451, 2387, 82, 1199,
	1963, 584, 2437, 1280, 2434, 2095, 85, 69, 2486, 2373,
	995, 2468, 2329, 2439, 2372, 1875, 2407, 2407, 996, 2102,
	411, 1573, 35, 35, 458, 35, 2436, 2104, 2433, 2051,
	2210, 35, 2402, 753, 1756, 35, 1202, 72, 38, 39,
	1042, 2328, 1043, 87, 88, 89, 90, 91, 1516, 1632,
	766, 35, 36, 72, 38, 39, 2369, 2370, 600, 1923,
	482, 1924, 1925, 2170, 1434, 62, 1633, 1675, 2408, 2408,
	1674, 78, 1364, 1676, 873, 40, 66, 67, 410, 1205,
	1386, 1387, 63, 1385, 81, 81, 409, 81, 72, 38,
	39, 468, 756, 81, 759, 760, 2107, 81, 1210, 1211,
	1713, 594, 1203, 1204, 814, 815, 1420, 1515, 858, 50,
	40, 1435, 2154, 81, 1422, 1440, 1422, 1435, 2245, 914,
	913, 923, 924, 916, 917, 918, 919, 920, 921, 922,
	915, 413, 1447, 925, 2038, 2105, 2106, 2108, 2109, 2110,
	813, 552, 2036, 558, 560, 559, 556, 557, 555, 554,
	553, 1426, 1428, 109, 1427, 1186, 389, 824, 408, 420,
	1975, 1687, 561, 562, 1755, 2349, 2301, 2299, 454, 2214,
	2118, 1753, 792, 1474, 2116, 112, 42, 74, 46, 45,
	48, 2483, 59, 2384, 1978, 2382, 2383, 2209, 2208, 1686,
	2207, 2453, 2206, 2205, 2203, 1748, 99, 2204, 400, 2404,
	2404, 2296, 2297, 2376, 2377, 1468, 1775, 1776, 49, 77,
	76, 2435, 1389, 57, 58, 47, 2336, 799, 799, 2073,
	1658, 2261, 807, 808, 2317, 809, 758, 757, 806, 820,
	68, 1749, 799, 1467, 118, 114, 115, 805, 116, 2465,
	791, 795, 80, 80, 797, 2431, 403, 1811, 1346, 101,
	392, 2126, 2127, 98, 1060, 829, 2259, 1059, 831, 111,
	110, 60, 61, 113, 830, 1060, 868, 2519, 1790, 1934,
	1060, 120, 119, 84, 876, 1060, 390, 793, 796, 1995,
	794, 2528, 821, 822, 2525, 2514, 393, 811, 404, 812,
	814, 815, 1932, 2462, 2496, 755, 2457, 1060, 448, 773,
	2303, 1934, 107, 419, 51, 75, 2138, 53, 54, 64,
	2460, 65, 108, 1761, 2405, 2405, 1754, 1760, 1750, 1751,
	1140, 2137, 109, 121, 934, 122, 1138, 936, 801, 1205,
	1435, 2298, 2509, 2213, 401, 828, 832, 1962, 103, 2447,
	104, 1720, 823, 1425, 401, 2103, 1449, 1187, 1977, 825,
	826, 1123, 1203, 1204, 412, 1692, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 2327, 73, 975, 1665, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 73, 994, 997, 997, 997, 1003, 997, 997, 1003,
	997, 1003, 1012, 1013, 1014, 1015, 1016, 1017, 2246, 1027,
	877, 865, 2211, 867, 79, 79, 1757, 79, 111, 110,
	1664, 2026, 1692, 79, 401, 1033, 73, 79, 418, 401,
	419, 117, 1855, 2136, 1778, 1371, 1373, 790, 2459, 2461,
	1663, 1692, 1691, 79, 751, 871, 100, 2507, 1800, 1790,
	2508, 761, 2506, 1797, 2186, 887, 1796, 1799, 1533, 361,
	2023, 2141, 2015, 1021, 1679, 906, 1608, 1054, 2188, 937,
	938, 976, 1532, 1792, 1857, 1671, 1568, 584, 1605, 1556,
	433, 1541, 584, 427, 428, 429, 430, 431, 436, 437,
	441, 442, 451, 450, 449, 452, 453, 456, 455, 457,
	432, 434, 435, 438, 439, 440, 443, 444, 447, 445,
	446, 1485, 1225, 1692, 1053, 1537, 1484, 1372, 1038, 1691,
	905, 1805, 783, 1390, 1531, 1119, 1790, 935, 1952, 925,
	1060, 978, 1045, 1793, 1791, 1058, 1381, 1046, 1691, 2187,
	1695, 1175, 1184, 1692, 993, 1031, 915, 1218, 1036, 925,
	1792, 1603, 1828, 1602, 998, 1000, 1002, 1004, 1006, 1008,
	1009, 1011, 999, 1001, 2142, 1005, 1007, 1492, 1010, 803,
	96, 897, 896, 896, 898, 1529, 1523, 1524, 1809, 1522,
	1953, 1525, 1526, 1334, 937, 938, 1859, 1604, 475, 898,
	898, 1863, 1055, 1858, 1899, 1856, 937, 938, 1898, 1194,
	1861, 918, 919, 920, 921, 922, 915, 1705, 1421, 925,
	1691, 1051, 789, 1860, 816, 95, 1535, 1538, 833, 1029,
	762, 1877, 1710, 1709, 897, 896, 799, 2512, 1862, 1864,
	2448, 2516, 772, 799, 799, 799, 127, 1125, 1176, 127,
	1691, 1253, 898, 1804, 1706, 127, 1940, 1801, 799, 2466,
	2117, 897, 896, 94, 1156, 893, 1251, 1252, 1250, 1711,
	1334, 1698, 1621, 2352, 1493, 2332, 804, 1699, 127, 898,
	916, 917, 918, 919, 920, 921, 922, 915, 1134, 127,
	925, 2094, 2093, 127, 607, 897, 896, 127, 923, 924,
	916, 917, 918, 919, 920, 921, 922, 915, 1735, 1134,
	925, 127, 770, 898, 607, 1158, 788, 1152, 818, 80,
	1733, 2520, 127, 799, 1153, 1714, 1214, 1223, 1224, 417,
	81, 897, 896, 864, 1170, 1171, 1708, 1173, 2450, 897,
	896, 1249, 1270, 1530, 1271, 2380, 1157, 1197, 883, 898,
	863, 884, 1135, 1163, 1164, 1165, 1182, 898, 1142, 775,
	776, 777, 778, 779, 780, 781, 2414, 1178, 1172, 1179,
	1677, 1528, 1678, 897, 896, 2521, 2413, 897, 896, 1736,
	2381, 1161, 1162, 1476, 1879, 2300, 1244, 80, 837, 897,
	896, 898, 2428, 1160, 1213, 898, 897, 896, 1227, 1273,
	1274, 2499, 2480, 2498, 2380, 2427, 2416, 898, 2415, 2390,
	1534, 836, 1207, 2388, 898, 1236, 1238, 1239, 567, 568,
	1180, 1237, 1228, 1189, 1190, 1229, 2358, 1192, 2258, 2215,
	979, 1247, 2202, 1209, 1553, 1554, 1555, 2164, 2091, 1216,
	1945, 1206, 472, 1195, 1242, 1731, 1512, 1191, 1159, 2256,
	1827, 1141, 498, 497, 500, 501, 502, 503, 2228, 1212,
	978, 499, 504, 1695, 1536, 2222, 2134, 2010, 1243, 2006,
	1997, 1979, 1973, 1972, 1971, 1769, 1768, 1506, 1365, 1490,
	976, 1489, 1240, 1027, 1272, 1188, 1185, 1027, 1150, 1149,
	1148, 1147, 1136, 1128, 1287, 1127, 1319, 1322, 1291, 1126,
	1233, 1234, 1124, 859, 1335, 785, 1707, 407, 405, 2177,
	2440, 2082, 2430, 878, 1285, 1286, 2364, 878, 1034, 1156,
	2082, 2362, 2221, 1312, 2196, 1296, 1297, 1298, 1299, 2082,
	2360, 2082, 2260, 2195, 1244, 1968, 1029, 1376, 1309, 1311,
	1276, 1378, 2177, 2252, 1284, 1316, 1361, 2177, 2192, 584,
	2177, 878, 1946, 1293, 1294, 1370, 1897, 1396, 2177, 2176,
	127, 2082, 2081, 2366, 1304, 607, 607, 1883, 1308, 1248,
	1897, 976, 2063, 878, 1035, 799, 1037, 799, 1540, 878,
	607, 2017, 1667, 978, 1331, 1960, 1959, 1667, 1317, 1318,
	1956, 1957, 1395, 1119, 1956, 1955, 84, 1374, 1220, 1354,
	1357, 1358, 1359, 1355, 1407, 1356, 1360, 1667, 127, 1902,
	1903, 1566, 878, 1349, 878, 1379, 1394, 127, 84, 1401,
	600, 1388, 1383, 1382, 1310, 1509, 1310, 878, 1057, 1056,
	2057, 1397, 1404, 1034, 1003, 1452, 1453, 1454, 1455, 2018,
	2220, 1472, 1475, 478, 1349, 1375, 1969, 1033, 1958, 1219,
	1310, 1456, 1457, 1348, 1911, 1393, 1508, 1781, 1681, 1384,
	1566, 1626, 1625, 1193, 1897, 80, 1488, 902, 1487, 1482,
	1448, 1221, 1566, 1200, 1139, 1137, 1480, 1481, 1039, 874,
	875, 1471, 81, 2374, 2361, 1463, 595, 1465, 1029, 1035,
	2490, 1033, 1349, 1029, 1557, 1910, 2227, 1029, 2018, 2225,
	2096, 1422, 2069, 1494, 1451, 1939, 1244, 1447, 1500, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 1902, 1903, 425, 1458, 81, 1685, 1469, 1442, 1514,
	1354, 1357, 1358, 1359, 1355, 1441, 1356, 1360, 1120, 856,
	1460, 2488, 1436, 1437, 1438, 1439, 1505, 2471, 81, 1503,
	1967, 1905, 1883, 1737, 1144, 1650, 1648, 771, 976, 1552,
	1651, 1649, 1908, 1907, 1395, 1507, 127, 127, 127, 1518,
	1647, 1513, 1652, 1247, 1358, 1359, 1646, 1539, 463, 464,
	2410, 2371, 607, 1815, 1542, 1231, 891, 892, 1243, 2398,
	2060, 1545, 1543, 1544, 1504, 1562, 1634, 1636, 1550, 1517,
	1027, 1027, 1027, 1027, 1027, 1549, 2167, 2133, 1697, 2085,
	2357, 2005, 2004, 1944, 1558, 889, 1365, 1943, 1659, 1689,
	2305, 2308, 2356, 2219, 2389, 887, 1027, 2217, 2295, 1640,
	2294, 406, 1772, 1724, 1564, 880, 1052, 854, 838, 1567,
	835, 834, 786, 2423, 1569, 1570, 2232, 881, 2231, 1575,
	1576, 1577, 1578, 1579, 1580, 2055, 2143, 1583, 1639, 1596,
	1223, 1224, 1588, 1589, 1590, 1591, 1662, 1593, 1594, 1595,
	1511, 1669, 2119, 1670, 1598, 1599, 1600, 1601, 1464, 2120,
	1668, 1143, 2350, 1607, 1812, 1740, 1610, 1611, 1654, 1635,
	1499, 1616, 1617, 584, 891, 892, 1661, 1623, 96, 1624,
	1620, 1122, 1627, 1628, 2422, 1629, 1630, 1682, 1696, 1312,
	2421, 1248, 80, 2420, 1597, 2199, 1642, 1643, 1641, 1645,
	460, 1644, 869, 870, 1655, 1656, 939, 940, 941, 942,
	943, 944, 945, 946, 1653, 819, 1548, 799, 1622, 2392,
	799, 799, 1672, 1119, 1547, 2391, 2354, 2309, 1045, 2236,
	607, 1684, 2152, 461, 1690, 1693, 1680, 84, 770, 770,
	2235, 2146, 1401, 1667, 1742, 1743, 1744, 2492, 2491, 2492,
	1609, 127, 1606, 1177, 127, 894, 2491, 2249, 1942, 770,
	770, 1217, 127, 595, 607, 414, 1767, 416, 2277, 52,
	86, 607, 607, 607, 127, 127, 127, 1732, 2279, 19,
	55, 127, 1, 1134, 1759, 1739, 607, 2115, 1734, 1129,
	1029, 1029, 1029, 1029, 1029, 2278, 18, 765, 770, 2280,
	20, 2281, 21, 1470, 1835, 1764, 1029, 1771, 1752, 1758,
	1151, 1134, 2276, 15, 2275, 14, 1029, 2269, 10, 2288,
	30, 860, 1782, 2287, 29, 2355, 1774, 1762, 2304, 1244,
	1765, 1766, 2306, 1770, 2286, 28, 2284, 25, 2283, 24,
	2285, 26, 1779, 2216, 1785, 1798, 1803, 1780, 2121, 1788,
	127, 607, 1795, 127, 1787, 607, 1794, 1777, 1806, 1807,
	2274, 13, 1810, 2100, 1888, 80, 2271, 12, 1715, 1716,
	2270, 11, 2099, 127, 1746, 1722, 2268, 9, 1745, 902,
	1822, 1876, 855, 1813, 1814, 1729, 1826, 1830, 1821, 1913,
	1198, 1786, 903, 1640, 1917, 1918, 1919, 1884, 1789, 1820,
	1483, 1527, 2315, 1408, 1398, 597, 92, 1825, 1491, 802,
	2131, 1243, 1896, 1833, 369, 1405, 1703, 2307, 857, 1702,
	1712, 1865, 1639, 1842, 1843, 607, 1419, 1701, 1700, 1920,
	1866, 2302, 1704, 1065, 1849, 1063, 1887, 1916, 1853, 1064,
	1062, 1067, 1066, 1922, 373, 1047, 2342, 895, 102, 56,
	1891, 2135, 1802, 1521, 97, 105, 375, 933, 1889, 1906,
	1546, 1912, 1673, 582, 1937, 583, 575, 1938, 2368, 1914,
	2375, 1927, 885, 2318, 1619, 992, 1890, 1216, 1965, 1966,
	1332, 481, 1657, 1933, 2320, 1936, 1235, 496, 495, 494,
	491, 607, 607, 492, 1926, 2406, 1498, 1226, 127, 1631,
	1456, 907, 1457, 1961, 479, 1878, 127, 127, 470, 1935,
	1025, 127, 127, 1018, 1510, 127, 127, 127, 1342, 1353,
	1351, 1350, 1820, 1145, 1401, 1118, 1401, 1723, 571, 1725,
	1726, 1727, 1728, 1904, 1976, 607, 607, 1900, 1363, 1024,
	421, 1181, 1970, 1214, 70, 817, 391, 2050, 2244, 37,
	415, 1921, 465, 27, 17, 827, 22, 16, 1519, 1993,
	763, 1134, 41, 44, 43, 1741, 1466, 1423, 1424, 2341,
	1429, 1430, 1431, 1432, 1433, 2455, 1974, 841, 1981, 1982,
	2478, 1994, 2378, 33, 32, 1992, 2019, 1987, 1443, 1444,
	1445, 1986, 2016, 31, 2282, 2009, 1998, 2289, 2025, 2273,
	2272, 2442, 127, 607, 23, 607, 2049, 1119, 2441, 4,
	866, 2014, 71, 34, 127, 593, 127, 127, 770, 770,
	770, 2, 0, 127, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 0, 0,
	0, 0, 0, 0, 127, 127, 127, 0, 1640, 2064,
	0, 2034, 1949, 2020, 0, 0, 2077, 2078, 2079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 127, 2056, 771, 771, 0, 0, 1639, 2087, 0,
	0, 2075, 2011, 2065, 0, 0, 2030, 80, 0, 0,
	0, 0, 468, 2080, 771, 771, 0, 2039, 2040, 2086,
	0, 1325, 0, 2045, 1682, 2076, 0, 0, 0, 0,
	1337, 535, 1984, 0, 0, 0, 0, 0, 1572, 1574,
	2058, 2059, 0, 2061, 0, 2088, 2062, 0, 0, 1584,
	1585, 1586, 1587, 771, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 1029, 0, 0, 2074, 2130, 0, 0,
	0, 2111, 0, 2052, 0, 2112, 2113, 2114, 0, 1401,
	0, 0, 978, 2123, 0, 2122, 0, 2124, 0, 0,
	0, 2139, 2066, 2067, 2128, 2129, 2068, 0, 1888, 2070,
	2097, 1888, 2172, 1933, 0, 2148, 2149, 978, 425, 2140,
	0, 0, 2147, 0, 1913, 0, 0, 0, 1947, 1948,
	1456, 0, 0, 591, 0, 1951, 2132, 603, 2175, 0,
	0, 0, 1954, 0, 903, 0, 0, 2169, 127, 127,
	127, 127, 127, 0, 0, 0, 2198, 774, 2200, 0,
	127, 2168, 0, 0, 127, 0, 0, 2174, 127, 0,
	0, 0, 0, 0, 127, 0, 2179, 0, 2144, 0,
	1887, 2184, 2197, 1887, 2190, 2191, 1820, 2151, 2189, 0,
	0, 0, 0, 2201, 2233, 0, 2178, 0, 607, 0,
	0, 1370, 0, 2180, 0, 2171, 0, 0, 2159, 2160,
	2161, 0, 2163, 0, 0, 0, 2212, 0, 0, 0,
	2090, 1888, 2092, 80, 0, 2226, 2223, 2224, 0, 0,
	0, 0, 2230, 0, 0, 0, 2238, 0, 0, 2181,
	2182, 2183, 2237, 2239, 1717, 1718, 1719, 1721, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 2250, 2262, 607,
	0, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	770, 1027, 425, 0, 770, 770, 2254, 2257, 1029, 0,
	0, 0, 0, 0, 0, 607, 127, 770, 607, 607,
	0, 0, 0, 1887, 1559, 1560, 1561, 2153, 0, 0,
	0, 0, 770, 1118, 0, 0, 0, 96, 0, 0,
	2312, 2311, 0, 2313, 0, 0, 2251, 2240, 2241, 2242,
	2243, 2337, 2325, 0, 0, 2310, 2323, 2247, 2248, 0,
	1640, 0, 0, 0, 2330, 2324, 0, 0, 1836, 607,
	607, 1839, 1840, 1841, 80, 127, 1844, 0, 1371, 1373,
	0, 0, 468, 0, 0, 607, 978, 0, 0, 1639,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 1613,
	1614, 1615, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2351, 771, 771, 771, 2353, 0, 0, 2367,
	0, 0, 0, 914, 913, 923, 924, 916, 917, 918,
	919, 920, 921, 922, 915, 2359, 2326, 925, 603, 603,
	0, 0, 0, 2331, 2255, 0, 0, 0, 0, 0,
	2394, 0, 2396, 603, 0, 0, 0, 0, 0, 0,
	1372, 0, 80, 607, 2412, 607, 0, 0, 80, 2319,
	2322, 2397, 2409, 2411, 2399, 2426, 425, 2395, 2393, 2417,
	0, 2419, 0, 0, 0, 2346, 2385, 0, 607, 2429,
	0, 0, 0, 2432, 0, 0, 0, 80, 0, 0,
	2438, 0, 80, 0, 0, 0, 2446, 2363, 607, 2445,
	607, 1029, 607, 2452, 607, 2444, 2449, 2443, 0, 0,
	2464, 0, 0, 0, 2338, 2339, 0, 0, 80, 0,
	2472, 80, 80, 2193, 0, 2194, 80, 0, 0, 2426,
	0, 0, 0, 2481, 0, 0, 2484, 2473, 0, 0,
	2475, 0, 0, 0, 2489, 80, 2487, 2485, 80, 0,
	2400, 0, 2426, 2500, 0, 2502, 127, 0, 0, 1950,
	0, 0, 0, 0, 80, 1773, 80, 2497, 2510, 2424,
	80, 2426, 770, 2426, 0, 0, 0, 0, 0, 127,
	770, 0, 0, 0, 80, 2454, 0, 80, 0, 2515,
	2322, 2426, 0, 0, 80, 0, 0, 127, 80, 0,
	0, 2426, 0, 0, 2418, 2426, 2524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	0, 127, 607, 0, 0, 425, 1824, 0, 0, 607,
	607, 0, 0, 425, 0, 0, 0, 0, 0, 591,
	1831, 1832, 0, 0, 591, 1048, 0, 1837, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	1846, 1847, 1848, 0, 1850, 1851, 1852, 0, 1867, 1868,
	0, 1869, 1870, 1688, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2517, 2518, 0, 1880, 1881,
	0, 0, 0, 0, 2031, 2032, 0, 2033, 0, 0,
	2035, 0, 2037, 0, 2501, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1915, 0, 0, 0, 0, 0, 607,
	0, 0, 878, 0, 0, 771, 607, 607, 607, 771,
	771, 0, 0, 0, 0, 607, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 1941, 2083,
	2084, 914, 913, 923, 924, 916, 917, 918, 919, 920,
	921, 922, 915, 0, 0, 925, 127, 0, 0, 0,
	0, 0, 914, 913, 923, 924, 916, 917, 918, 919,
	920, 921, 922, 915, 0, 0, 925, 1277, 1282, 1283,
	0, 0, 0, 1121, 1288, 1289, 1290, 888, 1292, 0,
	0, 1295, 0, 0, 0, 0, 1300, 1301, 1302, 1303,
	0, 1305, 1306, 1307, 607, 1983, 127, 0, 0, 1313,
	1314, 1315, 607, 0, 0, 1321, 1324, 603, 1329, 1330,
	1502, 0, 0, 0, 603, 603, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 388, 603,
	0, 0, 1612, 1340, 125, 1343, 1344, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 2021, 0, 607, 0,
	0, 0, 0, 127, 0, 127, 2022, 424, 0, 0,
	0, 607, 0, 0, 2024, 469, 1028, 0, 574, 592,
	0, 0, 125, 2027, 2028, 607, 125, 0, 0, 0,
	2029, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 878, 0, 0, 603, 2046, 2047, 2048, 603, 0,
	0, 125, 0, 384, 0, 0, 0, 0, 0, 1931,
	0, 0, 0, 0, 124, 0, 0, 607, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 603, 0, 0,
	914, 913, 923, 924, 916, 917, 918, 919, 920, 921,
	922, 915, 381, 0, 925, 913, 923, 924, 916, 917,
	918, 919, 920, 921, 922, 915, 607, 572, 925, 0,
	0, 596, 0, 0, 0, 752, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 764,
	0, 0, 0, 0, 0, 771, 0, 0, 0, 0,
	782, 0, 0, 0, 362, 0, 0, 0, 0, 127,
	0, 365, 0, 0, 607, 0, 607, 1991, 0, 0,
	0, 374, 382, 383, 0, 0, 591, 1688, 0, 0,
	2000, 2002, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 1338, 1339, 0, 2044, 127, 0,
	2054, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	372, 0, 0, 379, 380, 0, 0, 0, 0, 0,
	0, 591, 0, 0, 2155, 2156, 2157, 2158, 0, 0,
	0, 607, 2162, 0, 0, 603, 2165, 2166, 603, 603,
	914, 913, 923, 924, 916, 917, 918, 919, 920, 921,
	922, 915, 0, 0, 925, 1565, 607, 0, 0, 0,
	0, 0, 0, 1571, 377, 0, 0, 0, 0, 0,
	0, 0, 1581, 1582, 0, 0, 0, 425, 0, 0,
	0, 0, 0, 1592, 0, 0, 0, 914, 913, 923,
	924, 916, 917, 918, 919, 920, 921, 922, 915, 125,
	607, 925, 0, 0, 0, 0, 603, 0, 603, 0,
	1618, 0, 0, 607, 35, 0, 72, 38, 39, 0,
	363, 0, 0, 0, 0, 607, 0, 0, 62, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 376, 366, 367, 125, 387, 0, 0,
	0, 368, 370, 0, 364, 386, 385, 0, 0, 0,
	0, 0, 1991, 0, 0, 2053, 81, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 2043, 0, 0, 1991, 0, 0, 0, 0, 0,
	2290, 0, 0, 2477, 2480, 2476, 0, 603, 0, 0,
	378, 0, 0, 0, 2314, 914, 913, 923, 924, 916,
	917, 918, 919, 920, 921, 922, 915, 0, 0, 925,
	0, 0, 454, 0, 0, 0, 862, 0, 0, 42,
	74, 46, 45, 48, 0, 872, 0, 0, 0, 0,
	0, 0, 0, 1996, 0, 2291, 0, 0, 425, 0,
	425, 0, 0, 0, 0, 0, 1931, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	1931, 914, 913, 923, 924, 916, 917, 918, 919, 920,
	921, 922, 915, 0, 0, 925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 125, 125, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	592, 0, 0, 0, 60, 61, 0, 2292, 0, 0,
	591, 0, 0, 35, 1060, 72, 38, 39, 0, 2042,
	0, 0, 0, 0, 0, 0, 0, 62, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 40, 0, 0,
	0, 0, 448, 0, 0, 591, 0, 2293, 75, 0,
	53, 54, 64, 0, 65, 0, 0, 0, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 81, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2463, 0, 0, 1931,
	0, 1931, 0, 0, 0, 0, 0, 0, 0, 2290,
	0, 0, 0, 0, 2526, 0, 0, 0, 0, 914,
	913, 923, 924, 916, 917, 918, 919, 920, 921, 922,
	915, 0, 1738, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 74,
	46, 45, 48, 0, 73, 0, 0, 2503, 603, 0,
	0, 603, 603, 0, 2291, 0, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 1988, 0, 0, 47, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 125, 0, 0, 79, 0, 0, 0,
	0, 1155, 603, 603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 125, 125, 0, 0, 603, 0,
	125, 0, 0, 60, 61, 1931, 2292, 0, 0, 0,
	603, 0, 0, 0, 433, 1834, 2041, 427, 428, 429,
	430, 431, 436, 437, 441, 442, 451, 450, 449, 452,
	453, 456, 455, 457, 432, 434, 435, 438, 439, 440,
	443, 444, 447, 445, 446, 0, 2293, 75, 0, 53,
	54, 64, 0, 65, 0, 0, 0, 0, 0, 572,
	0, 0, 1146, 0, 0, 0, 0, 448, 0, 125,
	0, 0, 424, 0, 591, 0, 603, 0, 1895, 0,
	0, 0, 1166, 1167, 1168, 0, 0, 0, 0, 1169,
	0, 0, 125, 0, 0, 0, 0, 0, 1874, 0,
	0, 1895, 0, 1155, 0, 0, 914, 913, 923, 924,
	916, 917, 918, 919, 920, 921, 922, 915, 0, 0,
	925, 603, 0, 603, 0, 603, 0, 1930, 914, 913,
	923, 924, 916, 917, 918, 919, 920, 921, 922, 915,
	0, 0, 925, 73, 0, 0, 1281, 1281, 1281, 0,
	0, 0, 1281, 1281, 1281, 1281, 1281, 1281, 1208, 0,
	1281, 0, 0, 0, 0, 1281, 1281, 1281, 1281, 0,
	1281, 1281, 1281, 0, 0, 0, 0, 0, 1281, 1281,
	1281, 1232, 0, 0, 1281, 1281, 0, 1281, 1281, 0,
	0, 0, 592, 1873, 0, 79, 914, 913, 923, 924,
	916, 917, 918, 919, 920, 921, 922, 915, 0, 0,
	925, 0, 1281, 1281, 1281, 1281, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 125, 424, 0, 0, 0,
	125, 125, 0, 0, 125, 1380, 1155, 592, 0, 0,
	2003, 0, 0, 0, 0, 2008, 0, 0, 0, 0,
	0, 1155, 2012, 2013, 0, 0, 0, 0, 0, 433,
	0, 0, 427, 428, 429, 430, 431, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 432,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 914, 913, 923, 924, 916, 917, 918, 919, 920,
	921, 922, 915, 0, 0, 925, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 1872, 125, 125, 0, 0, 591,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 1087, 0, 0, 0, 0, 2072,
	2072, 2072, 0, 0, 0, 0, 0, 454, 603, 0,
	0, 0, 0, 1495, 1496, 125, 0, 0, 0, 0,
	0, 2072, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 2386, 0, 0, 0, 0, 125, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1477, 1155, 1478, 1479, 0, 0, 0, 0,
	0, 1486, 914, 913, 923, 924, 916, 917, 918, 919,
	920, 921, 922, 915, 0, 0, 925, 0, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 1497, 603, 0, 0, 0, 1060,
	0, 0, 0, 0, 1281, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 862, 0, 0,
	1088, 1281, 1281, 0, 0, 0, 0, 448, 0, 0,
	0, 0, 1281, 0, 0, 2173, 1281, 0, 0, 454,
	0, 2072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1930, 0, 0, 0, 0, 1281,
	1990, 0, 0, 0, 0, 0, 0, 0, 1930, 0,
	0, 0, 0, 0, 0, 0, 592, 125, 125, 125,
	125, 125, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 125, 0, 0, 0, 424, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	2229, 592, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 0, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 0, 1089, 1090, 1091,
	1092, 1068, 1072, 1102, 1069, 1075, 1071, 1073, 1070, 2253,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 448,
	0, 0, 0, 0, 1087, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1930, 0, 1930,
	914, 913, 923, 924, 916, 917, 918, 919, 920, 921,
	922, 915, 0, 0, 925, 125, 0, 0, 0, 433,
	0, 591, 427, 428, 429, 430, 431, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 432,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 603, 0, 0, 0, 1074, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1281, 0, 0, 0, 2365,
	1563, 0, 0, 0, 1281, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 1763, 0, 0, 0, 0, 0,
	1088, 914, 913, 923, 924, 916, 917, 918, 919, 920,
	921, 922, 915, 0, 0, 925, 0, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	592, 433, 0, 1816, 427, 428, 429, 430, 431, 436,
	437, 441, 442, 451, 450, 449, 452, 453, 456, 455,
	457, 432, 434, 435, 438, 439, 440, 443, 444, 447,
	445, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2467, 1101, 1104, 1105, 1106, 1107, 1108, 1109, 0, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 0, 1089, 1090, 1091,
	1092, 1068, 1072, 1102, 1069, 1075, 1071, 1073, 1070, 0,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 35, 0, 72, 38, 39, 0, 0, 0, 35,
	0, 72, 38, 39, 0, 62, 0, 0, 125, 0,
	0, 78, 0, 62, 0, 40, 0, 0, 909, 78,
	912, 0, 0, 40, 0, 0, 125, 926, 927, 928,
	929, 930, 931, 932, 0, 910, 911, 908, 914, 913,
	923, 924, 916, 917, 918, 919, 920, 921, 922, 915,
	125, 0, 925, 81, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 469, 0, 0, 0,
	1103, 0, 0, 0, 1964, 0, 0, 2290, 454, 0,
	0, 0, 2522, 0, 0, 2290, 0, 0, 0, 0,
	2511, 0, 0, 0, 0, 0, 0, 1980, 0, 2001,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 42, 74, 46, 45,
	48, 0, 0, 0, 42, 74, 46, 45, 48, 0,
	0, 0, 2291, 0, 0, 0, 0, 0, 0, 2007,
	2291, 424, 0, 0, 0, 592, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 61, 0, 2292, 0, 0, 0, 448, 60,
	61, 0, 2292, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 35, 0, 72, 38,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 0, 0, 0, 2293, 75, 78, 53, 54, 64,
	40, 65, 2293, 75, 0, 53, 54, 64, 0, 65,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2098, 0, 0, 0, 0, 0,
	0, 0, 2290, 0, 0, 0, 0, 2494, 0, 0,
	0, 0, 424, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 42, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 79, 0, 0, 469, 0, 0, 0,
	433, 79, 0, 427, 428, 429, 430, 431, 436, 437,
	441, 442, 451, 450, 449, 452, 453, 456, 455, 457,
	432, 434, 435, 438, 439, 440, 443, 444, 447, 445,
	446, 0, 0, 0, 0, 0, 60, 61, 0, 2292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2293,
	75, 0, 53, 54, 64, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 732, 712, 324, 668, 735, 637, 655, 747, 657,
	660, 700, 621, 681, 254, 653, 622, 0, 641, 612,
	648, 613, 638, 670, 177, 636, 714, 684, 734, 211,
	696, 0, 167, 219, 217, 0, 0, 0, 260, 323,
	733, 676, 0, 741, 214, 0, 693, 742, 313, 237,
	0, 0, 672, 721, 679, 709, 667, 702, 629, 692,
	736, 654, 698, 737, 0, 0, 73, 0, 2340, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 695,
	731, 650, 697, 699, 610, 694, 2333, 616, 623, 746,
	727, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 671, 680, 706, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 0, 690, 0, 0, 79, 624,
	617, 0, 0, 669, 0, 0, 0, 628, 133, 643,
	707, 0, 608, 189, 238, 146, 711, 726, 666, 202,
	353, 730, 663, 662, 276, 0, 318, 191, 212, 150,
	130, 144, 161, 190, 249, 286, 296, 651, 609, 715,
	639, 649, 168, 647, 289, 258, 342, 0, 687, 264,
	288, 215, 331, 278, 340, 341, 192, 750, 350, 355,
	0, 677, 626, 310, 178, 0, 136, 0, 273, 173,
	207, 665, 701, 640, 165, 704, 691, 720, 309, 329,
	152, 325, 236, 242, 162, 164, 163, 145, 304, 328,
	156, 166, 314, 292, 319, 172, 0, 0, 2343, 2344,
	2345, 0, 0, 0, 0, 347, 661, 299, 298, 656,
	198, 710, 250, 134, 281, 265, 203, 135, 321, 358,
	151, 209, 326, 129, 184, 248, 170, 259, 230, 231,
	229, 232, 185, 266, 343, 137, 322, 339, 158, 300,
	302, 356, 287, 139, 337, 317, 234, 204, 205, 138,
	0, 284, 176, 188, 171, 253, 0, 187, 275, 334,
	335, 169, 359, 147, 349, 141, 148, 348, 245, 0,
	244, 351, 330, 338, 235, 223, 0, 140, 336, 233,
	222, 210, 181, 194, 271, 218, 272, 195, 240, 239,
	241, 220, 224, 0, 614, 0, 315, 345, 360, 154,
	635, 303, 327, 0, 0, 155, 186, 180, 270, 243,
	149, 197, 312, 208, 216, 283, 357, 257, 290, 159,
	344, 311, 633, 634, 631, 0, 632, 682, 683, 738,
	739, 740, 708, 625, 0, 722, 723, 0, 0, 0,
	0, 0, 713, 728, 729, 703, 748, 658, 659, 630,
	301, 282, 615, 618, 619, 620, 627, 673, 674, 686,
	689, 718, 717, 716, 719, 724, 744, 743, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 128, 142, 213, 749, 280, 183, 346, 611, 175,
	0, 0, 675, 678, 688, 705, 131, 132, 143, 153,
	160, 174, 179, 182, 652, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 251, 252,
	255, 256, 261, 262, 263, 267, 268, 269, 274, 277,
	279, 285, 291, 293, 294, 295, 297, 305, 306, 307,
	308, 316, 320, 332, 333, 352, 354, 725, 732, 712,
	324, 668, 735, 637, 655, 747, 657, 660, 700, 621,
	681, 254, 653, 622, 0, 641, 612, 648, 613, 638,
	670, 177, 636, 714, 684, 734, 211, 696, 0, 167,
	219, 217, 0, 0, 0, 260, 323, 733, 676, 0,
	741, 214, 0, 693, 742, 313, 237, 0, 0, 672,
	721, 679, 709, 667, 702, 629, 692, 736, 654, 698,
	737, 0, 0, 0, 0, 606, 0, 1402, 1403, 0,
	0, 0, 0, 0, 157, 0, 695, 731, 650, 697,
	699, 610, 694, 0, 616, 623, 746, 727, 644, 645,
	646, 1683, 0, 0, 0, 0, 0, 0, 671, 680,
	706, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 690, 0, 0, 0, 624, 617, 0, 0,
	669, 0, 0, 0, 628, 133, 643, 707, 0, 608,
	189, 238, 146, 711, 726, 666, 202, 353, 730, 663,
	662, 276, 0, 318, 191, 212, 150, 130, 144, 161,
	190, 249, 286, 296, 651, 609, 715, 639, 649, 168,
	647, 289, 258, 342, 0, 687, 264, 288, 215, 331,
	278, 340, 341, 192, 750, 350, 355, 0, 677, 626,
	310, 178, 0, 136, 0, 273, 173, 207, 665, 701,
	640, 165, 704, 691, 720, 309, 329, 152, 325, 236,
	242, 162, 164, 163, 145, 304, 328, 156, 166, 314,
	292, 319, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 661, 299, 298, 656, 198, 710, 250,
	134, 281, 265, 203, 135, 321, 358, 151, 209, 326,
	129, 184, 248, 170, 259, 230, 231, 229, 232, 185,
	266, 343, 137, 322, 339, 158, 300, 302, 356, 287,
	139, 337, 317, 234, 204, 205, 138, 0, 284, 176,
	188, 171, 253, 0, 187, 275, 334, 335, 169, 359,
	147, 349, 141, 148, 348, 245, 0, 244, 351, 330,
	338, 235, 223, 0, 140, 336, 233, 222, 210, 181,
	194, 271, 218, 272, 195, 240, 239, 241, 220, 224,
	0, 614, 0, 315, 345, 360, 154, 635, 303, 327,
	0, 0, 155, 186, 180, 270, 243, 149, 197, 312,
	208, 216, 283, 357, 257, 290, 159, 344, 311, 633,
	634, 631, 0, 632, 682, 683, 738, 739, 740, 708,
	625, 0, 722, 723, 0, 0, 0, 0, 0, 713,
	728, 729, 703, 748, 658, 659, 630, 301, 282, 615,
	618, 619, 620, 627, 673, 674, 686, 689, 718, 717,
	716, 719, 724, 744, 743, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 128, 142,
	213, 749, 280, 183, 346, 611, 175, 0, 0, 675,
	678, 688, 705, 131, 132, 143, 153, 160, 174, 179,
	182, 652, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 251, 252, 255, 256, 261,
	262, 263, 267, 268, 269, 274, 277, 279, 285, 291,
	293, 294, 295, 297, 305, 306, 307, 308, 316, 320,
	332, 333, 352, 354, 725, 732, 712, 324, 668, 735,
	637, 655, 747, 657, 660, 700, 621, 681, 254, 653,
	622, 0, 641, 612, 648, 613, 638, 670, 177, 636,
	714, 684, 734, 211, 696, 0, 167, 219, 217, 0,
	0, 0, 260, 323, 733, 676, 0, 741, 214, 0,
	693, 742, 313, 237, 0, 0, 672, 721, 679, 709,
	667, 702, 629, 692, 736, 654, 698, 737, 0, 0,
	0, 0, 606, 0, 1402, 1403, 0, 0, 0, 0,
	0, 157, 0, 695, 731, 650, 697, 699, 610, 694,
	0, 616, 623, 746, 727, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 671, 680, 706, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 690,
	0, 0, 0, 624, 617, 0, 0, 669, 0, 0,
	0, 628, 133, 643, 707, 0, 608, 189, 238, 146,
	711, 726, 666, 202, 353, 730, 663, 662, 276, 0,
	318, 191, 212, 150, 130, 144, 161, 190, 249, 286,
	296, 651, 609, 715, 639, 649, 168, 647, 289, 258,
	342, 0, 687, 264, 288, 215, 331, 278, 340, 341,
	192, 750, 350, 355, 0, 677, 626, 310, 178, 0,
	136, 0, 273, 173, 207, 665, 701, 640, 165, 704,
	691, 720, 309, 329, 152, 325, 236, 242, 162, 164,
	163, 145, 304, 328, 156, 166, 314, 292, 319, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	661, 299, 298, 656, 198, 710, 250, 134, 281, 265,
	203, 135, 321, 358, 151, 209, 326, 129, 184, 248,
	170, 259, 230, 231, 229, 232, 185, 266, 343, 137,
	322, 339, 158, 300, 302, 356, 287, 139, 337, 317,
	234, 204, 205, 138, 0, 284, 176, 188, 171, 253,
	0, 187, 275, 334, 335, 169, 359, 147, 349, 141,
	148, 348, 245, 0, 244, 351, 330, 338, 235, 223,
	0, 140, 336, 233, 222, 210, 181, 194, 271, 218,
	272, 195, 240, 239, 241, 220, 224, 0, 614, 0,
	315, 345, 360, 154, 635, 303, 327, 0, 0, 155,
	186, 180, 270, 243, 149, 197, 312, 208, 216, 283,
	357, 257, 290, 159, 344, 311, 633, 634, 631, 0,
	632, 682, 683, 738, 739, 740, 708, 625, 0, 722,
	723, 0, 0, 0, 0, 0, 713, 728, 729, 703,
	748, 658, 659, 630, 301, 282, 615, 618, 619, 620,
	627, 673, 674, 686, 689, 718, 717, 716, 719, 724,
	744, 743, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 128, 142, 213, 749, 280,
	183, 346, 611, 175, 0, 0, 675, 678, 688, 705,
	131, 132, 143, 153, 160, 174, 179, 182, 652, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 251, 252, 255, 256, 261, 262, 263, 267,
	268, 269, 274, 277, 279, 285, 291, 293, 294, 295,
	297, 305, 306, 307, 308, 316, 320, 332, 333, 352,
	354, 725, 732, 1892, 324, 668, 735, 637, 655, 747,
	657, 660, 700, 621, 681, 254, 653, 622, 0, 641,
	612, 648, 613, 638, 670, 177, 636, 714, 684, 734,
	211, 696, 0, 167, 219, 217, 0, 0, 0, 260,
	323, 733, 676, 0, 741, 214, 0, 693, 742, 313,
	237, 0, 0, 672, 721, 679, 709, 667, 702, 629,
	692, 736, 654, 698, 737, 81, 0, 878, 0, 606,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	695, 731, 650, 697, 699, 610, 694, 0, 616, 623,
	746, 727, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 671, 680, 706, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 690, 0, 0, 0,
	624, 617, 0, 0, 669, 0, 0, 0, 628, 133,
	643, 707, 0, 608, 189, 238, 146, 711, 726, 666,
	202, 353, 730, 663, 662, 276, 0, 318, 191, 212,
	150, 130, 144, 161, 190, 249, 286, 296, 651, 609,
	715, 639, 649, 168, 647, 289, 258, 342, 0, 687,
	264, 288, 215, 331, 278, 340, 341, 192, 750, 350,
	355, 0, 677, 626, 310, 178, 0, 136, 0, 273,
	173, 207, 665, 701, 640, 165, 704, 691, 720, 309,
	329, 152, 325, 236, 242, 162, 164, 163, 145, 304,
	328, 156, 166, 314, 292, 319, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 661, 299, 298,
	656, 198, 710, 250, 134, 281, 265, 203, 135, 321,
	358, 151, 209, 326, 129, 184, 248, 170, 259, 230,
	231, 229, 232, 185, 266, 343, 137, 322, 339, 158,
	300, 302, 356, 287, 139, 337, 317, 234, 204, 205,
	138, 0, 284, 176, 188, 171, 253, 0, 187, 275,
	334, 335, 169, 359, 147, 349, 141, 148, 348, 245,
	0, 244, 351, 330, 338, 235, 223, 0, 140, 336,
	233, 222, 210, 181, 194, 271, 218, 272, 195, 240,
	239, 241, 220, 224, 0, 614, 0, 315, 345, 360,
	154, 635, 303, 327, 0, 0, 155, 186, 180, 270,
	243, 149, 197, 312, 208, 216, 283, 357, 257, 290,
	159, 344, 311, 633, 634, 631, 0, 632, 682, 683,
	738, 739, 740, 708, 625, 0, 722, 723, 0, 0,
	0, 0, 0, 713, 728, 729, 703, 748, 658, 659,
	630, 301, 282, 615, 618, 619, 620, 627, 673, 674,
	686, 689, 718, 717, 716, 719, 724, 744, 743, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 128, 142, 213, 1893, 280, 183, 346, 611,
	175, 0, 0, 675, 678, 688, 705, 131, 132, 143,
	153, 160, 174, 179, 182, 652, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 251,
	252, 255, 256, 261, 262, 263, 267, 268, 269, 274,
	277, 279, 285, 291, 293, 294, 295, 297, 305, 306,
	307, 308, 316, 320, 332, 333, 352, 354, 725, 732,
	712, 324, 668, 735, 637, 655, 747, 657, 660, 700,
	621, 681, 254, 653, 622, 0, 641, 612, 648, 613,
	638, 670, 177, 636, 714, 684, 734, 211, 696, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 733, 676,
	0, 741, 214, 0, 693, 742, 313, 237, 0, 0,
	672, 721, 679, 709, 667, 702, 629, 692, 736, 654,
	698, 737, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 695, 731, 650,
	697, 699, 610, 694, 0, 616, 623, 746, 727, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 671,
	680, 706, 664, 0, 0, 0, 0, 0, 0, 2150,
	0, 642, 0, 690, 0, 0, 0, 624, 617, 0,
	0, 669, 0, 0, 0, 628, 133, 643, 707, 0,
	608, 189, 238, 146, 711, 726, 666, 202, 353, 730,
	663, 662, 276, 0, 318, 191, 212, 150, 130, 144,
	161, 190, 249, 286, 296, 651, 609, 715, 639, 649,
	168, 647, 289, 258, 342, 0, 687, 264, 288, 215,
	331, 278, 340, 341, 192, 750, 350, 355, 0, 677,
	626, 310, 178, 0, 136, 0, 273, 173, 207, 665,
	701, 640, 165, 704, 691, 720, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 661, 299, 298, 656, 198, 710,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 614, 0, 315, 345, 360, 154, 635, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	633, 634, 631, 0, 632, 682, 683, 738, 739, 740,
	708, 625, 0, 722, 723, 0, 0, 0, 0, 0,
	713, 728, 729, 703, 748, 658, 659, 630, 301, 282,
	615, 618, 619, 620, 627, 673, 674, 686, 689, 718,
	717, 716, 719, 724, 744, 743, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 128,
	142, 213, 749, 280, 183, 346, 611, 175, 0, 0,
	675, 678, 688, 705, 131, 132, 143, 153, 160, 174,
	179, 182, 652, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 725, 732, 712, 324, 668,
	735, 637, 655, 747, 657, 660, 700, 621, 681, 254,
	653, 622, 0, 641, 612, 648, 613, 638, 670, 177,
	636, 714, 684, 734, 211, 696, 0, 167, 219, 217,
	0, 0, 0, 260, 323, 733, 676, 0, 741, 214,
	0, 693, 742, 313, 237, 0, 0, 672, 721, 679,
	709, 667, 702, 629, 692, 736, 654, 698, 737, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 695, 731, 650, 697, 699, 610,
	694, 0, 616, 623, 746, 727, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 671, 680, 706, 664,
	0, 0, 0, 0, 0, 0, 1829, 0, 642, 0,
	690, 0, 0, 0, 624, 617, 0, 0, 669, 0,
	0, 0, 628, 133, 643, 707, 0, 608, 189, 238,
	146, 711, 726, 666, 202, 353, 730, 663, 662, 276,
	0, 318, 191, 212, 150, 130, 144, 161, 190, 249,
	286, 296, 651, 609, 715, 639, 649, 168, 647, 289,
	258, 342, 0, 687, 264, 288, 215, 331, 278, 340,
	341, 192, 750, 350, 355, 0, 677, 626, 310, 178,
	0, 136, 0, 273, 173, 207, 665, 701, 640, 165,
	704, 691, 720, 309, 329, 152, 325, 236, 242, 162,
	164, 163, 145, 304, 328, 156, 166, 314, 292, 319,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 661, 299, 298, 656, 198, 710, 250, 134, 281,
	265, 203, 135, 321, 358, 151, 209, 326, 129, 184,
	248, 170, 259, 230, 231, 229, 232, 185, 266, 343,
	137, 322, 339, 158, 300, 302, 356, 287, 139, 337,
	317, 234, 204, 205, 138, 0, 284, 176, 188, 171,
	253, 0, 187, 275, 334, 335, 169, 359, 147, 349,
	141, 148, 348, 245, 0, 244, 351, 330, 338, 235,
	223, 0, 140, 336, 233, 222, 210, 181, 194, 271,
	218, 272, 195, 240, 239, 241, 220, 224, 0, 614,
	0, 315, 345, 360, 154, 635, 303, 327, 0, 0,
	155, 186, 180, 270, 243, 149, 197, 312, 208, 216,
	283, 357, 257, 290, 159, 344, 311, 633, 634, 631,
	0, 632, 682, 683, 738, 739, 740, 708, 625, 0,
	722, 723, 0, 0, 0, 0, 0, 713, 728, 729,
	703, 748, 658, 659, 630, 301, 282, 615, 618, 619,
	620, 627, 673, 674, 686, 689, 718, 717, 716, 719,
	724, 744, 743, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 128, 142, 213, 749,
	280, 183, 346, 611, 175, 0, 0, 675, 678, 688,
	705, 131, 132, 143, 153, 160, 174, 179, 182, 652,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 251, 252, 255, 256, 261, 262, 263,
	267, 268, 269, 274, 277, 279, 285, 291, 293, 294,
	295, 297, 305, 306, 307, 308, 316, 320, 332, 333,
	352, 354, 725, 732, 712, 324, 668, 735, 637, 655,
	747, 657, 660, 700, 621, 681, 254, 653, 622, 0,
	641, 612, 648, 613, 638, 670, 177, 636, 714, 684,
	734, 211, 696, 0, 167, 219, 217, 0, 0, 0,
	260, 323, 733, 676, 0, 741, 214, 0, 693, 742,
	313, 237, 0, 0, 672, 721, 679, 709, 667, 702,
	629, 692, 736, 654, 698, 737, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 695, 731, 650, 697, 699, 610, 694, 0, 616,
	623, 746, 727, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 671, 680, 706, 664, 0, 0, 0,
	0, 0, 0, 1819, 0, 642, 0, 690, 0, 0,
	0, 624, 617, 0, 0, 669, 0, 0, 0, 628,
	133, 643, 707, 0, 608, 189, 238, 146, 711, 726,
	666, 202, 353, 730, 663, 662, 276, 0, 318, 191,
	212, 150, 130, 144, 161, 190, 249, 286, 296, 651,
	609, 715, 639, 649, 168, 647, 289, 258, 342, 0,
	687, 264, 288, 215, 331, 278, 340, 341, 192, 750,
	350, 355, 0, 677, 626, 310, 178, 0, 136, 0,
	273, 173, 207, 665, 701, 640, 165, 704, 691, 720,
	309, 329, 152, 325, 236, 242, 162, 164, 163, 145,
	304, 328, 156, 166, 314, 292, 319, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 661, 299,
	298, 656, 198, 710, 250, 134, 281, 265, 203, 135,
	321, 358, 151, 209, 326, 129, 184, 248, 170, 259,
	230, 231, 229, 232, 185, 266, 343, 137, 322, 339,
	158, 300, 302, 356, 287, 139, 337, 317, 234, 204,
	205, 138, 0, 284, 176, 188, 171, 253, 0, 187,
	275, 334, 335, 169, 359, 147, 349, 141, 148, 348,
	245, 0, 244, 351, 330, 338, 235, 223, 0, 140,
	336, 233, 222, 210, 181, 194, 271, 218, 272, 195,
	240, 239, 241, 220, 224, 0, 614, 0, 315, 345,
	360, 154, 635, 303, 327, 0, 0, 155, 186, 180,
	270, 243, 149, 197, 312, 208, 216, 283, 357, 257,
	290, 159, 344, 311, 633, 634, 631, 0, 632, 682,
	683, 738, 739, 740, 708, 625, 0, 722, 723, 0,
	0, 0, 0, 0, 713, 728, 729, 703, 748, 658,
	659, 630, 301, 282, 615, 618, 619, 620, 627, 673,
	674, 686, 689, 718, 717, 716, 719, 724, 744, 743,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 685, 128, 142, 213, 749, 280, 183, 346,
	611, 175, 0, 0, 675, 678, 688, 705, 131, 132,
	143, 153, 160, 174, 179, 182, 652, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	251, 252, 255, 256, 261, 262, 263, 267, 268, 269,
	274, 277, 279, 285, 291, 293, 294, 295, 297, 305,
	306, 307, 308, 316, 320, 332, 333, 352, 354, 725,
	732, 712, 324, 668, 735, 637, 655, 747, 657, 660,
	700, 621, 681, 254, 653, 622, 0, 641, 612, 648,
	613, 638, 670, 177, 636, 714, 684, 734, 211, 696,
	0, 167, 219, 217, 0, 0, 0, 260, 323, 733,
	676, 0, 741, 214, 0, 693, 742, 313, 237, 0,
	0, 672, 721, 679, 709, 667, 702, 629, 692, 736,
	654, 698, 737, 81, 0, 0, 0, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 695, 731,
	650, 697, 699, 610, 694, 0, 616, 623, 746, 727,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	671, 680, 706, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 690, 0, 0, 0, 624, 617,
	0, 0, 669, 0, 0, 0, 628, 133, 643, 707,
	0, 608, 189, 238, 146, 711, 726, 666, 202, 353,
	730, 663, 662, 276, 0, 318, 191, 212, 150, 130,
	144, 161, 190, 249, 286, 296, 651, 609, 715, 639,
	649, 168, 647, 289, 258, 342, 0, 687, 264, 288,
	215, 331, 278, 340, 341, 192, 750, 350, 355, 0,
	677, 626, 310, 178, 0, 136, 0, 273, 173, 207,
	665, 701, 640, 165, 704, 691, 720, 309, 329, 152,
	325, 236, 242, 162, 164, 163, 145, 304, 328, 156,
	166, 314, 292, 319, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 661, 299, 298, 656, 198,
	710, 250, 134, 281, 265, 203, 135, 321, 358, 151,
	209, 326, 129, 184, 248, 170, 259, 230, 231, 229,
	232, 185, 266, 343, 137, 322, 339, 158, 300, 302,
	356, 287, 139, 337, 317, 234, 204, 205, 138, 0,
	284, 176, 188, 171, 253, 0, 187, 275, 334, 335,
	169, 359, 147, 349, 141, 148, 348, 245, 0, 244,
	351, 330, 338, 235, 223, 0, 140, 336, 233, 222,
	210, 181, 194, 271, 218, 272, 195, 240, 239, 241,
	220, 224, 0, 614, 0, 315, 345, 360, 154, 635,
	303, 327, 0, 0, 155, 186, 180, 270, 243, 149,
	197, 312, 208, 216, 283, 357, 257, 290, 159, 344,
	311, 633, 634, 631, 0, 632, 682, 683, 738, 739,
	740, 708, 625, 0, 722, 723, 0, 0, 0, 0,
	0, 713, 728, 729, 703, 748, 658, 659, 630, 301,
	282, 615, 618, 619, 620, 627, 673, 674, 686, 689,
	718, 717, 716, 719, 724, 744, 743, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 685,
	128, 142, 213, 749, 280, 183, 346, 611, 175, 0,
	0, 675, 678, 688, 705, 131, 132, 143, 153, 160,
	174, 179, 182, 652, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 251, 252, 255,
	256, 261, 262, 263, 267, 268, 269, 274, 277, 279,
	285, 291, 293, 294, 295, 297, 305, 306, 307, 308,
	316, 320, 332, 333, 352, 354, 725, 732, 712, 324,
	668, 735, 637, 655, 747, 657, 660, 700, 621, 681,
	254, 653, 622, 0, 641, 612, 648, 613, 638, 670,
	177, 636, 714, 684, 734, 211, 696, 0, 167, 219,
	217, 0, 0, 0, 260, 323, 733, 676, 0, 741,
	214, 0, 693, 742, 313, 237, 0, 0, 672, 721,
	679, 709, 667, 702, 629, 692, 736, 654, 698, 737,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 695, 731, 650, 697, 699,
	610, 694, 0, 616, 623, 746, 727, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 671, 680, 706,
	664, 0, 0, 0, 0, 0, 0, 1381, 0, 642,
	0, 690, 0, 0, 0, 624, 617, 0, 0, 669,
	0, 0, 0, 628, 133, 643, 707, 0, 608, 189,
	238, 146, 711, 726, 666, 202, 353, 730, 663, 662,
	276, 0, 318, 191, 212, 150, 130, 144, 161, 190,
	249, 286, 296, 651, 609, 715, 639, 649, 168, 647,
	289, 258, 342, 0, 687, 264, 288, 215, 331, 278,
	340, 341, 192, 750, 350, 355, 0, 677, 626, 310,
	178, 0, 136, 0, 273, 173, 207, 665, 701, 640,
	165, 704, 691, 720, 309, 329, 152, 325, 236, 242,
	162, 164, 163, 145, 304, 328, 156, 166, 314, 292,
	319, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 661, 299, 298, 656, 198, 710, 250, 134,
	281, 265, 203, 135, 321, 358, 151, 209, 326, 129,
	184, 248, 170, 259, 230, 231, 229, 232, 185, 266,
	343, 137, 322, 339, 158, 300, 302, 356, 287, 139,
	337, 317, 234, 204, 205, 138, 0, 284, 176, 188,
	171, 253, 0, 187, 275, 334, 335, 169, 359, 147,
	349, 141, 148, 348, 245, 0, 244, 351, 330, 338,
	235, 223, 0, 140, 336, 233, 222, 210, 181, 194,
	271, 218, 272, 195, 240, 239, 241, 220, 224, 0,
	614, 0, 315, 345, 360, 154, 635, 303, 327, 0,
	0, 155, 186, 180, 270, 243, 149, 197, 312, 208,
	216, 283, 357, 257, 290, 159, 344, 311, 633, 634,
	631, 0, 632, 682, 683, 738, 739, 740, 708, 625,
	0, 722, 723, 0, 0, 0, 0, 0, 713, 728,
	729, 703, 748, 658, 659, 630, 301, 282, 615, 618,
	619, 620, 627, 673, 674, 686, 689, 718, 717, 716,
	719, 724, 744, 743, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 685, 128, 142, 213,
	749, 280, 183, 346, 611, 175, 0, 0, 675, 678,
	688, 705, 131, 132, 143, 153, 160, 174, 179, 182,
	652, 193, 196, 199, 200, 201, 206, 221, 225, 226,
	227, 228, 246, 247, 251, 252, 255, 256, 261, 262,
	263, 267, 268, 269, 274, 277, 279, 285, 291, 293,
	294, 295, 297, 305, 306, 307, 308, 316, 320, 332,
	333, 352, 354, 725, 732, 712, 324, 668, 735, 637,
	655, 747, 657, 660, 700, 621, 681, 254, 653, 622,
	0, 641, 612, 648, 613, 638, 670, 177, 636, 714,
	684, 734, 211, 696, 0, 167, 219, 217, 0, 0,
	0, 260, 323, 733, 676, 0, 741, 214, 0, 693,
	742, 313, 237, 0, 0, 672, 721, 679, 709, 667,
	702, 629, 692, 736, 654, 698, 737, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 695, 731, 650, 697, 699, 610, 694, 0,
	616, 623, 746, 727, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 671, 680, 706, 664, 0, 0,
	0, 0, 0, 0, 1241, 0, 642, 0, 690, 0,
	0, 0, 624, 617, 0, 0, 669, 0, 0, 0,
	628, 133, 643, 707, 0, 608, 189, 238, 146, 711,
	726, 666, 202, 353, 730, 663, 662, 276, 0, 318,
	191, 212, 150, 130, 144, 161, 190, 249, 286, 296,
	651, 609, 715, 639, 649, 168, 647, 289, 258, 342,
	0, 687, 264, 288, 215, 331, 278, 340, 341, 192,
	750, 350, 355, 0, 677, 626, 310, 178, 0, 136,
	0, 273, 173, 207, 665, 701, 640, 165, 704, 691,
	720, 309, 329, 152, 325, 236, 242, 162, 164, 163,
	145, 304, 328, 156, 166, 314, 292, 319, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 661,
	299, 298, 656, 198, 710, 250, 134, 281, 265, 203,
	135, 321, 358, 151, 209, 326, 129, 184, 248, 170,
	259, 230, 231, 229, 232, 185, 266, 343, 137, 322,
	339, 158, 300, 302, 356, 287, 139, 337, 317, 234,
	204, 205, 138, 0, 284, 176, 188, 171, 253, 0,
	187, 275, 334, 335, 169, 359, 147, 349, 141, 148,
	348, 245, 0, 244, 351, 330, 338, 235, 223, 0,
	140, 336, 233, 222, 210, 181, 194, 271, 218, 272,
	195, 240, 239, 241, 220, 224, 0, 614, 0, 315,
	345, 360, 154, 635, 303, 327, 0, 0, 155, 186,
	180, 270, 243, 149, 197, 312, 208, 216, 283, 357,
	257, 290, 159, 344, 311, 633, 634, 631, 0, 632,
	682, 683, 738, 739, 740, 708, 625, 0, 722, 723,
	0, 0, 0, 0, 0, 713, 728, 729, 703, 748,
	658, 659, 630, 301, 282, 615, 618, 619, 620, 627,
	673, 674, 686, 689, 718, 717, 716, 719, 724, 744,
	743, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 685, 128, 142, 213, 749, 280, 183,
	346, 611, 175, 0, 0, 675, 678, 688, 705, 131,
	132, 143, 153, 160, 174, 179, 182, 652, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 251, 252, 255, 256, 261, 262, 263, 267, 268,
	269, 274, 277, 279, 285, 291, 293, 294, 295, 297,
	305, 306, 307, 308, 316, 320, 332, 333, 352, 354,
	725, 732, 712, 324, 668, 735, 637, 655, 747, 657,
	660, 700, 621, 681, 254, 653, 622, 0, 641, 612,
	648, 613, 638, 670, 177, 636, 714, 684, 734, 211,
	696, 0, 167, 219, 217, 0, 0, 0, 260, 323,
	733, 676, 0, 741, 214, 0, 693, 742, 313, 237,
	0, 0, 672, 721, 679, 709, 667, 702, 629, 692,
	736, 654, 698, 737, 0, 0, 0, 0, 606, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 695,
	731, 650, 697, 699, 610, 694, 0, 616, 623, 746,
	727, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 671, 680, 706, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 0, 690, 0, 0, 0, 624,
	617, 0, 0, 669, 0, 0, 0, 628, 133, 643,
	707, 0, 608, 189, 238, 146, 711, 726, 666, 202,
	353, 730, 663, 662, 276, 0, 318, 191, 212, 150,
	130, 144, 161, 190, 249, 286, 296, 651, 609, 715,
	639, 649, 168, 647, 289, 258, 342, 0, 687, 264,
	288, 215, 331, 278, 340, 341, 192, 750, 350, 355,
	0, 677, 626, 310, 178, 0, 136, 0, 273, 173,
	207, 665, 701, 640, 165, 704, 691, 720, 309, 329,
	152, 325, 236, 242, 162, 164, 163, 145, 304, 328,
	156, 166, 314, 292, 319, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 661, 299, 298, 656,
	198, 710, 250, 134, 281, 265, 203, 135, 321, 358,
	151, 209, 326, 129, 184, 248, 170, 259, 230, 231,
	229, 232, 185, 266, 343, 137, 322, 339, 158, 300,
	302, 356, 287, 139, 337, 317, 234, 204, 205, 138,
	0, 284, 176, 188, 171, 253, 0, 187, 275, 334,
	335, 169, 359, 147, 349, 141, 148, 348, 245, 0,
	244, 351, 330, 338, 235, 223, 0, 140, 336, 233,
	222, 210, 181, 194, 271, 218, 272, 195, 240, 239,
	241, 220, 224, 0, 614, 0, 315, 345, 360, 154,
	635, 303, 327, 0, 0, 155, 186, 180, 270, 243,
	149, 197, 312, 208, 216, 283, 357, 257, 290, 159,
	344, 311, 633, 634, 631, 0, 632, 682, 683, 738,
	739, 740, 708, 625, 0, 722, 723, 0, 0, 0,
	0, 0, 713, 728, 729, 703, 748, 658, 659, 630,
	301, 282, 615, 618, 619, 620, 627, 673, 674, 686,
	689, 718, 717, 716, 719, 724, 744, 743, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 128, 142, 213, 749, 280, 183, 346, 611, 175,
	0, 0, 675, 678, 688, 705, 131, 132, 143, 153,
	160, 174, 179, 182, 652, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 251, 252,
	255, 256, 261, 262, 263, 267, 268, 269, 274, 277,
	279, 285, 291, 293, 294, 295, 297, 305, 306, 307,
	308, 316, 320, 332, 333, 352, 354, 725, 732, 712,
	324, 668, 735, 637, 655, 747, 657, 660, 700, 621,
	681, 254, 653, 622, 0, 641, 612, 648, 613, 638,
	670, 177, 636, 714, 684, 734, 211, 696, 0, 167,
	219, 217, 0, 0, 0, 260, 323, 733, 676, 0,
	741, 214, 0, 693, 742, 313, 237, 0, 0, 672,
	721, 679, 709, 667, 702, 629, 692, 736, 654, 698,
	737, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 695, 731, 650, 697,
	699, 610, 694, 0, 616, 623, 746, 727, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 671, 680,
	706, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 0, 690, 0, 0, 0, 624, 617, 0, 0,
	669, 0, 0, 0, 628, 133, 643, 707, 0, 608,
	189, 238, 146, 711, 726, 666, 202, 353, 730, 663,
	662, 276, 0, 318, 191, 212, 150, 130, 144, 161,
	190, 249, 286, 296, 651, 609, 715, 639, 649, 168,
	647, 289, 258, 342, 0, 687, 264, 288, 215, 331,
	278, 340, 341, 192, 750, 350, 355, 0, 677, 626,
	310, 178, 0, 136, 0, 273, 173, 207, 665, 701,
	640, 165, 704, 691, 720, 309, 329, 152, 325, 236,
	242, 162, 164, 163, 145, 304, 328, 156, 166, 314,
	292, 319, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 661, 299, 298, 656, 198, 710, 250,
	134, 281, 265, 203, 135, 321, 358, 151, 209, 326,
	129, 184, 248, 170, 259, 230, 231, 229, 232, 185,
	266, 343, 137, 322, 339, 158, 300, 302, 356, 287,
	139, 337, 317, 234, 204, 205, 138, 0, 284, 176,
	188, 171, 253, 0, 187, 275, 334, 335, 169, 359,
	147, 349, 141, 148, 348, 245, 0, 244, 351, 330,
	338, 235, 223, 0, 140, 336, 233, 222, 210, 181,
	194, 271, 218, 272, 195, 240, 239, 241, 220, 224,
	0, 614, 0, 315, 345, 360, 154, 635, 303, 327,
	0, 0, 155, 186, 180, 270, 243, 149, 197, 312,
	208, 216, 283, 357, 257, 290, 159, 344, 311, 633,
	634, 631, 0, 632, 682, 683, 738, 739, 740, 708,
	625, 0, 722, 723, 0, 0, 0, 0, 0, 713,
	728, 729, 703, 748, 658, 659, 630, 301, 282, 615,
	618, 619, 620, 627, 673, 674, 686, 689, 718, 717,
	716, 719, 724, 744, 743, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 685, 128, 142,
	213, 749, 280, 183, 346, 611, 175, 0, 0, 675,
	678, 688, 705, 131, 132, 143, 153, 160, 174, 179,
	182, 652, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 251, 252, 255, 256, 261,
	262, 263, 267, 268, 269, 274, 277, 279, 285, 291,
	293, 294, 295, 297, 305, 306, 307, 308, 316, 320,
	332, 333, 352, 354, 725, 732, 712, 324, 668, 735,
	637, 655, 747, 657, 660, 700, 621, 681, 254, 653,
	622, 0, 641, 612, 648, 613, 638, 670, 177, 636,
	714, 684, 734, 211, 696, 0, 167, 219, 217, 0,
	0, 0, 260, 323, 1413, 1417, 0, 741, 214, 0,
	693, 742, 313, 237, 0, 0, 672, 721, 679, 709,
	667, 702, 629, 692, 736, 654, 698, 737, 0, 0,
	0, 0, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 695, 731, 650, 697, 699, 610, 694,
	0, 616, 623, 746, 727, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 671, 680, 706, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 690,
	0, 0, 0, 624, 617, 0, 0, 669, 0, 0,
	0, 628, 133, 643, 707, 0, 608, 189, 238, 146,
	711, 726, 1416, 202, 353, 730, 663, 662, 1411, 0,
	1412, 191, 212, 605, 130, 144, 1409, 1415, 249, 286,
	296, 651, 609, 715, 639, 649, 168, 647, 289, 258,
	342, 0, 687, 264, 288, 215, 331, 278, 340, 341,
	192, 750, 350, 355, 0, 677, 626, 310, 178, 0,
	136, 0, 273, 173, 207, 665, 701, 640, 165, 704,
	691, 720, 309, 329, 152, 325, 236, 242, 162, 164,
	163, 145, 304, 328, 156, 166, 314, 292, 319, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	661, 299, 298, 656, 198, 710, 250, 134, 281, 265,
	203, 135, 321, 358, 151, 209, 326, 129, 184, 248,
	170, 259, 230, 231, 229, 232, 185, 266, 343, 137,
	322, 339, 158, 300, 302, 356, 287, 139, 337, 317,
	234, 204, 205, 138, 0, 284, 176, 188, 171, 253,
	0, 187, 275, 334, 335, 169, 359, 147, 349, 141,
	148, 348, 245, 0, 244, 351, 330, 338, 235, 223,
	0, 140, 336, 233, 222, 210, 181, 194, 271, 218,
	272, 195, 240, 239, 241, 220, 224, 0, 614, 0,
	315, 345, 360, 154, 635, 303, 327, 0, 0, 155,
	186, 180, 270, 243, 149, 197, 312, 208, 216, 283,
	357, 257, 290, 159, 344, 311, 633, 634, 631, 0,
	632, 682, 683, 738, 739, 740, 708, 625, 0, 722,
	723, 0, 0, 0, 0, 0, 713, 728, 729, 703,
	748, 658, 659, 630, 301, 282, 615, 618, 619, 620,
	627, 673, 674, 686, 689, 718, 717, 716, 719, 724,
	744, 743, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 685, 128, 142, 213, 749, 280,
	183, 346, 611, 175, 0, 0, 675, 678, 688, 705,
	131, 132, 143, 153, 160, 174, 179, 182, 652, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 251, 252, 255, 256, 261, 262, 263, 267,
	268, 269, 274, 277, 279, 285, 291, 293, 294, 295,
	297, 305, 306, 307, 308, 316, 320, 332, 333, 352,
	354, 725, 732, 712, 324, 668, 735, 637, 655, 747,
	657, 660, 700, 621, 681, 254, 653, 622, 0, 641,
	612, 648, 613, 638, 670, 177, 636, 714, 684, 734,
	211, 696, 0, 167, 219, 217, 0, 0, 0, 260,
	323, 733, 676, 0, 741, 214, 0, 693, 742, 313,
	237, 0, 0, 672, 721, 679, 709, 667, 702, 629,
	692, 736, 654, 698, 737, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	695, 731, 650, 697, 699, 610, 694, 0, 616, 623,
	746, 727, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 671, 680, 706, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 642, 0, 690, 0, 0, 0,
	624, 617, 0, 0, 669, 0, 0, 0, 628, 133,
	643, 707, 0, 608, 189, 238, 146, 711, 726, 666,
	202, 353, 730, 663, 662, 276, 0, 318, 191, 212,
	150, 130, 144, 161, 190, 249, 286, 296, 651, 609,
	715, 639, 649, 168, 647, 289, 258, 342, 0, 687,
	264, 288, 215, 331, 278, 340, 341, 192, 750, 350,
	355, 0, 677, 626, 310, 178, 0, 136, 0, 273,
	173, 207, 665, 701, 640, 165, 704, 691, 720, 309,
	329, 152, 325, 236, 242, 162, 164, 163, 145, 304,
	328, 156, 166, 314, 292, 319, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 661, 299, 298,
	656, 198, 710, 250, 134, 281, 265, 203, 135, 321,
	358, 151, 209, 326, 129, 184, 248, 170, 259, 230,
	231, 229, 232, 185, 266, 343, 137, 322, 339, 158,
	300, 302, 356, 287, 139, 337, 317, 234, 204, 205,
	138, 0, 284, 176, 188, 171, 253, 0, 187, 275,
	334, 335, 169, 359, 147, 349, 141, 148, 348, 245,
	0, 244, 351, 330, 338, 235, 223, 0, 140, 336,
	233, 222, 210, 181, 194, 271, 218, 272, 195, 240,
	239, 241, 220, 224, 0, 614, 0, 315, 345, 360,
	154, 635, 303, 327, 0, 0, 155, 186, 180, 270,
	243, 149, 197, 312, 208, 216, 283, 357, 257, 290,
	159, 344, 311, 633, 634, 631, 0, 632, 682, 683,
	738, 739, 740, 708, 625, 0, 722, 723, 0, 0,
	0, 0, 0, 713, 728, 729, 703, 748, 658, 659,
	630, 301, 282, 615, 618, 619, 620, 627, 673, 674,
	686, 689, 718, 717, 716, 719, 724, 744, 743, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 128, 142, 213, 749, 280, 183, 346, 611,
	175, 0, 0, 675, 678, 688, 705, 131, 132, 143,
	153, 160, 174, 179, 182, 652, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 251,
	252, 255, 256, 261, 262, 263, 267, 268, 269, 274,
	277, 279, 285, 291, 293, 294, 295, 297, 305, 306,
	307, 308, 316, 320, 332, 333, 352, 354, 725, 732,
	712, 324, 668, 735, 637, 655, 747, 657, 660, 700,
	621, 681, 254, 653, 622, 0, 641, 612, 648, 613,
	638, 670, 177, 636, 714, 684, 734, 211, 696, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 733, 676,
	0, 741, 214, 0, 693, 742, 313, 237, 0, 0,
	672, 721, 679, 709, 667, 702, 629, 692, 736, 654,
	698, 737, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 695, 731, 650,
	697, 699, 610, 694, 0, 616, 623, 746, 727, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 671,
	680, 706, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 0, 690, 0, 0, 0, 624, 617, 0,
	0, 669, 0, 0, 0, 628, 133, 643, 707, 0,
	608, 189, 238, 146, 711, 726, 666, 202, 353, 730,
	663, 662, 276, 0, 318, 191, 212, 605, 130, 144,
	601, 190, 249, 286, 296, 651, 609, 715, 639, 649,
	168, 647, 289, 258, 342, 0, 687, 264, 288, 215,
	331, 278, 340, 341, 192, 750, 350, 355, 0, 677,
	626, 310, 178, 0, 136, 0, 273, 173, 207, 665,
	701, 640, 165, 704, 691, 720, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 661, 299, 298, 656, 198, 710,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 614, 0, 315, 345, 360, 154, 635, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	633, 634, 631, 0, 632, 682, 683, 738, 739, 740,
	708, 625, 0, 722, 723, 0, 0, 0, 0, 0,
	713, 728, 729, 703, 748, 658, 659, 630, 301, 282,
	615, 618, 619, 620, 627, 673, 674, 686, 689, 718,
	717, 716, 719, 724, 744, 743, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 128,
	142, 213, 749, 280, 183, 346, 611, 175, 0, 0,
	675, 678, 688, 705, 131, 132, 143, 153, 160, 174,
	179, 182, 652, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 725, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 476, 0, 0, 0, 177, 473, 0,
	0, 0, 211, 0, 0, 167, 219, 217, 0, 0,
	0, 260, 323, 0, 0, 0, 551, 214, 0, 0,
	454, 313, 237, 0, 0, 0, 0, 538, 539, 0,
	0, 0, 0, 0, 0, 1391, 0, 81, 0, 0,
	0, 474, 498, 497, 500, 501, 502, 503, 0, 0,
	157, 499, 504, 533, 534, 1392, 0, 0, 471, 489,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 487, 0, 0, 0, 0, 565, 0,
	488, 0, 0, 483, 484, 485, 490, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 189, 238, 146, 541,
	0, 0, 202, 353, 0, 0, 563, 276, 0, 318,
	191, 212, 150, 130, 144, 161, 190, 249, 286, 296,
	548, 0, 0, 0, 0, 168, 0, 289, 258, 342,
	540, 0, 264, 288, 215, 331, 278, 340, 341, 192,
	448, 350, 355, 0, 0, 0, 310, 178, 0, 136,
	0, 273, 173, 207, 0, 0, 0, 165, 0, 0,
	0, 309, 329, 152, 325, 236, 242, 162, 164, 163,
	145, 304, 328, 156, 166, 314, 292, 319, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	299, 298, 0, 198, 0, 250, 134, 281, 265, 203,
	135, 321, 358, 151, 209, 326, 129, 184, 248, 170,
	259, 230, 231, 229, 232, 185, 266, 343, 137, 322,
	339, 158, 300, 302, 356, 287, 139, 337, 317, 234,
	204, 205, 138, 0, 284, 176, 188, 171, 253, 0,
	187, 275, 334, 335, 169, 359, 147, 349, 141, 148,
	348, 245, 0, 244, 351, 330, 338, 235, 223, 0,
	140, 336, 233, 222, 210, 181, 194, 271, 218, 272,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 315,
	345, 360, 154, 0, 303, 327, 0, 0, 155, 186,
	180, 270, 243, 149, 197, 312, 208, 216, 283, 357,
	257, 290, 159, 344, 311, 552, 564, 558, 560, 559,
	556, 557, 555, 554, 553, 566, 542, 543, 544, 545,
	546, 0, 0, 0, 549, 0, 561, 562, 0, 0,
	0, 0, 433, 301, 282, 505, 506, 507, 508, 509,
	513, 514, 518, 519, 527, 526, 525, 528, 529, 531,
	530, 532, 510, 511, 512, 515, 516, 517, 520, 521,
	524, 522, 523, 547, 128, 142, 213, 0, 280, 183,
	346, 0, 175, 0, 0, 0, 0, 0, 0, 131,
	132, 143, 153, 160, 174, 179, 182, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 251, 252, 255, 256, 261, 262, 263, 267, 268,
	269, 274, 277, 279, 285, 291, 293, 294, 295, 297,
	305, 306, 307, 308, 316, 320, 332, 333, 352, 354,
	35, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 476, 0,
	0, 0, 177, 473, 0, 0, 0, 211, 0, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 0, 0,
	0, 551, 214, 0, 0, 454, 313, 237, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 474, 498, 497, 500,
	501, 502, 503, 0, 0, 157, 499, 504, 533, 534,
	0, 0, 0, 471, 489, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 487, 0,
	0, 0, 0, 565, 0, 488, 0, 0, 483, 484,
	485, 490, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 238, 146, 541, 0, 0, 202, 353, 0,
	0, 563, 276, 0, 318, 191, 212, 150, 130, 144,
	161, 190, 249, 286, 296, 548, 0, 0, 0, 0,
	168, 0, 289, 258, 342, 540, 0, 264, 288, 215,
	331, 278, 340, 341, 192, 448, 350, 355, 0, 0,
	0, 310, 178, 0, 136, 0, 273, 173, 207, 0,
	0, 0, 165, 0, 0, 0, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 299, 298, 0, 198, 0,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 0, 0, 315, 345, 360, 154, 0, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	552, 564, 558, 560, 559, 556, 557, 555, 554, 553,
	566, 542, 543, 544, 545, 546, 0, 0, 0, 549,
	0, 561, 562, 0, 0, 0, 0, 433, 301, 282,
	505, 506, 507, 508, 509, 513, 514, 518, 519, 527,
	526, 525, 528, 529, 531, 530, 532, 510, 511, 512,
	515, 516, 517, 520, 521, 524, 522, 523, 547, 128,
	142, 213, 79, 280, 183, 346, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 0, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 476, 0, 0, 0, 177, 473, 0, 0,
	0, 211, 0, 0, 167, 219, 217, 0, 0, 0,
	260, 323, 0, 0, 0, 551, 214, 0, 0, 454,
	313, 237, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	474, 498, 497, 500, 501, 502, 503, 0, 0, 157,
	499, 504, 533, 534, 0, 0, 0, 471, 489, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 487, 467, 0, 0, 0, 565, 0, 488,
	0, 0, 483, 484, 485, 490, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 238, 146, 541, 0,
	0, 202, 353, 0, 0, 563, 276, 0, 318, 191,
	212, 150, 130, 144, 161, 190, 249, 286, 296, 548,
	0, 0, 0, 0, 168, 0, 289, 258, 342, 540,
	0, 264, 288, 215, 331, 278, 340, 341, 192, 448,
	350, 355, 0, 0, 0, 310, 178, 0, 136, 0,
	273, 173, 207, 0, 0, 0, 165, 0, 0, 0,
	309, 329, 152, 325, 236, 242, 162, 164, 163, 145,
	304, 328, 156, 166, 314, 292, 319, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 299,
	298, 0, 198, 0, 250, 134, 281, 265, 203, 135,
	321, 358, 151, 209, 326, 129, 184, 248, 170, 259,
	230, 231, 229, 232, 185, 266, 343, 137, 322, 339,
	158, 300, 302, 356, 287, 139, 337, 317, 234, 204,
	205, 138, 0, 284, 176, 188, 171, 253, 0, 187,
	275, 334, 335, 169, 359, 147, 349, 141, 148, 348,
	245, 0, 244, 351, 330, 338, 235, 223, 0, 140,
	336, 233, 222, 210, 181, 194, 271, 218, 272, 195,
	240, 239, 241, 220, 224, 0, 0, 0, 315, 345,
	360, 154, 0, 303, 327, 0, 0, 155, 186, 180,
	270, 243, 149, 197, 312, 208, 216, 283, 357, 257,
	290, 159, 344, 311, 552, 564, 558, 560, 559, 556,
	557, 555, 554, 553, 566, 542, 543, 544, 545, 546,
	0, 0, 0, 549, 0, 561, 562, 0, 0, 0,
	0, 433, 301, 282, 505, 506, 507, 508, 509, 513,
	514, 518, 519, 527, 526, 525, 528, 529, 531, 530,
	532, 510, 511, 512, 515, 516, 517, 520, 521, 524,
	522, 523, 547, 128, 142, 213, 0, 280, 183, 346,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 0, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	251, 252, 255, 256, 261, 262, 263, 267, 268, 269,
	274, 277, 279, 285, 291, 293, 294, 295, 297, 305,
	306, 307, 308, 316, 320, 332, 333, 352, 354, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 476, 0, 0, 0,
	177, 473, 0, 0, 0, 211, 0, 0, 167, 219,
	217, 0, 0, 0, 260, 323, 0, 0, 0, 551,
	214, 0, 0, 454, 313, 237, 0, 0, 0, 0,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 878, 0, 474, 498, 497, 500, 501, 502,
	503, 0, 0, 157, 499, 504, 533, 534, 0, 0,
	0, 471, 489, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 487, 0, 0, 0,
	0, 565, 0, 488, 0, 0, 483, 484, 485, 490,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	238, 146, 541, 0, 0, 202, 353, 0, 0, 563,
	276, 0, 318, 191, 212, 150, 130, 144, 161, 190,
	249, 286, 296, 548, 0, 0, 0, 0, 168, 0,
	289, 258, 342, 540, 0, 264, 288, 215, 331, 278,
	340, 341, 192, 448, 350, 355, 0, 0, 0, 310,
	178, 0, 136, 0, 273, 173, 207, 0, 0, 0,
	165, 0, 0, 0, 309, 329, 152, 325, 236, 242,
	162, 164, 163, 145, 304, 328, 156, 166, 314, 292,
	319, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 299, 298, 0, 198, 0, 250, 134,
	281, 265, 203, 135, 321, 358, 151, 209, 326, 129,
	184, 248, 170, 259, 230, 231, 229, 232, 185, 266,
	343, 137, 322, 339, 158, 300, 302, 356, 287, 139,
	337, 317, 234, 204, 205, 138, 0, 284, 176, 188,
	171, 253, 0, 187, 275, 334, 335, 169, 359, 147,
	349, 141, 148, 348, 245, 0, 244, 351, 330, 338,
	235, 223, 0, 140, 336, 233, 222, 210, 181, 194,
	271, 218, 272, 195, 240, 239, 241, 220, 224, 0,
	0, 0, 315, 345, 360, 154, 0, 303, 327, 0,
	0, 155, 186, 180, 270, 243, 149, 197, 312, 208,
	216, 283, 357, 257, 290, 159, 344, 311, 552, 564,
	558, 560, 559, 556, 557, 555, 554, 553, 566, 542,
	543, 544, 545, 546, 0, 0, 0, 549, 0, 561,
	562, 0, 0, 0, 0, 433, 301, 282, 505, 506,
	507, 508, 509, 513, 514, 518, 519, 527, 526, 525,
	528, 529, 531, 530, 532, 510, 511, 512, 515, 516,
	517, 520, 521, 524, 522, 523, 547, 128, 142, 213,
	0, 280, 183, 346, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	0, 193, 196, 199, 200, 201, 206, 221, 225, 226,
	227, 228, 246, 247, 251, 252, 255, 256, 261, 262,
	263, 267, 268, 269, 274, 277, 279, 285, 291, 293,
	294, 295, 297, 305, 306, 307, 308, 316, 320, 332,
	333, 352, 354, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 177, 473, 0, 0, 0, 211,
	0, 0, 167, 219, 217, 0, 0, 0, 260, 323,
	0, 0, 0, 551, 214, 0, 0, 454, 313, 237,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 474, 498,
	497, 500, 501, 502, 503, 0, 0, 157, 499, 504,
	533, 534, 0, 0, 0, 471, 489, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	487, 1279, 0, 0, 0, 565, 0, 488, 0, 0,
	483, 484, 485, 490, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 238, 146, 541, 0, 0, 202,
	353, 0, 0, 563, 276, 0, 318, 191, 212, 150,
	130, 144, 161, 190, 249, 286, 296, 548, 0, 0,
	0, 0, 168, 0, 289, 258, 342, 540, 0, 264,
	288, 215, 331, 278, 340, 341, 192, 448, 350, 355,
	0, 0, 0, 310, 178, 0, 136, 0, 273, 173,
	207, 0, 0, 0, 165, 0, 0, 0, 309, 329,
	152, 325, 236, 242, 162, 164, 163, 145, 304, 328,
	156, 166, 314, 292, 319, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 299, 298, 0,
	198, 0, 250, 134, 281, 265, 203, 135, 321, 358,
	151, 209, 326, 129, 184, 248, 170, 259, 230, 231,
	229, 232, 185, 266, 343, 137, 322, 339, 158, 300,
	302, 356, 287, 139, 337, 317, 234, 204, 205, 138,
	0, 284, 176, 188, 171, 253, 0, 187, 275, 334,
	335, 169, 359, 147, 349, 141, 148, 348, 245, 0,
	244, 351, 330, 338, 235, 223, 0, 140, 336, 233,
	222, 210, 181, 194, 271, 218, 272, 195, 240, 239,
	241, 220, 224, 0, 0, 0, 315, 345, 360, 154,
	0, 303, 327, 0, 0, 155, 186, 180, 270, 243,
	149, 197, 312, 208, 216, 283, 357, 257, 290, 159,
	344, 311, 552, 564, 558, 560, 559, 556, 557, 555,
	554, 553, 566, 542, 543, 544, 545, 546, 0, 0,
	0, 549, 0, 561, 562, 0, 0, 0, 0, 433,
	301, 282, 505, 506, 507, 508, 509, 513, 514, 518,
	519, 527, 526, 525, 528, 529, 531, 530, 532, 510,
	511, 512, 515, 516, 517, 520, 521, 524, 522, 523,
	547, 128, 142, 213, 0, 280, 183, 346, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 0, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 251, 252,
	255, 256, 261, 262, 263, 267, 268, 269, 274, 277,
	279, 285, 291, 293, 294, 295, 297, 305, 306, 307,
	308, 316, 320, 332, 333, 352, 354, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 476, 0, 0, 0, 177, 473,
	0, 0, 0, 211, 0, 0, 167, 219, 217, 0,
	0, 0, 260, 323, 0, 0, 0, 551, 214, 0,
	0, 454, 313, 237, 0, 0, 0, 0, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 474, 498, 1323, 500, 501, 502, 503, 0,
	0, 157, 499, 504, 533, 534, 0, 0, 0, 471,
	489, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 487, 1279, 0, 0, 0, 565,
	0, 488, 0, 0, 483, 484, 485, 490, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 238, 146,
	541, 0, 0, 202, 353, 0, 0, 563, 276, 0,
	318, 191, 212, 150, 130, 144, 161, 190, 249, 286,
	296, 548, 0, 0, 0, 0, 168, 0, 289, 258,
	342, 540, 0, 264, 288, 215, 331, 278, 340, 341,
	192, 448, 350, 355, 0, 0, 0, 310, 178, 0,
	136, 0, 273, 173, 207, 0, 0, 0, 165, 0,
	0, 0, 309, 329, 152, 325, 236, 242, 162, 164,
	163, 145, 304, 328, 156, 166, 314, 292, 319, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 299, 298, 0, 198, 0, 250, 134, 281, 265,
	203, 135, 321, 358, 151, 209, 326, 129, 184, 248,
	170, 259, 230, 231, 229, 232, 185, 266, 343, 137,
	322, 339, 158, 300, 302, 356, 287, 139, 337, 317,
	234, 204, 205, 138, 0, 284, 176, 188, 171, 253,
	0, 187, 275, 334, 335, 169, 359, 147, 349, 141,
	148, 348, 245, 0, 244, 351, 330, 338, 235, 223,
	0, 140, 336, 233, 222, 210, 181, 194, 271, 218,
	272, 195, 240, 239, 241, 220, 224, 0, 0, 0,
	315, 345, 360, 154, 0, 303, 327, 0, 0, 155,
	186, 180, 270, 243, 149, 197, 312, 208, 216, 283,
	357, 257, 290, 159, 344, 311, 552, 564, 558, 560,
	559, 556, 557, 555, 554, 553, 566, 542, 543, 544,
	545, 546, 0, 0, 0, 549, 0, 561, 562, 0,
	0, 0, 0, 433, 301, 282, 505, 506, 507, 508,
	509, 513, 514, 518, 519, 527, 526, 525, 528, 529,
	531, 530, 532, 510, 511, 512, 515, 516, 517, 520,
	521, 524, 522, 523, 547, 128, 142, 213, 0, 280,
	183, 346, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 0, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 251, 252, 255, 256, 261, 262, 263, 267,
	268, 269, 274, 277, 279, 285, 291, 293, 294, 295,
	297, 305, 306, 307, 308, 316, 320, 332, 333, 352,
	354, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 476, 0,
	0, 0, 177, 473, 0, 0, 0, 211, 0, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 0, 0,
	0, 551, 214, 0, 0, 454, 313, 237, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 474, 498, 1320, 500,
	501, 502, 503, 0, 0, 157, 499, 504, 533, 534,
	0, 0, 0, 471, 489, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 487, 1279,
	0, 0, 0, 565, 0, 488, 0, 0, 483, 484,
	485, 490, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 238, 146, 541, 0, 0, 202, 353, 0,
	0, 563, 276, 0, 318, 191, 212, 150, 130, 144,
	161, 190, 249, 286, 296, 548, 0, 0, 0, 0,
	168, 0, 289, 258, 342, 540, 0, 264, 288, 215,
	331, 278, 340, 341, 192, 448, 350, 355, 0, 0,
	0, 310, 178, 0, 136, 0, 273, 173, 207, 0,
	0, 0, 165, 0, 0, 0, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 299, 298, 0, 198, 0,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 0, 0, 315, 345, 360, 154, 0, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	552, 564, 558, 560, 559, 556, 557, 555, 554, 553,
	566, 542, 543, 544, 545, 546, 0, 0, 0, 549,
	0, 561, 562, 0, 0, 0, 0, 433, 301, 282,
	505, 506, 507, 508, 509, 513, 514, 518, 519, 527,
	526, 525, 528, 529, 531, 530, 532, 510, 511, 512,
	515, 516, 517, 520, 521, 524, 522, 523, 547, 128,
	142, 213, 0, 280, 183, 346, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 0, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 476, 0, 0, 0, 177, 473, 0, 0,
	0, 211, 0, 0, 167, 219, 217, 0, 0, 0,
	260, 323, 0, 0, 0, 551, 214, 0, 0, 454,
	313, 237, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1196, 0,
	474, 498, 497, 500, 501, 502, 503, 0, 0, 157,
	499, 504, 533, 534, 0, 0, 0, 471, 489, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 487, 0, 0, 0, 0, 565, 0, 488,
	0, 0, 483, 484, 485, 490, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 238, 146, 541, 0,
	0, 202, 353, 0, 0, 563, 276, 0, 318, 191,
	212, 150, 130, 144, 161, 190, 249, 286, 296, 548,
	0, 0, 0, 0, 168, 0, 289, 258, 342, 540,
	0, 264, 288, 215, 331, 278, 340, 341, 192, 448,
	350, 355, 0, 0, 0, 310, 178, 0, 136, 0,
	273, 173, 207, 0, 0, 0, 165, 0, 0, 0,
	309, 329, 152, 325, 236, 242, 162, 164, 163, 145,
	304, 328, 156, 166, 314, 292, 319, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 299,
	298, 0, 198, 0, 250, 134, 281, 265, 203, 135,
	321, 358, 151, 209, 326, 129, 184, 248, 170, 259,
	230, 231, 229, 232, 185, 266, 343, 137, 322, 339,
	158, 300, 302, 356, 287, 139, 337, 317, 234, 204,
	205, 138, 0, 284, 176, 188, 171, 253, 0, 187,
	275, 334, 335, 169, 359, 147, 349, 141, 148, 348,
	245, 0, 244, 351, 330, 338, 235, 223, 0, 140,
	336, 233, 222, 210, 181, 194, 271, 218, 272, 195,
	240, 239, 241, 220, 224, 0, 0, 0, 315, 345,
	360, 154, 0, 303, 327, 0, 0, 155, 186, 180,
	270, 243, 149, 197, 312, 208, 216, 283, 357, 257,
	290, 159, 344, 311, 552, 564, 558, 560, 559, 556,
	557, 555, 554, 553, 566, 542, 543, 544, 545, 546,
	0, 0, 0, 549, 0, 561, 562, 0, 0, 0,
	0, 433, 301, 282, 505, 506, 507, 508, 509, 513,
	514, 518, 519, 527, 526, 525, 528, 529, 531, 530,
	532, 510, 511, 512, 515, 516, 517, 520, 521, 524,
	522, 523, 547, 128, 142, 213, 0, 280, 183, 346,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 0, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	251, 252, 255, 256, 261, 262, 263, 267, 268, 269,
	274, 277, 279, 285, 291, 293, 294, 295, 297, 305,
	306, 307, 308, 316, 320, 332, 333, 352, 354, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 476, 0, 0, 0,
	177, 473, 0, 0, 0, 211, 0, 0, 167, 219,
	217, 0, 0, 0, 260, 323, 0, 0, 0, 551,
	214, 0, 0, 454, 313, 237, 0, 0, 0, 0,
	538, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 474, 498, 497, 500, 501, 502,
	503, 0, 0, 157, 499, 504, 533, 534, 0, 0,
	0, 471, 489, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 486, 487, 0, 0, 0,
	0, 565, 0, 488, 0, 0, 483, 484, 485, 490,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	238, 146, 541, 0, 0, 202, 353, 0, 0, 563,
	276, 0, 318, 191, 212, 150, 130, 144, 161, 190,
	249, 286, 296, 548, 0, 0, 0, 0, 168, 0,
	289, 258, 342, 540, 0, 264, 288, 215, 331, 278,
	340, 341, 192, 448, 350, 355, 0, 0, 0, 310,
	178, 0, 136, 0, 273, 173, 207, 0, 0, 0,
	165, 0, 0, 0, 309, 329, 152, 325, 236, 242,
	162, 164, 163, 145, 304, 328, 156, 166, 314, 292,
	319, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 299, 298, 0, 198, 0, 250, 134,
	281, 265, 203, 135, 321, 358, 151, 209, 326, 129,
	184, 248, 170, 259, 230, 231, 229, 232, 185, 266,
	343, 137, 322, 339, 158, 300, 302, 356, 287, 139,
	337, 317, 234, 204, 205, 138, 0, 284, 176, 188,
	171, 253, 0, 187, 275, 334, 335, 169, 359, 147,
	349, 141, 148, 348, 245, 0, 244, 351, 330, 338,
	235, 223, 0, 140, 336, 233, 222, 210, 181, 194,
	271, 218, 272, 195, 240, 239, 241, 220, 224, 0,
	0, 0, 315, 345, 360, 154, 0, 303, 327, 0,
	0, 155, 186, 180, 270, 243, 149, 197, 312, 208,
	216, 283, 357, 257, 290, 159, 344, 311, 552, 564,
	558, 560, 559, 556, 557, 555, 554, 553, 566, 542,
	543, 544, 545, 546, 0, 0, 0, 549, 0, 561,
	562, 0, 0, 0, 0, 433, 301, 282, 505, 506,
	507, 508, 509, 513, 514, 518, 519, 527, 526, 525,
	528, 529, 531, 530, 532, 510, 511, 512, 515, 516,
	517, 520, 521, 524, 522, 523, 547, 128, 142, 213,
	0, 280, 183, 346, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	0, 193, 196, 199, 200, 201, 206, 221, 225, 226,
	227, 228, 246, 247, 251, 252, 255, 256, 261, 262,
	263, 267, 268, 269, 274, 277, 279, 285, 291, 293,
	294, 295, 297, 305, 306, 307, 308, 316, 320, 332,
	333, 352, 354, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 211,
	0, 0, 167, 219, 217, 0, 0, 0, 260, 323,
	0, 0, 0, 551, 214, 0, 0, 454, 313, 237,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 474, 498,
	497, 500, 501, 502, 503, 0, 0, 157, 499, 504,
	533, 534, 0, 0, 0, 0, 489, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	487, 0, 0, 0, 0, 565, 0, 488, 0, 0,
	483, 484, 485, 490, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 238, 146, 541, 0, 0, 202,
	353, 0, 0, 563, 276, 0, 318, 191, 212, 150,
	130, 144, 161, 190, 249, 286, 296, 548, 0, 0,
	0, 0, 168, 0, 289, 258, 342, 540, 0, 264,
	288, 215, 331, 278, 340, 341, 192, 448, 350, 355,
	0, 0, 0, 310, 178, 0, 136, 0, 273, 173,
	207, 0, 0, 0, 165, 0, 0, 0, 309, 329,
	152, 325, 236, 242, 162, 164, 163, 145, 304, 328,
	156, 166, 314, 292, 319, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 299, 298, 0,
	198, 0, 250, 134, 281, 265, 203, 135, 321, 358,
	151, 209, 326, 129, 184, 248, 170, 259, 230, 231,
	229, 232, 185, 266, 343, 137, 322, 339, 158, 300,
	302, 356, 287, 139, 337, 317, 234, 204, 205, 138,
	0, 284, 176, 188, 171, 253, 0, 187, 275, 334,
	335, 169, 359, 147, 349, 141, 148, 348, 245, 0,
	244, 351, 330, 338, 235, 223, 0, 140, 336, 233,
	222, 210, 181, 194, 271, 218, 272, 195, 240, 239,
	241, 220, 224, 0, 0, 0, 315, 345, 360, 154,
	0, 303, 327, 0, 0, 155, 186, 180, 270, 243,
	149, 197, 312, 208, 216, 283, 357, 257, 290, 159,
	344, 311, 552, 564, 558, 560, 559, 556, 557, 555,
	554, 553, 566, 542, 543, 544, 545, 546, 1326, 1327,
	1328, 549, 0, 561, 562, 0, 0, 0, 0, 433,
	301, 282, 505, 506, 507, 508, 509, 513, 514, 518,
	519, 527, 526, 525, 528, 529, 531, 530, 532, 510,
	511, 512, 515, 516, 517, 520, 521, 524, 522, 523,
	547, 128, 142, 213, 0, 280, 183, 346, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 0, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 251, 252,
	255, 256, 261, 262, 263, 267, 268, 269, 274, 277,
	279, 285, 291, 293, 294, 295, 297, 305, 306, 307,
	308, 316, 320, 332, 333, 352, 354, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 211, 0, 0, 167, 219, 217, 0,
	0, 0, 260, 323, 0, 0, 0, 551, 214, 0,
	0, 454, 313, 237, 0, 0, 0, 0, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 474, 498, 497, 500, 501, 502, 503, 0,
	0, 157, 499, 504, 533, 534, 0, 0, 0, 0,
	489, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 487, 0, 0, 0, 0, 565,
	0, 488, 0, 0, 483, 484, 485, 490, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 238, 146,
	541, 0, 0, 202, 353, 0, 0, 563, 276, 0,
	318, 191, 212, 150, 130, 144, 161, 190, 249, 286,
	296, 548, 0, 0, 0, 0, 168, 0, 289, 258,
	342, 540, 2504, 264, 288, 215, 331, 278, 340, 341,
	192, 448, 350, 355, 0, 0, 0, 310, 178, 0,
	136, 0, 273, 173, 207, 0, 0, 0, 165, 0,
	0, 0, 309, 329, 152, 325, 236, 242, 162, 164,
	163, 145, 304, 328, 156, 166, 314, 292, 319, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 299, 298, 0, 198, 0, 250, 134, 281, 265,
	203, 135, 321, 358, 151, 209, 326, 129, 184, 248,
	170, 259, 230, 231, 229, 232, 185, 266, 343, 137,
	322, 339, 158, 300, 302, 356, 287, 139, 337, 317,
	234, 204, 205, 138, 0, 284, 176, 188, 171, 253,
	0, 187, 275, 334, 335, 169, 359, 147, 349, 141,
	148, 348, 245, 0, 244, 351, 330, 338, 235, 223,
	0, 140, 336, 233, 222, 210, 181, 194, 271, 218,
	272, 195, 240, 239, 241, 220, 224, 0, 0, 0,
	315, 345, 360, 154, 0, 303, 327, 0, 0, 155,
	186, 180, 270, 243, 149, 197, 312, 208, 216, 283,
	357, 257, 290, 159, 344, 311, 552, 564, 558, 560,
	559, 556, 557, 555, 554, 553, 566, 542, 543, 544,
	545, 546, 0, 0, 0, 549, 0, 561, 562, 0,
	0, 0, 0, 433, 301, 282, 505, 506, 507, 508,
	509, 513, 514, 518, 519, 527, 526, 525, 528, 529,
	531, 530, 532, 510, 511, 512, 515, 516, 517, 520,
	521, 524, 522, 523, 547, 128, 142, 213, 0, 280,
	183, 346, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 0, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 251, 252, 255, 256, 261, 262, 263, 267,
	268, 269, 274, 277, 279, 285, 291, 293, 294, 295,
	297, 305, 306, 307, 308, 316, 320, 332, 333, 352,
	354, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 211, 0, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 0, 0,
	0, 551, 214, 0, 0, 454, 313, 237, 0, 0,
	0, 0, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 878, 0, 474, 498, 497, 500,
	501, 502, 503, 0, 0, 157, 499, 504, 533, 534,
	0, 0, 0, 0, 489, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 487, 0,
	0, 0, 0, 565, 0, 488, 0, 0, 483, 484,
	485, 490, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 238, 146, 541, 0, 0, 202, 353, 0,
	0, 563, 276, 0, 318, 191, 212, 150, 130, 144,
	161, 190, 249, 286, 296, 548, 0, 0, 0, 0,
	168, 0, 289, 258, 342, 540, 0, 264, 288, 215,
	331, 278, 340, 341, 192, 448, 350, 355, 0, 0,
	0, 310, 178, 0, 136, 0, 273, 173, 207, 0,
	0, 0, 165, 0, 0, 0, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 299, 298, 0, 198, 0,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 0, 0, 315, 345, 360, 154, 0, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	552, 564, 558, 560, 559, 556, 557, 555, 554, 553,
	566, 542, 543, 544, 545, 546, 0, 0, 0, 549,
	0, 561, 562, 0, 0, 0, 0, 433, 301, 282,
	505, 506, 507, 508, 509, 513, 514, 518, 519, 527,
	526, 525, 528, 529, 531, 530, 532, 510, 511, 512,
	515, 516, 517, 520, 521, 524, 522, 523, 547, 128,
	142, 213, 0, 280, 183, 346, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 0, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 211, 0, 0, 167, 219, 217, 0, 0, 0,
	260, 323, 0, 0, 0, 551, 214, 0, 0, 454,
	313, 237, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	474, 498, 497, 500, 501, 502, 503, 0, 0, 157,
	499, 504, 533, 534, 0, 0, 0, 0, 489, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 487, 0, 0, 0, 0, 565, 0, 488,
	0, 0, 483, 484, 485, 490, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 238, 146, 541, 0,
	0, 202, 353, 0, 0, 563, 276, 0, 318, 191,
	212, 150, 130, 144, 161, 190, 249, 286, 296, 548,
	0, 0, 0, 0, 168, 0, 289, 258, 342, 540,
	0, 264, 288, 215, 331, 278, 340, 341, 192, 448,
	350, 355, 0, 0, 0, 310, 178, 0, 136, 0,
	273, 173, 207, 0, 0, 0, 165, 0, 0, 0,
	309, 329, 152, 325, 236, 242, 162, 164, 163, 145,
	304, 328, 156, 166, 314, 292, 319, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 299,
	298, 0, 198, 0, 250, 134, 281, 265, 203, 135,
	321, 358, 151, 209, 326, 129, 184, 248, 170, 259,
	230, 231, 229, 232, 185, 266, 343, 137, 322, 339,
	158, 300, 302, 356, 287, 139, 337, 317, 234, 204,
	205, 138, 0, 284, 176, 188, 171, 253, 0, 187,
	275, 334, 335, 169, 359, 147, 349, 141, 148, 348,
	245, 0, 244, 351, 330, 338, 235, 223, 0, 140,
	336, 233, 222, 210, 181, 194, 271, 218, 272, 195,
	240, 239, 241, 220, 224, 0, 0, 0, 315, 345,
	360, 154, 0, 303, 327, 0, 0, 155, 186, 180,
	270, 243, 149, 197, 312, 208, 216, 283, 357, 257,
	290, 159, 344, 311, 552, 564, 558, 560, 559, 556,
	557, 555, 554, 553, 566, 542, 543, 544, 545, 546,
	0, 0, 0, 549, 0, 561, 562, 0, 0, 0,
	0, 433, 301, 282, 505, 506, 507, 508, 509, 513,
	514, 518, 519, 527, 526, 525, 528, 529, 531, 530,
	532, 510, 511, 512, 515, 516, 517, 520, 521, 524,
	522, 523, 547, 128, 142, 213, 0, 280, 183, 346,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 0, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	251, 252, 255, 256, 261, 262, 263, 267, 268, 269,
	274, 277, 279, 285, 291, 293, 294, 295, 297, 305,
	306, 307, 308, 316, 320, 332, 333, 352, 354, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 1369, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 211, 0, 0, 167, 219,
	217, 0, 0, 0, 260, 323, 0, 0, 0, 0,
	214, 0, 0, 454, 313, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1371, 1373, 0, 0,
	0, 0, 0, 0, 126, 0, 426, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	238, 146, 0, 0, 0, 202, 353, 0, 1372, 0,
	276, 0, 318, 191, 212, 150, 130, 144, 161, 190,
	249, 286, 296, 0, 0, 0, 0, 0, 168, 0,
	289, 258, 342, 0, 0, 264, 288, 215, 331, 278,
	340, 341, 192, 448, 350, 355, 0, 0, 0, 310,
	178, 0, 136, 0, 273, 173, 207, 0, 0, 0,
	165, 0, 0, 0, 309, 329, 152, 325, 236, 242,
	162, 164, 163, 145, 304, 328, 156, 166, 314, 292,
	319, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 299, 298, 0, 198, 0, 250, 134,
	281, 265, 203, 135, 321, 358, 151, 209, 326, 129,
	184, 248, 170, 259, 230, 231, 229, 232, 185, 266,
	343, 137, 322, 339, 158, 300, 302, 356, 287, 139,
	337, 317, 234, 204, 205, 138, 0, 284, 176, 188,
	171, 253, 0, 187, 275, 334, 335, 169, 359, 147,
	349, 141, 148, 348, 245, 0, 244, 351, 330, 338,
	235, 223, 0, 140, 336, 233, 222, 210, 181, 194,
	271, 218, 272, 195, 240, 239, 241, 220, 224, 0,
	0, 0, 315, 345, 360, 154, 0, 303, 327, 0,
	0, 155, 186, 180, 270, 243, 149, 197, 312, 208,
	216, 283, 357, 257, 290, 159, 344, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 301, 282, 427, 428,
	429, 430, 431, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 432, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 128, 142, 213,
	0, 280, 183, 346, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	0, 193, 196, 199, 200, 201, 206, 221, 225, 226,
	227, 228, 246, 247, 251, 252, 255, 256, 261, 262,
	263, 267, 268, 269, 274, 277, 279, 285, 291, 293,
	294, 295, 297, 305, 306, 307, 308, 316, 320, 332,
	333, 352, 354, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 1369,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 211,
	0, 0, 167, 219, 217, 0, 0, 0, 260, 323,
	0, 0, 0, 0, 214, 0, 0, 454, 313, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1371, 1373, 0, 0, 0, 0, 0, 0, 126, 0,
	426, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 238, 146, 0, 0, 0, 202,
	353, 0, 1372, 0, 276, 0, 318, 191, 212, 150,
	130, 144, 161, 190, 249, 286, 296, 0, 0, 0,
	0, 0, 168, 0, 289, 258, 342, 0, 0, 1367,
	288, 215, 331, 278, 340, 341, 192, 448, 350, 355,
	0, 0, 0, 310, 178, 0, 136, 0, 273, 173,
	207, 0, 0, 0, 165, 0, 0, 0, 309, 329,
	152, 325, 236, 242, 162, 164, 163, 145, 304, 328,
	156, 166, 314, 292, 319, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 299, 298, 0,
	198, 0, 250, 134, 281, 265, 203, 135, 321, 358,
	151, 209, 326, 129, 184, 248, 170, 259, 230, 231,
	229, 232, 185, 266, 343, 137, 322, 339, 158, 300,
	302, 356, 287, 139, 337, 317, 234, 204, 205, 138,
	0, 284, 176, 188, 171, 253, 0, 187, 275, 334,
	335, 169, 359, 147, 349, 141, 148, 348, 245, 0,
	244, 351, 330, 338, 235, 223, 0, 140, 336, 233,
	222, 210, 181, 194, 271, 218, 272, 195, 240, 239,
	241, 220, 224, 0, 0, 0, 315, 345, 360, 154,
	0, 303, 327, 0, 0, 155, 186, 180, 270, 243,
	149, 197, 312, 208, 216, 283, 357, 257, 290, 159,
	344, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	301, 282, 427, 428, 429, 430, 431, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 432,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 128, 142, 213, 0, 280, 183, 346, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 0, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 251, 252,
	255, 256, 261, 262, 263, 267, 268, 269, 274, 277,
	279, 285, 291, 293, 294, 295, 297, 305, 306, 307,
	308, 316, 320, 332, 333, 352, 354, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 900, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 211, 0, 0, 167, 219, 217, 0,
	0, 0, 260, 323, 0, 0, 0, 0, 214, 0,
	0, 454, 313, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 0, 904, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 897, 896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 238, 146,
	0, 0, 0, 202, 353, 0, 0, 0, 276, 0,
	318, 191, 212, 150, 130, 144, 161, 190, 249, 286,
	296, 0, 0, 0, 0, 0, 168, 0, 289, 258,
	342, 0, 0, 264, 288, 215, 331, 278, 340, 341,
	192, 448, 350, 355, 0, 0, 0, 310, 178, 0,
	136, 0, 273, 173, 207, 0, 0, 0, 165, 0,
	0, 0, 309, 329, 152, 325, 236, 242, 162, 164,
	163, 145, 304, 328, 156, 166, 314, 292, 319, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 299, 298, 0, 198, 0, 250, 134, 281, 265,
	203, 135, 321, 358, 151, 209, 326, 129, 184, 248,
	170, 259, 230, 231, 229, 232, 185, 266, 343, 137,
	322, 339, 158, 300, 302, 356, 287, 139, 337, 317,
	234, 204, 205, 138, 0, 284, 176, 188, 171, 253,
	0, 187, 275, 334, 335, 169, 359, 147, 349, 141,
	148, 348, 245, 0, 244, 351, 330, 338, 235, 223,
	0, 140, 336, 233, 222, 210, 181, 194, 271, 218,
	272, 195, 240, 239, 241, 220, 224, 0, 0, 0,
	315, 345, 360, 154, 0, 303, 327, 0, 0, 155,
	186, 180, 270, 243, 149, 197, 312, 208, 216, 283,
	357, 257, 290, 159, 344, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 301, 282, 427, 428, 429, 430,
	431, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 432, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446, 0, 128, 142, 213, 0, 280,
	183, 346, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 0, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 251, 252, 255, 256, 261, 262, 263, 267,
	268, 269, 274, 277, 279, 285, 291, 293, 294, 295,
	297, 305, 306, 307, 308, 316, 320, 332, 333, 352,
	354, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 211, 1660, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 0, 0,
	0, 0, 214, 0, 0, 454, 313, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 426, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 238, 146, 0, 0, 0, 202, 353, 0,
	0, 0, 276, 0, 318, 191, 212, 150, 130, 144,
	161, 190, 249, 286, 296, 0, 0, 0, 0, 0,
	168, 0, 289, 258, 342, 0, 0, 264, 288, 215,
	331, 278, 340, 341, 192, 448, 350, 355, 0, 0,
	0, 310, 178, 0, 136, 0, 273, 173, 207, 0,
	0, 0, 165, 0, 0, 0, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 299, 298, 0, 198, 0,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 0, 0, 315, 345, 360, 154, 0, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 301, 282,
	427, 428, 429, 430, 431, 436, 437, 441, 442, 451,
	450, 449, 452, 453, 456, 455, 457, 432, 434, 435,
	438, 439, 440, 443, 444, 447, 445, 446, 0, 128,
	142, 213, 0, 280, 183, 346, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 0, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 211, 0, 0, 167, 219, 217, 0, 0, 0,
	260, 323, 0, 0, 0, 0, 214, 0, 0, 454,
	313, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 0, 768, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 238, 146, 0, 0,
	0, 202, 353, 0, 0, 0, 276, 0, 318, 191,
	212, 150, 130, 144, 161, 190, 249, 286, 296, 0,
	0, 0, 0, 0, 168, 0, 289, 258, 342, 0,
	0, 264, 288, 215, 331, 278, 340, 341, 192, 448,
	350, 355, 0, 0, 0, 310, 178, 0, 136, 0,
	273, 173, 207, 0, 0, 0, 165, 0, 0, 0,
	309, 329, 152, 325, 236, 242, 162, 164, 163, 145,
	304, 328, 156, 166, 314, 292, 319, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 299,
	298, 0, 198, 0, 250, 134, 281, 265, 203, 135,
	321, 358, 151, 209, 326, 129, 184, 248, 170, 259,
	230, 231, 229, 232, 185, 266, 343, 137, 322, 339,
	158, 300, 302, 356, 287, 139, 337, 317, 234, 204,
	205, 138, 0, 284, 176, 188, 171, 253, 0, 187,
	275, 334, 335, 169, 359, 147, 349, 141, 148, 348,
	245, 0, 244, 351, 330, 338, 235, 223, 0, 140,
	336, 233, 222, 210, 181, 194, 271, 218, 272, 195,
	240, 239, 241, 220, 224, 0, 0, 0, 315, 345,
	360, 154, 0, 303, 327, 0, 0, 155, 186, 180,
	270, 243, 149, 197, 312, 208, 216, 283, 357, 257,
	290, 159, 344, 311, 0, 0, 0, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 433, 301, 282, 427, 428, 429, 430, 431, 436,
	437, 441, 442, 451, 450, 449, 452, 453, 456, 455,
	457, 432, 434, 435, 438, 439, 440, 443, 444, 447,
	445, 446, 0, 128, 142, 213, 0, 280, 183, 346,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 0, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	251, 252, 255, 256, 261, 262, 263, 267, 268, 269,
	274, 277, 279, 285, 291, 293, 294, 295, 297, 305,
	306, 307, 308, 316, 320, 332, 333, 352, 354, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 211, 0, 0, 167, 219,
	217, 0, 0, 0, 260, 323, 0, 0, 0, 0,
	214, 0, 0, 454, 313, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 426, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	238, 146, 0, 0, 0, 202, 353, 0, 0, 0,
	276, 0, 318, 191, 212, 150, 130, 144, 161, 190,
	249, 286, 296, 0, 0, 0, 0, 0, 168, 0,
	289, 258, 342, 0, 0, 264, 288, 215, 331, 278,
	340, 341, 192, 448, 350, 355, 0, 0, 0, 310,
	178, 0, 136, 0, 273, 173, 207, 0, 0, 0,
	165, 0, 0, 0, 309, 329, 152, 325, 236, 242,
	162, 164, 163, 145, 304, 328, 156, 166, 314, 292,
	319, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 299, 298, 0, 198, 0, 250, 134,
	281, 265, 203, 135, 321, 358, 151, 209, 326, 129,
	184, 248, 170, 259, 230, 231, 229, 232, 185, 266,
	343, 137, 322, 339, 158, 300, 302, 356, 287, 139,
	337, 317, 234, 204, 205, 138, 0, 284, 176, 188,
	171, 253, 0, 187, 275, 334, 335, 169, 359, 147,
	349, 141, 148, 348, 245, 0, 244, 351, 330, 338,
	235, 223, 0, 140, 336, 233, 222, 210, 181, 194,
	271, 218, 272, 195, 240, 239, 241, 220, 224, 0,
	0, 0, 315, 345, 360, 154, 0, 303, 327, 0,
	0, 155, 186, 180, 270, 243, 149, 197, 312, 208,
	216, 283, 357, 257, 290, 159, 344, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 301, 282, 427, 428,
	429, 430, 431, 436, 437, 441, 442, 451, 450, 449,
	452, 453, 456, 455, 457, 432, 434, 435, 438, 439,
	440, 443, 444, 447, 445, 446, 0, 128, 142, 213,
	0, 280, 183, 346, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	0, 193, 196, 199, 200, 201, 206, 221, 225, 226,
	227, 228, 246, 247, 251, 252, 255, 256, 261, 262,
	263, 267, 268, 269, 274, 277, 279, 285, 291, 293,
	294, 295, 297, 305, 306, 307, 308, 316, 320, 332,
	333, 352, 354, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 211,
	0, 0, 167, 219, 217, 0, 0, 0, 260, 323,
	0, 0, 0, 0, 214, 0, 0, 454, 313, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	768, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 238, 146, 0, 0, 0, 202,
	353, 0, 0, 0, 276, 0, 318, 191, 212, 150,
	130, 144, 161, 190, 249, 286, 296, 0, 0, 0,
	0, 0, 168, 0, 289, 258, 342, 0, 0, 264,
	288, 215, 331, 278, 340, 341, 192, 448, 350, 355,
	0, 0, 0, 310, 178, 0, 136, 0, 273, 173,
	207, 0, 0, 0, 165, 0, 0, 0, 309, 329,
	152, 325, 236, 242, 162, 164, 163, 145, 304, 328,
	156, 166, 314, 292, 319, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 299, 298, 0,
	198, 0, 250, 134, 281, 265, 203, 135, 321, 358,
	151, 209, 326, 129, 184, 248, 170, 259, 230, 231,
	229, 232, 185, 266, 343, 137, 322, 339, 158, 300,
	302, 356, 287, 139, 337, 317, 234, 204, 205, 138,
	0, 284, 176, 188, 171, 253, 0, 187, 275, 334,
	335, 169, 359, 147, 349, 141, 148, 348, 245, 0,
	244, 351, 330, 338, 235, 223, 0, 140, 336, 233,
	222, 210, 181, 194, 271, 218, 272, 195, 240, 239,
	241, 220, 224, 0, 0, 0, 315, 345, 360, 154,
	0, 303, 327, 0, 0, 155, 186, 180, 270, 243,
	149, 197, 312, 208, 216, 283, 357, 257, 290, 159,
	344, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	301, 282, 427, 428, 429, 430, 431, 436, 437, 441,
	442, 451, 450, 449, 452, 453, 456, 455, 457, 432,
	434, 435, 438, 439, 440, 443, 444, 447, 445, 446,
	0, 128, 142, 213, 0, 280, 183, 346, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 0, 193, 196, 199, 200, 201,
	206, 221, 225, 226, 227, 228, 246, 247, 251, 252,
	255, 256, 261, 262, 263, 267, 268, 269, 274, 277,
	279, 285, 291, 293, 294, 295, 297, 305, 306, 307,
	308, 316, 320, 332, 333, 352, 354, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 211, 0, 0, 167, 219, 217, 0,
	0, 0, 260, 323, 0, 0, 0, 0, 214, 0,
	0, 454, 313, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 0, 904, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 238, 146,
	0, 0, 0, 202, 353, 0, 0, 0, 276, 0,
	318, 191, 212, 150, 130, 144, 161, 190, 249, 286,
	296, 0, 0, 0, 0, 0, 168, 0, 289, 258,
	342, 0, 0, 264, 288, 215, 331, 278, 340, 341,
	192, 448, 350, 355, 0, 0, 0, 310, 178, 0,
	136, 0, 273, 173, 207, 0, 0, 0, 165, 0,
	0, 0, 309, 329, 152, 325, 236, 242, 162, 164,
	163, 145, 304, 328, 156, 166, 314, 292, 319, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 299, 298, 0, 198, 0, 250, 134, 281, 265,
	203, 135, 321, 358, 151, 209, 326, 129, 184, 248,
	170, 259, 230, 231, 229, 232, 185, 266, 343, 137,
	322, 339, 158, 300, 302, 356, 287, 139, 337, 317,
	234, 204, 205, 138, 0, 284, 176, 188, 171, 253,
	0, 187, 275, 334, 335, 169, 359, 147, 349, 141,
	148, 348, 245, 0, 244, 351, 330, 338, 235, 223,
	0, 140, 336, 233, 222, 210, 181, 194, 271, 218,
	272, 195, 240, 239, 241, 220, 224, 0, 0, 0,
	315, 345, 360, 154, 0, 303, 327, 0, 0, 155,
	186, 180, 270, 243, 149, 197, 312, 208, 216, 283,
	357, 257, 290, 159, 344, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 301, 282, 427, 428, 429, 430,
	431, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 432, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446, 0, 128, 142, 213, 0, 280,
	183, 346, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 0, 193,
	196, 199, 200, 201, 206, 221, 225, 226, 227, 228,
	246, 247, 251, 252, 255, 256, 261, 262, 263, 267,
	268, 269, 274, 277, 279, 285, 291, 293, 294, 295,
	297, 305, 306, 307, 308, 316, 320, 332, 333, 352,
	354, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 211, 0, 0,
	167, 219, 217, 0, 0, 0, 260, 323, 0, 0,
	0, 0, 214, 0, 0, 454, 313, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 606, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 238, 146, 0, 0, 0, 202, 353, 0,
	0, 0, 276, 0, 318, 191, 212, 150, 130, 144,
	161, 190, 249, 286, 296, 0, 0, 0, 0, 0,
	168, 0, 289, 258, 342, 0, 0, 264, 288, 215,
	331, 278, 340, 341, 192, 448, 350, 355, 0, 0,
	0, 310, 178, 0, 136, 0, 273, 173, 207, 0,
	0, 0, 165, 0, 0, 0, 309, 329, 152, 325,
	236, 242, 162, 164, 163, 145, 304, 328, 156, 166,
	314, 292, 319, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 299, 298, 0, 198, 0,
	250, 134, 281, 265, 203, 135, 321, 358, 151, 209,
	326, 129, 184, 248, 170, 259, 230, 231, 229, 232,
	185, 266, 343, 137, 322, 339, 158, 300, 302, 356,
	287, 139, 337, 317, 234, 204, 205, 138, 0, 284,
	176, 188, 171, 253, 0, 187, 275, 334, 335, 169,
	359, 147, 349, 141, 148, 348, 245, 0, 244, 351,
	330, 338, 235, 223, 0, 140, 336, 233, 222, 210,
	181, 194, 271, 218, 272, 195, 240, 239, 241, 220,
	224, 0, 0, 0, 315, 345, 360, 154, 0, 303,
	327, 0, 0, 155, 186, 180, 270, 243, 149, 197,
	312, 208, 216, 283, 357, 257, 290, 159, 344, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 301, 282,
	427, 428, 429, 430, 431, 436, 437, 441, 442, 451,
	450, 449, 452, 453, 456, 455, 457, 432, 434, 435,
	438, 439, 440, 443, 444, 447, 445, 446, 0, 128,
	142, 213, 0, 280, 183, 346, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 0, 193, 196, 199, 200, 201, 206, 221,
	225, 226, 227, 228, 246, 247, 251, 252, 255, 256,
	261, 262, 263, 267, 268, 269, 274, 277, 279, 285,
	291, 293, 294, 295, 297, 305, 306, 307, 308, 316,
	320, 332, 333, 352, 354, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 211, 0, 0, 167, 219, 217, 0, 0, 0,
	260, 323, 0, 0, 0, 0, 214, 0, 0, 0,
	313, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 914, 913, 923,
	924, 916, 917, 918, 919, 920, 921, 922, 915, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 238, 146, 0, 0,
	0, 202, 353, 0, 0, 0, 276, 0, 318, 191,
	212, 150, 130, 144, 161, 190, 249, 286, 296, 0,
	0, 0, 0, 0, 168, 0, 289, 258, 342, 0,
	0, 264, 288, 215, 331, 278, 340, 341, 192, 0,
	350, 355, 0, 0, 0, 310, 178, 0, 136, 0,
	273, 173, 207, 0, 0, 0, 165, 0, 0, 0,
	309, 329, 152, 325, 236, 242, 162, 164, 163, 145,
	304, 328, 156, 166, 314, 292, 319, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 299,
	298, 0, 198, 0, 250, 134, 281, 265, 203, 135,
	321, 358, 151, 209, 326, 129, 184, 248, 170, 259,
	230, 231, 229, 232, 185, 266, 343, 137, 322, 339,
	158, 300, 302, 356, 287, 139, 337, 317, 234, 204,
	205, 138, 0, 284, 176, 188, 171, 253, 0, 187,
	275, 334, 335, 169, 359, 147, 349, 141, 148, 348,
	245, 0, 244, 351, 330, 338, 235, 223, 0, 140,
	336, 233, 222, 210, 181, 194, 271, 218, 272, 195,
	240, 239, 241, 220, 224, 0, 0, 0, 315, 345,
	360, 154, 0, 303, 327, 0, 0, 155, 186, 180,
	270, 243, 149, 197, 312, 208, 216, 283, 357, 257,
	290, 159, 344, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 142, 213, 0, 280, 183, 346,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 0, 193, 196, 199,
	200, 201, 206, 221, 225, 226, 227, 228, 246, 247,
	251, 252, 255, 256, 261, 262, 263, 267, 268, 269,
	274, 277, 279, 285, 291, 293, 294, 295, 297, 305,
	306, 307, 308, 316, 320, 332, 333, 352, 354, 35,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 211, 0, 0, 167,
	219, 217, 0, 0, 0, 260, 323, 0, 0, 0,
	1364, 214, 0, 0, 0, 313, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 238, 146, 0, 0, 0, 202, 353, 0, 0,
	0, 276, 0, 318, 191, 212, 150, 130, 144, 161,
	190, 249, 286, 296, 0, 0, 0, 0, 0, 168,
	0, 289, 258, 342, 0, 0, 264, 288, 215, 331,
	278, 340, 341, 192, 0, 350, 355, 0, 0, 0,
	310, 178, 0, 136, 0, 273, 173, 207, 0, 0,
	0, 165, 0, 0, 0, 309, 329, 152, 325, 236,
	242, 162, 164, 163, 145, 304, 328, 156, 166, 314,
	292, 319, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 299, 298, 0, 198, 0, 250,
	134, 281, 265, 203, 135, 321, 358, 151, 209, 326,
	129, 184, 248, 170, 259, 230, 231, 229, 232, 185,
	266, 343, 137, 322, 339, 158, 300, 302, 356, 287,
	139, 337, 317, 234, 204, 205, 138, 0, 284, 176,
	188, 171, 253, 0, 187, 275, 334, 335, 169, 359,
	147, 349, 141, 148, 348, 245, 0, 244, 351, 330,
	338, 235, 223, 0, 140, 336, 233, 222, 210, 181,
	194, 271, 218, 272, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 315, 345, 360, 154, 0, 303, 327,
	0, 0, 155, 186, 180, 270, 243, 149, 197, 312,
	208, 216, 283, 357, 257, 290, 159, 344, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 142,
	213, 79, 280, 183, 346, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 251, 252, 255, 256, 261,
	262, 263, 267, 268, 269, 274, 277, 279, 285, 291,
	293, 294, 295, 297, 305, 306, 307, 308, 316, 320,
	332, 333, 352, 354, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 1050, 0, 0, 0,
	211, 0, 0, 167, 219, 217, 0, 0, 0, 260,
	323, 0, 0, 0, 0, 214, 0, 0, 0, 313,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 1049, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 238, 146, 0, 0, 0,
	202, 353, 0, 0, 0, 276, 0, 318, 191, 212,
	150, 130, 144, 161, 190, 249, 286, 296, 0, 0,
	0, 0, 0, 168, 0, 289, 258, 342, 0, 0,
	264, 288, 215, 331, 278, 340, 341, 192, 0, 350,
	355, 0, 0, 0, 310, 178, 0, 136, 0, 273,
	173, 207, 0, 0, 0, 165, 0, 0, 0, 309,
	329, 152, 325, 236, 242, 162, 164, 163, 145, 304,
	328, 156, 166, 314, 292, 319, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 299, 298,
	0, 198, 0, 250, 134, 281, 265, 203, 135, 321,
	358, 151, 209, 326, 129, 184, 248, 170, 259, 230,
	231, 229, 232, 185, 266, 343, 137, 322, 339, 158,
	300, 302, 356, 287, 139, 337, 317, 234, 204, 205,
	138, 0, 284, 176, 188, 171, 253, 0, 187, 275,
	334, 335, 169, 359, 147, 349, 141, 148, 348, 245,
	0, 244, 351, 330, 338, 235, 223, 0, 140, 336,
	233, 222, 210, 181, 194, 271, 218, 272, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 315, 345, 360,
	154, 0, 303, 327, 0, 0, 155, 186, 180, 270,
	243, 149, 197, 312, 208, 216, 283, 357, 257, 290,
	159, 344, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 142, 213, 0, 280, 183, 346, 0,
	175, 0, 0, 0, 0, 0, 0, 131, 132, 143,
	153, 160, 174, 179, 182, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 251,
	252, 255, 256, 261, 262, 263, 267, 268, 269, 274,
	277, 279, 285, 291, 293, 294, 295, 297, 305, 306,
	307, 308, 316, 320, 332, 333, 352, 354, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 211, 0, 0, 167, 219, 217,
	0, 0, 0, 260, 323, 0, 0, 0, 0, 214,
	0, 0, 0, 313, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 238,
	146, 0, 0, 0, 202, 353, 0, 0, 0, 276,
	0, 318, 191, 212, 150, 130, 144, 161, 190, 249,
	286, 296, 0, 0, 0, 0, 0, 168, 0, 289,
	258, 342, 0, 0, 264, 288, 215, 331, 278, 340,
	341, 192, 0, 350, 355, 0, 0, 0, 310, 178,
	0, 136, 0, 273, 173, 207, 0, 0, 0, 165,
	0, 0, 0, 309, 329, 152, 325, 236, 242, 162,
	164, 163, 145, 304, 328, 156, 166, 314, 292, 319,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 299, 298, 0, 198, 0, 250, 134, 281,
	265, 203, 135, 321, 358, 151, 209, 326, 129, 184,
	248, 170, 259, 230, 231, 229, 232, 185, 266, 343,
	137, 322, 339, 158, 300, 302, 356, 287, 139, 337,
	317, 234, 204, 205, 138, 0, 284, 176, 188, 171,
	253, 0, 187, 275, 334, 335, 169, 359, 147, 349,
	141, 148, 348, 245, 0, 244, 351, 330, 338, 235,
	223, 0, 140, 336, 233, 222, 210, 181, 194, 271,
	218, 272, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 315, 345, 360, 154, 0, 303, 327, 0, 0,
	155, 186, 180, 270, 243, 149, 197, 312, 208, 216,
	283, 357, 257, 290, 159, 344, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 142, 213, 0,
	280, 183, 346, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 251, 252, 255, 256, 261, 262, 263,
	267, 268, 269, 274, 277, 279, 285, 291, 293, 294,
	295, 297, 305, 306, 307, 308, 316, 320, 332, 333,
	352, 354, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 211, 0,
	0, 167, 219, 217, 0, 0, 0, 260, 323, 0,
	0, 0, 0, 214, 0, 0, 0, 313, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 606, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 189, 238, 146, 0, 0, 0, 202, 353,
	0, 0, 0, 276, 0, 318, 191, 212, 150, 130,
	144, 161, 190, 249, 286, 296, 0, 0, 0, 0,
	0, 168, 0, 289, 258, 342, 0, 0, 264, 288,
	215, 331, 278, 340, 341, 192, 0, 350, 355, 0,
	0, 0, 310, 178, 0, 136, 0, 273, 173, 207,
	0, 0, 0, 165, 0, 0, 0, 309, 329, 152,
	325, 236, 242, 162, 164, 163, 145, 304, 328, 156,
	166, 314, 292, 319, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 299, 298, 0, 198,
	0, 250, 134, 281, 265, 203, 135, 321, 358, 151,
	209, 326, 129, 184, 248, 170, 259, 230, 231, 229,
	232, 185, 266, 343, 137, 322, 339, 158, 300, 302,
	356, 287, 139, 337, 317, 234, 204, 205, 138, 0,
	284, 176, 188, 171, 253, 0, 187, 275, 334, 335,
	169, 359, 147, 349, 141, 148, 348, 245, 0, 244,
	351, 330, 338, 235, 223, 0, 140, 336, 233, 222,
	210, 181, 194, 271, 218, 272, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 315, 345, 360, 154, 0,
	303, 327, 0, 0, 155, 186, 180, 270, 243, 149,
	197, 312, 208, 216, 283, 357, 257, 290, 159, 344,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 142, 213, 0, 280, 183, 346, 0, 175, 0,
	0, 0, 0, 0, 0, 131, 132, 143, 153, 160,
	174, 179, 182, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 251, 252, 255,
	256, 261, 262, 263, 267, 268, 269, 274, 277, 279,
	285, 291, 293, 294, 295, 297, 305, 306, 307, 308,
	316, 320, 332, 333, 352, 354, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 1019, 177, 0, 0,
	0, 0, 211, 0, 0, 167, 219, 217, 0, 0,
	0, 260, 323, 0, 0, 0, 0, 214, 0, 0,
	0, 313, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 189, 238, 146, 0,
	0, 0, 202, 353, 0, 0, 0, 276, 0, 318,
	191, 212, 150, 130, 144, 161, 190, 249, 286, 296,
	0, 0, 0, 0, 0, 168, 0, 289, 258, 342,
	0, 0, 264, 288, 215, 331, 278, 340, 341, 192,
	0, 350, 355, 0, 0, 0, 310, 178, 0, 136,
	0, 273, 173, 207, 0, 0, 0, 165, 0, 0,
	0, 309, 329, 152, 325, 236, 242, 162, 164, 163,
	145, 304, 328, 156, 166, 314, 292, 319, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	299, 298, 0, 198, 0, 250, 134, 281, 265, 203,
	135, 321, 358, 151, 209, 326, 129, 184, 248, 170,
	259, 230, 231, 229, 232, 185, 266, 343, 137, 322,
	339, 158, 300, 302, 356, 287, 139, 337, 317, 234,
	204, 205, 138, 0, 284, 176, 188, 171, 253, 0,
	187, 275, 334, 335, 169, 359, 147, 349, 141, 148,
	348, 245, 0, 244, 351, 330, 338, 235, 223, 0,
	140, 336, 233, 222, 210, 181, 194, 271, 218, 272,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 315,
	345, 360, 154, 0, 303, 327, 0, 0, 155, 186,
	180, 270, 243, 149, 197, 312, 208, 216, 283, 357,
	257, 290, 159, 344, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 142, 213, 0, 280, 183,
	346, 0, 175, 0, 0, 0, 0, 0, 0, 131,
	132, 143, 153, 160, 174, 179, 182, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 251, 252, 255, 256, 261, 262, 263, 267, 268,
	269, 274, 277, 279, 285, 291, 293, 294, 295, 297,
	305, 306, 307, 308, 316, 320, 332, 333, 352, 354,
	324, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 211, 0, 0, 167,
	219, 217, 0, 0, 0, 260, 323, 0, 0, 0,
	0, 214, 0, 0, 0, 313, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 238, 146, 0, 0, 0, 202, 353, 0, 0,
	0, 276, 0, 318, 191, 212, 150, 130, 144, 161,
	190, 249, 286, 296, 0, 0, 0, 0, 0, 168,
	0, 289, 258, 342, 0, 0, 264, 288, 215, 331,
	278, 340, 341, 192, 0, 350, 355, 0, 0, 0,
	310, 178, 0, 136, 0, 273, 173, 207, 0, 0,
	0, 165, 0, 0, 0, 309, 329, 152, 325, 236,
	242, 162, 164, 163, 145, 304, 328, 156, 166, 314,
	292, 319, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 299, 298, 0, 198, 0, 250,
	134, 281, 265, 203, 135, 321, 358, 151, 209, 326,
	129, 184, 248, 170, 259, 230, 231, 229, 232, 185,
	266, 343, 137, 322, 339, 158, 300, 302, 356, 287,
	139, 337, 317, 234, 204, 205, 138, 0, 284, 176,
	188, 171, 253, 0, 187, 275, 334, 335, 169, 359,
	147, 349, 141, 148, 348, 245, 0, 244, 351, 330,
	338, 235, 223, 0, 140, 336, 233, 222, 210, 181,
	194, 271, 218, 272, 195, 240, 239, 241, 220, 224,
	0, 0, 0, 315, 345, 360, 154, 0, 303, 327,
	0, 0, 155, 186, 180, 270, 243, 149, 197, 312,
	208, 216, 283, 357, 257, 290, 159, 344, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 142,
	213, 0, 280, 183, 346, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 251, 252, 255, 256, 261,
	262, 263, 267, 268, 269, 274, 277, 279, 285, 291,
	293, 294, 295, 297, 305, 306, 307, 308, 316, 320,
	332, 333, 352, 354, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	211, 0, 0, 167, 219, 217, 0, 0, 0, 260,
	323, 0, 0, 0, 0, 214, 0, 0, 0, 313,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 238, 146, 0, 123, 0,
	202, 353, 0, 0, 0, 276, 0, 318, 191, 212,
	150, 130, 144, 161, 190, 249, 286, 296, 0, 0,
	0, 0, 0, 168, 0, 289, 258, 342, 0, 0,
	264, 288, 215, 331, 278, 340, 341, 192, 0, 350,
	355, 0, 0, 0, 310, 178, 0, 136, 0, 273,
	173, 207, 0, 0, 0, 165, 0, 0, 0, 309,
	329, 152, 325, 236, 242, 162, 164, 163, 145, 304,
	328, 156, 166, 314, 292, 319, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 299, 298,
	0, 198, 0, 250, 134, 281, 265, 203, 135, 321,
	358, 151, 209, 326, 129, 184, 248, 170, 259, 230,
	231, 229, 232, 185, 266, 343, 137, 322, 339, 158,
	300, 302, 356, 287, 139, 337, 317, 234, 204, 205,
	138, 0, 284, 176, 188, 171, 253, 0, 187, 275,
	334, 335, 169, 359, 147, 349, 141, 148, 348, 245,
	0, 244, 351, 330, 338, 235, 223, 0, 140, 336,
	233, 222, 210, 181, 194, 271, 218, 272, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 315, 345, 360,
	154, 0, 303, 327, 0, 0, 155, 186, 180, 270,
	243, 149, 197, 312, 208, 216, 283, 357, 257, 290,
	159, 344, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 142, 213, 0, 280, 183, 346, 0,
	175, 0, 0, 0, 0, 0, 0, 131, 132, 143,
	153, 160, 174, 179, 182, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 251,
	252, 255, 256, 261, 262, 263, 267, 268, 269, 274,
	277, 279, 285, 291, 293, 294, 295, 297, 305, 306,
	307, 308, 316, 320, 332, 333, 352, 354, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 211, 0, 0, 167, 219, 217,
	0, 0, 0, 260, 323, 0, 0, 0, 0, 214,
	0, 0, 0, 313, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 238,
	146, 0, 0, 0, 202, 353, 0, 0, 0, 276,
	0, 318, 191, 212, 150, 130, 144, 161, 190, 249,
	286, 296, 0, 0, 0, 0, 0, 168, 0, 289,
	258, 342, 0, 0, 264, 288, 215, 331, 278, 340,
	341, 192, 0, 350, 355, 0, 0, 0, 310, 178,
	0, 136, 0, 273, 173, 207, 0, 0, 0, 165,
	0, 0, 0, 309, 329, 152, 325, 236, 242, 162,
	164, 163, 145, 304, 328, 156, 166, 314, 292, 319,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 299, 298, 0, 198, 0, 250, 134, 281,
	265, 203, 135, 321, 358, 151, 209, 326, 129, 184,
	248, 170, 259, 230, 231, 229, 232, 185, 266, 343,
	137, 322, 339, 158, 300, 302, 356, 287, 139, 337,
	317, 234, 204, 205, 138, 0, 284, 176, 188, 171,
	253, 0, 187, 275, 334, 335, 169, 359, 147, 349,
	141, 148, 348, 245, 0, 244, 351, 330, 338, 235,
	223, 0, 140, 336, 233, 222, 210, 181, 194, 271,
	218, 272, 195, 240, 239, 241, 220, 224, 0, 0,
	0, 315, 345, 360, 154, 0, 303, 327, 0, 0,
	155, 186, 180, 270, 243, 149, 197, 312, 208, 216,
	283, 357, 257, 290, 159, 344, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 142, 213, 0,
	280, 183, 346, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 251, 252, 255, 256, 261, 262, 263,
	267, 268, 269, 274, 277, 279, 285, 291, 293, 294,
	295, 297, 305, 306, 307, 308, 316, 320, 332, 333,
	352, 354, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 211, 0,
	0, 167, 219, 217, 0, 0, 0, 260, 323, 0,
	0, 0, 0, 214, 0, 0, 0, 313, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 189, 238, 146, 0, 0, 0, 202, 353,
	0, 0, 0, 276, 0, 318, 191, 212, 150, 130,
	144, 161, 190, 249, 286, 296, 0, 0, 0, 0,
	0, 168, 0, 289, 258, 342, 0, 0, 264, 288,
	215, 331, 278, 340, 341, 192, 0, 350, 355, 0,
	0, 0, 310, 178, 0, 136, 0, 273, 173, 207,
	0, 0, 0, 165, 0, 0, 0, 309, 329, 152,
	325, 236, 242, 162, 164, 163, 145, 304, 328, 156,
	166, 314, 292, 319, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 299, 298, 0, 198,
	0, 250, 134, 281, 265, 203, 135, 321, 358, 151,
	209, 326, 129, 184, 248, 170, 259, 230, 231, 229,
	232, 185, 266, 343, 137, 322, 339, 158, 300, 302,
	356, 287, 139, 337, 317, 234, 204, 205, 138, 0,
	284, 176, 188, 171, 253, 0, 187, 275, 334, 335,
	169, 359, 147, 349, 141, 148, 348, 245, 0, 244,
	351, 330, 338, 235, 223, 0, 140, 336, 233, 222,
	210, 181, 194, 271, 218, 272, 195, 240, 239, 241,
	220, 224, 0, 0, 0, 315, 345, 360, 154, 0,
	303, 327, 0, 0, 155, 186, 180, 270, 243, 149,
	197, 312, 208, 216, 283, 357, 257, 290, 159, 344,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 142, 213, 0, 280, 183, 346, 0, 175, 0,
	0, 0, 0, 0, 0, 131, 132, 143, 153, 160,
	174, 179, 182, 0, 193, 196, 199, 200, 201, 206,
	221, 225, 226, 227, 228, 246, 247, 251, 252, 255,
	256, 261, 262, 263, 267, 268, 269, 274, 277, 279,
	285, 291, 293, 294, 295, 297, 305, 306, 307, 308,
	316, 320, 332, 333, 352, 354, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 211, 0, 0, 167, 219, 217, 0, 0,
	0, 260, 323, 0, 0, 0, 0, 214, 0, 0,
	0, 313, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 189, 238, 146, 0,
	0, 0, 202, 353, 0, 0, 0, 276, 0, 318,
	191, 212, 150, 130, 144, 161, 190, 249, 286, 296,
	0, 0, 0, 0, 0, 168, 0, 289, 258, 342,
	0, 0, 264, 288, 215, 331, 278, 340, 341, 192,
	0, 350, 355, 0, 0, 0, 310, 178, 0, 136,
	0, 273, 173, 207, 0, 0, 0, 165, 0, 0,
	0, 309, 329, 152, 325, 236, 242, 162, 164, 163,
	145, 304, 328, 156, 166, 314, 292, 319, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	299, 298, 0, 198, 0, 250, 134, 281, 265, 203,
	135, 321, 358, 151, 209, 326, 129, 184, 248, 170,
	259, 230, 231, 229, 232, 185, 266, 343, 137, 322,
	339, 158, 300, 302, 356, 287, 139, 337, 317, 234,
	204, 205, 138, 0, 284, 176, 188, 171, 253, 0,
	187, 275, 334, 335, 169, 359, 147, 349, 141, 148,
	348, 245, 0, 244, 351, 330, 338, 235, 223, 0,
	140, 336, 233, 222, 210, 181, 194, 271, 218, 272,
	195, 240, 239, 241, 220, 224, 0, 0, 0, 315,
	345, 360, 154, 0, 303, 327, 0, 0, 155, 186,
	180, 270, 243, 149, 197, 312, 208, 216, 283, 357,
	257, 290, 159, 344, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 142, 213, 0, 280, 183,
	346, 0, 175, 0, 0, 0, 0, 0, 0, 131,
	132, 143, 153, 160, 174, 179, 182, 0, 193, 196,
	199, 200, 201, 206, 221, 225, 226, 227, 228, 246,
	247, 251, 252, 255, 256, 261, 262, 263, 267, 268,
	269, 274, 277, 279, 285, 291, 293, 294, 295, 297,
	305, 306, 307, 308, 316, 320, 332, 333, 352, 354,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 211, 0, 0, 167,
	219, 217, 0, 0, 0, 260, 323, 0, 0, 0,
	0, 214, 0, 0, 0, 313, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 238, 146, 0, 0, 0, 202, 353, 0, 0,
	0, 276, 0, 318, 191, 212, 150, 130, 144, 161,
	190, 249, 286, 296, 0, 0, 0, 0, 0, 168,
	0, 289, 258, 342, 0, 0, 264, 288, 215, 331,
	278, 340, 341, 192, 0, 350, 355, 0, 0, 0,
	310, 178, 0, 136, 0, 273, 173, 207, 0, 0,
	0, 165, 0, 0, 0, 309, 329, 152, 325, 236,
	242, 162, 164, 163, 145, 304, 328, 156, 166, 314,
	292, 319, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 299, 298, 0, 198, 0, 250,
	134, 281, 265, 203, 135, 321, 358, 151, 209, 326,
	129, 184, 248, 170, 259, 230, 231, 229, 232, 185,
	266, 343, 137, 322, 339, 158, 300, 302, 356, 287,
	139, 337, 317, 234, 204, 205, 138, 0, 284, 176,
	188, 171, 253, 0, 187, 275, 334, 335, 169, 359,
	147, 349, 141, 589, 348, 245, 0, 244, 351, 330,
	338, 235, 223, 0, 140, 336, 233, 222, 210, 181,
	194, 271, 218, 272, 195, 240, 239, 241, 585, 224,
	0, 0, 0, 315, 345, 360, 154, 0, 303, 327,
	0, 0, 155, 186, 180, 270, 590, 588, 579, 580,
	208, 216, 283, 357, 257, 290, 159, 344, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 142,
	213, 0, 280, 183, 346, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 0, 193, 196, 199, 200, 201, 206, 221, 225,
	226, 227, 228, 246, 247, 251, 252, 255, 256, 261,
	262, 263, 267, 586, 587, 274, 277, 279, 285, 291,
	293, 294, 295, 297, 305, 306, 307, 308, 316, 320,
	332, 333, 352, 354, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	211, 0, 0, 167, 219, 217, 0, 0, 0, 260,
	323, 0, 0, 0, 0, 214, 0, 0, 0, 313,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 238, 146, 0, 0, 0,
	202, 353, 0, 0, 0, 276, 0, 318, 191, 212,
	150, 130, 144, 161, 190, 249, 286, 296, 0, 0,
	0, 0, 0, 168, 0, 289, 258, 342, 0, 0,
	264, 288, 215, 331, 278, 340, 341, 192, 0, 350,
	355, 0, 0, 0, 310, 178, 0, 136, 0, 273,
	173, 207, 0, 0, 0, 165, 0, 0, 0, 309,
	329, 152, 325, 236, 242, 162, 164, 163, 145, 304,
	328, 156, 166, 314, 292, 319, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 299, 298,
	0, 198, 0, 250, 134, 281, 265, 203, 135, 321,
	358, 151, 209, 326, 129, 184, 248, 170, 259, 230,
	231, 229, 232, 185, 266, 343, 137, 322, 1044, 158,
	300, 302, 356, 287, 139, 337, 317, 234, 204, 205,
	138, 0, 284, 176, 188, 171, 253, 0, 187, 275,
	334, 335, 169, 359, 147, 349, 141, 148, 348, 245,
	0, 244, 351, 330, 338, 235, 223, 0, 140, 336,
	233, 222, 210, 181, 194, 271, 218, 272, 195, 240,
	239, 241, 220, 224, 0, 0, 0, 315, 345, 360,
	154, 0, 303, 327, 0, 0, 155, 186, 180, 270,
	243, 149, 197, 312, 208, 216, 283, 357, 257, 290,
	159, 344, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 142, 213, 0, 280, 183, 346, 0,
	175, 0, 0, 0, 0, 0, 0, 131, 132, 143,
	153, 160, 174, 179, 182, 0, 193, 196, 199, 200,
	201, 206, 221, 225, 226, 227, 228, 246, 247, 251,
	252, 255, 256, 261, 262, 263, 267, 268, 269, 274,
	277, 279, 285, 291, 293, 294, 295, 297, 305, 306,
	307, 308, 316, 320, 332, 333, 352, 354, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 211, 0, 0, 167, 219, 217,
	0, 0, 0, 260, 323, 0, 0, 0, 0, 214,
	0, 0, 0, 313, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 238,
	146, 0, 0, 0, 202, 353, 0, 0, 0, 276,
	0, 318, 191, 212, 150, 130, 144, 161, 190, 249,
	286, 296, 0, 0, 0, 0, 0, 168, 0, 289,
	258, 342, 0, 0, 264, 288, 215, 331, 278, 340,
	341, 192, 0, 350, 355, 0, 0, 0, 310, 178,
	0, 136, 0, 273, 173, 207, 0, 0, 0, 165,
	0, 0, 0, 309, 329, 152, 325, 236, 242, 162,
	164, 163, 145, 304, 328, 156, 166, 314, 292, 319,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 299, 298, 0, 198, 0, 250, 134, 281,
	265, 203, 135, 321, 358, 151, 209, 326, 129, 184,
	248, 170, 259, 230, 231, 229, 232, 185, 266, 343,
	137, 322, 576, 158, 300, 302, 356, 287, 139, 337,
	317, 234, 204, 205, 138, 0, 284, 176, 188, 171,
	253, 0, 187, 275, 334, 335, 169, 359, 147, 349,
	141, 589, 348, 245, 0, 244, 351, 330, 338, 235,
	223, 0, 140, 336, 233, 222, 210, 181, 194, 271,
	218, 272, 195, 240, 239, 241, 585, 224, 0, 0,
	0, 315, 345, 360, 154, 0, 303, 327, 0, 0,
	155, 186, 180, 270, 590, 588, 579, 580, 208, 216,
	283, 357, 257, 290, 159, 344, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 142, 213, 0,
	280, 183, 346, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 0,
	193, 196, 199, 200, 201, 206, 221, 225, 226, 227,
	228, 246, 247, 251, 252, 255, 256, 261, 262, 263,
	267, 586, 587, 274, 277, 279, 285, 291, 293, 294,
	295, 297, 305, 306, 307, 308, 316, 320, 332, 333,
	352, 354, 35, 0, 72, 38, 39, 0, 0, 0,
	35, 0, 72, 38, 39, 0, 62, 0, 0, 0,
	0, 0, 78, 0, 62, 0, 40, 0, 0, 35,
	78, 72, 38, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 2482, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2290, 0,
	0, 81, 0, 0, 0, 0, 2290, 0, 0, 0,
	0, 2425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 454, 0, 0, 0, 2290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 74, 46,
	45, 48, 1999, 0, 0, 42, 74, 46, 45, 48,
	0, 0, 0, 2291, 0, 0, 0, 0, 0, 0,
	0, 2291, 0, 0, 42, 74, 46, 45, 48, 49,
	77, 76, 0, 0, 0, 0, 47, 49, 77, 76,
	2291, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 61, 0, 2292, 0, 0, 0, 0,
	60, 61, 0, 2292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	61, 448, 2292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2293, 75, 0, 53, 54,
	64, 0, 65, 2293, 75, 0, 53, 54, 64, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2293, 75, 0, 53, 54, 64, 0, 65,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 433, 0, 0, 427, 428, 429, 430,
	431, 436, 437, 441, 442, 451, 450, 449, 452, 453,
	456, 455, 457, 432, 434, 435, 438, 439, 440, 443,
	444, 447, 445, 446,
}
var yyPact = [...]int{

	195, -1000, -325, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1492, -1000, -1000, -1000, -1000, -1000,
	-1000, 707, 259, -1000, -1000, 184, 244, 25467, 478, 2840,
	26395, -1000, -1000, -1000, 161, 265, 26395, -1000, -1000, -1000,
	276, 366, 986, 1345, 985, 44, -90, -98, 95, -1000,
	1529, 1532, -1000, -1000, 444, 48, -1000, -1000, -1000, 20362,
	167, -1000, -1000, 1453, 1487, 1274, -1000, 12938, 307, 307,
	25003, 28251, -1000, 1527, 26395, 11544, -1000, 462, 26395, -173,
	298, 298, 199, 298, 298, 470, -1000, 682, -1000, -1000,
	-1000, -1000, 26395, 20826, 302, 25931, 302, 302, 302, 302,
	302, 302, 302, 26395, -1000, 554, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 26395, 983, 1362, 760, 250, 8275, 8275, -1000, 718,
	-1000, 206, 197, 191, 194, 111, 762, 1466, 1164, 1453,
	1453, 8275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 235,
	355, 179, 167, 680, -1000, -1000, -1000, -1000, -1000, 1361,
	1360, 887, 1358, 1055, 1357, 1221, -57, -1000, 981, 26395,
	-1000, -1000, 825, 808, -1000, 1230, 1451, 464, 26395, -1000,
	-115, 1160, -1000, 1207, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 993, 1366,
	823, 15722, 1315, -1000, -1000, 735, 1514, -1000, 18970, 552,
	-1000, 15722, 4429, 1164, -1000, -1000, 1164, -1000, -1000, -1000,
	500, -1000, -1000, 17578, 17578, 17578, 17578, 17578, 17578, 17578,
	17578, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1164, 1164, 1164, 1164, 1164,
	1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164,
	1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164,
	1164, 1164, 1164, -1000, -1000, 1164, -1000, 12474, 1164, 1164,
	1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164,
	15722, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164, 1164,
	1164, 1164, 1164, 1164, 1164, 1164, 1164, 24539, 23611, 26395,
	1172, 1057, -1000, -1000, 550, 1159, -147, 27787, -1000, -1000,
	-1000, -1000, 26859, 23147, 673, -1000, -1000, -1000, -1000, 1356,
	-1000, -1000, 546, -1000, 1492, -1000, -1000, 1109, 251, -1000,
	4164, 3866, -1000, -1000, -1000, 1220, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 25931, 1428, 357, 980, 708, 977, 973, 971, 20826,
	20826, 298, 970, 1156, 331, 1155, 325, 930, -1000, -1000,
	-1000, -1000, 26395, 1407, 1238, 26395, 969, 968, 967, 966,
	20826, 20826, -1000, 11077, -1000, 8275, 760, -1000, 924, 15722,
	298, 298, 8275, 8275, 8275, 26395, 26395, 26395, -1000, -1000,
	-1000, -1000, 26395, -1000, -1000, 760, 760, 8275, 760, 690,
	1512, 690, -1000, 690, -1000, -1000, 15722, -1000, 17578, 19898,
	587, -1000, -1000, -1000, -1000, 964, 233, -1000, -1000, -1000,
	-1000, -1000, -1000, 963, 1055, 1055, -1000, 923, 1055, 1144,
	-1000, 661, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1055, -1000, 15258, -323, -1000, -1000,
	1154, -1000, 163, -1000, -1000, 1274, -1000, -1000, 167, -1000,
	-1000, 26395, 8275, -92, 20362, 1164, 9676, -1000, -1000, -1000,
	1522, 599, 1130, -1000, -1000, 1152, -1000, 852, 544, 897,
	1286, -1000, -1000, -1000, 26395, -1000, 15722, 15722, 882, -1000,
	21290, -1000, -1000, -1000, -1000, 9209, 629, 17578, 812, 710,
	17578, 17578, 17578, 17578, 17578, 17578, 17578, 17578, 17578, 17578,
	17578, 17578, 17578, 17578, 17578, 820, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 962, -1000, 167, 929, 929, 566,
	566, 566, 566, 566, 566, 566, 22218, 1423, 13866, 13866,
	13866, 1423, 993, 993, 13866, 13866, 13866, 13866, 13866, 13866,
	1423, 1423, 13866, 993, 993, 993, 993, 13866, 13866, 13866,
	13866, 1423, 13866, 13866, 13866, 1423, 993, 1107, 758, 12474,
	13866, 13866, 13866, 993, 15722, 15722, 14794, 14330, 16186, 13866,
	13866, 1423, 650, 758, 26859, -1000, -1000, 17114, -1000, -1000,
	-1000, -1000, -1000, 993, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 25931, 25931, 13866, 13866, 13866, 13866, 225, 26395,
	-1000, 1173, 1224, -1000, -1000, -1000, 1425, 22683, 18506, -1000,
	225, 1128, 23611, 26395, -1000, -1000, 23611, 26395, 8742, 27323,
	1140, -1000, -105, -110, -147, -1000, -1000, 560, -1000, -1000,
	-1000, 12009, -1000, 10143, 1453, 1274, 5940, 10610, -1000, 3866,
	1220, -1000, -65, -1000, -1000, -1000, 1183, -1000, 1183, 198,
	14, 1183, 1183, 1183, 1183, 1183, -29, -29, -29, -29,
	-23, -1000, -1000, -1000, -1000, -1000, 1217, 1210, -1000, 1183,
	1183, 1183, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1189, 214, 1186, 1186, 1186, 1186, 1186, 272, 272, -1000,
	15722, 1223, -1000, 26395, 8275, 1404, 8275, 193, 1209, 1162,
	-1000, 93, 1123, -1000, 862, 26395, -1000, 26395, 26395, 20826,
	20826, 20826, 516, -1000, 26395, 1149, -1000, -1000, -1000, -1000,
	-1000, 1147, -1000, 1123, -1000, -1000, -1000, -1000, -1000, -1000,
	758, 959, 957, -1000, -1000, -1000, -1000, -1000, -1000, 716,
	-1000, -1000, -1000, -1000, 760, 26395, 26395, 26395, 1417, 760,
	758, 2613, 1232, 1164, 993, -1000, -1000, 955, -1000, 1144,
	1144, -1000, 1144, 1055, 929, 1144, -1000, 1105, 1393, 922,
	26395, -1000, 20362, -58, -1000, -142, 1423, 993, 603, -1000,
	-1000, -1000, -1000, -1000, 175, 1059, 513, -1000, 1282, 823,
	823, 15722, -1000, -1000, -1000, 10143, 1475, -1000, 1308, 1301,
	1252, -1000, -1000, 629, 645, -1000, -1000, 901, -1000, -1000,
	-1000, -1000, 511, 1164, -1000, 3569, -1000, -1000, -1000, -1000,
	812, 17578, 17578, 17578, 2613, 3569, 4222, 737, 2805, 566,
	646, 646, 586, 586, 586, 586, 586, 717, 717, -1000,
	-1000, -1000, 993, -1000, -1000, -1000, 13866, 1092, -1000, -1000,
	758, 508, 1092, 1092, 13866, -198, -198, 993, 1092, 1092,
	1092, 993, 1092, 13866, 13866, 1092, -198, -198, -198, -198,
	1092, 1092, 1092, 1092, 13866, 1092, 1092, 1092, 13866, -1000,
	15722, -1000, 993, 1092, 1092, 1092, -1000, 644, 724, 627,
	1511, 1092, 615, 1509, 1092, 2791, 17578, 17578, 17578, 1092,
	1092, 13866, 727, -1000, 15722, 993, -1000, 2592, 1143, 1142,
	1092, 993, 1141, 1092, 1092, 169, 1164, -1000, 10143, 23611,
	23611, 23611, 23611, 23611, -1000, 1270, 1264, -1000, 1250, 1249,
	1266, 20362, 1094, 993, 181, 22683, -1000, 1164, -1000, 19434,
	531, 458, 438, 395, 1501, 23611, 1125, -1000, 1125, -1000,
	507, -1000, -1000, 26859, -147, -122, -1000, -1000, 1140, -1000,
	848, -1000, -1000, 758, -1000, 496, 1366, 1423, 1139, 5473,
	-1000, -1000, -1000, -1000, 251, -1000, -1000, -1000, 1208, 267,
	-1000, 1324, 556, 628, 941, 1313, -1000, -1000, 738, -72,
	-1000, -1000, 800, -29, -29, 1183, 1183, 196, 1183, -1000,
	-29, -1000, -1000, -1000, 560, 1353, 560, 560, 560, 560,
	-29, 921, 921, -1000, -1000, -1000, -1000, 795, -1000, 1189,
	-1000, 783, -1000, -1000, -1000, -1000, -1000, -1000, 859, 1237,
	25931, 167, 1412, -1000, -1000, -1000, 1506, -1000, -1000, 273,
	-1000, 20826, 90, 226, 168, 20826, 20826, -1000, 322, -1000,
	318, -1000, -1000, -1000, -1000, -1000, 8275, 26395, 20826, 8275,
	8275, 1501, 954, 953, -1000, -1000, -1000, 690, 760, 1348,
	-1000, -1000, 17578, 20826, -1000, 173, -1000, -1000, -1000, -1000,
	225, 453, -1000, -1000, -87, -1000, -1000, 1286, -1000, 1138,
	-1000, -1000, 537, 460, 658, 269, 269, -1000, 640, 269,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 224, 1411,
	9676, 9676, 1280, -1000, -1000, -1000, 26395, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7808, 13866, -1000, 2613,
	3569, 4111, -1000, 17578, -1000, 1092, 13866, -198, 7341, -198,
	-198, 1092, -1000, 24075, -1000, -198, -198, -198, -198, -198,
	-198, 1092, 1092, -198, -1000, -1000, -1000, -1000, -198, -198,
	-198, -198, 1092, -198, -198, -198, 993, 758, -1000, -1000,
	-1000, -1000, 468, 820, 468, 17578, 17578, -1000, 17578, 17578,
	-1000, -1000, 17578, 3873, 3732, 3637, -240, -1000, 1153, 684,
	-1000, 15722, 840, -1000, -1000, 17578, 17578, -1000, -1000, -1000,
	-1000, 1236, 10143, 1164, 6407, -1000, 25931, 1145, -1000, 660,
	656, 1224, 1205, 1235, 1093, -1000, -1000, -1000, -1000, 1257,
	-1000, 1256, -1000, -1000, 1177, -1000, -1000, 1135, 1164, 25931,
	17578, 531, -1000, 1164, 1164, 1164, 1492, 15722, 1125, -1000,
	-1000, 581, -1000, -1000, -130, -132, -1000, -1000, -1000, 9676,
	-1000, 5940, -1000, 5940, -1000, 21754, 294, 556, 262, -1000,
	941, -1000, -1000, 941, -1000, -1000, -1000, 1187, -1000, 723,
	-1000, -1000, -1000, -1000, -1000, 17578, 1519, -1000, 1322, -1000,
	1318, 916, -1000, -1000, 1032, 560, 560, -29, -1000, -1000,
	1183, -1000, 560, -1000, 616, -1000, -1000, -1000, -1000, 560,
	1075, -1000, 1071, 1129, -1000, 1066, 61, 26395, -1000, -1000,
	-1000, 1234, -1000, -1000, -1000, 1015, 1127, -1000, 4164, 952,
	951, 950, -1000, 20826, 69, 93, 260, 949, -1000, -1000,
	26395, 20826, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	760, -1000, 17578, 3569, 1123, -1000, -1000, -29, 26395, -1000,
	1252, 603, -1000, 3436, -1000, 941, 428, -1000, -1000, 281,
	-1000, 1313, -1000, 3191, 948, -1000, 28780, 4527, 25931, 1317,
	1316, 947, 26395, 25931, -1000, -1000, 4008, 945, 15722, -1000,
	25931, 25931, 1164, 494, -1000, -1000, -1000, 1120, 12938, -1000,
	-1000, 993, -1000, 17578, 3569, -198, -1000, -1000, -1000, -1000,
	492, -1000, -1000, -198, -1000, 408, -1000, -1000, -1000, -1000,
	-1000, -1000, -198, -198, -1000, -1000, -1000, -1000, -1000, -198,
	-1000, -1000, -1000, -1000, 993, 1183, 1183, -1000, 1183, 1186,
	-1000, 1183, 20, 1183, 12, 993, 993, 3547, 3330, 3182,
	2988, 2592, 17578, 17578, 17578, 1164, -187, -1000, 758, 15722,
	3116, 2941, -1000, 1377, 1051, 1111, -1000, -1000, 13402, 993,
	1293, 1059, -1000, 20362, 1053, -1000, 1492, 10143, 15722, 15722,
	-1000, -1000, 15722, 1184, -1000, 15722, -1000, -1000, -1000, -1000,
	25931, 180, -1000, 15722, 1053, 2234, -1000, 25931, 25931, 25931,
	1453, 758, -1000, -1000, -1000, -1000, 5473, -1000, 1042, -1000,
	1183, 1183, 1314, -1000, 1313, 941, -1000, -1000, -1000, 25931,
	-1000, 3569, -55, -1000, -1000, -1000, -1000, -1000, -1000, 560,
	-1000, -1000, -1000, -1000, -1000, -29, 914, -29, 767, -1000,
	766, -1000, -1000, -271, 1182, -1000, 167, 26395, 88, 273,
	-1000, 4164, 4164, 4164, 1123, 94, 722, 81, -1000, 1406,
	-1000, -1000, -1000, 3569, -75, -1000, -1000, -1000, 4008, 240,
	4164, 4164, -1000, 1223, 556, 1312, 262, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 944, -1000, 448, -1000, 311, 240,
	4008, 758, 591, 1379, -1000, 9676, 1498, 23611, -1000, -1000,
	-1000, 3569, -1000, 6874, -1000, 993, 1486, -1000, -1000, -1000,
	-1000, -1000, 190, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17578, 17578, 17578, 17578, -1000, 2592, 2592, 2592, 17578,
	993, 913, 758, 17578, 17578, 1311, -1000, 1164, -1000, -1000,
	1164, 166, -1000, 25931, 1453, -1000, 758, 758, 758, 25931,
	758, 1039, -1000, 1164, 18042, -1000, 20362, 1031, 1031, 1031,
	-1000, 547, 21754, 1385, 1385, -1000, -1000, 1028, -1000, -1000,
	560, -1000, 560, 1013, 1004, -1000, 21754, -1000, 1446, -1000,
	88, -1000, 908, 143, 150, -1000, 142, 141, 139, 137,
	135, -1000, -1000, -1000, -1000, -1000, 164, 93, -1000, 245,
	905, 1339, 1334, 1179, 1002, -1000, -1000, 943, -1000, -1000,
	1181, 941, -1000, 1178, -1000, 936, -1000, -1000, 25931, -1000,
	240, 1369, 1367, 1164, -1000, 1496, 1483, 1125, 12938, -1000,
	-1000, -1000, 15722, -1000, -1000, 2592, 2592, 2592, 2592, -1000,
	-1000, -1000, 160, -1000, -1000, 2592, 2592, 1518, -1000, 1111,
	1164, -1000, 167, -1000, -1000, 1023, -1000, 25931, -1000, -1000,
	531, -1000, -1000, -1000, 547, -1000, 927, 640, 904, -1000,
	-1000, -1000, 247, -1000, -1000, -1000, -1000, 1012, -1000, 183,
	28743, -1000, -1000, -1000, -1000, -1000, -1000, 1344, 1342, 158,
	243, 863, -1000, 77, -1000, -1000, 304, 1327, 1329, 1481,
	23611, -1000, -1000, 738, 738, 21754, 1223, 21754, -1000, -1000,
	-1000, 17578, -1000, 201, -1000, 15722, 15722, 1498, -1000, 1131,
	-1000, -1000, -1000, -1000, 993, 128, -247, -1000, -1000, 10143,
	1111, 993, -1000, -1000, -1000, -1000, -1000, 750, -1000, 26395,
	547, 177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	15722, 15722, 5006, 28743, -1000, -1000, -1000, -1000, 76, -1000,
	1409, -1000, 1177, 748, 1334, 1480, 1332, 1319, -1000, 902,
	1125, 1010, 1166, 1001, 3569, 997, -1000, 25931, -1000, 758,
	1044, -1000, 758, 1496, -1000, -168, -1000, 1278, -243, -251,
	1037, -1000, -1000, 1165, -1000, 547, 162, -1000, 802, 836,
	115, 108, 3874, -1000, -1000, -1000, -1000, -326, -1000, -1000,
	889, -1000, 1336, -1000, 885, -1000, 1479, 1473, -1000, 1498,
	547, 21754, 547, -1000, 201, 1292, 15722, -1000, 993, 91,
	91, -1000, 1277, -1000, 25931, -1000, 854, 844, 861, -1000,
	15722, 28743, 1444, 1441, 1435, 1364, 9676, 28724, -1000, -1000,
	-1000, 881, 868, 1496, -1000, 992, -1000, -1000, 220, -1000,
	-1000, -1000, 92, -1000, -274, 172, -276, -1000, 929, -1000,
	-245, 990, 230, -1000, -1000, 698, 28743, -1000, 794, -327,
	266, 167, 371, 17578, -1000, -1000, -1000, -1000, -1000, -1000,
	547, 213, 721, -1000, -1000, -1000, -1000, -1000, 25931, -248,
	1231, -1000, -1000, -1000, -1000, -1000, -1000, 28743, -1000, -328,
	28743, 3118, -1000, -1000, -1000, 28716, -1000, -1000, -1000, -1000,
	105, -1000, -1000, 3569, -1000, 1164, 92, -1000, -252, 1225,
	1174, 1508, -1000, -329, 4720, -330, 297, 28743, 856, -1000,
	15722, -1000, 371, -1000, 16650, -1000, -1000, -1000, 1510, -1000,
	1516, 452, 452, 4493, 695, 28743, -1000, -332, 288, 28743,
	-1000, 697, -1000, 2592, 993, -1000, -1000, -1000, 263, 842,
	-1000, -1000, -1000, 4485, -1000, -334, 28743, -1000, -1000, -1000,
	-1000, -1000, 287, 3337, -336, -1000, 284, 28743, -1000,
}
var yyPgo = [...]int{

	0, 1891, 1885, 93, 1883, 157, 1882, 1880, 1879, 22,
	16, 13, 24, 1878, 1646, 1640, 1636, 1630, 1874, 1610,
	1871, 7, 1870, 1869, 1608, 1867, 1864, 1606, 1604, 1593,
	1589, 1863, 1854, 1853, 19, 1852, 20, 1850, 4, 121,
	138, 1847, 2, 1845, 1839, 12, 1836, 1835, 1587, 1834,
	1833, 1832, 1830, 75, 1828, 1584, 1582, 1827, 1826, 1571,
	1569, 1825, 1824, 1565, 1548, 1538, 1823, 156, 1822, 1820,
	1819, 142, 80, 125, 1818, 1817, 1816, 90, 56, 1788,
	100, 37, 89, 153, 1815, 27, 54, 1814, 1810, 118,
	115, 1809, 134, 1808, 68, 210, 84, 1807, 1803, 135,
	1798, 1793, 1791, 123, 1790, 1789, 2836, 1784, 1783, 127,
	1780, 51, 45, 44, 1778, 1774, 1773, 1771, 1769, 11,
	992, 1767, 1766, 122, 1765, 1763, 62, 1760, 1759, 168,
	1758, 1757, 1756, 113, 40, 1754, 36, 1752, 72, 53,
	1751, 59, 1750, 117, 1745, 1744, 38, 15, 1743, 32,
	1742, 41, 1740, 119, 712, 1000, 1738, 21, 10, 8,
	46, 50, 52, 109, 85, 18, 29, 116, 79, 67,
	34, 1736, 126, 1735, 65, 133, 114, 107, 132, 1733,
	1732, 1730, 879, 1727, 105, 60, 1726, 78, 792, 140,
	99, 1725, 64, 1724, 1723, 1722, 1721, 69, 102, 1719,
	1718, 70, 110, 30, 748, 1193, 1991, 112, 131, 1717,
	33, 1716, 1715, 2747, 88, 76, 87, 1714, 95, 63,
	47, 1712, 1711, 1710, 1709, 1705, 1703, 768, 1702, 1701,
	1698, 1697, 214, 362, 1696, 1690, 108, 71, 1689, 1688,
	1687, 1686, 104, 58, 124, 1685, 101, 96, 91, 1684,
	1680, 1679, 1678, 43, 39, 1676, 1675, 1674, 82, 57,
	1673, 55, 35, 28, 49, 9, 66, 83, 1672, 26,
	1671, 98, 5, 3, 6, 1670, 1668, 1661, 1660, 1652,
	1648, 1644, 61, 1642, 1633, 42, 1618, 1613, 1602, 31,
	1598, 1595, 1591, 120, 97, 86, 103, 1580, 92, 1573,
	1567, 77, 106, 1559, 48, 1557, 1552, 0, 111, 136,
	160, 1550, 1540,
}
var yyR1 = [...]int{

	0, 306, 306, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 66, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 88, 88, 92, 92, 6,
	6, 7, 7, 9, 9, 70, 70, 10, 11, 11,
	11, 11, 309, 309, 101, 101, 99, 99, 100, 100,
	167, 167, 12, 12, 12, 172, 172, 177, 177, 177,
	180, 180, 180, 180, 159, 160, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 299, 299,
	2, 280, 280, 281, 281, 282, 282, 282, 282, 283,
	283, 284, 284, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 25, 200, 200, 301, 301, 301, 301,
	295, 295, 295, 297, 297, 296, 296, 296, 298, 298,
	302, 302, 302, 302, 302, 304, 304, 304, 304, 304,
	304, 305, 305, 305, 303, 303, 46, 46, 47, 47,
	47, 152, 152, 152, 13, 13, 13, 13, 13, 20,
	22, 22, 35, 35, 36, 23, 23, 23, 23, 37,
	37, 38, 26, 26, 26, 26, 26, 26, 44, 44,
	44, 43, 43, 42, 42, 42, 42, 42, 42, 24,
	24, 24, 24, 45, 45, 40, 40, 39, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 19, 279, 279, 279,
	34, 34, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 51,
	255, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 244, 220, 220, 220, 220, 220, 220, 220, 220,
	219, 219, 219, 219, 223, 223, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 222, 222, 222, 222, 222,
	222, 222, 222, 224, 224, 224, 224, 224, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 226, 226, 226, 226, 226, 226, 226,
	226, 242, 242, 227, 227, 236, 236, 237, 237, 237,
	234, 234, 235, 235, 230, 231, 238, 232, 232, 232,
	233, 233, 233, 241, 241, 241, 241, 228, 245, 245,
	265, 265, 264, 264, 263, 263, 263, 254, 254, 260,
	260, 260, 260, 260, 260, 260, 249, 249, 249, 248,
	248, 250, 250, 253, 253, 262, 262, 261, 261, 246,
	246, 246, 266, 266, 266, 266, 266, 247, 247, 247,
	247, 267, 251, 251, 252, 252, 252, 273, 274, 272,
	272, 272, 272, 272, 116, 116, 116, 257, 257, 257,
	258, 258, 258, 259, 259, 259, 277, 277, 276, 276,
	48, 48, 49, 54, 54, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 151, 151, 151, 50, 198, 198, 271, 271,
	270, 268, 268, 269, 269, 15, 15, 52, 52, 300,
	300, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	275, 275, 275, 17, 17, 55, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 84, 186, 186, 185, 185, 184, 184,
	184, 187, 187, 187, 217, 217, 217, 57, 57, 62,
	62, 65, 65, 65, 63, 64, 28, 29, 29, 29,
	29, 30, 199, 199, 60, 60, 61, 61, 61, 61,
	76, 76, 311, 311, 59, 59, 58, 58, 18, 312,
	67, 68, 68, 69, 69, 69, 190, 190, 73, 73,
	73, 71, 71, 71, 72, 72, 78, 78, 82, 82,
	82, 82, 81, 81, 81, 81, 154, 154, 154, 155,
	155, 156, 156, 156, 157, 157, 158, 158, 158, 158,
	158, 124, 124, 209, 209, 209, 208, 208, 208, 208,
	86, 86, 89, 89, 90, 90, 90, 90, 93, 137,
	137, 110, 110, 111, 111, 111, 111, 111, 122, 122,
	166, 166, 165, 165, 168, 168, 91, 91, 91, 91,
	96, 96, 97, 97, 98, 98, 197, 197, 215, 215,
	215, 102, 102, 102, 104, 103, 103, 103, 103, 105,
	105, 107, 108, 108, 106, 106, 109, 112, 112, 112,
	112, 113, 113, 83, 83, 83, 83, 83, 83, 83,
	183, 183, 115, 115, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 132, 132, 132, 132, 132, 132,
	117, 117, 117, 117, 117, 117, 117, 77, 77, 133,
	133, 133, 95, 94, 94, 80, 80, 79, 79, 134,
	134, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 127, 127, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 310, 310, 129, 128, 128, 128,
	128, 128, 128, 74, 74, 74, 74, 74, 216, 216,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 144, 144, 75, 75, 142, 142, 143,
	145, 145, 141, 141, 141, 119, 119, 119, 119, 119,
	119, 119, 119, 121, 121, 121, 146, 146, 135, 135,
	85, 147, 147, 148, 149, 149, 150, 150, 153, 161,
	161, 161, 162, 162, 162, 162, 123, 123, 163, 163,
	163, 118, 118, 118, 118, 118, 118, 118, 164, 164,
	164, 164, 169, 169, 136, 136, 139, 139, 138, 140,
	170, 170, 174, 174, 171, 171, 175, 175, 175, 175,
	178, 178, 179, 179, 179, 176, 176, 176, 173, 173,
	173, 212, 212, 212, 181, 181, 191, 191, 188, 188,
	189, 189, 182, 182, 229, 229, 194, 194, 194, 194,
	194, 194, 194, 194, 196, 196, 195, 195, 195, 192,
	192, 192, 193, 193, 210, 210, 206, 206, 211, 211,
	207, 207, 213, 213, 214, 214, 278, 278, 239, 239,
	288, 288, 240, 240, 289, 289, 291, 291, 286, 286,
	287, 287, 290, 290, 31, 292, 292, 293, 293, 294,
	294, 294, 294, 32, 33, 33, 33, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 307, 308, 201, 202, 202, 202,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 5, 5, 15, 11, 5, 4, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 0, 3, 1, 1, 1, 1,
	3, 2, 1, 1, 3, 3, 2, 1, 1, 3,
	1, 2, 5, 4, 6, 4, 3, 3, 6, 5,
	5, 4, 3, 5, 1, 3, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 4,
	5, 8, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 3, 5, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 4, 3, 2, 4, 3, 0, 2, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 0, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	4, 3, 4, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 0, 1, 3,
	1, 2, 3, 1, 1, 1, 0, 2, 0, 2,
	1, 1, 5, 1, 3, 2, 5, 4, 3, 3,
	3, 5, 3, 8, 10, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 8, 0, 1, 2, 4, 0, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 6, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 6, 6,
	3, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 4, 4, 1, 1, 2, 3, 4, 4,
	5, 3, 1, 1, 3, 3, 1, 1, 1, 1,
	0, 3, 1, 1, 2, 2, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 4, 8, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 1, 2, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 1, 3, 2, 2,
	4, 2, 6, 1, 4, 6, 3, 2, 0, 3,
	0, 3, 1, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 3, 2, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 6, 8, 8, 8, 8, 4, 6, 7,
	7, 7, 9, 4, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 0, 2, 1, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 1, 1, 0, 2,
	4, 2, 4, 1, 3, 5, 4, 6, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -306, -1, -3, -8, -9, -10, -11, -12, -14,
	-48, -15, -16, -17, -55, -56, -57, -62, -63, -64,
	-60, -59, -58, -18, -24, -27, -19, -66, -28, -29,
	-30, -31, -32, -33, -4, 6, 7, -70, 9, 10,
	30, -51, 131, -49, -50, 134, 133, 170, 135, 163,
	64, 259, -65, 262, 263, -311, -199, 168, 169, 137,
	216, 217, 20, 37, 264, 266, 31, 32, 185, -5,
	-87, -6, 8, 356, 132, 260, 165, 164, 26, 408,
	-307, 68, 473, -149, 15, -67, -312, -67, -67, -67,
	-67, -67, -255, -197, 106, 68, 23, -193, 144, 87,
	347, 140, -200, 229, 231, -191, -192, 193, 203, 44,
	151, 150, 141, 229, 141, 142, 144, 347, 140, 178,
	177, 229, 231, 141, -106, -213, 72, -204, 405, 247,
	154, 420, 421, 132, 237, 241, 190, 259, 273, 267,
	301, 289, 406, 422, 155, 211, 139, 287, 290, 334,
	153, 244, 204, 423, 323, 329, 214, 81, 262, 343,
	424, 156, 208, 210, 209, 198, 215, 36, 166, 285,
	250, 278, 219, 193, 425, 413, 276, 28, 188, 426,
	331, 306, 427, 410, 248, 256, 330, 281, 277, 137,
	157, 151, 180, 429, 307, 311, 430, 335, 234, 431,
	432, 433, 143, 240, 271, 272, 434, 194, 337, 245,
	305, 33, 152, 407, 48, 175, 338, 38, 309, 37,
	315, 435, 304, 299, 316, 436, 437, 438, 439, 254,
	252, 253, 255, 303, 270, 298, 206, 53, 138, 313,
	312, 314, 207, 333, 294, 292, 440, 441, 249, 158,
	236, 442, 443, 279, 18, 444, 445, 341, 169, 251,
	42, 446, 447, 448, 173, 239, 257, 449, 450, 451,
	332, 308, 310, 192, 452, 282, 148, 453, 177, 454,
	409, 238, 375, 339, 275, 455, 159, 266, 174, 168,
	342, 456, 217, 457, 458, 459, 160, 460, 232, 231,
	263, 374, 264, 325, 212, 461, 462, 463, 464, 202,
	187, 345, 336, 52, 216, 320, 465, 269, 150, 218,
	466, 242, 260, 43, 7, 205, 246, 326, 213, 203,
	296, 176, 467, 468, 283, 284, 302, 268, 297, 261,
	178, 179, 170, 258, 344, 321, 411, 229, 291, 288,
	182, 295, 469, 144, 470, 183, 265, 340, 243, 286,
	322, 141, 124, 290, 334, 131, 324, 325, 331, -249,
	332, 177, 180, -217, 141, -186, 323, 234, 380, 183,
	184, 72, 142, 143, 33, 336, 335, 327, -213, 145,
	265, -76, 135, 171, -106, -201, -201, -201, -201, -45,
	72, 218, -45, 30, 72, 72, 36, 72, 264, 326,
	326, 75, 409, 186, 6, -69, 5, -182, 144, 146,
	261, -88, -92, -215, -213, -205, 74, 376, 377, 378,
	379, 380, 393, 373, 394, 395, 381, 382, 396, 397,
	398, 383, 384, 399, 400, 402, 403, 401, 181, 387,
	386, 385, 388, 389, 51, 391, 390, 392, -3, -162,
	17, 16, -73, 54, 55, -68, -81, 115, -83, -213,
	-114, 89, -120, 29, 72, -204, 24, -119, -205, -115,
	-141, -140, -95, 124, 125, 126, 113, 114, 121, 90,
	127, -127, -125, -126, -128, -130, -131, 74, 73, 82,
	75, 76, 77, 78, 83, 376, 377, 378, 379, 380,
	393, 394, 395, 381, 382, 396, 397, 398, 383, 384,
	399, 400, 402, 403, 401, 387, 386, 385, 388, 389,
	391, 390, 392, 84, 85, -206, -138, -307, 58, 59,
	171, 140, 357, 358, 359, 360, 361, 404, 161, 365,
	92, 47, 346, 355, 354, 353, 351, 352, 348, 350,
	349, 367, 368, 147, 347, 119, 356, -182, -182, 11,
	-99, -100, -106, -109, -213, -171, 261, -178, -175, 335,
	336, -176, -179, -173, -141, 315, 450, 451, 334, 290,
	333, -206, -213, -2, -5, 6, -106, -256, -244, -247,
	-207, 156, -267, -206, -203, 153, 72, -204, 136, 162,
	88, 412, 23, 25, 318, 376, 91, 124, 377, 378,
	379, 16, 20, 92, 123, 357, 186, 380, 131, 62,
	373, 348, 350, 346, 347, 324, 29, 10, 26, 164,
	197, 22, 117, 133, 95, 96, 97, 167, 24, 165,
	85, 161, 428, 19, 65, 11, 233, 13, 371, 372,
	14, 230, 147, 146, 108, 195, 142, 60, 8, 127,
	27, 105, 56, 381, 382, 416, 45, 185, 417, 58,
	106, 17, 351, 352, 31, 404, 383, 172, 418, 384,
	119, 200, 63, 50, 89, 83, 34, 86, 66, 87,
	15, 196, 61, 369, 199, 419, 107, 134, 356, 59,
	235, 140, 6, 366, 30, 163, 387, 386, 385, 388,
	201, 57, 359, 360, 389, 471, 141, 94, 367, 368,
	145, 84, 5, 44, 32, 9, 64, 67, 353, 354,
	355, 47, 51, 391, 390, 392, 93, 12, 370, 408,
	181, 142, -106, 356, -189, 147, -189, 178, 177, -189,
	-189, 141, 98, -52, -106, -300, -295, -301, 74, 72,
	-204, -205, -188, 147, -206, -188, -188, -188, -188, -188,
	-188, -188, -106, 128, -106, 72, 30, -187, 106, 12,
	347, 140, 72, 177, 180, 141, 178, 144, -202, -307,
	-207, -202, -251, 11, 108, 181, 181, 181, 182, 181,
	-185, 326, 328, 179, 329, 330, 12, -84, 106, 19,
	-307, -162, -162, -202, 72, 264, 145, -61, -3, -11,
	-9, -10, -3, 98, 30, 30, 74, 51, 30, -40,
	-39, -41, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 30, -279, 68, -239, 315, 72,
	-292, -293, -106, 75, 75, -67, -7, -5, -307, 21,
	22, 141, -106, 339, 69, 23, -307, -308, 70, -163,
	19, 31, -123, 75, 78, -150, -153, -83, -213, 50,
	-71, 21, 22, 80, 11, -209, 88, 87, 105, -208,
	23, 72, -204, -205, 74, 128, -83, -117, 108, 89,
	106, 107, 91, 110, 109, 120, 113, 114, 115, 116,
	117, 118, 119, 111, 112, 123, 98, 99, 100, 101,
	102, 103, 104, -183, -307, -95, -307, 129, 130, -120,
	-120, -120, -120, -120, -120, -120, -120, -307, -307, -307,
	-307, -307, -307, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -307, -307, -307, -307, -3, -134, -83, -307,
	-307, -307, -307, -307, -307, -307, -307, -307, -307, -307,
	-307, -307, -144, -83, -307, -310, -129, -307, -310, -129,
	-310, -129, -310, -307, -310, -129, -310, -129, -310, -310,
	-129, -310, -307, -307, -307, -307, -307, -307, -108, 27,
	-106, -86, -89, -90, -91, -110, -94, -307, -106, -95,
	-106, -99, -309, 69, 11, 67, -309, 69, 128, 69,
	-172, -177, 337, 339, 261, -176, -176, -212, -206, 74,
	29, 98, 30, 128, -149, -67, 70, 69, -247, 156,
	153, -219, -223, -225, -224, -226, -221, -222, 287, 290,
	294, 292, 288, 293, 124, 291, 296, 297, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 30, 166, 283,
	284, 285, 286, 307, 308, 309, 310, 311, 312, 313,
	314, 267, 289, 406, 268, 269, 270, 271, 272, 273,
	275, 276, 277, 278, 279, 280, 281, 72, -205, -267,
	68, -206, 23, 144, 72, 89, 72, 72, 72, -303,
	-302, -295, -298, -296, -301, -189, 72, 69, 145, 69,
	145, 71, -99, 24, 66, -101, -106, 72, 72, 72,
	72, -297, -295, -298, -214, -213, -203, -202, -187, 74,
	-83, -189, -189, -202, -202, -202, -106, -106, -106, -106,
	-187, -187, -202, -187, -184, 11, 108, 11, -184, -184,
	-83, -120, -295, 349, 115, 72, 72, 264, 72, -40,
	-40, 74, -40, 69, 98, -40, 70, -134, -278, 472,
	69, -294, 23, 339, 340, 316, -73, -3, -106, -202,
	340, 341, -92, -94, -307, -164, -207, 9, 108, 69,
	18, 69, -161, 25, 26, 128, -121, 51, 75, 78,
	-190, 49, -106, -83, -83, -132, 83, 89, 84, 85,
	-208, 115, -214, -207, -203, -120, -133, -138, -95, 79,
	108, 106, 107, 91, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -216,
	72, 74, 72, -119, -119, -206, -71, -79, -82, 115,
	-83, -213, -79, -79, -71, -308, -308, -82, -79, -79,
	-79, -82, -79, -71, -71, -79, -308, -308, -308, -308,
	-79, -79, -79, -79, -71, -79, -79, -79, -71, -308,
	69, -308, -3, -79, -79, -79, -308, -83, -83, -141,
	74, -79, -141, 74, -79, -120, 362, 363, 364, -79,
	-79, -71, -142, -143, 93, -141, -308, -120, -206, -206,
	-79, -80, -79, -79, -79, -167, 173, -106, 30, 69,
	-102, -104, -103, -105, 56, 60, 62, 57, 58, 59,
	63, -197, -86, -93, 47, -307, -111, 173, -112, 23,
	-215, 64, 146, 65, -167, 67, -86, -106, -86, -109,
	-213, 115, -175, -178, 69, 338, 340, 341, -172, -233,
	123, 66, 86, -83, -207, -214, -162, -73, -257, -258,
	-259, -207, 74, 75, -244, -245, -246, -247, -260, 156,
	-266, 148, 150, 44, -248, 157, 142, 45, -220, -234,
	321, -227, 68, -227, -227, 295, 287, 290, 288, -227,
	-227, -227, -227, -227, -232, 290, -232, -232, -232, -232,
	288, 68, 68, -227, -227, -227, -236, 68, -236, 282,
	-237, 68, -237, -237, -237, -237, -267, -267, -83, -210,
	67, -159, -106, -202, 24, -202, -46, 190, 162, 68,
	-299, 69, 29, -304, 230, 69, 71, -106, -106, -106,
	-295, -295, -301, -275, 160, 155, -106, 69, 69, 72,
	72, -252, 11, 108, -187, -213, -213, -106, -122, 23,
	-187, -77, 167, 67, -310, -308, 72, -39, -119, 70,
	-107, 27, 74, -293, -215, 315, 340, -71, -308, -54,
	-53, -194, 136, 133, 134, 138, 139, -270, 318, 132,
	290, 81, 29, 15, 357, 173, 411, 72, 174, -308,
	69, 128, 52, -123, -123, -153, -181, 19, 11, 47,
	47, -72, 57, 83, 84, 85, 128, -307, -133, -120,
	-120, -120, -77, 88, -308, -79, 69, -308, 128, -308,
	-308, -79, -154, 369, -154, -308, -308, -308, -308, -308,
	-308, -79, -79, -308, -154, -154, -154, -154, -308, -308,
	-308, -308, -79, -308, -308, -308, -80, -83, -308, -308,
	-308, -308, 69, 67, 23, 11, 11, -308, 11, 11,
	-308, -308, 11, -120, -120, -120, -308, -308, -79, -145,
	-143, 95, -83, -308, -308, 69, 69, -308, -308, -308,
	-308, -118, 30, 47, -307, -3, -307, -170, -174, -141,
	-203, -89, -90, -90, -89, -90, 56, 56, 56, 61,
	56, 61, 56, -103, -215, -308, -308, -137, 189, -307,
	34, -215, -112, 142, 142, 142, -113, 12, -86, -113,
	-113, 128, -177, -180, 342, 339, 345, 72, 74, 128,
	-163, 69, -259, 98, -247, 68, 72, 44, -205, 45,
	-248, 142, 45, -248, -253, 72, -253, 45, 83, 89,
	-230, -231, -238, -241, -228, 29, 66, 318, 148, 45,
	44, 81, -235, 322, 75, -232, -232, -227, -227, -227,
	295, -227, -232, -233, 30, -233, -233, -233, -233, -232,
	-242, 74, -242, 75, -236, 75, 70, 66, -206, -3,
	23, -47, 8, 9, 10, -280, -281, -282, 72, 108,
	195, 196, -302, 231, 240, 88, 16, 408, -296, -301,
	145, 145, -202, -106, -295, -202, -202, -113, 72, 72,
	-184, -187, 34, -120, -298, 183, 184, -167, 141, -294,
	-190, 69, -201, -198, -271, -248, -277, -246, -247, -276,
	149, 157, 173, 156, -198, -271, 156, 153, -248, 157,
	148, 149, -195, -248, 145, 23, -198, -198, -254, 98,
	-198, 173, 23, -207, -207, 53, -106, -78, -160, 115,
	-207, -80, -77, 88, -120, -308, -82, -155, -154, 115,
	-214, -155, -155, -308, -206, -307, -154, -155, -155, -154,
	-154, -154, -308, -308, -154, -155, -155, -155, -155, -308,
	-155, -155, -155, -308, -218, 124, 287, 166, 285, 278,
	305, 292, 320, 283, 321, -216, -218, -120, -120, -120,
	-120, -120, 11, 11, 11, 405, -149, 97, -83, 94,
	-120, -120, -169, 66, -170, -136, -139, -138, -307, -3,
	-308, -164, 6, 408, -168, -206, -113, 69, 98, 98,
	-97, -96, 66, 67, -98, 66, -96, 56, 56, -166,
	68, 69, -138, -307, -168, -120, -112, -307, -307, -307,
	-149, -83, -113, 339, 343, 344, -258, -259, -262, -261,
	-206, -205, 148, -266, 157, -248, -266, -253, -253, 68,
	83, -120, 9, 45, 45, 74, 70, -233, -233, -232,
	-227, -233, 72, 124, -233, 70, 69, 70, 69, 70,
	69, -116, 426, 89, -106, -159, -159, 66, 70, 69,
	-219, 72, 72, 72, -298, 241, -304, 238, 74, 72,
	-106, -295, -187, -120, -232, -106, -72, -53, 68, -243,
	72, -205, -201, -253, -192, 148, 72, 72, -201, 72,
	-205, 72, -205, -206, 45, 45, 72, -106, -206, -243,
	72, -83, -206, -206, -94, 128, -113, 11, 69, -81,
	-308, -120, -155, 128, -155, -149, 173, -155, -155, -155,
	-308, -227, -227, -227, -237, -227, 272, -227, 272, -308,
	-308, 19, 19, 19, 19, -308, -120, -120, -120, -307,
	-75, 366, -83, 69, 69, 28, -169, 69, -308, -308,
	47, -308, -308, 69, -149, -174, -83, -83, -83, 68,
	-83, -165, -206, 189, -308, -112, -197, -165, -165, -165,
	-162, 70, 69, -227, -227, 45, -253, -165, -126, -233,
	-232, 74, -232, 75, 75, 426, 68, -3, -106, -283,
	-284, -285, 81, 407, 89, 197, 198, 158, 199, 200,
	201, -282, -219, -219, -219, -305, 230, 88, 239, 16,
	23, -286, -185, -78, -243, -151, 161, 162, -219, -219,
	-210, -250, -248, 45, 72, -196, 145, 23, 145, -151,
	-243, 30, 133, 27, -207, -146, 13, -86, -160, -160,
	115, -308, 16, -232, 72, -120, -120, -120, -120, -308,
	-308, -308, -120, -308, 74, -120, -120, 45, -139, -136,
	47, -3, -307, -206, -162, -165, 70, 69, -138, -111,
	-215, -308, -308, -308, -264, -263, 67, 152, 81, -261,
	-161, -161, 70, -233, -233, 70, 70, -262, -159, 19,
	-159, -285, 74, 201, 197, 201, 201, 201, 201, 202,
	16, 408, -304, 238, 74, 74, -287, 38, -289, 39,
	11, 70, 72, -220, -220, 68, -253, 68, 72, -206,
	-151, 29, 29, -307, -147, 14, 16, -113, -81, -134,
	-308, -308, -308, -308, -74, 108, 408, -308, -308, 9,
	-136, -3, 70, -206, -112, -263, 72, -254, 74, 159,
	70, 188, -21, -3, -9, -10, -11, -12, -14, -48,
	-15, -16, -22, -23, -17, -55, -56, -65, -63, -64,
	-60, -59, -26, -24, -27, -19, -28, -29, -30, -25,
	92, 147, 219, 259, 36, 36, 193, 194, 238, 74,
	72, 239, -229, 146, -290, 43, -288, -240, 42, 16,
	-86, -262, -210, -262, -120, -268, -269, 173, -148, -83,
	-135, -85, -83, -146, -160, -149, -308, 406, 63, 409,
	-170, -308, 75, -106, -265, -264, 189, -159, -83, -83,
	72, -44, -211, 222, 223, 224, -207, -34, -21, 239,
	23, -166, 75, -289, 16, -291, 40, 41, 74, -113,
	70, 68, 70, -308, 69, -206, 69, -147, -156, 374,
	375, 53, 407, 410, 68, -152, 191, 192, -35, -36,
	93, 94, 220, 221, 225, -219, 69, 473, 74, 38,
	74, 16, 16, -146, -265, -262, -265, -269, 47, -85,
	-308, -157, 91, -158, 258, 373, -124, 75, 127, -157,
	53, -165, -159, 72, 72, 97, 95, -36, -83, -34,
	19, 19, 19, 29, -207, 97, -21, 74, 74, -147,
	70, 175, -158, 452, 428, 189, 452, 428, -119, 408,
	70, -13, -20, -12, -9, -10, -11, 259, 92, -34,
	94, 473, -45, 75, -3, -43, -42, 75, -45, 227,
	89, 228, 72, -120, -265, 176, 88, -206, 409, -273,
	-274, 66, -159, -34, 473, -34, 97, 95, -37, -38,
	96, -21, 69, 226, -307, -158, 410, -274, 66, -273,
	66, 10, 9, 473, 97, 473, 147, -34, 97, 95,
	-38, -83, -42, -120, 172, -272, 160, 155, 158, 30,
	-272, 97, 92, 473, 147, -34, 94, -308, -308, 154,
	29, 83, 97, 473, -34, 147, 97, 473, 147,
}
var yyDef = [...]int{

	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 589, 589, 589, 589, 589,
	589, 676, -2, 440, 441, 0, 0, 0, 0, -2,
	558, 559, 560, 564, 565, 580, -2, 1456, 1456, 1456,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 39,
	0, 0, 55, 56, 982, 0, 583, 572, 573, 0,
	0, 1454, 2, 922, 0, 598, 591, 0, 982, 982,
	0, 0, 86, 0, 0, 0, 677, 0, 0, 0,
	980, 980, 0, 980, 980, 0, 1003, 0, 977, 999,
	1000, 1001, 0, 0, 978, 0, 978, 978, 978, 978,
	978, 978, 978, 0, 504, 694, 1012, 1013, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 0, 0, 0, 551, 0, 1457, 1457, 519, 0,
	521, 0, 0, 0, 0, 0, 531, 534, 0, 922,
	922, 1457, 386, 387, 388, 555, 556, 545, 557, 0,
	0, 0, 0, 0, 584, 585, 586, 587, 588, 199,
	201, 0, 221, 0, 224, 227, 1018, 566, 0, 0,
	1043, 1044, 0, 0, 589, 0, 593, 0, 0, 983,
	561, 44, 45, 0, 678, 679, 680, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 0, 928,
	0, 0, 601, 599, 600, 590, 0, 612, 633, 0,
	703, 0, 708, 710, -2, -2, 0, 751, 752, 753,
	754, 755, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 780, 781, 782, 783, 784, 785, 895, 896, 897,
	898, 899, 900, 901, 902, 1423, 1424, 1425, 1426, 1427,
	1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449,
	1451, 1452, 1453, 712, 713, 892, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	883, 0, 854, 854, 854, 854, 854, 854, 854, 854,
	854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 68, 694, 72, 1401, 0, 954, -2,
	-2, 956, 0, 0, 0, -2, -2, -2, -2, 1210,
	-2, 892, 0, 87, 914, 589, 88, 0, 261, 262,
	0, 1223, 410, 1010, 1011, 1212, 1006, 1007, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 980, 0, 485, 0, 486, 0, 132, 126, 127,
	128, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 505, 1457, 551, 508, 0, 0,
	980, 980, 1457, 1457, 1457, 0, 0, 0, 517, 1458,
	1459, 518, 0, 412, 413, 551, 551, 1457, 551, 548,
	0, 548, 528, 548, 546, 547, 0, 533, 0, 0,
	0, 540, 541, 542, 567, 0, 0, 574, 576, 577,
	578, 579, 575, 0, 0, 0, 203, 0, 0, 223,
	205, 0, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 226, 0, 1016, 1019, 571,
	1034, 1035, 0, 1045, 1046, 598, 41, 51, 0, 594,
	595, 0, 1457, 0, 0, 0, 0, 50, 1455, 36,
	0, 0, 923, 926, 927, 915, 916, 919, 0, 0,
	596, 602, 603, 592, 0, 613, 0, 0, 0, 634,
	0, 636, 637, 638, 639, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 731, 732, 733,
	734, 735, 736, 709, 0, 723, 0, 0, 0, 772,
	773, 774, 775, 776, 777, 778, 0, 601, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 0, 0, 0, 601, 0, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 0, 884, 0, 837, 846, 0, 838, 847,
	839, 848, 840, 0, 841, 849, 842, 850, 843, 844,
	851, 845, 0, 0, 0, 745, 0, 0, 70, 0,
	693, 0, 640, 642, 643, 644, -2, 0, 697, 743,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 0,
	73, 75, 0, 0, 1401, 957, 958, 360, 971, 972,
	973, 0, 969, 0, 922, 598, 427, 0, 263, 0,
	0, 272, 350, 281, 282, 283, 343, 285, 343, 343,
	0, 343, 343, 343, 343, 343, 357, 357, 357, 357,
	357, 326, 327, 328, 329, 330, 0, 0, 303, 343,
	343, 343, 307, 333, 334, 335, 336, 337, 338, 339,
	340, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	345, 345, 347, 347, 347, 347, 347, 0, 0, 409,
	0, 1004, 84, 0, 1457, 0, 1457, 0, 0, 98,
	154, 140, 97, 138, 137, 0, 125, 0, 0, 0,
	0, 131, 500, 979, 0, 493, 64, 494, 495, 496,
	497, 498, 133, 499, 695, 1014, 1015, 506, 507, 552,
	553, 0, 0, 511, 512, 513, 514, 515, 516, 414,
	522, 523, 524, 530, 551, 0, 0, 0, 658, 551,
	532, 737, 535, 854, 0, 569, 568, 0, 581, 200,
	202, 204, 222, 0, 0, 225, 228, 0, 0, 0,
	0, 1037, 0, 1039, 1041, 0, 601, 0, 0, 475,
	562, 563, 46, 47, 0, 0, 938, 929, 0, 0,
	0, 0, 918, 920, 921, 0, 0, 903, 0, 0,
	604, 597, 38, 704, 705, 707, 724, 0, 726, 728,
	635, 614, 0, 893, -2, 714, 715, 739, 740, 741,
	0, 0, 0, 0, 737, 719, 0, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 771,
	868, 869, 0, 769, 770, 779, 0, 0, 747, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 742,
	0, 948, 0, 0, 0, 0, 819, 0, 0, 754,
	895, 0, 754, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 887, 0, 0, 855, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 0, 692, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 1326, 653, 0,
	697, 0, 0, 0, 701, 0, 701, 67, 701, 69,
	0, 696, 955, 0, 0, 0, 78, 79, 74, 959,
	0, 965, 966, 967, 893, 0, 928, 601, 260, 428,
	430, 433, 434, 435, 264, 266, 267, 268, 0, 1223,
	401, 1338, 1380, -2, 393, 1252, -2, -2, 271, 352,
	351, 284, 0, 357, 357, 343, 343, 343, 343, 312,
	357, 315, 318, 319, 360, 0, 360, 360, 360, 360,
	357, 0, 0, 304, 305, 306, 295, 0, 296, 345,
	298, 0, 299, 300, 301, 302, 407, 408, 0, 0,
	0, 0, 0, 92, 981, 93, 0, 156, 157, 101,
	96, 0, 0, 141, 0, 0, 136, 259, 0, 487,
	0, 489, 130, 491, 501, 502, 1457, 0, 0, 1457,
	1457, 701, 0, 0, 525, 549, 550, 548, 551, 0,
	529, 543, 0, 0, 536, 0, 570, 206, 207, 229,
	70, 0, 1017, 1036, 0, 1040, 1042, 596, 52, 442,
	443, 1456, -2, 476, 996, 476, 476, 463, 377, 476,
	986, 987, 988, 989, 990, 991, 992, 993, 0, 0,
	0, 0, 0, 924, 925, 917, 0, 974, 975, 904,
	905, 85, 605, 725, 727, 729, 0, 745, 716, 737,
	720, 0, 717, 0, 711, 0, 0, 619, 0, 619,
	619, 0, 805, 0, 806, 0, 619, 619, 0, 0,
	0, 0, 0, 0, 812, 813, 814, 815, 619, 619,
	619, 619, 0, 619, 619, 619, 0, 750, -2, 816,
	817, 818, 0, 0, 0, 0, 0, 861, 0, 0,
	862, 827, 0, 0, 0, 0, 0, 833, 914, 0,
	888, 0, 0, 836, 856, 0, 0, 857, 858, 859,
	860, 942, 0, 0, 0, 933, 0, 701, 950, 0,
	0, 641, 672, 674, 0, 669, 682, 683, 685, 0,
	687, 0, 689, 690, 660, 647, 744, 648, 0, 0,
	0, 697, 657, 0, 0, 0, 914, 0, 701, 60,
	61, 0, 76, 77, 0, 0, 83, 361, 362, 0,
	100, 0, 431, 0, 265, 0, 0, 0, 0, 379,
	393, 389, 390, 393, 384, 394, 385, 0, 273, 0,
	275, 276, 277, 278, 279, 0, 0, 356, 0, 364,
	366, 0, 280, 353, 0, 360, 360, 357, 310, 311,
	343, 316, 360, 320, 0, 321, 322, 323, 324, 360,
	0, 341, 0, 0, 297, 0, 424, 0, 1005, 84,
	84, 0, 158, 159, 160, 0, 102, 103, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 139, 135,
	0, 0, 492, 65, 134, 509, 510, 520, 415, 416,
	551, 527, 0, 738, 537, 538, 539, 357, 0, 1038,
	604, 0, 445, 0, 1456, 393, 0, 464, 465, 0,
	477, 478, 479, 0, 0, 1456, 0, 0, 0, 478,
	0, 0, 0, 0, 997, 998, 0, 0, 0, 378,
	0, 0, 0, 940, 939, 930, 37, 701, 0, 615,
	894, 0, 718, 0, 721, 619, 748, 790, 620, 610,
	0, 791, 792, 619, 616, 914, 807, 794, 795, 808,
	809, 810, 619, 619, 811, 799, 798, 797, 800, 619,
	803, 802, 804, 786, 0, 343, 343, 873, 343, 347,
	876, 343, 878, 343, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 885, 835, 891, 0,
	0, 0, 53, 0, 942, 931, 944, 946, 0, 0,
	0, 0, -2, 1188, 0, 664, 914, 0, 0, 0,
	666, 673, 0, 0, 667, 0, 668, 686, 688, 645,
	0, 0, 649, 0, 0, -2, 656, 0, 0, 0,
	922, 702, 59, 80, 81, 82, 429, 432, 0, 395,
	343, 343, 0, 399, 0, 393, 400, 381, 383, 0,
	274, 354, 0, 363, 365, 367, 344, 308, 309, 360,
	317, 313, 358, 359, 325, 357, 0, 357, 0, 348,
	0, 411, 425, 0, 0, 90, 0, 0, 109, 0,
	105, 0, 0, 0, 99, 0, 143, 0, 146, 147,
	488, 490, 526, 659, 1028, 691, 85, 444, 0, 472,
	0, 0, 448, 1004, 391, 0, -2, 449, 450, 455,
	456, 457, 458, 459, 0, 470, 0, 452, 0, 472,
	0, 467, 0, 0, 48, 0, 906, 0, 85, 85,
	787, 722, 789, 0, 793, 0, 0, 788, 796, 801,
	820, 870, 357, 874, 875, 877, 879, 880, 882, 822,
	821, 0, 0, 0, 0, 828, 0, 0, 0, 0,
	0, 0, 889, 0, 0, 0, 54, 0, 947, -2,
	0, 0, 71, 0, 922, 951, 952, 953, 670, 0,
	675, 0, 662, 0, 697, 654, 0, 0, 0, 0,
	58, 369, 0, 919, 919, 380, 382, 0, 355, 314,
	360, 342, 360, 0, 0, 426, 0, 84, 0, 84,
	110, 111, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 104, 106, 107, 108, 142, 0, 0, 145, 0,
	0, 1030, 1024, 0, 0, 447, 473, 0, 272, 272,
	0, 393, 392, 0, 466, 0, 994, 995, 0, 461,
	472, 0, 0, 0, 941, 911, 0, 701, 0, 606,
	611, 617, 0, 871, 872, 0, 0, 0, 0, 829,
	830, 831, 863, 834, 886, 0, 0, 0, 945, 932,
	0, 936, 0, 665, 57, 0, 661, 0, 650, 652,
	697, 698, 699, 700, 368, 372, 0, 377, 0, 396,
	397, 398, 0, 331, 332, 346, 349, 0, 91, 0,
	0, 112, 113, 114, 115, 117, 118, 0, 0, 0,
	0, 0, 144, 0, 149, 150, 984, 1032, -2, 0,
	0, 446, 474, 269, 270, 0, 1004, 0, 451, 460,
	462, 0, 469, 0, 42, 0, 0, 906, 85, 914,
	823, 825, 824, 826, 0, 0, 0, 852, 853, 0,
	935, 0, 671, 663, 655, 373, 374, 0, 376, 0,
	370, 0, 84, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	0, 0, 0, 0, 119, 120, 121, 122, 0, 152,
	0, 148, 660, 0, 1024, 0, 1026, 0, 1023, 0,
	701, 0, 0, 0, 468, 0, 481, 0, 912, 913,
	907, 908, 910, 911, 607, 621, 832, 0, 0, 0,
	943, -2, 375, 0, 89, 371, 161, 95, 0, 0,
	1006, 0, 0, 188, 189, 190, 1008, 0, 230, 151,
	0, 35, 0, 1031, 0, 1029, 0, 0, 1025, 906,
	370, 0, 370, 480, 0, 0, 0, 43, 0, 0,
	0, 864, 0, 867, 0, 84, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 186, 0, 0, 153, 985,
	1033, 0, 0, 911, 453, 0, 471, 482, 0, 909,
	618, 622, 0, 625, 0, 0, 0, 631, 0, 623,
	865, 0, 0, 162, 163, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 1009, 123, 231, 1027, 1021, 40,
	370, 0, 0, 626, 627, 628, 629, 630, 0, 0,
	402, 84, 164, 165, 166, 167, 168, 0, 170, 0,
	0, 0, 182, 183, 184, 0, 191, 193, 194, 195,
	0, 197, 198, 187, 454, 0, 0, 632, 0, 403,
	404, 0, 94, 0, 0, 0, 0, 0, 0, 179,
	0, 185, 0, 196, 0, 624, 866, 405, 0, 406,
	0, 0, 0, 0, 0, 174, 175, 0, 0, 0,
	180, 0, 192, 0, 0, 417, 419, 420, 0, 0,
	418, 169, 171, 0, 177, 0, 0, 483, 484, 421,
	422, 423, 0, 0, 0, 176, 0, 181, 178,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 473,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:458
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:462
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:469
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:509
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:515
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:522
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:528
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:539
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:546
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:552
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:559
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:568
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:578
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:584
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:588
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:598
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:604
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:608
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:614
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:626
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:638
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:648
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:654
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:658
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:705
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:709
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:719
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:726
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:745
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:753
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:767
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:771
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:776
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:781
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:806
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:810
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:818
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:826
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:834
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:838
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:842
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:850
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:859
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:863
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:870
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:878
		{
			yyVAL.procedureParams = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:915
		{
			yyVAL.characteristics = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:939
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:947
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:955
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:971
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:977
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:982
		{
			yyVAL.str = ""
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1018
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1086
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1090
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1108
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1112
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1116
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1130
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.str = BeforeStr
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1150
		{
			yyVAL.str = AfterStr
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = InsertStr
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.str = UpdateStr
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.str = DeleteStr
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1169
		{
			yyVAL.triggerOrder = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1183
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1199
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 171:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1209
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1219
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1225
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 176:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1230
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1235
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 178:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1241
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1253
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1259
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1265
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1269
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1273
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1277
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1285
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1300
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1342
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1346
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1364
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1386
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1390
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.statement = &Resignal{}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1440
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1444
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1452
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1456
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1467
		{
			yyVAL.exprs = nil
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1471
		{
			yyVAL.exprs = nil
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1475
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1523
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1540
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1557
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1567
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1580
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1594
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 331:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1961
		{
			yyVAL.sqlVal = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1970
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1974
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1982
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1992
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2000
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2009
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.colKeyOpt = colKey
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2087
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2091
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.indexOptions = nil
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2153
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 402:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2247
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 403:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2251
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 404:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2255
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 405:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2259
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 406:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2263
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2269
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2287
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2297
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2302
		{
			yyVAL.str = ""
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2349
		{
			yyVAL.boolean = true
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.boolean = true
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yyVAL.boolean = false
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = yyDollar[1].str
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2405
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = string("")
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2428
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2445
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2455
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2462
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2481
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2490
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 454:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2494
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2503
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2522
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2526
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2533
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2555
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2564
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2568
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2572
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2576
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnOrder = nil
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2597
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2603
		{
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
		}
	case 480:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2613
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2629
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2633
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2653
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2665
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2671
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2679
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2683
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2691
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2699
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2707
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2715
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2731
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2740
		{

		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2754
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2763
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2769
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2774
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2778
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2782
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2786
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2791
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2795
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2799
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2803
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2807
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2811
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2815
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2823
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2827
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2835
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2839
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2843
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2847
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2851
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2856
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2865
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2869
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2877
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2895
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2900
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2904
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2909
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2913
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2931
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2937
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2943
		{
			yyVAL.boolean = false
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.boolean = true
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2963
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2977
		{
			yyVAL.showFilter = nil
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = SessionStr
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.str = GlobalStr
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.statement = &Begin{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			yyVAL.statement = &Begin{}
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3029
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.statement = &Commit{}
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.statement = &Rollback{}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3061
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3065
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3069
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3089
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3103
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.statement = &OtherRead{}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3128
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3132
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			setAllowComments(yylex, true)
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3152
		{
			yyVAL.bytes2 = nil
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.str = UnionStr
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3166
		{
			yyVAL.str = UnionAllStr
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = UnionDistinctStr
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.byt = 0
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.byt = 1
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.str = SQLCacheStr
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.str = ""
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			yyVAL.str = DistinctStr
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = ""
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = StraightJoinHint
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3220
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3228
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3251
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3257
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3269
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3275
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3279
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3283
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3289
		{
			yyVAL.over = nil
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.over = yyDollar[1].over
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3298
		{
			yyVAL.frame = nil
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3302
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3312
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.frameBound = &frameBound{Type: UnboundedPreceding}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.frameBound = &frameBound{Type: UnboundedFollowing}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.frameBound = &frameBound{Type: CurrentRow}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.frameBound = &frameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.frameBound = &frameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3387
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3423
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3433
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3437
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3453
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3465
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3469
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3480
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3495
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3499
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = nil
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3527
		{
			yyVAL.columns = nil
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3564
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3572
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3582
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3584
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3588
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3594
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3596
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3599
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3601
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.str = JoinStr
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.str = JoinStr
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = JoinStr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.str = StraightJoinStr
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = LeftJoinStr
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = LeftJoinStr
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = RightJoinStr
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = RightJoinStr
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3654
		{
			yyVAL.str = NaturalJoinStr
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3699
		{
			yyVAL.indexHints = nil
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3703
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3707
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = nil
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3784
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3792
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3796
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3800
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3808
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = IsNullStr
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = IsNotNullStr
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = IsTrueStr
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = IsNotTrueStr
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = IsFalseStr
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = IsNotFalseStr
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = EqualStr
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = LessThanStr
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = GreaterThanStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = LessEqualStr
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = GreaterEqualStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = NotEqualStr
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3873
		{
			yyVAL.expr = nil
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3877
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3897
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3913
		{
			yyVAL.selectExprs = nil
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3934
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3980
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3988
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3996
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4020
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4062
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4066
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4086
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 787:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4090
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4100
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4104
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4108
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4112
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4116
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4120
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 801:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4173
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4177
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4185
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4189
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4193
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4197
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4201
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4205
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4209
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4213
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4224
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4228
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4232
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4236
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4240
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4244
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4248
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 823:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4252
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 824:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 825:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 826:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 829:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 830:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 831:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 832:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 834:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4318
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4352
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4375
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 852:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4384
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 853:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4388
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4409
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4413
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4417
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4421
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4425
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4429
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = BooleanModeStr
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 866:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = QueryExpansionStr
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4471
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4483
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4487
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4497
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4509
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4517
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = nil
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4531
		{
			yyVAL.str = string("")
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4535
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4545
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4551
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = nil
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4560
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4574
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &NullVal{}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4627
		{
			yyVAL.exprs = nil
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4641
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = nil
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.orderBy = nil
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = AscScr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = AscScr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = DescScr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.limit = nil
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4713
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4717
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = ForUpdateStr
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = ShareModeStr
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4757
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4761
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4770
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4774
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4778
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4797
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4802
		{
			yyVAL.assignExprs = nil
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4806
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4826
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4871
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4888
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.setScope = SetScope_Global
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.setScope = SetScope_Session
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.setScope = SetScope_Session
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.bytes = []byte("charset")
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &Default{}
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4983
		{
			yyVAL.byt = 0
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.byt = 1
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4988
		{
			yyVAL.byt = 0
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4990
		{
			yyVAL.byt = 1
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4993
		{
			yyVAL.byt = 0
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yyVAL.byt = 1
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4998
		{
			yyVAL.str = ""
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5000
		{
			yyVAL.str = IgnoreStr
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5003
		{
			yyVAL.sqlVal = nil
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5005
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.empty = struct{}{}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.empty = struct{}{}
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5013
		{
			yyVAL.empty = struct{}{}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.empty = struct{}{}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.empty = struct{}{}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.empty = struct{}{}
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.empty = struct{}{}
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.empty = struct{}{}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.empty = struct{}{}
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.empty = struct{}{}
		}
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5032
		{
			yyVAL.empty = struct{}{}
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.empty = struct{}{}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.empty = struct{}{}
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.str = UniqueStr
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = FulltextStr
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
			yyVAL.str = SpatialStr
		}
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5047
		{
			yyVAL.str = ""
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5052
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5054
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5096
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5101
		{
			yyVAL.str = string("")
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5111
		{
			yyVAL.EnclosedBy = nil
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5115
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5120
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5129
		{
			yyVAL.sqlVal = nil
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5133
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			yyVAL.sqlVal = nil
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5147
		{
			yyVAL.Fields = nil
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5151
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5156
		{
			yyVAL.Lines = nil
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5160
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5165
		{
			yyVAL.sqlVal = nil
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5169
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5175
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5181
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5185
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5195
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.lockType = LockRead
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5205
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.lockType = LockWrite
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			decNesting(yylex)
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5684
		{
			skipToEnd(yylex)
		}
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5689
		{
			skipToEnd(yylex)
		}
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			skipToEnd(yylex)
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5697
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
