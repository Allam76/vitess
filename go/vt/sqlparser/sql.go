// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	140, 869,
	-2, 130,
	-1, 44,
	181, 470,
	182, 470,
	-2, 458,
	-1, 51,
	1, 1272,
	424, 1272,
	-2, 490,
	-1, 388,
	126, 877,
	-2, 873,
	-1, 389,
	126, 878,
	-2, 874,
	-1, 490,
	96, 1192,
	126, 1192,
	-2, 71,
	-1, 491,
	96, 1094,
	126, 1094,
	-2, 72,
	-1, 496,
	96, 1050,
	126, 1050,
	-2, 836,
	-1, 498,
	96, 1132,
	126, 1132,
	-2, 838,
	-1, 701,
	5, 35,
	-2, 484,
	-1, 705,
	5, 35,
	-2, 483,
	-1, 927,
	1, 542,
	5, 542,
	12, 542,
	13, 542,
	14, 542,
	15, 542,
	17, 542,
	19, 542,
	30, 542,
	31, 542,
	55, 542,
	56, 542,
	57, 542,
	58, 542,
	59, 542,
	61, 542,
	62, 542,
	65, 542,
	66, 542,
	68, 542,
	69, 542,
	424, 542,
	-2, 569,
	-1, 930,
	66, 52,
	68, 52,
	-2, 56,
	-1, 1122,
	126, 880,
	-2, 876,
	-1, 1281,
	67, 328,
	-2, 1017,
	-1, 1284,
	67, 324,
	70, 324,
	-2, 952,
	-1, 1285,
	67, 325,
	70, 325,
	-2, 962,
	-1, 1363,
	67, 397,
	70, 397,
	-2, 361,
	-1, 1412,
	5, 36,
	-2, 635,
	-1, 1472,
	5, 35,
	-2, 813,
	-1, 1567,
	5, 35,
	-2, 73,
	-1, 1712,
	1, 590,
	5, 590,
	12, 590,
	13, 590,
	14, 590,
	15, 590,
	17, 590,
	19, 590,
	30, 590,
	31, 590,
	55, 590,
	56, 590,
	57, 590,
	58, 590,
	59, 590,
	61, 590,
	62, 590,
	65, 590,
	66, 590,
	68, 590,
	69, 590,
	424, 590,
	-2, 569,
	-1, 1831,
	5, 36,
	-2, 814,
	-1, 1861,
	5, 35,
	-2, 73,
	-1, 1920,
	5, 35,
	-2, 816,
	-1, 1960,
	41, 887,
	-2, 885,
	-1, 2005,
	5, 35,
	-2, 105,
	-1, 2065,
	5, 36,
	-2, 817,
	-1, 2128,
	424, 183,
	-2, 35,
}

const yyPrivate = 57344

const yyLast = 22189

var yyAct = [...]int{
	422, 60, 1326, 2193, 2161, 2171, 2127, 2069, 2126, 2162,
	1844, 2102, 2047, 2131, 7, 2004, 2130, 6, 2056, 1244,
	2136, 1934, 1788, 1960, 393, 2132, 8, 1725, 2135, 24,
	1623, 2134, 71, 2129, 5, 1324, 1898, 1269, 1620, 1237,
	486, 351, 1882, 1286, 1865, 1726, 1692, 1522, 2133, 421,
	852, 1097, 2070, 1235, 1693, 1239, 1278, 686, 1575, 1689,
	406, 60, 367, 1231, 1233, 1770, 92, 1268, 1699, 1703,
	1640, 1352, 1263, 1147, 372, 1319, 1160, 1275, 1674, 1598,
	1215, 391, 1053, 1282, 955, 1183, 1597, 1314, 1498, 1064,
	1222, 1559, 943, 1175, 352, 353, 923, 667, 356, 1124,
	724, 484, 1032, 501, 730, 942, 492, 504, 1302, 376,
	1046, 643, 481, 489, 774, 932, 2214, 2210, 2200, 2183,
	2173, 868, 765, 2165, 2156, 2105, 70, 1082, 75, 869,
	2175, 2095, 1866, 2160, 2062, 2145, 1789, 924, 2094, 1657,
	1868, 1441, 1178, 1816, 2061, 642, 102, 98, 99, 1507,
	100, 944, 1506, 945, 380, 1508, 1721, 1722, 94, 77,
	78, 79, 80, 81, 1258, 1259, 1720, 1257, 689, 690,
	363, 698, 365, 355, 389, 354, 715, 1542, 1288, 1290,
	1290, 1905, 502, 104, 103, 1303, 1289, 435, 688, 441,
	443, 442, 439, 440, 438, 437, 436, 1625, 1308, 87,
	1303, 645, 1807, 648, 444, 445, 1805, 1294, 1296, 1871,
	1295, 1315, 366, 358, 1957, 1956, 665, 109, 1955, 1954,
	109, 29, 1953, 61, 32, 33, 109, 1951, 1952, 2032,
	2033, 1985, 817, 816, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 395, 1673, 828, 1869, 1870, 1872,
	1873, 1874, 89, 91, 2071, 109, 86, 2003, 109, 506,
	1576, 109, 96, 95, 2099, 2100, 1088, 696, 697, 670,
	2128, 3, 109, 682, 506, 61, 32, 33, 681, 1333,
	109, 29, 68, 61, 32, 33, 1626, 2048, 691, 683,
	684, 2159, 692, 689, 690, 1087, 1577, 34, 1729, 1627,
	1534, 1085, 2144, 1622, 93, 34, 1332, 364, 101, 647,
	646, 1089, 1216, 1883, 1884, 1539, 1538, 2001, 348, 2206,
	1935, 1602, 2215, 2212, 666, 2201, 666, 666, 72, 1240,
	1242, 361, 2184, 1937, 666, 1086, 1535, 669, 673, 644,
	666, 675, 68, 653, 2035, 365, 1893, 1580, 60, 60,
	1540, 1022, 1532, 1303, 349, 1013, 1497, 1496, 1533, 1549,
	1293, 702, 2197, 1892, 704, 2027, 1495, 640, 2168, 2172,
	2167, 1595, 718, 60, 671, 674, 320, 672, 1317, 97,
	1422, 703, 1578, 1579, 840, 841, 1993, 94, 837, 732,
	1386, 839, 1092, 1385, 1834, 1511, 707, 708, 1503, 1520,
	1401, 1264, 778, 761, 1936, 1095, 1867, 951, 938, 808,
	1241, 661, 818, 1419, 88, 828, 828, 1537, 1253, 1060,
	2028, 850, 773, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 2060, 867, 870, 870, 870, 876,
	870, 870, 876, 870, 876, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 1986,
	928, 2137, 723, 1891, 1821, 2195, 1621, 57, 2196, 2137,
	2194, 96, 95, 1520, 1519, 109, 840, 841, 506, 668,
	506, 506, 763, 1617, 716, 1054, 771, 29, 506, 61,
	32, 33, 492, 1659, 506, 1520, 1342, 29, 1523, 61,
	32, 33, 1745, 773, 62, 1520, 1974, 679, 940, 840,
	841, 34, 821, 822, 823, 824, 825, 818, 109, 1536,
	828, 34, 676, 677, 922, 1357, 720, 652, 721, 84,
	685, 722, 946, 1098, 1099, 706, 699, 777, 871, 873,
	875, 877, 879, 881, 882, 884, 872, 874, 68, 878,
	880, 649, 883, 1374, 1746, 1417, 62, 1416, 68, 29,
	1176, 61, 32, 33, 62, 2199, 83, 1373, 1519, 2153,
	2207, 2027, 1131, 931, 772, 771, 2213, 382, 936, 1048,
	1055, 2027, 1015, 34, 1733, 768, 2209, 1129, 1130, 1128,
	1519, 1343, 773, 772, 771, 693, 1606, 1602, 701, 705,
	1519, 1603, 680, 1616, 1610, 1612, 2079, 1613, 1378, 772,
	771, 773, 362, 2067, 1418, 838, 2203, 1372, 2121, 1859,
	68, 1607, 2208, 762, 772, 771, 2028, 773, 655, 656,
	657, 658, 659, 109, 109, 109, 2028, 2187, 2172, 2186,
	68, 1858, 773, 2027, 666, 666, 2142, 1176, 506, 1430,
	1127, 666, 666, 666, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 666, 666, 828, 1564, 1370, 1364,
	1365, 1047, 1363, 851, 1366, 1367, 772, 771, 1398, 1399,
	1400, 1562, 29, 1520, 61, 32, 33, 695, 27, 772,
	771, 478, 479, 57, 773, 2137, 2155, 2103, 2028, 2123,
	666, 2122, 1094, 57, 927, 2137, 34, 773, 1543, 1376,
	1379, 1148, 2141, 1149, 903, 904, 905, 906, 907, 891,
	892, 893, 908, 909, 894, 895, 896, 902, 910, 897,
	898, 899, 900, 901, 913, 912, 911, 914, 915, 917,
	916, 918, 2108, 68, 1080, 1023, 2085, 2000, 1509, 1034,
	1510, 1056, 1093, 29, 711, 61, 32, 33, 1950, 1912,
	1037, 1038, 371, 1856, 1100, 57, 2027, 2137, 1105, 772,
	771, 2190, 1738, 1049, 1560, 778, 710, 34, 1519, 1361,
	1371, 772, 771, 1354, 1606, 1602, 1344, 773, 2104, 1603,
	62, 1106, 1604, 1605, 1107, 506, 1114, 1116, 1117, 773,
	62, 1078, 1115, 109, 1101, 1769, 1369, 109, 1771, 1607,
	109, 1929, 2146, 717, 68, 2120, 109, 1962, 506, 506,
	60, 2028, 1850, 2143, 1944, 506, 506, 506, 109, 109,
	109, 1929, 2140, 109, 386, 854, 1998, 2027, 506, 506,
	1968, 1125, 2182, 2089, 717, 772, 771, 1523, 1375, 1850,
	2086, 2103, 1964, 1103, 1929, 2051, 1943, 772, 771, 1771,
	1035, 1036, 62, 773, 1661, 1165, 1168, 1039, 1040, 1041,
	1118, 1889, 1177, 109, 506, 773, 1850, 2002, 109, 1791,
	1050, 1051, 1929, 1994, 939, 1102, 1121, 1785, 57, 1781,
	2137, 1120, 2028, 1929, 1940, 1377, 1122, 1929, 717, 1850,
	1849, 1758, 1151, 1152, 1224, 1227, 1228, 1229, 1225, 1234,
	1226, 1230, 1778, 928, 1704, 1705, 1084, 928, 411, 410,
	413, 414, 415, 416, 109, 1836, 717, 412, 417, 1776,
	777, 1833, 717, 1624, 1775, 1763, 1762, 1641, 1761, 1753,
	1752, 1749, 1750, 1739, 492, 1587, 727, 731, 1749, 1748,
	1189, 1586, 1191, 1154, 1413, 717, 72, 1516, 1340, 57,
	1339, 2137, 1150, 809, 1219, 717, 2092, 1173, 1156, 1358,
	1156, 717, 1829, 1062, 1155, 1157, 1031, 1248, 1030, 1643,
	1162, 1250, 1029, 1028, 1020, 62, 1018, 1017, 1016, 1014,
	663, 1246, 954, 953, 934, 666, 29, 666, 934, 359,
	853, 1247, 1973, 933, 506, 1198, 1199, 29, 1218, 1156,
	1203, 866, 1219, 1206, 1187, 1188, 29, 72, 1211, 1251,
	1470, 1194, 1195, 1196, 1197, 1690, 1034, 1255, 939, 1265,
	1759, 1270, 502, 1254, 1266, 1751, 1126, 1471, 1273, 1122,
	506, 506, 1499, 1499, 1631, 1645, 1219, 1512, 1919, 935,
	1649, 937, 1644, 935, 1642, 933, 62, 68, 68, 1647,
	1304, 1305, 1306, 1307, 1321, 1322, 1323, 1256, 68, 2179,
	1413, 1413, 1646, 1316, 1318, 109, 1435, 68, 1109, 1434,
	1356, 1338, 933, 109, 109, 1648, 1650, 109, 109, 1096,
	851, 109, 109, 109, 1021, 373, 732, 2177, 1219, 939,
	1325, 1413, 1402, 2097, 2087, 1158, 2078, 1966, 506, 506,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1900, 1860, 1290, 1839, 1320, 1732, 1315, 1291,
	1292, 1515, 1297, 1298, 1299, 1300, 1301, 1334, 819, 820,
	821, 822, 823, 824, 825, 818, 1310, 1351, 828, 1309,
	1311, 1312, 1313, 927, 713, 2163, 68, 927, 1125, 1704,
	1705, 927, 1901, 1757, 1707, 1690, 1565, 1061, 109, 506,
	1025, 506, 1487, 1121, 1228, 1229, 109, 109, 1266, 851,
	109, 1390, 1391, 1122, 1407, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 1473, 1474, 828, 1710,
	928, 928, 928, 928, 928, 1709, 1482, 109, 1403, 109,
	109, 1328, 1481, 1330, 1485, 1234, 109, 1491, 1387, 1486,
	1410, 1483, 2117, 492, 377, 378, 1484, 2093, 928, 1628,
	2114, 842, 843, 844, 845, 846, 847, 848, 849, 1475,
	109, 109, 109, 109, 109, 1396, 1440, 1442, 1429, 766,
	767, 1395, 2037, 1448, 1449, 1450, 1451, 1917, 1525, 1494,
	1780, 1737, 1224, 1227, 1228, 1229, 1225, 1489, 1226, 1230,
	1736, 1057, 1517, 1409, 1493, 2040, 2084, 764, 2083, 1961,
	2107, 1412, 1414, 1959, 1415, 2031, 1513, 2030, 360, 1590,
	1421, 853, 1500, 1424, 1425, 1426, 1476, 1553, 952, 1479,
	1432, 1488, 1433, 709, 664, 1436, 1437, 60, 1438, 1439,
	1524, 1827, 1443, 1444, 1445, 1446, 1447, 1501, 666, 1502,
	666, 666, 725, 1454, 1455, 1456, 1896, 1458, 1459, 1504,
	1461, 1462, 1463, 1464, 726, 1466, 1467, 1468, 1477, 1478,
	1360, 1480, 1098, 1099, 1518, 1521, 1270, 1329, 1024, 1111,
	1112, 1568, 1348, 1126, 1232, 1552, 1490, 1554, 1555, 1556,
	1557, 766, 767, 1394, 1012, 374, 375, 1947, 368, 2110,
	2109, 1393, 2081, 2041, 109, 109, 109, 109, 109, 1979,
	1544, 1545, 1561, 1916, 1596, 1563, 109, 1551, 369, 109,
	72, 1978, 1903, 109, 1499, 2181, 2180, 1558, 1570, 1571,
	1572, 2180, 109, 1423, 1420, 1052, 769, 2181, 1990, 1588,
	1585, 1735, 1091, 74, 2019, 47, 2021, 19, 76, 1593,
	1594, 1601, 1665, 506, 1609, 420, 1592, 1599, 1611, 1615,
	50, 1608, 853, 1618, 1619, 69, 1163, 1164, 1589, 1,
	1658, 2020, 18, 2038, 927, 927, 927, 927, 927, 2022,
	20, 1958, 1695, 1879, 60, 1864, 1635, 2023, 21, 927,
	1546, 1547, 1548, 1550, 2018, 15, 1472, 1863, 1634, 1652,
	1639, 1651, 927, 2017, 14, 492, 1714, 1715, 1716, 1633,
	506, 2011, 10, 2025, 25, 1158, 2016, 13, 2013, 12,
	1574, 1691, 506, 109, 506, 506, 2012, 11, 1184, 2010,
	9, 1694, 1666, 1667, 1668, 1669, 1670, 494, 1573, 712,
	503, 1717, 2082, 1713, 2036, 1081, 1600, 1790, 1897, 1368,
	2046, 1276, 1267, 500, 1262, 654, 82, 1341, 678, 1708,
	1058, 1887, 1724, 1638, 1581, 328, 1583, 1584, 1274, 1530,
	1711, 2039, 714, 1529, 1701, 1526, 1730, 109, 1541, 1731,
	1755, 1756, 1287, 1728, 1528, 1527, 506, 2034, 1531, 959,
	1723, 957, 958, 956, 961, 960, 332, 487, 947, 1719,
	770, 90, 51, 1890, 1614, 1671, 1672, 1567, 1362, 85,
	1677, 1059, 687, 1680, 334, 836, 1392, 1505, 1685, 1633,
	1270, 493, 1270, 2077, 1697, 2098, 506, 1740, 1741, 729,
	2052, 1977, 1902, 1428, 1744, 865, 1174, 394, 2055, 1113,
	409, 1747, 928, 408, 407, 404, 405, 1347, 1104, 1469,
	1772, 810, 392, 384, 926, 919, 1345, 1773, 506, 506,
	1359, 1777, 1223, 1221, 1220, 1742, 1026, 482, 1814, 1706,
	1702, 1760, 925, 1630, 694, 1123, 506, 1774, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 347, 1784, 1815, 506, 506, 1984, 506,
	506, 1388, 1389, 1108, 731, 31, 1796, 73, 1820, 1765,
	379, 1675, 1676, 1767, 1678, 1679, 26, 1681, 1682, 1683,
	1684, 17, 1686, 1687, 1688, 700, 22, 16, 650, 1795,
	35, 1803, 39, 38, 37, 1179, 1846, 1847, 1569, 1331,
	357, 1065, 1063, 2169, 1837, 2101, 1743, 2075, 2026, 23,
	109, 2147, 4, 1852, 1696, 370, 28, 2, 0, 0,
	0, 1828, 1842, 0, 1411, 109, 0, 60, 0, 0,
	0, 1513, 0, 0, 0, 0, 0, 0, 0, 503,
	109, 503, 503, 0, 1431, 0, 1843, 1797, 0, 503,
	1848, 0, 0, 1799, 0, 503, 506, 0, 0, 109,
	506, 0, 0, 0, 1808, 1809, 1853, 506, 0, 0,
	506, 506, 506, 0, 0, 0, 109, 0, 0, 1886,
	0, 0, 0, 0, 0, 1854, 0, 0, 1875, 0,
	0, 1270, 0, 0, 0, 1880, 0, 1894, 1800, 1801,
	1695, 1802, 1728, 1921, 1804, 1881, 1806, 0, 1830, 1831,
	1832, 0, 1835, 0, 0, 0, 1876, 1877, 1878, 0,
	1926, 1895, 0, 0, 1841, 0, 1885, 1855, 1888, 1857,
	0, 0, 0, 0, 1946, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 1694,
	0, 0, 0, 0, 1918, 0, 0, 1899, 1945, 506,
	506, 506, 0, 0, 0, 1927, 1938, 1972, 506, 1928,
	1925, 0, 1933, 1939, 0, 0, 0, 506, 0, 1949,
	1904, 1975, 0, 0, 1851, 0, 0, 1822, 1823, 0,
	1695, 0, 60, 1824, 1963, 0, 1825, 0, 1941, 1965,
	1942, 1826, 109, 494, 0, 1967, 1970, 0, 1971, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 1997, 0, 0, 1911, 0,
	0, 0, 2008, 1915, 506, 2007, 1991, 1989, 1995, 1694,
	0, 0, 0, 0, 2009, 1999, 0, 2024, 0, 0,
	2015, 0, 2006, 0, 1404, 1405, 1406, 1930, 0, 1931,
	1932, 0, 0, 0, 2043, 0, 0, 2014, 2054, 2058,
	0, 0, 0, 2044, 2042, 0, 0, 2072, 506, 506,
	2049, 506, 2050, 2045, 506, 492, 109, 0, 109, 0,
	0, 0, 2063, 0, 0, 506, 0, 1861, 1660, 0,
	60, 2064, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 2076, 2007, 0, 0, 1980,
	1981, 1982, 1983, 0, 0, 2009, 1987, 1988, 2024, 0,
	2080, 2015, 0, 2006, 0, 0, 0, 0, 506, 0,
	0, 1899, 1270, 0, 0, 506, 109, 0, 2014, 0,
	0, 0, 2091, 0, 0, 0, 1011, 0, 0, 2106,
	0, 0, 1997, 0, 2111, 0, 0, 1718, 0, 0,
	0, 2119, 2113, 1920, 506, 60, 60, 0, 2118, 503,
	503, 2116, 2058, 2124, 2115, 2112, 503, 503, 503, 2008,
	0, 2139, 2007, 0, 60, 0, 0, 2059, 0, 503,
	503, 2009, 2154, 2152, 2024, 2065, 2151, 2015, 60, 2006,
	2148, 506, 0, 0, 0, 2149, 2157, 0, 506, 506,
	2164, 2158, 0, 2150, 2014, 0, 60, 60, 0, 0,
	2174, 0, 929, 2170, 2166, 503, 60, 2178, 506, 60,
	0, 2176, 2170, 0, 60, 2188, 109, 2185, 0, 0,
	2170, 0, 0, 0, 60, 2198, 0, 0, 60, 2088,
	2170, 0, 1992, 0, 0, 0, 2202, 0, 0, 0,
	0, 60, 0, 0, 60, 106, 2096, 2170, 1591, 0,
	0, 60, 2211, 0, 350, 60, 0, 2170, 1786, 2005,
	0, 2170, 0, 506, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 0, 0, 828, 0,
	0, 0, 0, 483, 0, 0, 499, 0, 0, 641,
	0, 0, 0, 506, 503, 0, 0, 0, 0, 1817,
	651, 0, 506, 1637, 0, 0, 1232, 0, 660, 0,
	0, 0, 506, 0, 1653, 1654, 717, 1655, 1656, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 1662,
	1663, 0, 0, 853, 0, 1153, 0, 0, 0, 0,
	2005, 0, 1838, 0, 0, 1840, 1240, 1242, 0, 0,
	0, 0, 0, 494, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 0, 0, 828, 0,
	0, 1180, 1181, 0, 2204, 2205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 0, 0,
	817, 816, 826, 827, 819, 820, 821, 822, 823, 824,
	825, 818, 0, 0, 828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1159, 1161, 2005, 0, 0, 1167,
	1170, 1171, 1172, 0, 0, 494, 0, 1241, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 503,
	503, 0, 0, 728, 0, 0, 1182, 0, 1185, 1186,
	0, 0, 0, 1190, 0, 1192, 1193, 0, 0, 0,
	0, 0, 0, 1200, 1201, 1202, 0, 1204, 1205, 0,
	1207, 1208, 1209, 1210, 0, 1212, 1213, 1214, 0, 29,
	30, 61, 32, 33, 0, 1766, 107, 0, 0, 346,
	0, 0, 0, 58, 0, 107, 0, 0, 0, 67,
	503, 0, 503, 34, 54, 55, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 662, 485, 495, 0, 107, 0, 0,
	107, 1798, 0, 0, 0, 0, 45, 0, 0, 0,
	68, 107, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 853, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 29, 0, 61, 32, 33, 0, 0, 1819,
	1812, 503, 0, 0, 0, 0, 58, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 34, 0, 0, 0,
	0, 0, 36, 63, 41, 40, 43, 0, 56, 0,
	0, 0, 0, 0, 0, 0, 2053, 2057, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	0, 0, 828, 68, 44, 66, 65, 0, 0, 52,
	53, 42, 0, 817, 816, 826, 827, 819, 820, 821,
	822, 823, 824, 825, 818, 0, 2027, 828, 0, 0,
	0, 2138, 0, 0, 0, 2073, 2074, 1397, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	0, 921, 828, 930, 0, 57, 0, 46, 64, 0,
	48, 49, 0, 0, 0, 36, 63, 41, 40, 43,
	0, 0, 0, 1818, 494, 1906, 1907, 1908, 1909, 1910,
	0, 2028, 0, 1913, 1914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 66, 65,
	2057, 0, 1427, 0, 42, 0, 0, 0, 0, 0,
	0, 2125, 817, 816, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 503, 0, 828, 1452, 1453, 0,
	0, 0, 1457, 0, 107, 1460, 0, 0, 0, 0,
	1465, 1811, 0, 29, 0, 61, 32, 33, 57, 0,
	2029, 64, 62, 48, 49, 0, 0, 58, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 34, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	2189, 1566, 0, 981, 0, 0, 0, 0, 812, 0,
	815, 0, 0, 503, 0, 503, 503, 829, 830, 831,
	832, 833, 834, 835, 68, 813, 814, 811, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	0, 1019, 828, 0, 0, 483, 0, 2027, 1027, 817,
	816, 826, 827, 819, 820, 821, 822, 823, 824, 825,
	818, 0, 0, 828, 0, 62, 1042, 1043, 1044, 0,
	0, 1045, 0, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 63, 41, 40,
	43, 0, 0, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 1083, 107, 107, 107, 0, 1090, 1664, 44, 66,
	65, 495, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 1698,
	1700, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 1700, 0, 57,
	0, 2029, 64, 0, 48, 49, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 503, 0,
	503, 1727, 995, 998, 999, 1000, 1001, 1002, 1003, 0,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 0, 983, 984,
	985, 986, 962, 966, 996, 963, 969, 965, 967, 964,
	0, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 987, 988, 989, 990, 991, 992, 993, 994,
	817, 816, 826, 827, 819, 820, 821, 822, 823, 824,
	825, 818, 0, 0, 828, 0, 0, 0, 0, 2191,
	0, 0, 0, 0, 0, 0, 62, 817, 816, 826,
	827, 819, 820, 821, 822, 823, 824, 825, 818, 0,
	0, 828, 107, 0, 0, 0, 107, 1779, 0, 107,
	0, 1783, 0, 0, 0, 1033, 0, 0, 1787, 0,
	0, 1792, 1793, 1794, 0, 0, 1636, 107, 107, 107,
	0, 0, 107, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 997, 1249, 817, 816, 826,
	827, 819, 820, 821, 822, 823, 824, 825, 818, 1408,
	0, 828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 107, 0, 0,
	817, 816, 826, 827, 819, 820, 821, 822, 823, 824,
	825, 818, 0, 0, 828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1845, 1845, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 107, 0, 0, 1327, 0, 1845, 0,
	0, 0, 0, 0, 1335, 1336, 0, 0, 1337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1033, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1380, 1381,
	1382, 1383, 1384, 0, 0, 0, 0, 0, 0, 383,
	383, 0, 0, 0, 383, 383, 383, 383, 0, 0,
	0, 495, 0, 0, 0, 0, 0, 0, 0, 1922,
	1923, 0, 1924, 0, 0, 1845, 0, 0, 0, 0,
	0, 383, 383, 383, 383, 0, 1727, 383, 383, 383,
	383, 383, 0, 0, 0, 0, 1727, 0, 383, 383,
	383, 0, 383, 383, 0, 383, 383, 383, 383, 0,
	383, 383, 383, 0, 107, 0, 0, 342, 0, 0,
	0, 0, 107, 1243, 0, 0, 107, 107, 0, 1969,
	107, 1252, 1033, 495, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 321, 107, 0, 503,
	503, 0, 0, 324, 0, 107, 107, 0, 0, 107,
	0, 0, 0, 333, 340, 341, 494, 0, 0, 2066,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 1349, 1350,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 330,
	0, 0, 331, 0, 0, 0, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	107, 107, 107, 107, 2090, 0, 0, 0, 0, 1033,
	0, 1582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 325,
	326, 0, 336, 337, 345, 0, 0, 383, 327, 329,
	0, 323, 344, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 383, 0, 0, 0, 383, 0, 0,
	383, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 495, 107, 107, 107, 107, 107, 0, 0,
	0, 0, 0, 0, 0, 1243, 0, 0, 107, 0,
	0, 0, 1243, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 2068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1243, 0, 1243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 624, 604, 282, 562, 627, 534, 551, 638, 552,
	555, 593, 520, 574, 219, 549, 521, 0, 538, 511,
	545, 512, 535, 564, 153, 533, 606, 577, 626, 183,
	589, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	625, 570, 0, 633, 186, 586, 303, 271, 204, 0,
	0, 566, 613, 572, 602, 561, 595, 527, 585, 628,
	550, 591, 629, 0, 0, 0, 505, 0, 1271, 1272,
	0, 0, 0, 0, 0, 135, 0, 588, 623, 547,
	590, 592, 509, 587, 495, 515, 522, 637, 619, 541,
	542, 543, 1514, 0, 0, 107, 0, 0, 0, 565,
	573, 599, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 583, 0, 0, 0, 523, 516, 0,
	0, 563, 0, 0, 0, 526, 114, 540, 600, 0,
	507, 163, 205, 125, 603, 618, 560, 176, 309, 622,
	557, 556, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 548, 508, 607, 536, 546,
	146, 544, 250, 223, 298, 0, 580, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 559, 594,
	537, 143, 597, 584, 612, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 513, 0, 273, 301, 319, 192,
	132, 532, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 530, 531, 528, 0, 529,
	575, 576, 630, 631, 632, 601, 524, 0, 614, 615,
	0, 605, 620, 621, 596, 639, 553, 554, 514, 517,
	518, 519, 525, 567, 568, 579, 582, 610, 609, 608,
	611, 616, 635, 634, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 110, 121, 185,
	316, 243, 159, 302, 510, 151, 0, 0, 569, 571,
	581, 598, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 617, 624,
	604, 282, 562, 627, 534, 551, 638, 552, 555, 593,
	520, 574, 219, 549, 521, 0, 538, 511, 545, 512,
	535, 564, 153, 533, 606, 577, 626, 183, 589, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 625, 570,
	0, 633, 186, 586, 303, 271, 204, 0, 0, 566,
	613, 572, 602, 561, 595, 527, 585, 628, 550, 591,
	629, 0, 0, 0, 505, 0, 1271, 1272, 0, 0,
	0, 0, 0, 135, 0, 588, 623, 547, 590, 592,
	509, 587, 0, 515, 522, 637, 619, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 565, 573, 599,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 583, 0, 0, 0, 523, 516, 0, 0, 563,
	0, 0, 0, 526, 114, 540, 600, 0, 507, 163,
	205, 125, 603, 618, 560, 176, 309, 622, 557, 556,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 548, 508, 607, 536, 546, 146, 544,
	250, 223, 298, 0, 580, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 559, 594, 537, 143,
	597, 584, 612, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 513, 0, 273, 301, 319, 192, 132, 532,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 530, 531, 528, 0, 529, 575, 576,
	630, 631, 632, 601, 524, 0, 614, 615, 0, 605,
	620, 621, 596, 639, 553, 554, 514, 517, 518, 519,
	525, 567, 568, 579, 582, 610, 609, 608, 611, 616,
	635, 634, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 110, 121, 185, 316, 243,
	159, 302, 510, 151, 0, 0, 569, 571, 581, 598,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 617, 624, 604, 282,
	562, 627, 534, 551, 638, 552, 555, 593, 520, 574,
	219, 549, 521, 0, 538, 511, 545, 512, 535, 564,
	153, 533, 606, 577, 626, 183, 589, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 625, 570, 0, 633,
	186, 586, 303, 271, 204, 0, 0, 566, 613, 572,
	602, 561, 595, 527, 585, 628, 550, 591, 629, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 588, 623, 547, 590, 592, 509, 587,
	0, 515, 522, 637, 619, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 565, 573, 599, 558, 0,
	0, 0, 0, 0, 0, 1632, 0, 539, 0, 583,
	0, 0, 0, 523, 516, 0, 0, 563, 0, 0,
	0, 526, 114, 540, 600, 0, 507, 163, 205, 125,
	603, 618, 560, 176, 309, 622, 557, 556, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 548, 508, 607, 536, 546, 146, 544, 250, 223,
	298, 0, 580, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 559, 594, 537, 143, 597, 584,
	612, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	513, 0, 273, 301, 319, 192, 132, 532, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 530, 531, 528, 0, 529, 575, 576, 630, 631,
	632, 601, 524, 0, 614, 615, 0, 605, 620, 621,
	596, 639, 553, 554, 514, 517, 518, 519, 525, 567,
	568, 579, 582, 610, 609, 608, 611, 616, 635, 634,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 110, 121, 185, 316, 243, 159, 302,
	510, 151, 0, 0, 569, 571, 581, 598, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 617, 624, 604, 282, 562, 627,
	534, 551, 638, 552, 555, 593, 520, 574, 219, 549,
	521, 0, 538, 511, 545, 512, 535, 564, 153, 533,
	606, 577, 626, 183, 589, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 625, 570, 0, 633, 186, 586,
	303, 271, 204, 0, 0, 566, 613, 572, 602, 561,
	595, 527, 585, 628, 550, 591, 629, 68, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 588, 623, 547, 590, 592, 509, 587, 0, 515,
	522, 637, 619, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 565, 573, 599, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 583, 0, 0,
	0, 523, 516, 0, 0, 563, 0, 0, 0, 526,
	114, 540, 600, 0, 507, 163, 205, 125, 603, 618,
	560, 176, 309, 622, 557, 556, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 548,
	508, 607, 536, 546, 146, 544, 250, 223, 298, 0,
	580, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 559, 594, 537, 143, 597, 584, 612, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 513, 0,
	273, 301, 319, 192, 132, 532, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 530,
	531, 528, 0, 529, 575, 576, 630, 631, 632, 601,
	524, 0, 614, 615, 0, 605, 620, 621, 596, 639,
	553, 554, 514, 517, 518, 519, 525, 567, 568, 579,
	582, 610, 609, 608, 611, 616, 635, 634, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 110, 121, 185, 316, 243, 159, 302, 510, 151,
	0, 0, 569, 571, 581, 598, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 617, 624, 604, 282, 562, 627, 534, 551,
	638, 552, 555, 593, 520, 574, 219, 549, 521, 0,
	538, 511, 545, 512, 535, 564, 153, 533, 606, 577,
	626, 183, 589, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 625, 570, 0, 633, 186, 586, 303, 271,
	204, 0, 0, 566, 613, 572, 602, 561, 595, 527,
	585, 628, 550, 591, 629, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 588,
	623, 547, 590, 592, 509, 587, 0, 515, 522, 637,
	619, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 565, 573, 599, 558, 0, 0, 0, 0, 0,
	0, 1253, 0, 539, 0, 583, 0, 0, 0, 523,
	516, 0, 0, 563, 0, 0, 0, 526, 114, 540,
	600, 0, 507, 163, 205, 125, 603, 618, 560, 176,
	309, 622, 557, 556, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 548, 508, 607,
	536, 546, 146, 544, 250, 223, 298, 0, 580, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	559, 594, 537, 143, 597, 584, 612, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 513, 0, 273, 301,
	319, 192, 132, 532, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 530, 531, 528,
	0, 529, 575, 576, 630, 631, 632, 601, 524, 0,
	614, 615, 0, 605, 620, 621, 596, 639, 553, 554,
	514, 517, 518, 519, 525, 567, 568, 579, 582, 610,
	609, 608, 611, 616, 635, 634, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 110,
	121, 185, 316, 243, 159, 302, 510, 151, 0, 0,
	569, 571, 581, 598, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	617, 624, 604, 282, 562, 627, 534, 551, 638, 552,
	555, 593, 520, 574, 219, 549, 521, 0, 538, 511,
	545, 512, 535, 564, 153, 533, 606, 577, 626, 183,
	589, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	625, 570, 0, 633, 186, 586, 303, 271, 204, 0,
	0, 566, 613, 572, 602, 561, 595, 527, 585, 628,
	550, 591, 629, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 588, 623, 547,
	590, 592, 509, 587, 0, 515, 522, 637, 619, 541,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 565,
	573, 599, 558, 0, 0, 0, 0, 0, 0, 1119,
	0, 539, 0, 583, 0, 0, 0, 523, 516, 0,
	0, 563, 0, 0, 0, 526, 114, 540, 600, 0,
	507, 163, 205, 125, 603, 618, 560, 176, 309, 622,
	557, 556, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 548, 508, 607, 536, 546,
	146, 544, 250, 223, 298, 0, 580, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 559, 594,
	537, 143, 597, 584, 612, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 513, 0, 273, 301, 319, 192,
	132, 532, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 530, 531, 528, 0, 529,
	575, 576, 630, 631, 632, 601, 524, 0, 614, 615,
	0, 605, 620, 621, 596, 639, 553, 554, 514, 517,
	518, 519, 525, 567, 568, 579, 582, 610, 609, 608,
	611, 616, 635, 634, 636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 110, 121, 185,
	316, 243, 159, 302, 510, 151, 0, 0, 569, 571,
	581, 598, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 617, 624,
	604, 282, 562, 627, 534, 551, 638, 552, 555, 593,
	520, 574, 219, 549, 521, 0, 538, 511, 545, 512,
	535, 564, 153, 533, 606, 577, 626, 183, 589, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 625, 570,
	0, 633, 186, 586, 303, 271, 204, 0, 0, 566,
	613, 572, 602, 561, 595, 527, 585, 628, 550, 591,
	629, 0, 0, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 588, 623, 547, 590, 592,
	509, 587, 0, 515, 522, 637, 619, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 565, 573, 599,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 583, 0, 0, 0, 523, 516, 0, 0, 563,
	0, 0, 0, 526, 114, 540, 600, 0, 507, 163,
	205, 125, 603, 618, 560, 176, 309, 622, 557, 556,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 548, 508, 607, 536, 546, 146, 544,
	250, 223, 298, 0, 580, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 559, 594, 537, 143,
	597, 584, 612, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 513, 0, 273, 301, 319, 192, 132, 532,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 530, 531, 528, 0, 529, 575, 576,
	630, 631, 632, 601, 524, 0, 614, 615, 0, 605,
	620, 621, 596, 639, 553, 554, 514, 517, 518, 519,
	525, 567, 568, 579, 582, 610, 609, 608, 611, 616,
	635, 634, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 110, 121, 185, 316, 243,
	159, 302, 510, 151, 0, 0, 569, 571, 581, 598,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 617, 624, 604, 282,
	562, 627, 534, 551, 638, 552, 555, 593, 520, 574,
	219, 549, 521, 0, 538, 511, 545, 512, 535, 564,
	153, 533, 606, 577, 626, 183, 589, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 625, 570, 0, 633,
	186, 586, 303, 271, 204, 0, 0, 566, 613, 572,
	602, 561, 595, 527, 585, 628, 550, 591, 629, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 588, 623, 547, 590, 592, 509, 587,
	0, 515, 522, 637, 619, 541, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 565, 573, 599, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 583,
	0, 0, 0, 523, 516, 0, 0, 563, 0, 0,
	0, 526, 114, 540, 600, 0, 507, 163, 205, 125,
	603, 618, 560, 176, 309, 622, 557, 556, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 548, 508, 607, 536, 546, 146, 544, 250, 223,
	298, 0, 580, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 559, 594, 537, 143, 597, 584,
	612, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	513, 0, 273, 301, 319, 192, 132, 532, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 530, 531, 528, 0, 529, 575, 576, 630, 631,
	632, 601, 524, 0, 614, 615, 0, 605, 620, 621,
	596, 639, 553, 554, 514, 517, 518, 519, 525, 567,
	568, 579, 582, 610, 609, 608, 611, 616, 635, 634,
	636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 110, 121, 185, 316, 243, 159, 302,
	510, 151, 0, 0, 569, 571, 581, 598, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 617, 624, 604, 282, 562, 627,
	534, 551, 638, 552, 555, 593, 520, 574, 219, 549,
	521, 0, 538, 511, 545, 512, 535, 564, 153, 533,
	606, 577, 626, 183, 589, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 1281, 1285, 0, 633, 186, 586,
	303, 271, 204, 0, 0, 566, 613, 572, 602, 561,
	595, 527, 585, 628, 550, 591, 629, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 588, 623, 547, 590, 592, 509, 587, 0, 515,
	522, 637, 619, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 565, 573, 599, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 583, 0, 0,
	0, 523, 516, 0, 0, 563, 0, 0, 0, 526,
	114, 540, 600, 0, 507, 163, 205, 125, 603, 618,
	1284, 176, 309, 622, 557, 556, 1279, 0, 1280, 166,
	184, 129, 111, 123, 1277, 1283, 215, 248, 256, 548,
	508, 607, 536, 546, 146, 544, 250, 223, 298, 0,
	580, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 559, 594, 537, 143, 597, 584, 612, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 513, 0,
	273, 301, 319, 192, 132, 532, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 530,
	531, 528, 0, 529, 575, 576, 630, 631, 632, 601,
	524, 0, 614, 615, 0, 605, 620, 621, 596, 639,
	553, 554, 514, 517, 518, 519, 525, 567, 568, 579,
	582, 610, 609, 608, 611, 616, 635, 634, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 110, 121, 185, 316, 243, 159, 302, 510, 151,
	0, 0, 569, 571, 581, 598, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 617, 624, 604, 282, 562, 627, 534, 551,
	638, 552, 555, 593, 520, 574, 219, 549, 521, 0,
	538, 511, 545, 512, 535, 564, 153, 533, 606, 577,
	626, 183, 589, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 625, 570, 0, 633, 186, 586, 303, 271,
	204, 0, 0, 566, 613, 572, 602, 561, 595, 527,
	585, 628, 550, 591, 629, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 588,
	623, 547, 590, 592, 509, 587, 0, 515, 522, 637,
	619, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 565, 573, 599, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 539, 0, 583, 0, 0, 0, 523,
	516, 0, 0, 563, 0, 0, 0, 526, 114, 540,
	600, 0, 507, 163, 205, 125, 603, 618, 560, 176,
	309, 622, 557, 556, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 548, 508, 607,
	536, 546, 146, 544, 250, 223, 298, 0, 580, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	559, 594, 537, 143, 597, 584, 612, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 513, 0, 273, 301,
	319, 192, 132, 532, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 530, 531, 528,
	0, 529, 575, 576, 630, 631, 632, 601, 524, 0,
	614, 615, 0, 605, 620, 621, 596, 639, 553, 554,
	514, 517, 518, 519, 525, 567, 568, 579, 582, 610,
	609, 608, 611, 616, 635, 634, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 110,
	121, 185, 316, 243, 159, 302, 510, 151, 0, 0,
	569, 571, 581, 598, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	617, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 1260,
	0, 68, 0, 0, 388, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 1261, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 0, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 717, 388,
	411, 410, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 0, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 0, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 381, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 388,
	411, 1169, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 0, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 381, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 411, 1166, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 381, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 29, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 1079, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 733, 734, 735,
	736, 737, 741, 742, 746, 747, 755, 754, 753, 756,
	757, 759, 758, 760, 738, 739, 740, 743, 744, 745,
	748, 749, 752, 750, 751, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 0, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	2192, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 717, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 0, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 0, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1240, 1242,
	0, 0, 0, 0, 0, 108, 0, 1245, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 1241,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 781, 782,
	783, 784, 788, 789, 793, 794, 802, 801, 800, 803,
	804, 806, 805, 807, 785, 786, 787, 790, 791, 792,
	795, 796, 799, 797, 798, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1240, 1242, 0, 0, 0, 0, 0,
	108, 0, 1245, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 1241, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 1236, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 781, 782, 783, 784, 788, 789, 793,
	794, 802, 801, 800, 803, 804, 806, 805, 807, 785,
	786, 787, 790, 791, 792, 795, 796, 799, 797, 798,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 775, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 779, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	772, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 781, 782,
	783, 784, 788, 789, 793, 794, 802, 801, 800, 803,
	804, 806, 805, 807, 785, 786, 787, 790, 791, 792,
	795, 796, 799, 797, 798, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 1492, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 1245, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 781, 782, 783, 784, 788, 789, 793,
	794, 802, 801, 800, 803, 804, 806, 805, 807, 785,
	786, 787, 790, 791, 792, 795, 796, 799, 797, 798,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 1245, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 781, 782,
	783, 784, 788, 789, 793, 794, 802, 801, 800, 803,
	804, 806, 805, 807, 785, 786, 787, 790, 791, 792,
	795, 796, 799, 797, 798, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 779, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 781, 782, 783, 784, 788, 789, 793,
	794, 802, 801, 800, 803, 804, 806, 805, 807, 785,
	786, 787, 790, 791, 792, 795, 796, 799, 797, 798,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 817, 816, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 0, 0, 828, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 29, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 0,
	0, 0, 176, 309, 0, 0, 0, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	0, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 29, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 950, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 949, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 105, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 497, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 498, 496,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 941, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 497, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 498, 496,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 488, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 497,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 498, 496, 491, 490, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312,
}

var yyPact = [...]int{
	2433, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1395, 1428, -1000,
	-1000, -1000, -1000, -1000, -1000, 482, 114, -1000, -1000, -1000,
	240, 8, 19277, 237, 3294, 20107, -1000, -1000, -1000, -1000,
	185, 20107, -1000, -1000, -102, -104, -1000, 0, 949, 1272,
	1030, -1000, -1000, 28, -4, -1000, -1000, -1000, -1000, -1000,
	-1000, 1371, 1392, 1109, 1364, 1191, -1000, 9314, 201, 201,
	18862, 21767, -1000, 20107, 6814, 227, 20107, -164, 194, 194,
	134, 194, -1000, 475, -1000, -1000, -1000, 20107, 198, 19692,
	198, 198, 198, 198, 198, 20107, -1000, 285, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20107, 940, 1294, 5560, 199, 5560, 5560, -1000, 516, -1000,
	97, 92, 108, 5560, 11, 603, 85, -9, -1000, 5560,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 215, 1030, 459,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1293, 724, 1107,
	-97, 764, 233, 20107, 417, -1000, -1000, 1323, 11390, 11805,
	1395, -1000, 1030, -1000, -1000, -1000, 1248, -1000, -1000, 527,
	1415, -1000, 14295, 283, -1000, 11390, 2691, 1011, -1000, -1000,
	1011, -1000, -1000, 257, -1000, -1000, 13050, 13050, 13050, 13050,
	13050, 13050, 13050, 13050, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1011, -1000, 10560, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 11390, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 18447, 17617,
	20107, 1007, 1003, -1000, -1000, 282, 836, 21352, -139, -1000,
	-1000, -1000, 456, 17202, -1000, 281, -1000, 1288, -1000, -1000,
	944, -1000, 2743, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19692, 1361, 213, 939, 515, 938, 937, 936, 20107, 934,
	1046, 208, 20107, 1344, 1125, 20107, 933, 932, 928, 926,
	-1000, 8068, -1000, 5560, 5560, -1000, -1000, -1000, 194, 194,
	5560, 5560, 5560, 20107, 20107, 20107, -1000, -1000, 20107, -1000,
	-1000, 587, 587, 5560, 5560, -1000, 1414, 494, 494, -1000,
	-1000, -1000, -1000, 11390, -1000, 13050, 315, -1000, 1122, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 923, -1000, -1000, 930,
	-1000, 749, -1000, 10975, -296, -1000, -1000, -1000, 20107, 5560,
	122, 156, 127, 20107, -1000, 1423, 286, 704, 279, 1041,
	-1000, 528, 1337, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1371, 764, 1191, 738, 1042, -1000, -1000, -1000, 20107,
	-1000, 11390, 11390, 735, -1000, 15540, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6396, 319,
	13050, 593, 503, 13050, 13050, 13050, 13050, 13050, 13050, 13050,
	13050, 13050, 13050, 13050, 13050, 13050, 13050, 13050, 661, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 912, -1000, 1030,
	867, 867, 295, 295, 295, 295, 295, 295, 295, 15955,
	1360, 764, 922, 559, 10560, 9314, 9314, 764, 11390, 11390,
	10144, 9729, 9314, 9314, 1360, 489, 559, 20937, -1000, -1000,
	12635, -1000, -1000, -1000, -1000, -1000, 764, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19692, 19692, 9314, 9314, 9314,
	9314, 764, 764, 9314, 9314, 9314, 9314, 9314, 764, 764,
	764, 764, 1360, 1360, 9314, 9314, 9314, 1360, 9314, 9314,
	1360, 9314, 9314, 9314, 9314, 1360, 9314, 9314, 9314, 141,
	20107, -1000, 998, 1227, -1000, -1000, -1000, 1351, 16787, 13880,
	141, 955, 17617, 20107, -1000, -1000, 17617, 20107, 5978, 20522,
	836, -139, 1019, -1000, -124, -129, 8484, 280, -1000, -1000,
	-1000, 7232, -1000, 4724, 7650, -1000, -93, -1000, -1000, -1000,
	1077, -1000, 1077, 113, -32, 1077, 1077, 1077, 1077, 1077,
	-57, -57, -57, -57, -42, -1000, -1000, -1000, -1000, -1000,
	1102, 1099, -1000, 1077, 1077, 1077, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1081, 144, 1081, 1079, 1079, 1079,
	1079, 1054, -1000, 20107, 5560, 1343, 5560, 119, 1090, -1000,
	-1000, 20107, 20107, 1034, -1000, 20107, 1033, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 910, 908, -1000,
	-1000, -1000, -1000, -1000, -1000, 505, -1000, 734, 11390, -1000,
	-1000, -1000, 20107, 1349, 20107, 20107, 587, 559, 2117, -1000,
	731, 20107, -1000, 1032, -1000, 449, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	920, 1333, 727, 558, -1000, 20107, 20107, 20107, 20107, 20107,
	259, -1000, 1187, 11390, 11390, 7232, 11805, -1000, -1000, -1000,
	-1000, 1323, -1000, 1360, 1372, -1000, 1224, 1218, 9314, -1000,
	-1000, 319, 420, -1000, -1000, 617, -1000, -1000, -1000, -1000,
	274, 1011, -1000, 2930, -1000, -1000, -1000, -1000, 593, 13050,
	13050, 13050, 2117, 2930, 3023, 565, 1097, 295, 419, 419,
	294, 294, 294, 294, 294, 1047, 1047, -1000, -1000, -1000,
	764, -1000, -1000, -1000, 9314, -1000, 11390, -1000, 764, 906,
	-1000, 906, -1000, 509, 611, 402, 1413, 906, 369, 1412,
	906, 906, 906, 9314, 576, -1000, 11390, 764, -1000, 2207,
	1031, 1028, 906, 764, 1023, 906, 906, -177, -177, 764,
	906, 764, 906, 906, -177, -177, -177, -177, 9314, 9314,
	906, 906, 906, 9314, 906, 906, 9314, 906, 906, 906,
	906, 9314, 906, 906, 906, 1010, 1011, -1000, 20522, 17617,
	17617, 17617, 17617, 17617, -1000, 1177, 1171, -1000, 1186, 1179,
	1137, 15125, -1000, 916, 16787, -1000, 1011, -1000, 14710, 266,
	226, 217, 216, -1000, -1000, -1000, 1402, 17617, 1050, -1000,
	1050, -1000, 272, -1000, -1000, 1019, -139, -143, -1000, -1000,
	-1000, -1000, 559, -1000, 698, -1000, 269, 999, 4306, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1084, 907, -1000, 1247,
	354, 448, 797, 1233, -1000, -1000, 271, -95, -1000, -1000,
	655, -57, -57, 1077, 1077, 112, 1077, -1000, -57, -1000,
	-1000, -1000, 280, 1287, 280, 280, 280, 280, -57, 722,
	722, -1000, -1000, -1000, -1000, 628, -1000, 1081, -1000, -1000,
	614, -1000, -1000, -1000, 1121, 19692, 1030, 1348, -1000, -1000,
	-1000, 1410, -1000, -1000, 190, 204, -1000, 5560, 20107, 5560,
	5560, 1402, 901, 895, -1000, 559, 494, 587, 1275, -1000,
	-1000, -1000, -1000, 13050, -1000, -1000, 930, 867, -1000, 141,
	232, -1000, -1000, 658, 470, 480, 174, 174, -1000, 390,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 132,
	887, -1000, -1000, -1000, -1000, 18, 120, 1197, 559, 559,
	-1000, -1000, 20107, -1000, -1000, -1000, -1000, 1053, -1000, -1000,
	-1000, 5142, 9314, -1000, 2117, 2930, 2990, -1000, 13050, -1000,
	764, 559, -1000, 9314, -1000, -1000, 835, 661, 835, 13050,
	13050, -1000, 13050, 13050, -1000, -212, -1000, 1022, 418, -1000,
	11390, 792, -1000, -1000, 13050, 13050, -1000, -1000, -1000, -1000,
	-1000, 18032, -1000, -177, -177, -177, -177, -177, -1000, -1000,
	-1000, -1000, 906, 906, -177, -177, -177, 906, -177, -177,
	906, -177, -177, -177, -177, 906, -177, -177, -177, 1120,
	20522, 1011, -1000, 16371, 19692, 1051, 1227, 1114, 1119, 869,
	-1000, -1000, -1000, -1000, 1170, -1000, 1164, -1000, -1000, -1000,
	-1000, 19692, 13050, 266, -1000, 1011, 1011, 1011, 1395, 11390,
	1050, -1000, -1000, 305, -1000, -1000, -126, -140, -1000, -1000,
	-1000, 6814, 4724, -1000, 4724, 19692, 143, -1000, 797, -1000,
	-1000, 797, -1000, -1000, -1000, 1080, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 523, 13050, 1422, -1000, 1245, -1000, 1236,
	720, -1000, -1000, 894, 280, 280, -57, -1000, -1000, 1077,
	-1000, 280, -1000, 452, -1000, -1000, -1000, -1000, 280, 900,
	-1000, 893, 987, -1000, 891, 20107, -1000, -1000, -1000, 1118,
	-1000, -1000, -1000, 852, 982, -1000, 2743, 888, 886, 885,
	20107, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 587, -1000,
	13050, 2930, -1000, -1000, -57, 20107, -1000, 758, -1000, 797,
	343, -1000, -1000, -1000, 884, 1233, -1000, -1000, 879, -1000,
	862, 19692, 1235, 839, 20107, 19692, -1000, -1000, 809, 837,
	11390, -1000, 19692, -218, 829, 19692, 19692, 19692, -1000, -1000,
	1402, 17617, -1000, -1000, 764, -1000, 13050, 2930, -1000, -1000,
	764, 1077, 1077, -1000, 1077, 1079, -1000, 1077, -18, 1077,
	-22, 764, 764, 2903, 2712, 2521, 2496, 1011, -172, -1000,
	559, 11390, 2595, 2471, -1000, 313, -1000, -1000, -1000, -1000,
	-1000, -177, -177, -1000, -1000, -1000, -1000, -177, -1000, -1000,
	-177, -1000, -1000, -1000, -1000, -177, -1000, -1000, -1000, -1000,
	1303, 980, 924, -1000, -1000, 8899, 764, 883, 268, 877,
	-1000, 1395, -1000, -1000, 11390, 1078, -1000, 11390, -1000, -1000,
	-1000, 877, 2243, -1000, 19692, 19692, 19692, 1371, 559, -1000,
	-1000, -1000, -1000, 4306, -1000, 851, -1000, 1077, -1000, 1233,
	-1000, -1000, 19692, -1000, 2930, -112, -1000, -1000, -1000, -1000,
	-1000, -1000, 280, -1000, -1000, -1000, -1000, -1000, -57, 711,
	-57, 588, -1000, 566, 1076, -1000, 1030, 20107, 53, 190,
	-1000, 2743, 2743, 2743, -1000, -1000, 2930, -114, -1000, 809,
	154, 2743, -1000, 1054, 354, 143, -1000, -1000, -1000, -1000,
	821, 340, -1000, 203, 154, 809, 559, 1319, -1000, 6814,
	-1000, -1000, 1075, 1116, -1000, 1399, 964, -1000, 2930, -1000,
	-1000, 111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13050, 13050, 13050, 13050, 13050, 764, 707, 559, 13050, 13050,
	764, 1387, -1000, -1000, -1000, -1000, -1000, 1232, -1000, 1011,
	-1000, -1000, 1021, 19692, 19692, -1000, 19692, 1371, 559, 19692,
	559, 13465, -1000, 15125, 849, -1000, 849, 849, -1000, 254,
	19692, 1337, 845, -1000, -1000, 280, -1000, 280, 807, 775,
	19692, -1000, 1368, -1000, 53, -1000, 706, 29, 34, -1000,
	24, 21, 20, 17, 15, -1000, -1000, -1000, -1000, 1265,
	1260, 768, -1000, -1000, 802, -1000, 1060, 797, -1000, -1000,
	790, -1000, -1000, 19692, -1000, 154, 1011, 954, -1000, 430,
	19692, 20107, 1397, 1383, -1000, -1000, 2207, 2207, 2207, 2207,
	125, -1000, -1000, 2207, 2207, -1000, 11390, 1419, -1000, 1011,
	-1000, 1030, 260, -1000, -1000, -1000, 834, -1000, 266, 19692,
	-1000, -1000, -1000, 254, -1000, 786, 390, 695, -1000, -1000,
	160, -1000, -1000, -1000, -1000, 828, -1000, 72, 2727, -1000,
	-1000, -1000, -1000, -1000, -1000, 1271, 1269, 39, 200, 1229,
	1253, 1377, -1000, -1000, -1000, 271, 19692, 1054, -1000, -1000,
	-1000, -1000, 116, 6814, 4724, 806, -1000, -1000, 11805, 11805,
	-1000, -1000, -1000, -1000, 764, 82, -221, -1000, -1000, 961,
	20522, 924, 764, 19692, -1000, -1000, -1000, -1000, -1000, 560,
	-1000, 20107, 254, 68, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11390, 11390, 2727,
	-1000, -1000, -1000, -1000, 1059, 553, 1260, 1376, 1258, 1255,
	-1000, 694, -1000, 801, 1057, -1000, 795, -1000, 19692, -1000,
	-1000, 887, -1000, 559, -1000, 918, -1000, 559, -1000, -1000,
	1195, -215, -225, 764, 836, -1000, -1000, -1000, 1056, -1000,
	254, 76, -1000, 780, 716, -299, -1000, -1000, 19692, 1262,
	-1000, 690, -1000, 1374, 1373, -1000, 254, 19692, -1000, 116,
	1203, -218, 11805, -1000, 1190, -1000, -1000, 19692, -1000, 765,
	568, 626, -1000, 11390, 573, 2526, 783, -1000, -1000, 660,
	594, -1000, 774, -1000, 129, -1000, -1000, -219, 763, 267,
	-1000, -1000, 499, 573, -1000, 624, -300, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 573, -1000, -1000,
	-1000, -1000, -1000, 254, 117, -222, 1110, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -301, 573, 275, -304, -1000, 1011,
	-226, 1052, 1024, 1406, -1000, 767, -305, 187, 573, 564,
	-1000, -1000, 11390, 696, 12220, -1000, -1000, 1418, -1000, 1411,
	332, 332, 495, 573, -1000, -306, 180, 573, -1000, 544,
	-1000, 2207, 764, -1000, -1000, -1000, 167, 561, -1000, -1000,
	511, -1000, -307, 573, -1000, -1000, -1000, -1000, -1000, 178,
	501, -308, -1000, 177, 573, -1000,
}

var yyPgo = [...]int{
	0, 1747, 270, 708, 1746, 1745, 1742, 33, 16, 13,
	25, 1741, 1519, 1516, 1508, 1506, 1739, 1503, 20, 6,
	48, 31, 28, 15, 1738, 8, 1737, 1735, 11, 1733,
	5, 89, 1732, 1731, 1730, 1729, 1728, 1501, 1724, 1723,
	1722, 1720, 1718, 1493, 1484, 1717, 1716, 1477, 1469, 1715,
	1711, 1461, 1436, 1434, 1706, 128, 1700, 1697, 1695, 122,
	1693, 109, 1688, 1685, 1683, 71, 1518, 85, 76, 597,
	1664, 18, 1663, 64, 96, 137, 1662, 69, 1660, 1659,
	112, 1657, 1656, 1654, 90, 1653, 1652, 2162, 1650, 1645,
	101, 1644, 53, 39, 88, 1643, 1642, 1641, 1639, 81,
	854, 1638, 1637, 1636, 60, 1635, 1634, 129, 1633, 1630,
	1629, 99, 50, 1628, 46, 49, 54, 1627, 244, 24,
	1626, 93, 1625, 1623, 1622, 1621, 1620, 32, 1619, 42,
	1615, 104, 78, 245, 2, 51, 62, 100, 1614, 10,
	1613, 80, 68, 59, 40, 105, 1611, 113, 92, 1607,
	1606, 632, 1605, 1604, 82, 1602, 57, 110, 1601, 547,
	111, 66, 1599, 1598, 1594, 1593, 63, 86, 1592, 1591,
	41, 216, 107, 174, 19, 1445, 97, 114, 1590, 35,
	1588, 2403, 102, 55, 73, 1587, 1586, 70, 84, 43,
	1585, 1584, 1583, 1582, 1581, 1579, 186, 1578, 1577, 1575,
	1574, 108, 72, 1572, 1568, 87, 75, 1565, 1563, 1562,
	1561, 1559, 91, 65, 103, 1558, 77, 83, 1555, 1551,
	1548, 1547, 47, 38, 1546, 1543, 1542, 67, 37, 1541,
	45, 27, 21, 52, 7, 56, 1540, 12, 1539, 36,
	1538, 22, 1537, 30, 79, 3, 4, 9, 1536, 1535,
	1534, 23, 1532, 1529, 1528, 1510, 58, 1487, 1475, 44,
	1473, 1471, 1463, 1459, 1455, 0, 142, 115, 1450, 1438,
	121,
}

var yyR1 = [...]int{
	0, 263, 264, 264, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 54,
	2, 2, 2, 6, 3, 4, 4, 5, 5, 7,
	7, 58, 58, 8, 9, 9, 9, 9, 267, 267,
	82, 82, 80, 80, 81, 81, 141, 141, 10, 10,
	10, 10, 145, 145, 148, 148, 148, 149, 149, 149,
	149, 185, 185, 134, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 254, 254, 255, 255, 256, 256, 256,
	256, 257, 257, 258, 258, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 26, 26,
	169, 169, 35, 35, 36, 36, 36, 130, 130, 130,
	11, 11, 11, 11, 11, 18, 20, 20, 27, 27,
	28, 21, 21, 21, 21, 29, 29, 30, 22, 22,
	34, 34, 32, 32, 31, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 17, 253, 253,
	253, 25, 25, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 243, 243, 242, 241, 241, 240, 240, 239,
	41, 224, 225, 225, 225, 225, 213, 214, 189, 189,
	189, 189, 189, 189, 189, 188, 188, 188, 188, 192,
	192, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	191, 191, 191, 191, 191, 191, 191, 191, 193, 193,
	193, 193, 193, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 195, 195,
	195, 195, 195, 195, 195, 195, 212, 212, 196, 196,
	205, 205, 206, 206, 206, 203, 203, 204, 204, 207,
	207, 199, 200, 208, 201, 201, 201, 202, 202, 202,
	211, 211, 211, 211, 197, 215, 215, 234, 234, 233,
	233, 232, 232, 232, 223, 223, 229, 229, 229, 229,
	229, 218, 218, 218, 217, 217, 219, 219, 222, 222,
	231, 231, 230, 216, 216, 235, 235, 235, 235, 235,
	220, 220, 221, 221, 221, 246, 247, 245, 245, 245,
	245, 245, 226, 226, 226, 227, 227, 227, 228, 228,
	228, 248, 248, 37, 37, 37, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 129, 129, 129, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 167, 167, 244,
	244, 244, 244, 244, 238, 236, 236, 237, 237, 13,
	42, 42, 14, 14, 14, 14, 14, 14, 14, 15,
	15, 43, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 70, 155, 155, 153, 153,
	156, 156, 154, 154, 154, 157, 157, 157, 158, 158,
	186, 186, 186, 45, 45, 50, 50, 53, 51, 52,
	168, 168, 48, 48, 49, 49, 49, 49, 64, 64,
	268, 268, 47, 47, 46, 46, 46, 46, 16, 269,
	55, 56, 56, 57, 57, 57, 61, 61, 61, 59,
	59, 59, 60, 60, 67, 67, 66, 66, 68, 68,
	68, 68, 132, 132, 132, 133, 133, 178, 178, 178,
	177, 177, 177, 177, 72, 72, 73, 73, 74, 74,
	75, 75, 75, 75, 91, 91, 92, 92, 92, 92,
	92, 102, 102, 140, 140, 139, 139, 142, 142, 76,
	76, 76, 76, 77, 77, 78, 78, 79, 79, 166,
	166, 183, 183, 183, 83, 83, 83, 85, 84, 84,
	84, 84, 86, 86, 88, 89, 89, 87, 87, 90,
	93, 93, 93, 93, 94, 94, 69, 69, 69, 69,
	69, 69, 69, 152, 152, 96, 96, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 110, 110, 110,
	110, 110, 110, 97, 97, 97, 97, 97, 97, 97,
	65, 65, 111, 111, 111, 118, 112, 112, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 105, 105, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 270, 270, 107, 106, 106, 106,
	106, 106, 106, 62, 62, 62, 62, 62, 184, 184,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 122, 122, 63, 63, 120, 120, 121,
	123, 123, 119, 119, 119, 99, 99, 99, 99, 99,
	99, 99, 99, 101, 101, 101, 124, 124, 113, 113,
	71, 71, 125, 125, 126, 126, 127, 127, 128, 128,
	131, 131, 135, 135, 135, 136, 136, 136, 136, 137,
	137, 137, 98, 98, 98, 98, 98, 98, 138, 138,
	138, 138, 143, 143, 114, 114, 116, 116, 115, 117,
	144, 144, 147, 147, 147, 147, 146, 146, 146, 180,
	180, 180, 150, 150, 159, 159, 160, 160, 151, 151,
	198, 198, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 165, 165, 164, 164, 164, 161, 161, 161, 162,
	162, 179, 179, 175, 175, 176, 176, 181, 181, 182,
	182, 249, 249, 209, 209, 262, 262, 210, 210, 251,
	251, 252, 252, 260, 260, 261, 261, 250, 250, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	265, 266, 170, 171, 171, 171,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 1, 3,
	0, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 1, 3, 3, 3, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 3, 3, 2, 4, 5,
	2, 3, 4, 2, 2, 3, 3, 3, 3, 3,
	4, 1, 1, 1, 1, 1, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 0, 1, 1,
	2, 2, 3, 1, 0, 3, 3, 0, 2, 2,
	2, 1, 2, 1, 2, 5, 4, 0, 1, 1,
	2, 2, 3, 2, 0, 1, 2, 3, 3, 2,
	2, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 0, 2, 1, 1, 1, 6, 10, 9, 7,
	7, 7, 9, 7, 12, 14, 7, 7, 9, 9,
	10, 5, 6, 8, 7, 0, 1, 2, 4, 7,
	5, 5, 5, 12, 7, 5, 9, 0, 1, 1,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 4, 4, 4, 4, 4, 3,
	2, 3, 4, 4, 3, 6, 6, 4, 4, 4,
	4, 4, 4, 3, 3, 2, 6, 2, 4, 4,
	4, 3, 7, 6, 5, 4, 2, 4, 3, 4,
	3, 3, 5, 2, 3, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 1, 3, 1, 2,
	3, 5, 2, 4, 7, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 1, 3, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 3, 2, 1, 1, 3, 3,
	0, 5, 5, 5, 0, 2, 1, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 9, 4, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 1, 0, 2, 1, 1, 0, 3, 1, 3,
	2, 2, 0, 1, 1, 0, 2, 4, 4, 0,
	2, 4, 2, 1, 3, 5, 4, 6, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -263, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -54, -3, -4, 6,
	7, -58, 9, 10, 30, -41, 129, -38, -39, -40,
	132, 131, 168, 133, 161, 63, 214, -53, 217, 218,
	-268, -168, 166, 167, 31, 32, 135, 212, 20, 37,
	-265, 8, 309, 130, 215, 163, 162, 26, 67, -264,
	424, -127, 15, -57, 5, -55, -269, -55, -55, -55,
	-55, -55, -224, 104, 67, -162, 142, 85, 300, 138,
	-169, 139, -161, 190, 44, 149, 148, 139, 139, 140,
	142, 300, 138, 176, 175, 139, -87, -181, 70, -173,
	351, 152, 366, 367, 130, 187, 214, 225, 219, 253,
	241, 352, 368, 153, 207, 137, 239, 242, 287, 151,
	200, 369, 274, 282, 210, 79, 217, 296, 370, 154,
	204, 206, 205, 195, 211, 36, 164, 237, 230, 190,
	371, 359, 228, 28, 185, 372, 284, 258, 373, 356,
	283, 233, 229, 135, 374, 155, 149, 178, 375, 259,
	263, 376, 288, 377, 378, 379, 141, 223, 224, 380,
	191, 290, 257, 33, 150, 353, 48, 173, 291, 38,
	261, 37, 273, 381, 256, 251, 382, 383, 384, 385,
	255, 222, 250, 202, 52, 136, 265, 264, 266, 203,
	286, 246, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 189, 399, 234, 146,
	400, 175, 401, 355, 402, 292, 227, 403, 157, 172,
	166, 295, 404, 405, 406, 407, 158, 408, 409, 410,
	218, 276, 208, 411, 412, 413, 414, 199, 184, 298,
	289, 51, 212, 270, 415, 221, 148, 213, 416, 215,
	43, 181, 7, 201, 277, 209, 248, 174, 417, 418,
	235, 236, 254, 220, 249, 216, 176, 177, 168, 419,
	297, 271, 357, 50, 243, 240, 182, 247, 420, 142,
	179, 180, 421, 278, 279, 183, 354, 293, 238, 272,
	139, 122, 242, 287, 129, 275, 276, 284, -218, 285,
	175, 178, -186, 139, -153, 274, 278, 279, 183, 70,
	140, 141, 33, 289, 288, 280, -181, -64, 133, 169,
	-87, -170, -170, -170, 277, 277, -170, -34, 213, 70,
	36, -2, -151, 142, 279, 144, 216, -136, 17, 16,
	-5, -3, -265, 6, 21, 22, -61, 53, 54, -56,
	-68, 113, -69, -181, -95, 87, -100, 29, 70, -173,
	24, -99, -96, -119, -117, -118, 122, 123, 124, 111,
	112, 119, 88, 125, -105, -103, -104, -106, -108, -109,
	72, 71, 80, 73, 74, 75, 76, 81, 82, 83,
	-175, -115, -265, 57, 58, 138, 310, 311, 312, 313,
	350, 159, 314, 90, 47, 299, 308, 307, 306, 304,
	305, 301, 303, 302, 316, 317, 145, 300, 117, 309,
	339, 340, 341, 342, 343, 344, 345, 346, 348, 349,
	347, 329, 322, 323, 324, 325, 326, 327, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, -151, -151,
	11, -80, -81, -87, -90, -181, -144, -185, 216, -147,
	289, 288, -119, -146, -175, -181, 287, 242, 286, -87,
	-225, -214, -176, -175, -172, 70, -173, 134, 160, 86,
	358, 23, 25, 268, 322, 89, 122, 323, 324, 325,
	16, 20, 90, 121, 310, 326, 129, 61, 301, 303,
	299, 300, 275, 29, 10, 26, 162, 194, 22, 115,
	131, 93, 94, 95, 165, 24, 163, 83, 159, 19,
	64, 11, 13, 320, 321, 14, 145, 144, 106, 192,
	140, 59, 8, 125, 27, 103, 55, 327, 328, 362,
	45, 363, 57, 104, 17, 304, 305, 31, 350, 329,
	170, 364, 330, 117, 197, 62, 49, 87, 81, 34,
	84, 65, 85, 15, 193, 60, 318, 196, 365, 105,
	132, 309, 58, 138, 6, 315, 30, 161, 333, 332,
	331, 334, 198, 56, 312, 313, 335, 422, 139, 92,
	316, 317, 143, 82, 5, 44, 32, 9, 63, 66,
	306, 307, 308, 47, 337, 336, 338, 91, 12, 319,
	140, -87, 309, -160, 145, -160, 176, 175, -160, 96,
	-42, -87, -159, 145, -175, -159, -159, -159, -159, -159,
	-87, 126, -87, 70, 30, -171, -265, -176, 300, 138,
	70, 175, 178, 139, 176, 142, -171, -171, -220, 11,
	106, 181, 181, 181, 182, -171, -156, -155, 177, 282,
	283, 277, 281, 12, -70, 104, 182, 277, 180, -171,
	-49, -2, -9, -7, -8, -2, 96, -170, -170, 30,
	72, 50, -253, 67, -209, 273, -266, 69, 139, -87,
	129, 131, 134, 65, -137, 19, 31, -69, -181, -128,
	-131, -69, -174, 322, 323, 324, 325, 326, 339, 340,
	341, 327, 328, 342, 343, 344, 329, 330, 345, 346,
	348, 349, 347, 333, 332, 331, 334, 335, 337, 336,
	338, -127, -2, -55, 49, -59, 21, 22, 78, 11,
	-178, 86, 85, 103, -177, 23, 70, -173, -174, 72,
	322, 323, 324, 325, 326, 339, 340, 341, 327, 328,
	342, 343, 344, 329, 330, 345, 346, 348, 349, 347,
	333, 332, 331, 334, 335, 337, 336, 338, 126, -69,
	-97, 106, 87, 104, 105, 89, 108, 107, 118, 111,
	112, 113, 114, 115, 116, 117, 109, 110, 121, 96,
	97, 98, 99, 100, 101, 102, -152, -265, -118, -265,
	127, 128, -100, -100, -100, -100, -100, -100, -100, -100,
	-265, -2, -112, -69, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -122, -69, -265, -270, -107,
	-265, -270, -107, -270, -107, -270, -265, -270, -107, -270,
	-107, -270, -270, -107, -270, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -89,
	27, -87, -73, -74, -75, -76, -91, -118, -265, -87,
	-87, -80, -267, 68, 11, 66, -267, 68, 126, 68,
	-144, 216, -145, -148, 290, 292, 96, -180, -175, 72,
	29, 126, 30, 69, 68, -188, -192, -194, -193, -195,
	-190, -191, 239, 242, 246, 244, 240, 245, 122, 243,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 30, 164, 235, 236, 237, 238, 259, 260, 261,
	262, 263, 264, 265, 266, 219, 241, 352, 220, 221,
	222, 223, 224, 225, 227, 228, 229, 230, 231, 232,
	233, -175, 23, 142, 70, 87, 70, 70, 70, -87,
	70, 68, 143, -80, 24, 65, -82, -87, 70, 70,
	70, 70, -182, -181, -172, -171, -171, -160, -160, -171,
	-171, -171, -87, -87, -87, -87, -157, 104, 12, -157,
	-171, -171, 11, -154, 11, 106, -154, -69, -100, -158,
	104, 65, 70, -32, -31, -33, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 72, 69,
	-112, -249, 423, -87, -171, 179, 179, 139, 139, 184,
	-87, 9, 106, 68, 18, 126, 68, -135, 25, 26,
	-135, -136, -266, -61, -101, 50, 73, 76, -60, 56,
	-87, -69, -69, -110, 81, 87, 82, 83, -177, 113,
	-182, -176, -172, -100, -111, -115, -118, 77, 106, 104,
	105, 89, -100, -100, -100, -100, -100, -100, -100, -100,
	-100, -100, -100, -100, -100, -100, -100, -184, 70, 72,
	70, -99, -99, -175, -59, -266, 68, -266, -2, -66,
	-68, -66, -266, -69, -69, -119, 72, -66, -119, 72,
	-66, -66, -66, -59, -120, -121, 91, -119, -266, -100,
	-175, -175, -66, -67, -66, -66, -66, -266, -266, -68,
	-66, -68, -66, -66, -266, -266, -266, -266, -59, -59,
	-66, -66, -66, -59, -66, -66, -59, -66, -66, -66,
	-66, -59, -66, -66, -66, -141, 171, -87, 30, 68,
	-83, -85, -84, -86, 55, 59, 61, 56, 57, 58,
	62, -166, 23, -73, -265, -92, 171, -93, 23, -183,
	63, 144, 64, -181, -174, 72, -141, 66, -73, -87,
	-73, -90, -181, 113, -147, -145, 68, 291, 293, 294,
	65, 84, -69, -202, 121, -176, -182, -226, -227, -228,
	-176, 72, 73, -214, -215, -216, -229, 154, -235, 146,
	148, 44, -217, 155, 140, 45, -189, -203, 271, -196,
	67, -196, -196, 247, 239, 242, 240, -196, -196, -196,
	-196, -196, -201, 242, -201, -201, -201, -201, 240, 67,
	67, -196, -196, -196, -205, 67, -205, 234, -205, -206,
	67, -206, -206, -206, -179, 66, -134, -87, -171, 24,
	-171, -35, 187, 160, 67, -87, -87, -87, 68, 70,
	70, -221, 11, 106, 72, -69, -87, -102, 23, -181,
	-181, -157, -65, 165, 72, -87, 68, 96, 69, -88,
	27, 72, -163, 134, 131, 132, 136, 137, -238, 268,
	130, 242, 79, 29, 15, 310, 171, 357, 70, 172,
	-87, -87, -87, -87, -87, 134, 131, 51, -69, -69,
	-131, -137, -150, 19, 11, 47, 47, -66, 81, 82,
	83, 126, -265, -111, -100, -100, -100, -65, 86, -266,
	-67, -69, -266, 68, -266, -266, 68, 66, 23, 11,
	11, -266, 11, 11, -266, -266, -266, -66, -123, -121,
	93, -69, -266, -266, 68, 68, -266, -266, -266, -266,
	-132, 318, -132, -266, -266, -266, -266, -266, -132, -132,
	-132, -132, -66, -66, -266, -266, -266, -66, -266, -266,
	-66, -266, -266, -266, -266, -66, -266, -266, -266, -98,
	30, 47, -2, -265, -265, -144, -74, -75, -75, -74,
	-75, 55, 55, 55, 60, 55, 60, 55, -84, -183,
	-266, -265, 34, -183, -93, 140, 140, 140, -94, 12,
	-73, -94, -94, 126, -148, -149, 295, 292, 298, 70,
	72, 126, 68, -228, 96, 67, 70, 45, -217, 140,
	45, -217, -222, 70, -222, 45, -207, -199, -200, -208,
	-211, -197, 81, 87, 29, 65, 268, 146, 45, 44,
	79, -204, 272, 73, -201, -201, -196, -196, -196, 247,
	-196, -201, -202, 30, -202, -202, -202, -202, -201, -212,
	72, -212, 73, -205, 73, 65, -175, -2, 23, -36,
	8, 9, 10, -254, -255, -256, 70, 106, 192, 193,
	143, -171, -87, -171, -171, -94, 70, 70, -154, -157,
	34, -100, -31, -99, -141, 139, -170, -167, -244, -217,
	-248, -216, 147, 151, 154, 155, 146, 171, -167, -244,
	154, -217, 155, 147, -164, -217, 143, 23, -167, -167,
	-223, 96, 171, -243, 66, 179, 268, 179, 52, -87,
	-72, 11, 113, -176, -67, -65, 86, -100, -266, -68,
	-187, 122, 239, 164, 237, 230, 257, 244, 270, 235,
	271, -184, -187, -100, -100, -100, -100, 351, -127, 95,
	-69, 92, -100, -100, -175, -265, -132, -132, -132, -132,
	-132, -266, -266, -133, -132, -133, -133, -266, -133, -133,
	-266, -133, -133, -133, -133, -266, -133, -133, -133, -143,
	65, -144, -114, -116, -115, -265, -2, -138, -175, -142,
	-175, -94, -78, -77, 65, 66, -79, 65, -77, 55,
	55, -142, -100, -93, -265, -265, -265, -127, -69, -94,
	292, 296, 297, -227, -228, -231, -230, -175, -235, 155,
	-222, -222, 67, 81, -100, 9, 45, 45, 72, 69,
	-202, -202, -201, -196, -202, 70, 122, -202, 69, 68,
	69, 68, 69, 68, -87, -134, -134, 65, 69, 68,
	-188, 70, 70, 70, -87, -157, -100, -201, -87, 67,
	-213, 70, -170, -222, -161, 70, 70, -170, 70, -175,
	45, 70, -87, -175, -213, 70, -69, -175, -241, 354,
	-242, 70, -175, -175, -175, -94, -73, -266, -100, -266,
	-196, -196, -196, -206, -196, 224, -196, 224, -266, -266,
	19, 19, 19, 19, -265, -63, 315, -69, 68, 68,
	-127, 171, -133, -133, -133, -133, -133, 28, -143, 68,
	-266, -266, -266, 68, 126, -266, 68, -127, -69, 67,
	-69, -266, -93, -166, -139, -175, -139, -139, -136, 69,
	68, -196, -139, -104, -202, -201, 72, -201, 73, 73,
	67, -2, -87, -257, -258, -259, 79, 353, 87, 194,
	195, 156, 196, 197, 198, -256, -188, -188, -188, -260,
	-156, -213, -129, 159, 160, -188, -179, -219, -217, 70,
	-165, 143, 23, 143, -129, -213, 27, -240, -239, -176,
	67, 66, -124, 13, -201, 70, -100, -100, -100, -100,
	-100, -266, 72, -100, -100, -266, 16, 45, -116, 47,
	-2, -265, -175, -175, -175, -136, -139, -92, -183, 68,
	-266, -266, -266, -233, -232, 66, 150, 79, -230, -135,
	69, -202, -202, 69, 69, -231, -134, 19, -134, -259,
	72, 198, 194, 198, 198, 198, 198, 199, -261, 38,
	-251, 39, 69, -170, 70, -189, 67, -222, 70, -175,
	-170, -129, -265, 68, 96, -139, -87, -125, 14, 16,
	-266, -266, -266, -266, -62, 106, 354, -266, -266, -112,
	9, -114, -2, 126, 69, -93, -175, -232, 70, -223,
	72, 157, 69, 185, -23, -2, -7, -8, -9, -10,
	-12, -37, -13, -14, -20, -21, -15, -43, -44, -53,
	-51, -52, -48, -47, -22, -17, -24, 90, 145, 214,
	36, 36, 190, 191, -198, 144, -250, 43, -262, -210,
	42, 16, -170, -231, -179, -170, -236, -237, 171, -239,
	-228, 69, -126, -69, -174, -113, -71, -69, -174, -266,
	352, 62, 355, -127, -144, -266, -175, 73, -87, -234,
	-233, 186, -134, -69, -69, -26, -23, -140, 67, 73,
	-251, 16, -252, 40, 41, 72, 69, 67, -266, 68,
	-175, -243, 68, 52, 353, 356, -266, 67, -130, 188,
	189, -27, -28, 91, 92, 424, -139, 38, 72, 16,
	16, -234, -231, -237, 47, -241, -71, 52, -139, -134,
	70, 70, 95, 93, -28, -69, -25, -19, -2, -7,
	-8, -9, -10, -20, -21, -22, -18, 214, 95, -23,
	69, 72, 72, 69, 173, 354, 69, -11, -18, -10,
	-7, -8, -9, 90, -25, 92, 424, -25, -234, 174,
	355, -246, -247, 65, -134, 424, -25, 95, 93, -29,
	-19, -30, 94, 424, -265, 356, -247, 65, -246, 65,
	10, 9, 95, 424, 145, -25, 95, 93, -30, -69,
	95, -100, 170, -245, 158, 153, 156, 30, -245, 90,
	424, 145, -25, 92, -266, -266, 152, 29, 81, 95,
	424, -25, 145, 95, 424, 145,
}

var yyDef = [...]int{
	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 796, 0, 499,
	499, 499, 499, 499, 499, 0, -2, 363, 364, 365,
	0, 0, 0, 0, -2, 474, 475, 476, 478, 479,
	488, -2, 1272, 1272, 0, 0, 1272, 0, 0, 0,
	0, 41, 42, 848, 0, 491, 480, 481, 1270, 1,
	3, 805, 0, 0, 503, 506, 501, 0, 848, 848,
	0, 0, 74, 0, 0, 0, 0, 0, 846, 846,
	0, 846, 870, 0, 866, 867, 868, 0, 844, 0,
	844, 844, 844, 844, 844, 0, 420, 587, 877, 878,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	0, 0, 0, 1273, 0, 1273, 1273, 435, 0, 437,
	0, 0, 0, 1273, 0, 446, 0, 0, 453, 1273,
	321, 322, 323, 471, 472, 459, 473, 0, 0, 0,
	492, 493, 494, 495, 1272, 1272, 498, 158, 0, 178,
	883, 35, 0, 0, 0, 849, 477, 809, 0, 0,
	796, 37, 0, 499, 504, 505, 509, 507, 508, 500,
	0, 518, 527, 0, 596, 0, 601, 603, -2, -2,
	0, 638, 639, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 667, 668, 669, 670, 671,
	775, 776, 777, 778, 779, 780, 781, 782, 605, 606,
	772, 829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 763, 0, 734, 734, 734, 734, 734,
	734, 734, 734, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 587, 58, 0, 1217, 830,
	-2, -2, 0, 0, 772, 0, -2, 1049, -2, 75,
	0, 202, 0, 875, 876, 873, 874, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 421, 1273, 1273, 424, 1274, 1275, 846, 846,
	1273, 1273, 1273, 0, 0, 0, 433, 434, 0, 340,
	341, 465, 465, 1273, 1273, 441, 0, 462, 462, 460,
	461, 456, 457, 0, 448, 0, 468, 450, 451, 454,
	482, -2, 485, 486, 487, -2, 0, 496, 497, 0,
	160, 0, 177, 0, 881, 884, 36, 1271, 0, 1273,
	0, 0, 0, 0, 30, 0, 0, 806, 0, 797,
	798, 802, 802, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 805, 35, 506, 0, 512, 510, 511, 502, 0,
	519, 0, 0, 0, 528, 0, 530, 531, 532, 533,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 623,
	624, 625, 626, 627, 628, 629, 602, 0, 616, 0,
	0, 0, 658, 659, 660, 661, 662, 663, 664, 0,
	509, 35, 0, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 0, 764, 0, 717, 726,
	0, 718, 727, 719, 728, 720, 0, 721, 729, 722,
	730, 723, 724, 731, 725, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 509, 0, 0, 0, 509, 0, 0,
	509, 0, 0, 0, 0, 509, 0, 0, 0, 56,
	0, 586, 0, 536, 538, 539, 540, -2, 0, 590,
	-2, 0, 0, 0, 48, 49, 0, 0, 0, 0,
	59, 1217, 61, 62, 0, 0, 0, 297, 839, 840,
	841, 0, 837, 352, 0, 208, 285, 216, 217, 218,
	278, 220, 278, 278, 0, 278, 278, 278, 278, 278,
	294, 294, 294, 294, 294, 261, 262, 263, 264, 265,
	0, 0, 238, 278, 278, 278, 242, 268, 269, 270,
	271, 272, 273, 274, 275, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 280, 280, 280, 282, 282, 282,
	282, 871, 73, 0, 1273, 0, 1273, 0, 0, 200,
	131, 0, 0, 412, 845, 0, 414, 50, 415, 416,
	417, 418, 588, 879, 880, 422, 423, 0, 0, 427,
	428, 429, 430, 431, 432, 342, 438, 0, 0, 439,
	440, 445, 0, 551, 0, 0, 465, 447, 630, 449,
	0, 0, 489, 159, 162, 0, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 161, 179,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 0, 0, 800, 803, 804,
	801, 809, 38, 509, 0, 783, 0, 0, 0, 513,
	33, 597, 598, 600, 617, 0, 619, 621, 529, 520,
	0, 773, -2, 607, 608, 632, 633, 634, 0, 0,
	0, 0, 630, 612, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 657, 748, 749,
	0, 655, 656, 665, 514, 635, 0, 828, 35, 0,
	516, 0, 704, 0, 0, 640, 775, 0, 640, 775,
	0, 0, 0, 0, 770, 767, 0, 0, 735, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 574, 0, 0, 577, 0, 0,
	0, 0, 570, 0, 0, 544, 1151, 546, 0, 590,
	0, 0, 0, 571, 572, 573, 594, 0, 594, 53,
	594, 55, 0, 589, 831, 60, 0, 0, 65, 66,
	832, 833, 834, 835, 0, 773, 0, 201, 353, 355,
	358, 359, 360, 203, 204, 205, 0, 1061, 334, 1161,
	1198, -2, 328, 1087, -2, -2, 207, 287, 286, 219,
	0, 294, 294, 278, 278, 278, 278, 247, 294, 250,
	253, 254, 297, 0, 297, 297, 297, 297, 294, 0,
	0, 239, 240, 241, 230, 0, 231, 280, 233, 234,
	0, 235, 236, 237, 0, 0, 0, 0, 79, 847,
	80, 0, 132, 133, 83, 0, 410, 1273, 0, 1273,
	1273, 594, 0, 0, 466, 467, 462, 465, 0, 463,
	464, 444, 455, 0, 469, 452, 0, 0, 180, 56,
	0, 882, 1272, -2, 397, 863, 397, 397, 381, 314,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 0,
	192, 390, 392, 391, 395, 0, 0, 0, 807, 808,
	799, 31, 0, 842, 843, 784, 785, 534, 618, 620,
	622, 0, 514, 609, 630, 613, 0, 610, 0, 604,
	0, 637, -2, 0, 702, 703, 0, 0, 0, 0,
	0, 741, 0, 0, 742, 0, 713, 796, 0, 768,
	0, 0, 716, 736, 0, 0, 737, 738, 739, 740,
	691, 0, 692, 0, 0, 0, 0, 0, 698, 699,
	700, 701, 0, 0, 525, 525, 525, 0, 525, 525,
	0, 525, 525, 525, 525, 0, 525, 525, 525, 822,
	0, 0, -2, 0, 0, 594, 537, 565, 567, 0,
	562, 575, 576, 578, 0, 580, 0, 582, 583, 541,
	543, 0, 0, 590, 550, 0, 0, 0, 796, 0,
	594, 46, 47, 0, 63, 64, 0, 0, 70, 298,
	299, 0, 0, 356, 0, 0, 0, 316, 328, 324,
	325, 328, 319, 329, 320, 0, 209, 210, 211, 212,
	213, 214, 289, 0, 0, 0, 293, 0, 301, 303,
	0, 215, 288, 0, 297, 297, 294, 245, 246, 278,
	251, 297, 255, 0, 256, 257, 258, 259, 297, 0,
	276, 0, 0, 232, 0, 0, 872, -2, 73, 0,
	134, 135, 136, 0, 84, 85, 0, 0, 0, 0,
	0, 413, 51, 425, 426, 436, 343, 344, 465, 443,
	0, 631, 163, 164, 294, 0, 366, 0, 1272, 328,
	0, 382, 398, 399, 400, 401, 402, 403, 0, 1272,
	400, 0, 401, 0, 0, 0, 864, 865, 0, 0,
	0, 315, 0, 195, 0, 0, 0, 0, 811, 32,
	594, 0, 521, 774, 0, 611, 0, 614, 672, 517,
	0, 278, 278, 753, 278, 282, 756, 278, 758, 278,
	761, 0, 0, 0, 0, 0, 0, 0, 765, 715,
	771, 0, 0, 0, 522, 796, 693, 694, 695, 696,
	697, 525, 525, 676, 526, 677, 678, 525, 680, 681,
	525, 683, 684, 685, 686, 525, 688, 689, 690, 39,
	0, 822, 812, 824, 826, 0, 35, 0, 818, 0,
	557, 796, 559, 566, 0, 0, 560, 0, 561, 579,
	581, 0, -2, 549, 0, 0, 0, 805, 595, 45,
	67, 68, 69, 354, 357, 0, 330, 278, 333, 0,
	317, 318, 0, 290, 291, 0, 300, 302, 304, 279,
	243, 244, 297, 252, 248, 295, 296, 260, 294, 0,
	294, 0, 283, 0, 0, 77, 0, 0, 91, 0,
	87, 0, 0, 0, 411, 442, 552, 893, 584, 0,
	385, 0, 369, 871, 326, 362, 370, 371, 376, 377,
	0, 0, 373, 0, 385, 0, 384, 0, 389, 0,
	193, 194, 0, 0, 394, 786, 535, 673, 615, 705,
	750, 294, 754, 755, 757, 759, 760, 762, 707, 706,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 0,
	0, 0, 674, 675, 679, 682, 687, 0, 40, 0,
	827, -2, 0, 0, 0, 57, 0, 805, 563, 0,
	568, 590, 547, 0, 0, 555, 0, 0, 44, 306,
	0, 802, 0, 292, 249, 297, 277, 297, 0, 0,
	0, -2, 0, 73, 92, 93, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 86, 88, 89, 90, 895,
	889, 0, 1272, 386, 0, 208, 0, 328, 327, 383,
	0, 861, 862, 0, 1272, 385, 0, 196, 197, 0,
	0, 0, 792, 0, 751, 752, 0, 0, 0, 0,
	743, 714, 766, 0, 0, 523, 0, 0, 825, 0,
	-2, 0, 820, 819, 558, 43, 0, 545, 590, 0,
	591, 592, 593, 305, 309, 0, 314, 0, 331, 332,
	0, 266, 267, 281, 284, 0, 78, 0, 0, 94,
	95, 96, 97, 99, 100, 0, 0, 0, 850, 897,
	-2, 0, 1272, 368, 387, 206, 0, 871, 372, 378,
	379, 1272, 0, 0, 0, 0, 396, 34, 0, 0,
	708, 710, 709, 711, 0, 0, 0, 732, 733, 796,
	0, 815, 35, 0, 564, 548, 556, 310, 311, 0,
	313, 0, 307, 0, 73, -2, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 0, 0, 0,
	101, 102, 103, 104, 553, 0, 889, 0, 891, 0,
	888, 0, 367, 0, 0, 380, 0, 405, 0, 198,
	199, 192, 793, 794, 795, 787, 788, 790, 791, 712,
	0, 0, 0, 0, 823, -2, 821, 312, 0, 76,
	308, 137, 82, 0, 0, 0, 128, 29, 0, 0,
	896, 0, 894, 0, 0, 890, 307, 0, 404, 0,
	0, 195, 0, 744, 0, 747, 524, 0, 73, 0,
	0, 0, 148, 0, 0, 0, 0, 851, 898, 0,
	0, 374, 0, 406, 0, 393, 789, 745, 0, 0,
	138, 139, 0, 0, 149, 0, 0, 181, -2, 184,
	185, 186, 187, 188, 189, 190, 191, 0, 127, 129,
	554, 892, 886, 307, 0, 0, 335, 73, 140, 141,
	142, 143, 144, 146, 0, 0, 0, 0, 375, 0,
	0, 336, 337, 0, 81, 0, 0, 0, 0, 0,
	182, 155, 0, 0, 0, 746, 338, 0, 339, 0,
	0, 0, 0, 150, 151, 0, 0, 0, 156, 0,
	145, 0, 0, 345, 347, 348, 0, 0, 346, 147,
	0, 153, 0, 0, 407, 408, 349, 350, 351, 0,
	0, 0, 152, 0, 157, 154,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:385
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:390
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:391
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:395
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:422
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:428
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:434
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:442
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:446
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:452
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:459
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:469
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:475
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:479
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:486
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:498
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:510
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:520
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:526
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:530
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:534
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:538
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:552
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:562
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:572
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:577
		{
			yyVAL.partitions = nil
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:581
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:587
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:591
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:609
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:623
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:629
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:633
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:637
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
			yyVAL.str = SessionStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
			yyVAL.str = GlobalStr
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:670
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 76:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:675
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:679
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:687
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:695
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 81:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:703
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 82:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:707
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:712
		{
			yyVAL.procedureParams = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:732
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:736
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:740
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:749
		{
			yyVAL.characteristics = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:789
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:797
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:838
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:844
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:848
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.str = ""
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:857
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.str = BeforeStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.str = AfterStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:873
		{
			yyVAL.str = InsertStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:877
		{
			yyVAL.str = UpdateStr
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.str = DeleteStr
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:886
		{
			yyVAL.triggerOrder = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:890
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:910
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:916
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:920
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:936
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:942
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:947
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:952
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 154:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:958
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:976
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:982
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:986
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1002
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.exprs = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.exprs = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1048
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1077
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1092
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1120
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1131
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1207
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1266
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1510
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1515
		{
			yyVAL.sqlVal = nil
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1524
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1528
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1536
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1546
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1563
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = ""
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = ""
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.colKeyOpt = colKey
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1652
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1656
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.indexOptions = nil
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = ""
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1706
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 335:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1797
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 336:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1801
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 337:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1805
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 338:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1809
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 339:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1813
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1842
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1848
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1866
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = yyDollar[1].str
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 367:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1937
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 368:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1944
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 372:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1967
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 374:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1972
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 375:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:1976
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 378:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 379:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1993
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 380:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2000
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2010
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2021
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnOrder = nil
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2040
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2046
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2058
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 393:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 394:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 396:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2103
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2116
		{
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
		}
	case 404:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2129
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2145
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2149
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2161
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2165
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2173
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2181
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2185
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2193
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2201
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2209
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2217
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2242
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2247
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2255
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2259
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2264
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2268
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2272
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2276
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2280
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2284
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2300
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2308
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2312
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2324
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2329
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2343
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2351
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2365
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2378
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = ""
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = "full "
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = ""
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2452
		{
			yyVAL.showFilter = nil
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.showFilter = nil
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = SessionStr
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = GlobalStr
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Begin{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.statement = &Begin{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.statement = &Commit{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.statement = &Rollback{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2536
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.statement = &OtherRead{}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			setAllowComments(yylex, true)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2607
		{
			yyVAL.bytes2 = nil
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = UnionStr
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = UnionAllStr
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = UnionDistinctStr
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2630
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.str = SQLCacheStr
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = DistinctStr
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = StraightJoinHint
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			yyVAL.selectExprs = nil
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2679
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2697
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2708
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 524:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2712
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2717
		{
			yyVAL.over = nil
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.over = yyDollar[1].over
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2726
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2757
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2806
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2821
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2825
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.expr = nil
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.columns = nil
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2867
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2890
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2894
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2898
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2910
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2914
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2920
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.empty = struct{}{}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.empty = struct{}{}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = JoinStr
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = JoinStr
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = JoinStr
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.str = StraightJoinStr
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = LeftJoinStr
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yyVAL.str = LeftJoinStr
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = RightJoinStr
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = RightJoinStr
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = NaturalJoinStr
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3000
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3014
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3025
		{
			yyVAL.indexHints = nil
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3029
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3033
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3037
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3042
		{
			yyVAL.expr = nil
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3046
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3056
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3064
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3082
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3102
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3114
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3118
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3126
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3130
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3134
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.str = IsNullStr
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3148
		{
			yyVAL.str = IsNotNullStr
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.str = IsTrueStr
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.str = IsNotTrueStr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = IsFalseStr
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = IsNotFalseStr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = EqualStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = LessThanStr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = GreaterThanStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = LessEqualStr
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = GreaterEqualStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = NotEqualStr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = nil
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3233
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3259
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3267
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3331
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3339
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3381
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 673:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3399
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3403
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3407
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3419
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3423
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3468
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3472
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3476
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3480
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3484
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3488
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3492
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3496
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3500
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3504
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3508
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 708:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 709:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 710:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 711:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 712:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 714:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3627
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3631
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3635
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3658
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3698
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = BooleanModeStr
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = QueryExpansionStr
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3766
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = nil
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = string("")
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3814
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3820
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = nil
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3839
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3843
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.expr = &NullVal{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3896
		{
			yyVAL.exprs = nil
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3925
		{
			yyVAL.expr = nil
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3929
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3944
		{
			yyVAL.orderBy = nil
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = AscScr
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = AscScr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.str = DescScr
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3986
		{
			yyVAL.limit = nil
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3994
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3998
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = ""
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = ForUpdateStr
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = ShareModeStr
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4037
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4041
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4045
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4064
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4069
		{
			yyVAL.setExprs = nil
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4073
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4083
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4119
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4125
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4129
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4137
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.bytes = []byte("charset")
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.expr = &Default{}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4168
		{
			yyVAL.byt = 0
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4170
		{
			yyVAL.byt = 1
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4173
		{
			yyVAL.byt = 0
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4175
		{
			yyVAL.byt = 1
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = IgnoreStr
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.sqlVal = nil
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4185
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.empty = struct{}{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.empty = struct{}{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.empty = struct{}{}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.empty = struct{}{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = UniqueStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = FulltextStr
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = SpatialStr
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = yyDollar[1].str
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = string("")
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4283
		{
			yyVAL.EnclosedBy = nil
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4287
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: "'" + string(yyDollar[4].bytes) + "'"}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.Fields = nil
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4323
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].str, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].str}
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4328
		{
			yyVAL.Lines = nil
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].str, TerminatedBy: yyDollar[3].str}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			decNesting(yylex)
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4756
		{
			skipToEnd(yylex)
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4761
		{
			skipToEnd(yylex)
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4765
		{
			skipToEnd(yylex)
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4769
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
