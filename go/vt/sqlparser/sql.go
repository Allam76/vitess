// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	boolean               bool
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	140, 874,
	-2, 130,
	-1, 44,
	181, 475,
	182, 475,
	-2, 463,
	-1, 51,
	1, 1277,
	424, 1277,
	-2, 495,
	-1, 388,
	126, 882,
	-2, 878,
	-1, 389,
	126, 883,
	-2, 879,
	-1, 490,
	96, 1197,
	126, 1197,
	-2, 71,
	-1, 491,
	96, 1099,
	126, 1099,
	-2, 72,
	-1, 496,
	96, 1055,
	126, 1055,
	-2, 841,
	-1, 498,
	96, 1137,
	126, 1137,
	-2, 843,
	-1, 706,
	5, 35,
	-2, 489,
	-1, 710,
	5, 35,
	-2, 488,
	-1, 932,
	1, 547,
	5, 547,
	12, 547,
	13, 547,
	14, 547,
	15, 547,
	17, 547,
	19, 547,
	30, 547,
	31, 547,
	55, 547,
	56, 547,
	57, 547,
	58, 547,
	59, 547,
	61, 547,
	62, 547,
	65, 547,
	66, 547,
	68, 547,
	69, 547,
	424, 547,
	-2, 574,
	-1, 935,
	66, 52,
	68, 52,
	-2, 56,
	-1, 1130,
	126, 885,
	-2, 881,
	-1, 1287,
	67, 330,
	-2, 1022,
	-1, 1289,
	67, 326,
	70, 326,
	-2, 957,
	-1, 1290,
	67, 327,
	70, 327,
	-2, 967,
	-1, 1373,
	67, 404,
	70, 404,
	-2, 367,
	-1, 1422,
	5, 36,
	-2, 640,
	-1, 1482,
	5, 35,
	-2, 818,
	-1, 1580,
	5, 35,
	-2, 73,
	-1, 1725,
	1, 595,
	5, 595,
	12, 595,
	13, 595,
	14, 595,
	15, 595,
	17, 595,
	19, 595,
	30, 595,
	31, 595,
	55, 595,
	56, 595,
	57, 595,
	58, 595,
	59, 595,
	61, 595,
	62, 595,
	65, 595,
	66, 595,
	68, 595,
	69, 595,
	424, 595,
	-2, 574,
	-1, 1847,
	5, 36,
	-2, 819,
	-1, 1878,
	5, 35,
	-2, 73,
	-1, 1937,
	5, 35,
	-2, 821,
	-1, 1976,
	41, 892,
	-2, 890,
	-1, 2020,
	5, 35,
	-2, 105,
	-1, 2080,
	5, 36,
	-2, 822,
	-1, 2145,
	424, 183,
	-2, 35,
}

const yyPrivate = 57344

const yyLast = 22817

var yyAct = [...]int{

	422, 60, 2183, 2196, 2084, 2153, 2144, 2152, 24, 386,
	1336, 2148, 7, 2147, 6, 2146, 5, 2143, 2133, 1252,
	2134, 2117, 2149, 8, 2062, 2151, 2150, 2071, 1976, 1950,
	2019, 1636, 71, 393, 1738, 486, 1915, 421, 1804, 1334,
	351, 1277, 1633, 1245, 1705, 1294, 1247, 1899, 857, 1882,
	1105, 367, 1739, 672, 2085, 1575, 1271, 1243, 1706, 1310,
	691, 60, 406, 504, 1533, 1239, 1785, 1588, 1702, 1508,
	92, 1712, 1276, 1326, 372, 1288, 1653, 1716, 1191, 961,
	1054, 1155, 1362, 1322, 1611, 1610, 1223, 1168, 1061, 391,
	948, 1183, 1569, 352, 353, 1230, 1132, 356, 501, 1072,
	729, 502, 509, 1040, 735, 1241, 947, 484, 779, 489,
	376, 648, 481, 937, 874, 492, 2227, 929, 2223, 2216,
	2205, 2198, 1186, 2190, 2178, 2120, 70, 1090, 1876, 1768,
	2200, 873, 2110, 2182, 2077, 2162, 1805, 75, 505, 2109,
	1670, 1451, 1832, 647, 2145, 3, 1517, 928, 1883, 1516,
	1733, 1265, 1518, 1734, 1735, 703, 1885, 1266, 1267, 949,
	770, 950, 694, 695, 363, 380, 365, 395, 77, 78,
	79, 80, 81, 355, 354, 720, 1552, 102, 98, 99,
	1296, 100, 1638, 1922, 29, 1687, 61, 32, 33, 1298,
	1298, 2076, 382, 29, 1311, 61, 32, 33, 61, 32,
	33, 650, 693, 653, 435, 361, 441, 443, 442, 439,
	440, 438, 437, 436, 104, 103, 1316, 34, 1311, 1323,
	34, 444, 445, 1302, 1304, 1888, 1303, 366, 1823, 1297,
	1821, 2001, 822, 821, 831, 832, 824, 825, 826, 827,
	828, 829, 830, 823, 358, 68, 833, 1973, 94, 1972,
	1971, 1970, 702, 1969, 68, 1967, 1686, 1968, 2047, 2048,
	1343, 1384, 2086, 1886, 1887, 1889, 1890, 1891, 2114, 2115,
	2018, 1639, 1096, 688, 689, 1383, 701, 2042, 687, 686,
	2193, 2197, 2192, 1095, 670, 1640, 1093, 1342, 2181, 87,
	652, 651, 2161, 1589, 1874, 29, 1615, 61, 32, 33,
	348, 364, 696, 2063, 2228, 1635, 697, 694, 695, 1224,
	1900, 1901, 2201, 2225, 1293, 94, 1388, 1097, 1292, 34,
	2217, 2206, 649, 1094, 671, 1382, 671, 671, 658, 1590,
	72, 1910, 2043, 2050, 671, 365, 349, 1593, 1030, 101,
	671, 1021, 89, 91, 1261, 1507, 86, 1293, 60, 60,
	1526, 1292, 96, 95, 1506, 1311, 68, 1505, 645, 707,
	1608, 709, 2009, 708, 723, 1909, 320, 97, 1396, 1559,
	1301, 1395, 1272, 60, 1432, 1850, 1380, 1374, 1375, 2042,
	1373, 1521, 1376, 1377, 2226, 1513, 1325, 2187, 842, 737,
	1411, 844, 845, 846, 93, 712, 713, 833, 1103, 57,
	1531, 2154, 783, 766, 2154, 956, 847, 848, 849, 850,
	851, 852, 853, 854, 1767, 1591, 1592, 1386, 1389, 96,
	95, 855, 1884, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 2043, 872, 875, 875, 875, 881,
	875, 875, 881, 875, 881, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 2002,
	933, 2075, 1544, 1755, 721, 1908, 1837, 62, 1381, 1100,
	845, 846, 706, 710, 943, 1530, 62, 1549, 1548, 62,
	813, 57, 666, 2154, 88, 29, 1531, 61, 32, 33,
	2185, 768, 1068, 2186, 1379, 2184, 1630, 767, 1545, 58,
	1951, 492, 1429, 945, 1062, 67, 1248, 1250, 1352, 34,
	684, 1534, 1550, 1953, 1542, 1756, 728, 778, 1531, 823,
	1543, 1634, 833, 776, 675, 826, 827, 828, 829, 830,
	823, 877, 879, 833, 883, 885, 1385, 888, 843, 1056,
	778, 732, 736, 777, 776, 1990, 68, 856, 876, 878,
	880, 882, 884, 886, 887, 889, 1367, 84, 814, 657,
	1654, 778, 698, 951, 29, 927, 61, 32, 33, 2042,
	711, 777, 776, 936, 2155, 1672, 941, 2118, 62, 1547,
	725, 1530, 726, 1387, 1952, 727, 1184, 1249, 34, 778,
	681, 682, 674, 678, 83, 858, 680, 654, 690, 1063,
	2215, 2175, 1656, 1353, 704, 685, 871, 1023, 36, 63,
	41, 40, 43, 1530, 1743, 1427, 1629, 1426, 845, 846,
	1626, 1139, 1428, 68, 2043, 68, 1184, 932, 1440, 676,
	679, 1055, 677, 1135, 777, 776, 1137, 1138, 1136, 773,
	44, 66, 65, 27, 2209, 2197, 2208, 42, 2042, 671,
	671, 2094, 778, 2222, 700, 2202, 671, 671, 671, 2082,
	660, 661, 662, 663, 664, 777, 776, 1873, 1658, 671,
	671, 1872, 2219, 1662, 2118, 1657, 2140, 1655, 2139, 1574,
	1572, 1531, 1660, 778, 777, 776, 1122, 1124, 1125, 1553,
	1066, 57, 1123, 2044, 64, 1659, 48, 49, 2138, 1106,
	1107, 1546, 778, 2043, 1156, 671, 1157, 2203, 1661, 1663,
	2159, 1102, 1408, 1409, 1410, 2158, 1519, 371, 1520, 908,
	909, 910, 911, 912, 896, 897, 898, 913, 914, 899,
	900, 901, 907, 915, 902, 903, 904, 905, 906, 918,
	917, 916, 919, 920, 922, 921, 923, 1088, 1057, 1042,
	1031, 777, 776, 2123, 673, 2100, 362, 2015, 2177, 777,
	776, 1101, 1064, 1966, 1929, 1045, 1046, 716, 1108, 778,
	57, 29, 2154, 61, 32, 33, 1530, 778, 777, 776,
	783, 1870, 1617, 1615, 1748, 777, 776, 1623, 62, 715,
	1622, 1625, 2119, 1531, 1570, 34, 778, 1371, 1109, 1364,
	1354, 1086, 2137, 778, 2013, 1131, 1984, 1618, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1865, 2160, 60, 777, 776, 1784, 1534,
	1980, 1786, 68, 1674, 1133, 478, 479, 1786, 1113, 29,
	859, 61, 32, 33, 778, 1906, 1807, 1129, 411, 410,
	413, 414, 415, 416, 1801, 2042, 1577, 412, 417, 1111,
	2212, 1114, 1797, 34, 1115, 1187, 1794, 62, 1793, 1126,
	1110, 1065, 777, 776, 1765, 2157, 1765, 2112, 722, 1173,
	1176, 2104, 722, 1865, 2101, 1978, 1185, 1791, 1530, 1790,
	778, 858, 1765, 2066, 1617, 1615, 1130, 1128, 1778, 1293,
	68, 1777, 1619, 1616, 1865, 2017, 1765, 2010, 1765, 722,
	2043, 1865, 1864, 1959, 1242, 1159, 1160, 1776, 933, 1618,
	1852, 722, 933, 2042, 1849, 722, 1958, 29, 2204, 61,
	32, 33, 960, 1043, 1044, 1765, 1764, 1763, 1762, 1773,
	1047, 1048, 1049, 1759, 1760, 1759, 1758, 1423, 722, 1119,
	1120, 34, 1600, 1058, 1059, 1599, 1227, 722, 492, 1163,
	1165, 1164, 1368, 1749, 1134, 1170, 1197, 1350, 1199, 856,
	1349, 1164, 722, 1509, 29, 1158, 1070, 57, 2043, 2154,
	1039, 1038, 1037, 1036, 1166, 1028, 1026, 1025, 68, 1092,
	1273, 72, 1278, 505, 1024, 1022, 1162, 939, 1480, 1195,
	1196, 668, 1254, 671, 1291, 671, 1202, 1203, 1204, 1205,
	1181, 2042, 959, 958, 1644, 1481, 359, 1312, 1313, 1314,
	1315, 1703, 1226, 1256, 944, 944, 1042, 1258, 1509, 1227,
	1259, 2107, 858, 1263, 1262, 68, 1171, 1172, 1283, 1130,
	1274, 1281, 1845, 1989, 1164, 57, 1227, 2154, 1206, 1207,
	939, 1774, 940, 1211, 942, 72, 1214, 1255, 856, 938,
	1227, 1219, 1761, 1522, 1264, 1423, 2043, 1328, 1329, 1330,
	1331, 1423, 1445, 29, 62, 1324, 1232, 1235, 1236, 1237,
	1233, 932, 1234, 1238, 944, 932, 1717, 1718, 1444, 932,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1366, 1348, 737, 940, 938, 938, 1423, 1104,
	1412, 1029, 822, 821, 831, 832, 824, 825, 826, 827,
	828, 829, 830, 823, 1270, 1361, 833, 1414, 1415, 1416,
	68, 373, 29, 57, 68, 2154, 2102, 1129, 817, 2093,
	820, 2016, 62, 1982, 1917, 1877, 1298, 834, 835, 836,
	837, 838, 839, 840, 1133, 818, 819, 816, 822, 821,
	831, 832, 824, 825, 826, 827, 828, 829, 830, 823,
	1363, 1855, 833, 1936, 1327, 1717, 1718, 1637, 1299, 1300,
	1323, 1305, 1306, 1307, 1308, 1309, 1130, 1274, 1018, 1400,
	1401, 1333, 68, 68, 1527, 1344, 1332, 1318, 1317, 1319,
	1320, 1321, 1335, 1417, 1483, 1484, 718, 1918, 933, 933,
	933, 933, 933, 1413, 2166, 2164, 2135, 1772, 1720, 1703,
	1578, 1420, 1069, 1242, 1033, 1501, 1117, 1723, 1722, 1355,
	62, 1232, 1235, 1236, 1237, 1233, 933, 1234, 1238, 1492,
	492, 1491, 1485, 821, 831, 832, 824, 825, 826, 827,
	828, 829, 830, 823, 1439, 1495, 833, 1493, 377, 378,
	1496, 1419, 1494, 2132, 2108, 1497, 1499, 1236, 1237, 1422,
	1424, 1504, 1425, 1503, 1398, 1399, 1641, 736, 1431, 1397,
	2129, 1434, 1435, 1436, 1134, 1406, 1405, 1338, 1442, 1340,
	1443, 1934, 1796, 1446, 1447, 1017, 1448, 1449, 1523, 1747,
	1453, 1454, 1455, 1456, 1457, 1746, 1511, 1528, 1512, 2052,
	1278, 1464, 1465, 1466, 1498, 1468, 1469, 60, 1471, 1472,
	1473, 1474, 2055, 1476, 1477, 1478, 1487, 1488, 671, 1490,
	671, 671, 2099, 1535, 2098, 1514, 1977, 1421, 2122, 1554,
	1555, 1510, 1529, 1532, 1500, 1975, 1561, 1562, 1482, 1564,
	1565, 1566, 1567, 1604, 2046, 1486, 1568, 1441, 1489, 2045,
	1525, 1450, 1452, 360, 771, 772, 1603, 1166, 1458, 1459,
	1460, 1461, 730, 1843, 1563, 932, 932, 932, 932, 932,
	957, 714, 669, 1913, 731, 1106, 1107, 1339, 1370, 1573,
	932, 1571, 769, 1609, 1032, 389, 1581, 771, 772, 1404,
	1358, 1598, 1240, 932, 1020, 374, 375, 1403, 1650, 1963,
	368, 2125, 2124, 2096, 2056, 1995, 1933, 369, 1602, 1666,
	1667, 72, 1668, 1669, 1994, 1601, 1920, 1509, 1433, 1612,
	1624, 1628, 1678, 1430, 1675, 1676, 1607, 1606, 109, 1621,
	1620, 109, 1631, 1632, 1060, 1646, 1605, 109, 2168, 2167,
	1671, 774, 1614, 824, 825, 826, 827, 828, 829, 830,
	823, 1580, 1708, 833, 60, 1583, 1584, 1585, 2167, 2168,
	2006, 1647, 1745, 1099, 74, 76, 109, 1648, 50, 109,
	511, 69, 109, 2034, 47, 1665, 1727, 1728, 1729, 1664,
	1, 1652, 1725, 109, 492, 511, 1704, 2036, 19, 1707,
	2053, 109, 2035, 18, 2037, 20, 2038, 21, 2033, 15,
	1974, 1556, 1557, 1558, 1560, 2032, 14, 2026, 10, 2040,
	25, 1730, 1896, 1651, 2031, 13, 1881, 1726, 2028, 12,
	2027, 11, 2025, 9, 1744, 1714, 831, 832, 824, 825,
	826, 827, 828, 829, 830, 823, 1737, 1721, 833, 1880,
	1587, 1586, 717, 1724, 2097, 1646, 1278, 2051, 1278, 1089,
	1732, 1613, 1806, 1914, 1378, 1684, 1685, 2061, 1284, 1275,
	1690, 1770, 1771, 1693, 1741, 1736, 500, 1742, 1698, 82,
	1351, 683, 1904, 328, 1282, 1540, 2054, 719, 1539, 420,
	1536, 1750, 1751, 1781, 1551, 1295, 1752, 1538, 1754, 1537,
	2049, 1541, 1192, 965, 963, 1757, 964, 962, 1709, 967,
	966, 332, 1594, 1673, 1596, 1597, 487, 952, 775, 1679,
	1680, 1681, 1682, 1683, 90, 933, 51, 1907, 1627, 1372,
	85, 1067, 1787, 692, 334, 841, 1402, 1515, 493, 1814,
	2092, 1710, 1792, 2113, 734, 2067, 1993, 1782, 1919, 1775,
	1438, 1830, 870, 1182, 394, 2070, 1121, 1788, 409, 408,
	407, 404, 1780, 405, 1789, 1357, 1112, 1479, 815, 1766,
	392, 494, 384, 931, 508, 924, 1369, 1231, 1800, 1229,
	1228, 1034, 1731, 482, 1719, 1715, 930, 1643, 699, 659,
	347, 1836, 1831, 1811, 2000, 1116, 31, 73, 379, 722,
	26, 17, 1688, 1689, 705, 1691, 1692, 22, 1694, 1695,
	1696, 1697, 1819, 1699, 1700, 1701, 109, 16, 655, 511,
	35, 511, 511, 39, 38, 37, 1582, 1853, 1341, 511,
	1812, 357, 1073, 1071, 2194, 511, 2116, 822, 821, 831,
	832, 824, 825, 826, 827, 828, 829, 830, 823, 1858,
	1813, 833, 60, 1844, 2090, 2041, 1815, 23, 1523, 109,
	2169, 4, 1863, 1860, 1861, 1862, 370, 1824, 1825, 1753,
	1278, 1859, 28, 2, 0, 0, 0, 0, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 1868,
	0, 0, 932, 0, 0, 0, 0, 0, 1869, 0,
	1871, 0, 0, 0, 0, 0, 1802, 0, 1903, 0,
	0, 1846, 1847, 1848, 0, 1851, 1923, 1924, 1925, 1926,
	1927, 0, 1892, 1897, 1930, 1931, 1708, 1857, 1911, 1938,
	0, 1898, 0, 0, 1291, 0, 1893, 1894, 1895, 1916,
	0, 0, 0, 0, 0, 1905, 1902, 1833, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 1921, 0, 0,
	0, 0, 0, 1707, 1816, 1817, 0, 1818, 0, 1962,
	1820, 1964, 1822, 0, 109, 109, 109, 0, 0, 0,
	0, 858, 0, 0, 1935, 1942, 1945, 0, 0, 511,
	1854, 1943, 1961, 1856, 1988, 1944, 1878, 1955, 1954, 1949,
	0, 0, 0, 0, 0, 0, 1956, 0, 1957, 0,
	0, 1965, 0, 508, 0, 508, 508, 1708, 0, 60,
	1979, 1838, 1839, 508, 0, 0, 0, 1840, 1981, 508,
	1841, 0, 1986, 0, 1928, 1842, 0, 1835, 0, 1932,
	1987, 0, 0, 0, 0, 60, 0, 0, 0, 1983,
	1866, 0, 2039, 1991, 1707, 0, 2023, 0, 2022, 2012,
	2021, 2007, 2005, 1946, 1947, 1948, 0, 2024, 0, 2011,
	2030, 2029, 0, 1937, 0, 2014, 822, 821, 831, 832,
	824, 825, 826, 827, 828, 829, 830, 823, 0, 0,
	833, 0, 0, 0, 2069, 2073, 0, 2058, 0, 2057,
	0, 0, 0, 2059, 0, 0, 2064, 0, 2060, 0,
	2087, 0, 2065, 0, 0, 0, 0, 0, 2078, 0,
	492, 0, 2079, 1916, 1278, 60, 1996, 1997, 1998, 1999,
	0, 0, 2039, 2003, 2004, 0, 2023, 0, 2022, 0,
	2021, 511, 0, 0, 0, 0, 0, 2024, 0, 109,
	2030, 2029, 2083, 109, 0, 2091, 109, 0, 0, 0,
	2095, 0, 109, 2008, 511, 511, 0, 0, 0, 0,
	0, 511, 511, 511, 109, 109, 109, 494, 2106, 109,
	0, 0, 0, 953, 511, 511, 2126, 0, 0, 2020,
	0, 0, 0, 0, 0, 2012, 0, 0, 0, 0,
	60, 60, 0, 2074, 2136, 0, 858, 2073, 2039, 2128,
	0, 2080, 2023, 0, 2022, 2131, 2021, 2127, 2141, 109,
	511, 60, 2170, 2024, 109, 2130, 2030, 2029, 2174, 2121,
	2173, 2156, 2172, 2165, 2163, 60, 0, 0, 2176, 2171,
	0, 0, 0, 0, 0, 2180, 0, 0, 0, 0,
	0, 2188, 2179, 0, 0, 0, 0, 0, 60, 60,
	2189, 0, 2199, 0, 2103, 2195, 0, 2068, 2072, 2020,
	109, 60, 0, 0, 60, 2191, 782, 2195, 2210, 60,
	0, 2111, 0, 0, 0, 2195, 60, 0, 0, 2213,
	60, 2207, 2195, 0, 0, 0, 0, 60, 0, 0,
	60, 0, 0, 2195, 60, 0, 0, 2218, 60, 0,
	2195, 1240, 0, 0, 2195, 2088, 2089, 2224, 0, 0,
	0, 0, 0, 0, 29, 0, 61, 32, 33, 0,
	0, 0, 0, 0, 0, 1019, 0, 0, 58, 0,
	0, 0, 0, 0, 67, 2020, 0, 0, 34, 0,
	511, 1248, 1250, 0, 0, 0, 0, 0, 508, 508,
	0, 0, 0, 0, 0, 508, 508, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 508,
	2072, 0, 0, 0, 0, 68, 511, 511, 0, 0,
	0, 2142, 0, 0, 0, 822, 821, 831, 832, 824,
	825, 826, 827, 828, 829, 830, 823, 0, 2042, 833,
	0, 0, 0, 0, 508, 0, 2220, 2221, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 109,
	109, 0, 1249, 109, 109, 0, 0, 109, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 36, 63, 41,
	40, 43, 1834, 0, 511, 511, 0, 0, 0, 0,
	0, 0, 987, 2043, 0, 0, 0, 0, 0, 0,
	2211, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	66, 65, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 822, 821, 831, 832, 824, 825, 826, 827, 828,
	829, 830, 823, 508, 0, 833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 511, 0,
	511, 0, 0, 0, 0, 109, 109, 0, 0, 109,
	57, 0, 2044, 64, 0, 48, 49, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 974, 0, 109, 0, 109, 109,
	0, 0, 494, 1167, 1169, 109, 0, 0, 1175, 1178,
	1179, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	1188, 1189, 0, 0, 0, 0, 0, 0, 0, 109,
	109, 109, 109, 109, 0, 1190, 988, 1193, 1194, 0,
	0, 0, 1198, 0, 1200, 1201, 0, 0, 0, 0,
	0, 1829, 1208, 1209, 1210, 0, 1212, 1213, 0, 1215,
	1216, 1217, 1218, 0, 1220, 1221, 1222, 62, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 0, 508, 508,
	0, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 0, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 0, 989, 990, 991,
	992, 968, 972, 1002, 969, 975, 971, 973, 970, 0,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 993, 994, 995, 996, 997, 998, 999, 1000, 822,
	821, 831, 832, 824, 825, 826, 827, 828, 829, 830,
	823, 0, 508, 833, 508, 0, 0, 733, 0, 0,
	0, 0, 0, 109, 109, 109, 109, 109, 0, 0,
	29, 30, 61, 32, 33, 109, 0, 0, 109, 0,
	0, 0, 109, 0, 58, 0, 0, 0, 0, 0,
	67, 109, 0, 0, 34, 54, 55, 0, 0, 0,
	107, 59, 0, 346, 0, 0, 0, 0, 0, 107,
	0, 0, 511, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1003, 0, 0, 45, 0, 0,
	0, 68, 0, 508, 0, 383, 934, 0, 485, 495,
	0, 107, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 107, 0, 0, 0, 1407,
	0, 0, 0, 107, 0, 0, 0, 0, 511, 0,
	0, 511, 0, 0, 0, 1827, 0, 0, 0, 106,
	0, 0, 0, 511, 109, 511, 511, 0, 350, 339,
	0, 0, 0, 36, 63, 41, 40, 43, 0, 56,
	0, 822, 821, 831, 832, 824, 825, 826, 827, 828,
	829, 830, 823, 0, 0, 833, 0, 483, 0, 1826,
	499, 0, 0, 646, 1437, 44, 66, 65, 0, 0,
	52, 53, 42, 0, 656, 0, 0, 0, 109, 0,
	0, 321, 665, 0, 0, 0, 0, 511, 324, 1462,
	1463, 0, 0, 0, 1467, 0, 494, 1470, 333, 340,
	341, 0, 1475, 822, 821, 831, 832, 824, 825, 826,
	827, 828, 829, 830, 823, 0, 57, 833, 46, 64,
	0, 48, 49, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 331, 0, 0,
	0, 1649, 338, 0, 0, 0, 508, 822, 821, 831,
	832, 824, 825, 826, 827, 828, 829, 830, 823, 511,
	511, 833, 822, 821, 831, 832, 824, 825, 826, 827,
	828, 829, 830, 823, 0, 0, 833, 511, 822, 821,
	831, 832, 824, 825, 826, 827, 828, 829, 830, 823,
	0, 0, 833, 0, 0, 0, 0, 511, 511, 0,
	511, 322, 1576, 511, 0, 1579, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 0, 508, 107, 508,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 325, 326, 0, 336, 337, 345,
	0, 0, 0, 327, 329, 0, 323, 344, 343, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 1418, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 0, 109, 822, 821, 831, 832, 824,
	825, 826, 827, 828, 829, 830, 823, 667, 0, 833,
	511, 0, 0, 109, 511, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 511, 511, 511, 0, 0, 0,
	109, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 1711, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 0, 0, 0, 107, 107, 107, 0,
	0, 0, 0, 0, 0, 495, 0, 0, 0, 0,
	0, 508, 508, 0, 508, 0, 0, 1740, 0, 0,
	0, 0, 0, 511, 511, 511, 0, 0, 0, 0,
	0, 0, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 926, 0, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 1799, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 1808, 1809,
	1810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 511, 0, 511, 0,
	0, 511, 0, 109, 0, 109, 0, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 107, 0, 511, 0, 107, 0, 0, 107, 0,
	0, 0, 0, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 107, 107, 0,
	0, 107, 0, 0, 0, 0, 511, 0, 0, 0,
	0, 0, 0, 511, 109, 0, 0, 1576, 1576, 1576,
	0, 0, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 107, 0, 0, 0,
	1027, 0, 0, 0, 483, 1875, 0, 1035, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1050, 1051, 1052, 511, 0,
	1053, 0, 0, 0, 0, 511, 511, 0, 0, 0,
	0, 0, 107, 0, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 511, 0, 0, 0, 0, 0, 0, 0,
	1091, 0, 0, 0, 0, 1098, 0, 0, 0, 0,
	0, 1041, 0, 0, 0, 0, 0, 0, 0, 1939,
	1940, 0, 1941, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 1118, 0, 0, 0, 0, 0, 0, 383, 383,
	0, 0, 0, 383, 383, 383, 383, 0, 0, 511,
	495, 0, 0, 0, 0, 0, 0, 0, 511, 0,
	1985, 0, 0, 0, 0, 0, 0, 1576, 0, 0,
	383, 383, 383, 383, 0, 0, 383, 383, 383, 383,
	383, 0, 0, 0, 0, 0, 0, 383, 383, 383,
	0, 383, 383, 0, 383, 383, 383, 383, 0, 383,
	383, 383, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 107, 1251, 0, 0, 107, 107, 0, 0, 107,
	1260, 1041, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1740, 0, 1041, 0, 0, 0, 0, 508,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 107, 107, 0,
	0, 107, 0, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	1359, 1360, 0, 1576, 0, 0, 0, 107, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 107, 107, 107, 107, 0, 0, 1337, 0,
	0, 1041, 0, 0, 0, 0, 1345, 1346, 0, 0,
	1347, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 1365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 1391, 1392, 1393, 1394, 0, 0, 0, 0, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 383, 0, 0, 0, 383,
	0, 0, 383, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 495, 107, 107, 107, 107, 107,
	0, 0, 0, 0, 0, 0, 0, 1251, 0, 0,
	107, 0, 0, 0, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 1642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 1251, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 629, 609, 282, 567, 632, 539, 556, 643, 557,
	560, 598, 525, 579, 219, 554, 526, 0, 543, 516,
	550, 517, 540, 569, 153, 538, 611, 582, 631, 183,
	594, 0, 145, 191, 189, 0, 107, 0, 225, 280,
	630, 575, 0, 638, 186, 591, 303, 271, 204, 0,
	0, 571, 618, 577, 607, 566, 600, 532, 590, 633,
	555, 596, 634, 0, 0, 0, 510, 0, 1279, 1280,
	0, 1960, 0, 0, 0, 135, 0, 593, 628, 552,
	595, 597, 514, 592, 0, 520, 527, 642, 624, 546,
	547, 548, 1524, 0, 0, 0, 0, 0, 0, 570,
	578, 604, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 0, 588, 0, 1992, 0, 528, 521, 0,
	0, 568, 0, 0, 495, 531, 114, 545, 605, 0,
	512, 163, 205, 125, 608, 623, 565, 176, 309, 627,
	562, 561, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 553, 513, 612, 541, 551,
	146, 549, 250, 223, 298, 0, 585, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 564, 599,
	542, 143, 602, 589, 617, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 518, 0, 273, 301, 319, 192,
	132, 537, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 535, 536, 533, 0, 534,
	580, 581, 635, 636, 637, 606, 529, 0, 619, 620,
	0, 610, 625, 626, 601, 644, 558, 559, 519, 522,
	523, 524, 530, 572, 573, 584, 587, 615, 614, 613,
	616, 621, 640, 639, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 110, 121, 185,
	316, 243, 159, 302, 515, 151, 0, 0, 574, 576,
	586, 603, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 622, 629,
	609, 282, 567, 632, 539, 556, 643, 557, 560, 598,
	525, 579, 219, 554, 526, 0, 543, 516, 550, 517,
	540, 569, 153, 538, 611, 582, 631, 183, 594, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 630, 575,
	0, 638, 186, 591, 303, 271, 204, 0, 0, 571,
	618, 577, 607, 566, 600, 532, 590, 633, 555, 596,
	634, 0, 0, 0, 510, 0, 1279, 1280, 0, 0,
	0, 0, 0, 135, 0, 593, 628, 552, 595, 597,
	514, 592, 0, 520, 527, 642, 624, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 570, 578, 604,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	0, 588, 0, 0, 0, 528, 521, 0, 0, 568,
	0, 0, 0, 531, 114, 545, 605, 0, 512, 163,
	205, 125, 608, 623, 565, 176, 309, 627, 562, 561,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 553, 513, 612, 541, 551, 146, 549,
	250, 223, 298, 0, 585, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 564, 599, 542, 143,
	602, 589, 617, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 518, 0, 273, 301, 319, 192, 132, 537,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 535, 536, 533, 0, 534, 580, 581,
	635, 636, 637, 606, 529, 0, 619, 620, 0, 610,
	625, 626, 601, 644, 558, 559, 519, 522, 523, 524,
	530, 572, 573, 584, 587, 615, 614, 613, 616, 621,
	640, 639, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 110, 121, 185, 316, 243,
	159, 302, 515, 151, 0, 0, 574, 576, 586, 603,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 622, 629, 609, 282,
	567, 632, 539, 556, 643, 557, 560, 598, 525, 579,
	219, 554, 526, 0, 543, 516, 550, 517, 540, 569,
	153, 538, 611, 582, 631, 183, 594, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 630, 575, 0, 638,
	186, 591, 303, 271, 204, 0, 0, 571, 618, 577,
	607, 566, 600, 532, 590, 633, 555, 596, 634, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 593, 628, 552, 595, 597, 514, 592,
	0, 520, 527, 642, 624, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 570, 578, 604, 563, 0,
	0, 0, 0, 0, 0, 1645, 0, 544, 0, 588,
	0, 0, 0, 528, 521, 0, 0, 568, 0, 0,
	0, 531, 114, 545, 605, 0, 512, 163, 205, 125,
	608, 623, 565, 176, 309, 627, 562, 561, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 553, 513, 612, 541, 551, 146, 549, 250, 223,
	298, 0, 585, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 564, 599, 542, 143, 602, 589,
	617, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	518, 0, 273, 301, 319, 192, 132, 537, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 535, 536, 533, 0, 534, 580, 581, 635, 636,
	637, 606, 529, 0, 619, 620, 0, 610, 625, 626,
	601, 644, 558, 559, 519, 522, 523, 524, 530, 572,
	573, 584, 587, 615, 614, 613, 616, 621, 640, 639,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 110, 121, 185, 316, 243, 159, 302,
	515, 151, 0, 0, 574, 576, 586, 603, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 622, 629, 609, 282, 567, 632,
	539, 556, 643, 557, 560, 598, 525, 579, 219, 554,
	526, 0, 543, 516, 550, 517, 540, 569, 153, 538,
	611, 582, 631, 183, 594, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 630, 575, 0, 638, 186, 591,
	303, 271, 204, 0, 0, 571, 618, 577, 607, 566,
	600, 532, 590, 633, 555, 596, 634, 68, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 593, 628, 552, 595, 597, 514, 592, 0, 520,
	527, 642, 624, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 570, 578, 604, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 0, 588, 0, 0,
	0, 528, 521, 0, 0, 568, 0, 0, 0, 531,
	114, 545, 605, 0, 512, 163, 205, 125, 608, 623,
	565, 176, 309, 627, 562, 561, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 553,
	513, 612, 541, 551, 146, 549, 250, 223, 298, 0,
	585, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 564, 599, 542, 143, 602, 589, 617, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 518, 0,
	273, 301, 319, 192, 132, 537, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 535,
	536, 533, 0, 534, 580, 581, 635, 636, 637, 606,
	529, 0, 619, 620, 0, 610, 625, 626, 601, 644,
	558, 559, 519, 522, 523, 524, 530, 572, 573, 584,
	587, 615, 614, 613, 616, 621, 640, 639, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 110, 121, 185, 316, 243, 159, 302, 515, 151,
	0, 0, 574, 576, 586, 603, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 622, 629, 609, 282, 567, 632, 539, 556,
	643, 557, 560, 598, 525, 579, 219, 554, 526, 0,
	543, 516, 550, 517, 540, 569, 153, 538, 611, 582,
	631, 183, 594, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 630, 575, 0, 638, 186, 591, 303, 271,
	204, 0, 0, 571, 618, 577, 607, 566, 600, 532,
	590, 633, 555, 596, 634, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 593,
	628, 552, 595, 597, 514, 592, 0, 520, 527, 642,
	624, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 570, 578, 604, 563, 0, 0, 0, 0, 0,
	0, 1261, 0, 544, 0, 588, 0, 0, 0, 528,
	521, 0, 0, 568, 0, 0, 0, 531, 114, 545,
	605, 0, 512, 163, 205, 125, 608, 623, 565, 176,
	309, 627, 562, 561, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 553, 513, 612,
	541, 551, 146, 549, 250, 223, 298, 0, 585, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	564, 599, 542, 143, 602, 589, 617, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 518, 0, 273, 301,
	319, 192, 132, 537, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 535, 536, 533,
	0, 534, 580, 581, 635, 636, 637, 606, 529, 0,
	619, 620, 0, 610, 625, 626, 601, 644, 558, 559,
	519, 522, 523, 524, 530, 572, 573, 584, 587, 615,
	614, 613, 616, 621, 640, 639, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 110,
	121, 185, 316, 243, 159, 302, 515, 151, 0, 0,
	574, 576, 586, 603, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	622, 629, 609, 282, 567, 632, 539, 556, 643, 557,
	560, 598, 525, 579, 219, 554, 526, 0, 543, 516,
	550, 517, 540, 569, 153, 538, 611, 582, 631, 183,
	594, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	630, 575, 0, 638, 186, 591, 303, 271, 204, 0,
	0, 571, 618, 577, 607, 566, 600, 532, 590, 633,
	555, 596, 634, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 593, 628, 552,
	595, 597, 514, 592, 0, 520, 527, 642, 624, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 570,
	578, 604, 563, 0, 0, 0, 0, 0, 0, 1127,
	0, 544, 0, 588, 0, 0, 0, 528, 521, 0,
	0, 568, 0, 0, 0, 531, 114, 545, 605, 0,
	512, 163, 205, 125, 608, 623, 565, 176, 309, 627,
	562, 561, 239, 0, 276, 166, 184, 129, 111, 123,
	139, 165, 215, 248, 256, 553, 513, 612, 541, 551,
	146, 549, 250, 223, 298, 0, 585, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 564, 599,
	542, 143, 602, 589, 617, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 518, 0, 273, 301, 319, 192,
	132, 537, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 535, 536, 533, 0, 534,
	580, 581, 635, 636, 637, 606, 529, 0, 619, 620,
	0, 610, 625, 626, 601, 644, 558, 559, 519, 522,
	523, 524, 530, 572, 573, 584, 587, 615, 614, 613,
	616, 621, 640, 639, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 110, 121, 185,
	316, 243, 159, 302, 515, 151, 0, 0, 574, 576,
	586, 603, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 622, 629,
	609, 282, 567, 632, 539, 556, 643, 557, 560, 598,
	525, 579, 219, 554, 526, 0, 543, 516, 550, 517,
	540, 569, 153, 538, 611, 582, 631, 183, 594, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 630, 575,
	0, 638, 186, 591, 303, 271, 204, 0, 0, 571,
	618, 577, 607, 566, 600, 532, 590, 633, 555, 596,
	634, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 593, 628, 552, 595, 597,
	514, 592, 0, 520, 527, 642, 624, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 570, 578, 604,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	0, 588, 0, 0, 0, 528, 521, 0, 0, 568,
	0, 0, 0, 531, 114, 545, 605, 0, 512, 163,
	205, 125, 608, 623, 565, 176, 309, 627, 562, 561,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 553, 513, 612, 541, 551, 146, 549,
	250, 223, 298, 0, 585, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 564, 599, 542, 143,
	602, 589, 617, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 518, 0, 273, 301, 319, 192, 132, 537,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 535, 536, 533, 0, 534, 580, 581,
	635, 636, 637, 606, 529, 0, 619, 620, 0, 610,
	625, 626, 601, 644, 558, 559, 519, 522, 523, 524,
	530, 572, 573, 584, 587, 615, 614, 613, 616, 621,
	640, 639, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 110, 121, 185, 316, 243,
	159, 302, 515, 151, 0, 0, 574, 576, 586, 603,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 622, 629, 609, 282,
	567, 632, 539, 556, 643, 557, 560, 598, 525, 579,
	219, 554, 526, 0, 543, 516, 550, 517, 540, 569,
	153, 538, 611, 582, 631, 183, 594, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 630, 575, 0, 638,
	186, 591, 303, 271, 204, 0, 0, 571, 618, 577,
	607, 566, 600, 532, 590, 633, 555, 596, 634, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 593, 628, 552, 595, 597, 514, 592,
	0, 520, 527, 642, 624, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 570, 578, 604, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 588,
	0, 0, 0, 528, 521, 0, 0, 568, 0, 0,
	0, 531, 114, 545, 605, 0, 512, 163, 205, 125,
	608, 623, 565, 176, 309, 627, 562, 561, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 553, 513, 612, 541, 551, 146, 549, 250, 223,
	298, 0, 585, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 564, 599, 542, 143, 602, 589,
	617, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	518, 0, 273, 301, 319, 192, 132, 537, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 535, 536, 533, 0, 534, 580, 581, 635, 636,
	637, 606, 529, 0, 619, 620, 0, 610, 625, 626,
	601, 644, 558, 559, 519, 522, 523, 524, 530, 572,
	573, 584, 587, 615, 614, 613, 616, 621, 640, 639,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 110, 121, 185, 316, 243, 159, 302,
	515, 151, 0, 0, 574, 576, 586, 603, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 622, 629, 609, 282, 567, 632,
	539, 556, 643, 557, 560, 598, 525, 579, 219, 554,
	526, 0, 543, 516, 550, 517, 540, 569, 153, 538,
	611, 582, 631, 183, 594, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 1287, 1290, 0, 638, 186, 591,
	303, 271, 204, 0, 0, 571, 618, 577, 607, 566,
	600, 532, 590, 633, 555, 596, 634, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 593, 628, 552, 595, 597, 514, 592, 0, 520,
	527, 642, 624, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 570, 578, 604, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 0, 588, 0, 0,
	0, 528, 521, 0, 0, 568, 0, 0, 0, 531,
	114, 545, 605, 0, 512, 163, 205, 125, 608, 623,
	1289, 176, 309, 627, 562, 561, 1285, 0, 1286, 166,
	184, 507, 111, 123, 503, 506, 215, 248, 256, 553,
	513, 612, 541, 551, 146, 549, 250, 223, 298, 0,
	585, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 564, 599, 542, 143, 602, 589, 617, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 518, 0,
	273, 301, 319, 192, 132, 537, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 535,
	536, 533, 0, 534, 580, 581, 635, 636, 637, 606,
	529, 0, 619, 620, 0, 610, 625, 626, 601, 644,
	558, 559, 519, 522, 523, 524, 530, 572, 573, 584,
	587, 615, 614, 613, 616, 621, 640, 639, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 110, 121, 185, 316, 243, 159, 302, 515, 151,
	0, 0, 574, 576, 586, 603, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 622, 629, 609, 282, 567, 632, 539, 556,
	643, 557, 560, 598, 525, 579, 219, 554, 526, 0,
	543, 516, 550, 517, 540, 569, 153, 538, 611, 582,
	631, 183, 594, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 630, 575, 0, 638, 186, 591, 303, 271,
	204, 0, 0, 571, 618, 577, 607, 566, 600, 532,
	590, 633, 555, 596, 634, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 593,
	628, 552, 595, 597, 514, 592, 0, 520, 527, 642,
	624, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 570, 578, 604, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 588, 0, 0, 0, 528,
	521, 0, 0, 568, 0, 0, 0, 531, 114, 545,
	605, 0, 512, 163, 205, 125, 608, 623, 565, 176,
	309, 627, 562, 561, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 553, 513, 612,
	541, 551, 146, 549, 250, 223, 298, 0, 585, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	564, 599, 542, 143, 602, 589, 617, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 518, 0, 273, 301,
	319, 192, 132, 537, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 535, 536, 533,
	0, 534, 580, 581, 635, 636, 637, 606, 529, 0,
	619, 620, 0, 610, 625, 626, 601, 644, 558, 559,
	519, 522, 523, 524, 530, 572, 573, 584, 587, 615,
	614, 613, 616, 621, 640, 639, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 110,
	121, 185, 316, 243, 159, 302, 515, 151, 0, 0,
	574, 576, 586, 603, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	622, 629, 609, 282, 567, 632, 539, 556, 643, 557,
	560, 598, 525, 579, 219, 554, 526, 0, 543, 516,
	550, 517, 540, 569, 153, 538, 611, 582, 631, 183,
	594, 0, 145, 191, 189, 0, 0, 0, 225, 280,
	630, 575, 0, 638, 186, 591, 303, 271, 204, 0,
	0, 571, 618, 577, 607, 566, 600, 532, 590, 633,
	555, 596, 634, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 593, 628, 552,
	595, 597, 514, 592, 0, 520, 527, 642, 624, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 570,
	578, 604, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 0, 588, 0, 0, 0, 528, 521, 0,
	0, 568, 0, 0, 0, 531, 114, 545, 605, 0,
	512, 163, 205, 125, 608, 623, 565, 176, 309, 627,
	562, 561, 239, 0, 276, 166, 184, 507, 111, 123,
	503, 506, 215, 248, 256, 553, 513, 612, 541, 551,
	146, 549, 250, 223, 298, 0, 585, 229, 249, 187,
	287, 241, 296, 297, 167, 310, 311, 281, 306, 315,
	268, 154, 0, 115, 0, 236, 149, 180, 564, 599,
	542, 143, 602, 589, 617, 267, 130, 283, 203, 209,
	140, 142, 141, 124, 262, 285, 134, 144, 272, 277,
	116, 279, 295, 136, 260, 118, 293, 275, 201, 177,
	178, 117, 0, 246, 152, 162, 148, 218, 0, 161,
	238, 290, 291, 147, 318, 126, 305, 120, 127, 304,
	212, 0, 211, 307, 286, 294, 202, 195, 0, 119,
	292, 200, 194, 182, 157, 169, 234, 190, 235, 170,
	207, 206, 208, 0, 518, 0, 273, 301, 319, 192,
	132, 537, 261, 284, 313, 314, 0, 0, 133, 160,
	156, 233, 210, 128, 172, 270, 181, 188, 245, 317,
	222, 251, 137, 300, 269, 535, 536, 533, 0, 534,
	580, 581, 635, 636, 637, 606, 529, 0, 619, 620,
	0, 610, 625, 626, 601, 644, 558, 559, 519, 522,
	523, 524, 530, 572, 573, 584, 587, 615, 614, 613,
	616, 621, 640, 639, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 110, 121, 185,
	316, 243, 159, 302, 515, 151, 0, 0, 574, 576,
	586, 603, 112, 113, 122, 131, 138, 150, 155, 158,
	164, 168, 171, 173, 174, 175, 179, 193, 196, 197,
	198, 199, 213, 214, 216, 217, 220, 221, 224, 226,
	227, 228, 230, 231, 232, 237, 240, 242, 244, 247,
	252, 253, 254, 255, 257, 258, 259, 263, 264, 265,
	266, 274, 278, 288, 289, 299, 308, 312, 622, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	153, 387, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 1268, 0, 68,
	0, 0, 388, 411, 410, 413, 414, 415, 416, 0,
	0, 135, 412, 417, 418, 419, 1269, 0, 0, 385,
	402, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 0, 0, 0, 0, 448,
	0, 401, 0, 0, 396, 397, 398, 403, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	425, 0, 0, 176, 309, 0, 0, 446, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 431, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 435, 447, 441, 443, 442, 439, 440, 438, 437,
	436, 449, 426, 427, 428, 429, 432, 0, 444, 445,
	0, 0, 0, 0, 462, 463, 464, 465, 466, 467,
	468, 461, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	458, 459, 430, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 153, 387, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 434, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 722, 388, 411, 410,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 385, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	0, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	153, 387, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 388, 411, 410, 413, 414, 415, 416, 0,
	0, 135, 412, 417, 418, 419, 0, 0, 0, 385,
	402, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 381, 0, 0, 0, 448,
	0, 401, 0, 0, 396, 397, 398, 403, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	425, 0, 0, 176, 309, 0, 0, 446, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 431, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 435, 447, 441, 443, 442, 439, 440, 438, 437,
	436, 449, 426, 427, 428, 429, 432, 0, 444, 445,
	0, 0, 0, 0, 462, 463, 464, 465, 466, 467,
	468, 461, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	458, 459, 430, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 153, 387, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 434, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 423, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 388, 411, 1177,
	413, 414, 415, 416, 0, 0, 135, 412, 417, 418,
	419, 0, 0, 0, 385, 402, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 400,
	381, 0, 0, 0, 448, 0, 401, 0, 0, 396,
	397, 398, 403, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 425, 0, 0, 176, 309,
	0, 0, 446, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 431, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 435, 447, 441, 443,
	442, 439, 440, 438, 437, 436, 449, 426, 427, 428,
	429, 432, 0, 444, 445, 0, 0, 0, 0, 462,
	463, 464, 465, 466, 467, 468, 461, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 458, 459, 430, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	153, 387, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 434,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 423,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 388, 411, 1174, 413, 414, 415, 416, 0,
	0, 135, 412, 417, 418, 419, 0, 0, 0, 385,
	402, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 400, 381, 0, 0, 0, 448,
	0, 401, 0, 0, 396, 397, 398, 403, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	425, 0, 0, 176, 309, 0, 0, 446, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 431, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 435, 447, 441, 443, 442, 439, 440, 438, 437,
	436, 449, 426, 427, 428, 429, 432, 0, 444, 445,
	0, 0, 0, 0, 462, 463, 464, 465, 466, 467,
	468, 461, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	458, 459, 430, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 29, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 153, 387, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 434, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 388, 411,
	410, 413, 414, 415, 416, 0, 0, 135, 412, 417,
	418, 419, 0, 0, 0, 385, 402, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 0, 0, 0, 0, 448, 0, 401, 0, 0,
	396, 397, 398, 403, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 425, 0, 0, 176,
	309, 0, 0, 446, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 431, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 435, 447, 441,
	443, 442, 439, 440, 438, 437, 436, 449, 426, 427,
	428, 429, 432, 0, 444, 445, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 461, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 458, 459, 430, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 153, 387, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	434, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	423, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 1087, 388, 411, 410, 413, 414, 415, 416,
	0, 0, 135, 412, 417, 418, 419, 0, 0, 0,
	385, 402, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 0, 0, 0, 0,
	448, 0, 401, 0, 0, 396, 397, 398, 403, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 425, 0, 0, 176, 309, 0, 0, 446, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 431, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 435, 447, 441, 443, 442, 439, 440, 438,
	437, 436, 449, 426, 427, 428, 429, 432, 0, 444,
	445, 0, 0, 0, 0, 462, 463, 464, 465, 466,
	467, 468, 461, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 458, 459, 430, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 153, 387, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 434, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 388, 411,
	410, 413, 414, 415, 416, 0, 0, 135, 412, 417,
	418, 419, 0, 0, 0, 385, 402, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 0, 0, 0, 0, 448, 0, 401, 0, 0,
	396, 397, 398, 403, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 425, 0, 0, 176,
	309, 0, 0, 446, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 431, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 435, 447, 441,
	443, 442, 439, 440, 438, 437, 436, 449, 426, 427,
	428, 429, 432, 0, 444, 445, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 461, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 458, 459, 430, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 153, 387, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	434, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	423, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 388, 411, 410, 413, 414, 415, 416,
	0, 0, 135, 412, 417, 418, 419, 0, 0, 0,
	385, 402, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 0, 0, 0, 0,
	448, 0, 401, 0, 0, 396, 397, 398, 403, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 425, 0, 0, 176, 309, 0, 0, 446, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 431, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 435, 447, 441, 443, 442, 439, 440, 438,
	437, 436, 449, 426, 427, 428, 429, 432, 0, 444,
	445, 0, 0, 0, 0, 738, 739, 740, 741, 742,
	746, 747, 751, 752, 760, 759, 758, 761, 762, 764,
	763, 765, 743, 744, 745, 748, 749, 750, 753, 754,
	757, 755, 756, 430, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 434, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 388, 411,
	410, 413, 414, 415, 416, 0, 0, 135, 412, 417,
	418, 419, 0, 0, 0, 0, 402, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 0, 0, 0, 0, 448, 0, 401, 0, 0,
	396, 397, 398, 403, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 425, 0, 0, 176,
	309, 0, 0, 446, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 431, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 2214, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 435, 447, 441,
	443, 442, 439, 440, 438, 437, 436, 449, 426, 427,
	428, 429, 432, 0, 444, 445, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 461, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 458, 459, 430, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	434, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	423, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 722, 388, 411, 410, 413, 414, 415, 416,
	0, 0, 135, 412, 417, 418, 419, 0, 0, 0,
	0, 402, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 0, 0, 0, 0,
	448, 0, 401, 0, 0, 396, 397, 398, 403, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 425, 0, 0, 176, 309, 0, 0, 446, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 431, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 435, 447, 441, 443, 442, 439, 440, 438,
	437, 436, 449, 426, 427, 428, 429, 432, 0, 444,
	445, 0, 0, 0, 0, 462, 463, 464, 465, 466,
	467, 468, 461, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 458, 459, 430, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 434, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 423, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 388, 411,
	410, 413, 414, 415, 416, 0, 0, 135, 412, 417,
	418, 419, 0, 0, 0, 0, 402, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 0, 0, 0, 0, 448, 0, 401, 0, 0,
	396, 397, 398, 403, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 425, 0, 0, 176,
	309, 0, 0, 446, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 431, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 435, 447, 441,
	443, 442, 439, 440, 438, 437, 436, 449, 426, 427,
	428, 429, 432, 0, 444, 445, 0, 0, 0, 0,
	462, 463, 464, 465, 466, 467, 468, 461, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 458, 459, 430, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 1250, 0, 0,
	0, 0, 0, 108, 0, 1253, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 1249, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 786, 787, 788, 789,
	793, 794, 798, 799, 807, 806, 805, 808, 809, 811,
	810, 812, 790, 791, 792, 795, 796, 797, 800, 801,
	804, 802, 803, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 1246, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 1250, 0, 0, 0, 0, 0, 108, 0,
	1253, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 1249, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 1244,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	785, 786, 787, 788, 789, 793, 794, 798, 799, 807,
	806, 805, 808, 809, 811, 810, 812, 790, 791, 792,
	795, 796, 797, 800, 801, 804, 802, 803, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 780, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 0, 784, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 777, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 786, 787, 788, 789,
	793, 794, 798, 799, 807, 806, 805, 808, 809, 811,
	810, 812, 790, 791, 792, 795, 796, 797, 800, 801,
	804, 802, 803, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 1502, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	1253, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	785, 786, 787, 788, 789, 793, 794, 798, 799, 807,
	806, 805, 808, 809, 811, 810, 812, 790, 791, 792,
	795, 796, 797, 800, 801, 804, 802, 803, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 1253, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 786, 787, 788, 789,
	793, 794, 798, 799, 807, 806, 805, 808, 809, 811,
	810, 812, 790, 791, 792, 795, 796, 797, 800, 801,
	804, 802, 803, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 183, 0, 0, 145, 191, 189, 0, 0, 0,
	225, 280, 0, 0, 0, 0, 186, 0, 303, 271,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 0,
	784, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	0, 0, 0, 163, 205, 125, 0, 0, 0, 176,
	309, 0, 0, 0, 239, 0, 276, 166, 184, 129,
	111, 123, 139, 165, 215, 248, 256, 0, 0, 0,
	0, 0, 146, 0, 250, 223, 298, 0, 0, 229,
	249, 187, 287, 241, 296, 297, 167, 310, 311, 281,
	306, 315, 268, 154, 0, 115, 0, 236, 149, 180,
	0, 0, 0, 143, 0, 0, 0, 267, 130, 283,
	203, 209, 140, 142, 141, 124, 262, 285, 134, 144,
	272, 277, 116, 279, 295, 136, 260, 118, 293, 275,
	201, 177, 178, 117, 0, 246, 152, 162, 148, 218,
	0, 161, 238, 290, 291, 147, 318, 126, 305, 120,
	127, 304, 212, 0, 211, 307, 286, 294, 202, 195,
	0, 119, 292, 200, 194, 182, 157, 169, 234, 190,
	235, 170, 207, 206, 208, 0, 0, 0, 273, 301,
	319, 192, 132, 0, 261, 284, 313, 314, 0, 0,
	133, 160, 156, 233, 210, 128, 172, 270, 181, 188,
	245, 317, 222, 251, 137, 300, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	785, 786, 787, 788, 789, 793, 794, 798, 799, 807,
	806, 805, 808, 809, 811, 810, 812, 790, 791, 792,
	795, 796, 797, 800, 801, 804, 802, 803, 0, 110,
	121, 185, 316, 243, 159, 302, 0, 151, 0, 0,
	0, 0, 0, 0, 112, 113, 122, 131, 138, 150,
	155, 158, 164, 168, 171, 173, 174, 175, 179, 193,
	196, 197, 198, 199, 213, 214, 216, 217, 220, 221,
	224, 226, 227, 228, 230, 231, 232, 237, 240, 242,
	244, 247, 252, 253, 254, 255, 257, 258, 259, 263,
	264, 265, 266, 274, 278, 288, 289, 299, 308, 312,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 183, 0, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 0, 0, 0,
	0, 186, 0, 303, 271, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 821, 831, 832, 824, 825, 826, 827, 828, 829,
	830, 823, 0, 0, 833, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 163, 205,
	125, 0, 0, 0, 176, 309, 0, 0, 0, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 0, 0, 0, 0, 0, 146, 0, 250,
	223, 298, 0, 0, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 0, 0, 0, 143, 0,
	0, 0, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 0, 0, 273, 301, 319, 192, 132, 0, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 121, 185, 316, 243, 159,
	302, 0, 151, 0, 0, 0, 0, 0, 0, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 29, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 0, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 0, 0, 0,
	176, 309, 0, 0, 0, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 0, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 29, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 955,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 0, 954, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 925, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 480, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 105, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 497, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 498, 496, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 946, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 497, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 498, 496, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 488, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 497, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 498, 496, 491, 490, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312,
}
var yyPact = [...]int{

	2644, -1000, -298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1426, 1489, -1000,
	-1000, -1000, -1000, -1000, -1000, 510, 204, -1000, -1000, -1000,
	228, 39, 19905, 227, 2699, 21150, -1000, -1000, -1000, -1000,
	167, 21150, -1000, -1000, -103, -104, -1000, 31, 966, 1347,
	1087, -1000, -1000, 22, 11, -1000, -1000, -1000, -1000, -1000,
	-1000, 1413, 1421, 1145, 1404, 1225, -1000, 9942, 191, 191,
	19490, 22395, -1000, 21150, 8696, 218, 21150, -166, 177, 177,
	115, 177, -1000, 521, -1000, -1000, -1000, 21150, 183, 20320,
	183, 183, 183, 183, 183, 21150, -1000, 376, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21150, 951, 1372, 5770, 474, 5770, 5770, -1000, 519, -1000,
	98, 97, 92, 5770, 25, 570, 94, -25, -1000, 5770,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 178, 1087, 494,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1371, 737, 1159,
	-98, 829, 225, 21150, 471, -1000, -1000, 1373, 12018, 12433,
	1426, -1000, 1087, -1000, -1000, -1000, 1363, -1000, -1000, 581,
	1460, -1000, 14923, 374, -1000, 12018, 1071, 1083, -1000, -1000,
	1083, -1000, -1000, 265, -1000, -1000, 13678, 13678, 13678, 13678,
	13678, 13678, 13678, 13678, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1083, -1000, 11188, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 12018, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 19075, 18245,
	21150, 1059, 1006, -1000, -1000, 368, 977, 21980, -131, -1000,
	-1000, -1000, 487, 17830, -1000, 279, -1000, 1370, -1000, -1000,
	964, -1000, -1000, 882, -1000, 2352, 1270, 1141, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20320, 1401, 199, 945, 540,
	944, 937, 936, 21150, 935, 1063, 195, 21150, 1390, 1179,
	21150, 933, 932, 931, 930, -1000, 8278, -1000, 5770, 5770,
	-1000, -1000, -1000, 177, 177, 5770, 5770, 5770, 21150, 21150,
	21150, -1000, -1000, 21150, -1000, -1000, 547, 547, 5770, 5770,
	-1000, 1453, 513, 513, -1000, -1000, -1000, -1000, 12018, -1000,
	13678, 408, -1000, 1177, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 926, -1000, -1000, 910, -1000, 749, -1000, 11603, -296,
	-1000, -1000, -1000, 21150, 5770, 107, 144, 133, 21150, -1000,
	1484, 383, 713, 272, 1061, -1000, 694, 1380, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 1083, 1083, 1083, 1413, 829, 1225, 808,
	1190, -1000, -1000, -1000, 21150, -1000, 12018, 12018, 625, -1000,
	16168, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6606, 434, 13678, 576, 552, 13678, 13678,
	13678, 13678, 13678, 13678, 13678, 13678, 13678, 13678, 13678, 13678,
	13678, 13678, 13678, 654, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 925, -1000, 1087, 797, 797, 276, 276, 276,
	276, 276, 276, 276, 16583, 1396, 829, 923, 478, 11188,
	9942, 9942, 829, 12018, 12018, 10772, 10357, 9942, 9942, 1396,
	515, 478, 21565, -1000, -1000, 13263, -1000, -1000, -1000, -1000,
	-1000, 829, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20320, 20320, 9942, 9942, 9942, 9942, 829, 829, 9942, 9942,
	9942, 9942, 9942, 829, 829, 829, 829, 1396, 1396, 9942,
	9942, 9942, 1396, 9942, 9942, 1396, 9942, 9942, 9942, 9942,
	1396, 9942, 9942, 9942, 138, 21150, -1000, 1012, 1196, -1000,
	-1000, -1000, 1399, 17415, 14508, 138, 1011, 18245, 21150, -1000,
	-1000, 18245, 21150, 6188, 20735, 977, -131, 1016, -1000, -140,
	-136, 9112, 251, -1000, -1000, -1000, 7442, -1000, 4934, 7860,
	163, -1000, -91, -1000, -1000, -1000, 1099, -1000, 1099, 123,
	-16, 1099, 1099, 1099, 1099, 1099, -48, -48, -48, -48,
	-24, -1000, -1000, -1000, -1000, -1000, 1151, 1150, -1000, 1099,
	1099, 1099, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1133, 152, 1127, 1127, 1127, 1127, 1127, 1149, 12018, 1156,
	-1000, 21150, 5770, 1383, 5770, 100, 1148, -1000, -1000, 21150,
	21150, 1058, -1000, 21150, 1055, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 920, 917, -1000, -1000, -1000,
	-1000, -1000, -1000, 517, -1000, 748, 12018, -1000, -1000, -1000,
	21150, 1397, 21150, 21150, 547, 478, 1025, -1000, 747, 21150,
	-1000, 1054, -1000, 480, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 913, 1381,
	745, 246, -1000, 21150, 21150, 21150, 21150, 21150, 237, -1000,
	1248, 12018, 12018, 7442, 12433, -1000, -1000, -1000, -1000, 1373,
	-1000, 1396, 1408, -1000, 1259, 1258, 9942, -1000, -1000, 434,
	457, -1000, -1000, 651, -1000, -1000, -1000, -1000, 264, 1083,
	-1000, 2811, -1000, -1000, -1000, -1000, 576, 13678, 13678, 13678,
	1025, 2811, 2918, 1447, 1155, 276, 432, 432, 421, 421,
	421, 421, 421, 1362, 1362, -1000, -1000, -1000, 829, -1000,
	-1000, -1000, 9942, -1000, 12018, -1000, 829, 899, -1000, 899,
	-1000, 569, 619, 511, 1442, 899, 363, 1437, 899, 899,
	899, 9942, 555, -1000, 12018, 829, -1000, 1650, 1040, 1024,
	899, 829, 1017, 899, 899, -177, -177, 829, 899, 829,
	899, 899, -177, -177, -177, -177, 9942, 9942, 899, 899,
	899, 9942, 899, 899, 9942, 899, 899, 899, 899, 9942,
	899, 899, 899, 988, 1083, -1000, 20735, 18245, 18245, 18245,
	18245, 18245, -1000, 1206, 1204, -1000, 1222, 1220, 1230, 15753,
	-1000, 908, 17415, -1000, 1083, -1000, 15338, 463, 217, 214,
	205, -1000, -1000, -1000, 1435, 18245, 981, -1000, 981, -1000,
	259, -1000, -1000, 1016, -131, -146, -1000, -1000, -1000, -1000,
	478, -1000, 666, -1000, 255, 1015, 4516, -1000, -1000, -1000,
	-1000, 196, -1000, -1000, 1147, 1282, 355, 461, 779, -1000,
	-1000, -1000, 1270, 1141, 453, -96, -1000, -1000, 636, -48,
	-48, 1099, 1099, 122, 1099, -1000, -48, -1000, -1000, -1000,
	251, 1364, 251, 251, 251, 251, -48, 742, 742, -1000,
	-1000, -1000, -1000, 627, -1000, 1133, -1000, 626, -1000, -1000,
	-1000, -1000, 20320, 807, 1175, 20320, 1087, 1393, -1000, -1000,
	-1000, 1477, -1000, -1000, 223, 194, -1000, 5770, 21150, 5770,
	5770, 1435, 905, 902, -1000, 478, 513, 547, 1352, -1000,
	-1000, -1000, -1000, 13678, -1000, -1000, 910, 797, -1000, 138,
	221, -1000, -1000, 768, 656, 493, 149, 149, -1000, 445,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 134,
	1131, -1000, -1000, -1000, -1000, 3, 106, 1244, 478, 478,
	-1000, -1000, 21150, -1000, -1000, -1000, -1000, 1023, -1000, -1000,
	-1000, 5352, 9942, -1000, 1025, 2811, 2795, -1000, 13678, -1000,
	829, 478, -1000, 9942, -1000, -1000, 458, 654, 458, 13678,
	13678, -1000, 13678, 13678, -1000, -211, -1000, 1060, 500, -1000,
	12018, 761, -1000, -1000, 13678, 13678, -1000, -1000, -1000, -1000,
	-1000, 18660, -1000, -177, -177, -177, -177, -177, -1000, -1000,
	-1000, -1000, 899, 899, -177, -177, -177, 899, -177, -177,
	899, -177, -177, -177, -177, 899, -177, -177, -177, 1174,
	20735, 1083, -1000, 16999, 20320, 1036, 1196, 1130, 1173, 1041,
	-1000, -1000, -1000, -1000, 1193, -1000, 1192, -1000, -1000, -1000,
	-1000, 20320, 13678, 463, -1000, 1083, 1083, 1083, 1426, 12018,
	981, -1000, -1000, 231, -1000, -1000, -142, -143, -1000, -1000,
	-1000, 7024, 4934, -1000, 4934, -1000, 882, 20320, -1000, 779,
	-1000, -1000, 779, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 553, 13678, 1483, -1000, 1280, -1000, 1274,
	732, -1000, -1000, 914, 251, 251, -48, -1000, -1000, 1099,
	-1000, 251, -1000, 413, -1000, -1000, -1000, -1000, 251, 897,
	-1000, 895, 1014, -1000, 889, 887, -1000, 42, 21150, -1000,
	-1000, -1000, 1172, -1000, -1000, -1000, 890, 1003, -1000, 2352,
	867, 851, 848, 21150, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 547, -1000, 13678, 2811, -1000, -1000, -48, 21150, -1000,
	781, -1000, 779, 271, -1000, -1000, 1270, -1000, -1000, 839,
	837, -1000, 818, 816, 20320, 1267, 812, 21150, 20320, -1000,
	-1000, 787, 804, 12018, -1000, 20320, -218, 796, 20320, 20320,
	20320, -1000, -1000, 1435, 18245, -1000, -1000, 829, -1000, 13678,
	2811, -1000, -1000, 829, 1099, 1099, -1000, 1099, 1127, -1000,
	1099, 6, 1099, 4, 829, 829, 2780, 2736, 2674, 2512,
	1083, -173, -1000, 478, 12018, 2304, 1889, -1000, 315, -1000,
	-1000, -1000, -1000, -1000, -177, -177, -1000, -1000, -1000, -1000,
	-177, -1000, -1000, -177, -1000, -1000, -1000, -1000, -177, -1000,
	-1000, -1000, -1000, 1365, 976, 994, -1000, -1000, 9527, 829,
	876, 249, 872, -1000, 1426, -1000, -1000, 12018, 1124, -1000,
	12018, -1000, -1000, -1000, 872, 2208, -1000, 20320, 20320, 20320,
	1413, 478, -1000, -1000, -1000, -1000, 4516, -1000, 863, -1000,
	1099, -1000, -1000, -1000, 2811, -95, -1000, -1000, -1000, -1000,
	-1000, -1000, 251, -1000, -1000, -1000, -1000, -1000, -48, 729,
	-48, 618, -1000, 614, 137, 20320, -1000, -1000, -244, 1098,
	-1000, 1087, 21150, 69, 223, -1000, 2352, 2352, 2352, -1000,
	-1000, 2811, -120, -1000, 787, 151, 2352, -1000, 1156, 355,
	163, -1000, -1000, -1000, -1000, -1000, 795, 342, -1000, 188,
	151, 787, 478, 1376, -1000, 7024, -1000, -1000, 1097, 1161,
	-1000, 1433, 998, -1000, 2811, -1000, -1000, 113, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13678, 13678, 13678, 13678,
	13678, 829, 712, 478, 13678, 13678, 829, 1420, -1000, -1000,
	-1000, -1000, -1000, 1266, -1000, 1083, -1000, -1000, 1146, 20320,
	20320, -1000, 20320, 1413, 478, 20320, 478, 14093, -1000, 15753,
	860, 860, 860, -1000, 454, 20320, 1380, -1000, -1000, 251,
	-1000, 251, 877, 864, 21150, -1000, -1000, 20320, -1000, 1410,
	-1000, 69, -1000, 711, 57, 63, -1000, 55, 53, 52,
	51, 48, -1000, -1000, -1000, -1000, 1327, 1317, 836, -1000,
	-1000, 780, -1000, 1096, 779, -1000, -1000, 756, -1000, -1000,
	20320, -1000, 151, 1083, 995, -1000, 469, 20320, 21150, 1430,
	1419, -1000, -1000, 1650, 1650, 1650, 1650, 125, -1000, -1000,
	1650, 1650, -1000, 12018, 1481, -1000, 1083, -1000, 1087, 236,
	-1000, -1000, -1000, 858, -1000, 463, -1000, -1000, -1000, 454,
	-1000, 754, 445, 705, -1000, -1000, -1000, -1000, -1000, -1000,
	1094, 856, -1000, 85, 2238, -1000, -1000, -1000, -1000, -1000,
	-1000, 1343, 1338, 68, 189, 1286, 1300, 1418, -1000, -1000,
	-1000, 453, 20320, 1156, -1000, -1000, -1000, -1000, 132, 7024,
	4934, 844, -1000, -1000, 12433, 12433, -1000, -1000, -1000, -1000,
	829, 129, -221, -1000, -1000, 996, 20735, 994, 829, 20320,
	-1000, -1000, -1000, -1000, 606, -1000, 20320, 454, 76, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12018, 12018, 2238, -1000, -1000, -1000, -1000, 1092,
	598, 1317, 1417, 1314, 1311, -1000, 703, -1000, 835, 1089,
	-1000, 833, -1000, 20320, -1000, -1000, 1131, -1000, 478, -1000,
	983, -1000, 478, -1000, -1000, 1232, -214, -224, 829, 977,
	-1000, -1000, -1000, 828, -1000, 454, 80, -1000, 506, 720,
	-299, -1000, -1000, 20320, 1320, -1000, 701, -1000, 1416, 1415,
	-1000, 454, 20320, -1000, 132, 1253, -218, 12433, -1000, 1231,
	-1000, -1000, 1171, -1000, 752, 648, 603, -1000, 12018, 941,
	499, 826, -1000, -1000, 663, 658, -1000, 775, -1000, 119,
	-1000, -1000, -219, 1170, 1169, 1459, 190, -1000, -1000, 531,
	941, -1000, 686, -300, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 941, -1000, -1000, -1000, -1000, -1000,
	454, 114, -222, -1000, 1480, -1000, 1478, 357, 357, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -301, 941, 187, -303,
	-1000, 1083, -226, -1000, -1000, -1000, 160, 646, -1000, -1000,
	853, -304, 176, 941, 571, -1000, -1000, 12018, 785, 12848,
	-1000, -1000, -1000, -1000, 530, 941, -1000, -305, 175, 941,
	-1000, 600, -1000, 1650, 829, -1000, 578, -1000, -306, 941,
	-1000, -1000, 168, 289, -308, -1000, 159, 941, -1000,
}
var yyPgo = [...]int{

	0, 1793, 144, 663, 1792, 1786, 1781, 15, 13, 11,
	22, 1780, 1552, 1550, 1548, 1544, 1777, 1539, 5, 6,
	26, 25, 7, 30, 1775, 17, 1774, 1756, 21, 1754,
	3, 99, 1753, 1752, 1751, 1748, 1746, 1537, 1745, 1744,
	1743, 1740, 1738, 1535, 1528, 1737, 1727, 1526, 1524, 1724,
	1721, 1522, 1517, 1503, 1720, 137, 1718, 1717, 1716, 160,
	1715, 110, 1714, 1712, 1710, 82, 1622, 78, 87, 192,
	1708, 27, 1707, 105, 147, 117, 1706, 77, 1705, 1704,
	112, 1703, 1701, 1700, 95, 1699, 1697, 2716, 1696, 1695,
	107, 1693, 57, 43, 69, 1692, 1690, 1689, 1688, 1687,
	89, 9, 1686, 1685, 1683, 62, 1681, 1680, 114, 1679,
	1678, 1676, 96, 48, 1675, 44, 37, 58, 1674, 167,
	33, 1673, 91, 1672, 1670, 1668, 1666, 1665, 32, 1664,
	47, 1663, 104, 185, 256, 10, 50, 51, 100, 1661,
	55, 1660, 86, 71, 68, 35, 106, 1658, 109, 90,
	1657, 1656, 776, 1655, 1654, 88, 1653, 60, 80, 1651,
	579, 111, 70, 1650, 1649, 1648, 1647, 65, 85, 1646,
	1644, 40, 284, 102, 1415, 19, 1609, 53, 108, 1638,
	39, 1637, 2637, 103, 46, 81, 1636, 1631, 76, 79,
	45, 1630, 1629, 1627, 1626, 1624, 1623, 229, 1621, 1620,
	1619, 1617, 59, 56, 1615, 1614, 83, 73, 1610, 1608,
	1607, 1606, 1605, 92, 66, 101, 1604, 98, 75, 1603,
	1602, 1601, 1600, 64, 42, 1599, 1596, 1589, 72, 41,
	1588, 52, 34, 29, 54, 4, 63, 1587, 24, 1584,
	36, 1583, 38, 1582, 31, 84, 2, 18, 20, 1581,
	1579, 1577, 28, 1574, 1572, 1571, 1570, 67, 1569, 1546,
	49, 1542, 1530, 1520, 1510, 1501, 0, 122, 113, 1498,
	1495, 131,
}
var yyR1 = [...]int{

	0, 264, 265, 265, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 54,
	2, 2, 2, 6, 3, 4, 4, 5, 5, 7,
	7, 58, 58, 8, 9, 9, 9, 9, 268, 268,
	82, 82, 80, 80, 81, 81, 142, 142, 10, 10,
	10, 10, 146, 146, 149, 149, 149, 150, 150, 150,
	150, 186, 186, 135, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 255, 255, 256, 256, 257, 257, 257,
	257, 258, 258, 259, 259, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 26, 26,
	170, 170, 35, 35, 36, 36, 36, 131, 131, 131,
	11, 11, 11, 11, 11, 18, 20, 20, 27, 27,
	28, 21, 21, 21, 21, 29, 29, 30, 22, 22,
	34, 34, 32, 32, 31, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 17, 254, 254,
	254, 25, 25, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 244, 244, 243, 242, 242, 241, 241, 240,
	41, 225, 226, 226, 226, 226, 226, 226, 214, 215,
	190, 190, 190, 190, 190, 190, 190, 189, 189, 189,
	189, 193, 193, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 192, 192, 192, 192, 192, 192, 192, 192,
	194, 194, 194, 194, 194, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	196, 196, 196, 196, 196, 196, 196, 196, 213, 213,
	197, 197, 206, 206, 207, 207, 207, 204, 204, 205,
	205, 208, 208, 200, 201, 209, 202, 202, 202, 203,
	203, 203, 212, 212, 212, 212, 198, 216, 216, 235,
	235, 234, 234, 233, 233, 233, 224, 224, 230, 230,
	230, 230, 230, 219, 219, 219, 218, 218, 220, 220,
	223, 223, 232, 232, 231, 217, 217, 236, 236, 236,
	236, 236, 236, 221, 221, 222, 222, 222, 247, 248,
	246, 246, 246, 246, 246, 97, 97, 97, 227, 227,
	227, 228, 228, 228, 229, 229, 229, 249, 249, 37,
	37, 37, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 130, 130, 130, 39, 40, 40, 40, 40,
	40, 40, 40, 40, 168, 168, 245, 245, 245, 239,
	237, 237, 238, 238, 13, 42, 42, 14, 14, 14,
	14, 14, 14, 14, 15, 15, 43, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	70, 156, 156, 154, 154, 157, 157, 155, 155, 155,
	158, 158, 158, 159, 159, 187, 187, 187, 45, 45,
	50, 50, 53, 51, 52, 169, 169, 48, 48, 49,
	49, 49, 49, 64, 64, 269, 269, 47, 47, 46,
	46, 46, 46, 16, 270, 55, 56, 56, 57, 57,
	57, 61, 61, 61, 59, 59, 59, 60, 60, 67,
	67, 66, 66, 68, 68, 68, 68, 133, 133, 133,
	134, 134, 179, 179, 179, 178, 178, 178, 178, 72,
	72, 73, 73, 74, 74, 75, 75, 75, 75, 91,
	91, 92, 92, 92, 92, 92, 103, 103, 141, 141,
	140, 140, 143, 143, 76, 76, 76, 76, 77, 77,
	78, 78, 79, 79, 167, 167, 184, 184, 184, 83,
	83, 83, 85, 84, 84, 84, 84, 86, 86, 88,
	89, 89, 87, 87, 90, 93, 93, 93, 93, 94,
	94, 69, 69, 69, 69, 69, 69, 69, 153, 153,
	96, 96, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 111, 111, 111, 111, 111, 111, 98, 98,
	98, 98, 98, 98, 98, 65, 65, 112, 112, 112,
	119, 113, 113, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 106, 106, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 271,
	271, 108, 107, 107, 107, 107, 107, 107, 62, 62,
	62, 62, 62, 185, 185, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 123, 123,
	63, 63, 121, 121, 122, 124, 124, 120, 120, 120,
	100, 100, 100, 100, 100, 100, 100, 100, 102, 102,
	102, 125, 125, 114, 114, 71, 71, 126, 126, 127,
	127, 128, 128, 129, 129, 132, 132, 136, 136, 136,
	137, 137, 137, 137, 138, 138, 138, 99, 99, 99,
	99, 99, 99, 139, 139, 139, 139, 144, 144, 115,
	115, 117, 117, 116, 118, 145, 145, 148, 148, 148,
	148, 147, 147, 147, 181, 181, 181, 151, 151, 160,
	160, 161, 161, 152, 152, 199, 199, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 166, 166, 165, 165,
	165, 162, 162, 162, 163, 163, 180, 180, 176, 176,
	177, 177, 182, 182, 183, 183, 250, 250, 210, 210,
	263, 263, 211, 211, 252, 252, 253, 253, 261, 261,
	262, 262, 251, 251, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 266, 267, 171, 172, 172,
	172,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 1, 3,
	0, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 1, 1, 3, 4, 3, 3, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 4, 4, 3, 3, 2,
	4, 5, 2, 3, 4, 2, 2, 3, 3, 3,
	3, 3, 4, 1, 1, 1, 1, 1, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 0,
	1, 1, 2, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 2, 1, 2, 1, 2, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 3,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 1, 10, 11, 11,
	12, 12, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 2, 1,
	1, 1, 6, 10, 9, 7, 7, 7, 9, 7,
	12, 14, 7, 7, 7, 9, 9, 10, 5, 6,
	8, 7, 0, 1, 2, 4, 7, 5, 5, 5,
	12, 7, 5, 9, 0, 1, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 5, 4, 6, 4,
	4, 4, 4, 4, 3, 2, 3, 4, 4, 3,
	6, 6, 4, 4, 4, 4, 4, 4, 3, 3,
	2, 6, 2, 4, 4, 4, 3, 7, 6, 5,
	4, 2, 4, 3, 4, 3, 3, 5, 2, 3,
	3, 1, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 2, 2, 2,
	2, 3, 3, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 1, 3, 1, 2, 3, 5, 2, 4, 7,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 1, 3, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 1, 1, 5, 6, 6,
	6, 5, 5, 5, 6, 5, 5, 6, 5, 5,
	5, 5, 6, 5, 5, 5, 4, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 6, 8, 8, 8, 8, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 1, 0, 2, 1,
	1, 0, 3, 1, 3, 2, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 1, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}
var yyChk = [...]int{

	-1000, -264, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -54, -3, -4, 6,
	7, -58, 9, 10, 30, -41, 129, -38, -39, -40,
	132, 131, 168, 133, 161, 63, 214, -53, 217, 218,
	-269, -169, 166, 167, 31, 32, 135, 212, 20, 37,
	-266, 8, 309, 130, 215, 163, 162, 26, 67, -265,
	424, -128, 15, -57, 5, -55, -270, -55, -55, -55,
	-55, -55, -225, 104, 67, -163, 142, 85, 300, 138,
	-170, 139, -162, 190, 44, 149, 148, 139, 139, 140,
	142, 300, 138, 176, 175, 139, -87, -182, 70, -174,
	351, 152, 366, 367, 130, 187, 214, 225, 219, 253,
	241, 352, 368, 153, 207, 137, 239, 242, 287, 151,
	200, 369, 274, 282, 210, 79, 217, 296, 370, 154,
	204, 206, 205, 195, 211, 36, 164, 237, 230, 190,
	371, 359, 228, 28, 185, 372, 284, 258, 373, 356,
	283, 233, 229, 135, 374, 155, 149, 178, 375, 259,
	263, 376, 288, 377, 378, 379, 141, 223, 224, 380,
	191, 290, 257, 33, 150, 353, 48, 173, 291, 38,
	261, 37, 273, 381, 256, 251, 382, 383, 384, 385,
	255, 222, 250, 202, 52, 136, 265, 264, 266, 203,
	286, 246, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 189, 399, 234, 146,
	400, 175, 401, 355, 402, 292, 227, 403, 157, 172,
	166, 295, 404, 405, 406, 407, 158, 408, 409, 410,
	218, 276, 208, 411, 412, 413, 414, 199, 184, 298,
	289, 51, 212, 270, 415, 221, 148, 213, 416, 215,
	43, 181, 7, 201, 277, 209, 248, 174, 417, 418,
	235, 236, 254, 220, 249, 216, 176, 177, 168, 419,
	297, 271, 357, 50, 243, 240, 182, 247, 420, 142,
	179, 180, 421, 278, 279, 183, 354, 293, 238, 272,
	139, 122, 242, 287, 129, 275, 276, 284, -219, 285,
	175, 178, -187, 139, -154, 274, 278, 279, 183, 70,
	140, 141, 33, 289, 288, 280, -182, -64, 133, 169,
	-87, -171, -171, -171, 277, 277, -171, -34, 213, 70,
	36, -2, -152, 142, 279, 144, 216, -137, 17, 16,
	-5, -3, -266, 6, 21, 22, -61, 53, 54, -56,
	-68, 113, -69, -182, -95, 87, -101, 29, 70, -174,
	24, -100, -96, -120, -118, -119, 122, 123, 124, 111,
	112, 119, 88, 125, -106, -104, -105, -107, -109, -110,
	72, 71, 80, 73, 74, 75, 76, 81, 82, 83,
	-176, -116, -266, 57, 58, 138, 310, 311, 312, 313,
	350, 159, 314, 90, 47, 299, 308, 307, 306, 304,
	305, 301, 303, 302, 316, 317, 145, 300, 117, 309,
	339, 340, 341, 342, 343, 344, 345, 346, 348, 349,
	347, 329, 322, 323, 324, 325, 326, 327, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, -152, -152,
	11, -80, -81, -87, -90, -182, -145, -186, 216, -148,
	289, 288, -120, -147, -176, -182, 287, 242, 286, -87,
	-226, -217, -215, 154, -236, -177, 155, 151, -176, -173,
	70, -174, 134, 160, 86, 358, 23, 25, 268, 322,
	89, 122, 323, 324, 325, 16, 20, 90, 121, 310,
	326, 129, 61, 301, 303, 299, 300, 275, 29, 10,
	26, 162, 194, 22, 115, 131, 93, 94, 95, 165,
	24, 163, 83, 159, 19, 64, 11, 13, 320, 321,
	14, 145, 144, 106, 192, 140, 59, 8, 125, 27,
	103, 55, 327, 328, 362, 45, 363, 57, 104, 17,
	304, 305, 31, 350, 329, 170, 364, 330, 117, 197,
	62, 49, 87, 81, 34, 84, 65, 85, 15, 193,
	60, 318, 196, 365, 105, 132, 309, 58, 138, 6,
	315, 30, 161, 333, 332, 331, 334, 198, 56, 312,
	313, 335, 422, 139, 92, 316, 317, 143, 82, 5,
	44, 32, 9, 63, 66, 306, 307, 308, 47, 337,
	336, 338, 91, 12, 319, 140, -87, 309, -161, 145,
	-161, 176, 175, -161, 96, -42, -87, -160, 145, -176,
	-160, -160, -160, -160, -160, -87, 126, -87, 70, 30,
	-172, -266, -177, 300, 138, 70, 175, 178, 139, 176,
	142, -172, -172, -221, 11, 106, 181, 181, 181, 182,
	-172, -157, -156, 177, 282, 283, 277, 281, 12, -70,
	104, 182, 277, 180, -172, -49, -2, -9, -7, -8,
	-2, 96, -171, -171, 30, 72, 50, -254, 67, -210,
	273, -267, 69, 139, -87, 129, 131, 134, 65, -138,
	19, 31, -69, -182, -129, -132, -69, -175, 322, 323,
	324, 325, 326, 339, 340, 341, 327, 328, 342, 343,
	344, 329, 330, 345, 346, 348, 349, 347, 333, 332,
	331, 334, 335, 337, 336, 338, -128, -2, -55, 49,
	-59, 21, 22, 78, 11, -179, 86, 85, 103, -178,
	23, 70, -174, -175, 72, 322, 323, 324, 325, 326,
	339, 340, 341, 327, 328, 342, 343, 344, 329, 330,
	345, 346, 348, 349, 347, 333, 332, 331, 334, 335,
	337, 336, 338, 126, -69, -98, 106, 87, 104, 105,
	89, 108, 107, 118, 111, 112, 113, 114, 115, 116,
	117, 109, 110, 121, 96, 97, 98, 99, 100, 101,
	102, -153, -266, -119, -266, 127, 128, -101, -101, -101,
	-101, -101, -101, -101, -101, -266, -2, -113, -69, -266,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-123, -69, -266, -271, -108, -266, -271, -108, -271, -108,
	-271, -266, -271, -108, -271, -108, -271, -271, -108, -271,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, -89, 27, -87, -73, -74, -75,
	-76, -91, -119, -266, -87, -87, -80, -268, 68, 11,
	66, -268, 68, 126, 68, -145, 216, -146, -149, 290,
	292, 96, -181, -176, 72, 29, 126, 30, 69, 68,
	70, -189, -193, -195, -194, -196, -191, -192, 239, 242,
	246, 244, 240, 245, 122, 243, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 30, 164, 235,
	236, 237, 238, 259, 260, 261, 262, 263, 264, 265,
	266, 219, 241, 352, 220, 221, 222, 223, 224, 225,
	227, 228, 229, 230, 231, 232, 233, 45, 67, -176,
	23, 142, 70, 87, 70, 70, 70, -87, 70, 68,
	143, -80, 24, 65, -82, -87, 70, 70, 70, 70,
	-183, -182, -173, -172, -172, -161, -161, -172, -172, -172,
	-87, -87, -87, -87, -158, 104, 12, -158, -172, -172,
	11, -155, 11, 106, -155, -69, -101, -159, 104, 65,
	70, -32, -31, -33, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 72, 69, -113, -250,
	423, -87, -172, 179, 179, 139, 139, 184, -87, 9,
	106, 68, 18, 126, 68, -136, 25, 26, -136, -137,
	-267, -61, -102, 50, 73, 76, -60, 56, -87, -69,
	-69, -111, 81, 87, 82, 83, -178, 113, -183, -177,
	-173, -101, -112, -116, -119, 77, 106, 104, 105, 89,
	-101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -101, -101, -101, -101, -185, 70, 72, 70, -100,
	-100, -176, -59, -267, 68, -267, -2, -66, -68, -66,
	-267, -69, -69, -120, 72, -66, -120, 72, -66, -66,
	-66, -59, -121, -122, 91, -120, -267, -101, -176, -176,
	-66, -67, -66, -66, -66, -267, -267, -68, -66, -68,
	-66, -66, -267, -267, -267, -267, -59, -59, -66, -66,
	-66, -59, -66, -66, -59, -66, -66, -66, -66, -59,
	-66, -66, -66, -142, 171, -87, 30, 68, -83, -85,
	-84, -86, 55, 59, 61, 56, 57, 58, 62, -167,
	23, -73, -266, -92, 171, -93, 23, -184, 63, 144,
	64, -182, -175, 72, -142, 66, -73, -87, -73, -90,
	-182, 113, -148, -146, 68, 291, 293, 294, 65, 84,
	-69, -203, 121, -177, -183, -227, -228, -229, -177, 72,
	73, -215, -216, -217, -230, 146, 148, 44, -218, 140,
	45, -236, 155, 151, -190, -204, 271, -197, 67, -197,
	-197, 247, 239, 242, 240, -197, -197, -197, -197, -197,
	-202, 242, -202, -202, -202, -202, 240, 67, 67, -197,
	-197, -197, -206, 67, -206, 234, -207, 67, -207, -207,
	-207, -207, 67, -69, -180, 66, -135, -87, -172, 24,
	-172, -35, 187, 160, 67, -87, -87, -87, 68, 70,
	70, -222, 11, 106, 72, -69, -87, -103, 23, -182,
	-182, -158, -65, 165, 72, -87, 68, 96, 69, -88,
	27, 72, -164, 134, 131, 132, 136, 137, -239, 268,
	130, 242, 79, 29, 15, 310, 171, 357, 70, 172,
	-87, -87, -87, -87, -87, 134, 131, 51, -69, -69,
	-132, -138, -151, 19, 11, 47, 47, -66, 81, 82,
	83, 126, -266, -112, -101, -101, -101, -65, 86, -267,
	-67, -69, -267, 68, -267, -267, 68, 66, 23, 11,
	11, -267, 11, 11, -267, -267, -267, -66, -124, -122,
	93, -69, -267, -267, 68, 68, -267, -267, -267, -267,
	-133, 318, -133, -267, -267, -267, -267, -267, -133, -133,
	-133, -133, -66, -66, -267, -267, -267, -66, -267, -267,
	-66, -267, -267, -267, -267, -66, -267, -267, -267, -99,
	30, 47, -2, -266, -266, -145, -74, -75, -75, -74,
	-75, 55, 55, 55, 60, 55, 60, 55, -84, -184,
	-267, -266, 34, -184, -93, 140, 140, 140, -94, 12,
	-73, -94, -94, 126, -149, -150, 295, 292, 298, 70,
	72, 126, 68, -229, 96, -217, 154, 67, 45, -218,
	140, 45, -218, -223, 70, -223, -208, -200, -201, -209,
	-212, -198, 81, 87, 29, 65, 268, 146, 45, 44,
	79, -205, 272, 73, -202, -202, -197, -197, -197, 247,
	-197, -202, -203, 30, -203, -203, -203, -203, -202, -213,
	72, -213, 73, -206, 73, -140, -176, 69, 65, -176,
	-2, 23, -36, 8, 9, 10, -255, -256, -257, 70,
	106, 192, 193, 143, -172, -87, -172, -172, -94, 70,
	70, -155, -158, 34, -101, -31, -100, -142, 139, -171,
	-168, -245, -218, -249, -217, 147, 155, 146, 171, 154,
	-168, -245, 154, 151, -218, 155, 147, -165, -218, 143,
	23, -168, -168, -224, 96, 171, -244, 66, 179, 268,
	179, 52, -87, -72, 11, 113, -177, -67, -65, 86,
	-101, -267, -68, -188, 122, 239, 164, 237, 230, 257,
	244, 270, 235, 271, -185, -188, -101, -101, -101, -101,
	351, -128, 95, -69, 92, -101, -101, -176, -266, -133,
	-133, -133, -133, -133, -267, -267, -134, -133, -134, -134,
	-267, -134, -134, -267, -134, -134, -134, -134, -267, -134,
	-134, -134, -144, 65, -145, -115, -117, -116, -266, -2,
	-139, -176, -143, -176, -94, -78, -77, 65, 66, -79,
	65, -77, 55, 55, -143, -101, -93, -266, -266, -266,
	-128, -69, -94, 292, 296, 297, -228, -229, -232, -231,
	-176, -223, -223, 81, -101, 9, 45, 45, 72, 69,
	-203, -203, -202, -197, -203, 70, 122, -203, 69, 68,
	69, 68, 69, 68, 69, 68, -97, 372, 87, -87,
	-135, -135, 65, 69, 68, -189, 70, 70, 70, -87,
	-158, -101, -202, -87, 67, -214, 70, -171, -223, -162,
	70, 70, -171, 70, 70, -176, 45, 70, -87, -176,
	-214, 70, -69, -176, -242, 354, -243, 70, -176, -176,
	-176, -94, -73, -267, -101, -267, -197, -197, -197, -207,
	-197, 224, -197, 224, -267, -267, 19, 19, 19, 19,
	-266, -63, 315, -69, 68, 68, -128, 171, -134, -134,
	-134, -134, -134, 28, -144, 68, -267, -267, -267, 68,
	126, -267, 68, -128, -69, 67, -69, -267, -93, -167,
	-140, -140, -140, -137, 69, 68, -197, -105, -203, -202,
	72, -202, 73, 73, 157, -176, 372, 67, -2, -87,
	-258, -259, -260, 79, 353, 87, 194, 195, 156, 196,
	197, 198, -257, -189, -189, -189, -261, -157, -214, -130,
	159, 160, -189, -180, -220, -218, 70, -166, 143, 23,
	143, -130, -214, 27, -241, -240, -177, 67, 66, -125,
	13, -202, 70, -101, -101, -101, -101, -101, -267, 72,
	-101, -101, -267, 16, 45, -117, 47, -2, -266, -176,
	-176, -176, -137, -140, -92, -184, -267, -267, -267, -234,
	-233, 66, 150, 79, -231, -136, -203, -203, 69, 69,
	-87, -232, -135, 19, -135, -260, 72, 198, 194, 198,
	198, 198, 198, 199, -262, 38, -252, 39, 69, -171,
	70, -190, 67, -223, 70, -176, -171, -130, -266, 68,
	96, -140, -87, -126, 14, 16, -267, -267, -267, -267,
	-62, 106, 354, -267, -267, -113, 9, -115, -2, 126,
	69, -93, -233, 70, -224, 72, 67, 69, 185, -23,
	-2, -7, -8, -9, -10, -12, -37, -13, -14, -20,
	-21, -15, -43, -44, -53, -51, -52, -48, -47, -22,
	-17, -24, 90, 145, 214, 36, 36, 190, 191, -199,
	144, -251, 43, -263, -211, 42, 16, -171, -232, -180,
	-171, -237, -238, 171, -240, -229, 69, -127, -69, -175,
	-114, -71, -69, -175, -267, 352, 62, 355, -128, -145,
	-267, -176, 73, -140, -235, -234, 186, -135, -69, -69,
	-26, -23, -141, 67, 73, -252, 16, -253, 40, 41,
	72, 69, 67, -267, 68, -176, -244, 68, 52, 353,
	356, -267, 69, -131, 188, 189, -27, -28, 91, 92,
	424, -140, 38, 72, 16, 16, -235, -232, -238, 47,
	-242, -71, 52, -247, -248, 65, -135, 70, 70, 95,
	93, -28, -69, -25, -19, -2, -7, -8, -9, -10,
	-20, -21, -22, -18, 214, 95, -23, 69, 72, 72,
	69, 173, 354, -248, 65, -247, 65, 10, 9, -11,
	-18, -10, -7, -8, -9, 90, -25, 92, 424, -25,
	-235, 174, 355, -246, 158, 153, 156, 30, -246, -135,
	424, -25, 95, 93, -29, -19, -30, 94, 424, -266,
	356, 152, 29, 81, 95, 424, 145, -25, 95, 93,
	-30, -69, 95, -101, 170, 90, 424, 145, -25, 92,
	-267, -267, 95, 424, -25, 145, 95, 424, 145,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 801, 0, 504,
	504, 504, 504, 504, 504, 0, -2, 369, 370, 371,
	0, 0, 0, 0, -2, 479, 480, 481, 483, 484,
	493, -2, 1277, 1277, 0, 0, 1277, 0, 0, 0,
	0, 41, 42, 853, 0, 496, 485, 486, 1275, 1,
	3, 810, 0, 0, 508, 511, 506, 0, 853, 853,
	0, 0, 74, 0, 0, 0, 0, 0, 851, 851,
	0, 851, 875, 0, 871, 872, 873, 0, 849, 0,
	849, 849, 849, 849, 849, 0, 425, 592, 882, 883,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	0, 0, 0, 1278, 0, 1278, 1278, 440, 0, 442,
	0, 0, 0, 1278, 0, 451, 0, 0, 458, 1278,
	323, 324, 325, 476, 477, 464, 478, 0, 0, 0,
	497, 498, 499, 500, 1277, 1277, 503, 158, 0, 178,
	888, 35, 0, 0, 0, 854, 482, 814, 0, 0,
	801, 37, 0, 504, 509, 510, 514, 512, 513, 505,
	0, 523, 532, 0, 601, 0, 606, 608, -2, -2,
	0, 643, 644, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 671, 672, 673, 674, 675, 676,
	780, 781, 782, 783, 784, 785, 786, 787, 610, 611,
	777, 834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 0, 739, 739, 739, 739, 739,
	739, 739, 739, 739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 592, 58, 0, 1222, 835,
	-2, -2, 0, 0, 777, 0, -2, 1054, -2, 75,
	0, 202, 203, 1066, 336, 0, 1092, 1056, 880, 881,
	878, 879, 904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 426, 1278, 1278,
	429, 1279, 1280, 851, 851, 1278, 1278, 1278, 0, 0,
	0, 438, 439, 0, 343, 344, 470, 470, 1278, 1278,
	446, 0, 467, 467, 465, 466, 461, 462, 0, 453,
	0, 473, 455, 456, 459, 487, -2, 490, 491, 492,
	-2, 0, 501, 502, 0, 160, 0, 177, 0, 886,
	889, 36, 1276, 0, 1278, 0, 0, 0, 0, 30,
	0, 0, 811, 0, 802, 803, 807, 807, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 810, 35, 511, 0,
	517, 515, 516, 507, 0, 524, 0, 0, 0, 533,
	0, 535, 536, 537, 538, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 630, 631, 632, 633,
	634, 607, 0, 621, 0, 0, 0, 663, 664, 665,
	666, 667, 668, 669, 0, 514, 35, 0, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 769, 0, 722, 731, 0, 723, 732, 724, 733,
	725, 0, 726, 734, 727, 735, 728, 729, 736, 730,
	0, 0, 0, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 514, 0,
	0, 0, 514, 0, 0, 514, 0, 0, 0, 0,
	514, 0, 0, 0, 56, 0, 591, 0, 541, 543,
	544, 545, -2, 0, 595, -2, 0, 0, 0, 48,
	49, 0, 0, 0, 0, 59, 1222, 61, 62, 0,
	0, 0, 299, 844, 845, 846, 0, 842, 358, 0,
	0, 210, 287, 218, 219, 220, 280, 222, 280, 280,
	0, 280, 280, 280, 280, 280, 296, 296, 296, 296,
	296, 263, 264, 265, 266, 267, 0, 0, 240, 280,
	280, 280, 244, 270, 271, 272, 273, 274, 275, 276,
	277, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	282, 282, 284, 284, 284, 284, 284, 0, 0, 876,
	73, 0, 1278, 0, 1278, 0, 0, 200, 131, 0,
	0, 417, 850, 0, 419, 50, 420, 421, 422, 423,
	593, 884, 885, 427, 428, 0, 0, 432, 433, 434,
	435, 436, 437, 345, 443, 0, 0, 444, 445, 450,
	0, 556, 0, 0, 470, 452, 635, 454, 0, 0,
	494, 159, 162, 0, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 161, 179, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 815,
	0, 0, 0, 0, 0, 805, 808, 809, 806, 814,
	38, 514, 0, 788, 0, 0, 0, 518, 33, 602,
	603, 605, 622, 0, 624, 626, 534, 525, 0, 778,
	-2, 612, 613, 637, 638, 639, 0, 0, 0, 0,
	635, 617, 0, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 662, 753, 754, 0, 660,
	661, 670, 519, 640, 0, 833, 35, 0, 521, 0,
	709, 0, 0, 645, 780, 0, 645, 780, 0, 0,
	0, 0, 775, 772, 0, 0, 740, 0, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 0, 579, 0, 0, 582, 0, 0, 0, 0,
	575, 0, 0, 549, 1156, 551, 0, 595, 0, 0,
	0, 576, 577, 578, 599, 0, 599, 53, 599, 55,
	0, 594, 836, 60, 0, 0, 65, 66, 837, 838,
	839, 840, 0, 778, 0, 201, 359, 361, 364, 365,
	366, 204, 206, 207, 0, 1166, 1203, -2, 330, -2,
	-2, 335, 0, 0, 209, 289, 288, 221, 0, 296,
	296, 280, 280, 280, 280, 249, 296, 252, 255, 256,
	299, 0, 299, 299, 299, 299, 296, 0, 0, 241,
	242, 243, 232, 0, 233, 282, 235, 0, 236, 237,
	238, 239, 0, 0, 0, 0, 0, 0, 79, 852,
	80, 0, 132, 133, 83, 0, 415, 1278, 0, 1278,
	1278, 599, 0, 0, 471, 472, 467, 470, 0, 468,
	469, 449, 460, 0, 474, 457, 0, 0, 180, 56,
	0, 887, 1277, -2, 404, 868, 404, 404, 388, 316,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 0,
	192, 397, 399, 398, 402, 0, 0, 0, 812, 813,
	804, 31, 0, 847, 848, 789, 790, 539, 623, 625,
	627, 0, 519, 614, 635, 618, 0, 615, 0, 609,
	0, 642, -2, 0, 707, 708, 0, 0, 0, 0,
	0, 746, 0, 0, 747, 0, 718, 801, 0, 773,
	0, 0, 721, 741, 0, 0, 742, 743, 744, 745,
	696, 0, 697, 0, 0, 0, 0, 0, 703, 704,
	705, 706, 0, 0, 530, 530, 530, 0, 530, 530,
	0, 530, 530, 530, 530, 0, 530, 530, 530, 827,
	0, 0, -2, 0, 0, 599, 542, 570, 572, 0,
	567, 580, 581, 583, 0, 585, 0, 587, 588, 546,
	548, 0, 0, 595, 555, 0, 0, 0, 801, 0,
	599, 46, 47, 0, 63, 64, 0, 0, 70, 300,
	301, 0, 0, 362, 0, 205, 0, 0, 318, 330,
	326, 327, 330, 321, 331, 322, 211, 212, 213, 214,
	215, 216, 291, 0, 0, 0, 295, 0, 303, 305,
	0, 217, 290, 0, 299, 299, 296, 247, 248, 280,
	253, 299, 257, 0, 258, 259, 260, 261, 299, 0,
	278, 0, 0, 234, 0, 0, 560, 355, 0, 877,
	-2, 73, 0, 134, 135, 136, 0, 84, 85, 0,
	0, 0, 0, 0, 418, 51, 430, 431, 441, 346,
	347, 470, 448, 0, 636, 163, 164, 296, 0, 372,
	0, 1277, 330, 0, 389, 405, 406, 407, 408, 0,
	0, 1277, 0, 0, 0, 406, 0, 0, 0, 869,
	870, 0, 0, 0, 317, 0, 195, 0, 0, 0,
	0, 816, 32, 599, 0, 526, 779, 0, 616, 0,
	619, 677, 522, 0, 280, 280, 758, 280, 284, 761,
	280, 763, 280, 766, 0, 0, 0, 0, 0, 0,
	0, 770, 720, 776, 0, 0, 0, 527, 801, 698,
	699, 700, 701, 702, 530, 530, 681, 531, 682, 683,
	530, 685, 686, 530, 688, 689, 690, 691, 530, 693,
	694, 695, 39, 0, 827, 817, 829, 831, 0, 35,
	0, 823, 0, 562, 801, 564, 571, 0, 0, 565,
	0, 566, 584, 586, 0, -2, 554, 0, 0, 0,
	810, 600, 45, 67, 68, 69, 360, 363, 0, 332,
	280, 319, 320, 292, 293, 0, 302, 304, 306, 281,
	245, 246, 299, 254, 250, 297, 298, 262, 296, 0,
	296, 0, 285, 0, 0, 0, 342, 356, 0, 0,
	77, 0, 0, 91, 0, 87, 0, 0, 0, 416,
	447, 557, 898, 589, 0, 392, 0, 375, 876, 328,
	368, 376, 377, 382, 383, 384, 0, 0, 379, 0,
	392, 0, 391, 0, 396, 0, 193, 194, 0, 0,
	401, 791, 540, 678, 620, 710, 755, 296, 759, 760,
	762, 764, 765, 767, 712, 711, 0, 0, 0, 0,
	0, 0, 0, 774, 0, 0, 0, 0, 679, 680,
	684, 687, 692, 0, 40, 0, 832, -2, 0, 0,
	0, 57, 0, 810, 568, 0, 573, 595, 552, 0,
	0, 0, 0, 44, 308, 0, 807, 294, 251, 299,
	279, 299, 0, 0, 0, 561, 357, 0, -2, 0,
	73, 92, 93, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 86, 88, 89, 90, 900, 894, 0, 1277,
	393, 0, 210, 0, 330, 329, 390, 0, 866, 867,
	0, 1277, 392, 0, 196, 197, 0, 0, 0, 797,
	0, 756, 757, 0, 0, 0, 0, 748, 719, 771,
	0, 0, 528, 0, 0, 830, 0, -2, 0, 825,
	824, 563, 43, 0, 550, 595, 596, 597, 598, 307,
	311, 0, 316, 0, 333, 334, 268, 269, 283, 286,
	0, 0, 78, 0, 0, 94, 95, 96, 97, 99,
	100, 0, 0, 0, 855, 902, -2, 0, 1277, 374,
	394, 208, 0, 876, 378, 385, 386, 1277, 0, 0,
	0, 0, 403, 34, 0, 0, 713, 715, 714, 716,
	0, 0, 0, 737, 738, 801, 0, 820, 35, 0,
	569, 553, 312, 313, 0, 315, 0, 309, 0, 73,
	-2, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 0, 0, 0, 101, 102, 103, 104, 558,
	0, 894, 0, 896, 0, 893, 0, 373, 0, 0,
	387, 0, 410, 0, 198, 199, 192, 798, 799, 800,
	792, 793, 795, 796, 717, 0, 0, 0, 0, 828,
	-2, 826, 314, 0, 76, 310, 137, 82, 0, 0,
	0, 128, 29, 0, 0, 901, 0, 899, 0, 0,
	895, 309, 0, 409, 0, 0, 195, 0, 749, 0,
	752, 529, 337, 73, 0, 0, 0, 148, 0, 0,
	0, 0, 856, 903, 0, 0, 380, 0, 411, 0,
	400, 794, 750, 338, 339, 0, 0, 138, 139, 0,
	0, 149, 0, 0, 181, -2, 184, 185, 186, 187,
	188, 189, 190, 191, 0, 127, 129, 559, 897, 891,
	309, 0, 0, 340, 0, 341, 0, 0, 0, 73,
	140, 141, 142, 143, 144, 146, 0, 0, 0, 0,
	381, 0, 0, 348, 350, 351, 0, 0, 349, 81,
	0, 0, 0, 0, 0, 182, 155, 0, 0, 0,
	751, 352, 353, 354, 0, 150, 151, 0, 0, 0,
	156, 0, 145, 0, 0, 147, 0, 153, 0, 0,
	412, 413, 0, 0, 0, 152, 0, 157, 154,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:387
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:392
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:393
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:397
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:424
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:430
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:436
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:444
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:448
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:454
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:461
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:467
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:477
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:481
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:488
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:500
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:516
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:522
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:528
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:532
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:536
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:540
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:546
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:554
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:560
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:564
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:574
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			yyVAL.partitions = nil
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:583
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:601
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:611
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:617
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:621
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:625
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:631
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:635
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:639
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.str = SessionStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:653
		{
			yyVAL.str = GlobalStr
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:658
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:672
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 76:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:681
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:685
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:689
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:697
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 81:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:705
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 82:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:709
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:714
		{
			yyVAL.procedureParams = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:724
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:734
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:751
		{
			yyVAL.characteristics = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:755
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:761
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:799
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:807
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:840
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:855
		{
			yyVAL.str = ""
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:865
		{
			yyVAL.str = BeforeStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.str = AfterStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.str = InsertStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
			yyVAL.str = UpdateStr
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
			yyVAL.str = DeleteStr
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.triggerOrder = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:892
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:896
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:902
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:918
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:922
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:938
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:944
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:949
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:954
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 154:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:960
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:978
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:984
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:988
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:994
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1037
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1042
		{
			yyVAL.exprs = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.exprs = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1079
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1094
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1154
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1188
		{
			yyVAL.columnType = ColumnType{}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.sqlVal = nil
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1536
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1540
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1548
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1552
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1558
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1566
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1575
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = ""
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1640
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.colKeyOpt = colKey
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1664
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1668
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1673
		{
			yyVAL.indexOptions = nil
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = ""
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1722
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = yyDollar[1].str
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1798
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 337:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1808
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 338:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1812
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 339:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1816
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 340:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1820
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 341:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1824
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1829
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1882
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1891
		{
			yyVAL.boolean = true
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.boolean = true
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.boolean = false
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = yyDollar[1].str
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 373:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1966
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 374:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1973
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1988
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 378:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1992
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1996
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 380:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 381:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2014
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 385:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 386:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2027
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 387:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2034
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2040
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2044
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2050
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnOrder = nil
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2074
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2092
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 400:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 403:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2150
		{
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2161
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2177
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2181
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2197
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2205
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2213
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2217
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2225
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2233
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2241
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2249
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2274
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2279
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2300
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2304
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2308
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2312
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2356
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2361
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2371
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2383
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2410
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = "full "
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2484
		{
			yyVAL.showFilter = nil
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2492
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2498
		{
			yyVAL.showFilter = nil
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = SessionStr
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = GlobalStr
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.statement = &Begin{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.statement = &Begin{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.statement = &Commit{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.statement = &Rollback{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2586
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.statement = &OtherRead{}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2629
		{
			setAllowComments(yylex, true)
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2639
		{
			yyVAL.bytes2 = nil
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = UnionStr
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = UnionAllStr
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = UnionDistinctStr
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = SQLCacheStr
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = DistinctStr
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = StraightJoinHint
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2697
		{
			yyVAL.selectExprs = nil
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2725
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2729
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2740
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2744
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2749
		{
			yyVAL.over = nil
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.over = yyDollar[1].over
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2758
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2793
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2803
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2827
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2838
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2853
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 553:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2857
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.expr = nil
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2885
		{
			yyVAL.columns = nil
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2889
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2922
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2926
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2930
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2934
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2940
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2942
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2957
		{
			yyVAL.empty = struct{}{}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.empty = struct{}{}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = JoinStr
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = JoinStr
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = JoinStr
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = StraightJoinStr
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = LeftJoinStr
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = LeftJoinStr
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = RightJoinStr
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = RightJoinStr
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3012
		{
			yyVAL.str = NaturalJoinStr
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3057
		{
			yyVAL.indexHints = nil
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3061
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3065
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3069
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3074
		{
			yyVAL.expr = nil
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3142
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3146
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3150
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3158
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3162
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3166
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = IsNullStr
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = IsNotNullStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = IsTrueStr
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3188
		{
			yyVAL.str = IsNotTrueStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.str = IsFalseStr
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3196
		{
			yyVAL.str = IsNotFalseStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = EqualStr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = LessThanStr
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = GreaterThanStr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = LessEqualStr
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = GreaterEqualStr
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = NotEqualStr
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.expr = nil
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3393
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 678:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3500
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3504
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3508
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3512
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3516
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3520
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3524
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3528
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 711:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 713:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 714:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 715:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 716:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 717:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3690
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3730
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = BooleanModeStr
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = QueryExpansionStr
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3784
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3798
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3802
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3818
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.expr = nil
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = string("")
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3852
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3857
		{
			yyVAL.expr = nil
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3861
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3875
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.expr = &NullVal{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3923
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3928
		{
			yyVAL.exprs = nil
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3957
		{
			yyVAL.expr = nil
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3961
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.orderBy = nil
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3980
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = AscScr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = AscScr
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = DescScr
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4018
		{
			yyVAL.limit = nil
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4026
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4030
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.str = ForUpdateStr
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = ShareModeStr
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4056
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4069
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4073
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4077
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4088
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4096
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			yyVAL.setExprs = nil
		}
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4105
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4125
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4131
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4161
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4165
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4176
		{
			yyVAL.bytes = []byte("charset")
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = &Default{}
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.byt = 0
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.byt = 1
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.byt = 0
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yyVAL.byt = 1
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = IgnoreStr
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4215
		{
			yyVAL.sqlVal = nil
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.empty = struct{}{}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.empty = struct{}{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.empty = struct{}{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4246
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.empty = struct{}{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = UniqueStr
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = FulltextStr
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = SpatialStr
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = yyDollar[1].str
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4266
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = string("")
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4315
		{
			yyVAL.EnclosedBy = nil
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4319
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: "'" + string(yyDollar[4].bytes) + "'"}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4324
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4351
		{
			yyVAL.Fields = nil
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4355
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].str, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].str}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4360
		{
			yyVAL.Lines = nil
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].str, TerminatedBy: yyDollar[3].str}
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			decNesting(yylex)
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4788
		{
			skipToEnd(yylex)
		}
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4793
		{
			skipToEnd(yylex)
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			skipToEnd(yylex)
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
