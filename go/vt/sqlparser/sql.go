// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const ENABLE = 57517
const DISABLE = 57518
const EACH = 57519
const ROW = 57520
const BEFORE = 57521
const FOLLOWS = 57522
const PRECEDES = 57523
const DEFINER = 57524
const INVOKER = 57525
const INOUT = 57526
const OUT = 57527
const DETERMINISTIC = 57528
const CONTAINS = 57529
const READS = 57530
const MODIFIES = 57531
const SQL = 57532
const SECURITY = 57533
const TEMPORARY = 57534
const ALGORITHM = 57535
const MERGE = 57536
const TEMPTABLE = 57537
const UNDEFINED = 57538
const CLASS_ORIGIN = 57539
const SUBCLASS_ORIGIN = 57540
const MESSAGE_TEXT = 57541
const MYSQL_ERRNO = 57542
const CONSTRAINT_CATALOG = 57543
const CONSTRAINT_SCHEMA = 57544
const CONSTRAINT_NAME = 57545
const CATALOG_NAME = 57546
const SCHEMA_NAME = 57547
const TABLE_NAME = 57548
const COLUMN_NAME = 57549
const CURSOR_NAME = 57550
const SIGNAL = 57551
const RESIGNAL = 57552
const SQLSTATE = 57553
const DECLARE = 57554
const CONDITION = 57555
const CURSOR = 57556
const CONTINUE = 57557
const EXIT = 57558
const UNDO = 57559
const HANDLER = 57560
const FOUND = 57561
const SQLWARNING = 57562
const SQLEXCEPTION = 57563
const USER = 57564
const IDENTIFIED = 57565
const ROLE = 57566
const REUSE = 57567
const GRANT = 57568
const GRANTS = 57569
const REVOKE = 57570
const NONE = 57571
const ATTRIBUTE = 57572
const RANDOM = 57573
const PASSWORD = 57574
const INITIAL = 57575
const AUTHENTICATION = 57576
const SSL = 57577
const X509 = 57578
const CIPHER = 57579
const ISSUER = 57580
const SUBJECT = 57581
const ACCOUNT = 57582
const EXPIRE = 57583
const NEVER = 57584
const DAY = 57585
const OPTION = 57586
const OPTIONAL = 57587
const EXCEPT = 57588
const ADMIN = 57589
const PRIVILEGES = 57590
const MAX_QUERIES_PER_HOUR = 57591
const MAX_UPDATES_PER_HOUR = 57592
const MAX_CONNECTIONS_PER_HOUR = 57593
const MAX_USER_CONNECTIONS = 57594
const FLUSH = 57595
const FAILED_LOGIN_ATTEMPTS = 57596
const PASSWORD_LOCK_TIME = 57597
const REQUIRE = 57598
const PROXY = 57599
const ROUTINE = 57600
const TABLESPACE = 57601
const CLIENT = 57602
const SLAVE = 57603
const EVENT = 57604
const EXECUTE = 57605
const FILE = 57606
const RELOAD = 57607
const REPLICATION = 57608
const SHUTDOWN = 57609
const SUPER = 57610
const USAGE = 57611
const LOGS = 57612
const ENGINE = 57613
const ERROR = 57614
const GENERAL = 57615
const HOSTS = 57616
const OPTIMIZER_COSTS = 57617
const RELAY = 57618
const SLOW = 57619
const USER_RESOURCES = 57620
const NO_WRITE_TO_BINLOG = 57621
const CHANNEL = 57622
const BEGIN = 57623
const START = 57624
const TRANSACTION = 57625
const COMMIT = 57626
const ROLLBACK = 57627
const SAVEPOINT = 57628
const WORK = 57629
const RELEASE = 57630
const BIT = 57631
const TINYINT = 57632
const SMALLINT = 57633
const MEDIUMINT = 57634
const INT = 57635
const INTEGER = 57636
const BIGINT = 57637
const INTNUM = 57638
const SERIAL = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL = 57643
const NUMERIC = 57644
const DEC = 57645
const FIXED = 57646
const PRECISION = 57647
const TIME = 57648
const TIMESTAMP = 57649
const DATETIME = 57650
const YEAR = 57651
const CHAR = 57652
const VARCHAR = 57653
const BOOL = 57654
const CHARACTER = 57655
const VARBINARY = 57656
const NCHAR = 57657
const NVARCHAR = 57658
const NATIONAL = 57659
const VARYING = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const LONG = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const ENUM = 57671
const GEOMETRY = 57672
const POINT = 57673
const LINESTRING = 57674
const POLYGON = 57675
const GEOMETRYCOLLECTION = 57676
const MULTIPOINT = 57677
const MULTILINESTRING = 57678
const MULTIPOLYGON = 57679
const LOCAL = 57680
const LOW_PRIORITY = 57681
const NULLX = 57682
const AUTO_INCREMENT = 57683
const APPROXNUM = 57684
const SIGNED = 57685
const UNSIGNED = 57686
const ZEROFILL = 57687
const COLLATION = 57688
const DATABASES = 57689
const SCHEMAS = 57690
const TABLES = 57691
const FULL = 57692
const PROCESSLIST = 57693
const COLUMNS = 57694
const FIELDS = 57695
const ENGINES = 57696
const PLUGINS = 57697
const NAMES = 57698
const CHARSET = 57699
const GLOBAL = 57700
const SESSION = 57701
const ISOLATION = 57702
const LEVEL = 57703
const READ = 57704
const WRITE = 57705
const ONLY = 57706
const REPEATABLE = 57707
const COMMITTED = 57708
const UNCOMMITTED = 57709
const SERIALIZABLE = 57710
const ENCRYPTION = 57711
const CURRENT_TIMESTAMP = 57712
const DATABASE = 57713
const CURRENT_DATE = 57714
const CURRENT_USER = 57715
const CURRENT_TIME = 57716
const LOCALTIME = 57717
const LOCALTIMESTAMP = 57718
const UTC_DATE = 57719
const UTC_TIME = 57720
const UTC_TIMESTAMP = 57721
const REPLACE = 57722
const CONVERT = 57723
const CAST = 57724
const SUBSTR = 57725
const SUBSTRING = 57726
const TRIM = 57727
const LEADING = 57728
const TRAILING = 57729
const BOTH = 57730
const GROUP_CONCAT = 57731
const SEPARATOR = 57732
const TIMESTAMPADD = 57733
const TIMESTAMPDIFF = 57734
const OVER = 57735
const WINDOW = 57736
const GROUPING = 57737
const CURRENT = 57738
const AVG = 57739
const BIT_AND = 57740
const BIT_OR = 57741
const BIT_XOR = 57742
const COUNT = 57743
const JSON_ARRAYAGG = 57744
const JSON_OBJECTAGG = 57745
const MAX = 57746
const MIN = 57747
const STDDEV_POP = 57748
const STDDEV = 57749
const STD = 57750
const STDDEV_SAMP = 57751
const SUM = 57752
const VAR_POP = 57753
const VARIANCE = 57754
const VAR_SAMP = 57755
const CUME_DIST = 57756
const DENSE_RANK = 57757
const FIRST_VALUE = 57758
const LAG = 57759
const LAST_VALUE = 57760
const LEAD = 57761
const NTH_VALUE = 57762
const NTILE = 57763
const ROW_NUMBER = 57764
const PERCENT_RANK = 57765
const RANK = 57766
const MATCH = 57767
const AGAINST = 57768
const BOOLEAN = 57769
const LANGUAGE = 57770
const WITH = 57771
const QUERY = 57772
const EXPANSION = 57773
const UNUSED = 57774
const ARRAY = 57775
const DESCRIPTION = 57776
const EMPTY = 57777
const JSON_TABLE = 57778
const LATERAL = 57779
const MEMBER = 57780
const RECURSIVE = 57781
const ACTIVE = 57782
const BUCKETS = 57783
const CLONE = 57784
const COMPONENT = 57785
const DEFINITION = 57786
const ENFORCED = 57787
const EXCLUDE = 57788
const GEOMCOLLECTION = 57789
const GET_MASTER_PUBLIC_KEY = 57790
const HISTOGRAM = 57791
const HISTORY = 57792
const INACTIVE = 57793
const INVISIBLE = 57794
const LOCKED = 57795
const MASTER_COMPRESSION_ALGORITHMS = 57796
const MASTER_PUBLIC_KEY_PATH = 57797
const MASTER_TLS_CIPHERSUITES = 57798
const MASTER_ZSTD_COMPRESSION_LEVEL = 57799
const NESTED = 57800
const NETWORK_NAMESPACE = 57801
const NOWAIT = 57802
const NULLS = 57803
const OJ = 57804
const OLD = 57805
const ORDINALITY = 57806
const ORGANIZATION = 57807
const OTHERS = 57808
const PATH = 57809
const PERSIST = 57810
const PERSIST_ONLY = 57811
const PRIVILEGE_CHECKS_USER = 57812
const PROCESS = 57813
const REFERENCE = 57814
const REQUIRE_ROW_FORMAT = 57815
const RESOURCE = 57816
const RESPECT = 57817
const RESTART = 57818
const RETAIN = 57819
const SECONDARY = 57820
const SECONDARY_ENGINE = 57821
const SECONDARY_LOAD = 57822
const SECONDARY_UNLOAD = 57823
const SKIP = 57824
const SRID = 57825
const THREAD_PRIORITY = 57826
const TIES = 57827
const VCPU = 57828
const VISIBLE = 57829
const SYSTEM = 57830
const INFILE = 57831
const NVAR = 57832
const PASSWORD_LOCK = 57833

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1075,
	-1, 43,
	147, 1139,
	148, 1157,
	-2, 237,
	-1, 49,
	186, 704,
	187, 704,
	-2, 694,
	-1, 555,
	135, 1167,
	-2, 1161,
	-1, 556,
	135, 1168,
	-2, 1162,
	-1, 660,
	98, 1450,
	135, 1450,
	-2, 1123,
	-1, 661,
	98, 1569,
	135, 1569,
	-2, 1124,
	-1, 666,
	98, 1474,
	135, 1474,
	-2, 1125,
	-1, 667,
	98, 1522,
	135, 1522,
	-2, 1126,
	-1, 668,
	98, 1523,
	135, 1523,
	-2, 1127,
	-1, 669,
	98, 1397,
	135, 1397,
	-2, 1131,
	-1, 671,
	98, 1499,
	135, 1499,
	-2, 1133,
	-1, 1191,
	1, 801,
	5, 801,
	12, 801,
	13, 801,
	14, 801,
	15, 801,
	17, 801,
	19, 801,
	30, 801,
	31, 801,
	56, 801,
	57, 801,
	58, 801,
	59, 801,
	60, 801,
	62, 801,
	63, 801,
	66, 801,
	67, 801,
	69, 801,
	70, 801,
	412, 801,
	510, 801,
	-2, 833,
	-1, 1197,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1293,
	1, 484,
	510, 484,
	-2, 482,
	-1, 1295,
	1, 484,
	510, 484,
	-2, 482,
	-1, 1454,
	135, 1170,
	-2, 1166,
	-1, 1620,
	44, 550,
	-2, 1409,
	-1, 1624,
	68, 548,
	72, 548,
	-2, 1444,
	-1, 1625,
	68, 550,
	-2, 1357,
	-1, 1628,
	68, 546,
	72, 546,
	-2, 1275,
	-1, 1629,
	68, 547,
	72, 547,
	-2, 1285,
	-1, 1676,
	1, 485,
	510, 485,
	-2, 482,
	-1, 1759,
	44, 593,
	154, 595,
	156, 593,
	157, 593,
	-2, 630,
	-1, 1835,
	5, 51,
	-2, 903,
	-1, 2145,
	69, 1332,
	70, 1332,
	135, 1332,
	-2, 735,
	-1, 2168,
	1, 858,
	5, 858,
	12, 858,
	13, 858,
	14, 858,
	15, 858,
	17, 858,
	19, 858,
	30, 858,
	31, 858,
	56, 858,
	57, 858,
	58, 858,
	59, 858,
	60, 858,
	62, 858,
	63, 858,
	66, 858,
	67, 858,
	69, 858,
	70, 858,
	412, 858,
	510, 858,
	-2, 833,
	-1, 2276,
	154, 596,
	-2, 594,
	-1, 2337,
	5, 51,
	-2, 1095,
	-1, 2549,
	41, 1177,
	-2, 1175,
	-1, 2652,
	5, 51,
	-2, 1098,
}

const yyPrivate = 57344

const yyLast = 35269

var yyAct = [...]int{
	622, 80, 2867, 2843, 883, 2825, 2845, 2749, 2874, 2725,
	427, 2826, 1612, 2663, 7, 2634, 2087, 2569, 2782, 2750,
	2662, 6, 2661, 5, 2664, 8, 2639, 1976, 2220, 2655,
	2718, 558, 2493, 2632, 2453, 556, 2723, 2549, 2349, 1900,
	2162, 2182, 1870, 561, 2070, 1146, 547, 1572, 1671, 1578,
	2138, 1630, 1228, 1695, 2551, 2434, 2237, 2410, 621, 2404,
	2388, 1432, 83, 1576, 410, 413, 2059, 1921, 2183, 1784,
	2656, 452, 452, 2260, 899, 2139, 2270, 1621, 458, 1992,
	1927, 80, 2069, 129, 683, 540, 129, 1758, 106, 1871,
	574, 1328, 129, 1610, 939, 916, 473, 563, 1611, 2154,
	2147, 1479, 455, 455, 93, 1425, 1488, 1662, 681, 1928,
	685, 2109, 2135, 1551, 1721, 129, 1330, 1440, 2037, 1375,
	1194, 1555, 1347, 1617, 1304, 662, 129, 1679, 1678, 1677,
	129, 688, 1044, 680, 1658, 665, 1967, 1051, 1545, 1188,
	1208, 1047, 1456, 2660, 3, 1562, 968, 947, 1191, 679,
	129, 455, 543, 688, 1675, 1207, 658, 1162, 1187, 659,
	1738, 129, 472, 654, 1380, 1064, 430, 429, 126, 1299,
	651, 946, 866, 1296, 1199, 102, 871, 409, 98, 1163,
	2906, 2902, 2897, 2882, 2880, 2862, 1600, 85, 2838, 2790,
	553, 82, 1373, 470, 1327, 69, 2218, 2375, 2389, 422,
	2528, 1055, 2853, 2734, 2824, 2650, 2391, 882, 36, 2804,
	36, 653, 2709, 36, 2234, 677, 2526, 36, 2733, 2130,
	2612, 2635, 2541, 1806, 539, 87, 88, 89, 90, 91,
	2331, 2529, 1865, 2004, 445, 880, 439, 450, 433, 2729,
	2649, 1708, 1708, 865, 1983, 1737, 894, 2178, 2179, 1866,
	1490, 2478, 1597, 1598, 1574, 2724, 1209, 2080, 1210, 440,
	1421, 1422, 2177, 1379, 36, 1037, 72, 39, 40, 1596,
	81, 1396, 81, 2726, 868, 81, 873, 874, 919, 81,
	996, 2394, 1909, 876, 421, 1908, 1377, 1378, 1910, 675,
	920, 921, 420, 1950, 1632, 2583, 462, 1736, 2730, 965,
	1634, 1004, 2464, 1079, 1078, 1088, 1089, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1080, 424, 1634, 1090, 2729, 1647,
	2318, 2392, 2393, 2395, 2396, 2397, 81, 635, 110, 641,
	643, 642, 639, 640, 638, 637, 636, 1376, 549, 1638,
	1640, 1652, 1639, 1647, 2316, 2110, 404, 1359, 2367, 2368,
	929, 419, 2726, 469, 2034, 463, 1417, 1416, 1415, 1414,
	1413, 1412, 1000, 1001, 2079, 980, 432, 431, 434, 1999,
	2819, 99, 2411, 2412, 2413, 2414, 438, 2730, 72, 39,
	40, 1011, 2752, 2405, 1012, 2026, 2112, 2554, 2259, 2031,
	1749, 2408, 2751, 442, 2244, 926, 2003, 446, 2699, 2616,
	41, 2430, 2614, 2422, 1659, 2406, 2407, 80, 80, 1750,
	1407, 449, 129, 2523, 2521, 2787, 2758, 903, 904, 1696,
	934, 907, 2001, 2420, 114, 2527, 2871, 936, 1302, 935,
	101, 108, 2697, 120, 116, 117, 108, 118, 2516, 2606,
	112, 111, 113, 2785, 2786, 1981, 2238, 2239, 2240, 2241,
	2242, 870, 869, 905, 906, 2520, 129, 1311, 1312, 1310,
	2519, 917, 2518, 918, 920, 921, 1033, 1646, 2517, 122,
	121, 2515, 872, 2799, 1041, 2598, 414, 872, 2772, 2602,
	2603, 927, 928, 2822, 108, 1690, 1691, 2658, 2545, 1982,
	2737, 2738, 2247, 1686, 109, 113, 2235, 896, 980, 2351,
	405, 1984, 2238, 2239, 2240, 2241, 2242, 129, 435, 436,
	437, 443, 1386, 447, 448, 451, 1003, 115, 415, 1891,
	913, 914, 1685, 411, 103, 2840, 104, 123, 2595, 124,
	2017, 2018, 915, 2114, 912, 911, 2435, 2436, 2118, 407,
	2113, 969, 2111, 1227, 2608, 1227, 1226, 2116, 1381, 2045,
	933, 937, 2892, 1227, 2849, 1099, 2275, 2844, 1101, 2002,
	2115, 1647, 2043, 2390, 2907, 2904, 2898, 2618, 1957, 110,
	2217, 2847, 423, 979, 408, 2117, 2119, 2613, 2727, 1360,
	2524, 1013, 930, 1383, 1637, 1067, 1382, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 2261,
	1743, 1144, 2648, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 2584, 1161, 1164, 1164, 1164, 1170,
	1164, 1164, 1170, 1164, 1170, 1179, 1180, 1181, 1182, 79,
	1192, 79, 1030, 2542, 79, 1100, 73, 2727, 79, 1661,
	902, 1032, 1941, 2544, 2005, 1039, 2698, 2246, 980, 2834,
	2607, 1379, 990, 100, 1018, 412, 119, 1946, 1945, 412,
	412, 112, 111, 2883, 129, 129, 129, 1766, 1760, 1761,
	867, 1759, 1762, 1763, 1377, 1378, 2445, 1186, 1993, 1942,
	688, 2494, 665, 2186, 885, 79, 976, 665, 1227, 2446,
	1200, 412, 2045, 468, 1948, 2496, 1934, 441, 1581, 1583,
	2846, 2848, 1935, 2025, 2022, 2878, 2007, 1769, 2006, 1028,
	1744, 1316, 1314, 931, 1994, 1674, 864, 1898, 1221, 1897,
	1896, 1768, 1767, 1548, 863, 2020, 1036, 1195, 875, 376,
	987, 2301, 2449, 2293, 1926, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 2056, 1926, 2024, 1145, 1287, 73, 1185,
	2023, 1197, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 1212, 1926, 1913, 1944, 975, 1213,
	1947, 1926, 2495, 1052, 1165, 1167, 1169, 1171, 1173, 1175,
	1176, 1178, 1705, 1071, 1102, 1103, 1582, 1704, 1926, 1024,
	985, 1844, 1905, 1225, 1801, 1789, 1166, 1168, 1931, 1172,
	1174, 1198, 1177, 1774, 2444, 1689, 1687, 1203, 1995, 1996,
	2611, 1023, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1029,
	986, 1841, 982, 1848, 1079, 1078, 1088, 1089, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1080, 2876, 1925, 1090, 2877,
	1435, 2875, 2450, 2633, 1222, 1220, 1205, 1925, 1070, 895,
	2255, 1601, 1090, 1147, 2043, 2509, 983, 984, 1227, 452,
	2382, 2044, 2045, 1592, 1160, 1306, 2380, 2207, 1925, 1080,
	1357, 2055, 1090, 2531, 1925, 2052, 2773, 2774, 452, 688,
	129, 1722, 1043, 2460, 1329, 2770, 2771, 1765, 2064, 455,
	455, 1925, 1556, 455, 1428, 2645, 2644, 2051, 2043, 2060,
	129, 1348, 2048, 129, 1713, 2047, 2050, 2532, 455, 455,
	559, 129, 1063, 909, 2510, 2152, 1102, 1103, 2151, 2383,
	129, 129, 129, 129, 129, 2381, 2208, 1043, 1079, 1078,
	1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1080,
	1368, 455, 1090, 1061, 1218, 1305, 1102, 1103, 938, 1309,
	1433, 1434, 901, 1333, 1083, 1084, 1085, 1086, 1087, 1080,
	1063, 452, 1090, 878, 877, 1290, 1343, 1344, 1345, 1346,
	2132, 1546, 1943, 1079, 1078, 1088, 1089, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1080, 653, 1332, 1090, 1322, 1371,
	475, 455, 455, 455, 467, 1405, 688, 1355, 1349, 1294,
	1463, 1714, 2886, 2868, 2885, 1338, 1339, 1340, 1341, 1342,
	910, 2896, 1062, 1061, 80, 1461, 1462, 1460, 1062, 1061,
	1351, 1292, 1352, 2802, 1291, 2900, 455, 922, 1307, 2835,
	1063, 455, 455, 1308, 1426, 1318, 1063, 1546, 1839, 1856,
	1838, 1326, 1062, 1061, 1325, 96, 900, 96, 2783, 1389,
	2421, 2415, 129, 2194, 129, 1336, 1337, 688, 1062, 1061,
	1063, 1058, 2702, 1453, 1078, 1088, 1089, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1080, 129, 1063, 1090, 1062, 1061,
	2694, 1067, 80, 648, 649, 2837, 1581, 1583, 1411, 2653,
	2792, 1973, 95, 1363, 1364, 1354, 1063, 1366, 1088, 1089,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1080, 1062, 1061,
	1090, 2539, 1457, 1369, 1483, 1484, 1062, 1061, 1384, 2538,
	2695, 924, 1385, 1388, 1840, 81, 1063, 688, 2537, 1148,
	94, 2783, 1335, 2808, 1063, 2807, 1459, 1420, 1079, 1078,
	1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1080,
	1387, 1458, 1090, 1353, 688, 688, 1406, 1419, 2609, 1409,
	1442, 1454, 2536, 1418, 1062, 1061, 2696, 1452, 1062, 1061,
	2893, 2784, 1437, 1575, 1582, 2134, 2791, 1584, 1532, 1535,
	1192, 1423, 1063, 2755, 1192, 1547, 1063, 2530, 1062, 1061,
	1410, 1446, 1448, 1449, 1147, 1048, 1438, 1447, 1049, 1439,
	129, 1786, 1787, 1788, 2610, 2374, 1063, 1498, 129, 2373,
	129, 1450, 1503, 1605, 1972, 129, 129, 681, 1970, 129,
	129, 129, 1951, 971, 2894, 1145, 1480, 1587, 1481, 2753,
	665, 1589, 1911, 970, 1912, 2708, 2605, 884, 944, 688,
	688, 2604, 2594, 1455, 2546, 2514, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 943, 2474, 1042, 579, 578, 581, 582, 583, 584,
	1195, 1580, 1526, 580, 585, 2418, 1571, 1195, 2417, 2416,
	2384, 1195, 2371, 2266, 2200, 1557, 1968, 1607, 1733, 1365,
	1334, 1287, 1443, 1444, 1486, 2780, 1332, 2779, 1494, 1585,
	2615, 1588, 1702, 2592, 2563, 1931, 2557, 2442, 2304, 1505,
	1506, 1454, 2289, 2285, 1626, 2277, 1145, 1606, 2248, 2232,
	2231, 2230, 1518, 129, 2012, 2011, 1522, 1538, 1726, 129,
	129, 455, 455, 455, 1710, 1549, 129, 1170, 1618, 2324,
	1543, 1709, 1482, 1594, 1361, 1358, 1593, 1599, 1590, 1324,
	1668, 1669, 1323, 1295, 1615, 1608, 887, 888, 889, 890,
	891, 892, 893, 1293, 129, 129, 129, 966, 897, 1664,
	1665, 1666, 1667, 418, 416, 2485, 2805, 1633, 1317, 1147,
	1729, 1010, 475, 1530, 1531, 2360, 2798, 1700, 1701, 1043,
	129, 1901, 129, 2556, 1660, 2505, 688, 2715, 1043, 2504,
	688, 2555, 1715, 2360, 2713, 1771, 2323, 1720, 1697, 2360,
	2711, 2360, 2596, 1711, 1698, 1699, 2485, 2588, 2485, 2501,
	2227, 1706, 688, 2485, 1043, 688, 1719, 2201, 1453, 1558,
	1683, 2485, 2484, 1586, 1790, 1200, 1079, 1078, 1088, 1089,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1080, 1559, 1604,
	1090, 1718, 1074, 1735, 1077, 2360, 2359, 2341, 1043, 2296,
	1068, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1559, 1075,
	1076, 1073, 1773, 1043, 1901, 969, 2295, 1901, 1694, 1079,
	1078, 1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1080, 2215, 2214, 1090, 1724, 1728, 2211, 2212, 976, 1457,
	2765, 1734, 1195, 1079, 1078, 1088, 1089, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1080, 2211, 2210, 1090, 1693, 1670,
	1799, 1043, 1559, 1043, 2150, 1741, 1454, 1746, 1745, 1524,
	1730, 2150, 1606, 1727, 2296, 84, 1867, 1869, 1458, 1430,
	1192, 1192, 1192, 1192, 1192, 1524, 1043, 1748, 1201, 1778,
	1751, 1776, 1777, 1770, 620, 1201, 1575, 1015, 1892, 1795,
	1224, 1223, 1564, 1567, 1568, 1569, 1565, 1192, 1566, 1570,
	1524, 2136, 2155, 2156, 2150, 129, 129, 129, 129, 129,
	2720, 1014, 1872, 1791, 974, 973, 2335, 129, 974, 1799,
	1429, 129, 1708, 1286, 2228, 129, 2213, 2164, 2036, 1915,
	1755, 1595, 129, 1799, 1202, 1828, 1204, 1903, 1827, 1904,
	1895, 1202, 1367, 1200, 1902, 976, 1833, 1707, 665, 1431,
	1038, 1564, 1567, 1568, 1569, 1565, 688, 1566, 1570, 1408,
	1374, 1315, 1792, 1793, 1794, 1313, 1206, 1195, 1195, 1195,
	1195, 1195, 676, 81, 2735, 2712, 672, 2163, 1887, 1873,
	684, 2562, 2560, 1195, 2376, 1634, 1894, 2347, 1663, 2193,
	2155, 2156, 1052, 1855, 1195, 1659, 1919, 980, 1688, 1654,
	1653, 1288, 886, 1930, 1932, 963, 426, 1672, 1899, 1868,
	1875, 1876, 1723, 1878, 2857, 1287, 2855, 2827, 688, 1916,
	129, 2226, 1648, 1649, 1650, 1651, 1886, 2158, 1874, 1526,
	1212, 1877, 1785, 688, 81, 688, 2136, 1974, 452, 455,
	1849, 1850, 1851, 1924, 2016, 1929, 1906, 1320, 1016, 977,
	1914, 972, 1883, 129, 455, 1881, 2161, 1884, 2160, 1918,
	1882, 1880, 2010, 1805, 1807, 1885, 1879, 1568, 1569, 455,
	544, 545, 2776, 2732, 457, 2067, 1819, 1820, 1821, 1822,
	1775, 1441, 80, 2764, 2338, 1834, 1783, 1782, 2475, 2441,
	455, 2363, 688, 1056, 1057, 1305, 2065, 2066, 455, 2284,
	2283, 1969, 1933, 2199, 2014, 1977, 1971, 1857, 2198, 2197,
	2009, 1923, 2072, 2188, 1980, 1978, 1979, 2088, 2620, 688,
	688, 2623, 1054, 2707, 1453, 129, 2706, 2550, 2000, 2754,
	2548, 2601, 2600, 417, 1362, 688, 2533, 2534, 2008, 2063,
	2062, 1045, 2222, 1960, 1961, 1962, 1963, 1964, 1965, 1219,
	961, 2013, 688, 1046, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1080, 945, 2019, 1090, 2021, 942, 941, 898, 2815,
	2567, 1495, 1496, 2566, 1681, 2333, 2451, 2141, 80, 2038,
	2049, 2054, 1732, 2035, 1508, 1509, 1510, 1511, 1682, 2046,
	1426, 2057, 2058, 2040, 2423, 2061, 1433, 1434, 1319, 1523,
	1525, 2424, 2166, 2041, 2766, 1529, 2700, 2170, 2171, 2172,
	2068, 2552, 940, 688, 2073, 688, 2078, 2074, 2137, 1872,
	2149, 2221, 1454, 2015, 1673, 1145, 2131, 96, 2082, 1056,
	1057, 2814, 1424, 2322, 1781, 2140, 2072, 541, 688, 1034,
	1035, 2813, 1780, 2812, 2511, 1754, 925, 2757, 2756, 2027,
	2704, 2120, 2176, 2624, 2169, 2575, 2571, 2033, 542, 688,
	2165, 688, 2121, 688, 84, 688, 2570, 2454, 1901, 1986,
	1987, 1988, 2858, 2174, 2859, 2858, 86, 2264, 2032, 475,
	2030, 2029, 1845, 2144, 1842, 1752, 1873, 2159, 1350, 1059,
	2859, 2585, 2196, 1427, 676, 464, 466, 2076, 2674, 52,
	2676, 19, 2190, 2167, 55, 2191, 1068, 2192, 2187, 1,
	2189, 2675, 18, 2677, 20, 1668, 452, 1669, 1742, 2180,
	129, 2142, 2243, 2678, 21, 1552, 2181, 1391, 2102, 2103,
	1079, 1078, 1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1080, 2122, 2123, 1090, 2124, 2125, 455, 2403, 2126,
	2673, 15, 129, 455, 2672, 14, 2229, 2666, 10, 2223,
	2224, 2225, 2689, 34, 2687, 33, 129, 2245, 455, 2402,
	688, 455, 2686, 32, 2409, 455, 455, 2089, 455, 2685,
	28, 2092, 2093, 2094, 2684, 27, 2097, 2683, 26, 2681,
	23, 2680, 22, 2233, 2168, 688, 2682, 24, 2236, 129,
	688, 2671, 13, 2668, 12, 2219, 1998, 688, 2419, 2250,
	688, 1725, 1303, 1952, 1953, 2267, 2273, 2133, 2251, 2294,
	1959, 2667, 11, 2665, 9, 2522, 881, 2297, 1692, 967,
	1966, 2705, 2619, 2621, 2268, 475, 2547, 2249, 2274, 1287,
	2426, 2329, 2195, 2387, 2288, 2386, 1991, 1990, 962, 2202,
	2203, 2253, 1372, 2039, 2042, 1703, 2206, 1764, 2631, 1753,
	1017, 1619, 2175, 2209, 1609, 678, 92, 1286, 1712, 908,
	384, 1616, 1939, 1756, 2622, 964, 1938, 2083, 2084, 1772,
	1949, 1631, 1676, 1680, 2286, 1937, 2090, 2091, 1936, 2617,
	1940, 1232, 129, 1230, 1231, 1229, 1234, 1233, 2098, 2099,
	2100, 2101, 388, 1214, 1872, 2105, 2106, 2107, 2744, 688,
	2303, 1060, 107, 56, 2443, 2053, 688, 688, 688, 2355,
	2356, 2357, 2342, 460, 461, 97, 688, 2254, 2353, 105,
	2258, 80, 2314, 390, 2262, 2263, 1797, 2265, 1098, 688,
	1779, 1800, 2365, 672, 1907, 663, 1802, 1803, 672, 1215,
	2343, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 2378,
	2334, 1818, 664, 656, 1040, 2643, 1823, 1824, 1825, 1826,
	2358, 1873, 129, 1830, 1831, 1832, 2299, 2717, 2736, 2364,
	1835, 1836, 1837, 2354, 1050, 2636, 1854, 1159, 1843, 1916,
	1544, 1846, 1847, 2399, 2400, 2401, 1852, 2366, 562, 2379,
	1890, 1858, 2459, 1859, 1860, 1861, 1192, 1862, 1863, 2638,
	455, 1445, 577, 576, 575, 572, 2452, 475, 2398, 573,
	2290, 2728, 1436, 1864, 2072, 1072, 1888, 1889, 2326, 2327,
	2328, 549, 2439, 2216, 2437, 2438, 2425, 560, 2428, 688,
	551, 129, 2429, 1190, 1183, 1731, 2141, 688, 1563, 2141,
	2480, 2456, 2457, 2455, 2447, 1561, 2433, 2385, 2427, 1560,
	2432, 1321, 2166, 652, 2187, 2440, 2157, 2153, 1573, 1189,
	1193, 1668, 70, 923, 2377, 406, 2448, 2330, 1138, 1139,
	2582, 38, 465, 546, 25, 17, 932, 688, 16, 1757,
	879, 42, 44, 688, 1985, 2332, 2483, 1684, 129, 2477,
	129, 2369, 1147, 1195, 2140, 2743, 688, 2140, 2842, 948,
	2866, 2781, 2344, 2345, 31, 2507, 2346, 2508, 30, 2348,
	2486, 2476, 688, 29, 2679, 2688, 2487, 1147, 2506, 2670,
	2669, 2829, 2204, 2498, 2499, 2828, 4, 1031, 2482, 2497,
	2492, 2512, 2500, 71, 35, 674, 2, 0, 1289, 0,
	0, 0, 2300, 0, 1297, 1300, 0, 0, 2513, 1580,
	2302, 2488, 2568, 0, 0, 0, 0, 0, 0, 2431,
	2305, 2306, 0, 2525, 0, 1297, 1300, 2535, 0, 2309,
	0, 0, 2540, 0, 0, 2543, 0, 0, 0, 2141,
	0, 80, 688, 2479, 2553, 0, 0, 2252, 0, 2558,
	2559, 0, 0, 0, 0, 2572, 0, 0, 2461, 2462,
	0, 0, 475, 2573, 2565, 0, 0, 0, 2561, 80,
	475, 0, 2465, 2466, 2467, 2468, 0, 0, 0, 0,
	2472, 688, 2574, 0, 0, 2591, 0, 0, 0, 2586,
	0, 0, 0, 0, 0, 0, 0, 2140, 2590, 0,
	0, 2599, 2077, 0, 0, 0, 0, 0, 2085, 0,
	0, 1922, 0, 0, 0, 1392, 1192, 2502, 0, 2503,
	2095, 2096, 2593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 2108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	0, 129, 0, 0, 0, 0, 688, 0, 688, 0,
	80, 0, 2627, 2626, 2629, 0, 0, 2641, 0, 0,
	2628, 2143, 0, 0, 0, 0, 684, 978, 2642, 2659,
	0, 2646, 0, 0, 2587, 2657, 0, 0, 2651, 1872,
	0, 129, 0, 1635, 1636, 0, 1641, 1642, 1643, 1644,
	1645, 0, 0, 2173, 2625, 684, 0, 0, 0, 0,
	0, 0, 2597, 1195, 1655, 1656, 1657, 2703, 2701, 2721,
	0, 0, 0, 0, 0, 0, 2710, 0, 0, 688,
	0, 688, 0, 0, 0, 0, 0, 0, 2370, 0,
	2372, 0, 2731, 0, 0, 0, 1485, 2739, 0, 2591,
	0, 0, 0, 0, 80, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 2748, 0, 549, 0, 0,
	0, 0, 0, 1516, 1517, 0, 2654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 0, 2769, 0, 672, 2768, 0, 0,
	0, 2760, 0, 2762, 0, 2759, 0, 2767, 688, 2763,
	0, 0, 0, 0, 2761, 0, 0, 2630, 0, 0,
	0, 0, 2775, 452, 2778, 0, 0, 2088, 0, 2796,
	0, 688, 0, 0, 2777, 0, 0, 2797, 0, 0,
	2463, 672, 0, 2801, 0, 80, 0, 0, 0, 0,
	0, 80, 2811, 0, 455, 684, 2800, 2788, 684, 684,
	2809, 688, 2816, 0, 0, 0, 0, 2806, 0, 80,
	2818, 688, 2823, 2820, 80, 0, 2836, 2298, 0, 2839,
	2833, 2637, 2640, 2852, 452, 688, 1147, 2832, 2821, 2831,
	2851, 2830, 2856, 0, 0, 80, 0, 2854, 80, 80,
	0, 0, 2861, 80, 0, 2863, 0, 0, 0, 0,
	2185, 0, 0, 2310, 0, 455, 2860, 0, 2818, 0,
	0, 0, 2869, 80, 2319, 2320, 80, 0, 2879, 2887,
	2325, 0, 0, 2884, 2889, 0, 0, 0, 0, 0,
	0, 80, 2818, 80, 0, 2336, 2337, 80, 2339, 0,
	0, 2340, 0, 0, 2899, 0, 0, 0, 80, 0,
	2818, 80, 2818, 80, 0, 0, 0, 80, 2903, 0,
	0, 2352, 0, 1053, 2321, 0, 0, 2818, 0, 0,
	0, 0, 2818, 0, 0, 0, 2818, 0, 0, 1079,
	1078, 1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1080, 2740, 2741, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1740, 0, 2841, 0, 1740,
	0, 127, 0, 0, 403, 0, 0, 0, 2272, 0,
	127, 2640, 0, 0, 0, 1922, 0, 0, 2279, 2281,
	0, 1740, 0, 0, 1740, 0, 0, 0, 2272, 0,
	0, 0, 0, 474, 0, 0, 0, 2129, 0, 0,
	0, 550, 0, 0, 655, 673, 2850, 0, 127, 0,
	684, 1079, 1078, 1088, 1089, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1080, 0, 0, 1090, 0, 0, 127, 0,
	0, 2308, 0, 0, 2810, 1954, 1955, 1956, 1958, 127,
	0, 0, 0, 2872, 0, 0, 0, 0, 0, 0,
	981, 988, 989, 991, 992, 993, 994, 995, 0, 997,
	998, 999, 0, 1002, 0, 1005, 1006, 1007, 1008, 1009,
	2469, 2470, 2471, 0, 2473, 0, 0, 475, 1079, 1078,
	1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1080,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 2489,
	2490, 2491, 1079, 1078, 1088, 1089, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1080, 0, 0, 1090, 399, 0, 2888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	1492, 1493, 0, 672, 0, 1497, 0, 1499, 1500, 1501,
	1502, 0, 1504, 0, 2128, 1507, 0, 0, 0, 0,
	1512, 1513, 1514, 1515, 0, 0, 0, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 1527, 1528, 0, 0, 672,
	1534, 1537, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 684, 0, 2307, 0, 2127,
	0, 0, 0, 0, 0, 1550, 0, 1553, 1554, 0,
	2272, 0, 0, 0, 0, 2576, 2577, 0, 0, 2578,
	2579, 2580, 2581, 0, 0, 377, 0, 0, 0, 0,
	2272, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 397, 398, 1079, 1078, 1088, 1089, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1080, 0, 1975, 1090, 1079,
	1078, 1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1080, 0, 1989, 1090, 1997, 0, 386, 0, 0, 387,
	0, 0, 395, 396, 0, 0, 0, 0, 0, 0,
	0, 2075, 0, 475, 0, 475, 0, 0, 0, 0,
	127, 2185, 0, 0, 1079, 1078, 1088, 1089, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1080, 0, 2185, 1090, 1079,
	1078, 1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1080, 2028, 0, 1090, 0, 0, 2647, 0, 0, 392,
	0, 2652, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 684, 684,
	393, 0, 0, 0, 0, 2205, 0, 0, 0, 0,
	1796, 0, 0, 0, 684, 0, 0, 0, 0, 0,
	1254, 0, 0, 0, 0, 2714, 684, 0, 0, 0,
	0, 2086, 0, 0, 0, 474, 0, 2722, 1079, 1078,
	1088, 1089, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1080,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 2789,
	0, 0, 0, 0, 0, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 684, 0, 2148, 0, 0, 0, 391, 381,
	382, 0, 402, 0, 0, 0, 383, 385, 0, 379,
	401, 400, 0, 0, 0, 0, 0, 2148, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 684, 0,
	684, 2185, 684, 2185, 2184, 0, 0, 0, 0, 0,
	0, 0, 1798, 394, 0, 0, 0, 0, 2311, 2312,
	1804, 2313, 1255, 0, 2315, 0, 2317, 0, 0, 0,
	0, 1816, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 127, 127, 127, 0, 0, 0, 0, 0,
	0, 0, 673, 0, 0, 0, 0, 673, 0, 0,
	0, 0, 2361, 2362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1390, 0, 2257,
	1393, 1394, 1395, 0, 1397, 1398, 0, 0, 1399, 0,
	0, 0, 0, 0, 1400, 0, 2890, 2891, 1401, 1402,
	0, 1403, 1404, 0, 2282, 0, 0, 0, 0, 2287,
	0, 0, 0, 0, 0, 0, 2291, 0, 0, 2292,
	0, 0, 0, 2185, 0, 0, 0, 1268, 1271, 1272,
	1273, 1274, 1275, 1276, 0, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 0, 1256, 1257, 1258, 1259, 1235, 1239,
	1269, 1236, 1242, 1238, 1240, 1237, 0, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2350, 0,
	0, 0, 0, 0, 0, 2350, 2350, 2350, 0, 0,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 1298, 1301, 1270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 127, 0, 0, 1298, 1301, 0, 0, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 127,
	127, 127, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1254, 684, 0,
	0, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2481, 0, 0, 0,
	0, 0, 2350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 2184, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 2564, 0, 0, 0, 0, 0, 1491, 1491, 1491,
	0, 0, 0, 1491, 1491, 1491, 1491, 1491, 1491, 1491,
	1491, 0, 0, 1491, 0, 0, 0, 0, 1491, 1491,
	1491, 1491, 0, 0, 0, 1491, 1491, 1491, 0, 0,
	2589, 0, 0, 1491, 1491, 0, 0, 0, 1491, 1491,
	0, 1491, 0, 0, 0, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 1491, 1491, 1491, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 474, 0,
	0, 0, 0, 127, 127, 0, 0, 127, 1591, 1331,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 2184, 0, 2184, 0, 0,
	0, 0, 0, 0, 1268, 1271, 1272, 1273, 1274, 1275,
	1276, 0, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	672, 1256, 1257, 1258, 1259, 1235, 1239, 1269, 1236, 1242,
	1238, 1240, 1237, 0, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2716, 0,
	2719, 0, 0, 0, 0, 0, 2276, 0, 0, 0,
	0, 127, 0, 0, 0, 538, 0, 127, 127, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 1716, 1717, 127, 0, 0, 684, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 2184, 127, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1227, 0, 0, 0, 0, 0, 0,
	2350, 496, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 0, 0, 491, 0, 485, 0, 0, 0, 0,
	2719, 0, 499, 0, 0, 0, 0, 0, 0, 1331,
	2803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 512, 479, 0, 516, 0, 0, 0, 0, 0,
	1491, 0, 477, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 494, 518, 0, 1491,
	1491, 0, 0, 0, 492, 493, 495, 522, 0, 524,
	530, 0, 1491, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 673, 127, 127, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 534, 127,
	0, 0, 0, 474, 0, 0, 0, 0, 1491, 0,
	127, 0, 0, 480, 0, 2269, 0, 0, 673, 2271,
	0, 0, 502, 0, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 531, 532, 0, 0, 0, 488, 481,
	482, 483, 484, 486, 505, 506, 510, 511, 528, 527,
	526, 529, 533, 536, 535, 537, 487, 489, 497, 507,
	508, 509, 513, 514, 523, 519, 521, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 127, 0, 525, 0, 0, 491, 0, 485, 0,
	0, 0, 0, 520, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 0, 504, 0,
	0, 0, 0, 0, 512, 479, 0, 516, 0, 0,
	0, 0, 0, 127, 0, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 1491, 0, 0, 0, 0, 494,
	518, 0, 0, 1491, 0, 1331, 0, 492, 493, 495,
	522, 0, 524, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 1920,
	0, 0, 0, 0, 0, 502, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 0, 0, 0, 531, 532, 0, 0,
	0, 488, 481, 482, 483, 484, 486, 505, 506, 510,
	511, 528, 527, 526, 529, 533, 536, 535, 537, 487,
	489, 497, 507, 508, 509, 513, 514, 523, 519, 521,
	0, 0, 0, 0, 0, 0, 1227, 0, 127, 0,
	0, 0, 0, 0, 496, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 491, 0, 485, 0,
	127, 0, 0, 0, 0, 499, 520, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 127, 504, 0,
	0, 0, 0, 0, 512, 479, 0, 516, 0, 0,
	0, 0, 0, 0, 550, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	518, 0, 0, 0, 0, 0, 0, 492, 493, 495,
	522, 0, 524, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	474, 0, 0, 78, 673, 0, 0, 41, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2690,
	0, 0, 2865, 2868, 2864, 0, 531, 532, 0, 0,
	127, 488, 481, 482, 483, 484, 486, 505, 506, 510,
	511, 528, 527, 526, 529, 533, 536, 535, 537, 487,
	489, 497, 507, 508, 509, 513, 514, 523, 519, 521,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 127,
	0, 0, 0, 47, 0, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 474, 2692, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2693, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 73, 0, 0, 0, 2742,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 127,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 79, 0, 0, 0, 0, 0,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 673,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 127,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	2745, 2746, 2747, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 819, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 844, 772, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	0, 0, 0, 0, 687, 0, 1613, 1614, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	1917, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	762, 210, 858, 840, 759, 758, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 862,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 0,
	793, 804, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 0, 0, 0, 0, 687,
	0, 1613, 1614, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 0,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 0,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 2145, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 844, 772, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	81, 0, 1043, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	762, 210, 858, 840, 759, 758, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 2146,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 0,
	793, 804, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 0, 0, 0, 0, 0, 2458,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 0,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 0,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 819, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 844, 772, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	0, 0, 0, 0, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 2081, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	762, 210, 858, 840, 759, 758, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 862,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 0,
	793, 804, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 0, 0, 0, 0, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 0, 0, 0, 0, 0, 2071,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 0,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 0,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 819, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 844, 772, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 1592, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	762, 210, 858, 840, 759, 758, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 862,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 0,
	793, 804, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 0, 0, 0, 0, 0, 1451,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 0,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 0,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 819, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 844, 772, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	762, 210, 858, 840, 759, 758, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 862,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 0,
	793, 804, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 0,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 0,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 819, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 1625, 1629, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	1628, 210, 858, 840, 759, 758, 1622, 0, 1623, 1624,
	220, 686, 130, 145, 1620, 1627, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 862,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 0,
	793, 804, 843, 819, 337, 764, 846, 722, 748, 860,
	752, 756, 799, 705, 777, 263, 744, 706, 0, 726,
	695, 736, 696, 723, 766, 180, 721, 821, 780, 845,
	219, 794, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 844, 772, 0, 853, 222, 0, 789, 854, 324,
	247, 0, 0, 768, 830, 775, 817, 763, 801, 714,
	788, 848, 745, 796, 849, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	792, 842, 739, 795, 798, 693, 791, 0, 700, 707,
	859, 837, 729, 730, 731, 0, 0, 0, 0, 0,
	0, 0, 767, 776, 811, 760, 357, 274, 291, 312,
	754, 282, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 786, 0, 0, 0, 708, 701, 0,
	0, 765, 0, 0, 0, 713, 692, 728, 813, 0,
	690, 248, 147, 818, 836, 762, 210, 858, 840, 759,
	758, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 810, 306, 741, 691, 822, 724, 737, 170,
	733, 298, 267, 356, 746, 783, 297, 223, 346, 806,
	841, 355, 750, 825, 365, 370, 732, 773, 711, 321,
	182, 178, 181, 0, 136, 743, 281, 175, 215, 761,
	800, 725, 167, 808, 787, 824, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 755, 747, 0, 0, 361, 757, 309,
	308, 751, 205, 816, 790, 697, 290, 803, 211, 135,
	334, 373, 153, 217, 339, 689, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 738,
	805, 815, 288, 311, 341, 155, 328, 734, 735, 740,
	812, 300, 823, 834, 847, 230, 185, 188, 199, 206,
	797, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 698, 0, 326, 359,
	375, 157, 720, 314, 340, 749, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 718, 719, 716, 0, 717,
	778, 779, 850, 851, 852, 814, 710, 0, 831, 832,
	0, 0, 0, 0, 0, 820, 838, 839, 802, 861,
	753, 715, 699, 702, 703, 704, 712, 769, 770, 782,
	785, 828, 827, 826, 829, 833, 856, 855, 857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 133, 143, 221, 862, 289, 191, 360, 694, 177,
	0, 771, 774, 784, 809, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 807, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 835, 0, 793, 804, 843, 819, 337,
	764, 846, 722, 748, 860, 752, 756, 799, 705, 777,
	263, 744, 706, 0, 726, 695, 736, 696, 723, 766,
	180, 721, 821, 780, 845, 219, 794, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 844, 772, 0, 853,
	222, 0, 789, 854, 324, 247, 0, 0, 768, 830,
	775, 817, 763, 801, 714, 788, 848, 745, 796, 849,
	0, 0, 0, 0, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 792, 842, 739, 795, 798,
	693, 791, 0, 700, 707, 859, 837, 729, 730, 731,
	0, 0, 0, 0, 0, 0, 0, 767, 776, 811,
	760, 357, 274, 291, 312, 754, 282, 742, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 786, 0,
	0, 0, 708, 701, 0, 0, 765, 0, 0, 0,
	713, 692, 728, 813, 0, 690, 248, 147, 818, 836,
	762, 210, 858, 840, 759, 758, 284, 0, 331, 198,
	220, 686, 130, 145, 682, 197, 259, 810, 306, 741,
	691, 822, 724, 737, 170, 733, 298, 267, 356, 746,
	783, 297, 223, 346, 806, 841, 355, 750, 825, 365,
	370, 732, 773, 711, 321, 182, 178, 181, 0, 136,
	743, 281, 175, 215, 761, 800, 725, 167, 808, 787,
	824, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 755, 747,
	0, 0, 361, 757, 309, 308, 751, 205, 816, 790,
	697, 290, 803, 211, 135, 334, 373, 153, 217, 339,
	689, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 738, 805, 815, 288, 311, 341,
	155, 328, 734, 735, 740, 812, 300, 823, 834, 847,
	230, 185, 188, 199, 206, 797, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 698, 0, 326, 359, 375, 157, 720, 314, 340,
	749, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	718, 719, 716, 0, 717, 778, 779, 850, 851, 852,
	814, 710, 0, 831, 832, 0, 0, 0, 0, 0,
	820, 838, 839, 802, 861, 753, 715, 699, 702, 703,
	704, 712, 769, 770, 782, 785, 828, 827, 826, 829,
	833, 856, 855, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 133, 143, 221, 862,
	289, 191, 360, 694, 177, 0, 771, 774, 784, 809,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 807, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 835, 337,
	793, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	180, 554, 0, 0, 0, 219, 0, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 0, 0, 0, 634,
	222, 0, 0, 534, 324, 247, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 0, 0, 1602, 0,
	81, 0, 0, 0, 555, 579, 578, 581, 582, 583,
	584, 0, 0, 538, 580, 585, 618, 619, 1603, 0,
	0, 552, 570, 0, 633, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 274, 291, 312, 0, 282, 498, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 646, 0,
	569, 0, 0, 564, 565, 566, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 147, 625, 0,
	0, 210, 0, 0, 0, 644, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 0, 306, 593,
	478, 0, 0, 0, 170, 0, 298, 267, 356, 595,
	0, 297, 223, 346, 0, 0, 355, 0, 525, 365,
	370, 491, 0, 485, 321, 182, 178, 181, 0, 136,
	499, 281, 175, 215, 0, 0, 0, 167, 0, 0,
	0, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 361, 504, 309, 308, 0, 205, 0, 512,
	479, 290, 516, 211, 135, 334, 373, 153, 217, 339,
	477, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 494, 518, 0, 288, 311, 341,
	155, 328, 492, 493, 495, 522, 300, 524, 530, 0,
	230, 185, 188, 199, 206, 0, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 480, 0, 326, 359, 375, 157, 0, 314, 340,
	502, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	635, 645, 641, 643, 642, 639, 640, 638, 637, 636,
	647, 626, 627, 628, 629, 630, 0, 0, 0, 632,
	0, 612, 613, 0, 0, 0, 488, 586, 587, 588,
	589, 590, 596, 597, 601, 602, 610, 609, 608, 611,
	614, 616, 615, 617, 591, 592, 594, 598, 599, 600,
	603, 604, 607, 605, 606, 631, 133, 143, 221, 0,
	289, 191, 360, 0, 177, 0, 0, 0, 0, 0,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 520, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 36, 337,
	515, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	180, 554, 0, 0, 0, 219, 0, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 0, 0, 0, 634,
	222, 0, 0, 534, 324, 247, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 555, 579, 578, 581, 582, 583,
	584, 0, 0, 538, 580, 585, 618, 619, 0, 0,
	0, 552, 570, 0, 633, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 274, 291, 312, 0, 282, 498, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 646, 0,
	569, 0, 0, 564, 565, 566, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 147, 625, 0,
	0, 210, 0, 0, 0, 644, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 0, 306, 593,
	478, 0, 0, 0, 170, 0, 298, 267, 356, 595,
	0, 297, 223, 346, 0, 0, 355, 0, 525, 365,
	370, 491, 0, 485, 321, 182, 178, 181, 0, 136,
	499, 281, 175, 215, 0, 0, 0, 167, 0, 0,
	0, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 361, 504, 309, 308, 0, 205, 0, 512,
	479, 290, 516, 211, 135, 334, 373, 153, 217, 339,
	477, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 494, 518, 0, 288, 311, 341,
	155, 328, 492, 493, 495, 522, 300, 524, 530, 0,
	230, 185, 188, 199, 206, 0, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 480, 0, 326, 359, 375, 157, 0, 314, 340,
	502, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	635, 645, 641, 643, 642, 639, 640, 638, 637, 636,
	647, 626, 627, 628, 629, 630, 0, 0, 0, 632,
	0, 612, 613, 0, 0, 0, 488, 586, 587, 588,
	589, 590, 596, 597, 601, 602, 610, 609, 608, 611,
	614, 616, 615, 617, 591, 592, 594, 598, 599, 600,
	603, 604, 607, 605, 606, 631, 133, 143, 221, 79,
	289, 191, 360, 0, 177, 0, 0, 0, 0, 0,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 520, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 337, 0,
	515, 517, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 180,
	554, 0, 0, 0, 219, 0, 0, 169, 227, 225,
	0, 0, 0, 270, 336, 0, 0, 0, 634, 222,
	0, 0, 534, 324, 247, 0, 0, 0, 0, 623,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 555, 579, 578, 581, 582, 583, 584,
	0, 0, 538, 580, 585, 618, 619, 0, 0, 0,
	552, 570, 0, 633, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 274, 291, 312, 0, 282, 498, 0, 0, 0,
	0, 567, 568, 548, 0, 0, 0, 646, 0, 569,
	0, 0, 564, 565, 566, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 147, 625, 0, 0,
	210, 0, 0, 0, 644, 284, 0, 331, 198, 220,
	152, 130, 145, 163, 197, 259, 0, 306, 593, 478,
	0, 0, 0, 170, 0, 298, 267, 356, 595, 0,
	297, 223, 346, 0, 0, 355, 0, 525, 365, 370,
	491, 0, 485, 321, 182, 178, 181, 0, 136, 499,
	281, 175, 215, 0, 0, 0, 167, 0, 0, 0,
	320, 343, 134, 245, 344, 369, 154, 338, 246, 252,
	164, 166, 165, 146, 315, 342, 159, 168, 325, 302,
	332, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 361, 504, 309, 308, 0, 205, 0, 512, 479,
	290, 516, 211, 135, 334, 373, 153, 217, 339, 477,
	192, 258, 172, 268, 269, 189, 132, 286, 239, 240,
	238, 241, 196, 494, 518, 0, 288, 311, 341, 155,
	328, 492, 493, 495, 522, 300, 524, 530, 0, 230,
	185, 188, 199, 206, 0, 295, 329, 362, 0, 148,
	137, 335, 354, 160, 310, 313, 371, 296, 140, 352,
	330, 243, 212, 213, 138, 0, 139, 293, 179, 195,
	173, 262, 0, 194, 283, 349, 350, 171, 374, 149,
	364, 142, 150, 363, 255, 0, 254, 366, 345, 353,
	244, 232, 0, 141, 351, 242, 231, 218, 187, 201,
	279, 226, 280, 202, 250, 249, 251, 228, 233, 0,
	480, 0, 326, 359, 375, 157, 0, 314, 340, 502,
	287, 158, 193, 186, 278, 253, 151, 204, 323, 216,
	224, 292, 372, 266, 299, 161, 358, 322, 183, 635,
	645, 641, 643, 642, 639, 640, 638, 637, 636, 647,
	626, 627, 628, 629, 630, 0, 0, 0, 632, 0,
	612, 613, 0, 0, 0, 488, 586, 587, 588, 589,
	590, 596, 597, 601, 602, 610, 609, 608, 611, 614,
	616, 615, 617, 591, 592, 594, 598, 599, 600, 603,
	604, 607, 605, 606, 631, 133, 143, 221, 0, 289,
	191, 360, 0, 177, 0, 0, 0, 0, 0, 131,
	144, 156, 162, 176, 184, 190, 200, 203, 207, 208,
	209, 214, 229, 234, 235, 236, 237, 256, 257, 260,
	261, 264, 265, 271, 272, 273, 275, 276, 277, 285,
	520, 294, 301, 303, 304, 305, 307, 316, 317, 318,
	319, 327, 333, 347, 348, 367, 368, 337, 0, 515,
	517, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 180, 554,
	0, 0, 0, 219, 0, 0, 169, 227, 225, 0,
	0, 0, 270, 336, 0, 0, 0, 634, 222, 0,
	0, 534, 324, 247, 0, 0, 0, 0, 623, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1043, 0, 555, 579, 578, 581, 582, 583, 584, 0,
	0, 538, 580, 585, 618, 619, 0, 0, 0, 552,
	570, 0, 633, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	274, 291, 312, 0, 282, 498, 0, 0, 0, 0,
	567, 568, 0, 0, 0, 0, 646, 0, 569, 0,
	0, 564, 565, 566, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 147, 625, 0, 0, 210,
	0, 0, 0, 644, 284, 0, 331, 198, 220, 152,
	130, 145, 163, 197, 259, 0, 306, 593, 478, 0,
	0, 0, 170, 0, 298, 267, 356, 595, 0, 297,
	223, 346, 0, 0, 355, 0, 525, 365, 370, 491,
	0, 485, 321, 182, 178, 181, 0, 136, 499, 281,
	175, 215, 0, 0, 0, 167, 0, 0, 0, 320,
	343, 134, 245, 344, 369, 154, 338, 246, 252, 164,
	166, 165, 146, 315, 342, 159, 168, 325, 302, 332,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	361, 504, 309, 308, 0, 205, 0, 512, 479, 290,
	516, 211, 135, 334, 373, 153, 217, 339, 477, 192,
	258, 172, 268, 269, 189, 132, 286, 239, 240, 238,
	241, 196, 494, 518, 0, 288, 311, 341, 155, 328,
	492, 493, 495, 522, 300, 524, 530, 0, 230, 185,
	188, 199, 206, 0, 295, 329, 362, 0, 148, 137,
	335, 354, 160, 310, 313, 371, 296, 140, 352, 330,
	243, 212, 213, 138, 0, 139, 293, 179, 195, 173,
	262, 0, 194, 283, 349, 350, 171, 374, 149, 364,
	142, 150, 363, 255, 0, 254, 366, 345, 353, 244,
	232, 0, 141, 351, 242, 231, 218, 187, 201, 279,
	226, 280, 202, 250, 249, 251, 228, 233, 0, 480,
	0, 326, 359, 375, 157, 0, 314, 340, 502, 287,
	158, 193, 186, 278, 253, 151, 204, 323, 216, 224,
	292, 372, 266, 299, 161, 358, 322, 183, 635, 645,
	641, 643, 642, 639, 640, 638, 637, 636, 647, 626,
	627, 628, 629, 630, 0, 0, 0, 632, 0, 612,
	613, 0, 0, 0, 488, 586, 587, 588, 589, 590,
	596, 597, 601, 602, 610, 609, 608, 611, 614, 616,
	615, 617, 591, 592, 594, 598, 599, 600, 603, 604,
	607, 605, 606, 631, 133, 143, 221, 0, 289, 191,
	360, 0, 177, 0, 0, 0, 0, 0, 131, 144,
	156, 162, 176, 184, 190, 200, 203, 207, 208, 209,
	214, 229, 234, 235, 236, 237, 256, 257, 260, 261,
	264, 265, 271, 272, 273, 275, 276, 277, 285, 520,
	294, 301, 303, 304, 305, 307, 316, 317, 318, 319,
	327, 333, 347, 348, 367, 368, 337, 0, 515, 517,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 180, 554, 0,
	0, 0, 219, 0, 0, 169, 227, 225, 0, 0,
	0, 270, 336, 0, 0, 0, 634, 222, 0, 0,
	534, 324, 247, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 555, 579, 578, 581, 582, 583, 584, 0, 0,
	538, 580, 585, 618, 619, 0, 0, 0, 552, 570,
	0, 633, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 274,
	291, 312, 0, 282, 498, 0, 0, 0, 0, 567,
	568, 1489, 0, 0, 0, 646, 0, 569, 0, 0,
	564, 565, 566, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 147, 625, 0, 0, 210, 0,
	0, 0, 644, 284, 0, 331, 198, 220, 152, 130,
	145, 163, 197, 259, 0, 306, 593, 478, 0, 0,
	0, 170, 0, 298, 267, 356, 595, 0, 297, 223,
	346, 0, 0, 355, 0, 525, 365, 370, 491, 0,
	485, 321, 182, 178, 181, 0, 136, 499, 281, 175,
	215, 0, 0, 0, 167, 0, 0, 0, 320, 343,
	134, 245, 344, 369, 154, 338, 246, 252, 164, 166,
	165, 146, 315, 342, 159, 168, 325, 302, 332, 174,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 361,
	504, 309, 308, 0, 205, 0, 512, 479, 290, 516,
	211, 135, 334, 373, 153, 217, 339, 477, 192, 258,
	172, 268, 269, 189, 132, 286, 239, 240, 238, 241,
	196, 494, 518, 0, 288, 311, 341, 155, 328, 492,
	493, 495, 522, 300, 524, 530, 0, 230, 185, 188,
	199, 206, 0, 295, 329, 362, 0, 148, 137, 335,
	354, 160, 310, 313, 371, 296, 140, 352, 330, 243,
	212, 213, 138, 0, 139, 293, 179, 195, 173, 262,
	0, 194, 283, 349, 350, 171, 374, 149, 364, 142,
	150, 363, 255, 0, 254, 366, 345, 353, 244, 232,
	0, 141, 351, 242, 231, 218, 187, 201, 279, 226,
	280, 202, 250, 249, 251, 228, 233, 0, 480, 0,
	326, 359, 375, 157, 0, 314, 340, 502, 287, 158,
	193, 186, 278, 253, 151, 204, 323, 216, 224, 292,
	372, 266, 299, 161, 358, 322, 183, 635, 645, 641,
	643, 642, 639, 640, 638, 637, 636, 647, 626, 627,
	628, 629, 630, 0, 0, 0, 632, 0, 612, 613,
	0, 0, 0, 488, 586, 587, 588, 589, 590, 596,
	597, 601, 602, 610, 609, 608, 611, 614, 616, 615,
	617, 591, 592, 594, 598, 599, 600, 603, 604, 607,
	605, 606, 631, 133, 143, 221, 0, 289, 191, 360,
	0, 177, 0, 0, 0, 0, 0, 131, 144, 156,
	162, 176, 184, 190, 200, 203, 207, 208, 209, 214,
	229, 234, 235, 236, 237, 256, 257, 260, 261, 264,
	265, 271, 272, 273, 275, 276, 277, 285, 520, 294,
	301, 303, 304, 305, 307, 316, 317, 318, 319, 327,
	333, 347, 348, 367, 368, 337, 0, 515, 517, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 180, 554, 0, 0,
	0, 219, 0, 0, 169, 227, 225, 0, 0, 0,
	270, 336, 0, 0, 0, 634, 222, 0, 0, 534,
	324, 247, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	555, 579, 1536, 581, 582, 583, 584, 0, 0, 538,
	580, 585, 618, 619, 0, 0, 0, 552, 570, 0,
	633, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 274, 291,
	312, 0, 282, 498, 0, 0, 0, 0, 567, 568,
	1489, 0, 0, 0, 646, 0, 569, 0, 0, 564,
	565, 566, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 147, 625, 0, 0, 210, 0, 0,
	0, 644, 284, 0, 331, 198, 220, 152, 130, 145,
	163, 197, 259, 0, 306, 593, 478, 0, 0, 0,
	170, 0, 298, 267, 356, 595, 0, 297, 223, 346,
	0, 0, 355, 0, 525, 365, 370, 491, 0, 485,
	321, 182, 178, 181, 0, 136, 499, 281, 175, 215,
	0, 0, 0, 167, 0, 0, 0, 320, 343, 134,
	245, 344, 369, 154, 338, 246, 252, 164, 166, 165,
	146, 315, 342, 159, 168, 325, 302, 332, 174, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 361, 504,
	309, 308, 0, 205, 0, 512, 479, 290, 516, 211,
	135, 334, 373, 153, 217, 339, 477, 192, 258, 172,
	268, 269, 189, 132, 286, 239, 240, 238, 241, 196,
	494, 518, 0, 288, 311, 341, 155, 328, 492, 493,
	495, 522, 300, 524, 530, 0, 230, 185, 188, 199,
	206, 0, 295, 329, 362, 0, 148, 137, 335, 354,
	160, 310, 313, 371, 296, 140, 352, 330, 243, 212,
	213, 138, 0, 139, 293, 179, 195, 173, 262, 0,
	194, 283, 349, 350, 171, 374, 149, 364, 142, 150,
	363, 255, 0, 254, 366, 345, 353, 244, 232, 0,
	141, 351, 242, 231, 218, 187, 201, 279, 226, 280,
	202, 250, 249, 251, 228, 233, 0, 480, 0, 326,
	359, 375, 157, 0, 314, 340, 502, 287, 158, 193,
	186, 278, 253, 151, 204, 323, 216, 224, 292, 372,
	266, 299, 161, 358, 322, 183, 635, 645, 641, 643,
	642, 639, 640, 638, 637, 636, 647, 626, 627, 628,
	629, 630, 0, 0, 0, 632, 0, 612, 613, 0,
	0, 0, 488, 586, 587, 588, 589, 590, 596, 597,
	601, 602, 610, 609, 608, 611, 614, 616, 615, 617,
	591, 592, 594, 598, 599, 600, 603, 604, 607, 605,
	606, 631, 133, 143, 221, 0, 289, 191, 360, 0,
	177, 0, 0, 0, 0, 0, 131, 144, 156, 162,
	176, 184, 190, 200, 203, 207, 208, 209, 214, 229,
	234, 235, 236, 237, 256, 257, 260, 261, 264, 265,
	271, 272, 273, 275, 276, 277, 285, 520, 294, 301,
	303, 304, 305, 307, 316, 317, 318, 319, 327, 333,
	347, 348, 367, 368, 337, 0, 515, 517, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 180, 554, 0, 0, 0,
	219, 0, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 0, 0, 0, 634, 222, 0, 0, 534, 324,
	247, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 555,
	579, 1533, 581, 582, 583, 584, 0, 0, 538, 580,
	585, 618, 619, 0, 0, 0, 552, 570, 0, 633,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 274, 291, 312,
	0, 282, 498, 0, 0, 0, 0, 567, 568, 1489,
	0, 0, 0, 646, 0, 569, 0, 0, 564, 565,
	566, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 147, 625, 0, 0, 210, 0, 0, 0,
	644, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 0, 306, 593, 478, 0, 0, 0, 170,
	0, 298, 267, 356, 595, 0, 297, 223, 346, 0,
	0, 355, 0, 525, 365, 370, 491, 0, 485, 321,
	182, 178, 181, 0, 136, 499, 281, 175, 215, 0,
	0, 0, 167, 0, 0, 0, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 361, 504, 309,
	308, 0, 205, 0, 512, 479, 290, 516, 211, 135,
	334, 373, 153, 217, 339, 477, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 494,
	518, 0, 288, 311, 341, 155, 328, 492, 493, 495,
	522, 300, 524, 530, 0, 230, 185, 188, 199, 206,
	0, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 480, 0, 326, 359,
	375, 157, 0, 314, 340, 502, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 635, 645, 641, 643, 642,
	639, 640, 638, 637, 636, 647, 626, 627, 628, 629,
	630, 0, 0, 0, 632, 0, 612, 613, 0, 0,
	0, 488, 586, 587, 588, 589, 590, 596, 597, 601,
	602, 610, 609, 608, 611, 614, 616, 615, 617, 591,
	592, 594, 598, 599, 600, 603, 604, 607, 605, 606,
	631, 133, 143, 221, 0, 289, 191, 360, 0, 177,
	0, 0, 0, 0, 0, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 520, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 337, 0, 515, 517, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 180, 554, 0, 0, 0, 219,
	0, 0, 169, 227, 225, 0, 0, 0, 270, 336,
	0, 0, 0, 634, 222, 0, 0, 534, 324, 247,
	0, 0, 0, 0, 623, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 1370, 0, 555, 579,
	578, 581, 582, 583, 584, 0, 0, 538, 580, 585,
	618, 619, 0, 0, 0, 552, 570, 0, 633, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 274, 291, 312, 0,
	282, 498, 0, 0, 0, 0, 567, 568, 0, 0,
	0, 0, 646, 0, 569, 0, 0, 564, 565, 566,
	571, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 147, 625, 0, 0, 210, 0, 0, 0, 644,
	284, 0, 331, 198, 220, 152, 130, 145, 163, 197,
	259, 0, 306, 593, 478, 0, 0, 0, 170, 0,
	298, 267, 356, 595, 0, 297, 223, 346, 0, 0,
	355, 0, 525, 365, 370, 491, 0, 485, 321, 182,
	178, 181, 0, 136, 499, 281, 175, 215, 0, 0,
	0, 167, 0, 0, 0, 320, 343, 134, 245, 344,
	369, 154, 338, 246, 252, 164, 166, 165, 146, 315,
	342, 159, 168, 325, 302, 332, 174, 0, 0, 0,
	0, 0, 503, 501, 0, 0, 361, 504, 309, 308,
	0, 205, 0, 512, 479, 290, 516, 211, 135, 334,
	373, 153, 217, 339, 477, 192, 258, 172, 268, 269,
	189, 132, 286, 239, 240, 238, 241, 196, 494, 518,
	0, 288, 311, 341, 155, 328, 492, 493, 495, 522,
	300, 524, 530, 0, 230, 185, 188, 199, 206, 0,
	295, 329, 362, 0, 148, 137, 335, 354, 160, 310,
	313, 371, 296, 140, 352, 330, 243, 212, 213, 138,
	0, 139, 293, 179, 195, 173, 262, 0, 194, 283,
	349, 350, 171, 374, 149, 364, 142, 150, 363, 255,
	0, 254, 366, 345, 353, 244, 232, 0, 141, 351,
	242, 231, 218, 187, 201, 279, 226, 280, 202, 250,
	249, 251, 228, 233, 0, 480, 0, 326, 359, 375,
	157, 0, 314, 340, 502, 287, 158, 193, 186, 278,
	253, 151, 204, 323, 216, 224, 292, 372, 266, 299,
	161, 358, 322, 183, 635, 645, 641, 643, 642, 639,
	640, 638, 637, 636, 647, 626, 627, 628, 629, 630,
	0, 0, 0, 632, 0, 612, 613, 0, 0, 0,
	488, 586, 587, 588, 589, 590, 596, 597, 601, 602,
	610, 609, 608, 611, 614, 616, 615, 617, 591, 592,
	594, 598, 599, 600, 603, 604, 607, 605, 606, 631,
	133, 143, 221, 0, 289, 191, 360, 0, 177, 0,
	0, 0, 0, 0, 131, 144, 156, 162, 176, 184,
	190, 200, 203, 207, 208, 209, 214, 229, 234, 235,
	236, 237, 256, 257, 260, 261, 264, 265, 271, 272,
	273, 275, 276, 277, 285, 520, 294, 301, 303, 304,
	305, 307, 316, 317, 318, 319, 327, 333, 347, 348,
	367, 368, 337, 0, 515, 517, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 180, 554, 0, 0, 0, 219, 0,
	0, 169, 227, 225, 0, 0, 0, 270, 336, 0,
	0, 0, 634, 222, 0, 0, 534, 324, 247, 0,
	0, 0, 0, 623, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 555, 579, 578,
	581, 582, 583, 584, 0, 0, 538, 580, 585, 618,
	619, 0, 0, 0, 552, 570, 0, 633, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 274, 291, 312, 0, 282,
	498, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 646, 0, 569, 0, 0, 564, 565, 566, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	147, 625, 0, 0, 210, 0, 0, 0, 644, 284,
	0, 331, 198, 220, 152, 130, 145, 163, 197, 259,
	0, 306, 593, 478, 0, 0, 0, 170, 0, 298,
	267, 356, 595, 0, 297, 223, 346, 0, 0, 355,
	0, 525, 365, 370, 491, 0, 485, 321, 182, 178,
	181, 0, 136, 499, 281, 175, 215, 0, 0, 0,
	167, 0, 0, 0, 320, 343, 134, 245, 344, 369,
	154, 338, 246, 252, 164, 166, 165, 146, 315, 342,
	159, 168, 325, 302, 332, 174, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 361, 504, 309, 308, 0,
	205, 0, 512, 479, 290, 516, 211, 135, 334, 373,
	153, 217, 339, 477, 192, 258, 172, 268, 269, 189,
	132, 286, 239, 240, 238, 241, 196, 494, 518, 0,
	288, 311, 341, 155, 328, 492, 493, 495, 522, 300,
	524, 530, 0, 230, 185, 188, 199, 206, 0, 295,
	329, 362, 0, 148, 137, 335, 354, 160, 310, 313,
	371, 296, 140, 352, 330, 243, 212, 213, 138, 0,
	139, 293, 179, 195, 173, 262, 0, 194, 283, 349,
	350, 171, 374, 149, 364, 142, 150, 363, 255, 0,
	254, 366, 345, 353, 244, 232, 0, 141, 351, 242,
	231, 218, 187, 201, 279, 226, 280, 202, 250, 249,
	251, 228, 233, 0, 480, 0, 326, 359, 375, 157,
	0, 314, 340, 502, 287, 158, 193, 186, 278, 253,
	151, 204, 323, 216, 224, 292, 372, 266, 299, 161,
	358, 322, 183, 635, 645, 641, 643, 642, 639, 640,
	638, 637, 636, 647, 626, 627, 628, 629, 630, 0,
	0, 0, 632, 0, 612, 613, 0, 0, 0, 488,
	586, 587, 588, 589, 590, 596, 597, 601, 602, 610,
	609, 608, 611, 614, 616, 615, 617, 591, 592, 594,
	598, 599, 600, 603, 604, 607, 605, 606, 631, 133,
	143, 221, 0, 289, 191, 360, 0, 177, 0, 0,
	0, 0, 0, 131, 144, 156, 162, 176, 184, 190,
	200, 203, 207, 208, 209, 214, 229, 234, 235, 236,
	237, 256, 257, 260, 261, 264, 265, 271, 272, 273,
	275, 276, 277, 285, 520, 294, 301, 303, 304, 305,
	307, 316, 317, 318, 319, 327, 333, 347, 348, 367,
	368, 337, 0, 515, 517, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 219, 0, 0,
	169, 227, 225, 0, 0, 0, 270, 336, 0, 0,
	0, 634, 222, 0, 0, 534, 324, 247, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 555, 579, 578, 581,
	582, 583, 584, 0, 0, 538, 580, 585, 618, 619,
	0, 0, 0, 0, 570, 0, 633, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 274, 291, 312, 0, 282, 498,
	0, 0, 0, 0, 567, 568, 0, 0, 0, 0,
	646, 0, 569, 0, 0, 564, 565, 566, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 147,
	625, 0, 0, 210, 0, 0, 0, 644, 284, 0,
	331, 198, 220, 152, 130, 145, 163, 197, 259, 0,
	306, 593, 478, 0, 0, 0, 170, 0, 298, 267,
	356, 595, 0, 297, 223, 346, 0, 0, 355, 0,
	525, 365, 370, 491, 0, 485, 321, 182, 178, 181,
	0, 136, 499, 281, 175, 215, 0, 0, 0, 167,
	0, 0, 0, 320, 343, 134, 245, 344, 369, 154,
	338, 246, 252, 164, 166, 165, 146, 315, 342, 159,
	168, 325, 302, 332, 174, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 361, 504, 309, 308, 0, 205,
	0, 512, 479, 290, 516, 211, 135, 334, 373, 153,
	217, 339, 477, 192, 258, 172, 268, 269, 189, 132,
	286, 239, 240, 238, 241, 196, 494, 518, 0, 288,
	311, 341, 155, 328, 492, 493, 495, 522, 300, 524,
	530, 0, 230, 185, 188, 199, 206, 0, 295, 329,
	362, 0, 148, 137, 335, 354, 160, 310, 313, 371,
	296, 140, 352, 330, 243, 212, 213, 138, 0, 139,
	293, 179, 195, 173, 262, 0, 194, 283, 349, 350,
	171, 374, 149, 364, 142, 150, 363, 255, 0, 254,
	366, 345, 353, 244, 232, 0, 141, 351, 242, 231,
	218, 187, 201, 279, 226, 280, 202, 250, 249, 251,
	228, 233, 0, 480, 0, 326, 359, 375, 157, 0,
	314, 340, 502, 287, 158, 193, 186, 278, 253, 151,
	204, 323, 216, 224, 292, 372, 266, 299, 161, 358,
	322, 183, 635, 645, 641, 643, 642, 639, 640, 638,
	637, 636, 647, 626, 627, 628, 629, 630, 1539, 1540,
	1541, 632, 0, 612, 613, 0, 0, 0, 488, 586,
	587, 588, 589, 590, 596, 597, 601, 602, 610, 609,
	608, 611, 614, 616, 615, 617, 591, 592, 594, 598,
	599, 600, 603, 604, 607, 605, 606, 631, 133, 143,
	221, 0, 289, 191, 360, 0, 177, 0, 0, 0,
	0, 0, 131, 144, 156, 162, 176, 184, 190, 200,
	203, 207, 208, 209, 214, 229, 234, 235, 236, 237,
	256, 257, 260, 261, 264, 265, 271, 272, 273, 275,
	276, 277, 285, 520, 294, 301, 303, 304, 305, 307,
	316, 317, 318, 319, 327, 333, 347, 348, 367, 368,
	337, 0, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 219, 0, 0, 169,
	227, 225, 0, 0, 0, 270, 336, 0, 0, 0,
	634, 222, 0, 0, 534, 324, 247, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 555, 579, 578, 581, 582,
	583, 584, 0, 0, 538, 580, 585, 618, 619, 0,
	0, 0, 0, 570, 0, 633, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 274, 291, 312, 0, 282, 498, 0,
	0, 0, 0, 567, 568, 0, 0, 0, 0, 646,
	0, 569, 0, 0, 564, 565, 566, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 147, 625,
	0, 0, 210, 0, 0, 0, 644, 284, 0, 331,
	198, 220, 152, 130, 145, 163, 197, 259, 0, 306,
	593, 478, 0, 0, 0, 170, 0, 298, 267, 356,
	595, 2873, 297, 223, 346, 0, 0, 355, 0, 525,
	365, 370, 491, 0, 485, 321, 182, 178, 181, 0,
	136, 499, 281, 175, 215, 0, 0, 0, 167, 0,
	0, 0, 320, 343, 134, 245, 344, 369, 154, 338,
	246, 252, 164, 166, 165, 146, 315, 342, 159, 168,
	325, 302, 332, 174, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 361, 504, 309, 308, 0, 205, 0,
	512, 479, 290, 516, 211, 135, 334, 373, 153, 217,
	339, 477, 192, 258, 172, 268, 269, 189, 132, 286,
	239, 240, 238, 241, 196, 494, 518, 0, 288, 311,
	341, 155, 328, 492, 493, 495, 522, 300, 524, 530,
	0, 230, 185, 188, 199, 206, 0, 295, 329, 362,
	0, 148, 137, 335, 354, 160, 310, 313, 371, 296,
	140, 352, 330, 243, 212, 213, 138, 0, 139, 293,
	179, 195, 173, 262, 0, 194, 283, 349, 350, 171,
	374, 149, 364, 142, 150, 363, 255, 0, 254, 366,
	345, 353, 244, 232, 0, 141, 351, 242, 231, 218,
	187, 201, 279, 226, 280, 202, 250, 249, 251, 228,
	233, 0, 480, 0, 326, 359, 375, 157, 0, 314,
	340, 502, 287, 158, 193, 186, 278, 253, 151, 204,
	323, 216, 224, 292, 372, 266, 299, 161, 358, 322,
	183, 635, 645, 641, 643, 642, 639, 640, 638, 637,
	636, 647, 626, 627, 628, 629, 630, 0, 0, 0,
	632, 0, 612, 613, 0, 0, 0, 488, 586, 587,
	588, 589, 590, 596, 597, 601, 602, 610, 609, 608,
	611, 614, 616, 615, 617, 591, 592, 594, 598, 599,
	600, 603, 604, 607, 605, 606, 631, 133, 143, 221,
	0, 289, 191, 360, 0, 177, 0, 0, 0, 0,
	0, 131, 144, 156, 162, 176, 184, 190, 200, 203,
	207, 208, 209, 214, 229, 234, 235, 236, 237, 256,
	257, 260, 261, 264, 265, 271, 272, 273, 275, 276,
	277, 285, 520, 294, 301, 303, 304, 305, 307, 316,
	317, 318, 319, 327, 333, 347, 348, 367, 368, 337,
	0, 515, 517, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 219, 0, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 0, 0, 0, 634,
	222, 0, 0, 534, 324, 247, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1043, 0, 555, 579, 578, 581, 582, 583,
	584, 0, 0, 538, 580, 585, 618, 619, 0, 0,
	0, 0, 570, 0, 633, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 274, 291, 312, 0, 282, 498, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 646, 0,
	569, 0, 0, 564, 565, 566, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 147, 625, 0,
	0, 210, 0, 0, 0, 644, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 0, 306, 593,
	478, 0, 0, 0, 170, 0, 298, 267, 356, 595,
	0, 297, 223, 346, 0, 0, 355, 0, 525, 365,
	370, 491, 0, 485, 321, 182, 178, 181, 0, 136,
	499, 281, 175, 215, 0, 0, 0, 167, 0, 0,
	0, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 361, 504, 309, 308, 0, 205, 0, 512,
	479, 290, 516, 211, 135, 334, 373, 153, 217, 339,
	477, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 494, 518, 0, 288, 311, 341,
	155, 328, 492, 493, 495, 522, 300, 524, 530, 0,
	230, 185, 188, 199, 206, 0, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 480, 0, 326, 359, 375, 157, 0, 314, 340,
	502, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	635, 645, 641, 643, 642, 639, 640, 638, 637, 636,
	647, 626, 627, 628, 629, 630, 0, 0, 0, 632,
	0, 612, 613, 0, 0, 0, 488, 586, 587, 588,
	589, 590, 596, 597, 601, 602, 610, 609, 608, 611,
	614, 616, 615, 617, 591, 592, 594, 598, 599, 600,
	603, 604, 607, 605, 606, 631, 133, 143, 221, 0,
	289, 191, 360, 0, 177, 0, 0, 0, 0, 0,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 520, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 337, 0,
	515, 517, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 219, 0, 0, 169, 227, 225,
	0, 0, 0, 270, 336, 0, 0, 0, 634, 222,
	0, 0, 534, 324, 247, 0, 0, 0, 0, 623,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 555, 579, 578, 581, 582, 583, 584,
	0, 0, 538, 580, 585, 618, 619, 0, 0, 0,
	0, 570, 0, 633, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 274, 291, 312, 0, 282, 498, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 646, 0, 569,
	0, 0, 564, 565, 566, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 147, 625, 0, 0,
	210, 0, 0, 0, 644, 284, 0, 331, 198, 220,
	152, 130, 145, 163, 197, 259, 0, 306, 593, 478,
	0, 0, 0, 170, 0, 298, 267, 356, 595, 0,
	297, 223, 346, 0, 0, 355, 0, 525, 365, 370,
	491, 0, 485, 321, 182, 178, 181, 0, 136, 499,
	281, 175, 215, 0, 0, 0, 167, 0, 0, 0,
	320, 343, 134, 245, 344, 369, 154, 338, 246, 252,
	164, 166, 165, 146, 315, 342, 159, 168, 325, 302,
	332, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 361, 504, 309, 308, 0, 205, 0, 512, 479,
	290, 516, 211, 135, 334, 373, 153, 217, 339, 477,
	192, 258, 172, 268, 269, 189, 132, 286, 239, 240,
	238, 241, 196, 494, 518, 0, 288, 311, 341, 155,
	328, 492, 493, 495, 522, 300, 524, 530, 0, 230,
	185, 188, 199, 206, 0, 295, 329, 362, 0, 148,
	137, 335, 354, 160, 310, 313, 371, 296, 140, 352,
	330, 243, 212, 213, 138, 0, 139, 293, 179, 195,
	173, 262, 0, 194, 283, 349, 350, 171, 374, 149,
	364, 142, 150, 363, 255, 0, 254, 366, 345, 353,
	244, 232, 0, 141, 351, 242, 231, 218, 187, 201,
	279, 226, 280, 202, 250, 249, 251, 228, 233, 0,
	480, 0, 326, 359, 375, 157, 0, 314, 340, 502,
	287, 158, 193, 186, 278, 253, 151, 204, 323, 216,
	224, 292, 372, 266, 299, 161, 358, 322, 183, 635,
	645, 641, 643, 642, 639, 640, 638, 637, 636, 647,
	626, 627, 628, 629, 630, 0, 0, 0, 632, 0,
	612, 613, 0, 0, 0, 488, 586, 587, 588, 589,
	590, 596, 597, 601, 602, 610, 609, 608, 611, 614,
	616, 615, 617, 591, 592, 594, 598, 599, 600, 603,
	604, 607, 605, 606, 631, 133, 143, 221, 0, 289,
	191, 360, 0, 177, 0, 0, 0, 0, 0, 131,
	144, 156, 162, 176, 184, 190, 200, 203, 207, 208,
	209, 214, 229, 234, 235, 236, 237, 256, 257, 260,
	261, 264, 265, 271, 272, 273, 275, 276, 277, 285,
	520, 294, 301, 303, 304, 305, 307, 316, 317, 318,
	319, 327, 333, 347, 348, 367, 368, 337, 0, 515,
	517, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 1579, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 219, 0, 0, 169, 227, 225, 0,
	0, 0, 270, 336, 0, 0, 0, 0, 222, 0,
	0, 534, 324, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1581, 1583, 0, 0, 0, 0,
	0, 0, 128, 0, 476, 0, 0, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	274, 291, 312, 0, 282, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 147, 0, 0, 0, 210,
	0, 0, 1582, 0, 284, 0, 331, 198, 220, 152,
	130, 145, 163, 197, 259, 0, 306, 496, 478, 0,
	0, 0, 170, 0, 298, 267, 356, 500, 0, 297,
	223, 346, 0, 0, 355, 0, 525, 365, 370, 491,
	0, 485, 321, 182, 178, 181, 0, 136, 499, 281,
	175, 215, 0, 0, 0, 167, 0, 0, 0, 320,
	343, 134, 245, 344, 369, 154, 338, 246, 252, 164,
	166, 165, 146, 315, 342, 159, 168, 325, 302, 332,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	361, 504, 309, 308, 0, 205, 0, 512, 479, 290,
	516, 211, 135, 334, 373, 153, 217, 339, 477, 192,
	258, 172, 268, 269, 189, 132, 286, 239, 240, 238,
	241, 196, 494, 518, 0, 288, 311, 341, 155, 328,
	492, 493, 495, 522, 300, 524, 530, 0, 230, 185,
	188, 199, 206, 0, 295, 329, 362, 0, 148, 137,
	335, 354, 160, 310, 313, 371, 296, 140, 352, 330,
	243, 212, 213, 138, 0, 139, 293, 179, 195, 173,
	262, 0, 194, 283, 349, 350, 171, 374, 149, 364,
	142, 150, 363, 255, 0, 254, 366, 345, 353, 244,
	232, 0, 141, 351, 242, 231, 218, 187, 201, 279,
	226, 280, 202, 250, 249, 251, 228, 233, 0, 480,
	0, 326, 359, 375, 157, 0, 314, 340, 502, 287,
	158, 193, 186, 278, 253, 151, 204, 323, 216, 224,
	292, 372, 266, 299, 161, 358, 322, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 488, 481, 482, 483, 484, 486,
	505, 506, 510, 511, 528, 527, 526, 529, 533, 536,
	535, 537, 487, 489, 497, 507, 508, 509, 513, 514,
	523, 519, 521, 0, 133, 143, 221, 0, 289, 191,
	360, 0, 177, 0, 0, 0, 0, 0, 131, 144,
	156, 162, 176, 184, 190, 200, 203, 207, 208, 209,
	214, 229, 234, 235, 236, 237, 256, 257, 260, 261,
	264, 265, 271, 272, 273, 275, 276, 277, 285, 520,
	294, 301, 303, 304, 305, 307, 316, 317, 318, 319,
	327, 333, 347, 348, 367, 368, 337, 0, 515, 517,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 1579, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 219, 0, 0, 169, 227, 225, 0, 0,
	0, 270, 336, 0, 0, 0, 0, 222, 0, 0,
	534, 324, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1581, 1583, 0, 0, 0, 0, 0,
	0, 128, 0, 476, 0, 0, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 1577,
	291, 312, 0, 282, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 147, 0, 0, 0, 210, 0,
	0, 1582, 0, 284, 0, 331, 198, 220, 152, 130,
	145, 163, 197, 259, 0, 306, 496, 478, 0, 0,
	0, 170, 0, 298, 267, 356, 500, 0, 297, 223,
	346, 0, 0, 355, 0, 525, 365, 370, 491, 0,
	485, 321, 182, 178, 181, 0, 136, 499, 281, 175,
	215, 0, 0, 0, 167, 0, 0, 0, 320, 343,
	134, 245, 344, 369, 154, 338, 246, 252, 164, 166,
	165, 146, 315, 342, 159, 168, 325, 302, 332, 174,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 361,
	504, 309, 308, 0, 205, 0, 512, 479, 290, 516,
	211, 135, 334, 373, 153, 217, 339, 477, 192, 258,
	172, 268, 269, 189, 132, 286, 239, 240, 238, 241,
	196, 494, 518, 0, 288, 311, 341, 155, 328, 492,
	493, 495, 522, 300, 524, 530, 0, 230, 185, 188,
	199, 206, 0, 295, 329, 362, 0, 148, 137, 335,
	354, 160, 310, 313, 371, 296, 140, 352, 330, 243,
	212, 213, 138, 0, 139, 293, 179, 195, 173, 262,
	0, 194, 283, 349, 350, 171, 374, 149, 364, 142,
	150, 363, 255, 0, 254, 366, 345, 353, 244, 232,
	0, 141, 351, 242, 231, 218, 187, 201, 279, 226,
	280, 202, 250, 249, 251, 228, 233, 0, 480, 0,
	326, 359, 375, 157, 0, 314, 340, 502, 287, 158,
	193, 186, 278, 253, 151, 204, 323, 216, 224, 292,
	372, 266, 299, 161, 358, 322, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 488, 481, 482, 483, 484, 486, 505,
	506, 510, 511, 528, 527, 526, 529, 533, 536, 535,
	537, 487, 489, 497, 507, 508, 509, 513, 514, 523,
	519, 521, 0, 133, 143, 221, 0, 289, 191, 360,
	0, 177, 0, 0, 0, 0, 0, 131, 144, 156,
	162, 176, 184, 190, 200, 203, 207, 208, 209, 214,
	229, 234, 235, 236, 237, 256, 257, 260, 261, 264,
	265, 271, 272, 273, 275, 276, 277, 285, 520, 294,
	301, 303, 304, 305, 307, 316, 317, 318, 319, 327,
	333, 347, 348, 367, 368, 337, 0, 515, 517, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 1065, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 219, 0, 0, 169, 227, 225, 0, 0, 0,
	270, 336, 0, 0, 0, 0, 222, 0, 0, 534,
	324, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1066, 0, 1069, 0, 0, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 1062, 1061, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 1063, 0, 0, 0, 357, 274, 291,
	312, 0, 282, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 147, 0, 0, 0, 210, 0, 0,
	0, 0, 284, 0, 331, 198, 220, 152, 130, 145,
	163, 197, 259, 0, 306, 496, 478, 0, 0, 0,
	170, 0, 298, 267, 356, 500, 0, 297, 223, 346,
	0, 0, 355, 0, 525, 365, 370, 491, 0, 485,
	321, 182, 178, 181, 0, 136, 499, 281, 175, 215,
	0, 0, 0, 167, 0, 0, 0, 320, 343, 134,
	245, 344, 369, 154, 338, 246, 252, 164, 166, 165,
	146, 315, 342, 159, 168, 325, 302, 332, 174, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 361, 504,
	309, 308, 0, 205, 0, 512, 479, 290, 516, 211,
	135, 334, 373, 153, 217, 339, 477, 192, 258, 172,
	268, 269, 189, 132, 286, 239, 240, 238, 241, 196,
	494, 518, 0, 288, 311, 341, 155, 328, 492, 493,
	495, 522, 300, 524, 530, 0, 230, 185, 188, 199,
	206, 0, 295, 329, 362, 0, 148, 137, 335, 354,
	160, 310, 313, 371, 296, 140, 352, 330, 243, 212,
	213, 138, 0, 139, 293, 179, 195, 173, 262, 0,
	194, 283, 349, 350, 171, 374, 149, 364, 142, 150,
	363, 255, 0, 254, 366, 345, 353, 244, 232, 0,
	141, 351, 242, 231, 218, 187, 201, 279, 226, 280,
	202, 250, 249, 251, 228, 233, 0, 480, 0, 326,
	359, 375, 157, 0, 314, 340, 502, 287, 158, 193,
	186, 278, 253, 151, 204, 323, 216, 224, 292, 372,
	266, 299, 161, 358, 322, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 0,
	0, 0, 488, 481, 482, 483, 484, 486, 505, 506,
	510, 511, 528, 527, 526, 529, 533, 536, 535, 537,
	487, 489, 497, 507, 508, 509, 513, 514, 523, 519,
	521, 0, 133, 143, 221, 0, 289, 191, 360, 0,
	177, 0, 0, 0, 0, 0, 131, 144, 156, 162,
	176, 184, 190, 200, 203, 207, 208, 209, 214, 229,
	234, 235, 236, 237, 256, 257, 260, 261, 264, 265,
	271, 272, 273, 275, 276, 277, 285, 520, 294, 301,
	303, 304, 305, 307, 316, 317, 318, 319, 327, 333,
	347, 348, 367, 368, 337, 0, 515, 517, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	219, 0, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 0, 0, 0, 0, 222, 0, 0, 534, 324,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 476, 0, 0, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 274, 291, 312,
	0, 282, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 147, 0, 0, 0, 210, 0, 0, 0,
	0, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 0, 306, 496, 478, 0, 0, 0, 170,
	0, 298, 267, 356, 500, 0, 297, 223, 346, 0,
	0, 355, 0, 525, 365, 370, 491, 0, 485, 321,
	182, 178, 181, 0, 136, 499, 281, 175, 215, 0,
	0, 0, 167, 0, 0, 0, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 361, 504, 309,
	308, 0, 205, 0, 512, 479, 290, 516, 211, 135,
	334, 373, 153, 217, 339, 477, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 494,
	518, 0, 288, 311, 341, 155, 328, 492, 493, 495,
	522, 300, 524, 530, 0, 230, 185, 188, 199, 206,
	0, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 480, 0, 326, 359,
	375, 157, 0, 314, 340, 502, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 488, 481, 482, 483, 484, 486, 505, 506, 510,
	511, 528, 527, 526, 529, 533, 536, 535, 537, 487,
	489, 497, 507, 508, 509, 513, 514, 523, 519, 521,
	0, 133, 143, 221, 0, 289, 191, 360, 0, 177,
	0, 0, 0, 0, 471, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 520, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 337, 0, 515, 517, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 219,
	1893, 0, 169, 227, 225, 0, 0, 0, 270, 336,
	0, 0, 0, 0, 222, 0, 0, 534, 324, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	476, 0, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 274, 291, 312, 0,
	282, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 147, 0, 0, 0, 210, 0, 0, 0, 0,
	284, 0, 331, 198, 220, 152, 130, 145, 163, 197,
	259, 0, 306, 496, 478, 0, 0, 0, 170, 0,
	298, 267, 356, 500, 0, 297, 223, 346, 0, 0,
	355, 0, 525, 365, 370, 491, 0, 485, 321, 182,
	178, 181, 0, 136, 499, 281, 175, 215, 0, 0,
	0, 167, 0, 0, 0, 320, 343, 134, 245, 344,
	369, 154, 338, 246, 252, 164, 166, 165, 146, 315,
	342, 159, 168, 325, 302, 332, 174, 0, 0, 0,
	0, 0, 503, 501, 0, 0, 361, 504, 309, 308,
	0, 205, 0, 512, 479, 290, 516, 211, 135, 334,
	373, 153, 217, 339, 477, 192, 258, 172, 268, 269,
	189, 132, 286, 239, 240, 238, 241, 196, 494, 518,
	0, 288, 311, 341, 155, 328, 492, 493, 495, 522,
	300, 524, 530, 0, 230, 185, 188, 199, 206, 0,
	295, 329, 362, 0, 148, 137, 335, 354, 160, 310,
	313, 371, 296, 140, 352, 330, 243, 212, 213, 138,
	0, 139, 293, 179, 195, 173, 262, 0, 194, 283,
	349, 350, 171, 374, 149, 364, 142, 150, 363, 255,
	0, 254, 366, 345, 353, 244, 232, 0, 141, 351,
	242, 231, 218, 187, 201, 279, 226, 280, 202, 250,
	249, 251, 228, 233, 0, 480, 0, 326, 359, 375,
	157, 0, 314, 340, 502, 287, 158, 193, 186, 278,
	253, 151, 204, 323, 216, 224, 292, 372, 266, 299,
	161, 358, 322, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	488, 481, 482, 483, 484, 486, 505, 506, 510, 511,
	528, 527, 526, 529, 533, 536, 535, 537, 487, 489,
	497, 507, 508, 509, 513, 514, 523, 519, 521, 0,
	133, 143, 221, 0, 289, 191, 360, 0, 177, 0,
	0, 0, 0, 0, 131, 144, 156, 162, 176, 184,
	190, 200, 203, 207, 208, 209, 214, 229, 234, 235,
	236, 237, 256, 257, 260, 261, 264, 265, 271, 272,
	273, 275, 276, 277, 285, 520, 294, 301, 303, 304,
	305, 307, 316, 317, 318, 319, 327, 333, 347, 348,
	367, 368, 337, 0, 515, 517, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 219, 0,
	0, 169, 227, 225, 0, 0, 0, 270, 336, 0,
	0, 0, 0, 222, 0, 0, 534, 324, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 476,
	0, 0, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 274, 291, 312, 0, 282,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	147, 0, 0, 0, 210, 0, 0, 0, 0, 284,
	0, 331, 198, 220, 152, 130, 145, 163, 197, 259,
	0, 306, 496, 478, 0, 0, 0, 170, 0, 298,
	267, 356, 500, 0, 297, 223, 346, 0, 0, 355,
	0, 525, 365, 370, 491, 0, 485, 321, 182, 178,
	181, 0, 136, 499, 281, 175, 215, 0, 0, 0,
	167, 0, 0, 0, 320, 343, 134, 245, 344, 369,
	154, 338, 246, 252, 164, 166, 165, 146, 315, 342,
	159, 168, 325, 302, 332, 174, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 361, 504, 309, 308, 0,
	205, 0, 512, 479, 290, 516, 211, 135, 334, 373,
	153, 217, 339, 477, 192, 258, 172, 268, 269, 189,
	132, 286, 239, 240, 238, 241, 196, 494, 518, 0,
	288, 311, 341, 155, 328, 492, 493, 495, 522, 300,
	524, 530, 0, 230, 185, 188, 199, 206, 0, 295,
	329, 362, 0, 148, 137, 335, 354, 160, 310, 313,
	371, 296, 140, 352, 330, 243, 212, 213, 138, 0,
	139, 293, 179, 195, 173, 262, 0, 194, 283, 349,
	350, 171, 374, 149, 364, 142, 150, 363, 255, 0,
	254, 366, 345, 353, 244, 232, 0, 141, 351, 242,
	231, 218, 187, 201, 279, 226, 280, 202, 250, 249,
	251, 228, 233, 0, 480, 0, 326, 359, 375, 157,
	0, 314, 340, 502, 287, 158, 193, 186, 278, 253,
	151, 204, 323, 216, 224, 292, 372, 266, 299, 161,
	358, 322, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 488,
	481, 482, 483, 484, 486, 505, 506, 510, 511, 528,
	527, 526, 529, 533, 536, 535, 537, 487, 489, 497,
	507, 508, 509, 513, 514, 523, 519, 521, 0, 133,
	143, 221, 0, 289, 191, 360, 0, 177, 0, 0,
	0, 0, 0, 131, 144, 156, 162, 176, 184, 190,
	200, 203, 207, 208, 209, 214, 229, 234, 235, 236,
	237, 256, 257, 260, 261, 264, 265, 271, 272, 273,
	275, 276, 277, 285, 520, 294, 301, 303, 304, 305,
	307, 316, 317, 318, 319, 327, 333, 347, 348, 367,
	368, 337, 0, 515, 517, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 219, 0, 0,
	169, 227, 225, 0, 0, 0, 270, 336, 0, 0,
	0, 0, 222, 0, 0, 534, 324, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 0, 1069, 0,
	0, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 274, 291, 312, 0, 282, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 147,
	0, 0, 0, 210, 0, 0, 0, 0, 284, 0,
	331, 198, 220, 152, 130, 145, 163, 197, 259, 0,
	306, 496, 478, 0, 0, 0, 170, 0, 298, 267,
	356, 500, 0, 297, 223, 346, 0, 0, 355, 0,
	525, 365, 370, 491, 0, 485, 321, 182, 178, 181,
	0, 136, 499, 281, 175, 215, 0, 0, 0, 167,
	0, 0, 0, 320, 343, 134, 245, 344, 369, 154,
	338, 246, 252, 164, 166, 165, 146, 315, 342, 159,
	168, 325, 302, 332, 174, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 361, 504, 309, 308, 0, 205,
	0, 512, 479, 290, 516, 211, 135, 334, 373, 153,
	217, 339, 477, 192, 258, 172, 268, 269, 189, 132,
	286, 239, 240, 238, 241, 196, 494, 518, 0, 288,
	311, 341, 155, 328, 492, 493, 495, 522, 300, 524,
	530, 0, 230, 185, 188, 199, 206, 0, 295, 329,
	362, 0, 148, 137, 335, 354, 160, 310, 313, 371,
	296, 140, 352, 330, 243, 212, 213, 138, 0, 139,
	293, 179, 195, 173, 262, 0, 194, 283, 349, 350,
	171, 374, 149, 364, 142, 150, 363, 255, 0, 254,
	366, 345, 353, 244, 232, 0, 141, 351, 242, 231,
	218, 187, 201, 279, 226, 280, 202, 250, 249, 251,
	228, 233, 0, 480, 0, 326, 359, 375, 157, 0,
	314, 340, 502, 287, 158, 193, 186, 278, 253, 151,
	204, 323, 216, 224, 292, 372, 266, 299, 161, 358,
	322, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 488, 481,
	482, 483, 484, 486, 505, 506, 510, 511, 528, 527,
	526, 529, 533, 536, 535, 537, 487, 489, 497, 507,
	508, 509, 513, 514, 523, 519, 521, 0, 133, 143,
	221, 0, 289, 191, 360, 0, 177, 0, 0, 0,
	0, 0, 131, 144, 156, 162, 176, 184, 190, 200,
	203, 207, 208, 209, 214, 229, 234, 235, 236, 237,
	256, 257, 260, 261, 264, 265, 271, 272, 273, 275,
	276, 277, 285, 520, 294, 301, 303, 304, 305, 307,
	316, 317, 318, 319, 327, 333, 347, 348, 367, 368,
	337, 0, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 219, 0, 0, 169,
	227, 225, 0, 0, 0, 270, 336, 0, 0, 0,
	0, 222, 0, 0, 534, 324, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 274, 291, 312, 0, 282, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 147, 0,
	0, 0, 210, 0, 0, 0, 0, 284, 0, 331,
	198, 220, 152, 130, 145, 163, 197, 259, 0, 306,
	496, 478, 0, 0, 0, 170, 0, 298, 267, 356,
	500, 0, 297, 223, 346, 0, 0, 355, 0, 525,
	365, 370, 491, 0, 485, 321, 182, 178, 181, 0,
	136, 499, 281, 175, 215, 0, 0, 0, 167, 0,
	0, 0, 320, 343, 134, 245, 344, 369, 154, 338,
	246, 252, 164, 166, 165, 146, 315, 342, 159, 168,
	325, 302, 332, 174, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 361, 504, 309, 308, 0, 205, 0,
	512, 479, 290, 516, 211, 135, 334, 373, 153, 217,
	339, 477, 192, 258, 172, 268, 269, 189, 132, 286,
	239, 240, 238, 241, 196, 494, 518, 0, 288, 311,
	341, 155, 328, 492, 493, 495, 522, 300, 524, 530,
	0, 230, 185, 188, 199, 206, 0, 295, 329, 362,
	0, 148, 137, 335, 354, 160, 310, 313, 371, 296,
	140, 352, 330, 243, 212, 213, 138, 0, 139, 293,
	179, 195, 173, 262, 0, 194, 283, 349, 350, 171,
	374, 149, 364, 142, 150, 363, 255, 0, 254, 366,
	345, 353, 244, 232, 0, 141, 351, 242, 231, 218,
	187, 201, 279, 226, 280, 202, 250, 249, 251, 228,
	233, 0, 480, 0, 326, 359, 375, 157, 0, 314,
	340, 502, 287, 158, 193, 186, 278, 253, 151, 204,
	323, 216, 224, 292, 372, 266, 299, 161, 358, 322,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 0, 0, 0, 488, 481, 482,
	483, 484, 486, 505, 506, 510, 511, 528, 527, 526,
	529, 533, 536, 535, 537, 487, 489, 497, 507, 508,
	509, 513, 514, 523, 519, 521, 0, 133, 143, 221,
	0, 289, 191, 360, 0, 177, 0, 0, 0, 0,
	0, 131, 144, 156, 162, 176, 184, 190, 200, 203,
	207, 208, 209, 214, 229, 234, 235, 236, 237, 256,
	257, 260, 261, 264, 265, 271, 272, 273, 275, 276,
	277, 285, 520, 294, 301, 303, 304, 305, 307, 316,
	317, 318, 319, 327, 333, 347, 348, 367, 368, 0,
	0, 515, 517, 445, 337, 439, 450, 433, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 440, 0,
	219, 0, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 0, 0, 0, 0, 222, 0, 0, 0, 324,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 274, 291, 312,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 431, 434, 0, 0,
	0, 248, 147, 0, 0, 438, 210, 0, 0, 0,
	0, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 442, 306, 0, 0, 446, 0, 0, 170,
	0, 298, 267, 356, 0, 0, 297, 223, 346, 0,
	449, 355, 0, 0, 365, 370, 0, 0, 0, 321,
	182, 178, 181, 0, 136, 0, 281, 175, 215, 0,
	0, 0, 167, 0, 0, 0, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 309,
	308, 0, 205, 0, 0, 0, 290, 0, 211, 135,
	334, 373, 153, 217, 339, 0, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 0,
	0, 0, 459, 311, 341, 155, 328, 435, 436, 437,
	443, 444, 447, 448, 451, 230, 185, 188, 199, 206,
	0, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 0, 0, 326, 359,
	375, 157, 0, 314, 340, 0, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 143, 221, 0, 289, 191, 360, 0, 177,
	0, 0, 0, 0, 0, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 441, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 445, 337, 439, 450, 433, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 425, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 440, 0,
	219, 0, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 0, 0, 0, 0, 222, 0, 0, 0, 324,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 454,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 274, 291, 312,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 431, 434, 0, 0,
	0, 248, 147, 0, 0, 438, 210, 0, 0, 0,
	0, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 442, 306, 0, 0, 446, 0, 0, 170,
	0, 298, 267, 356, 0, 0, 297, 223, 346, 0,
	449, 355, 0, 0, 365, 370, 0, 0, 0, 321,
	182, 178, 181, 0, 136, 0, 281, 175, 215, 0,
	0, 0, 167, 0, 0, 0, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 309,
	308, 0, 205, 0, 0, 0, 290, 0, 211, 135,
	334, 373, 153, 217, 339, 0, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 0,
	0, 0, 428, 311, 341, 155, 328, 435, 436, 437,
	443, 444, 447, 448, 451, 230, 185, 188, 199, 206,
	0, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 0, 0, 326, 359,
	375, 157, 0, 314, 340, 0, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 143, 221, 0, 289, 191, 360, 0, 177,
	0, 0, 0, 0, 0, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 441, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 219,
	0, 0, 169, 227, 225, 0, 0, 0, 270, 336,
	0, 0, 0, 0, 222, 0, 0, 0, 324, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 274, 291, 312, 0,
	282, 0, 1079, 1078, 1088, 1089, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1080, 0, 0, 1090, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 147, 0, 0, 0, 210, 0, 0, 0, 0,
	284, 0, 331, 198, 220, 152, 130, 145, 163, 197,
	259, 0, 306, 0, 0, 0, 0, 0, 170, 0,
	298, 267, 356, 0, 0, 297, 223, 346, 0, 0,
	355, 0, 0, 365, 370, 0, 0, 0, 321, 182,
	178, 181, 0, 136, 0, 281, 175, 215, 0, 0,
	0, 167, 0, 0, 0, 320, 343, 134, 245, 344,
	369, 154, 338, 246, 252, 164, 166, 165, 146, 315,
	342, 159, 168, 325, 302, 332, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 309, 308,
	0, 205, 0, 0, 0, 290, 0, 211, 135, 334,
	373, 153, 217, 339, 0, 192, 258, 172, 268, 269,
	189, 132, 286, 239, 240, 238, 241, 196, 0, 0,
	0, 288, 311, 341, 155, 328, 0, 0, 0, 0,
	300, 0, 0, 0, 230, 185, 188, 199, 206, 0,
	295, 329, 362, 0, 148, 137, 335, 354, 160, 310,
	313, 371, 296, 140, 352, 330, 243, 212, 213, 138,
	0, 139, 293, 179, 195, 173, 262, 0, 194, 283,
	349, 350, 171, 374, 149, 364, 142, 150, 363, 255,
	0, 254, 366, 345, 353, 244, 232, 0, 141, 351,
	242, 231, 218, 187, 201, 279, 226, 280, 202, 250,
	249, 251, 228, 233, 0, 0, 0, 326, 359, 375,
	157, 0, 314, 340, 0, 287, 158, 193, 186, 278,
	253, 151, 204, 323, 216, 224, 292, 372, 266, 299,
	161, 358, 322, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 143, 221, 0, 289, 191, 360, 0, 177, 0,
	0, 0, 0, 0, 131, 144, 156, 162, 176, 184,
	190, 200, 203, 207, 208, 209, 214, 229, 234, 235,
	236, 237, 256, 257, 260, 261, 264, 265, 271, 272,
	273, 275, 276, 277, 285, 0, 294, 301, 303, 304,
	305, 307, 316, 317, 318, 319, 327, 333, 347, 348,
	367, 368, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 2795, 0, 0, 0,
	0, 0, 0, 180, 2793, 0, 0, 0, 219, 0,
	0, 169, 227, 225, 0, 0, 0, 270, 336, 0,
	0, 0, 0, 222, 0, 0, 0, 324, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 454, 0, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 274, 291, 312, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	147, 0, 0, 0, 210, 0, 0, 0, 0, 284,
	0, 331, 198, 220, 152, 130, 145, 163, 197, 259,
	0, 306, 0, 0, 0, 0, 0, 170, 0, 298,
	267, 356, 0, 0, 297, 223, 346, 0, 0, 355,
	0, 0, 365, 370, 0, 0, 0, 321, 182, 178,
	181, 0, 136, 0, 281, 175, 215, 0, 0, 0,
	167, 0, 0, 0, 320, 343, 134, 245, 344, 369,
	154, 338, 246, 252, 164, 166, 165, 146, 315, 342,
	159, 168, 325, 302, 332, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 309, 308, 0,
	205, 0, 2794, 0, 290, 0, 211, 135, 334, 373,
	153, 217, 339, 0, 192, 258, 172, 268, 269, 189,
	132, 286, 239, 240, 238, 241, 196, 0, 0, 0,
	288, 311, 341, 155, 328, 0, 0, 0, 0, 300,
	0, 0, 0, 230, 185, 188, 199, 206, 0, 295,
	329, 362, 0, 148, 137, 335, 354, 160, 310, 313,
	371, 296, 140, 352, 330, 243, 212, 213, 138, 0,
	139, 293, 179, 195, 173, 262, 0, 194, 283, 349,
	350, 171, 374, 149, 364, 142, 150, 363, 255, 0,
	254, 366, 345, 353, 244, 232, 0, 141, 351, 242,
	231, 218, 187, 201, 279, 226, 280, 202, 250, 249,
	251, 228, 233, 0, 0, 0, 326, 359, 375, 157,
	0, 314, 340, 0, 287, 158, 193, 186, 278, 253,
	151, 204, 323, 216, 224, 292, 372, 266, 299, 161,
	358, 322, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	143, 221, 0, 289, 191, 360, 0, 177, 0, 0,
	0, 0, 0, 131, 144, 156, 162, 176, 184, 190,
	200, 203, 207, 208, 209, 214, 229, 234, 235, 236,
	237, 256, 257, 260, 261, 264, 265, 271, 272, 273,
	275, 276, 277, 285, 0, 294, 301, 303, 304, 305,
	307, 316, 317, 318, 319, 327, 333, 347, 348, 367,
	368, 36, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 219, 0,
	0, 169, 227, 225, 0, 0, 0, 270, 336, 0,
	0, 0, 1574, 222, 0, 0, 0, 324, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 274, 291, 312, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	147, 0, 0, 0, 210, 0, 0, 0, 0, 284,
	0, 331, 198, 220, 152, 130, 145, 163, 197, 259,
	0, 306, 0, 0, 0, 0, 0, 170, 0, 298,
	267, 356, 0, 0, 297, 223, 346, 0, 0, 355,
	0, 0, 365, 370, 0, 0, 0, 321, 182, 178,
	181, 0, 136, 0, 281, 175, 215, 0, 0, 0,
	167, 0, 0, 0, 320, 343, 134, 245, 344, 369,
	154, 338, 246, 252, 164, 166, 165, 146, 315, 342,
	159, 168, 325, 302, 332, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 309, 308, 0,
	205, 0, 0, 0, 290, 0, 211, 135, 334, 373,
	153, 217, 339, 0, 192, 258, 172, 268, 269, 189,
	132, 286, 239, 240, 238, 241, 196, 0, 0, 0,
	288, 311, 341, 155, 328, 0, 0, 0, 0, 300,
	0, 0, 0, 230, 185, 188, 199, 206, 0, 295,
	329, 362, 0, 148, 137, 335, 354, 160, 310, 313,
	371, 296, 140, 352, 330, 243, 212, 213, 138, 0,
	139, 293, 179, 195, 173, 262, 0, 194, 283, 349,
	350, 171, 374, 149, 364, 142, 150, 363, 255, 0,
	254, 366, 345, 353, 244, 232, 0, 141, 351, 242,
	231, 218, 187, 201, 279, 226, 280, 202, 250, 249,
	251, 228, 233, 0, 0, 0, 326, 359, 375, 157,
	0, 314, 340, 0, 287, 158, 193, 186, 278, 253,
	151, 204, 323, 216, 224, 292, 372, 266, 299, 161,
	358, 322, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	143, 221, 79, 289, 191, 360, 0, 177, 0, 0,
	0, 0, 0, 131, 144, 156, 162, 176, 184, 190,
	200, 203, 207, 208, 209, 214, 229, 234, 235, 236,
	237, 256, 257, 260, 261, 264, 265, 271, 272, 273,
	275, 276, 277, 285, 0, 294, 301, 303, 304, 305,
	307, 316, 317, 318, 319, 327, 333, 347, 348, 367,
	368, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 219, 0, 0,
	169, 227, 225, 0, 0, 0, 270, 336, 0, 0,
	0, 0, 222, 0, 0, 0, 324, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 274, 291, 312, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 147,
	0, 0, 0, 210, 0, 0, 0, 0, 284, 0,
	331, 198, 220, 152, 130, 145, 163, 197, 259, 0,
	306, 0, 0, 0, 0, 0, 170, 0, 298, 267,
	356, 0, 0, 297, 223, 346, 0, 0, 355, 0,
	0, 365, 370, 0, 0, 0, 321, 182, 178, 181,
	0, 136, 0, 281, 175, 215, 0, 0, 0, 167,
	0, 0, 0, 320, 343, 134, 245, 344, 369, 154,
	338, 246, 252, 164, 166, 165, 146, 315, 342, 159,
	168, 325, 302, 332, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 309, 308, 0, 205,
	0, 0, 0, 290, 0, 211, 135, 334, 373, 153,
	217, 339, 0, 192, 258, 172, 268, 269, 189, 132,
	286, 239, 240, 238, 241, 196, 0, 0, 0, 288,
	311, 341, 155, 328, 0, 0, 0, 0, 300, 0,
	0, 0, 230, 185, 188, 199, 206, 0, 295, 329,
	362, 0, 148, 137, 335, 354, 160, 310, 313, 371,
	296, 140, 352, 330, 243, 212, 213, 138, 0, 139,
	293, 179, 195, 173, 262, 0, 194, 283, 349, 350,
	171, 374, 149, 364, 142, 150, 363, 255, 0, 254,
	366, 345, 353, 244, 232, 0, 141, 351, 242, 231,
	218, 187, 201, 279, 226, 280, 202, 250, 249, 251,
	228, 233, 0, 0, 0, 326, 359, 375, 157, 0,
	314, 340, 0, 287, 158, 193, 186, 278, 253, 151,
	204, 323, 216, 224, 292, 372, 266, 299, 161, 358,
	322, 183, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 143,
	221, 0, 289, 191, 360, 0, 177, 0, 0, 0,
	0, 0, 131, 144, 156, 162, 176, 184, 190, 200,
	203, 207, 208, 209, 214, 229, 234, 235, 236, 237,
	256, 257, 260, 261, 264, 265, 271, 272, 273, 275,
	276, 277, 285, 0, 294, 301, 303, 304, 305, 307,
	316, 317, 318, 319, 327, 333, 347, 348, 367, 368,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 1217, 0, 0, 0, 219, 0, 0, 169,
	227, 225, 0, 0, 0, 270, 336, 0, 0, 0,
	0, 222, 0, 0, 0, 324, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 687, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 274, 291, 312, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 147, 0,
	0, 0, 210, 0, 0, 0, 0, 284, 0, 331,
	198, 220, 152, 130, 145, 163, 197, 259, 0, 306,
	0, 0, 0, 0, 0, 170, 0, 298, 267, 356,
	0, 0, 297, 223, 346, 0, 0, 355, 0, 0,
	365, 370, 0, 0, 0, 321, 182, 178, 181, 0,
	136, 0, 281, 175, 215, 0, 0, 0, 167, 0,
	0, 0, 320, 343, 134, 245, 344, 369, 154, 338,
	246, 252, 164, 166, 165, 146, 315, 342, 159, 168,
	325, 302, 332, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 309, 308, 0, 205, 0,
	0, 0, 290, 0, 211, 135, 334, 373, 153, 217,
	339, 0, 192, 258, 172, 268, 269, 189, 132, 286,
	239, 240, 238, 241, 196, 0, 0, 0, 288, 311,
	341, 155, 328, 0, 0, 0, 0, 300, 0, 0,
	0, 230, 185, 188, 199, 206, 0, 295, 329, 362,
	0, 148, 137, 335, 354, 160, 310, 313, 371, 296,
	140, 352, 330, 243, 212, 213, 138, 0, 139, 293,
	179, 195, 173, 262, 0, 194, 283, 349, 350, 171,
	374, 149, 364, 142, 150, 363, 255, 0, 254, 366,
	345, 353, 244, 232, 0, 141, 351, 242, 231, 218,
	187, 201, 279, 226, 280, 202, 250, 249, 251, 228,
	233, 0, 0, 0, 326, 359, 375, 157, 0, 314,
	340, 0, 287, 158, 193, 186, 278, 253, 151, 204,
	323, 216, 224, 292, 372, 266, 299, 161, 358, 322,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 143, 221,
	0, 289, 191, 360, 0, 177, 0, 0, 0, 0,
	0, 131, 144, 156, 162, 176, 184, 190, 200, 203,
	207, 208, 209, 214, 229, 234, 235, 236, 237, 256,
	257, 260, 261, 264, 265, 271, 272, 273, 275, 276,
	277, 285, 0, 294, 301, 303, 304, 305, 307, 316,
	317, 318, 319, 327, 333, 347, 348, 367, 368, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 219, 0, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 0, 0, 0, 0,
	222, 0, 0, 0, 324, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 274, 291, 312, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 147, 0, 0,
	0, 210, 0, 0, 0, 0, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 0, 306, 0,
	0, 0, 0, 0, 170, 0, 298, 267, 356, 0,
	0, 297, 223, 346, 0, 0, 355, 0, 0, 365,
	370, 0, 0, 0, 321, 182, 178, 181, 0, 136,
	0, 281, 175, 215, 0, 0, 0, 167, 0, 0,
	0, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 309, 308, 0, 205, 0, 0,
	0, 290, 0, 211, 135, 334, 373, 153, 217, 339,
	0, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 0, 0, 0, 288, 311, 341,
	155, 328, 0, 0, 0, 0, 300, 0, 0, 0,
	230, 185, 188, 199, 206, 0, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 0, 0, 326, 359, 375, 157, 0, 314, 340,
	0, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 143, 221, 0,
	289, 191, 360, 0, 177, 0, 0, 0, 0, 0,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 0, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 219, 0, 0, 169, 227, 225,
	0, 0, 0, 270, 336, 0, 0, 0, 0, 222,
	0, 0, 0, 324, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 274, 291, 312, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 147, 0, 0, 0,
	210, 0, 0, 0, 0, 284, 0, 331, 198, 220,
	152, 130, 145, 163, 197, 259, 0, 306, 0, 0,
	0, 0, 0, 170, 0, 298, 267, 356, 0, 0,
	297, 223, 346, 0, 0, 355, 0, 0, 365, 370,
	0, 0, 0, 321, 182, 178, 181, 0, 136, 0,
	281, 175, 215, 0, 0, 0, 167, 0, 0, 0,
	320, 343, 134, 245, 344, 369, 154, 338, 246, 252,
	164, 166, 165, 146, 315, 342, 159, 168, 325, 302,
	332, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 309, 308, 0, 205, 0, 0, 0,
	290, 0, 211, 135, 334, 373, 153, 217, 339, 0,
	192, 258, 172, 268, 269, 189, 132, 286, 239, 240,
	238, 241, 196, 0, 0, 0, 288, 311, 341, 155,
	328, 0, 0, 0, 0, 300, 0, 0, 0, 230,
	185, 188, 199, 206, 0, 295, 329, 362, 0, 148,
	137, 335, 354, 160, 310, 313, 371, 296, 140, 352,
	330, 243, 212, 213, 138, 0, 139, 293, 179, 195,
	173, 262, 0, 194, 283, 349, 350, 171, 374, 149,
	364, 142, 150, 363, 255, 0, 254, 366, 345, 353,
	244, 232, 0, 141, 351, 242, 231, 218, 187, 201,
	279, 226, 280, 202, 250, 249, 251, 228, 233, 0,
	0, 0, 326, 359, 375, 157, 0, 314, 340, 0,
	287, 158, 193, 186, 278, 253, 151, 204, 323, 216,
	224, 292, 372, 266, 299, 161, 358, 322, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 143, 221, 0, 289,
	191, 360, 0, 177, 0, 0, 0, 0, 0, 131,
	144, 156, 162, 176, 184, 190, 200, 203, 207, 208,
	209, 214, 229, 234, 235, 236, 237, 256, 257, 260,
	261, 264, 265, 271, 272, 273, 275, 276, 277, 285,
	0, 294, 301, 303, 304, 305, 307, 316, 317, 318,
	319, 327, 333, 347, 348, 367, 368, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 219, 0, 0, 169, 227, 225, 0,
	0, 0, 270, 336, 0, 0, 0, 0, 222, 0,
	0, 0, 324, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	274, 291, 312, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 2256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 147, 0, 0, 0, 210,
	0, 0, 0, 0, 284, 0, 331, 198, 220, 152,
	130, 145, 163, 197, 259, 0, 306, 0, 0, 0,
	0, 0, 170, 0, 298, 267, 356, 0, 0, 297,
	223, 346, 0, 0, 355, 0, 0, 365, 370, 0,
	0, 0, 321, 182, 178, 181, 0, 136, 0, 281,
	175, 215, 0, 0, 0, 167, 0, 0, 0, 320,
	343, 134, 245, 344, 369, 154, 338, 246, 252, 164,
	166, 165, 146, 315, 342, 159, 168, 325, 302, 332,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 309, 308, 0, 205, 0, 0, 0, 290,
	0, 211, 135, 334, 373, 153, 217, 339, 0, 192,
	258, 172, 268, 269, 189, 132, 286, 239, 240, 238,
	241, 196, 0, 0, 0, 288, 311, 341, 155, 328,
	0, 0, 0, 0, 300, 0, 0, 0, 230, 185,
	188, 199, 206, 0, 295, 329, 362, 0, 148, 137,
	335, 354, 160, 310, 313, 371, 296, 140, 352, 330,
	243, 212, 213, 138, 0, 139, 293, 179, 195, 173,
	262, 0, 194, 283, 349, 350, 171, 374, 149, 364,
	142, 150, 363, 255, 0, 254, 366, 345, 353, 244,
	232, 0, 141, 351, 242, 231, 218, 187, 201, 279,
	226, 280, 202, 250, 249, 251, 228, 233, 0, 0,
	0, 326, 359, 375, 157, 0, 314, 340, 0, 287,
	158, 193, 186, 278, 253, 151, 204, 323, 216, 224,
	292, 372, 266, 299, 161, 358, 322, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 143, 221, 0, 289, 191,
	360, 0, 177, 0, 0, 0, 0, 0, 131, 144,
	156, 162, 176, 184, 190, 200, 203, 207, 208, 209,
	214, 229, 234, 235, 236, 237, 256, 257, 260, 261,
	264, 265, 271, 272, 273, 275, 276, 277, 285, 0,
	294, 301, 303, 304, 305, 307, 316, 317, 318, 319,
	327, 333, 347, 348, 367, 368, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 219, 0, 0, 169, 227, 225, 0, 0,
	0, 270, 336, 0, 0, 0, 0, 222, 0, 0,
	0, 324, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 274,
	291, 312, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 147, 0, 0, 0, 210, 0,
	0, 0, 0, 284, 0, 331, 198, 220, 152, 130,
	145, 163, 197, 259, 0, 306, 0, 0, 0, 0,
	0, 170, 0, 298, 267, 356, 0, 0, 297, 223,
	346, 0, 0, 355, 0, 0, 365, 370, 0, 0,
	0, 321, 182, 178, 181, 0, 136, 0, 281, 175,
	215, 0, 0, 0, 167, 0, 0, 0, 320, 343,
	134, 245, 344, 369, 154, 338, 246, 252, 164, 166,
	165, 146, 315, 342, 159, 168, 325, 302, 332, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 309, 308, 0, 205, 0, 0, 0, 290, 0,
	211, 135, 334, 373, 153, 217, 339, 0, 192, 258,
	172, 268, 269, 189, 132, 286, 239, 240, 238, 241,
	196, 0, 0, 0, 288, 311, 341, 155, 328, 0,
	0, 0, 0, 300, 0, 0, 0, 230, 185, 188,
	199, 206, 0, 295, 329, 362, 0, 148, 137, 335,
	354, 160, 310, 313, 371, 296, 140, 352, 330, 243,
	212, 213, 138, 0, 139, 293, 179, 195, 173, 262,
	0, 194, 283, 349, 350, 171, 374, 149, 364, 142,
	150, 363, 255, 0, 254, 366, 345, 353, 244, 232,
	0, 141, 351, 242, 231, 218, 187, 201, 279, 226,
	280, 202, 250, 249, 251, 228, 233, 0, 0, 0,
	326, 359, 375, 157, 0, 314, 340, 0, 287, 158,
	193, 186, 278, 253, 151, 204, 323, 216, 224, 292,
	372, 266, 299, 161, 358, 322, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 143, 221, 0, 289, 191, 360,
	0, 177, 0, 0, 0, 0, 0, 131, 144, 156,
	162, 176, 184, 190, 200, 203, 207, 208, 209, 214,
	229, 234, 235, 236, 237, 256, 257, 260, 261, 264,
	265, 271, 272, 273, 275, 276, 277, 285, 0, 294,
	301, 303, 304, 305, 307, 316, 317, 318, 319, 327,
	333, 347, 348, 367, 368, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 219, 0, 0, 169, 227, 225, 0, 0, 0,
	270, 336, 0, 0, 0, 0, 222, 0, 0, 0,
	324, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 357, 274, 291,
	312, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 147, 0, 0, 0, 210, 0, 0,
	0, 0, 284, 0, 331, 198, 220, 152, 130, 145,
	163, 197, 259, 0, 306, 0, 0, 0, 0, 0,
	170, 0, 298, 267, 356, 0, 0, 297, 223, 346,
	0, 0, 355, 0, 0, 365, 370, 0, 0, 0,
	321, 182, 178, 181, 0, 136, 0, 281, 175, 215,
	0, 0, 0, 167, 0, 0, 0, 320, 343, 134,
	245, 344, 369, 154, 338, 246, 252, 164, 166, 165,
	146, 315, 342, 159, 168, 325, 302, 332, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	309, 308, 0, 205, 0, 0, 0, 290, 0, 211,
	135, 334, 373, 153, 217, 339, 0, 192, 258, 172,
	268, 269, 189, 132, 286, 239, 240, 238, 241, 196,
	0, 0, 0, 288, 311, 341, 155, 328, 0, 0,
	0, 0, 300, 0, 0, 0, 230, 185, 188, 199,
	206, 0, 295, 329, 362, 0, 148, 137, 335, 354,
	160, 310, 313, 371, 296, 140, 352, 330, 243, 212,
	213, 138, 0, 139, 293, 179, 195, 173, 262, 0,
	194, 283, 349, 350, 171, 374, 149, 364, 142, 150,
	363, 255, 0, 254, 366, 345, 353, 244, 232, 0,
	141, 351, 242, 231, 218, 187, 201, 279, 226, 280,
	202, 250, 249, 251, 228, 233, 0, 0, 0, 326,
	359, 375, 157, 0, 314, 340, 0, 287, 158, 193,
	186, 278, 253, 151, 204, 323, 216, 224, 292, 372,
	266, 299, 161, 358, 322, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 143, 221, 0, 289, 191, 360, 0,
	177, 0, 0, 0, 0, 0, 131, 144, 156, 162,
	176, 184, 190, 200, 203, 207, 208, 209, 214, 229,
	234, 235, 236, 237, 256, 257, 260, 261, 264, 265,
	271, 272, 273, 275, 276, 277, 285, 0, 294, 301,
	303, 304, 305, 307, 316, 317, 318, 319, 327, 333,
	347, 348, 367, 368, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 1184, 180, 0, 0, 0, 0,
	219, 0, 0, 169, 227, 225, 0, 0, 0, 270,
	336, 0, 0, 0, 0, 222, 0, 0, 0, 324,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 274, 291, 312,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 147, 0, 0, 0, 210, 0, 0, 0,
	0, 284, 0, 331, 198, 220, 152, 130, 145, 163,
	197, 259, 0, 306, 0, 0, 0, 0, 0, 170,
	0, 298, 267, 356, 0, 0, 297, 223, 346, 0,
	0, 355, 0, 0, 365, 370, 0, 0, 0, 321,
	182, 178, 181, 0, 136, 0, 281, 175, 215, 0,
	0, 0, 167, 0, 0, 0, 320, 343, 134, 245,
	344, 369, 154, 338, 246, 252, 164, 166, 165, 146,
	315, 342, 159, 168, 325, 302, 332, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 309,
	308, 0, 205, 0, 0, 0, 290, 0, 211, 135,
	334, 373, 153, 217, 339, 0, 192, 258, 172, 268,
	269, 189, 132, 286, 239, 240, 238, 241, 196, 0,
	0, 0, 288, 311, 341, 155, 328, 0, 0, 0,
	0, 300, 0, 0, 0, 230, 185, 188, 199, 206,
	0, 295, 329, 362, 0, 148, 137, 335, 354, 160,
	310, 313, 371, 296, 140, 352, 330, 243, 212, 213,
	138, 0, 139, 293, 179, 195, 173, 262, 0, 194,
	283, 349, 350, 171, 374, 149, 364, 142, 150, 363,
	255, 0, 254, 366, 345, 353, 244, 232, 0, 141,
	351, 242, 231, 218, 187, 201, 279, 226, 280, 202,
	250, 249, 251, 228, 233, 0, 0, 0, 326, 359,
	375, 157, 0, 314, 340, 0, 287, 158, 193, 186,
	278, 253, 151, 204, 323, 216, 224, 292, 372, 266,
	299, 161, 358, 322, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 143, 221, 0, 289, 191, 360, 0, 177,
	0, 0, 0, 0, 0, 131, 144, 156, 162, 176,
	184, 190, 200, 203, 207, 208, 209, 214, 229, 234,
	235, 236, 237, 256, 257, 260, 261, 264, 265, 271,
	272, 273, 275, 276, 277, 285, 0, 294, 301, 303,
	304, 305, 307, 316, 317, 318, 319, 327, 333, 347,
	348, 367, 368, 337, 0, 0, 0, 650, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 219,
	0, 0, 169, 227, 225, 0, 0, 0, 270, 336,
	0, 0, 0, 0, 222, 0, 0, 0, 324, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 274, 291, 312, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 147, 0, 0, 0, 210, 0, 0, 0, 0,
	284, 0, 331, 198, 220, 152, 130, 145, 163, 197,
	259, 0, 306, 0, 0, 0, 0, 0, 170, 0,
	298, 267, 356, 0, 0, 297, 223, 346, 0, 0,
	355, 0, 0, 365, 370, 0, 0, 0, 321, 182,
	178, 181, 0, 136, 0, 281, 175, 215, 0, 0,
	0, 167, 0, 0, 0, 320, 343, 134, 245, 344,
	369, 154, 338, 246, 252, 164, 166, 165, 146, 315,
	342, 159, 168, 325, 302, 332, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 309, 308,
	0, 205, 0, 0, 0, 290, 0, 211, 135, 334,
	373, 153, 217, 339, 0, 192, 258, 172, 268, 269,
	189, 132, 286, 239, 240, 238, 241, 196, 0, 0,
	0, 288, 311, 341, 155, 328, 0, 0, 0, 0,
	300, 0, 0, 0, 230, 185, 188, 199, 206, 0,
	295, 329, 362, 0, 148, 137, 335, 354, 160, 310,
	313, 371, 296, 140, 352, 330, 243, 212, 213, 138,
	0, 139, 293, 179, 195, 173, 262, 0, 194, 283,
	349, 350, 171, 374, 149, 364, 142, 150, 363, 255,
	0, 254, 366, 345, 353, 244, 232, 0, 141, 351,
	242, 231, 218, 187, 201, 279, 226, 280, 202, 250,
	249, 251, 228, 233, 0, 0, 0, 326, 359, 375,
	157, 0, 314, 340, 0, 287, 158, 193, 186, 278,
	253, 151, 204, 323, 216, 224, 292, 372, 266, 299,
	161, 358, 322, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 143, 221, 0, 289, 191, 360, 0, 177, 0,
	0, 0, 0, 0, 131, 144, 156, 162, 176, 184,
	190, 200, 203, 207, 208, 209, 214, 229, 234, 235,
	236, 237, 256, 257, 260, 261, 264, 265, 271, 272,
	273, 275, 276, 277, 285, 0, 294, 301, 303, 304,
	305, 307, 316, 317, 318, 319, 327, 333, 347, 348,
	367, 368, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 219, 0,
	0, 169, 227, 225, 0, 0, 0, 270, 336, 0,
	0, 0, 0, 222, 0, 0, 0, 324, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 357, 274, 291, 312, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	147, 0, 125, 0, 210, 0, 0, 0, 0, 284,
	0, 331, 198, 220, 152, 130, 145, 163, 197, 259,
	0, 306, 0, 0, 0, 0, 0, 170, 0, 298,
	267, 356, 0, 0, 297, 223, 346, 0, 0, 355,
	0, 0, 365, 370, 0, 0, 0, 321, 182, 178,
	181, 0, 136, 0, 281, 175, 215, 0, 0, 0,
	167, 0, 0, 0, 320, 343, 134, 245, 344, 369,
	154, 338, 246, 252, 164, 166, 165, 146, 315, 342,
	159, 168, 325, 302, 332, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 309, 308, 0,
	205, 0, 0, 0, 290, 0, 211, 135, 334, 373,
	153, 217, 339, 0, 192, 258, 172, 268, 269, 189,
	132, 286, 239, 240, 238, 241, 196, 0, 0, 0,
	288, 311, 341, 155, 328, 0, 0, 0, 0, 300,
	0, 0, 0, 230, 185, 188, 199, 206, 0, 295,
	329, 362, 0, 148, 137, 335, 354, 160, 310, 313,
	371, 296, 140, 352, 330, 243, 212, 213, 138, 0,
	139, 293, 179, 195, 173, 262, 0, 194, 283, 349,
	350, 171, 374, 149, 364, 142, 150, 363, 255, 0,
	254, 366, 345, 353, 244, 232, 0, 141, 351, 242,
	231, 218, 187, 201, 279, 226, 280, 202, 250, 249,
	251, 228, 233, 0, 0, 0, 326, 359, 375, 157,
	0, 314, 340, 0, 287, 158, 193, 186, 278, 253,
	151, 204, 323, 216, 224, 292, 372, 266, 299, 161,
	358, 322, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	143, 221, 0, 289, 191, 360, 0, 177, 0, 0,
	0, 0, 0, 131, 144, 156, 162, 176, 184, 190,
	200, 203, 207, 208, 209, 214, 229, 234, 235, 236,
	237, 256, 257, 260, 261, 264, 265, 271, 272, 273,
	275, 276, 277, 285, 0, 294, 301, 303, 304, 305,
	307, 316, 317, 318, 319, 327, 333, 347, 348, 367,
	368, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 219, 0, 0,
	169, 227, 225, 0, 0, 0, 270, 336, 0, 0,
	0, 0, 222, 0, 0, 0, 324, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 357, 274, 291, 312, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 147,
	0, 0, 0, 210, 0, 0, 0, 0, 284, 0,
	331, 198, 220, 152, 130, 145, 163, 197, 259, 0,
	306, 0, 0, 0, 0, 0, 170, 0, 298, 267,
	356, 0, 0, 297, 223, 346, 0, 0, 355, 0,
	0, 365, 370, 0, 0, 0, 321, 182, 178, 181,
	0, 136, 0, 281, 175, 215, 0, 0, 0, 167,
	0, 0, 0, 320, 343, 134, 245, 344, 369, 154,
	338, 246, 252, 164, 166, 165, 146, 315, 342, 159,
	168, 325, 302, 332, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 309, 308, 0, 205,
	0, 0, 0, 290, 0, 211, 135, 334, 373, 153,
	217, 339, 0, 192, 258, 172, 268, 269, 189, 132,
	286, 239, 240, 238, 241, 196, 0, 0, 0, 288,
	311, 341, 155, 328, 0, 0, 0, 0, 300, 0,
	0, 0, 230, 185, 188, 199, 206, 0, 295, 329,
	362, 0, 148, 137, 335, 354, 160, 310, 313, 371,
	296, 140, 352, 330, 243, 212, 213, 138, 0, 139,
	293, 179, 195, 173, 262, 0, 194, 283, 349, 350,
	171, 374, 149, 364, 142, 150, 363, 255, 0, 254,
	366, 345, 353, 244, 232, 0, 141, 351, 242, 231,
	218, 187, 201, 279, 226, 280, 202, 250, 249, 251,
	228, 233, 0, 0, 0, 326, 359, 375, 157, 0,
	314, 340, 0, 287, 158, 193, 186, 278, 253, 151,
	204, 323, 216, 224, 292, 372, 266, 299, 161, 358,
	322, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 143,
	221, 0, 289, 191, 360, 0, 177, 0, 0, 0,
	0, 0, 131, 144, 156, 162, 176, 184, 190, 200,
	203, 207, 208, 209, 214, 229, 234, 235, 236, 237,
	256, 257, 260, 261, 264, 265, 271, 272, 273, 275,
	276, 277, 285, 0, 294, 301, 303, 304, 305, 307,
	316, 317, 318, 319, 327, 333, 347, 348, 367, 368,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 219, 0, 0, 169,
	227, 225, 0, 0, 0, 270, 336, 0, 0, 0,
	0, 222, 0, 0, 0, 324, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 274, 291, 312, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 147, 0,
	0, 0, 210, 0, 0, 0, 0, 284, 0, 331,
	198, 220, 152, 130, 145, 163, 197, 259, 0, 306,
	0, 0, 0, 0, 0, 170, 0, 298, 267, 356,
	0, 0, 297, 223, 346, 0, 0, 355, 0, 0,
	365, 370, 0, 0, 0, 321, 182, 178, 181, 0,
	136, 0, 281, 175, 215, 0, 0, 0, 167, 0,
	0, 0, 320, 343, 134, 245, 344, 369, 154, 338,
	246, 252, 164, 166, 165, 146, 315, 342, 159, 168,
	325, 302, 332, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 309, 308, 0, 205, 0,
	0, 0, 290, 0, 211, 135, 334, 373, 153, 217,
	339, 0, 192, 258, 172, 268, 269, 189, 132, 286,
	239, 240, 238, 241, 196, 0, 0, 0, 288, 311,
	341, 155, 328, 0, 0, 0, 0, 300, 0, 0,
	0, 230, 185, 188, 199, 206, 0, 295, 329, 362,
	0, 148, 137, 335, 354, 160, 310, 313, 371, 296,
	140, 352, 330, 243, 212, 213, 138, 0, 139, 293,
	179, 195, 173, 262, 0, 194, 283, 349, 350, 171,
	374, 149, 364, 142, 150, 363, 255, 0, 254, 366,
	345, 353, 244, 232, 0, 141, 351, 242, 231, 218,
	187, 201, 279, 226, 280, 202, 250, 249, 251, 228,
	233, 0, 0, 0, 326, 359, 375, 157, 0, 314,
	340, 0, 287, 158, 193, 186, 278, 253, 151, 204,
	323, 216, 224, 292, 372, 266, 299, 161, 358, 322,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 143, 221,
	0, 289, 191, 360, 0, 177, 0, 0, 0, 0,
	0, 131, 144, 156, 162, 176, 184, 190, 200, 203,
	207, 208, 209, 214, 229, 234, 235, 236, 237, 256,
	257, 260, 261, 264, 265, 271, 272, 273, 275, 276,
	277, 285, 0, 294, 301, 303, 304, 305, 307, 316,
	317, 318, 319, 327, 333, 347, 348, 367, 368, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 219, 0, 0, 169, 227,
	225, 0, 0, 0, 270, 336, 0, 0, 0, 0,
	222, 0, 0, 0, 324, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 274, 291, 312, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 147, 0, 0,
	0, 210, 0, 0, 0, 0, 284, 0, 331, 198,
	220, 152, 130, 145, 163, 197, 259, 0, 306, 0,
	0, 0, 0, 0, 170, 0, 298, 267, 356, 0,
	0, 297, 223, 346, 0, 0, 355, 0, 0, 365,
	370, 0, 0, 0, 321, 182, 178, 181, 0, 136,
	0, 281, 175, 215, 0, 0, 0, 167, 0, 0,
	0, 320, 343, 134, 245, 344, 369, 154, 338, 246,
	252, 164, 166, 165, 146, 315, 342, 159, 168, 325,
	302, 332, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 309, 308, 0, 205, 0, 0,
	0, 290, 0, 211, 135, 334, 373, 153, 217, 339,
	0, 192, 258, 172, 268, 269, 189, 132, 286, 239,
	240, 238, 241, 196, 0, 0, 0, 288, 311, 341,
	155, 328, 0, 0, 0, 0, 300, 0, 0, 0,
	230, 185, 188, 199, 206, 0, 295, 329, 362, 0,
	148, 137, 335, 354, 160, 310, 313, 371, 296, 140,
	352, 330, 243, 212, 213, 138, 0, 139, 293, 179,
	195, 173, 262, 0, 194, 283, 349, 350, 171, 374,
	149, 364, 142, 150, 363, 255, 0, 254, 366, 345,
	353, 244, 232, 0, 141, 351, 242, 231, 218, 187,
	201, 279, 226, 280, 202, 250, 249, 251, 228, 233,
	0, 0, 0, 326, 359, 375, 157, 0, 314, 340,
	0, 287, 158, 193, 186, 278, 253, 151, 204, 323,
	216, 224, 292, 372, 266, 299, 161, 358, 322, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 143, 221, 0,
	289, 191, 360, 0, 177, 0, 0, 0, 0, 0,
	131, 144, 156, 162, 176, 184, 190, 200, 203, 207,
	208, 209, 214, 229, 234, 235, 236, 237, 256, 257,
	260, 261, 264, 265, 271, 272, 273, 275, 276, 277,
	285, 0, 294, 301, 303, 304, 305, 307, 316, 317,
	318, 319, 327, 333, 347, 348, 367, 368, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 219, 0, 0, 169, 227, 225,
	0, 0, 0, 270, 336, 0, 0, 0, 0, 222,
	0, 0, 0, 324, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 274, 291, 312, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 147, 0, 0, 0,
	210, 0, 0, 0, 0, 284, 0, 331, 198, 220,
	152, 130, 145, 163, 197, 259, 0, 306, 0, 0,
	0, 0, 0, 170, 0, 298, 267, 356, 0, 0,
	297, 223, 346, 0, 0, 355, 0, 0, 365, 370,
	0, 0, 0, 321, 182, 178, 181, 0, 136, 0,
	281, 175, 215, 0, 0, 0, 167, 0, 0, 0,
	320, 343, 134, 245, 344, 369, 154, 338, 246, 252,
	164, 166, 165, 146, 315, 342, 159, 168, 325, 302,
	332, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 309, 308, 0, 205, 0, 0, 0,
	290, 0, 211, 135, 334, 373, 153, 217, 339, 0,
	192, 258, 172, 268, 269, 189, 132, 286, 239, 240,
	238, 241, 196, 0, 0, 0, 288, 311, 341, 155,
	328, 0, 0, 0, 0, 300, 0, 0, 0, 230,
	185, 188, 199, 206, 0, 295, 329, 362, 0, 148,
	137, 335, 354, 160, 310, 313, 371, 296, 140, 352,
	330, 243, 212, 213, 138, 0, 139, 293, 179, 195,
	173, 262, 0, 194, 283, 349, 350, 171, 374, 149,
	364, 142, 670, 363, 255, 0, 254, 366, 345, 353,
	244, 232, 0, 141, 351, 242, 231, 218, 187, 201,
	279, 226, 280, 202, 250, 249, 251, 666, 233, 0,
	0, 0, 326, 359, 375, 157, 0, 314, 340, 0,
	287, 158, 193, 186, 278, 671, 669, 660, 661, 216,
	224, 292, 372, 266, 299, 161, 358, 322, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 143, 221, 0, 289,
	191, 360, 0, 177, 0, 0, 0, 0, 0, 131,
	144, 156, 162, 176, 184, 190, 200, 203, 207, 208,
	209, 214, 229, 234, 235, 236, 237, 256, 257, 260,
	261, 264, 265, 271, 272, 273, 275, 667, 668, 285,
	0, 294, 301, 303, 304, 305, 307, 316, 317, 318,
	319, 327, 333, 347, 348, 367, 368, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 219, 0, 0, 169, 227, 225, 0,
	0, 0, 270, 336, 0, 0, 0, 0, 222, 0,
	0, 0, 324, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 357,
	274, 291, 312, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 147, 0, 0, 0, 210,
	0, 0, 0, 0, 284, 0, 331, 198, 220, 152,
	130, 145, 163, 197, 259, 0, 306, 0, 0, 0,
	0, 0, 170, 0, 298, 267, 356, 0, 0, 297,
	223, 346, 0, 0, 355, 0, 0, 365, 370, 0,
	0, 0, 321, 182, 178, 181, 0, 136, 0, 281,
	175, 215, 0, 0, 0, 167, 0, 0, 0, 320,
	343, 134, 245, 344, 369, 154, 338, 246, 252, 164,
	166, 165, 146, 315, 342, 159, 168, 325, 302, 332,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 309, 308, 0, 205, 0, 0, 0, 290,
	0, 211, 135, 334, 373, 153, 217, 339, 0, 192,
	258, 172, 268, 269, 189, 132, 286, 239, 240, 238,
	241, 196, 0, 0, 0, 288, 311, 341, 155, 328,
	0, 0, 0, 0, 300, 0, 0, 0, 230, 185,
	188, 199, 206, 0, 295, 329, 362, 0, 148, 137,
	335, 1211, 160, 310, 313, 371, 296, 140, 352, 330,
	243, 212, 213, 138, 0, 139, 293, 179, 195, 173,
	262, 0, 194, 283, 349, 350, 171, 374, 149, 364,
	142, 150, 363, 255, 0, 254, 366, 345, 353, 244,
	232, 0, 141, 351, 242, 231, 218, 187, 201, 279,
	226, 280, 202, 250, 249, 251, 228, 233, 0, 0,
	0, 326, 359, 375, 157, 0, 314, 340, 0, 287,
	158, 193, 186, 278, 253, 151, 204, 323, 216, 224,
	292, 372, 266, 299, 161, 358, 322, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 143, 221, 0, 289, 191,
	360, 0, 177, 0, 0, 0, 0, 0, 131, 144,
	156, 162, 176, 184, 190, 200, 203, 207, 208, 209,
	214, 229, 234, 235, 236, 237, 256, 257, 260, 261,
	264, 265, 271, 272, 273, 275, 276, 277, 285, 0,
	294, 301, 303, 304, 305, 307, 316, 317, 318, 319,
	327, 333, 347, 348, 367, 368, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 219, 0, 0, 169, 227, 225, 0, 0,
	0, 270, 336, 0, 0, 0, 0, 222, 0, 0,
	0, 324, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 357, 274,
	291, 312, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 147, 0, 0, 0, 210, 0,
	0, 0, 0, 284, 0, 331, 198, 220, 152, 130,
	145, 163, 197, 259, 0, 306, 0, 0, 0, 0,
	0, 170, 0, 298, 267, 356, 0, 0, 297, 223,
	346, 0, 0, 355, 0, 0, 365, 370, 0, 0,
	0, 321, 182, 178, 181, 0, 136, 0, 281, 175,
	215, 0, 0, 0, 167, 0, 0, 0, 320, 343,
	134, 245, 344, 369, 154, 338, 246, 252, 164, 166,
	165, 146, 315, 342, 159, 168, 325, 302, 332, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 309, 308, 0, 205, 0, 0, 0, 290, 0,
	211, 135, 334, 373, 153, 217, 339, 0, 192, 258,
	172, 268, 269, 189, 132, 286, 239, 240, 238, 241,
	196, 0, 0, 0, 288, 311, 341, 155, 328, 0,
	0, 0, 0, 300, 0, 0, 0, 230, 185, 188,
	199, 206, 0, 295, 329, 362, 0, 148, 137, 335,
	657, 160, 310, 313, 371, 296, 140, 352, 330, 243,
	212, 213, 138, 0, 139, 293, 179, 195, 173, 262,
	0, 194, 283, 349, 350, 171, 374, 149, 364, 142,
	670, 363, 255, 0, 254, 366, 345, 353, 244, 232,
	0, 141, 351, 242, 231, 218, 187, 201, 279, 226,
	280, 202, 250, 249, 251, 666, 233, 0, 0, 0,
	326, 359, 375, 157, 0, 314, 340, 0, 287, 158,
	193, 186, 278, 671, 669, 660, 661, 216, 224, 292,
	372, 266, 299, 161, 358, 322, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 143, 221, 0, 289, 191, 360,
	0, 177, 0, 0, 0, 0, 0, 131, 144, 156,
	162, 176, 184, 190, 200, 203, 207, 208, 209, 214,
	229, 234, 235, 236, 237, 256, 257, 260, 261, 264,
	265, 271, 272, 273, 275, 667, 668, 285, 534, 294,
	301, 303, 304, 305, 307, 316, 317, 318, 319, 327,
	333, 347, 348, 367, 368, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 496, 478, 0, 0, 0, 0,
	0, 2271, 0, 0, 500, 0, 0, 0, 0, 0,
	538, 0, 0, 525, 0, 0, 491, 0, 485, 0,
	0, 0, 0, 0, 0, 499, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 0, 504, 0,
	0, 0, 0, 0, 512, 479, 0, 516, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 478, 0, 494,
	518, 0, 0, 0, 0, 0, 500, 492, 493, 495,
	522, 0, 524, 530, 0, 525, 0, 0, 491, 0,
	485, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 0,
	504, 0, 0, 0, 0, 0, 512, 479, 0, 516,
	0, 0, 0, 0, 0, 0, 480, 477, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 494, 518, 0, 0, 0, 0, 0, 0, 492,
	493, 495, 522, 0, 524, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 488, 481, 482, 483, 484, 486, 505, 506, 510,
	511, 528, 527, 526, 529, 533, 536, 535, 537, 487,
	489, 497, 507, 508, 509, 513, 514, 523, 519, 521,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 2280, 0, 0, 502, 0, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 517, 498, 531, 532,
	0, 0, 0, 488, 481, 482, 483, 484, 486, 505,
	506, 510, 511, 528, 527, 526, 529, 533, 536, 535,
	537, 487, 489, 497, 507, 508, 509, 513, 514, 523,
	519, 521, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	478, 0, 0, 0, 0, 0, 2278, 0, 0, 500,
	0, 0, 0, 0, 0, 538, 0, 0, 525, 0,
	0, 491, 0, 485, 0, 0, 0, 0, 520, 0,
	499, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 517, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 0, 504, 0, 0, 0, 0, 0, 512,
	479, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 478, 0, 494, 518, 0, 0, 0, 0,
	0, 500, 492, 493, 495, 522, 0, 524, 530, 0,
	525, 0, 0, 491, 0, 485, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 37, 72, 39, 40, 0, 0,
	503, 501, 0, 0, 0, 504, 0, 59, 0, 0,
	0, 512, 479, 78, 516, 0, 0, 41, 63, 64,
	0, 480, 477, 0, 60, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 494, 518, 0, 0,
	0, 0, 0, 0, 492, 493, 495, 522, 0, 524,
	530, 50, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 488, 481, 482, 483,
	484, 486, 505, 506, 510, 511, 528, 527, 526, 529,
	533, 536, 535, 537, 487, 489, 497, 507, 508, 509,
	513, 514, 523, 519, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 43, 74, 46, 45, 48,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	515, 517, 0, 531, 532, 0, 0, 65, 488, 481,
	482, 483, 484, 486, 505, 506, 510, 511, 528, 527,
	526, 529, 533, 536, 535, 537, 487, 489, 497, 507,
	508, 509, 513, 514, 523, 519, 521, 0, 36, 0,
	72, 39, 40, 0, 57, 58, 36, 0, 72, 39,
	40, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	59, 66, 41, 67, 0, 0, 78, 0, 0, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 515, 517, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 51, 75, 0, 53,
	54, 61, 0, 62, 2690, 0, 0, 0, 0, 2905,
	0, 0, 2690, 0, 0, 0, 0, 2901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 59, 43, 74,
	46, 45, 48, 78, 0, 2691, 0, 41, 0, 0,
	0, 0, 0, 2691, 0, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 49,
	77, 76, 0, 0, 0, 73, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 36, 0, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 2690,
	41, 0, 0, 0, 2895, 0, 0, 0, 0, 57,
	58, 0, 2692, 0, 79, 0, 0, 57, 58, 0,
	2692, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 81, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	2691, 68, 2690, 0, 0, 0, 0, 2881, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 2693, 75, 47, 53, 54, 61, 0, 62, 2693,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2692, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 36, 0, 72,
	39, 40, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 59, 0, 0, 0, 0, 0, 78, 68, 59,
	73, 41, 0, 0, 0, 78, 0, 0, 73, 41,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2692, 0, 0, 0, 0, 0, 2693, 75, 0, 53,
	54, 61, 0, 62, 66, 0, 67, 0, 0, 81,
	2870, 0, 0, 0, 0, 0, 0, 81, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 68, 0, 2690, 0, 0, 0, 0, 0, 0,
	0, 2690, 0, 0, 0, 0, 2817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2693,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 2691, 73, 0, 0, 0, 0,
	0, 0, 2691, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 79, 0, 0, 78, 0, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2692, 0, 0, 0, 0, 57, 58, 0, 2692,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 81,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 68, 2690, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2693, 75, 0, 53, 54, 61, 0, 62, 2693, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 73, 57, 58,
	0, 2692, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 68, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2693, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	34057, -1000, -319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1939, -1000, -1000, -1000, -1000,
	-1000, -1000, 1044, 284, -1000, 277, 287, 29905, 602, 3084,
	30903, -1000, -1000, -1000, 195, 397, 30903, 451, 446, 1322,
	1787, 1321, 47, -75, -83, 124, 23417, 22917, -1, -1000,
	1979, 1981, -1000, -1000, 561, 52, -1000, -1000, -1000, 20417,
	211, -1000, -1000, 1910, 1932, 1706, -1000, 13431, 561, 561,
	29406, 32899, -1000, 1978, 30903, 11932, -1000, 596, 586, -155,
	537, 537, 269, 537, 537, 601, -1000, 236, 886, -1000,
	-1000, -1000, -1000, 885, 30903, 26412, 551, 30404, 551, 551,
	551, 551, 551, 551, 551, 30903, -1000, 734, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30903, 1316, 1828, 960,
	271, -1000, -1000, -1000, 922, -1000, 349, 348, 334, 346,
	94, 1035, 1917, -1000, 1595, 1910, 1910, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 278, 582, 258, 211, 870, 1879,
	1827, 1826, 1207, 1822, 557, 1810, 1627, -57, -1000, 1315,
	30903, -1000, -1000, 1178, 1168, 1675, 1539, 637, 1673, -1000,
	-1000, 297, 600, 1619, 430, 1619, 1619, 1619, 1619, 1619,
	-87, 1619, 1619, 1619, 84, 1619, 151, 1619, 1619, 1619,
	1619, 1619, 1330, -1000, -1000, -1000, 315, 1535, 1566, 1672,
	543, -1000, -1000, -1000, -1000, 1656, 1908, 599, -1000, -115,
	1571, 21415, -1000, 1595, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1339,
	1812, 1140, 16425, 1762, -1000, -1000, 1001, 1968, -1000, 19918,
	733, -1000, 16425, 1383, 1595, -1000, -1000, 1595, -1000, -1000,
	-1000, 668, -1000, -1000, 18421, 18421, 18421, 18421, 18421, 18421,
	18421, 18421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, -1000, -1000,
	1595, -1000, 12932, 1595, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 16425, 1595, 1595, 1595, 1595, 1595, 1595,
	1595, 1595, 1595, 1595, 1595, 1595, 1595, 1595, 28907, 26911,
	30903, 1564, 1557, -1000, -1000, 731, 1587, -122, 32400, -1000,
	-1000, -1000, -1000, 31402, 25913, 866, -1000, -1000, -1000, -1000,
	1809, -1000, -1000, 730, -1000, 1939, -1000, -1000, 1511, 384,
	-1000, 3837, 33337, -1000, -1000, -1000, 1623, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 30404, 30903, 231, 1311, 930, 1301, 31402,
	31402, -1000, 219, 26412, 26412, 537, 264, 26412, 245, 1586,
	581, 1582, 580, 1327, 30903, 1864, 1671, 30903, 1300, 1297,
	31402, 31402, 26412, 26412, -1000, 11427, -1000, -1000, 960, -1000,
	1236, 16425, 537, 537, 30903, 30903, 30903, 30903, 30903, -1000,
	-1000, 960, 960, 960, 960, 910, 1967, 910, -1000, 910,
	-1000, -1000, 16425, -1000, 18421, 25414, 768, -1000, -1000, -1000,
	1293, 275, -1000, -1000, -1000, -1000, -1000, -1000, 1292, -1000,
	1790, 557, 557, -1000, 1235, 557, 1563, -1000, 862, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 557, -1000, 15926, -315, -1000, -1000, 1581, -1000, 314,
	-1000, -1000, 401, 401, 228, 26412, 26412, 26412, -1000, 1619,
	30404, -1000, 1619, 1619, 1619, -96, 1619, 1619, -1000, -1000,
	1619, -1000, -1000, -1000, -1000, -1000, 1619, -1000, -1000, -1000,
	1619, 1619, -1000, 1619, 1619, -1000, -1000, -1000, -1000, -1000,
	26412, 401, 166, 1580, 401, 26412, 26412, -1000, 73, 72,
	71, 70, -1000, -1000, -1000, -1000, 69, 68, -1000, -1000,
	1706, -1000, -1000, 211, -1000, -1000, 30903, -121, 21415, 1571,
	1899, 9912, -1000, -1000, -1000, 1974, 806, 1541, -1000, -1000,
	1570, -1000, 945, 725, 1141, 1722, -1000, -1000, -1000, 30903,
	-1000, 16425, 16425, 1128, -1000, 21914, -1000, -1000, -1000, -1000,
	9407, 827, 18421, 1077, 929, 18421, 18421, 18421, 18421, 18421,
	18421, 18421, 18421, 18421, 18421, 18421, 18421, 18421, 18421, 18421,
	1174, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1290,
	-1000, 211, 1211, 1211, 742, 742, 742, 742, 742, 742,
	742, 23916, 1898, 14429, 14429, 14429, 1898, 1339, 1339, 14429,
	14429, 14429, 14429, 14429, 14429, 14429, 14429, 1898, 1898, 14429,
	1339, 1339, 1339, 1339, 14429, 14429, 14429, 14429, 30404, 30404,
	1898, 14429, 14429, 14429, 1898, 1339, 1496, 1049, 12932, 14429,
	14429, 1339, 16425, 16425, 15427, 14928, 16924, 14429, 1898, 898,
	1049, 31402, -1000, -1000, 17922, -1000, -1000, -1000, -1000, -1000,
	1339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14429,
	14429, 14429, 14429, 802, 30903, -1000, 1419, 1585, -1000, -1000,
	-1000, 1894, 24915, -1000, 19419, -1000, 1595, 802, 1386, 26911,
	30903, -1000, -1000, 26911, 30903, 8902, 31901, 1552, -1000, -110,
	-129, -122, -1000, -1000, 741, -1000, -1000, -1000, 12432, -1000,
	10417, 1910, 1706, 6377, 10922, -1000, 33337, 1623, -1000, -68,
	-1000, -1000, -1000, 1607, -1000, 1607, 248, 11, 1607, 1607,
	1607, 1607, 1607, -12, -12, -12, -12, 12, -1000, -1000,
	-1000, -1000, -1000, 1622, 1621, -1000, 1607, 1607, 1607, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1617, 336,
	1610, 1610, 1610, 1610, 1610, 394, 394, -1000, 16425, 1630,
	1891, 585, 264, 1835, 1854, 1835, 325, -1000, 691, 1620,
	-1000, 690, 285, 1469, -1000, 178, 1449, 30903, -1000, -1000,
	-1000, -1000, -1000, 30903, 30903, 26412, 26412, 26412, 641, -1000,
	30903, 1568, -1000, -1000, -1000, -1000, -1000, 1543, -1000, 1449,
	-1000, -1000, -1000, -1000, -1000, 1049, 1289, 1282, 1879, -1000,
	-1000, -1000, 913, -1000, -1000, -1000, -1000, 960, 30903, 30903,
	30903, 1879, 960, 1049, 728, 1635, 1595, 1339, -1000, -1000,
	1276, -1000, 18421, 1563, 1563, -1000, 1563, 557, 1211, 1563,
	-1000, 1480, 1845, 1234, 30903, -1000, 21415, -59, -1000, -136,
	28408, -1000, -1000, -1000, 28408, -1000, 84, 173, -1000, 579,
	-1000, 1478, -1000, -1000, -1000, -1000, 1619, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28408, 128, 165, 28408,
	1543, 1964, -1000, -1000, -1000, -1000, 1916, -1000, 1898, 1339,
	548, -1000, -1000, -1000, 1595, 1423, 688, -1000, 1718, 1140,
	1140, 16425, -1000, -1000, -1000, 10417, 1913, -1000, 1730, 1729,
	1665, -1000, -1000, 827, 875, -1000, -1000, 1138, -1000, -1000,
	-1000, -1000, 680, 1595, -1000, 2813, -1000, -1000, -1000, -1000,
	1077, 18421, 18421, 18421, 728, 2813, 3272, 1000, 967, 742,
	852, 852, 762, 762, 762, 762, 762, 1724, 1724, -1000,
	-1000, -1000, 1339, -1000, -1000, -1000, 14429, 1471, -1000, -1000,
	1049, 679, 1471, 1471, 14429, -188, -188, 1471, 1339, 1471,
	1471, 1471, 1471, 1339, 1471, 14429, 14429, 1471, -188, -188,
	-188, -188, 1471, 1471, 1471, 1471, 1559, 1556, 14429, 1471,
	1471, 1471, 14429, -1000, 16425, -1000, 1339, 1471, 1471, -1000,
	991, 1121, 830, 1963, 1471, 800, 1961, 1471, 832, 18421,
	18421, 18421, 1471, 14429, 964, -1000, 16425, 1339, -1000, 877,
	1471, 1339, 1554, 1471, 1471, 202, 1595, -1000, 10417, 26911,
	26911, 26911, 26911, 26911, -1000, 1700, 1695, -1000, 1689, 1686,
	1699, 21415, 1473, 1339, 323, 24915, -1000, 1595, -1000, 20916,
	654, 592, 591, 589, 14429, 1946, 26911, 1399, -1000, 1399,
	-1000, 677, -1000, -1000, 31402, -122, -98, -1000, -1000, 1552,
	-1000, 1180, -1000, -1000, 1049, -1000, 651, 1812, 1898, 1550,
	5872, -1000, -1000, -1000, -1000, 384, -1000, -1000, -1000, 1618,
	4727, -1000, 1756, 709, 709, 746, 1253, 1747, -1000, -1000,
	633, -70, -1000, -1000, 1167, -12, -12, 1607, 1607, 232,
	1607, -1000, -12, -1000, -1000, -1000, 741, 1804, 741, 741,
	741, 741, -12, 1232, 1232, -1000, -1000, -1000, -1000, 1163,
	-1000, 1617, -1000, 1159, -1000, -1000, -1000, -1000, -1000, -1000,
	1041, 1661, 30404, -1000, 30903, -1000, 1835, -1000, -1000, -1000,
	114, -1000, -1000, -1000, 1951, -1000, -1000, 30404, 626, 30404,
	-1000, -1000, 95, 26412, 180, 308, 217, -1000, 577, -1000,
	575, -1000, -1000, -1000, -1000, -1000, -1000, 30903, 26412, -1000,
	-1000, -1000, 1946, 1273, 1272, -1000, -1000, -1000, 910, 960,
	-1000, -1000, 18421, 26412, -1000, 342, -1000, 2813, -1000, -1000,
	-1000, 802, 598, -1000, -1000, -94, -1000, -1000, 573, 635,
	630, 572, -1000, 120, 26412, -1000, 30404, -1000, 1960, 1959,
	127, 1957, 26412, -1000, 56, 1722, -1000, 1549, -1000, 719,
	763, 740, 407, 407, -1000, 821, 407, 1797, 1796, 798,
	-1000, 207, -1000, 9912, 9912, 1712, -1000, -1000, -1000, 30903,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8397,
	14429, -1000, 728, 2813, 3193, -1000, 18421, -1000, 1471, 14429,
	-188, 7892, -188, -188, 1471, -1000, 27909, -1000, -1000, -188,
	-1000, -188, -188, -188, -188, -188, 1471, 1471, -188, -1000,
	-1000, -1000, -1000, -188, -188, -188, -188, 18421, 18421, 1471,
	-188, -188, -188, 1339, 1049, -1000, -1000, -1000, 214, 1174,
	214, 18421, 18421, -1000, 18421, 18421, -1000, -1000, 18421, 3178,
	3133, 2986, -225, 1540, 893, -1000, 16425, 1101, -1000, -1000,
	-1000, -1000, -1000, -1000, 1660, 10417, 1595, 6882, -1000, 30404,
	1482, -1000, 840, 837, 1585, 1614, 1651, 1526, -1000, -1000,
	-1000, -1000, 1692, -1000, 1690, -1000, -1000, 1599, -1000, -1000,
	1548, 1595, 30404, 18421, 654, -1000, 1595, 1595, 1595, 1339,
	1939, 16425, 1399, -1000, -1000, 761, -1000, -1000, -118, -137,
	-1000, -1000, -1000, 9912, -1000, 6377, -1000, 6377, -1000, 22413,
	549, 1759, 386, -1000, 1253, -1000, -1000, 1253, -1000, 1253,
	-1000, -1000, -1000, 1611, -1000, 990, -1000, -1000, -1000, -1000,
	-1000, 18421, 1973, -1000, 1754, -1000, 1753, 1748, 1230, -1000,
	-1000, 1377, 741, 741, -12, -1000, -1000, 1607, -1000, 741,
	-1000, 815, -1000, -1000, -1000, -1000, 741, 1466, -1000, 1447,
	1547, -1000, 1442, 107, 30903, -1000, -1000, 1888, -1000, -1000,
	-1000, 1802, 821, 821, 821, 1645, -1000, -1000, -1000, -1000,
	1370, 1545, -1000, 3837, 1269, 1268, 1267, -1000, -233, 249,
	-1000, 26412, 142, 178, 418, 1266, 30903, 26412, -1000, -1000,
	-1000, -1000, -1000, 1879, -1000, 2813, 1449, -1000, -1000, -12,
	30903, -1000, 26412, 748, 27410, 26412, 126, 172, -1000, 26412,
	26412, 1956, 26412, 1543, 1229, 1665, 548, 4437, 1253, 525,
	-1000, -1000, 402, -1000, 4144, 1747, 1263, 33834, 33732, 30404,
	1745, 1744, 1261, 30903, 30404, -1000, -1000, 33439, 1260, 16425,
	-1000, 30404, -1000, -1000, 30404, 618, -1000, -1000, -1000, 1485,
	13431, -1000, -1000, 1339, -1000, 18421, 2813, -188, -1000, -1000,
	-1000, -1000, 616, -1000, -1000, -188, -1000, -1000, 1256, -1000,
	-1000, -1000, -1000, -1000, -1000, -188, -188, -1000, -1000, -1000,
	-1000, -1000, 3118, 2962, -188, -1000, -1000, -1000, -1000, 1339,
	1607, 1607, -1000, 1607, 1610, -1000, 1607, 32, 1607, 8,
	1339, 1339, 2895, 1904, 1407, 1340, 877, 18421, 18421, 18421,
	1595, -178, -1000, 1049, 16425, -1000, 1837, 1525, 1537, -1000,
	-1000, 13930, 1339, 1727, 1423, -1000, 20417, 1408, -1000, 1939,
	10417, 16425, 16425, -1000, -1000, 16425, 1609, -1000, 16425, -1000,
	-1000, -1000, -1000, 30404, 303, -1000, 16425, 1408, 1042, -1000,
	30404, 30404, 30404, -1000, 1910, 1049, -1000, -1000, -1000, -1000,
	5872, -1000, 1406, -1000, 1607, 1607, 1736, -1000, 709, -1000,
	-1000, -1000, -1000, 30404, -1000, 2813, -61, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 741, -1000, -1000, -1000, -1000, -1000,
	-12, 1228, -12, 1154, -1000, 1150, -1000, -1000, -266, 1606,
	211, -1000, 821, 814, 808, 1226, 30903, 117, 626, -1000,
	3837, 3837, 3837, 133, 105, -1000, 983, -1000, -1000, -1000,
	1225, 1224, 1221, 1449, 182, 982, 153, -1000, 1868, -1000,
	-1000, 960, -80, -1000, 172, -1000, -1000, -1000, 172, -1000,
	-1000, 157, 1543, 1543, 26412, 1543, -1000, -1000, -1000, 33439,
	369, 3837, 3837, 1630, 709, 1734, 386, -1000, -1000, -1000,
	-1000, -1000, -1000, 1255, -1000, 673, -1000, 558, 369, 33439,
	1049, 722, 1839, 9912, 1944, 26911, -1000, -1000, -1000, 2813,
	-1000, 7387, -1000, 793, -1000, -1000, -1000, 18421, 18421, -1000,
	-1000, -1000, 230, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18421, 18421, 18421, 18421, -1000, 877, 877, 877, 18421,
	1339, 1208, 1049, 1733, -1000, 1595, -1000, -1000, 1595, 204,
	-1000, 30404, 1910, -1000, 1049, 1049, 1049, 30404, 1049, 1382,
	-1000, 1595, 18920, -1000, 21415, 1374, 1374, 1374, -1000, 634,
	22413, 1861, 1861, -1000, 1253, 1369, -1000, 1595, 1595, -1000,
	741, -1000, 741, 1349, 1345, -1000, 22413, -1000, -1000, 803,
	-1000, -1000, -1000, -1000, -1000, 1915, -1000, 117, -1000, 1191,
	263, 234, -1000, 260, 254, 252, 247, 205, -1000, -1000,
	-1000, -1000, 332, 133, -1000, -43, 1132, 818, 1795, 105,
	-1000, 1107, 1073, 1064, 1056, 193, -1000, -1000, -1000, -1000,
	206, 178, -1000, 414, 1190, -1000, 1782, 1778, 1878, 1878,
	125, 1543, 1410, 1343, -1000, -1000, 1254, -1000, -1000, 1604,
	1253, 1603, -1000, 1252, -1000, -1000, 30404, -1000, 369, 1834,
	1831, 1595, -1000, 1942, 1930, 1399, 13431, -1000, -1000, 1939,
	1929, 877, 877, -1000, -1000, 877, 877, 877, 877, -1000,
	-1000, -1000, 187, -1000, -1000, 1972, -1000, 1537, 1595, -1000,
	211, -1000, -1000, 1367, -1000, 30404, -1000, -1000, 654, -1000,
	-1000, -1000, 634, -1000, 1251, 821, 1188, -1000, -1000, -1000,
	-1000, 363, -1000, -1000, -1000, -1000, 1362, -1000, 211, -1000,
	-1000, 280, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1786,
	1785, 279, -1000, 1187, 1182, -1000, 410, 1149, 696, -194,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 328, 1248, -1000, 149, -1000, -1000, 415, 1765, 1769,
	1927, -1000, 26412, -1000, -1000, 26911, -1000, -1000, 633, 633,
	22413, 1630, 22413, -1000, -1000, -1000, 18421, -1000, 753, -191,
	16425, 16425, 1944, -1000, 804, 16425, -1000, -1000, -1000, -1000,
	-1000, -1000, 1339, 177, -243, 10417, 1537, 1339, -1000, -1000,
	-1000, -1000, -1000, 1034, -1000, 30903, 634, -1000, 291, 34821,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1025, -1000,
	-1000, 1111, 403, 148, -1000, 1873, -1000, 1599, 1007, 1778,
	1924, 1776, 1772, -1000, 1181, -235, 1399, 1360, 1597, 1354,
	2813, 1348, -1000, 30404, -1000, 30404, -1000, 1049, 1531, -1000,
	1049, 1942, -1000, 1339, 164, 164, 1521, -1000, 1710, -228,
	-246, 1475, -1000, -1000, 1596, -1000, 634, -1000, 292, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16425, 16425, 5367, 34821, 131, -1000, 121, -1000, -1000, -1000,
	1175, -1000, 1781, -1000, 1129, -1000, 1922, 1921, -1000, 174,
	1944, 634, 22413, 634, -1000, 753, 1726, 1451, -1000, 1871,
	16425, -191, -1000, -1000, 243, -1000, 791, 282, 782, -1000,
	1211, -1000, -1000, 1709, -1000, 30404, -1000, 1245, 1243, -1000,
	975, 1097, 212, 179, 3340, -1000, -1000, -1000, -1000, -321,
	-1000, -1000, -1000, -1000, -1000, -1000, 1122, 1036, 24415, 1942,
	-1000, 1336, -1000, -1000, 293, 30404, 1595, -1000, -1000, 955,
	-1000, -1000, -1000, -1000, -1000, 30404, -238, 1326, -1000, -1000,
	-1000, 1058, -1000, 16425, 34821, 1914, 1912, 1902, 1830, 9912,
	34649, -1000, -1000, -1000, -1000, 106, 1449, -191, 634, 302,
	-1000, -1000, 243, -1000, -244, 1641, 370, 957, 34821, -1000,
	1011, -322, 450, 211, 482, 18421, -1000, -1000, -1000, 26412,
	-1000, -1000, 1595, -1000, -247, 1640, 1638, 1955, -1000, -1000,
	-1000, -1000, -1000, -1000, 34821, -1000, -325, 34821, 5037, -1000,
	-1000, -1000, 34641, -1000, -1000, -1000, -1000, 189, -1000, -1000,
	2813, 1449, 17423, -1000, -1000, 1971, -1000, 1952, 695, 695,
	-1000, -326, 34460, -327, 530, 34821, 927, -1000, 16425, -1000,
	482, -1000, 877, 1339, -1000, -1000, -1000, 392, 1161, -1000,
	34397, 939, 34821, -1000, -328, 413, 34821, -1000, 951, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34280, -1000, -329,
	34821, 412, 34272, -330, -1000, 411, 34821, -1000,
}

var yyPgo = [...]int{
	0, 2436, 2435, 143, 2434, 195, 2433, 2427, 2426, 22,
	20, 13, 24, 2425, 2113, 2111, 2093, 2091, 2086, 2421,
	19, 2420, 2419, 2081, 2415, 2414, 2079, 2077, 2074, 2069,
	2413, 2408, 2404, 2062, 2054, 2052, 7, 2401, 18, 2400,
	2, 147, 171, 2399, 3, 2398, 2395, 6, 2387, 2384,
	2047, 2382, 2381, 2380, 87, 2379, 2044, 2040, 2378, 2013,
	2003, 2376, 2375, 2001, 1990, 1988, 2374, 187, 2373, 2372,
	2371, 201, 69, 152, 2370, 2367, 2365, 114, 82, 2015,
	113, 46, 106, 250, 2363, 26, 47, 193, 2362, 158,
	2360, 139, 2359, 162, 2358, 148, 97, 99, 2357, 2356,
	170, 2353, 2351, 2349, 145, 2345, 2338, 173, 120, 2335,
	2334, 163, 2333, 63, 169, 49, 39, 2330, 2327, 2323,
	2315, 2313, 31, 190, 2312, 94, 141, 2311, 2309, 90,
	2305, 2304, 179, 2303, 2302, 2301, 142, 45, 2299, 2292,
	50, 2290, 58, 75, 2288, 43, 2280, 138, 2277, 2276,
	34, 17, 2275, 62, 2274, 55, 2268, 137, 257, 364,
	2267, 15, 30, 16, 2255, 36, 9, 27, 44, 28,
	61, 85, 132, 105, 2254, 38, 40, 121, 100, 112,
	42, 2253, 155, 2252, 89, 159, 125, 140, 156, 2235,
	2234, 2230, 1014, 2228, 122, 95, 2223, 74, 1257, 172,
	117, 2219, 88, 2215, 2214, 2213, 2205, 2204, 104, 118,
	2203, 2202, 175, 176, 178, 110, 35, 930, 1574, 12,
	165, 2201, 48, 2200, 2198, 2193, 2913, 116, 96, 101,
	2192, 111, 52, 51, 2187, 2186, 2185, 2184, 2183, 2181,
	1397, 2180, 2179, 2178, 2175, 467, 186, 2173, 129, 128,
	127, 2172, 154, 2171, 2170, 134, 107, 2166, 2165, 2164,
	2162, 136, 76, 149, 2161, 123, 133, 109, 2160, 80,
	2159, 2158, 67, 66, 2156, 2155, 2154, 93, 98, 2151,
	68, 41, 32, 70, 29, 2150, 2149, 77, 84, 2148,
	33, 2147, 8, 5, 11, 2145, 2144, 2143, 2142, 2138,
	2137, 2136, 79, 2135, 2133, 60, 2130, 2126, 2123, 37,
	2122, 2121, 2119, 146, 119, 91, 166, 194, 10, 2118,
	2116, 4, 2115, 124, 2102, 53, 2098, 56, 2096, 2088,
	57, 2083, 2064, 59, 2059, 2038, 167, 1696, 2617, 2017,
	164, 160, 54, 73, 2008, 1999, 0, 743, 174, 157,
	1994, 1966,
}

var yyR1 = [...]int{
	0, 345, 345, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 348, 348, 102, 102, 100, 100, 101,
	101, 177, 177, 12, 12, 12, 182, 182, 187, 187,
	187, 190, 190, 190, 190, 167, 168, 169, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	319, 319, 328, 328, 328, 329, 329, 327, 327, 327,
	327, 327, 331, 331, 332, 332, 330, 330, 330, 330,
	334, 334, 335, 335, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 322, 322,
	322, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 337, 337, 338, 338, 339, 339, 340, 340,
	340, 340, 341, 341, 341, 341, 341, 342, 342, 342,
	342, 342, 342, 342, 343, 343, 344, 344, 2, 300,
	300, 301, 301, 302, 302, 302, 302, 303, 303, 304,
	304, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 24, 214, 214, 211, 211, 211, 212, 212, 213,
	213, 213, 321, 321, 321, 315, 315, 315, 317, 317,
	316, 316, 316, 318, 318, 323, 323, 323, 323, 323,
	325, 325, 325, 325, 325, 325, 326, 326, 326, 324,
	324, 48, 48, 49, 49, 49, 156, 156, 156, 13,
	13, 13, 13, 13, 19, 21, 21, 37, 37, 38,
	22, 22, 22, 22, 39, 39, 40, 25, 25, 25,
	25, 25, 25, 46, 46, 46, 45, 45, 44, 44,
	44, 44, 44, 44, 23, 23, 23, 23, 47, 47,
	42, 42, 41, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 26, 26, 26, 26, 26,
	26, 18, 299, 299, 299, 36, 36, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 52, 274, 275,
	275, 275, 275, 275, 275, 275, 275, 262, 262, 263,
	233, 233, 233, 233, 233, 233, 233, 233, 232, 232,
	232, 232, 236, 236, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 235, 235, 235, 235, 235, 235,
	235, 235, 237, 237, 237, 237, 237, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 239, 239, 239, 239, 239, 239, 239, 239,
	261, 261, 240, 240, 255, 255, 256, 256, 256, 253,
	253, 254, 254, 243, 244, 257, 245, 245, 245, 246,
	246, 246, 247, 247, 252, 252, 251, 251, 251, 251,
	251, 251, 248, 248, 248, 248, 249, 249, 250, 260,
	260, 260, 260, 260, 241, 35, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 286, 286,
	204, 204, 205, 205, 264, 264, 284, 284, 283, 283,
	282, 282, 282, 273, 273, 279, 279, 279, 279, 279,
	279, 279, 279, 268, 268, 268, 267, 267, 269, 269,
	272, 272, 281, 281, 280, 280, 265, 265, 265, 287,
	287, 287, 287, 287, 266, 266, 266, 266, 288, 270,
	270, 271, 271, 271, 293, 294, 292, 292, 292, 292,
	292, 119, 119, 119, 276, 276, 276, 277, 277, 277,
	278, 278, 278, 297, 297, 296, 296, 50, 51, 55,
	55, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 155, 155, 155,
	209, 209, 291, 289, 289, 290, 290, 15, 15, 53,
	53, 320, 320, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 295, 295, 295, 17, 17, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 84, 196, 196, 195, 195, 194, 194,
	194, 197, 197, 197, 230, 230, 230, 58, 58, 62,
	62, 65, 65, 65, 63, 64, 27, 28, 28, 28,
	28, 29, 210, 210, 60, 60, 61, 61, 61, 61,
	76, 76, 350, 350, 59, 351, 67, 68, 68, 69,
	69, 69, 200, 200, 73, 73, 73, 71, 71, 71,
	72, 72, 78, 78, 82, 82, 82, 82, 81, 81,
	81, 81, 158, 158, 163, 223, 223, 139, 139, 159,
	159, 164, 164, 164, 165, 165, 166, 166, 166, 166,
	166, 161, 161, 160, 160, 162, 127, 127, 221, 221,
	221, 220, 220, 220, 220, 86, 86, 89, 89, 91,
	91, 91, 91, 91, 94, 141, 141, 112, 112, 113,
	113, 113, 113, 113, 125, 125, 176, 176, 175, 175,
	178, 178, 90, 92, 92, 92, 92, 97, 97, 98,
	98, 99, 99, 208, 208, 228, 228, 228, 103, 103,
	103, 105, 104, 104, 104, 104, 106, 106, 107, 107,
	109, 110, 110, 108, 108, 114, 114, 111, 115, 115,
	115, 115, 116, 116, 83, 83, 83, 83, 83, 83,
	83, 193, 193, 118, 118, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 135, 135, 135, 135, 135,
	135, 120, 120, 120, 120, 120, 120, 120, 77, 77,
	136, 136, 136, 96, 95, 95, 80, 80, 79, 79,
	137, 137, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 130, 130, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 349, 349, 132, 131, 131,
	131, 131, 131, 131, 74, 74, 74, 74, 74, 229,
	229, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 148, 148, 75, 75, 146, 146,
	147, 149, 149, 145, 145, 145, 122, 122, 122, 122,
	122, 122, 122, 122, 124, 124, 124, 150, 150, 138,
	138, 85, 151, 151, 152, 153, 153, 154, 154, 157,
	170, 170, 170, 171, 171, 171, 171, 126, 126, 172,
	172, 172, 121, 121, 121, 121, 121, 121, 121, 174,
	174, 173, 173, 173, 173, 179, 179, 140, 140, 143,
	143, 142, 144, 180, 180, 184, 184, 181, 181, 185,
	185, 185, 185, 188, 188, 189, 189, 189, 186, 186,
	186, 183, 183, 183, 225, 225, 225, 191, 191, 201,
	201, 198, 198, 199, 199, 192, 192, 242, 242, 207,
	207, 206, 206, 206, 202, 202, 202, 203, 203, 222,
	222, 218, 218, 224, 224, 219, 219, 226, 226, 227,
	227, 298, 298, 258, 258, 308, 308, 259, 259, 309,
	309, 311, 311, 306, 306, 307, 307, 310, 310, 30,
	312, 312, 313, 313, 314, 314, 314, 314, 31, 32,
	32, 32, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 346, 347,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 0, 3,
	1, 1, 0, 1, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 2, 4, 3, 3, 5,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 0, 2, 0, 2, 1, 5, 1,
	3, 5, 4, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 3, 8, 2, 2, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 5, 4, 4, 4, 2, 2, 2,
	6, 2, 4, 4, 4, 5, 8, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 4, 4, 1, 1, 2, 3, 4, 4,
	5, 3, 1, 1, 3, 3, 1, 1, 1, 1,
	0, 3, 1, 1, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 3, 0, 1,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 3, 0, 5,
	5, 5, 0, 2, 1, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 1, 1, 5, 6, 6,
	6, 5, 5, 5, 6, 5, 5, 6, 5, 5,
	5, 5, 6, 5, 5, 5, 4, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 6, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 1,
	3, 1, 0, 2, 1, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 1, 1, 0,
	2, 4, 2, 4, 1, 3, 5, 4, 6, 0,
	3, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -345, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 299, -65, 302, 303, -350, -210, 227, 228, 20,
	37, 304, 306, 31, 32, 190, 244, 246, 271, -5,
	-88, -6, 8, 398, 139, 300, 171, 170, 26, 447,
	-346, 68, 510, -153, 15, -67, -351, -67, -67, -67,
	-67, -67, -274, -208, 106, 68, 23, -203, -214, 87,
	389, 146, -212, 240, 242, -201, -202, -211, 200, 210,
	44, 157, 156, 211, 147, 240, 147, 148, 150, 389,
	146, 183, 182, 240, 242, 147, -108, -226, 72, -216,
	160, 458, 265, 444, 211, 252, 197, 299, 313, 315,
	307, 342, 330, 445, 459, 161, 222, 145, 298, 328,
	331, 375, 159, 255, 215, 278, 460, 364, 370, 225,
	302, 384, 461, 162, 219, 221, 220, 205, 226, 36,
	172, 326, 261, 319, 230, 200, 462, 452, 194, 317,
	28, 195, 193, 387, 463, 289, 372, 347, 290, 264,
	464, 449, 259, 371, 322, 318, 271, 163, 157, 291,
	465, 348, 352, 466, 376, 245, 292, 467, 468, 469,
	149, 251, 311, 312, 470, 201, 378, 256, 346, 33,
	158, 446, 48, 180, 379, 38, 350, 37, 356, 471,
	288, 345, 340, 357, 472, 473, 474, 475, 269, 267,
	268, 270, 344, 310, 339, 212, 217, 53, 144, 354,
	353, 355, 218, 374, 335, 333, 476, 477, 260, 164,
	478, 479, 320, 18, 480, 481, 382, 175, 262, 263,
	42, 482, 483, 484, 110, 485, 486, 487, 373, 349,
	351, 199, 114, 323, 154, 488, 266, 369, 275, 448,
	249, 111, 380, 316, 490, 294, 306, 179, 174, 383,
	284, 491, 228, 492, 493, 494, 166, 495, 243, 242,
	303, 276, 112, 304, 366, 223, 496, 497, 498, 499,
	209, 192, 386, 377, 52, 227, 361, 500, 279, 295,
	309, 156, 229, 501, 253, 300, 43, 7, 216, 257,
	367, 277, 224, 210, 213, 337, 181, 502, 503, 324,
	325, 343, 308, 338, 301, 184, 176, 109, 385, 362,
	450, 240, 296, 332, 329, 187, 336, 504, 505, 214,
	188, 305, 381, 254, 327, 363, 147, 131, 331, 375,
	138, 365, 366, 372, -268, 373, 182, 185, -230, 147,
	-196, 364, 245, 266, 419, 188, 189, 148, 149, 33,
	377, 376, 368, -226, 151, 305, -76, 142, 177, -108,
	-47, 72, 229, -47, 30, 72, 72, 36, 72, 304,
	367, 367, 75, 448, 191, 21, -337, -318, 275, -336,
	-316, 139, 138, 10, 140, 280, 281, 282, 148, 8,
	31, 489, 165, 283, 284, 6, 169, 285, 286, 183,
	9, 287, -321, 74, 72, -216, 21, -337, -318, 275,
	-205, -204, 297, 356, 6, -69, 5, -192, 152, 301,
	-87, 457, -93, -228, -226, -217, 74, 258, 168, 248,
	359, 415, 416, 417, 418, 191, 419, 432, 414, 433,
	97, 189, 280, 281, 272, 282, 167, 434, 115, 198,
	177, 237, 368, 236, 241, 420, 421, 435, 436, 437,
	422, 423, 247, 438, 439, 508, 250, 509, 273, 441,
	489, 442, 283, 440, 285, 186, 426, 425, 424, 427,
	286, 409, 410, 428, 51, 430, 429, 431, 81, -3,
	-171, 17, 16, -73, 54, 55, -68, -81, 122, -83,
	-226, -117, 89, -123, 29, 72, -216, 24, -122, -217,
	-118, -145, -144, -96, 131, 132, 133, 120, 121, 128,
	90, 134, -130, -128, -129, -131, -133, -134, 74, 73,
	82, 75, 76, 77, 78, 83, 415, 416, 417, 418,
	419, 432, 433, 167, 434, 177, 420, 421, 435, 436,
	437, 422, 423, 438, 439, 441, 442, 440, 426, 425,
	424, 427, 409, 410, 428, 430, 429, 431, 84, 85,
	-218, -142, -346, 58, 59, 146, 399, 400, 401, 402,
	403, 443, 407, 92, 47, 388, 397, 396, 395, 393,
	394, 390, 392, 391, 153, 389, 126, 398, -192, -192,
	11, -100, -101, -108, -111, -226, -181, 301, -188, -185,
	376, 377, -186, -189, -183, -145, 356, 486, 487, 375,
	331, 374, -218, -226, -2, -5, 6, -108, -275, -263,
	-266, -219, 162, -288, -218, -215, 159, 72, -216, 258,
	143, 168, 139, 88, 451, 23, 25, 248, 359, 415,
	91, 131, 416, 417, 418, 16, 20, 92, 130, 81,
	399, 191, 419, 138, 62, 414, 390, 392, 388, 389,
	365, 29, 10, 26, 170, 204, 22, 124, 140, 95,
	96, 97, 189, 173, 280, 281, 24, 171, 272, 85,
	282, 167, 115, 198, 19, 65, 177, 237, 11, 368,
	185, 244, 13, 413, 113, 236, 14, 241, 153, 152,
	108, 202, 148, 60, 8, 134, 27, 105, 56, 420,
	421, 454, 45, 190, 455, 58, 106, 17, 393, 394,
	31, 443, 422, 178, 456, 423, 126, 207, 63, 50,
	247, 89, 83, 508, 34, 86, 66, 293, 87, 15,
	203, 61, 411, 250, 509, 273, 182, 489, 206, 457,
	165, 107, 283, 141, 398, 274, 246, 59, 146, 6,
	408, 30, 169, 285, 208, 186, 426, 425, 424, 427,
	57, 401, 402, 428, 286, 506, 147, 94, 409, 410,
	151, 183, 84, 5, 44, 32, 9, 287, 64, 67,
	395, 396, 397, 47, 51, 430, 429, 431, 150, 93,
	12, 412, 447, 148, 150, 398, -199, 153, -199, 183,
	182, -213, 208, -199, -199, 147, -212, 98, 98, -53,
	-108, -320, -315, -321, -198, 153, -218, -198, -198, -198,
	-198, -198, -198, -198, -108, 135, -108, 72, 30, -197,
	106, 12, 389, 146, 147, 182, 183, 150, -270, 11,
	108, 186, 186, 186, 187, 186, -195, 367, 369, 184,
	370, 371, 12, -84, 106, 19, -346, -171, -171, 72,
	304, 151, -61, -3, -11, -9, -10, -3, 98, -125,
	23, 30, 30, 74, 51, 30, -42, -41, -43, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 30, -299, 68, -258, 356, 72, -312, -313, -108,
	75, 75, 66, 66, 69, 151, 69, 66, -338, 276,
	68, -338, 242, 276, 277, 210, 240, 150, -338, -338,
	242, -338, -338, -338, -338, -338, 367, -338, -338, -338,
	278, 279, -338, 365, 150, -338, -338, -338, -338, -338,
	71, 66, 69, 266, 66, 11, 66, -285, 131, 289,
	290, 291, 292, 288, 266, 293, 294, 295, 186, 296,
	-67, -7, -5, -346, 21, 22, 147, 380, 69, -87,
	-174, -346, -347, 70, -172, 19, 31, -126, 75, 78,
	-154, -157, -83, -226, 50, -71, 21, 22, 80, 11,
	-221, 88, 87, 105, -220, 23, 72, -216, -217, 74,
	135, -83, -120, 108, 89, 106, 107, 91, 117, 116,
	127, 120, 121, 122, 123, 124, 125, 126, 118, 119,
	130, 98, 99, 100, 101, 102, 103, 104, -193, -346,
	-96, -346, 136, 137, -123, -123, -123, -123, -123, -123,
	-123, -123, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -3, -137, -83, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -148,
	-83, -346, -349, -132, -346, -349, -132, -349, -132, -349,
	-346, -349, -132, -349, -132, -349, -349, -132, -349, -346,
	-346, -346, -346, -110, 27, -108, -86, -89, -91, -92,
	-112, -95, -346, -90, -108, -96, 72, -108, -100, -348,
	69, 11, 67, -348, 69, 135, 69, -182, -187, 378,
	380, 301, -186, -186, -225, -218, 74, 29, 98, 30,
	135, -153, -67, 70, 69, -266, 162, 159, -232, -236,
	-238, -237, -239, -234, -235, 328, 331, 335, 333, 329,
	334, 131, 332, 337, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 30, 172, 324, 325, 326, 327,
	348, 349, 350, 351, 352, 353, 354, 355, 307, 330,
	445, 308, 309, 310, 311, 312, 313, 315, 316, 317,
	318, 319, 320, 321, 322, 72, -217, -288, 68, -218,
	-108, -214, -212, 72, 89, 72, -107, -218, -226, -114,
	-218, -226, 209, -324, -323, -315, -318, -199, -213, -315,
	214, 212, 213, 69, 151, 69, 151, 71, -100, 24,
	66, -102, -108, 72, 72, -107, -114, -317, -315, -318,
	-227, -226, -215, -197, 74, -83, -199, -199, -108, -108,
	-108, -108, -108, -197, -197, -197, -197, -194, 11, 108,
	11, -194, -194, -83, -123, -315, 391, 122, 72, 72,
	304, 72, 34, -42, -42, 74, -42, 69, 98, -42,
	70, -137, -298, 507, 69, -314, 23, 380, 381, 357,
	-340, 147, 185, 182, -340, -336, 284, -317, -316, -315,
	-338, -339, -218, -338, -338, -338, 367, -338, -338, -338,
	-338, -338, -338, -338, -338, -321, -340, 244, 69, -340,
	-317, -315, 288, 288, 288, 288, 288, 288, -73, -3,
	-108, 381, 382, -93, 23, -173, -219, 9, 108, 69,
	18, 69, -170, 25, 26, 135, -124, 51, 75, 78,
	-200, 49, -108, -83, -83, -135, 83, 89, 84, 85,
	-220, 122, -227, -219, -215, -123, -136, -142, -96, 79,
	108, 106, 107, 91, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -229,
	72, 74, 72, -122, -122, -218, -71, -79, -82, 122,
	-83, -226, -79, -79, -71, -347, -347, -79, -82, -79,
	-79, -79, -79, -82, -79, -71, -71, -79, -347, -347,
	-347, -347, -79, -79, -79, -79, -218, -218, -71, -79,
	-79, -79, -71, -347, 69, -347, -3, -79, -79, -347,
	-83, -83, -145, 74, -79, -145, 74, -79, -123, 404,
	405, 406, -79, -71, -146, -147, 93, -145, -347, -123,
	-79, -80, -79, -79, -79, -177, 110, -108, 30, 69,
	-103, -105, -104, -106, 56, 60, 62, 57, 58, 59,
	63, -208, -86, -94, 47, -346, -113, 110, -115, 23,
	-228, 64, 152, 65, -346, -177, 67, -86, -108, -86,
	-111, -226, 122, -185, -188, 69, 379, 381, 382, -182,
	-246, 130, 66, 86, -83, -219, -227, -171, -73, -276,
	-277, -278, -219, 74, 75, -263, -264, -265, -266, -279,
	162, -287, 154, 156, 157, 44, -267, 163, 148, 45,
	-233, -253, 362, -240, 68, -240, -240, 336, 328, 331,
	329, -240, -240, -240, -240, -240, -245, 331, -245, -245,
	-245, -245, 329, 68, 68, -240, -240, -240, -255, 68,
	-255, 323, -256, 68, -256, -256, -256, -256, -288, -288,
	-83, -222, 67, 23, 150, -252, -251, -248, -249, -250,
	-247, 29, 24, -252, -48, 197, 168, 135, 68, 135,
	200, 201, -319, 69, 29, -325, 241, -108, -108, -108,
	-315, -315, -321, -295, 166, 161, -108, 69, 69, 72,
	72, -125, -271, 11, 108, -197, -226, -226, -108, -125,
	-197, -77, 173, 67, -349, -347, 72, -123, -41, -122,
	70, -109, 27, 74, -313, -228, 356, 381, -341, 122,
	-218, -341, -344, 447, 151, 70, 69, -338, -341, 262,
	244, -341, 11, -286, 19, -71, -347, -55, -54, 143,
	140, 141, 144, 145, -291, 359, 139, 194, 193, 179,
	-95, -346, -347, 69, 135, 52, -126, -126, -157, -191,
	19, 11, 47, 47, -72, 57, 83, 84, 85, 135,
	-346, -136, -123, -123, -123, -77, 88, -347, -79, 69,
	-347, 135, -347, -347, -79, -158, 411, -158, -347, -347,
	-347, -347, -347, -347, -347, -347, -79, -79, -347, -158,
	-158, -158, -158, -347, -347, -347, -347, 69, 69, -79,
	-347, -347, -347, -80, -83, -347, -347, -347, 69, 67,
	23, 11, 11, -347, 11, 11, -347, -347, 11, -123,
	-123, -123, -347, -79, -149, -147, 95, -83, -347, -347,
	-347, -347, -347, -347, -121, 30, 47, -346, -3, -346,
	-180, -184, -145, -215, -89, -91, -91, -89, -91, 56,
	56, 56, 61, 56, 61, 56, -104, -228, -347, -347,
	-141, 196, -346, 34, -228, -115, 148, 148, 148, -80,
	-116, 12, -86, -116, -116, 135, -187, -190, 383, 380,
	386, 72, 74, 135, -172, 69, -278, 98, -266, 68,
	72, -272, -217, 45, -267, 148, 45, -269, -267, -267,
	-272, 72, -272, 45, 83, 89, -243, -244, -257, -260,
	-241, 29, 66, 359, 154, 45, 44, 157, 81, -254,
	363, 75, -245, -245, -240, -240, -240, 336, -240, -245,
	-246, 30, -246, -246, -246, -246, -245, -261, 74, -261,
	75, -255, 75, 70, 66, -218, -167, -108, -249, -248,
	-250, 331, 375, 130, 387, -49, 8, 9, 10, -218,
	-300, -301, -302, 72, 108, 202, 203, -218, -328, 274,
	-323, 242, 251, 88, 16, 447, 151, 151, -108, -315,
	-116, 72, 72, -194, -197, -123, -318, 188, 189, -177,
	147, -314, 151, 135, 135, 151, 265, -317, -218, 11,
	11, 262, 11, -317, 298, -200, 69, -209, -267, -297,
	-265, -266, -296, 155, 162, 163, -209, 162, 159, -267,
	163, 154, 155, -206, -267, 151, 23, -209, -209, -273,
	98, -209, 33, 33, 110, -219, -219, 53, -108, -78,
	-168, 122, -219, -80, -77, 88, -123, -347, -82, -159,
	-158, 122, -227, -159, -159, -347, -218, -163, -346, -158,
	-159, -159, -158, -158, -158, -347, -347, -158, -159, -159,
	-159, -159, -123, -123, -347, -159, -159, -159, -347, -231,
	131, 328, 172, 326, 319, 346, 333, 361, 324, 362,
	-229, -231, -123, -123, -123, -123, -123, 11, 11, 11,
	444, -153, 97, -83, 94, -179, 66, -180, -140, -143,
	-142, -346, -3, -347, -173, 6, 447, -178, -218, -116,
	69, 98, 98, -98, -97, 66, 67, -99, 66, -97,
	56, 56, -176, 68, 69, -142, -346, -178, -123, -115,
	-346, -346, -346, -347, -153, -83, -116, 380, 384, 385,
	-277, -278, -281, -280, -218, -217, 154, -287, 44, -287,
	-272, -272, -272, 68, 83, -123, 9, 45, 45, 45,
	74, 70, -246, -246, -245, -240, -246, 72, 131, -246,
	70, 69, 70, 69, 70, 69, -119, 463, 89, -108,
	-169, 23, 30, -273, -273, -273, 66, 70, 69, -232,
	72, 72, 72, -331, 447, 247, -329, -327, 253, 254,
	255, 256, 257, -318, 252, -325, 249, 74, 72, -108,
	-315, -125, -245, -108, -317, 122, 122, -218, -317, 262,
	-343, 447, -317, -317, 11, -317, 74, -72, -54, 68,
	-262, 72, -217, -272, -202, 154, 72, 72, 72, -217,
	72, -217, -218, 45, 45, 72, -108, -218, -262, 72,
	-83, -218, -218, 135, -116, 11, 69, -81, -347, -123,
	-159, 135, -159, -223, 72, -159, -159, 69, 69, -159,
	-347, -240, -240, -240, -256, -240, 312, -240, 312, -347,
	-347, 19, 19, 19, 19, -347, -123, -123, -123, -346,
	-75, 408, -83, 28, -179, 69, -347, -347, 47, -347,
	-347, 69, -153, -184, -83, -83, -83, 68, -83, -175,
	-218, 196, -347, -115, -208, -175, -175, -175, -171, 70,
	69, -240, -240, 45, -269, -175, -129, 409, 410, -246,
	-245, 74, -245, 75, 75, 463, 68, -3, -167, -273,
	72, 131, 72, 131, 74, -108, -303, -304, -305, 81,
	446, 89, 204, 205, 164, 206, 207, 208, -302, -232,
	-232, -232, -334, -335, -333, 250, 272, 273, 258, -332,
	-330, 267, 268, 269, 270, 88, 74, 74, 74, -326,
	241, 88, 250, 16, 23, -197, -306, -195, -343, -343,
	244, -317, -78, -262, -155, 167, 168, -232, -232, -222,
	-269, 45, 72, -207, 151, 23, 151, -155, -262, 30,
	140, 27, -219, -150, 13, -86, -168, -168, 122, -139,
	110, -123, -123, -245, 72, -123, -123, -123, -123, -347,
	-347, -347, -123, -347, 74, 45, -143, -140, 47, -3,
	-346, -218, -171, -175, 70, 69, -142, -113, -228, -347,
	-347, -347, -283, -282, 67, 158, 81, -280, -170, -170,
	-272, 70, -246, -246, 70, 70, -281, -167, -169, 72,
	131, 19, -168, -305, 74, 208, 204, 208, 208, 208,
	208, 209, -322, 81, 248, -333, 259, 468, 243, 274,
	75, 75, 109, 31, 32, -330, 75, 75, 75, 75,
	-327, 16, 447, -325, 249, 74, 74, -307, 38, -309,
	39, -342, 23, -342, 262, 11, 70, 72, -233, -233,
	68, -272, 68, 72, -218, -155, 29, 29, -346, -151,
	14, 16, -116, -81, -153, 16, -347, -347, -347, -347,
	-347, -347, -74, 108, 447, 9, -140, -3, 70, -218,
	-115, -282, 72, -273, 74, 165, 70, -3, 195, -169,
	36, 36, 200, 201, 74, 74, 29, 260, 134, 29,
	75, 134, 414, 249, 74, 72, 250, -242, 152, -310,
	43, -308, -259, 42, 16, -315, -86, -281, -222, -281,
	-123, -289, -290, 110, -161, 412, -152, -83, -138, -85,
	-83, -150, -168, -164, 112, 111, -137, -347, 445, 63,
	448, -180, -347, 75, -108, -284, -283, -167, 196, -20,
	-3, -9, -10, -11, -12, -14, -50, -15, -16, -21,
	-22, -17, -56, -57, -65, -63, -64, -60, -59, -25,
	-23, -26, -18, -27, -28, -29, -33, -34, -24, -35,
	92, 153, 230, 299, 75, 29, 75, 29, 263, 250,
	23, -176, 75, -309, 16, -311, 40, 41, 74, 447,
	-116, 70, 68, 70, -347, 69, -218, -160, -162, -218,
	69, -151, -347, -165, 91, -166, 109, 414, -127, 75,
	134, -165, 53, 446, 449, 68, -156, 198, 199, -167,
	-83, -83, 72, -46, -224, 233, 234, 235, -219, -36,
	-20, 261, 261, 74, 38, 74, 16, 16, 242, -150,
	-284, -281, -284, -290, 47, 69, 23, -85, -161, -166,
	114, 115, 196, 114, 115, -122, 53, -175, -167, 72,
	72, -37, -38, 93, 94, 231, 232, 236, -232, 69,
	510, 74, 74, 29, 247, 21, -318, -151, 70, 180,
	-162, -163, 88, -218, 447, 70, -169, 97, 95, -38,
	-83, -36, 19, 19, 19, 29, -219, 97, -20, 264,
	-161, -284, 181, -166, 448, -293, -294, 66, -13, -19,
	-12, -9, -10, -11, 299, 92, -36, 94, 510, -47,
	75, -3, -45, -44, 75, -47, 238, 89, 239, 72,
	-123, -318, -346, 449, -294, 66, -293, 66, 10, 9,
	-167, -36, 510, -36, 97, 95, -39, -40, 96, -20,
	69, 237, -123, 178, -292, 166, 161, 164, 30, -292,
	510, 97, 510, 153, -36, 97, 95, -40, -83, -44,
	-347, -347, 160, 29, 83, 97, 92, 510, 153, -36,
	94, 97, 510, -36, 153, 97, 510, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 735, 735, 735, 735,
	735, 735, 833, -2, 597, 0, 0, 0, 0, -2,
	708, 709, 710, 714, 715, 730, 732, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 40,
	0, 0, 56, 57, 1145, 0, 733, 722, 723, 0,
	0, 1684, 2, 1083, 0, 744, 737, 0, 1145, 1145,
	0, 0, 88, 0, 0, 0, 834, 0, 0, 0,
	1143, 1143, 239, 1143, 1143, 0, 1158, 237, 0, 1140,
	1154, 1155, 1156, 0, 0, 0, 1141, 0, 1141, 1141,
	1141, 1141, 1141, 1141, 1141, 0, 656, 853, 1167, 1168,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 0, 0, 0, 701,
	0, 667, 668, 669, 0, 671, 0, 0, 0, 0,
	0, 681, 684, 688, 0, 1083, 1083, 543, 544, 545,
	705, 706, 695, 707, 0, 0, 0, 0, 0, 814,
	314, 316, 0, 336, 0, 339, 342, 1173, 716, 0,
	0, 1198, 1199, 0, 0, 0, 0, 0, 1534, 182,
	253, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	0, 184, 184, 184, 1546, 184, 0, 184, 184, 184,
	184, 184, 252, 242, 243, 244, 0, 0, 0, 1534,
	0, 523, 520, 521, 735, 0, 739, 0, 1146, 711,
	45, 0, 47, 1099, 835, 836, 837, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 0,
	1089, 0, 0, 747, 745, 746, 736, 0, 758, 788,
	0, 864, 0, 869, 871, -2, -2, 0, 912, 913,
	914, 915, 916, 917, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 942, 943, 944, 945, 946, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1626, 1627, 1628, 1629,
	1631, 1632, 1634, 1641, 1642, 1645, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1658, 1659, 1664, 1666, 1668, 1671, 1672,
	1673, 1674, 1676, 1677, 1678, 1680, 1681, 1682, 873, 874,
	1053, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1044, 0, 1015, 1015, 1015, 1015, 1015,
	1015, 1015, 1015, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 67, 69, 853, 73, 1600, 0, 1117,
	-2, -2, 1119, 0, 0, 0, -2, -2, -2, -2,
	1396, -2, 1053, 0, 89, 1075, 735, 90, 0, 379,
	380, 0, 1409, 567, 1165, 1166, 1398, 1161, 1162, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 0, 0, 237, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 1143, 239, 0, 0, 637,
	0, 638, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 0, 657, 658, 701, 660,
	0, 0, 1143, 1143, 0, 0, 0, 0, 0, 569,
	570, 701, 701, 701, 701, 698, 0, 698, 678, 698,
	696, 697, 0, 683, 0, 0, 0, 691, 692, 717,
	0, 0, 724, 726, 727, 728, 729, 725, 0, 734,
	0, 0, 0, 318, 0, 0, 338, 320, 0, 323,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 341, 0, 1171, 1174, 721, 1189, 1190, 0,
	1200, 1201, 188, 188, 0, 0, 0, 0, 151, 184,
	0, 153, 184, 184, 184, 0, 184, 184, 160, 161,
	184, 163, 164, 165, 166, 167, 184, 169, 170, 171,
	184, 184, 174, 184, 184, 177, 178, 179, 180, 181,
	251, 188, 0, 0, 188, 0, 0, 505, 0, 0,
	0, 0, 510, 511, 512, 513, 0, 0, 516, 517,
	744, 42, 52, 0, 740, 741, 0, 0, 0, 46,
	0, 0, 51, 1685, 37, 0, 0, 1084, 1087, 1088,
	1076, 1077, 1080, 0, 0, 742, 748, 749, 738, 0,
	759, 0, 0, 0, 789, 0, 791, 792, 793, 794,
	0, 867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 891, 892, 893, 894, 895, 896, 897, 870, 0,
	884, 0, 0, 0, 933, 934, 935, 936, 937, 938,
	939, 0, 747, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	747, 0, 0, 0, 747, 0, 0, 910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	1045, 0, 998, 1007, 0, 999, 1008, 1000, 1009, 1001,
	0, 1002, 1010, 1003, 1011, 1004, 1005, 1012, 1006, 0,
	906, 0, 0, 71, 0, 852, 0, 795, 797, 798,
	799, -2, 0, 803, 858, 904, 1167, -2, 0, 0,
	0, 63, 64, 0, 0, 0, 0, 74, 76, 0,
	0, 1600, 1120, 1121, 479, 1134, 1135, 1136, 0, 1132,
	0, 1083, 744, 584, 0, 381, 0, 0, 390, 469,
	399, 400, 401, 462, 403, 462, 462, 0, 462, 462,
	462, 462, 462, 476, 476, 476, 476, 476, 445, 446,
	447, 448, 449, 0, 0, 422, 462, 462, 462, 426,
	452, 453, 454, 455, 456, 457, 458, 459, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 464, 464,
	466, 466, 466, 466, 466, 0, 0, 566, 0, 1159,
	0, 0, 239, -2, 0, -2, 0, 848, 0, 0,
	855, 0, 0, 100, 269, 255, 99, 0, 233, 238,
	234, 235, 236, 0, 0, 0, 0, 246, 652, 1142,
	0, 645, 65, 646, 647, 648, 649, 650, 248, 651,
	854, 1169, 1170, 659, 702, 703, 0, 0, 814, 664,
	665, 666, 571, 672, 673, 674, 680, 701, 0, 0,
	0, 814, 701, 682, 898, 685, 1015, 0, 719, 718,
	0, 731, 0, 315, 317, 319, 337, 0, 0, 340,
	343, 0, 0, 0, 0, 1192, 0, 1194, 1196, 0,
	0, 189, 190, 191, 0, 183, 0, 206, 254, 0,
	152, 0, 186, 154, 155, 156, 184, 158, 159, 162,
	168, 172, 173, 175, 176, 250, 0, 0, 0, 0,
	149, 0, 506, 507, 508, 509, 518, 515, 747, 0,
	0, 712, 713, 48, 0, 0, 1101, 1090, 0, 0,
	0, 0, 1079, 1081, 1082, 0, 0, 1064, 0, 0,
	750, 743, 39, 865, 866, 868, 885, 0, 887, 889,
	790, 760, 0, 1054, -2, 875, 876, 900, 901, 902,
	0, 0, 0, 0, 898, 880, 0, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 932,
	1029, 1030, 0, 930, 931, 940, 0, 0, 908, 754,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 906, 903, 0, 1111, 0, 0, 0, 980,
	0, 0, 915, 1056, 0, 915, 1056, 0, 0, 0,
	0, 0, 0, 0, 1051, 1048, 0, 0, 1016, 0,
	0, 0, 907, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 838, 0, 0, 841, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 1520, 809, 0,
	858, 0, 0, 0, 906, 862, 0, 862, 68, 862,
	70, 0, 857, 1118, 0, 0, 0, 79, 80, 75,
	1122, 0, 1128, 1129, 1130, 1054, 0, 1089, 747, 378,
	585, 587, 590, 591, 592, 382, 384, 385, 386, 0,
	-2, 558, 1530, 1577, -2, -2, 550, 1443, -2, -2,
	389, 471, 470, 402, 0, 476, 476, 462, 462, 462,
	462, 431, 476, 434, 437, 438, 479, 0, 479, 479,
	479, 479, 476, 0, 0, 423, 424, 425, 414, 0,
	415, 464, 417, 0, 418, 419, 420, 421, 564, 565,
	0, 0, 0, 85, 0, 94, -2, 486, 487, 488,
	0, 483, 1144, 95, 0, 271, 272, 0, 209, 0,
	240, 241, 102, 0, 0, 256, 0, 377, 0, 639,
	0, 641, 245, 643, 653, 654, 644, 0, 0, 661,
	662, 663, 862, 0, 0, 675, 699, 700, 698, 701,
	679, 693, 0, 0, 686, 0, 720, 815, 321, 322,
	344, 71, 0, 1172, 1191, 0, 1195, 1197, 0, 192,
	194, 0, 143, 0, 0, 185, 0, 157, 0, 0,
	0, 0, 0, 514, 0, 742, 53, 598, 599, -2,
	630, 1151, 630, 630, 616, 533, 630, 0, 0, 0,
	49, 0, 1100, 0, 0, 0, 1085, 1086, 1078, 0,
	1137, 1138, 1065, 1066, 86, 751, 886, 888, 890, 0,
	906, 877, 898, 881, 0, 878, 0, 872, 0, 0,
	769, 0, 769, 769, 0, 966, 0, 967, 994, 0,
	979, 769, 769, 0, 0, 0, 0, 0, 0, 973,
	974, 975, 976, 769, 769, 769, 769, 0, 0, 0,
	769, 769, 769, 0, 911, -2, 977, 978, 0, 0,
	0, 0, 0, 1022, 0, 0, 1023, 988, 0, 0,
	0, 0, 0, 1075, 0, 1049, 0, 0, 997, 1017,
	1018, 1019, 1020, 1021, 1105, 0, 0, 0, 1094, 0,
	862, 1113, 0, 0, 796, 829, 831, 0, 826, 839,
	840, 842, 0, 844, 0, 846, 847, 816, 802, 905,
	804, 0, 0, 0, 858, 813, 0, 0, 0, 0,
	1075, 0, 862, 61, 62, 0, 77, 78, 0, 0,
	84, 480, 481, 0, 208, 0, 588, 0, 383, 0,
	551, 0, 0, 535, 550, 546, 547, 550, 549, 550,
	541, 551, 542, 0, 391, 0, 393, 394, 395, 396,
	397, 0, 0, 475, 0, 500, 502, 0, 0, 398,
	472, 0, 479, 479, 476, 429, 430, 462, 435, 479,
	439, 0, 440, 441, 442, 443, 479, 0, 460, 0,
	0, 416, 0, 581, 0, 1160, 87, 0, 489, 490,
	491, 0, 533, 533, 533, 0, 273, 274, 275, 849,
	0, 210, 211, 0, 0, 0, 0, 856, 112, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 66, 249,
	670, 572, 573, 814, 677, 899, 687, 689, 690, 476,
	0, 1193, 0, 0, 0, 0, 0, 204, 187, 0,
	0, 0, 0, 150, 0, 750, 0, 0, 550, 0,
	617, 618, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 1153, 0, 0, 0,
	534, 0, 625, 626, 0, 1103, 1102, 1091, 38, 862,
	0, 761, 1055, 0, 879, 0, 882, 769, 909, 951,
	770, 756, 0, 952, 953, 769, 762, 763, 765, 968,
	955, 956, 969, 970, 971, 769, 769, 972, 960, 959,
	958, 961, 0, 0, 769, 964, 963, 965, 947, 0,
	462, 462, 1034, 462, 466, 1037, 462, 1039, 462, 1042,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1046, 996, 1052, 0, 54, 0, 1105, 1092, 1107,
	1109, 0, 0, 0, 0, -2, 1375, 0, 820, 1075,
	0, 0, 0, 823, 830, 0, 0, 824, 0, 825,
	843, 845, 800, 0, 0, 805, 0, 0, -2, 812,
	0, 0, 0, 822, 1083, 863, 60, 81, 82, 83,
	586, 589, 0, 552, 462, 462, 0, 556, 548, 557,
	537, 538, 540, 0, 392, 473, 0, 499, 501, 503,
	504, 463, 427, 428, 479, 436, 432, 477, 478, 444,
	476, 0, 476, 0, 467, 0, 568, 582, 0, 0,
	0, 85, 533, 0, 0, 0, 0, 217, 0, 213,
	0, 0, 0, 120, 0, 103, 104, 105, 107, 108,
	0, 0, 0, 101, 0, 258, 0, 261, 262, 640,
	642, 701, 1183, 850, 204, 193, 195, 196, 204, 207,
	144, 0, 145, 147, 0, 146, 519, 86, 600, 0,
	627, 0, 0, 1159, 548, 0, -2, 603, 608, 609,
	610, 611, 612, 0, 623, 0, 605, 0, 627, 0,
	620, 0, 0, 0, 1067, 0, 86, 86, 948, 883,
	950, 0, 954, 767, 766, 949, 957, 0, 0, 962,
	981, 1031, 476, 1035, 1036, 1038, 1040, 1041, 1043, 983,
	982, 0, 0, 0, 0, 989, 0, 0, 0, 0,
	0, 0, 1050, 0, 55, 0, 1110, -2, 0, 0,
	72, 0, 1083, 1114, 1115, 1116, 827, 0, 832, 0,
	818, 0, 858, 810, 0, 0, 0, 0, 59, 525,
	0, 1080, 1080, 536, 550, 0, 474, 0, 0, 433,
	479, 461, 479, 0, 0, 583, 0, 85, 87, 0,
	494, 495, 496, 497, 498, 0, 86, 218, 219, 0,
	0, 0, 224, 0, 0, 0, 0, 0, 212, 214,
	215, 216, 138, 121, 122, 0, 0, 0, 0, 113,
	114, 0, 0, 0, 0, 0, 109, 110, 111, 257,
	0, 0, 260, 0, 0, 676, 1185, 1179, 197, 197,
	0, 148, 0, 0, 602, 628, 0, 390, 390, 0,
	550, 0, 619, 0, 1149, 1150, 0, 614, 627, 0,
	0, 0, 1104, 1072, 0, 862, 0, 752, 757, 1075,
	0, 0, 0, 1032, 1033, 0, 0, 0, 0, 990,
	991, 992, 1024, 995, 1047, 0, 1108, 1093, 0, 1097,
	0, 821, 58, 0, 817, 0, 806, 808, 858, 859,
	860, 861, 524, 528, 0, 533, 0, 553, 554, 555,
	539, 0, 450, 451, 465, 468, 0, 92, 0, 492,
	493, 0, 87, 220, 221, 222, 223, 225, 226, 0,
	0, 0, 98, 0, 0, 123, 0, 0, 0, 0,
	133, 134, 135, 136, 137, 115, 116, 117, 118, 119,
	106, 0, 0, 259, 0, 264, 265, 1147, 1187, -2,
	0, 141, 0, 142, 205, 0, 601, 629, 387, 388,
	0, 1159, 0, 604, 613, 615, 0, 622, 0, 781,
	0, 0, 1067, 86, 771, 0, 1013, 1014, 984, 986,
	985, 987, 0, 0, 0, 0, 1096, 0, 828, 819,
	811, 529, 530, 0, 532, 0, 526, 85, 0, 0,
	227, 228, 229, 230, 139, 140, 124, 125, 0, 127,
	128, 0, 0, 0, 267, 0, 263, 816, 0, 1179,
	0, 1181, 0, 1178, 0, 198, 862, 0, 0, 0,
	621, 0, 633, 0, 43, 0, 1073, 1074, 1068, 1069,
	1071, 1072, 753, 0, 0, 0, 768, 993, 0, 0,
	0, 1106, -2, 531, 0, 91, 527, 93, 276, 85,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 0, 0, 0, 0, 129, 0, 131, 132, 266,
	0, 36, 0, 1186, 0, 1184, 0, 0, 1180, 0,
	1067, 526, 0, 526, 632, 0, 0, 782, 783, 0,
	0, 781, 764, 772, 0, 775, 0, 0, 0, 786,
	0, 773, 1025, 0, 1028, 0, 85, 0, 0, 97,
	0, 0, 1161, 0, 0, 303, 304, 305, 1163, 0,
	345, 126, 130, 268, 1148, 1188, 0, 0, 0, 1072,
	606, 0, 624, 634, 0, 0, 0, 1070, 44, 0,
	776, 777, 778, 779, 780, 0, 1026, 0, 87, 277,
	278, 0, 287, 0, 0, 0, 0, 0, 301, 0,
	0, 1182, 1176, 199, 200, 201, 203, 781, 526, 0,
	784, 785, 0, 787, 0, 559, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 1164, 231, 346, 0,
	41, 607, 0, 774, 0, 560, 561, 0, 85, 279,
	280, 281, 282, 283, 0, 285, 0, 0, 0, 297,
	298, 299, 0, 306, 308, 309, 310, 0, 312, 313,
	302, 202, 0, 1027, 562, 0, 563, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 294, 0, 300,
	0, 311, 0, 0, 574, 576, 577, 0, 0, 575,
	0, 0, 289, 290, 0, 0, 0, 295, 0, 307,
	635, 636, 578, 579, 580, 284, 286, 0, 292, 0,
	0, 0, 0, 0, 291, 0, 296, 293,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 510,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:501
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:505
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:547
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:553
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:559
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:583
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:596
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:603
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:612
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:616
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:626
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:632
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:638
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:642
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:648
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:658
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:670
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:692
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:698
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:702
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:706
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:710
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:734
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:749
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:753
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:763
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:770
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:779
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:783
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:789
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:793
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:807
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:811
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:815
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:820
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:825
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:830
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:855
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:859
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:865
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:871
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:879
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 96:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:887
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:891
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:895
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:914
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:923
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:927
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:932
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:964
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:977
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:997
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1054
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1058
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1062
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1066
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1106
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1111
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1115
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1119
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1125
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1130
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1134
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1138
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1142
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1146
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1256
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.strs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantAssumption = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1374
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1378
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1383
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1394
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1402
		{
			yyVAL.procedureParams = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1422
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristics = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1467
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1487
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1495
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1501
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1511
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = ""
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1639
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1643
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 259:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1647
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1653
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1665
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1669
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1673
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1679
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1687
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = BeforeStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = AfterStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = InsertStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = UpdateStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = DeleteStr
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1726
		{
			yyVAL.triggerOrder = nil
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1750
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 286:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1770
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1776
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1782
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 291:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1787
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 292:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1792
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 293:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1798
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1816
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1842
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1867
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1921
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.statement = &Resignal{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2013
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2024
		{
			yyVAL.exprs = nil
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.exprs = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2032
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2083
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2099
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2126
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2145
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2153
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = ColumnType{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2194
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2203
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 451:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2519
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2524
		{
			yyVAL.sqlVal = nil
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2533
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2537
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2545
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2555
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2563
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2572
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2582
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2588
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2607
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2616
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2625
		{
			yyVAL.boolean = false
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.boolean = true
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.charsetCollates = nil
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2660
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2670
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2674
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2678
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2682
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2688
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2692
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2698
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.colKeyOpt = colKey
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2778
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = yyDollar[1].str
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2804
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2808
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2813
		{
			yyVAL.indexOptions = nil
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2862
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2874
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2887
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = ""
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2949
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 559:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2973
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 560:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2977
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 561:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2981
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 562:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2985
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 563:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2989
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3013
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3023
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = ""
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3042
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3070
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3075
		{
			yyVAL.boolean = true
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.boolean = true
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3083
		{
			yyVAL.boolean = false
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.str = yyDollar[1].str
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3122
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = ""
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3140
		{
			yyVAL.str = string("")
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3153
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3166
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3170
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3176
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3183
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3194
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3198
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3203
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 607:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3207
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3235
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3239
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3246
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3252
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3262
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3268
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3277
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3281
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3285
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3289
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3304
		{
			yyVAL.columnOrder = nil
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3312
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3317
		{
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
		}
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3323
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 635:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3339
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 636:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3343
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3363
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3375
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3381
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3389
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3409
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3417
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3425
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3433
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3441
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3450
		{

		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3468
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3484
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3492
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3496
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3500
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3521
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3529
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3545
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3549
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 676:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3553
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3558
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3579
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3593
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3597
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3602
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3606
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3639
		{
			yyVAL.boolean = false
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.boolean = true
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.showFilter = nil
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = SessionStr
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = GlobalStr
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.statement = &Begin{}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &Begin{}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3725
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3729
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.statement = &Commit{}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.statement = &Rollback{}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3753
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3757
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3761
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3765
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = ""
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3814
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3820
		{
			setAllowComments(yylex, true)
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.bytes2 = nil
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = UnionStr
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = UnionAllStr
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = UnionDistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.byt = 0
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.byt = 1
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = SQLCacheStr
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = DistinctStr
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = ""
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = StraightJoinHint
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3906
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3929
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3939
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3947
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3957
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3963
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3968
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.exprs = nil
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3980
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3985
		{
			yyVAL.over = nil
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.over = yyDollar[1].over
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.frame = nil
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4009
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4074
		{
			yyVAL.window = nil
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4077
		{
			yyVAL.window = yyDollar[2].window
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4092
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4110
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4118
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4160
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4176
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4183
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4189
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4193
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4204
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4219
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4223
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4242
		{
			yyVAL.expr = nil
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			yyVAL.columns = nil
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4255
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4265
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4281
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4298
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4302
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4314
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4324
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4329
		{
			yyVAL.empty = struct{}{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.empty = struct{}{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = JoinStr
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = JoinStr
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = JoinStr
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = StraightJoinStr
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = LeftJoinStr
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = LeftJoinStr
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = RightJoinStr
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = RightJoinStr
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = NaturalJoinStr
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4449
		{
			yyVAL.indexHints = nil
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4453
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4457
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 861:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4461
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4466
		{
			yyVAL.expr = nil
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4470
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4558
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = IsNullStr
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = IsNotNullStr
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = IsTrueStr
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = IsNotTrueStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.str = IsFalseStr
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = IsNotFalseStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = EqualStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = LessThanStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.str = GreaterThanStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = LessEqualStr
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = GreaterEqualStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = NotEqualStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4623
		{
			yyVAL.expr = nil
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4663
		{
			yyVAL.selectExprs = nil
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4674
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4738
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4746
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4750
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4754
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4782
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4836
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4840
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 984:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 985:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 986:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 990:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 991:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5082
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5093
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5120
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5134
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{
			yyVAL.str = ""
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = BooleanModeStr
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1027:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5197
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5201
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5217
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5221
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5225
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5229
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5233
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5263
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5272
		{
			yyVAL.expr = nil
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5276
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = string("")
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5291
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5295
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5301
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = nil
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5320
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5324
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = &NullVal{}
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5377
		{
			yyVAL.exprs = nil
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5381
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5391
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5402
		{
			yyVAL.expr = nil
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5406
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5412
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5417
		{
			yyVAL.orderBy = nil
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5431
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5437
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = AscScr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = AscScr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = DescScr
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5455
		{
			yyVAL.limit = nil
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5459
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5463
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5467
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = ""
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = ForUpdateStr
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = ShareModeStr
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5503
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5507
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5520
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5524
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5528
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5534
		{
			yyVAL.columns = nil
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5538
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5544
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5548
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5556
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5561
		{
			yyVAL.assignExprs = nil
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5565
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5575
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5581
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5585
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5591
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5607
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5611
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5617
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5620
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5630
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5636
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5647
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5660
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5673
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5697
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5707
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5711
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5718
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.expr = &Default{}
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5742
		{
			yyVAL.byt = 0
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5744
		{
			yyVAL.byt = 1
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5747
		{
			yyVAL.byt = 0
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5749
		{
			yyVAL.byt = 1
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5752
		{
			yyVAL.byt = 0
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5754
		{
			yyVAL.byt = 1
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5757
		{
			yyVAL.str = ""
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5759
		{
			yyVAL.str = IgnoreStr
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5762
		{
			yyVAL.sqlVal = nil
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5764
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.empty = struct{}{}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5770
		{
			yyVAL.empty = struct{}{}
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5773
		{
			yyVAL.empty = struct{}{}
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5775
		{
			yyVAL.empty = struct{}{}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.empty = struct{}{}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5781
		{
			yyVAL.str = UniqueStr
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5783
		{
			yyVAL.str = FulltextStr
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5785
		{
			yyVAL.str = SpatialStr
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.str = ""
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5793
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5795
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5803
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5809
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5813
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5820
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5826
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5830
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5842
		{
			yyVAL.str = string("")
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5844
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5847
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5849
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5852
		{
			yyVAL.EnclosedBy = nil
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5856
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5861
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5865
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5870
		{
			yyVAL.sqlVal = nil
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5874
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5879
		{
			yyVAL.sqlVal = nil
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5883
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5888
		{
			yyVAL.Fields = nil
		}
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5892
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5897
		{
			yyVAL.Lines = nil
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5901
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5906
		{
			yyVAL.sqlVal = nil
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5910
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5916
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5922
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5926
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5936
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.lockType = LockRead
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5946
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5950
		{
			yyVAL.lockType = LockWrite
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5954
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5960
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5966
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6493
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6502
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
