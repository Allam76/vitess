// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const VALUES = 57376
const LAST_INSERT_ID = 57377
const NEXT = 57378
const VALUE = 57379
const SHARE = 57380
const MODE = 57381
const SQL_NO_CACHE = 57382
const SQL_CACHE = 57383
const JOIN = 57384
const STRAIGHT_JOIN = 57385
const LEFT = 57386
const RIGHT = 57387
const INNER = 57388
const OUTER = 57389
const CROSS = 57390
const NATURAL = 57391
const USE = 57392
const FORCE = 57393
const ON = 57394
const USING = 57395
const ID = 57396
const HEX = 57397
const STRING = 57398
const INTEGRAL = 57399
const FLOAT = 57400
const HEXNUM = 57401
const VALUE_ARG = 57402
const LIST_ARG = 57403
const COMMENT = 57404
const COMMENT_KEYWORD = 57405
const BIT_LITERAL = 57406
const NULL = 57407
const TRUE = 57408
const FALSE = 57409
const OFF = 57410
const OR = 57411
const AND = 57412
const NOT = 57413
const BETWEEN = 57414
const CASE = 57415
const WHEN = 57416
const THEN = 57417
const ELSE = 57418
const END = 57419
const LE = 57420
const GE = 57421
const NE = 57422
const NULL_SAFE_EQUAL = 57423
const IS = 57424
const LIKE = 57425
const REGEXP = 57426
const IN = 57427
const SHIFT_LEFT = 57428
const SHIFT_RIGHT = 57429
const DIV = 57430
const MOD = 57431
const UNARY = 57432
const COLLATE = 57433
const BINARY = 57434
const UNDERSCORE_BINARY = 57435
const UNDERSCORE_UTF8MB4 = 57436
const INTERVAL = 57437
const JSON_EXTRACT_OP = 57438
const JSON_UNQUOTE_EXTRACT_OP = 57439
const CREATE = 57440
const ALTER = 57441
const DROP = 57442
const RENAME = 57443
const ANALYZE = 57444
const ADD = 57445
const FLUSH = 57446
const SCHEMA = 57447
const TABLE = 57448
const INDEX = 57449
const VIEW = 57450
const TO = 57451
const IGNORE = 57452
const IF = 57453
const UNIQUE = 57454
const PRIMARY = 57455
const COLUMN = 57456
const SPATIAL = 57457
const FULLTEXT = 57458
const KEY_BLOCK_SIZE = 57459
const ACTION = 57460
const CASCADE = 57461
const CONSTRAINT = 57462
const FOREIGN = 57463
const NO = 57464
const REFERENCES = 57465
const RESTRICT = 57466
const SHOW = 57467
const DESCRIBE = 57468
const EXPLAIN = 57469
const DATE = 57470
const ESCAPE = 57471
const REPAIR = 57472
const OPTIMIZE = 57473
const TRUNCATE = 57474
const MAXVALUE = 57475
const PARTITION = 57476
const REORGANIZE = 57477
const LESS = 57478
const THAN = 57479
const PROCEDURE = 57480
const TRIGGER = 57481
const VINDEX = 57482
const VINDEXES = 57483
const STATUS = 57484
const VARIABLES = 57485
const WARNINGS = 57486
const BEGIN = 57487
const START = 57488
const TRANSACTION = 57489
const COMMIT = 57490
const ROLLBACK = 57491
const BIT = 57492
const TINYINT = 57493
const SMALLINT = 57494
const MEDIUMINT = 57495
const INT = 57496
const INTEGER = 57497
const BIGINT = 57498
const INTNUM = 57499
const UUID = 57500
const REAL = 57501
const DOUBLE = 57502
const FLOAT_TYPE = 57503
const DECIMAL = 57504
const NUMERIC = 57505
const TIME = 57506
const TIMESTAMP = 57507
const DATETIME = 57508
const YEAR = 57509
const CHAR = 57510
const VARCHAR = 57511
const BOOL = 57512
const CHARACTER = 57513
const VARBINARY = 57514
const NCHAR = 57515
const TEXT = 57516
const TINYTEXT = 57517
const MEDIUMTEXT = 57518
const LONGTEXT = 57519
const BLOB = 57520
const TINYBLOB = 57521
const MEDIUMBLOB = 57522
const LONGBLOB = 57523
const JSON = 57524
const ENUM = 57525
const GEOMETRY = 57526
const POINT = 57527
const LINESTRING = 57528
const POLYGON = 57529
const GEOMETRYCOLLECTION = 57530
const MULTIPOINT = 57531
const MULTILINESTRING = 57532
const MULTIPOLYGON = 57533
const NULLX = 57534
const AUTO_INCREMENT = 57535
const APPROXNUM = 57536
const SIGNED = 57537
const UNSIGNED = 57538
const ZEROFILL = 57539
const COLLATION = 57540
const DATABASES = 57541
const SCHEMAS = 57542
const TABLES = 57543
const VITESS_KEYSPACES = 57544
const VITESS_SHARDS = 57545
const VITESS_TABLETS = 57546
const VSCHEMA = 57547
const VSCHEMA_TABLES = 57548
const VITESS_TARGET = 57549
const FULL = 57550
const PROCESSLIST = 57551
const COLUMNS = 57552
const FIELDS = 57553
const ENGINES = 57554
const PLUGINS = 57555
const NAMES = 57556
const CHARSET = 57557
const GLOBAL = 57558
const SESSION = 57559
const ISOLATION = 57560
const LEVEL = 57561
const READ = 57562
const WRITE = 57563
const ONLY = 57564
const REPEATABLE = 57565
const COMMITTED = 57566
const UNCOMMITTED = 57567
const SERIALIZABLE = 57568
const CURRENT_TIMESTAMP = 57569
const DATABASE = 57570
const CURRENT_DATE = 57571
const CURRENT_TIME = 57572
const LOCALTIME = 57573
const LOCALTIMESTAMP = 57574
const UTC_DATE = 57575
const UTC_TIME = 57576
const UTC_TIMESTAMP = 57577
const REPLACE = 57578
const CONVERT = 57579
const CAST = 57580
const SUBSTR = 57581
const SUBSTRING = 57582
const GROUP_CONCAT = 57583
const SEPARATOR = 57584
const TIMESTAMPADD = 57585
const TIMESTAMPDIFF = 57586
const MATCH = 57587
const AGAINST = 57588
const BOOLEAN = 57589
const LANGUAGE = 57590
const WITH = 57591
const QUERY = 57592
const EXPANSION = 57593
const UNUSED = 57594

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"UUID",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VSCHEMA_TABLES",
	"VITESS_TARGET",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 29,
	-2, 4,
	-1, 37,
	159, 302,
	160, 302,
	-2, 292,
	-1, 272,
	112, 644,
	-2, 640,
	-1, 273,
	112, 645,
	-2, 641,
	-1, 338,
	82, 820,
	-2, 60,
	-1, 339,
	82, 776,
	-2, 61,
	-1, 344,
	82, 755,
	-2, 604,
	-1, 346,
	82, 797,
	-2, 606,
	-1, 617,
	1, 355,
	5, 355,
	12, 355,
	13, 355,
	14, 355,
	15, 355,
	17, 355,
	19, 355,
	30, 355,
	31, 355,
	42, 355,
	43, 355,
	44, 355,
	45, 355,
	46, 355,
	48, 355,
	49, 355,
	52, 355,
	53, 355,
	55, 355,
	56, 355,
	270, 355,
	-2, 373,
	-1, 620,
	53, 43,
	55, 43,
	-2, 45,
	-1, 764,
	112, 647,
	-2, 643,
	-1, 987,
	5, 30,
	-2, 439,
	-1, 1017,
	5, 29,
	-2, 578,
	-1, 1263,
	5, 30,
	-2, 579,
	-1, 1320,
	5, 29,
	-2, 581,
	-1, 1400,
	5, 30,
	-2, 582,
}

const yyPrivate = 57344

const yyLast = 12608

var yyAct = [...]int{

	273, 1434, 1424, 1226, 1388, 573, 1111, 1301, 1020, 1283,
	277, 1332, 1162, 290, 1038, 1196, 850, 445, 873, 1163,
	251, 57, 1021, 1159, 952, 882, 1063, 303, 1044, 916,
	241, 799, 81, 1175, 872, 1169, 211, 789, 869, 211,
	1134, 796, 1090, 729, 476, 211, 304, 51, 979, 1089,
	1080, 630, 852, 817, 837, 798, 766, 848, 572, 3,
	343, 886, 902, 505, 511, 629, 614, 211, 81, 830,
	912, 337, 211, 517, 211, 243, 244, 245, 246, 275,
	961, 249, 525, 260, 332, 334, 587, 56, 1427, 1411,
	1422, 1398, 1419, 1227, 588, 264, 1410, 1397, 51, 1151,
	896, 1255, 450, 1191, 1192, 1051, 256, 478, 1050, 1190,
	250, 1052, 340, 613, 1362, 538, 537, 547, 548, 540,
	541, 542, 543, 544, 545, 546, 539, 61, 863, 549,
	315, 499, 321, 322, 319, 320, 318, 317, 316, 206,
	202, 203, 204, 631, 935, 632, 323, 324, 864, 865,
	248, 495, 247, 63, 64, 65, 66, 67, 934, 496,
	493, 494, 198, 1071, 200, 895, 1286, 1307, 903, 1246,
	1244, 240, 1114, 480, 822, 482, 704, 488, 489, 1135,
	1113, 702, 1421, 1418, 1389, 1110, 939, 463, 1438, 831,
	1341, 498, 1380, 887, 1333, 933, 1442, 1039, 1041, 211,
	464, 452, 211, 200, 1096, 479, 481, 1335, 211, 1115,
	703, 708, 1298, 695, 211, 889, 1137, 81, 1185, 81,
	81, 1184, 81, 81, 889, 81, 889, 81, 1183, 448,
	705, 455, 213, 1369, 201, 946, 81, 1266, 945, 561,
	562, 996, 1121, 993, 1064, 930, 927, 928, 1006, 926,
	1139, 973, 1143, 446, 1138, 738, 1136, 529, 470, 199,
	870, 1141, 205, 475, 549, 475, 475, 81, 475, 475,
	1140, 475, 460, 475, 1040, 1334, 513, 735, 501, 502,
	937, 940, 475, 1142, 1144, 1378, 539, 1352, 1363, 549,
	1208, 1342, 1340, 524, 1436, 477, 446, 1437, 903, 1435,
	1095, 730, 70, 51, 1173, 1100, 1097, 1091, 1098, 1094,
	633, 888, 1396, 1092, 1093, 514, 1297, 932, 558, 1153,
	888, 560, 888, 818, 697, 885, 883, 1099, 884, 444,
	211, 211, 211, 881, 887, 457, 81, 458, 71, 931,
	459, 1209, 81, 561, 562, 561, 562, 1443, 954, 571,
	1069, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	522, 586, 589, 589, 589, 595, 589, 589, 595, 589,
	603, 604, 605, 606, 607, 608, 524, 618, 1383, 519,
	340, 773, 731, 936, 1107, 515, 1444, 818, 612, 1003,
	1109, 270, 466, 467, 468, 771, 772, 770, 938, 1404,
	54, 523, 522, 590, 592, 594, 596, 598, 600, 601,
	769, 591, 593, 892, 597, 599, 621, 602, 524, 893,
	451, 627, 970, 971, 972, 503, 953, 741, 742, 991,
	1402, 990, 538, 537, 547, 548, 540, 541, 542, 543,
	544, 545, 546, 539, 1292, 211, 549, 1291, 523, 522,
	81, 523, 522, 1084, 1083, 211, 211, 81, 1155, 1072,
	1379, 211, 1376, 22, 211, 524, 1258, 211, 524, 1314,
	790, 211, 791, 81, 81, 523, 522, 1289, 81, 81,
	81, 211, 81, 81, 1118, 980, 1108, 1081, 1106, 81,
	81, 1217, 524, 1103, 446, 1349, 475, 453, 454, 1053,
	504, 1054, 446, 475, 538, 537, 547, 548, 540, 541,
	542, 543, 544, 545, 546, 539, 1229, 81, 549, 475,
	475, 211, 197, 255, 475, 475, 475, 81, 475, 475,
	1222, 717, 1220, 992, 743, 475, 475, 537, 547, 548,
	540, 541, 542, 543, 544, 545, 546, 539, 709, 1064,
	549, 715, 756, 758, 759, 1338, 1420, 302, 757, 1059,
	767, 547, 548, 540, 541, 542, 543, 544, 545, 546,
	539, 81, 792, 549, 763, 540, 541, 542, 543, 544,
	545, 546, 539, 523, 522, 549, 714, 329, 330, 79,
	764, 808, 811, 1406, 504, 1338, 1392, 819, 713, 745,
	524, 1338, 504, 1348, 81, 81, 698, 51, 696, 760,
	762, 211, 737, 542, 543, 544, 545, 546, 539, 211,
	211, 549, 575, 211, 211, 342, 693, 81, 1338, 1370,
	1338, 1337, 804, 805, 803, 472, 810, 813, 814, 465,
	81, 793, 794, 1281, 1280, 1268, 504, 1347, 827, 736,
	293, 292, 295, 296, 297, 298, 1346, 815, 877, 294,
	299, 826, 1205, 828, 829, 849, 523, 522, 890, 618,
	1172, 340, 563, 564, 565, 566, 567, 568, 569, 570,
	858, 1265, 504, 524, 874, 1215, 1214, 1211, 1212, 744,
	856, 1211, 1210, 624, 861, 1045, 211, 81, 860, 81,
	985, 504, 24, 81, 81, 211, 211, 801, 211, 211,
	834, 504, 211, 81, 801, 504, 640, 639, 24, 904,
	905, 906, 918, 58, 1160, 1261, 1015, 1172, 1045, 211,
	1016, 211, 211, 833, 211, 625, 1351, 623, 834, 857,
	834, 623, 24, 475, 1213, 475, 1319, 800, 802, 1055,
	54, 54, 898, 899, 900, 901, 1124, 862, 834, 475,
	914, 915, 1009, 985, 1008, 985, 54, 1412, 909, 910,
	911, 1172, 623, 626, 342, 504, 342, 342, 739, 342,
	342, 707, 342, 763, 342, 839, 842, 843, 844, 840,
	54, 841, 845, 342, 257, 1176, 1177, 1112, 767, 764,
	985, 1303, 897, 1273, 962, 917, 969, 963, 1201, 1058,
	974, 913, 538, 537, 547, 548, 540, 541, 542, 543,
	544, 545, 546, 539, 527, 908, 549, 975, 1176, 1177,
	1429, 907, 920, 1425, 1203, 211, 211, 211, 211, 211,
	751, 1179, 54, 1160, 1022, 1085, 733, 211, 711, 1182,
	211, 1032, 1030, 984, 211, 1181, 1033, 1031, 211, 839,
	842, 843, 844, 840, 1029, 841, 845, 1028, 261, 262,
	1002, 1000, 1034, 81, 843, 844, 1416, 1018, 1019, 1409,
	1120, 618, 618, 618, 618, 618, 958, 1047, 1414, 1017,
	968, 1056, 518, 342, 967, 1076, 849, 506, 1042, 635,
	1035, 1068, 1024, 1025, 618, 1027, 1043, 516, 803, 507,
	638, 473, 1385, 1065, 1048, 1046, 1384, 874, 1317, 1066,
	1060, 81, 81, 765, 1259, 1299, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 1075, 923, 1077, 1078, 1079, 1061, 1062, 1023, 710,
	81, 1026, 847, 258, 259, 518, 1088, 252, 966, 1082,
	1356, 1073, 1074, 1355, 253, 211, 965, 982, 475, 58,
	1102, 983, 1305, 1045, 81, 497, 997, 1101, 987, 988,
	989, 823, 1431, 1430, 62, 995, 994, 728, 998, 999,
	520, 474, 1431, 1366, 1005, 1117, 475, 1287, 1007, 734,
	60, 1010, 1011, 1012, 1013, 622, 55, 342, 1, 1423,
	1228, 1300, 929, 1387, 342, 1331, 1127, 1133, 1126, 81,
	81, 1195, 1152, 1037, 1161, 1128, 1022, 880, 871, 1145,
	342, 342, 69, 1146, 443, 342, 342, 342, 68, 342,
	342, 1377, 879, 81, 1164, 878, 342, 342, 1339, 1171,
	1285, 1156, 891, 1070, 894, 1202, 81, 1067, 81, 81,
	1180, 1382, 647, 1165, 645, 51, 1187, 764, 646, 644,
	643, 649, 648, 642, 747, 1189, 1194, 1166, 1186, 279,
	225, 335, 846, 634, 527, 1198, 211, 342, 1199, 1200,
	1193, 919, 521, 72, 1105, 1296, 1104, 925, 491, 492,
	874, 227, 874, 557, 964, 211, 1049, 1218, 341, 1167,
	740, 81, 1206, 1207, 81, 81, 211, 510, 1354, 1304,
	1001, 1219, 81, 584, 816, 211, 278, 755, 795, 291,
	288, 289, 746, 1221, 1014, 531, 1224, 276, 268, 616,
	609, 838, 1233, 836, 820, 835, 1178, 1174, 615, 1123,
	1254, 1361, 1234, 750, 26, 59, 263, 19, 18, 1132,
	17, 824, 825, 976, 977, 978, 1126, 20, 16, 1242,
	15, 618, 14, 461, 30, 21, 13, 12, 11, 10,
	9, 8, 1235, 1022, 342, 1260, 7, 6, 5, 4,
	254, 23, 2, 1269, 81, 1270, 0, 342, 1253, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 1279, 0,
	483, 484, 1056, 485, 486, 0, 487, 81, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 81, 0,
	1275, 1276, 1277, 0, 0, 1294, 1239, 1240, 874, 1241,
	0, 0, 1243, 0, 1245, 0, 0, 0, 0, 1295,
	0, 0, 0, 0, 342, 0, 342, 0, 0, 0,
	941, 942, 0, 475, 0, 0, 81, 81, 0, 81,
	342, 0, 1302, 1288, 81, 1290, 81, 81, 81, 211,
	0, 1318, 81, 1326, 0, 1327, 1328, 1329, 0, 1164,
	1325, 0, 0, 0, 0, 1330, 342, 1336, 1282, 0,
	0, 1343, 1236, 1306, 81, 0, 0, 0, 1165, 1238,
	0, 1321, 0, 1353, 0, 0, 0, 0, 0, 0,
	1247, 1248, 0, 1320, 0, 0, 0, 1344, 0, 1345,
	0, 619, 1367, 0, 0, 0, 0, 0, 0, 81,
	1262, 1263, 1264, 1375, 1267, 1374, 1350, 1164, 0, 0,
	0, 0, 81, 81, 559, 0, 0, 0, 0, 1390,
	0, 1278, 1394, 0, 0, 0, 1165, 208, 51, 266,
	81, 1391, 1130, 1131, 0, 1399, 242, 1022, 0, 1386,
	1368, 211, 509, 0, 0, 1147, 1148, 0, 1149, 1150,
	81, 820, 0, 0, 0, 0, 1302, 874, 333, 1408,
	1157, 1158, 0, 447, 0, 449, 0, 0, 0, 0,
	617, 1413, 1415, 81, 0, 0, 0, 0, 209, 0,
	0, 239, 1417, 0, 0, 0, 1428, 209, 0, 1313,
	342, 0, 0, 1439, 0, 1252, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 0, 267, 0, 701, 209,
	0, 0, 0, 0, 209, 0, 209, 0, 0, 0,
	1204, 0, 0, 0, 718, 719, 0, 0, 1426, 720,
	721, 722, 0, 724, 725, 0, 0, 0, 1086, 342,
	726, 727, 0, 1357, 1358, 1359, 1360, 0, 0, 0,
	1364, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1371, 1372, 1373, 0, 0, 342, 1257, 538,
	537, 547, 548, 540, 541, 542, 543, 544, 545, 546,
	539, 1237, 0, 549, 0, 0, 0, 0, 0, 0,
	456, 342, 0, 462, 0, 0, 1395, 0, 0, 469,
	0, 0, 0, 1400, 0, 471, 538, 537, 547, 548,
	540, 541, 542, 543, 544, 545, 546, 539, 0, 0,
	549, 0, 1405, 0, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 0, 1168, 1170, 0, 0,
	0, 209, 0, 0, 209, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	1170, 0, 0, 0, 1129, 0, 0, 1440, 1441, 0,
	0, 0, 768, 342, 0, 342, 1197, 0, 0, 0,
	0, 0, 508, 512, 538, 537, 547, 548, 540, 541,
	542, 543, 544, 545, 546, 539, 0, 0, 549, 530,
	0, 1308, 1309, 1310, 1311, 1312, 0, 0, 0, 1315,
	1316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 0, 620, 0, 0, 0, 0, 1225, 0,
	0, 1230, 1231, 0, 574, 0, 0, 0, 0, 342,
	0, 0, 0, 585, 0, 0, 0, 0, 922, 0,
	924, 0, 0, 0, 0, 0, 0, 0, 617, 0,
	0, 0, 617, 0, 950, 0, 0, 0, 0, 0,
	0, 0, 209, 209, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1251, 0, 0, 0, 0,
	820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 24, 25, 52, 27, 28,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 1284,
	0, 0, 0, 0, 43, 0, 0, 0, 0, 29,
	48, 49, 0, 0, 342, 0, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 699, 700, 0, 38,
	0, 0, 706, 54, 0, 333, 0, 0, 712, 538,
	537, 547, 548, 540, 541, 542, 543, 544, 545, 546,
	539, 0, 723, 549, 0, 0, 0, 0, 1432, 0,
	0, 0, 0, 1322, 1323, 0, 1324, 209, 0, 0,
	0, 1284, 0, 1284, 1284, 1284, 0, 209, 209, 1197,
	0, 0, 0, 209, 0, 0, 209, 0, 0, 209,
	768, 0, 752, 716, 31, 32, 34, 33, 36, 0,
	50, 1284, 0, 209, 0, 0, 0, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 37, 44, 45, 0, 0, 46, 47, 35, 0,
	0, 0, 753, 754, 0, 0, 1381, 0, 0, 0,
	0, 39, 40, 209, 41, 42, 0, 0, 0, 342,
	342, 0, 716, 1087, 617, 617, 617, 617, 617, 0,
	0, 0, 0, 0, 820, 0, 0, 1401, 0, 617,
	0, 0, 0, 1250, 0, 0, 0, 617, 0, 0,
	0, 1116, 832, 0, 0, 574, 0, 1407, 806, 807,
	0, 0, 0, 0, 267, 859, 0, 0, 0, 267,
	267, 0, 0, 267, 267, 267, 0, 0, 0, 821,
	1284, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 267,
	267, 267, 53, 209, 0, 0, 0, 235, 0, 0,
	0, 209, 854, 868, 0, 209, 209, 538, 537, 547,
	548, 540, 541, 542, 543, 544, 545, 546, 539, 0,
	0, 549, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 944, 0, 947,
	948, 0, 0, 949, 0, 0, 981, 0, 214, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	951, 1249, 0, 226, 221, 957, 538, 537, 547, 548,
	540, 541, 542, 543, 544, 545, 546, 539, 209, 0,
	549, 0, 0, 0, 0, 0, 0, 209, 209, 0,
	209, 209, 0, 0, 209, 224, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 959, 960, 665, 512,
	0, 209, 0, 955, 956, 0, 209, 0, 0, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 267, 0, 538, 537, 547, 548, 540,
	541, 542, 543, 544, 545, 546, 539, 0, 0, 549,
	0, 0, 0, 0, 0, 228, 218, 219, 0, 229,
	230, 231, 233, 0, 232, 238, 0, 0, 0, 220,
	223, 986, 216, 237, 236, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 653, 0, 1004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 617, 0, 0, 0, 1293, 0,
	0, 0, 0, 0, 0, 0, 821, 209, 209, 209,
	209, 209, 0, 666, 0, 0, 0, 0, 0, 1036,
	0, 0, 209, 0, 0, 0, 854, 0, 0, 0,
	209, 0, 0, 0, 0, 679, 682, 683, 684, 685,
	686, 687, 0, 650, 688, 689, 690, 691, 692, 667,
	668, 669, 670, 651, 652, 680, 0, 654, 0, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 671,
	672, 673, 674, 675, 676, 677, 678, 0, 0, 533,
	0, 536, 0, 0, 0, 0, 1122, 550, 551, 552,
	553, 554, 555, 556, 0, 534, 535, 532, 538, 537,
	547, 548, 540, 541, 542, 543, 544, 545, 546, 539,
	0, 0, 549, 0, 1119, 538, 537, 547, 548, 540,
	541, 542, 543, 544, 545, 546, 539, 0, 0, 549,
	0, 0, 681, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 139,
	0, 0, 0, 526, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 209, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 80, 0,
	528, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 523, 522, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 574, 0, 0, 0, 0,
	524, 0, 0, 1271, 0, 0, 1272, 0, 0, 1274,
	0, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 212, 0, 0, 0,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 180, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 854, 0, 161, 178, 196, 94, 0, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1403, 0, 82, 89, 121, 193, 148, 106,
	179, 0, 0, 0, 0, 1393, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 419, 209, 390, 433, 368, 382, 442, 383,
	384, 412, 354, 398, 139, 380, 0, 371, 349, 377,
	350, 369, 392, 103, 395, 367, 421, 401, 432, 120,
	440, 122, 406, 0, 160, 131, 0, 0, 394, 423,
	396, 417, 389, 413, 359, 405, 434, 381, 410, 435,
	0, 0, 0, 80, 0, 875, 876, 0, 0, 0,
	0, 0, 96, 0, 408, 429, 379, 409, 411, 348,
	407, 0, 352, 355, 441, 425, 374, 375, 1057, 0,
	0, 0, 0, 0, 0, 393, 397, 414, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 404,
	0, 0, 0, 356, 353, 0, 0, 391, 0, 0,
	0, 358, 0, 373, 415, 0, 347, 109, 418, 424,
	388, 212, 428, 386, 385, 431, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 422, 370,
	378, 99, 376, 153, 141, 176, 403, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 439, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 351, 0, 161, 178,
	196, 94, 366, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	362, 365, 360, 361, 399, 400, 436, 437, 438, 416,
	357, 0, 363, 364, 0, 420, 426, 427, 402, 82,
	89, 121, 193, 148, 106, 179, 430, 419, 0, 390,
	433, 368, 382, 442, 383, 384, 412, 354, 398, 139,
	380, 0, 371, 349, 377, 350, 369, 392, 103, 395,
	367, 421, 401, 432, 120, 440, 122, 406, 0, 160,
	131, 0, 0, 394, 423, 396, 417, 389, 413, 359,
	405, 434, 381, 410, 435, 0, 0, 0, 80, 0,
	875, 876, 0, 0, 0, 0, 0, 96, 0, 408,
	429, 379, 409, 411, 348, 407, 0, 352, 355, 441,
	425, 374, 375, 0, 0, 0, 0, 0, 0, 0,
	393, 397, 414, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 404, 0, 0, 0, 356, 353,
	0, 0, 391, 0, 0, 0, 358, 0, 373, 415,
	0, 347, 109, 418, 424, 388, 212, 428, 386, 385,
	431, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 422, 370, 378, 99, 376, 153, 141,
	176, 403, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 439, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 351, 0, 161, 178, 196, 94, 366, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 362, 365, 360, 361, 399,
	400, 436, 437, 438, 416, 357, 0, 363, 364, 0,
	420, 426, 427, 402, 82, 89, 121, 193, 148, 106,
	179, 430, 419, 0, 390, 433, 368, 382, 442, 383,
	384, 412, 354, 398, 139, 380, 0, 371, 349, 377,
	350, 369, 392, 103, 395, 367, 421, 401, 432, 120,
	440, 122, 406, 0, 160, 131, 0, 0, 394, 423,
	396, 417, 389, 413, 359, 405, 434, 381, 410, 435,
	54, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 408, 429, 379, 409, 411, 348,
	407, 0, 352, 355, 441, 425, 374, 375, 0, 0,
	0, 0, 0, 0, 0, 393, 397, 414, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 404,
	0, 0, 0, 356, 353, 0, 0, 391, 0, 0,
	0, 358, 0, 373, 415, 0, 347, 109, 418, 424,
	388, 212, 428, 386, 385, 431, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 422, 370,
	378, 99, 376, 153, 141, 176, 403, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 439, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 351, 0, 161, 178,
	196, 94, 366, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	362, 365, 360, 361, 399, 400, 436, 437, 438, 416,
	357, 0, 363, 364, 0, 420, 426, 427, 402, 82,
	89, 121, 193, 148, 106, 179, 430, 419, 0, 390,
	433, 368, 382, 442, 383, 384, 412, 354, 398, 139,
	380, 0, 371, 349, 377, 350, 369, 392, 103, 395,
	367, 421, 401, 432, 120, 440, 122, 406, 0, 160,
	131, 0, 0, 394, 423, 396, 417, 389, 413, 359,
	405, 434, 381, 410, 435, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 408,
	429, 379, 409, 411, 348, 407, 0, 352, 355, 441,
	425, 374, 375, 0, 0, 0, 0, 0, 0, 0,
	393, 397, 414, 387, 0, 0, 0, 0, 0, 0,
	1125, 0, 372, 0, 404, 0, 0, 0, 356, 353,
	0, 0, 391, 0, 0, 0, 358, 0, 373, 415,
	0, 347, 109, 418, 424, 388, 212, 428, 386, 385,
	431, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 422, 370, 378, 99, 376, 153, 141,
	176, 403, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 439, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 351, 0, 161, 178, 196, 94, 366, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 362, 365, 360, 361, 399,
	400, 436, 437, 438, 416, 357, 0, 363, 364, 0,
	420, 426, 427, 402, 82, 89, 121, 193, 148, 106,
	179, 430, 419, 0, 390, 433, 368, 382, 442, 383,
	384, 412, 354, 398, 139, 380, 0, 371, 349, 377,
	350, 369, 392, 103, 395, 367, 421, 401, 432, 120,
	440, 122, 406, 0, 160, 131, 0, 0, 394, 423,
	396, 417, 389, 413, 359, 405, 434, 381, 410, 435,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 408, 429, 379, 409, 411, 348,
	407, 0, 352, 355, 441, 425, 374, 375, 0, 0,
	0, 0, 0, 0, 0, 393, 397, 414, 387, 0,
	0, 0, 0, 0, 0, 761, 0, 372, 0, 404,
	0, 0, 0, 356, 353, 0, 0, 391, 0, 0,
	0, 358, 0, 373, 415, 0, 347, 109, 418, 424,
	388, 212, 428, 386, 385, 431, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 422, 370,
	378, 99, 376, 153, 141, 176, 403, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 439, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 351, 0, 161, 178,
	196, 94, 366, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	362, 365, 360, 361, 399, 400, 436, 437, 438, 416,
	357, 0, 363, 364, 0, 420, 426, 427, 402, 82,
	89, 121, 193, 148, 106, 179, 430, 419, 0, 390,
	433, 368, 382, 442, 383, 384, 412, 354, 398, 139,
	380, 0, 371, 349, 377, 350, 369, 392, 103, 395,
	367, 421, 401, 432, 120, 440, 122, 406, 0, 160,
	131, 0, 0, 394, 423, 396, 417, 389, 413, 359,
	405, 434, 381, 410, 435, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 408,
	429, 379, 409, 411, 348, 407, 0, 352, 355, 441,
	425, 374, 375, 0, 0, 0, 0, 0, 0, 0,
	393, 397, 414, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 404, 0, 0, 0, 356, 353,
	0, 0, 391, 0, 0, 0, 358, 0, 373, 415,
	0, 347, 109, 418, 424, 388, 212, 428, 386, 385,
	431, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 422, 370, 378, 99, 376, 153, 141,
	176, 403, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 439, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 351, 0, 161, 178, 196, 94, 366, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 362, 365, 360, 361, 399,
	400, 436, 437, 438, 416, 357, 0, 363, 364, 0,
	420, 426, 427, 402, 82, 89, 121, 193, 148, 106,
	179, 430, 419, 0, 390, 433, 368, 382, 442, 383,
	384, 412, 354, 398, 139, 380, 0, 371, 349, 377,
	350, 369, 392, 103, 395, 367, 421, 401, 432, 120,
	440, 122, 406, 0, 160, 131, 0, 0, 394, 423,
	396, 417, 389, 413, 359, 405, 434, 381, 410, 435,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 408, 429, 379, 409, 411, 348,
	407, 0, 352, 355, 441, 425, 374, 375, 0, 0,
	0, 0, 0, 0, 0, 393, 397, 414, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 404,
	0, 0, 0, 356, 353, 0, 0, 391, 0, 0,
	0, 358, 0, 373, 415, 0, 347, 109, 418, 424,
	388, 212, 428, 386, 385, 431, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 422, 370,
	378, 99, 376, 153, 141, 176, 403, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 439, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 351, 0, 161, 178,
	196, 94, 366, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	362, 365, 360, 361, 399, 400, 436, 437, 438, 416,
	357, 0, 363, 364, 0, 420, 426, 427, 402, 82,
	89, 121, 193, 148, 106, 179, 430, 419, 0, 390,
	433, 368, 382, 442, 383, 384, 412, 354, 398, 139,
	380, 0, 371, 349, 377, 350, 369, 392, 103, 395,
	367, 421, 401, 432, 120, 440, 122, 406, 0, 160,
	131, 0, 0, 394, 423, 396, 417, 389, 413, 359,
	405, 434, 381, 410, 435, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 408,
	429, 379, 409, 411, 348, 407, 0, 352, 355, 441,
	425, 374, 375, 0, 0, 0, 0, 0, 0, 0,
	393, 397, 414, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 404, 0, 0, 0, 356, 353,
	0, 0, 391, 0, 0, 0, 358, 0, 373, 415,
	0, 347, 109, 418, 424, 388, 212, 428, 386, 385,
	431, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 422, 370, 378, 99, 376, 153, 141,
	176, 403, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 439, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 345,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 351, 0, 161, 178, 196, 94, 366, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 346, 344, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 362, 365, 360, 361, 399,
	400, 436, 437, 438, 416, 357, 0, 363, 364, 0,
	420, 426, 427, 402, 82, 89, 121, 193, 148, 106,
	179, 430, 419, 0, 390, 433, 368, 382, 442, 383,
	384, 412, 354, 398, 139, 380, 0, 371, 349, 377,
	350, 369, 392, 103, 395, 367, 421, 401, 432, 120,
	440, 122, 406, 0, 160, 131, 0, 0, 394, 423,
	396, 417, 389, 413, 359, 405, 434, 381, 410, 435,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 408, 429, 379, 409, 411, 348,
	407, 0, 352, 355, 441, 425, 374, 375, 0, 0,
	0, 0, 0, 0, 0, 393, 397, 414, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 404,
	0, 0, 0, 356, 353, 0, 0, 391, 0, 0,
	0, 358, 0, 373, 415, 0, 347, 109, 418, 424,
	388, 212, 428, 386, 385, 431, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 422, 370,
	378, 99, 376, 153, 141, 176, 403, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 439, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 351, 0, 161, 178,
	196, 94, 366, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	362, 365, 360, 361, 399, 400, 436, 437, 438, 416,
	357, 0, 363, 364, 0, 420, 426, 427, 402, 82,
	89, 121, 193, 148, 106, 179, 430, 419, 0, 390,
	433, 368, 382, 442, 383, 384, 412, 354, 398, 139,
	380, 0, 371, 349, 377, 350, 369, 392, 103, 395,
	367, 421, 401, 432, 120, 440, 122, 406, 0, 160,
	131, 0, 0, 394, 423, 396, 417, 389, 413, 359,
	405, 434, 381, 410, 435, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 408,
	429, 379, 409, 411, 348, 407, 0, 352, 355, 441,
	425, 374, 375, 0, 0, 0, 0, 0, 0, 0,
	393, 397, 414, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 404, 0, 0, 0, 356, 353,
	0, 0, 391, 0, 0, 0, 358, 0, 373, 415,
	0, 347, 109, 418, 424, 388, 212, 428, 386, 385,
	431, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 422, 370, 378, 99, 376, 153, 141,
	176, 403, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 628, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 439, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 345,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 351, 0, 161, 178, 196, 94, 366, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 346, 344, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 362, 365, 360, 361, 399,
	400, 436, 437, 438, 416, 357, 0, 363, 364, 0,
	420, 426, 427, 402, 82, 89, 121, 193, 148, 106,
	179, 430, 419, 0, 390, 433, 368, 382, 442, 383,
	384, 412, 354, 398, 139, 380, 0, 371, 349, 377,
	350, 369, 392, 103, 395, 367, 421, 401, 432, 120,
	440, 122, 406, 0, 160, 131, 0, 0, 394, 423,
	396, 417, 389, 413, 359, 405, 434, 381, 410, 435,
	0, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 408, 429, 379, 409, 411, 348,
	407, 0, 352, 355, 441, 425, 374, 375, 0, 0,
	0, 0, 0, 0, 0, 393, 397, 414, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 404,
	0, 0, 0, 356, 353, 0, 0, 391, 0, 0,
	0, 358, 0, 373, 415, 0, 347, 109, 418, 424,
	388, 212, 428, 386, 385, 431, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 422, 370,
	378, 99, 376, 153, 141, 176, 403, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	336, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 439, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 345, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 351, 0, 161, 178,
	196, 94, 366, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 346, 344, 339,
	338, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	362, 365, 360, 361, 399, 400, 436, 437, 438, 416,
	357, 0, 363, 364, 0, 420, 426, 427, 402, 82,
	89, 121, 193, 148, 106, 179, 139, 0, 0, 0,
	0, 274, 0, 0, 0, 103, 0, 271, 0, 0,
	0, 120, 314, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	866, 0, 54, 0, 0, 272, 293, 292, 295, 296,
	297, 298, 0, 0, 96, 294, 299, 300, 301, 867,
	0, 0, 269, 286, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 0, 0, 0,
	0, 327, 0, 285, 0, 0, 280, 281, 282, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 212, 0, 0, 325, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 180, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 196, 94, 0, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 315, 326, 321, 322, 319, 320, 318, 317,
	316, 328, 307, 308, 309, 310, 312, 0, 323, 324,
	311, 82, 89, 121, 193, 148, 106, 179, 139, 0,
	0, 797, 0, 274, 0, 0, 0, 103, 0, 271,
	0, 0, 0, 120, 314, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 272, 293, 292,
	295, 296, 297, 298, 0, 0, 96, 294, 299, 300,
	301, 0, 0, 0, 269, 286, 0, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 284, 265,
	0, 0, 0, 327, 0, 285, 0, 0, 280, 281,
	282, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 212, 0, 0, 325, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 184, 185, 165,
	183, 192, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 180, 150, 102, 107, 101,
	138, 169, 170, 100, 195, 91, 182, 88, 92, 181,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 196, 94, 0, 157, 166, 186,
	187, 188, 189, 190, 191, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 194, 140,
	154, 98, 177, 159, 315, 326, 321, 322, 319, 320,
	318, 317, 316, 328, 307, 308, 309, 310, 312, 0,
	323, 324, 311, 82, 89, 121, 193, 148, 106, 179,
	139, 0, 0, 0, 0, 274, 0, 0, 0, 103,
	0, 271, 0, 0, 0, 120, 314, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 504, 272,
	293, 292, 295, 296, 297, 298, 0, 0, 96, 294,
	299, 300, 301, 0, 0, 0, 269, 286, 0, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 0, 0, 0, 0, 327, 0, 285, 0, 0,
	280, 281, 282, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 212, 0, 0,
	325, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 0, 142, 152, 123, 168, 147, 175, 184,
	185, 165, 183, 192, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 180, 150, 102,
	107, 101, 138, 169, 170, 100, 195, 91, 182, 88,
	92, 181, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 196, 94, 0, 157,
	166, 186, 187, 188, 189, 190, 191, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	194, 140, 154, 98, 177, 159, 315, 326, 321, 322,
	319, 320, 318, 317, 316, 328, 307, 308, 309, 310,
	312, 0, 323, 324, 311, 82, 89, 121, 193, 148,
	106, 179, 139, 0, 0, 0, 0, 274, 0, 0,
	0, 103, 0, 271, 0, 0, 0, 120, 314, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 272, 293, 292, 295, 296, 297, 298, 0, 0,
	96, 294, 299, 300, 301, 0, 0, 0, 269, 286,
	0, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 265, 0, 0, 0, 327, 0, 285,
	0, 0, 280, 281, 282, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 212,
	0, 0, 325, 0, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 142, 152, 123, 168, 147,
	175, 184, 185, 165, 183, 192, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 180,
	150, 102, 107, 101, 138, 169, 170, 100, 195, 91,
	182, 88, 92, 181, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 196, 94,
	0, 157, 166, 186, 187, 188, 189, 190, 191, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 194, 140, 154, 98, 177, 159, 315, 326,
	321, 322, 319, 320, 318, 317, 316, 328, 307, 308,
	309, 310, 312, 0, 323, 324, 311, 82, 89, 121,
	193, 148, 106, 179, 139, 0, 0, 0, 0, 274,
	0, 0, 0, 103, 0, 271, 0, 0, 0, 120,
	314, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 272, 293, 812, 295, 296, 297, 298,
	0, 0, 96, 294, 299, 300, 301, 0, 0, 0,
	269, 286, 0, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 284, 265, 0, 0, 0, 327,
	0, 285, 0, 0, 280, 281, 282, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 325, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	315, 326, 321, 322, 319, 320, 318, 317, 316, 328,
	307, 308, 309, 310, 312, 0, 323, 324, 311, 82,
	89, 121, 193, 148, 106, 179, 139, 0, 0, 0,
	0, 274, 0, 0, 0, 103, 0, 271, 0, 0,
	0, 120, 314, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 305, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 272, 293, 809, 295, 296,
	297, 298, 0, 0, 96, 294, 299, 300, 301, 0,
	0, 0, 269, 286, 0, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 284, 265, 0, 0,
	0, 327, 0, 285, 0, 0, 280, 281, 282, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 212, 0, 0, 325, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 180, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 196, 94, 0, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 315, 326, 321, 322, 319, 320, 318, 317,
	316, 328, 307, 308, 309, 310, 312, 24, 323, 324,
	311, 82, 89, 121, 193, 148, 106, 179, 0, 139,
	0, 0, 0, 0, 274, 0, 0, 0, 103, 0,
	271, 0, 0, 0, 120, 314, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 272, 293,
	292, 295, 296, 297, 298, 0, 0, 96, 294, 299,
	300, 301, 0, 0, 0, 269, 286, 0, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 284,
	0, 0, 0, 0, 327, 0, 285, 0, 0, 280,
	281, 282, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 212, 0, 0, 325,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 180, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 196, 94, 0, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 315, 326, 321, 322, 319,
	320, 318, 317, 316, 328, 307, 308, 309, 310, 312,
	0, 323, 324, 311, 82, 89, 121, 193, 148, 106,
	179, 139, 0, 0, 0, 0, 274, 0, 0, 0,
	103, 0, 271, 0, 0, 0, 120, 314, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	272, 293, 292, 295, 296, 297, 298, 0, 0, 96,
	294, 299, 300, 301, 0, 0, 0, 269, 286, 0,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 284, 0, 0, 0, 0, 327, 0, 285, 0,
	0, 280, 281, 282, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 325, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 315, 326, 321,
	322, 319, 320, 318, 317, 316, 328, 307, 308, 309,
	310, 312, 0, 323, 324, 311, 82, 89, 121, 193,
	148, 106, 179, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 120, 314,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 272, 293, 292, 295, 296, 297, 298, 0,
	0, 96, 294, 299, 300, 301, 0, 0, 0, 0,
	286, 0, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 0, 0, 0, 0, 327, 0,
	285, 0, 0, 280, 281, 282, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	212, 0, 0, 325, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 1433, 142, 152, 123, 168,
	147, 175, 184, 185, 165, 183, 192, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	180, 150, 102, 107, 101, 138, 169, 170, 100, 195,
	91, 182, 88, 92, 181, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 196,
	94, 0, 157, 166, 186, 187, 188, 189, 190, 191,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 194, 140, 154, 98, 177, 159, 315,
	326, 321, 322, 319, 320, 318, 317, 316, 328, 307,
	308, 309, 310, 312, 0, 323, 324, 311, 82, 89,
	121, 193, 148, 106, 179, 139, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	120, 314, 122, 0, 0, 160, 131, 0, 0, 0,
	0, 305, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 504, 272, 293, 292, 295, 296, 297,
	298, 0, 0, 96, 294, 299, 300, 301, 0, 0,
	0, 0, 286, 0, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 284, 0, 0, 0, 0,
	327, 0, 285, 0, 0, 280, 281, 282, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 212, 0, 0, 325, 0, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 0,
	0, 0, 99, 0, 153, 141, 176, 0, 142, 152,
	123, 168, 147, 175, 184, 185, 165, 183, 192, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 180, 150, 102, 107, 101, 138, 169, 170,
	100, 195, 91, 182, 88, 92, 181, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 196, 94, 0, 157, 166, 186, 187, 188, 189,
	190, 191, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 194, 140, 154, 98, 177,
	159, 315, 326, 321, 322, 319, 320, 318, 317, 316,
	328, 307, 308, 309, 310, 312, 0, 323, 324, 311,
	82, 89, 121, 193, 148, 106, 179, 139, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 120, 314, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 272, 293, 292, 295,
	296, 297, 298, 0, 0, 96, 294, 299, 300, 301,
	0, 0, 0, 0, 286, 0, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 284, 0, 0,
	0, 0, 327, 0, 285, 0, 0, 280, 281, 282,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 212, 0, 0, 325, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 315, 326, 321, 322, 319, 320, 318,
	317, 316, 328, 307, 308, 309, 310, 312, 0, 323,
	324, 311, 82, 89, 121, 193, 148, 106, 179, 139,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 120, 0, 122, 0, 0, 160,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 537, 547, 548, 540, 541,
	542, 543, 544, 545, 546, 539, 0, 0, 549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 212, 0, 0, 0,
	0, 146, 0, 163, 111, 119, 83, 90, 0, 110,
	137, 151, 155, 0, 0, 0, 99, 0, 153, 141,
	176, 0, 142, 152, 123, 168, 147, 175, 184, 185,
	165, 183, 192, 84, 164, 174, 97, 156, 86, 172,
	162, 129, 115, 116, 85, 0, 180, 150, 102, 107,
	101, 138, 169, 170, 100, 195, 91, 182, 88, 92,
	181, 136, 167, 173, 130, 127, 87, 171, 128, 126,
	118, 105, 112, 144, 125, 145, 113, 133, 132, 134,
	0, 0, 0, 161, 178, 196, 94, 0, 157, 166,
	186, 187, 188, 189, 190, 191, 0, 0, 95, 108,
	104, 143, 135, 93, 114, 158, 117, 124, 149, 194,
	140, 154, 98, 177, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 82, 89, 121, 193, 148, 106,
	179, 103, 0, 0, 0, 0, 0, 120, 0, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 76, 77, 0, 73,
	0, 0, 0, 78, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 142, 152, 123, 168, 147,
	175, 184, 185, 165, 183, 192, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 180,
	150, 102, 107, 101, 138, 169, 170, 100, 195, 91,
	182, 88, 92, 181, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 196, 94,
	0, 157, 166, 186, 187, 188, 189, 190, 191, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 194, 140, 154, 98, 177, 159, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 89, 121,
	193, 148, 106, 179, 139, 0, 0, 0, 853, 0,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 855, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 24, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 82,
	89, 121, 193, 148, 106, 179, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 212, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 24, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 82, 89, 121, 193, 148, 106, 179, 103,
	0, 0, 0, 0, 0, 120, 0, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 212, 0, 0,
	0, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 0, 142, 152, 123, 168, 147, 175, 184,
	185, 165, 183, 192, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 180, 150, 102,
	107, 101, 138, 169, 170, 100, 195, 91, 182, 88,
	92, 181, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 196, 94, 0, 157,
	166, 186, 187, 188, 189, 190, 191, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	194, 140, 154, 98, 177, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 89, 121, 193, 148,
	106, 179, 139, 0, 0, 0, 853, 0, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 120, 0, 122,
	0, 0, 160, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 855, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 212,
	0, 0, 0, 0, 146, 0, 163, 111, 119, 83,
	90, 0, 110, 137, 151, 155, 0, 0, 0, 99,
	0, 153, 141, 176, 0, 851, 152, 123, 168, 147,
	175, 184, 185, 165, 183, 192, 84, 164, 174, 97,
	156, 86, 172, 162, 129, 115, 116, 85, 0, 180,
	150, 102, 107, 101, 138, 169, 170, 100, 195, 91,
	182, 88, 92, 181, 136, 167, 173, 130, 127, 87,
	171, 128, 126, 118, 105, 112, 144, 125, 145, 113,
	133, 132, 134, 0, 0, 0, 161, 178, 196, 94,
	0, 157, 166, 186, 187, 188, 189, 190, 191, 0,
	0, 95, 108, 104, 143, 135, 93, 114, 158, 117,
	124, 149, 194, 140, 154, 98, 177, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 82, 89, 121,
	193, 148, 106, 179, 103, 0, 0, 0, 0, 0,
	120, 0, 122, 0, 0, 160, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 748, 0, 0,
	749, 0, 0, 96, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 212, 0, 0, 0, 0, 146, 0, 163,
	111, 119, 83, 90, 0, 110, 137, 151, 155, 0,
	0, 0, 99, 0, 153, 141, 176, 0, 142, 152,
	123, 168, 147, 175, 184, 185, 165, 183, 192, 84,
	164, 174, 97, 156, 86, 172, 162, 129, 115, 116,
	85, 0, 180, 150, 102, 107, 101, 138, 169, 170,
	100, 195, 91, 182, 88, 92, 181, 136, 167, 173,
	130, 127, 87, 171, 128, 126, 118, 105, 112, 144,
	125, 145, 113, 133, 132, 134, 0, 0, 0, 161,
	178, 196, 94, 0, 157, 166, 186, 187, 188, 189,
	190, 191, 0, 0, 95, 108, 104, 143, 135, 93,
	114, 158, 117, 124, 149, 194, 140, 154, 98, 177,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	82, 89, 121, 193, 148, 106, 179, 103, 0, 637,
	0, 0, 0, 120, 0, 122, 0, 0, 160, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 636,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 212, 0, 0, 0, 0,
	146, 0, 163, 111, 119, 83, 90, 0, 110, 137,
	151, 155, 0, 0, 0, 99, 0, 153, 141, 176,
	0, 142, 152, 123, 168, 147, 175, 184, 185, 165,
	183, 192, 84, 164, 174, 97, 156, 86, 172, 162,
	129, 115, 116, 85, 0, 180, 150, 102, 107, 101,
	138, 169, 170, 100, 195, 91, 182, 88, 92, 181,
	136, 167, 173, 130, 127, 87, 171, 128, 126, 118,
	105, 112, 144, 125, 145, 113, 133, 132, 134, 0,
	0, 0, 161, 178, 196, 94, 0, 157, 166, 186,
	187, 188, 189, 190, 191, 0, 0, 95, 108, 104,
	143, 135, 93, 114, 158, 117, 124, 149, 194, 140,
	154, 98, 177, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 82, 89, 121, 193, 148, 106, 179,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 193,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 855, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 82,
	89, 121, 193, 148, 106, 179, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 528, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 212, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 82, 89, 121, 193, 148, 106, 179, 610,
	103, 0, 0, 0, 0, 0, 120, 0, 122, 0,
	0, 160, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 212, 0,
	0, 0, 0, 146, 0, 163, 111, 119, 83, 90,
	0, 110, 137, 151, 155, 0, 0, 0, 99, 0,
	153, 141, 176, 0, 142, 152, 123, 168, 147, 175,
	184, 185, 165, 183, 192, 84, 164, 174, 97, 156,
	86, 172, 162, 129, 115, 116, 85, 0, 180, 150,
	102, 107, 101, 138, 169, 170, 100, 195, 91, 182,
	88, 92, 181, 136, 167, 173, 130, 127, 87, 171,
	128, 126, 118, 105, 112, 144, 125, 145, 113, 133,
	132, 134, 0, 0, 0, 161, 178, 196, 94, 0,
	157, 166, 186, 187, 188, 189, 190, 191, 0, 0,
	95, 108, 104, 143, 135, 93, 114, 158, 117, 124,
	149, 194, 140, 154, 98, 177, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 0,
	0, 0, 0, 0, 139, 0, 82, 89, 121, 193,
	148, 106, 179, 103, 0, 0, 0, 0, 0, 120,
	0, 122, 0, 0, 160, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 212, 0, 0, 0, 0, 146, 0, 163, 111,
	119, 83, 90, 0, 110, 137, 151, 155, 0, 0,
	0, 99, 0, 153, 141, 176, 0, 142, 152, 123,
	168, 147, 175, 184, 185, 165, 183, 192, 84, 164,
	174, 97, 156, 86, 172, 162, 129, 115, 116, 85,
	0, 180, 150, 102, 107, 101, 138, 169, 170, 100,
	195, 91, 182, 88, 92, 181, 136, 167, 173, 130,
	127, 87, 171, 128, 126, 118, 105, 112, 144, 125,
	145, 113, 133, 132, 134, 0, 0, 0, 161, 178,
	196, 94, 0, 157, 166, 186, 187, 188, 189, 190,
	191, 0, 0, 95, 108, 104, 143, 135, 93, 114,
	158, 117, 124, 149, 194, 140, 154, 98, 177, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 82,
	89, 121, 193, 148, 106, 179, 103, 0, 0, 0,
	0, 0, 120, 0, 122, 0, 0, 160, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 207, 0, 212, 0, 0, 0, 0, 146,
	0, 163, 111, 119, 83, 90, 0, 110, 137, 151,
	155, 0, 0, 0, 99, 0, 153, 141, 176, 0,
	142, 152, 123, 168, 147, 175, 184, 185, 165, 183,
	192, 84, 164, 174, 97, 156, 86, 172, 162, 129,
	115, 116, 85, 0, 180, 150, 102, 107, 101, 138,
	169, 170, 100, 195, 91, 182, 88, 92, 181, 136,
	167, 173, 130, 127, 87, 171, 128, 126, 118, 105,
	112, 144, 125, 145, 113, 133, 132, 134, 0, 0,
	0, 161, 178, 196, 94, 0, 157, 166, 186, 187,
	188, 189, 190, 191, 0, 0, 95, 108, 104, 143,
	135, 93, 114, 158, 117, 124, 149, 194, 140, 154,
	98, 177, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 82, 89, 121, 193, 148, 106, 179, 103,
	0, 0, 0, 0, 0, 120, 0, 122, 0, 0,
	160, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 212, 0, 0,
	0, 0, 146, 0, 163, 111, 119, 83, 90, 0,
	110, 137, 151, 155, 0, 0, 0, 99, 0, 153,
	141, 176, 0, 142, 152, 123, 168, 147, 175, 184,
	185, 165, 183, 192, 84, 164, 174, 97, 156, 86,
	172, 162, 129, 115, 116, 85, 0, 180, 150, 102,
	107, 101, 138, 169, 170, 100, 195, 91, 182, 88,
	92, 181, 136, 167, 173, 130, 127, 87, 171, 128,
	126, 118, 105, 112, 144, 125, 145, 113, 133, 132,
	134, 0, 0, 0, 161, 178, 196, 94, 0, 157,
	166, 186, 187, 188, 189, 190, 191, 0, 0, 95,
	108, 104, 143, 135, 93, 114, 158, 117, 124, 149,
	194, 140, 154, 98, 177, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 82, 89, 121, 193, 148,
	106, 179, 103, 0, 0, 0, 0, 0, 120, 0,
	122, 0, 0, 160, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	212, 0, 0, 0, 0, 146, 0, 163, 111, 119,
	83, 90, 0, 110, 137, 151, 155, 0, 0, 0,
	99, 0, 153, 141, 176, 0, 142, 152, 123, 168,
	147, 175, 184, 185, 165, 183, 192, 84, 164, 174,
	97, 156, 86, 172, 162, 129, 115, 116, 85, 0,
	180, 150, 102, 107, 101, 138, 169, 170, 100, 195,
	91, 182, 88, 92, 181, 136, 167, 173, 130, 127,
	87, 171, 128, 126, 118, 105, 112, 144, 125, 145,
	113, 133, 132, 134, 0, 0, 0, 161, 178, 196,
	94, 0, 157, 166, 186, 187, 188, 189, 190, 191,
	0, 0, 95, 108, 104, 143, 135, 93, 114, 158,
	117, 124, 149, 194, 140, 154, 98, 177, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 82, 89,
	121, 193, 148, 106, 179, 103, 0, 0, 0, 0,
	0, 120, 0, 122, 0, 0, 160, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 212, 0, 0, 0, 0, 146, 0,
	163, 111, 119, 83, 90, 0, 110, 137, 151, 155,
	0, 0, 0, 99, 0, 153, 141, 176, 0, 142,
	152, 123, 168, 147, 175, 184, 185, 165, 183, 192,
	84, 164, 174, 97, 156, 86, 172, 162, 129, 115,
	116, 85, 0, 180, 150, 102, 107, 101, 138, 169,
	170, 100, 195, 91, 182, 88, 92, 181, 136, 167,
	173, 130, 127, 87, 171, 128, 126, 118, 105, 112,
	144, 125, 145, 113, 133, 132, 134, 0, 0, 0,
	161, 178, 196, 94, 0, 157, 166, 186, 187, 188,
	189, 190, 191, 0, 0, 95, 108, 104, 143, 135,
	93, 114, 158, 117, 124, 149, 194, 140, 154, 98,
	177, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 89, 121, 193, 148, 106, 179,
}
var yyPact = [...]int{

	1739, -1000, -183, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 954, 995, -1000, -1000, -1000, -1000, -1000, -1000,
	248, 8674, 37, 111, 17, 11609, 109, 1940, 12095, -1000,
	7, -1000, -1000, -1000, 12095, -1000, -1000, -1000, -66, -68,
	-1000, 736, -1000, -1000, -1000, -1000, -1000, 940, 948, 788,
	933, 828, -1000, 6414, 76, 76, 11366, 5406, -1000, -1000,
	239, 12095, 105, 12095, -151, 73, 73, 73, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 108, 12095, 220,
	-1000, 12095, 72, 582, 72, 72, 72, 12095, -1000, 146,
	-1000, -1000, -1000, 12095, 578, 881, 3286, 50, 3286, 3286,
	-1000, 3286, 3286, -1000, 3286, 18, 3286, -67, 963, -1000,
	-1000, -1000, -1000, -27, -1000, 3286, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	444, 878, 7423, 7423, 954, -1000, 736, -1000, -1000, -1000,
	871, -1000, -1000, 314, 979, -1000, 2451, 145, -1000, 7423,
	2215, 697, -1000, -1000, 697, -1000, -1000, 126, -1000, -1000,
	8179, 8179, 8179, 8179, 8179, 8179, 8179, 8179, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 697, -1000, 7171, 697, 697, 697, 697, 697,
	697, 697, 697, 7423, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 11123,
	10393, 12095, 682, -1000, 718, 5141, -92, -1000, -1000, -1000,
	228, 10150, -1000, -1000, -1000, 880, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 661, 12095, -1000, 2078, -1000, 569, 3286,
	88, 551, 250, 549, 12095, 12095, 3286, 24, 53, 107,
	12095, 726, 85, 12095, 926, 796, 12095, 541, 529, -1000,
	4876, -1000, 3286, 3286, -1000, -1000, -1000, 3286, 3286, 3286,
	12095, 3286, 3286, -1000, -1000, -1000, -1000, -1000, 3286, 3286,
	-1000, 976, 290, -1000, -1000, -1000, -1000, 7423, -1000, 794,
	-1000, -1000, -1000, -1000, -1000, -1000, 990, 185, 594, 143,
	723, -1000, 403, 940, 444, 828, 9907, 797, -1000, -1000,
	12095, -1000, 7423, 7423, 484, -1000, 10879, -1000, -1000, 3816,
	204, 8179, 346, 305, 8179, 8179, 8179, 8179, 8179, 8179,
	8179, 8179, 8179, 8179, 8179, 8179, 8179, 8179, 8179, 413,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 515, -1000,
	736, 592, 592, 157, 157, 157, 157, 157, 157, 157,
	8431, 5910, 444, 659, 329, 7171, 6414, 6414, 7423, 7423,
	6918, 6666, 6414, 934, 245, 329, 12338, -1000, -1000, 7927,
	-1000, -1000, -1000, -1000, -1000, 444, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11852, 11852, 6414, 6414, 6414, 6414, 38,
	12095, -1000, 703, 817, -1000, -1000, -1000, 930, 9412, 9664,
	38, 686, 10393, 12095, -1000, -1000, 4611, 718, -92, 702,
	-1000, -108, -90, 5658, 153, -1000, -1000, -1000, -1000, 3021,
	196, 612, 345, -48, -1000, -1000, -1000, -1000, 748, -1000,
	-1000, 748, 748, 748, 748, -20, -20, -20, -20, -1000,
	-1000, -1000, -1000, -1000, 777, 771, -1000, 748, 748, 748,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 757, 757,
	757, 751, 751, 779, -1000, 12095, 3286, 919, 3286, -1000,
	129, -1000, 11852, 11852, 12095, 12095, 118, 12095, 12095, 717,
	-1000, 12095, 3286, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12095, 336,
	12095, 12095, 329, 12095, -1000, 848, 7423, 7423, 4346, 7423,
	-1000, -1000, -1000, 878, -1000, 934, 947, -1000, 860, 856,
	6414, -1000, -1000, 204, 287, -1000, -1000, 354, -1000, -1000,
	-1000, -1000, 139, 697, -1000, 2232, -1000, -1000, -1000, -1000,
	346, 8179, 8179, 8179, 339, 2232, 1973, 466, 443, 157,
	514, 514, 182, 182, 182, 182, 182, 478, 478, -1000,
	-1000, -1000, 444, -1000, -1000, -1000, 444, 6414, 710, -1000,
	-1000, 7423, -1000, 444, 645, 645, 376, 511, 232, 975,
	645, 230, 965, 645, 645, 6414, 309, -1000, 7423, 444,
	-1000, 136, -1000, 719, 709, 707, 645, 444, 645, 645,
	696, 697, -1000, 12338, 10393, 10393, 10393, 10393, 10393, -1000,
	825, 822, -1000, 810, 809, 830, 12095, -1000, 655, 9412,
	147, 697, -1000, 10636, -1000, -1000, 961, 10393, 683, -1000,
	-1000, 702, -92, -132, -1000, -1000, -1000, -1000, 329, -1000,
	442, 694, 2756, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	755, 502, -1000, 892, 198, 187, 492, 891, -1000, -1000,
	-1000, 872, -1000, 282, -51, -1000, -1000, 399, -20, -20,
	-1000, -1000, 153, 865, 153, 153, 153, 428, 428, -1000,
	-1000, -1000, -1000, 394, -1000, -1000, -1000, 393, -1000, 793,
	11852, 3286, -1000, -1000, -1000, -1000, 176, 176, 362, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	34, 744, -1000, -1000, -1000, 23, 15, 83, -1000, 3286,
	-1000, 290, -1000, 425, 7423, -1000, -1000, -1000, 841, 329,
	329, 130, -1000, -1000, 12095, -1000, -1000, -1000, -1000, 745,
	-1000, -1000, -1000, 3551, 6414, -1000, 339, 2232, 1531, -1000,
	8179, 8179, -1000, -1000, 645, 6414, 329, -1000, -1000, -1000,
	71, 413, 71, 8179, 8179, -1000, 8179, 8179, -1000, -164,
	708, 238, -1000, 7423, 379, -1000, 4346, -1000, 8179, 8179,
	-1000, -1000, -1000, -1000, 791, 12338, 697, -1000, 9169, 11852,
	716, -1000, 222, 817, 776, 789, 743, -1000, -1000, -1000,
	-1000, 813, -1000, 807, -1000, -1000, -1000, -1000, -1000, 104,
	97, 94, 11852, -1000, 954, 7423, 683, -1000, -1000, -1000,
	-128, -138, -1000, -1000, -1000, 3021, -1000, 3021, 11852, 55,
	-1000, 492, 492, -1000, -1000, -1000, 754, 782, 8179, -1000,
	-1000, -1000, 606, 153, 153, -1000, 233, -1000, -1000, -1000,
	636, -1000, 632, 689, 630, 12095, -1000, -1000, -1000, 437,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 475, -1000, 473, 12095, -1000, -1000, -1000, -1000, -1000,
	11852, -173, 459, 11852, 11852, 12095, -1000, 336, -1000, 329,
	-1000, 4081, -1000, 961, 10393, -1000, -1000, 444, -1000, 8179,
	2232, 2232, -1000, -1000, 444, 748, 748, -1000, 748, 751,
	-1000, 748, -2, 748, -3, 444, 444, 2042, 1914, 1706,
	1416, 697, -158, -1000, 329, 7423, -1000, 1453, 411, -1000,
	897, 672, 670, -1000, -1000, 6162, 444, 626, 125, 590,
	-1000, 954, 12338, 7423, -1000, -1000, 7423, 749, -1000, 7423,
	-1000, -1000, -1000, 697, 697, 697, 590, 940, 329, -1000,
	-1000, -1000, -1000, 2756, -1000, 588, -1000, 748, -1000, -1000,
	-1000, 11852, -44, 988, 2232, -1000, -1000, -1000, -1000, -1000,
	-20, 418, -20, 387, -1000, 384, 3286, 445, -1000, -1000,
	-1000, -1000, 190, -1000, -1000, 899, -1000, 4081, -1000, -1000,
	747, -1000, -1000, -1000, 959, 685, -1000, 2232, -1000, -1000,
	110, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8179,
	8179, 8179, 8179, 8179, 444, 410, 329, 8179, 8179, 890,
	-1000, 697, -1000, -1000, 712, 11852, 11852, -1000, 11852, 940,
	-1000, 329, 329, 11852, 329, 11852, 11852, 11852, 8926, -1000,
	141, 11852, -1000, 575, -1000, 162, -1000, -114, 153, -1000,
	153, 600, 591, -1000, 547, -1000, 438, -1000, -1000, 697,
	681, -1000, 205, 11852, 949, 944, -1000, -1000, 719, 719,
	719, 719, 22, -1000, -1000, 719, 719, 984, -1000, 697,
	-1000, 736, 121, -1000, -1000, -1000, 573, 546, 546, 546,
	147, 141, -1000, 405, 203, 401, -1000, 52, 11852, 312,
	888, -1000, 884, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	33, 4081, 3021, 540, -1000, 7423, 7423, -1000, -1000, -1000,
	-1000, 444, 48, -176, -1000, -1000, 12338, 670, 444, 11852,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 370, -1000, -1000,
	12095, -1000, -1000, 340, -1000, -1000, -1000, 538, -1000, 11852,
	-1000, -1000, 744, 329, 652, -1000, 840, -169, -179, 615,
	-1000, -1000, -1000, 713, -1000, -1000, 33, 854, -173, -1000,
	837, -1000, 11852, -1000, 30, -1000, -174, 500, 28, -177,
	781, 697, -180, 778, -1000, 973, 7675, -1000, -1000, 983,
	158, 158, 719, 444, -1000, -1000, -1000, 61, 318, -1000,
	-1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1192, 58, 463, 1191, 1190, 1189, 1188, 1187, 1186,
	1181, 1180, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1172,
	1170, 1168, 1167, 1160, 1158, 1157, 127, 1156, 1155, 1154,
	73, 1153, 83, 1151, 1150, 48, 55, 41, 31, 1369,
	1149, 57, 113, 66, 1148, 33, 1147, 1146, 84, 1145,
	54, 1143, 1141, 1331, 1140, 1139, 14, 28, 1138, 1137,
	1135, 1134, 79, 391, 1132, 1131, 13, 1130, 1129, 94,
	1127, 56, 5, 12, 27, 19, 1126, 1079, 10, 1124,
	53, 1123, 1120, 1119, 1118, 21, 1117, 64, 1110, 20,
	63, 1109, 9, 69, 35, 23, 8, 85, 65, 1108,
	22, 71, 51, 1106, 1104, 522, 49, 1103, 1101, 43,
	1099, 1098, 24, 187, 420, 1097, 1096, 1095, 1094, 1093,
	60, 0, 557, 44, 82, 1092, 1091, 1083, 1382, 80,
	52, 16, 1082, 30, 991, 37, 1081, 1080, 40, 1073,
	1072, 1071, 1070, 1069, 1068, 1064, 1062, 100, 1061, 1057,
	1055, 62, 38, 1054, 1053, 70, 29, 1052, 1050, 1048,
	50, 17, 1045, 1042, 61, 26, 1041, 1038, 1034, 1032,
	1028, 34, 18, 1027, 15, 1021, 11, 1015, 25, 1013,
	4, 1012, 7, 1011, 3, 1010, 6, 42, 1, 1009,
	2, 1008, 1006, 46, 174, 1005, 984, 86,
}
var yyR1 = [...]int{

	0, 191, 192, 192, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 6, 3, 4,
	4, 5, 5, 7, 7, 29, 29, 8, 9, 9,
	9, 195, 195, 48, 48, 93, 93, 10, 10, 10,
	10, 98, 98, 102, 102, 102, 103, 103, 103, 103,
	136, 136, 11, 11, 11, 11, 11, 11, 11, 186,
	186, 185, 184, 184, 183, 183, 182, 17, 167, 169,
	169, 168, 168, 168, 168, 161, 139, 139, 139, 139,
	139, 142, 142, 143, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 141, 141, 141, 141, 141, 144, 144,
	144, 144, 144, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 146, 146,
	146, 146, 146, 146, 146, 146, 160, 160, 147, 147,
	155, 155, 156, 156, 156, 153, 153, 154, 154, 157,
	157, 157, 149, 149, 150, 150, 158, 158, 151, 151,
	151, 152, 152, 152, 159, 159, 159, 159, 159, 148,
	148, 162, 162, 177, 177, 176, 176, 176, 166, 166,
	173, 173, 173, 173, 173, 164, 164, 165, 165, 175,
	175, 174, 163, 163, 178, 178, 178, 178, 189, 190,
	188, 188, 188, 188, 188, 170, 170, 170, 171, 171,
	171, 172, 172, 172, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 106, 106, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 181, 179, 179, 180, 180, 13, 18, 18,
	14, 14, 14, 14, 14, 15, 15, 19, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	110, 110, 108, 108, 111, 111, 109, 109, 109, 112,
	112, 112, 137, 137, 137, 21, 21, 23, 23, 24,
	25, 22, 22, 22, 22, 22, 22, 22, 22, 16,
	196, 26, 27, 27, 28, 28, 28, 32, 32, 32,
	30, 30, 31, 31, 37, 37, 36, 36, 38, 38,
	38, 38, 125, 125, 125, 124, 124, 40, 40, 41,
	41, 42, 42, 43, 43, 43, 43, 55, 55, 92,
	92, 94, 94, 44, 44, 44, 44, 45, 45, 46,
	46, 47, 47, 132, 132, 131, 131, 131, 130, 130,
	49, 49, 49, 51, 50, 50, 50, 50, 52, 52,
	54, 54, 53, 53, 56, 56, 56, 56, 57, 57,
	39, 39, 39, 39, 39, 39, 39, 107, 107, 59,
	59, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 70, 70, 70, 70, 70, 70, 60, 60, 60,
	60, 60, 60, 60, 35, 35, 71, 71, 71, 77,
	72, 72, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 67, 67, 67, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 197, 197, 69, 68,
	68, 68, 68, 68, 68, 33, 33, 33, 33, 33,
	135, 135, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 81, 81, 34, 34, 79,
	79, 80, 82, 82, 78, 78, 78, 62, 62, 62,
	62, 62, 62, 62, 62, 64, 64, 64, 83, 83,
	84, 84, 85, 85, 86, 86, 87, 88, 88, 88,
	89, 89, 89, 89, 90, 90, 90, 61, 61, 61,
	61, 61, 61, 91, 91, 91, 91, 95, 95, 73,
	73, 75, 75, 74, 76, 96, 96, 100, 97, 97,
	101, 101, 101, 101, 99, 99, 99, 127, 127, 127,
	104, 104, 113, 113, 114, 114, 105, 105, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 117, 117,
	116, 116, 116, 118, 118, 119, 119, 119, 126, 126,
	122, 122, 123, 123, 128, 128, 129, 129, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	193, 194, 133, 134, 134, 134,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 10, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 1, 1, 1, 3, 0, 4, 3, 4, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 8, 4, 6, 5, 5, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 4, 2,
	4, 1, 3, 3, 3, 8, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 2, 2, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 0, 1, 0,
	1, 2, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 0, 2, 2, 0, 2, 1, 2, 1, 0,
	2, 5, 4, 1, 2, 2, 3, 2, 0, 1,
	2, 3, 3, 2, 2, 1, 1, 0, 1, 1,
	3, 2, 3, 1, 10, 11, 11, 12, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 3, 1, 2,
	3, 1, 1, 1, 6, 10, 8, 7, 7, 7,
	9, 7, 7, 4, 5, 7, 5, 5, 5, 12,
	7, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 4, 3, 2, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	3, 3, 2, 3, 4, 3, 7, 5, 4, 2,
	4, 2, 2, 2, 2, 3, 3, 5, 2, 3,
	1, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 3, 3, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 0, 1, 0, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 2, 1,
	3, 1, 1, 1, 3, 1, 3, 3, 7, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 4, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 7, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -191, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -19, -20, -21, -23, -24, -25,
	-22, -16, -3, -4, 6, 7, -29, 9, 10, 30,
	-17, 115, 116, 118, 117, 149, 119, 142, 50, 162,
	163, 165, 166, 25, 143, 144, 147, 148, 31, 32,
	121, -193, 8, 253, 54, -192, 270, -85, 15, -28,
	5, -26, -196, -26, -26, -26, -26, -26, -167, -169,
	54, 90, -119, 125, 72, 245, 122, 123, 129, -122,
	57, -121, 263, 135, 162, 173, 167, 195, 187, 264,
	136, 185, 188, 232, 215, 227, 66, 165, 241, 145,
	183, 179, 177, 27, 229, 200, 268, 178, 228, 121,
	138, 133, 201, 205, 233, 171, 172, 235, 199, 134,
	33, 265, 35, 153, 236, 203, 198, 194, 197, 170,
	193, 39, 207, 206, 208, 231, 190, 139, 180, 18,
	239, 148, 151, 230, 202, 204, 130, 155, 267, 237,
	176, 140, 152, 147, 240, 141, 166, 217, 234, 243,
	38, 212, 169, 132, 163, 159, 218, 191, 154, 181,
	182, 196, 168, 192, 164, 156, 149, 242, 213, 269,
	175, 189, 186, 160, 157, 158, 219, 220, 221, 222,
	223, 224, 161, 266, 238, 184, 214, -105, 125, 222,
	127, 123, 123, 124, 125, 245, 122, 123, -53, -128,
	57, -121, 125, 123, 108, 188, 232, 115, 216, 217,
	229, 124, 33, 230, 155, -137, 123, -108, 215, 219,
	220, 221, 224, 222, 161, 57, 234, 233, 225, -128,
	164, -133, -53, -133, -133, -133, -133, 218, 218, -133,
	-2, -89, 17, 16, -5, -3, -193, 6, 20, 21,
	-32, 40, 41, -27, -38, 99, -39, -128, -58, 74,
	-63, 29, 57, -121, 23, -62, -59, -78, -76, -77,
	108, 109, 110, 97, 98, 105, 75, 111, -67, -65,
	-66, -68, 59, 58, 67, 60, 61, 62, 63, 68,
	69, 70, -122, -74, -193, 44, 45, 254, 255, 256,
	257, 262, 258, 77, 34, 244, 252, 251, 250, 248,
	249, 246, 247, 260, 261, 128, 245, 103, 253, -105,
	-105, 11, -48, -53, -97, -136, 164, -101, 234, 233,
	-123, -99, -122, -120, 232, 188, 231, 120, 73, 22,
	24, 210, 76, 108, 16, 77, 107, 254, 115, 48,
	246, 247, 244, 256, 257, 245, 216, 29, 10, 25,
	143, 21, 101, 117, 80, 81, 146, 23, 144, 70,
	19, 51, 11, 13, 14, 128, 127, 92, 124, 46,
	8, 111, 26, 89, 42, 28, 44, 90, 17, 248,
	249, 31, 262, 150, 103, 49, 36, 74, 68, 71,
	52, 72, 15, 47, 91, 118, 253, 45, 122, 6,
	259, 30, 142, 43, 123, 79, 260, 261, 126, 69,
	5, 129, 32, 9, 50, 53, 250, 251, 252, 175,
	34, 78, 12, -168, 90, -161, 57, -53, 124, -53,
	253, -114, 128, -114, -114, 123, -53, 115, 117, 120,
	52, -18, -53, -113, 128, 57, -113, -113, -113, -53,
	112, -53, 57, 30, -134, -193, -123, 245, 57, 155,
	123, 156, 125, -134, -134, -134, -134, -134, 159, 160,
	-134, -111, -110, 227, 228, 218, 226, 12, 218, 158,
	-134, -133, -133, -194, 56, -90, 19, 31, -39, -128,
	-86, -87, -39, -85, -2, -26, 36, -30, 21, 65,
	11, -125, 73, 72, 89, -124, 22, -122, 59, 112,
	-39, -60, 92, 74, 90, 91, 76, 94, 93, 104,
	97, 98, 99, 100, 101, 102, 103, 95, 96, 107,
	82, 83, 84, 85, 86, 87, 88, -107, -193, -77,
	-193, 113, 114, -63, -63, -63, -63, -63, -63, -63,
	-63, -193, -2, -72, -39, -193, -193, -193, -193, -193,
	-193, -193, -193, -193, -81, -39, -193, -197, -69, -193,
	-197, -69, -197, -69, -197, -193, -197, -69, -197, -69,
	-197, -197, -69, -193, -193, -193, -193, -193, -193, -54,
	26, -53, -41, -42, -43, -44, -55, -77, -193, -53,
	-53, -48, -195, 55, 11, 53, 55, -97, 164, -98,
	-102, 235, 237, 82, -127, -122, 59, 29, 30, 56,
	55, -53, -139, -142, -143, -145, -144, -146, -140, -141,
	175, 185, 186, 108, 189, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 30, 145, 181, 182, 183,
	184, 201, 202, 203, 204, 205, 206, 207, 208, 167,
	187, 264, 168, 169, 170, 171, 172, 173, 176, 177,
	178, 179, 180, 57, -134, 125, 57, 74, 57, -53,
	-53, -134, 157, 157, 123, 123, -53, 55, 126, -48,
	23, 52, -53, 57, 57, -129, -128, -120, -134, -134,
	-134, -134, -134, -53, -134, -134, -134, -134, 11, -109,
	11, 92, -39, 52, 9, 92, 55, 18, 112, 55,
	-88, 24, 25, -89, -194, -32, -64, -122, 60, 63,
	-31, 43, -53, -39, -39, -70, 68, 74, 69, 70,
	-124, 99, -129, -123, -120, -63, -71, -74, -77, 64,
	92, 90, 91, 76, -63, -63, -63, -63, -63, -63,
	-63, -63, -63, -63, -63, -63, -63, -63, -63, -135,
	57, 59, 57, -62, -62, -122, -37, 21, -36, -38,
	-194, 55, -194, -2, -36, -36, -39, -39, -78, 59,
	-36, -78, 59, -36, -36, -30, -79, -80, 78, -78,
	-122, -128, -194, -63, -122, -122, -36, -37, -36, -36,
	-93, 151, -53, 30, 55, -49, -51, -50, -52, 42,
	46, 48, 43, 44, 45, 49, -132, 22, -41, -193,
	-131, 151, -130, 22, -128, 59, -93, 53, -41, -53,
	-101, -98, 55, 236, 238, 239, 52, 71, -39, -152,
	107, -170, -171, -172, -123, 59, 60, -161, -162, -163,
	-173, 137, -178, 130, 132, 129, -164, 138, 124, 28,
	56, -157, 68, 74, -153, 213, -147, 54, -147, -147,
	-147, -147, -151, 188, -151, -151, -151, 54, 54, -147,
	-147, -147, -155, 54, -155, -155, -156, 54, -156, -126,
	53, -53, -134, 23, -134, -115, 120, 117, 118, -181,
	116, 210, 188, 66, 29, 15, 254, 151, 269, 57,
	152, -122, -122, -53, -53, 120, 117, -53, -53, -53,
	-134, -53, -112, 90, 12, -128, -128, -53, 38, -39,
	-39, -129, -87, -90, -104, 19, 11, 34, 34, -36,
	68, 69, 70, 112, -193, -71, -63, -63, -63, -35,
	146, 73, -194, -194, -36, 55, -39, -194, -194, -194,
	55, 53, 22, 11, 11, -194, 11, 11, -194, -194,
	-36, -82, -80, 80, -39, -194, 112, -194, 55, 55,
	-194, -194, -194, -194, -61, 30, 34, -2, -193, -193,
	-96, -100, -78, -42, -43, -43, -42, -43, 42, 42,
	42, 47, 42, 47, 42, -50, -128, -194, -56, 50,
	127, 51, -193, -130, -57, 12, -41, -57, -102, -103,
	240, 237, 243, 57, 59, 55, -172, 82, 54, 57,
	28, -164, -164, -165, 57, -165, 28, -149, 29, 68,
	-154, 214, 60, -151, -151, -152, 30, -152, -152, -152,
	-160, 59, -160, 60, 60, 52, -122, -134, -133, -106,
	-187, 131, 137, 138, 133, 124, 28, 130, 132, 151,
	129, -106, -187, 131, -116, -118, 126, 22, 124, 28,
	151, -186, 53, 157, 157, 126, -134, -109, 59, -39,
	39, 112, -53, -40, 11, 99, -123, -37, -35, 73,
	-63, -63, -194, -38, -138, 108, 185, 145, 183, 179,
	199, 190, 212, 181, 213, -135, -138, -63, -63, -63,
	-63, 263, -85, 81, -39, 79, -123, -63, -63, -95,
	52, -96, -73, -75, -74, -193, -2, -91, -122, -94,
	-122, -57, 55, 82, -46, -45, 52, 53, -47, 52,
	-45, 42, 42, 124, 124, 124, -94, -85, -39, -57,
	237, 241, 242, -171, -172, -175, -174, -122, -178, -165,
	-165, 54, -150, 52, -63, 56, -152, -152, 57, 108,
	56, 55, 56, 55, 56, 55, -53, 54, -161, -133,
	57, -133, 57, -53, -133, -122, -184, 266, -185, 57,
	-122, -122, -53, -112, -57, -41, -194, -63, -194, -147,
	-147, -147, -156, -147, 172, -147, 172, -194, -194, 19,
	19, 19, 19, -193, -34, 259, -39, 55, 55, 27,
	-95, 55, -194, -194, -194, 55, 112, -194, 55, -85,
	-100, -39, -39, 54, -39, -193, -193, -193, -194, -89,
	56, 55, -147, -92, -122, -158, 210, 9, -151, 59,
	-151, 60, 60, -134, -161, -133, -117, 126, 22, 26,
	-183, -182, -123, 54, -83, 13, -151, 57, -63, -63,
	-63, -63, -63, -194, 59, -63, -63, 28, -75, 34,
	-2, -193, -122, -122, -122, -89, -92, -92, -92, -92,
	-131, -177, -176, 53, 134, 66, -174, 56, 55, -159,
	130, 28, 129, -66, -152, -152, 56, 56, 56, 57,
	-193, 55, 82, -92, -84, 14, 16, -194, -194, -194,
	-194, -33, 92, 266, -194, -194, 9, -73, -2, 112,
	56, -194, -194, -194, -56, -176, 57, -166, 82, 59,
	140, -122, -148, 66, 28, 28, -133, -179, -180, 151,
	-182, -172, 56, -39, -72, -194, 264, 49, 267, -96,
	-194, -122, 60, -53, 59, -194, 55, -122, -186, 39,
	265, 268, 54, -180, 34, -184, 39, -92, 153, 266,
	56, 154, 267, -189, -190, 52, -193, 268, -190, 52,
	10, 9, -63, 150, -188, 141, 136, 139, 30, -188,
	-194, -194, 135, 29, 68,
}
var yyDef = [...]int{

	23, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 562, 0, 320, 320, 320, 320, 320, 320,
	0, 635, 616, 0, 0, 0, 0, -2, 306, 307,
	0, 309, 310, 862, 862, 862, 862, 862, 0, 0,
	862, 0, 35, 36, 860, 1, 3, 570, 0, 0,
	324, 327, 322, 0, 616, 616, 0, 0, 62, 63,
	0, 0, 0, 846, 0, 614, 614, 614, 636, 637,
	640, 641, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 0, 0, 0,
	617, 0, 612, 0, 612, 612, 612, 0, 256, 392,
	644, 645, 846, 0, 0, 0, 863, 0, 863, 863,
	269, 863, 863, 272, 863, 0, 863, 0, 279, 281,
	282, 283, 284, 0, 288, 863, 303, 304, 293, 305,
	308, 311, 312, 313, 314, 315, 316, 862, 862, 319,
	29, 574, 0, 0, 562, 31, 0, 320, 325, 326,
	330, 328, 329, 321, 0, 338, 342, 0, 400, 0,
	405, 407, -2, -2, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 471,
	472, 473, 547, 548, 549, 550, 551, 552, 553, 554,
	409, 410, 544, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 506, 506, 506, 506, 506,
	506, 506, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 43, 47, 0, 836, 598, -2, -2,
	0, 0, 642, 643, -2, 754, -2, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 0, 0, 81, 0, 79, 0, 863,
	0, 0, 0, 0, 0, 0, 863, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 257, 863, 863, 260, 864, 865, 863, 863, 863,
	0, 863, 863, 267, 268, 270, 271, 273, 863, 863,
	275, 0, 296, 294, 295, 290, 291, 0, 285, 286,
	289, 317, 318, 30, 861, 24, 0, 0, 571, 0,
	563, 564, 567, 570, 29, 327, 0, 332, 331, 323,
	0, 339, 0, 0, 0, 343, 0, 345, 346, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 428, 429, 430, 431, 432, 433, 406, 0, 420,
	0, 0, 0, 462, 463, 464, 465, 466, 467, 468,
	0, 334, 29, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 0, 536, 0, 490, 498, 0,
	491, 499, 492, 500, 493, 0, 494, 501, 495, 502,
	496, 497, 503, 0, 0, 0, 334, 0, 0, 45,
	0, 391, 0, 349, 351, 352, 353, -2, 0, 375,
	-2, 0, 0, 0, 41, 42, 0, 48, 836, 50,
	51, 0, 0, 0, 161, 607, 608, 609, 605, 205,
	0, 0, 149, 145, 87, 88, 89, 90, 138, 92,
	93, 138, 138, 138, 138, 158, 158, 158, 158, 121,
	122, 123, 124, 125, 0, 0, 108, 138, 138, 138,
	112, 128, 129, 130, 131, 132, 133, 134, 135, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 140, 140,
	140, 142, 142, 638, 65, 0, 863, 0, 863, 77,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 250,
	613, 0, 863, 253, 254, 393, 646, 647, 258, 259,
	261, 262, 263, 264, 265, 266, 274, 278, 0, 299,
	0, 0, 280, 0, 575, 0, 0, 0, 0, 0,
	566, 568, 569, 574, 32, 330, 0, 555, 0, 0,
	0, 333, 27, 401, 402, 404, 421, 0, 423, 425,
	344, 340, 0, 545, -2, 411, 412, 436, 437, 438,
	0, 0, 0, 0, 434, 416, 0, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	520, 521, 0, 459, 460, 469, 0, 0, 335, 336,
	439, 0, 593, 29, 0, 0, 0, 0, 444, 547,
	0, 444, 547, 0, 0, 0, 542, 539, 0, 0,
	544, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 383, 0, 0, 0, 0, 374, 0, 0,
	394, 804, 376, 0, 378, 379, 398, 0, 398, 44,
	599, 49, 0, 0, 54, 55, 600, 601, 602, 603,
	0, 78, 206, 208, 211, 212, 213, 82, 83, 84,
	0, 0, 193, 0, 0, 187, 187, 0, 185, 186,
	80, 152, 150, 0, 147, 146, 91, 0, 158, 158,
	115, 116, 161, 0, 161, 161, 161, 0, 0, 109,
	110, 111, 103, 0, 104, 105, 106, 0, 107, 0,
	0, 863, 67, 615, 68, 862, 231, 231, 630, 224,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	0, 69, 226, 228, 227, 0, 0, 0, 248, 863,
	252, 296, 277, 0, 0, 297, 298, 287, 0, 572,
	573, 0, 565, 25, 0, 610, 611, 556, 557, 347,
	422, 424, 426, 0, 334, 413, 434, 417, 0, 414,
	0, 0, 408, 474, 0, 0, 441, -2, 477, 478,
	0, 0, 0, 0, 0, 513, 0, 0, 514, 0,
	562, 0, 540, 0, 0, 489, 0, 508, 0, 0,
	509, 510, 511, 512, 587, 0, 0, -2, 0, 0,
	398, 595, 0, 350, 369, 371, 0, 366, 381, 382,
	384, 0, 386, 0, 388, 389, 354, 356, 357, 0,
	0, 0, 0, 377, 562, 0, 398, 40, 52, 53,
	0, 0, 59, 162, 163, 0, 209, 0, 0, 0,
	180, 187, 187, 183, 188, 184, 0, 154, 0, 151,
	86, 148, 0, 161, 161, 117, 0, 118, 119, 120,
	0, 136, 0, 0, 0, 0, 639, 66, 214, 0,
	862, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 0, 862, 0, 0, 862, 631, 632, 633, 634,
	0, 72, 0, 0, 0, 0, 251, 299, 300, 301,
	576, 0, 26, 398, 0, 341, 546, 0, 415, 0,
	435, 418, 475, 337, 0, 138, 138, 525, 138, 142,
	528, 138, 530, 138, 533, 0, 0, 0, 0, 0,
	0, 0, 537, 488, 543, 0, 545, 0, 0, 33,
	0, 587, 577, 589, 591, 0, 29, 0, 583, 0,
	361, 562, 0, 0, 363, 370, 0, 0, 364, 0,
	365, 385, 387, 0, 0, 0, 0, 570, 399, 39,
	56, 57, 58, 207, 210, 0, 189, 138, 192, 181,
	182, 0, 156, 0, 153, 139, 113, 114, 159, 160,
	158, 0, 158, 0, 143, 0, 863, 0, 862, 217,
	218, 219, 0, 221, 222, 0, 225, 0, 70, 71,
	0, 230, 249, 276, 558, 348, 476, 419, 479, 522,
	158, 526, 527, 529, 531, 532, 534, 481, 480, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	34, 0, 592, -2, 0, 0, 0, 46, 0, 570,
	596, 597, 367, 0, 372, 0, 0, 0, 375, 38,
	172, 0, 191, 0, 359, 164, 157, 0, 161, 137,
	161, 0, 0, 64, 0, 216, 0, 628, 629, 0,
	73, 74, 0, 0, 560, 0, 523, 524, 0, 0,
	0, 0, 515, 487, 538, 0, 0, 0, 590, 0,
	-2, 0, 585, 584, 362, 37, 0, 0, 0, 0,
	394, 171, 173, 0, 178, 0, 190, 0, 0, 169,
	0, 166, 168, 155, 126, 127, 141, 144, 862, 220,
	0, 0, 0, 0, 28, 0, 0, 482, 484, 483,
	485, 0, 0, 0, 504, 505, 0, 580, 29, 0,
	368, 395, 396, 397, 358, 174, 175, 0, 179, 177,
	0, 360, 85, 0, 165, 167, 215, 0, 243, 0,
	75, 76, 69, 561, 559, 486, 0, 0, 0, 588,
	-2, 586, 176, 0, 170, 242, 0, 0, 72, 516,
	0, 519, 0, 244, 0, 229, 517, 0, 0, 0,
	194, 0, 0, 195, 196, 0, 0, 518, 197, 0,
	0, 0, 0, 0, 198, 200, 201, 0, 0, 199,
	245, 246, 202, 203, 204,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 75, 3, 3, 3, 102, 94, 3,
	54, 56, 99, 97, 55, 98, 112, 100, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 270,
	83, 82, 84, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 104, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 93, 3, 105,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	76, 77, 78, 79, 80, 81, 85, 86, 87, 88,
	89, 90, 91, 92, 95, 96, 101, 103, 106, 107,
	108, 109, 110, 111, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:316
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:321
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:322
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:326
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:348
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:354
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:362
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:366
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:372
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line sql.y:379
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:385
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:389
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:395
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:399
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:406
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:418
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:430
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:434
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:440
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:446
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:450
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:454
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:459
		{
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:460
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:464
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:468
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:473
		{
			yyVAL.partitions = nil
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:477
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:483
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:487
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:491
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:495
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:501
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:505
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:511
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:515
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:519
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:525
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:529
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:533
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:537
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:543
		{
			yyVAL.str = SessionStr
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:547
		{
			yyVAL.str = GlobalStr
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:553
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:558
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:564
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:569
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:573
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:577
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:581
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:586
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:590
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:596
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:601
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:606
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:612
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:617
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:623
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:629
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:640
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:647
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:651
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:657
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:662
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:666
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:670
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:676
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:688
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:700
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:705
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:906
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:911
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:916
		{
			yyVAL.sqlVal = nil
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:920
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:925
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:929
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:937
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:947
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:955
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:959
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:964
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:968
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:974
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:978
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:982
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:987
		{
			yyVAL.optVal = nil
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:991
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:996
		{
			yyVAL.optVal = nil
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1000
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1005
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1009
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1014
		{
			yyVAL.str = ""
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1018
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1022
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1027
		{
			yyVAL.str = ""
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1031
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1035
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1040
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1044
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1048
		{
			yyVAL.colKeyOpt = colKey
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1052
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1056
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1061
		{
			yyVAL.sqlVal = nil
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1065
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 171:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1071
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1075
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1081
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1085
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1091
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1095
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1100
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1106
		{
			yyVAL.str = ""
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1110
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1116
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1120
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1124
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1128
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1132
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1138
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1142
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1147
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1157
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1161
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1167
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1173
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1177
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 194:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line sql.y:1184
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 195:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line sql.y:1188
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 196:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line sql.y:1192
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 197:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line sql.y:1196
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1202
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1208
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1214
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1218
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1222
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1226
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1230
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1235
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1239
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1243
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1251
		{
			yyVAL.str = yyDollar[1].str
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1255
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1259
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1265
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1269
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1273
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1279
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 215:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line sql.y:1283
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 216:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:1290
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1297
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1301
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 219:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1305
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1309
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1313
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 222:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1318
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1323
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1327
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 225:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1331
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[5].colIdent,
				Type:   yyDollar[6].colIdent,
				Params: yyDollar[7].vindexParams,
			}}
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1339
		{
			yyVAL.statement = &DDL{Action: DropVindexStr, VindexSpec: &VindexSpec{
				Name: yyDollar[5].colIdent,
			}}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1345
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1349
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 229:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line sql.y:1353
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 230:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1366
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1377
		{
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1379
		{
		}
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1394
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1400
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1404
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 245:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:1410
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 246:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:1414
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1420
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1426
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1430
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1438
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1446
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1451
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1459
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1463
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1469
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1473
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1478
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1484
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1489
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1493
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1497
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1502
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1506
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1510
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1514
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1518
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1522
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1526
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1530
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1534
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1538
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1542
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1546
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1550
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1554
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1558
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1563
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1573
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1577
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1581
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1587
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1591
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1595
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1599
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1603
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1607
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1611
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1615
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1625
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1641
		{
			yyVAL.str = ""
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1645
		{
			yyVAL.str = "full "
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1651
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1655
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1661
		{
			yyVAL.str = ""
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1665
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1669
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1675
		{
			yyVAL.showFilter = nil
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1679
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1683
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1689
		{
			yyVAL.str = ""
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1693
		{
			yyVAL.str = SessionStr
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1697
		{
			yyVAL.str = GlobalStr
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1703
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1707
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1713
		{
			yyVAL.statement = &Begin{}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1717
		{
			yyVAL.statement = &Begin{}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1723
		{
			yyVAL.statement = &Commit{}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1729
		{
			yyVAL.statement = &Rollback{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1735
		{
			yyVAL.statement = &OtherRead{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1740
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1744
		{
			yyVAL.statement = &OtherRead{}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1748
		{
			yyVAL.statement = &OtherRead{}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1752
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1756
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1760
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1764
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1770
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1774
		{
			setAllowComments(yylex, true)
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1778
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1784
		{
			yyVAL.bytes2 = nil
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1788
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1794
		{
			yyVAL.str = UnionStr
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1798
		{
			yyVAL.str = UnionAllStr
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1802
		{
			yyVAL.str = UnionDistinctStr
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1807
		{
			yyVAL.str = ""
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1811
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1815
		{
			yyVAL.str = SQLCacheStr
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1820
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1824
		{
			yyVAL.str = DistinctStr
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1829
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1833
		{
			yyVAL.str = StraightJoinHint
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1838
		{
			yyVAL.selectExprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1842
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1848
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1852
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1858
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1862
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1866
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1870
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1875
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1879
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1883
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1890
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1895
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1899
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1905
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1909
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1919
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1923
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1927
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1933
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1939
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1943
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1949
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1953
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1959
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1963
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1976
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1980
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1984
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1988
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1994
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1996
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2000
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2002
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2006
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2008
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2011
		{
			yyVAL.empty = struct{}{}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2013
		{
			yyVAL.empty = struct{}{}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2016
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2020
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2024
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2031
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2037
		{
			yyVAL.str = JoinStr
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2041
		{
			yyVAL.str = JoinStr
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2045
		{
			yyVAL.str = JoinStr
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2051
		{
			yyVAL.str = StraightJoinStr
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2057
		{
			yyVAL.str = LeftJoinStr
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2061
		{
			yyVAL.str = LeftJoinStr
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2065
		{
			yyVAL.str = RightJoinStr
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2069
		{
			yyVAL.str = RightJoinStr
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2075
		{
			yyVAL.str = NaturalJoinStr
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2079
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2089
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2093
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2099
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2103
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2108
		{
			yyVAL.indexHints = nil
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2112
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2116
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2120
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2125
		{
			yyVAL.expr = nil
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2129
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2135
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2139
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2143
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2147
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2151
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2155
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2159
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2165
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2169
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2175
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2179
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2185
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2189
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2193
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2197
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2201
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2205
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2209
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2213
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2217
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2221
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2227
		{
			yyVAL.str = IsNullStr
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2231
		{
			yyVAL.str = IsNotNullStr
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2235
		{
			yyVAL.str = IsTrueStr
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2239
		{
			yyVAL.str = IsNotTrueStr
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2243
		{
			yyVAL.str = IsFalseStr
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2247
		{
			yyVAL.str = IsNotFalseStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2253
		{
			yyVAL.str = EqualStr
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2257
		{
			yyVAL.str = LessThanStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2261
		{
			yyVAL.str = GreaterThanStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2265
		{
			yyVAL.str = LessEqualStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2269
		{
			yyVAL.str = GreaterEqualStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2273
		{
			yyVAL.str = NotEqualStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2277
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2282
		{
			yyVAL.expr = nil
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2286
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2292
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2296
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2300
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2306
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2312
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2316
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2322
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2326
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2330
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2334
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2338
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2342
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2346
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2350
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2354
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2358
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2362
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2366
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2370
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2374
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2378
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2382
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2386
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2390
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2394
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2398
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2402
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2406
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2410
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2414
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2422
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2436
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2440
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2444
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2462
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2466
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2470
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2480
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2484
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2488
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2492
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 481:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2496
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:2500
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:2504
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:2508
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 485:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:2512
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 486:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2516
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 487:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:2520
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2524
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2528
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2538
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2561
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2572
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2577
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2581
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2585
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2590
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2595
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2600
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:2604
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:2608
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2618
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2654
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2658
		{
			yyVAL.str = BooleanModeStr
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2662
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 518:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:2666
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2670
		{
			yyVAL.str = QueryExpansionStr
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2676
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2686
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2690
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2694
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2698
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2702
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2706
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2712
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2716
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2720
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2724
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2728
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2732
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2736
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2741
		{
			yyVAL.expr = nil
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2745
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2750
		{
			yyVAL.str = string("")
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2754
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2760
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2764
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2770
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2775
		{
			yyVAL.expr = nil
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2779
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2785
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2789
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2793
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2799
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2803
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2807
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2811
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2815
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2819
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2823
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2827
		{
			yyVAL.expr = &NullVal{}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2833
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2842
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2846
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2851
		{
			yyVAL.exprs = nil
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2855
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2860
		{
			yyVAL.expr = nil
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2864
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2869
		{
			yyVAL.orderBy = nil
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2873
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2879
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2883
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2889
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2894
		{
			yyVAL.str = AscScr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2898
		{
			yyVAL.str = AscScr
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2902
		{
			yyVAL.str = DescScr
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2907
		{
			yyVAL.limit = nil
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2911
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2915
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2919
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2924
		{
			yyVAL.str = ""
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2928
		{
			yyVAL.str = ForUpdateStr
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2932
		{
			yyVAL.str = ShareModeStr
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2945
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2949
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2953
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2958
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2962
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2966
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2973
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2977
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2981
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2985
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2990
		{
			yyVAL.updateExprs = nil
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2994
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3000
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3004
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3010
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:3014
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3020
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3026
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3036
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3040
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3046
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3052
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3056
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3062
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3066
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3070
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3074
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:3081
		{
			yyVAL.bytes = []byte("charset")
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3088
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3092
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3096
		{
			yyVAL.expr = &Default{}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3105
		{
			yyVAL.byt = 0
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:3107
		{
			yyVAL.byt = 1
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3110
		{
			yyVAL.byt = 0
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:3112
		{
			yyVAL.byt = 1
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3115
		{
			yyVAL.str = ""
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3117
		{
			yyVAL.str = IgnoreStr
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3121
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3123
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3125
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3127
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3129
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3131
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3133
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3135
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3137
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3139
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3143
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3145
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3148
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3150
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3152
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3156
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3158
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3161
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3163
		{
			yyVAL.empty = struct{}{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3165
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3168
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:3170
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3174
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3178
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3185
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3191
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3195
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3202
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3440
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3449
		{
			decNesting(yylex)
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3454
		{
			skipToEnd(yylex)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:3459
		{
			skipToEnd(yylex)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3463
		{
			skipToEnd(yylex)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3467
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
