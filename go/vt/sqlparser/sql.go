// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const ENABLE = 57517
const DISABLE = 57518
const EACH = 57519
const ROW = 57520
const BEFORE = 57521
const FOLLOWS = 57522
const PRECEDES = 57523
const DEFINER = 57524
const INVOKER = 57525
const INOUT = 57526
const OUT = 57527
const DETERMINISTIC = 57528
const CONTAINS = 57529
const READS = 57530
const MODIFIES = 57531
const SQL = 57532
const SECURITY = 57533
const TEMPORARY = 57534
const CLASS_ORIGIN = 57535
const SUBCLASS_ORIGIN = 57536
const MESSAGE_TEXT = 57537
const MYSQL_ERRNO = 57538
const CONSTRAINT_CATALOG = 57539
const CONSTRAINT_SCHEMA = 57540
const CONSTRAINT_NAME = 57541
const CATALOG_NAME = 57542
const SCHEMA_NAME = 57543
const TABLE_NAME = 57544
const COLUMN_NAME = 57545
const CURSOR_NAME = 57546
const SIGNAL = 57547
const RESIGNAL = 57548
const SQLSTATE = 57549
const DECLARE = 57550
const CONDITION = 57551
const CURSOR = 57552
const CONTINUE = 57553
const EXIT = 57554
const UNDO = 57555
const HANDLER = 57556
const FOUND = 57557
const SQLWARNING = 57558
const SQLEXCEPTION = 57559
const USER = 57560
const IDENTIFIED = 57561
const ROLE = 57562
const REUSE = 57563
const GRANT = 57564
const GRANTS = 57565
const REVOKE = 57566
const NONE = 57567
const ATTRIBUTE = 57568
const RANDOM = 57569
const PASSWORD = 57570
const INITIAL = 57571
const AUTHENTICATION = 57572
const SSL = 57573
const X509 = 57574
const CIPHER = 57575
const ISSUER = 57576
const SUBJECT = 57577
const ACCOUNT = 57578
const EXPIRE = 57579
const NEVER = 57580
const DAY = 57581
const OPTION = 57582
const OPTIONAL = 57583
const EXCEPT = 57584
const ADMIN = 57585
const PRIVILEGES = 57586
const MAX_QUERIES_PER_HOUR = 57587
const MAX_UPDATES_PER_HOUR = 57588
const MAX_CONNECTIONS_PER_HOUR = 57589
const MAX_USER_CONNECTIONS = 57590
const FLUSH = 57591
const FAILED_LOGIN_ATTEMPTS = 57592
const PASSWORD_LOCK_TIME = 57593
const REQUIRE = 57594
const PROXY = 57595
const ROUTINE = 57596
const TABLESPACE = 57597
const CLIENT = 57598
const SLAVE = 57599
const EVENT = 57600
const EXECUTE = 57601
const FILE = 57602
const RELOAD = 57603
const REPLICATION = 57604
const SHUTDOWN = 57605
const SUPER = 57606
const USAGE = 57607
const LOGS = 57608
const ENGINE = 57609
const ERROR = 57610
const GENERAL = 57611
const HOSTS = 57612
const OPTIMIZER_COSTS = 57613
const RELAY = 57614
const SLOW = 57615
const USER_RESOURCES = 57616
const NO_WRITE_TO_BINLOG = 57617
const CHANNEL = 57618
const BEGIN = 57619
const START = 57620
const TRANSACTION = 57621
const COMMIT = 57622
const ROLLBACK = 57623
const SAVEPOINT = 57624
const WORK = 57625
const RELEASE = 57626
const BIT = 57627
const TINYINT = 57628
const SMALLINT = 57629
const MEDIUMINT = 57630
const INT = 57631
const INTEGER = 57632
const BIGINT = 57633
const INTNUM = 57634
const SERIAL = 57635
const REAL = 57636
const DOUBLE = 57637
const FLOAT_TYPE = 57638
const DECIMAL = 57639
const NUMERIC = 57640
const DEC = 57641
const FIXED = 57642
const PRECISION = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const NVARCHAR = 57654
const NATIONAL = 57655
const VARYING = 57656
const TEXT = 57657
const TINYTEXT = 57658
const MEDIUMTEXT = 57659
const LONGTEXT = 57660
const LONG = 57661
const BLOB = 57662
const TINYBLOB = 57663
const MEDIUMBLOB = 57664
const LONGBLOB = 57665
const JSON = 57666
const ENUM = 57667
const GEOMETRY = 57668
const POINT = 57669
const LINESTRING = 57670
const POLYGON = 57671
const GEOMETRYCOLLECTION = 57672
const MULTIPOINT = 57673
const MULTILINESTRING = 57674
const MULTIPOLYGON = 57675
const LOCAL = 57676
const LOW_PRIORITY = 57677
const NULLX = 57678
const AUTO_INCREMENT = 57679
const APPROXNUM = 57680
const SIGNED = 57681
const UNSIGNED = 57682
const ZEROFILL = 57683
const COLLATION = 57684
const DATABASES = 57685
const SCHEMAS = 57686
const TABLES = 57687
const FULL = 57688
const PROCESSLIST = 57689
const COLUMNS = 57690
const FIELDS = 57691
const ENGINES = 57692
const PLUGINS = 57693
const NAMES = 57694
const CHARSET = 57695
const GLOBAL = 57696
const SESSION = 57697
const ISOLATION = 57698
const LEVEL = 57699
const READ = 57700
const WRITE = 57701
const ONLY = 57702
const REPEATABLE = 57703
const COMMITTED = 57704
const UNCOMMITTED = 57705
const SERIALIZABLE = 57706
const ENCRYPTION = 57707
const CURRENT_TIMESTAMP = 57708
const DATABASE = 57709
const CURRENT_DATE = 57710
const CURRENT_USER = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const UTC_DATE = 57715
const UTC_TIME = 57716
const UTC_TIMESTAMP = 57717
const REPLACE = 57718
const CONVERT = 57719
const CAST = 57720
const SUBSTR = 57721
const SUBSTRING = 57722
const TRIM = 57723
const LEADING = 57724
const TRAILING = 57725
const BOTH = 57726
const GROUP_CONCAT = 57727
const SEPARATOR = 57728
const TIMESTAMPADD = 57729
const TIMESTAMPDIFF = 57730
const OVER = 57731
const WINDOW = 57732
const GROUPING = 57733
const CURRENT = 57734
const AVG = 57735
const BIT_AND = 57736
const BIT_OR = 57737
const BIT_XOR = 57738
const COUNT = 57739
const JSON_ARRAYAGG = 57740
const JSON_OBJECTAGG = 57741
const MAX = 57742
const MIN = 57743
const STDDEV_POP = 57744
const STDDEV = 57745
const STD = 57746
const STDDEV_SAMP = 57747
const SUM = 57748
const VAR_POP = 57749
const VARIANCE = 57750
const VAR_SAMP = 57751
const CUME_DIST = 57752
const DENSE_RANK = 57753
const FIRST_VALUE = 57754
const LAG = 57755
const LAST_VALUE = 57756
const LEAD = 57757
const NTH_VALUE = 57758
const NTILE = 57759
const ROW_NUMBER = 57760
const PERCENT_RANK = 57761
const RANK = 57762
const MATCH = 57763
const AGAINST = 57764
const BOOLEAN = 57765
const LANGUAGE = 57766
const WITH = 57767
const QUERY = 57768
const EXPANSION = 57769
const UNUSED = 57770
const ARRAY = 57771
const DESCRIPTION = 57772
const EMPTY = 57773
const JSON_TABLE = 57774
const LATERAL = 57775
const MEMBER = 57776
const RECURSIVE = 57777
const ACTIVE = 57778
const BUCKETS = 57779
const CLONE = 57780
const COMPONENT = 57781
const DEFINITION = 57782
const ENFORCED = 57783
const EXCLUDE = 57784
const GEOMCOLLECTION = 57785
const GET_MASTER_PUBLIC_KEY = 57786
const HISTOGRAM = 57787
const HISTORY = 57788
const INACTIVE = 57789
const INVISIBLE = 57790
const LOCKED = 57791
const MASTER_COMPRESSION_ALGORITHMS = 57792
const MASTER_PUBLIC_KEY_PATH = 57793
const MASTER_TLS_CIPHERSUITES = 57794
const MASTER_ZSTD_COMPRESSION_LEVEL = 57795
const NESTED = 57796
const NETWORK_NAMESPACE = 57797
const NOWAIT = 57798
const NULLS = 57799
const OJ = 57800
const OLD = 57801
const ORDINALITY = 57802
const ORGANIZATION = 57803
const OTHERS = 57804
const PATH = 57805
const PERSIST = 57806
const PERSIST_ONLY = 57807
const PRIVILEGE_CHECKS_USER = 57808
const PROCESS = 57809
const REFERENCE = 57810
const REQUIRE_ROW_FORMAT = 57811
const RESOURCE = 57812
const RESPECT = 57813
const RESTART = 57814
const RETAIN = 57815
const SECONDARY = 57816
const SECONDARY_ENGINE = 57817
const SECONDARY_LOAD = 57818
const SECONDARY_UNLOAD = 57819
const SKIP = 57820
const SRID = 57821
const THREAD_PRIORITY = 57822
const TIES = 57823
const VCPU = 57824
const VISIBLE = 57825
const SYSTEM = 57826
const INFILE = 57827
const GENERATED = 57828
const ALWAYS = 57829
const STORED = 57830
const VIRTUAL = 57831
const NVAR = 57832
const PASSWORD_LOCK = 57833

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1072,
	-1, 43,
	147, 1136,
	148, 1154,
	-2, 232,
	-1, 49,
	186, 701,
	187, 701,
	-2, 691,
	-1, 551,
	135, 1164,
	-2, 1158,
	-1, 552,
	135, 1165,
	-2, 1159,
	-1, 656,
	98, 1449,
	135, 1449,
	-2, 1120,
	-1, 657,
	98, 1567,
	135, 1567,
	-2, 1121,
	-1, 662,
	98, 1473,
	135, 1473,
	-2, 1122,
	-1, 663,
	98, 1520,
	135, 1520,
	-2, 1123,
	-1, 664,
	98, 1521,
	135, 1521,
	-2, 1124,
	-1, 665,
	98, 1396,
	135, 1396,
	-2, 1128,
	-1, 667,
	98, 1497,
	135, 1497,
	-2, 1130,
	-1, 1185,
	1, 798,
	5, 798,
	12, 798,
	13, 798,
	14, 798,
	15, 798,
	17, 798,
	19, 798,
	30, 798,
	31, 798,
	56, 798,
	57, 798,
	58, 798,
	59, 798,
	60, 798,
	62, 798,
	63, 798,
	66, 798,
	67, 798,
	69, 798,
	70, 798,
	408, 798,
	510, 798,
	-2, 830,
	-1, 1191,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1286,
	1, 481,
	510, 481,
	-2, 479,
	-1, 1288,
	1, 481,
	510, 481,
	-2, 479,
	-1, 1442,
	135, 1167,
	-2, 1163,
	-1, 1608,
	44, 547,
	-2, 1408,
	-1, 1612,
	68, 545,
	72, 545,
	-2, 1443,
	-1, 1613,
	68, 547,
	-2, 1356,
	-1, 1616,
	68, 543,
	72, 543,
	-2, 1273,
	-1, 1617,
	68, 544,
	72, 544,
	-2, 1283,
	-1, 1664,
	1, 482,
	510, 482,
	-2, 479,
	-1, 1745,
	44, 590,
	154, 592,
	156, 590,
	157, 590,
	-2, 627,
	-1, 1821,
	5, 51,
	-2, 900,
	-1, 2133,
	69, 1330,
	70, 1330,
	135, 1330,
	-2, 732,
	-1, 2156,
	1, 855,
	5, 855,
	12, 855,
	13, 855,
	14, 855,
	15, 855,
	17, 855,
	19, 855,
	30, 855,
	31, 855,
	56, 855,
	57, 855,
	58, 855,
	59, 855,
	60, 855,
	62, 855,
	63, 855,
	66, 855,
	67, 855,
	69, 855,
	70, 855,
	408, 855,
	510, 855,
	-2, 830,
	-1, 2266,
	154, 593,
	-2, 591,
	-1, 2327,
	5, 51,
	-2, 1092,
	-1, 2542,
	41, 1174,
	-2, 1172,
	-1, 2649,
	5, 51,
	-2, 1095,
}

const yyPrivate = 57344

const yyLast = 35154

var yyAct = [...]int{
	618, 80, 2841, 2823, 2865, 2872, 2653, 2748, 2843, 1964,
	2747, 1661, 2722, 2715, 423, 2075, 877, 2780, 2824, 2660,
	7, 552, 2659, 6, 2631, 1222, 2658, 5, 554, 2636,
	2661, 8, 2629, 2562, 2170, 2485, 2339, 2720, 2657, 3,
	2589, 1886, 2542, 2445, 1856, 2150, 2058, 557, 1140, 1560,
	2047, 2126, 681, 1566, 83, 617, 1659, 2426, 543, 2544,
	1618, 1681, 2227, 2396, 1420, 2402, 406, 409, 2171, 127,
	1600, 2380, 127, 2654, 536, 1564, 2127, 1907, 127, 2057,
	1609, 80, 454, 448, 448, 2260, 570, 1980, 451, 451,
	1913, 1857, 93, 106, 1315, 2250, 1316, 2123, 1770, 1744,
	910, 127, 2135, 1598, 893, 2142, 1413, 469, 2097, 933,
	1467, 679, 127, 2025, 1318, 1599, 127, 684, 676, 535,
	127, 1476, 1605, 1428, 1707, 1914, 1650, 1363, 658, 1296,
	1667, 1955, 1335, 1666, 127, 451, 1665, 684, 1634, 661,
	1646, 1543, 1444, 1202, 1533, 127, 1038, 1536, 1550, 1185,
	962, 941, 539, 675, 559, 1663, 1045, 650, 1724, 1201,
	1041, 654, 1181, 655, 1058, 1539, 677, 426, 1588, 468,
	425, 1289, 940, 864, 1368, 1292, 2904, 2900, 2895, 1927,
	1193, 2880, 2878, 647, 1182, 1929, 85, 2860, 1156, 2836,
	2788, 82, 2591, 2590, 2184, 1361, 466, 69, 1157, 2208,
	1934, 1933, 2521, 2367, 2381, 441, 2851, 435, 446, 429,
	876, 2731, 2383, 2822, 2647, 2802, 2706, 36, 2519, 36,
	2224, 2534, 1930, 1992, 87, 88, 89, 90, 91, 2730,
	436, 2118, 36, 2522, 2609, 36, 2726, 1936, 2067, 1920,
	2576, 2632, 1694, 1851, 1694, 1921, 418, 1792, 1073, 1072,
	1082, 1083, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074,
	1852, 36, 1084, 72, 39, 40, 2321, 2646, 863, 1367,
	2723, 1971, 1203, 2470, 1204, 866, 1562, 869, 870, 81,
	1723, 81, 2166, 2167, 1585, 1586, 2068, 2386, 1049, 1621,
	2165, 671, 1365, 1366, 81, 2727, 631, 81, 637, 639,
	638, 635, 636, 634, 633, 632, 1409, 1410, 897, 898,
	1932, 1031, 901, 1935, 1584, 913, 2726, 2359, 2360, 1384,
	118, 114, 115, 81, 116, 1364, 998, 2384, 2385, 2387,
	2388, 2389, 2721, 914, 915, 990, 417, 428, 427, 430,
	1895, 416, 1938, 1894, 899, 900, 1896, 434, 1620, 458,
	2723, 1722, 109, 959, 1635, 2308, 120, 119, 1626, 1628,
	2306, 1627, 420, 1640, 438, 1635, 1622, 400, 442, 415,
	465, 2022, 972, 1012, 1405, 2727, 72, 39, 40, 1404,
	1403, 1402, 445, 1401, 549, 1400, 994, 995, 1622, 1987,
	2014, 920, 2547, 2817, 127, 99, 2249, 2397, 41, 1991,
	2019, 1735, 1647, 80, 80, 2400, 2750, 2749, 459, 2611,
	121, 2234, 122, 2696, 2516, 2456, 2613, 2422, 2414, 2398,
	2399, 1736, 928, 1395, 2756, 930, 1989, 2520, 1022, 929,
	1347, 2403, 2404, 2405, 2406, 1682, 112, 1248, 127, 2412,
	2785, 927, 931, 923, 2694, 1752, 1746, 1747, 2603, 1745,
	1748, 1749, 2869, 2514, 101, 2783, 2784, 2513, 98, 2512,
	2511, 974, 1027, 2509, 111, 110, 921, 922, 1969, 2510,
	1035, 2508, 2599, 2600, 2770, 431, 432, 433, 439, 1374,
	443, 444, 447, 2655, 1005, 1755, 1674, 1006, 2595, 127,
	2735, 2736, 2341, 410, 911, 1877, 912, 914, 915, 1754,
	1753, 909, 2538, 906, 1018, 2237, 2820, 974, 107, 2005,
	2006, 1931, 1970, 2225, 905, 1673, 2797, 401, 108, 2228,
	2229, 2230, 2231, 2232, 1972, 113, 1017, 1013, 1014, 1015,
	1016, 1019, 1020, 1021, 1023, 411, 2838, 997, 1235, 2228,
	2229, 2230, 2231, 2232, 103, 2588, 104, 896, 407, 907,
	908, 1093, 2890, 2605, 1095, 868, 867, 1221, 1990, 117,
	1221, 2427, 2428, 2174, 2033, 2382, 2265, 1061, 1221, 2207,
	1221, 2724, 2033, 1220, 2615, 2577, 2031, 2517, 2905, 1249,
	2610, 464, 1912, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 419, 2251, 1138, 1729, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1945, 1155, 1158, 1158, 1158, 1164, 1158, 1158, 1164, 1158,
	1164, 1173, 1174, 1175, 1176, 2645, 1186, 1024, 2535, 73,
	1993, 2724, 1625, 1649, 79, 1367, 79, 1139, 1348, 1026,
	1928, 1751, 2098, 2832, 1033, 973, 127, 127, 127, 79,
	1635, 924, 79, 2537, 2695, 2604, 2236, 984, 1365, 1366,
	1007, 2902, 684, 1036, 437, 1911, 408, 2847, 408, 1194,
	2842, 2039, 2031, 100, 974, 1180, 2036, 2896, 79, 2035,
	2038, 408, 661, 2100, 2845, 1569, 1571, 661, 1094, 2881,
	1262, 1265, 1266, 1267, 1268, 1269, 1270, 865, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1215, 1250, 1251, 1252,
	1253, 1229, 1233, 1263, 1230, 1236, 1232, 1234, 1231, 1981,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 2876,
	1369, 403, 73, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 1982, 981, 2486, 879, 2437,
	2438, 1691, 2013, 1206, 109, 970, 1690, 2010, 1207, 1995,
	1281, 2488, 1285, 1570, 1219, 1371, 404, 1994, 1370, 1730,
	1189, 975, 982, 983, 985, 986, 987, 988, 989, 1304,
	991, 992, 993, 1302, 996, 925, 999, 1000, 1001, 1002,
	1003, 1159, 1161, 1163, 1165, 1167, 1169, 1170, 1172, 1197,
	1192, 1160, 1162, 1884, 1166, 1168, 979, 1171, 1883, 1882,
	408, 1912, 861, 2008, 1030, 871, 2102, 372, 1264, 2844,
	2846, 2106, 1912, 2101, 2441, 2099, 1096, 1097, 2044, 1216,
	2104, 2291, 980, 1830, 976, 2283, 2012, 969, 2487, 1983,
	1984, 2011, 1899, 2103, 96, 1827, 1891, 1787, 1775, 1917,
	1912, 1760, 1677, 684, 1675, 1298, 1423, 448, 2105, 2107,
	2874, 451, 451, 2875, 1214, 2873, 111, 110, 977, 978,
	127, 1199, 1317, 127, 448, 1912, 1064, 2436, 451, 451,
	889, 127, 2608, 1589, 1074, 1569, 1571, 1084, 1084, 2245,
	127, 127, 127, 127, 127, 1073, 1072, 1082, 1083, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1074, 1580, 1345, 1084,
	2502, 451, 1320, 2374, 1911, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 2771, 2772, 1911, 2768, 2769, 2372, 2197,
	2642, 2641, 1336, 2630, 2442, 2452, 1297, 1073, 1072, 1082,
	1083, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074, 1834,
	2524, 1084, 1708, 1911, 2052, 1544, 2043, 448, 1096, 1097,
	2040, 451, 451, 451, 96, 2048, 684, 1321, 1416, 2503,
	1096, 1097, 2375, 1570, 1699, 903, 1359, 1055, 1911, 895,
	1331, 1332, 1333, 1334, 2525, 2031, 1343, 2373, 2198, 1221,
	1451, 1393, 2032, 2033, 1057, 1057, 451, 1825, 80, 1824,
	2140, 451, 451, 1056, 1055, 1449, 1450, 1448, 1037, 95,
	2898, 1478, 1056, 1055, 1339, 1299, 1340, 1056, 1055, 2835,
	916, 1057, 127, 2120, 127, 2139, 1313, 684, 2894, 1337,
	1057, 1314, 1306, 1356, 1375, 1057, 1407, 1212, 1377, 555,
	1324, 1325, 2884, 2866, 2883, 127, 932, 94, 872, 1056,
	1055, 1061, 1534, 2833, 1073, 1072, 1082, 1083, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1074, 80, 1057, 1084, 1287,
	2800, 1700, 904, 894, 1398, 2413, 1414, 1399, 1351, 1352,
	1037, 2407, 1354, 1421, 1422, 1056, 1055, 1442, 1056, 1055,
	2182, 81, 2782, 1445, 2781, 1471, 1472, 684, 1357, 545,
	1056, 1055, 1447, 1057, 1139, 1441, 1057, 2122, 1376, 1373,
	1052, 1826, 1372, 1142, 918, 1534, 2699, 1842, 1057, 471,
	2891, 1961, 2691, 2692, 684, 684, 1073, 1072, 1082, 1083,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074, 1056, 1055,
	1084, 2606, 1434, 1436, 1437, 1056, 1055, 1406, 1435, 1440,
	1394, 1514, 1042, 1397, 2650, 1043, 1057, 1563, 2781, 2532,
	2806, 1572, 2805, 1057, 1186, 2531, 1520, 1523, 1186, 2693,
	127, 2530, 1411, 1535, 2892, 1056, 1055, 2529, 127, 463,
	127, 1772, 1773, 1774, 2523, 127, 127, 2607, 1425, 127,
	127, 127, 1446, 1057, 1438, 1139, 1082, 1083, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1074, 1486, 2366, 1084, 684,
	684, 1491, 1426, 1575, 2365, 1427, 1960, 1577, 661, 1468,
	1958, 1469, 1320, 1077, 1078, 1079, 1080, 1081, 1074, 1483,
	1484, 1084, 1939, 1897, 965, 1898, 2790, 1442, 964, 938,
	2789, 2753, 1496, 1497, 1498, 1499, 2751, 2705, 1559, 2602,
	2601, 2587, 2539, 2507, 2466, 1593, 2410, 1511, 1513, 677,
	1595, 2409, 937, 1517, 2408, 2376, 1568, 2363, 644, 645,
	2256, 2190, 1956, 1342, 1719, 1353, 1322, 127, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1074, 2778, 2777, 1084, 2612,
	2585, 127, 1688, 127, 127, 451, 451, 451, 2556, 1594,
	127, 1917, 1281, 1573, 2550, 2434, 2294, 1606, 2279, 2275,
	2267, 1189, 2238, 2222, 1614, 1164, 1378, 2221, 1189, 1381,
	1382, 1383, 1189, 1385, 1386, 2220, 1578, 1387, 127, 127,
	127, 2000, 1582, 1388, 1581, 1587, 1999, 1389, 1390, 1596,
	1391, 1392, 1603, 1712, 1696, 1695, 1470, 1636, 1637, 1638,
	1639, 2314, 1349, 1346, 127, 1715, 127, 1312, 1311, 1300,
	684, 1656, 1657, 1288, 684, 1474, 1286, 960, 891, 1482,
	1686, 1687, 1652, 1653, 1654, 1655, 414, 412, 2477, 2803,
	1493, 1494, 1305, 1757, 1648, 1004, 684, 2350, 2796, 684,
	2712, 1037, 1037, 1506, 2549, 2350, 2710, 1510, 575, 574,
	577, 578, 579, 580, 2350, 2708, 1697, 576, 581, 2499,
	1701, 1531, 1776, 1887, 1671, 1706, 2350, 2593, 2498, 1705,
	2217, 1443, 2477, 2581, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 2477,
	2493, 2191, 1721, 2477, 1037, 1887, 1442, 970, 1073, 1072,
	1082, 1083, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074,
	878, 1546, 1084, 1711, 1441, 1552, 1555, 1556, 1557, 1553,
	1547, 1554, 1558, 1418, 1445, 2143, 2144, 1714, 1660, 2477,
	2476, 2350, 2349, 1720, 2331, 1037, 1759, 1037, 2124, 1623,
	1624, 2138, 1629, 1630, 1631, 1632, 1633, 2763, 2285, 1887,
	1547, 1727, 2138, 1710, 1680, 1526, 1008, 471, 1594, 968,
	1643, 1644, 1645, 1537, 1853, 1855, 2205, 2204, 1186, 1186,
	1186, 1186, 1186, 1734, 1417, 1742, 1737, 2201, 2202, 2201,
	2200, 1758, 1756, 2548, 1563, 2138, 1878, 1189, 1009, 127,
	127, 127, 127, 127, 1679, 1186, 1764, 1781, 1762, 1763,
	1046, 127, 1854, 1785, 1037, 127, 2286, 1547, 1037, 127,
	1065, 1777, 1732, 1731, 1858, 1512, 127, 1512, 1716, 1859,
	1512, 1037, 1514, 1446, 1218, 1217, 2717, 881, 882, 883,
	884, 885, 886, 887, 84, 1062, 2325, 1889, 1783, 1890,
	684, 2286, 1881, 1786, 1888, 1574, 970, 1194, 1788, 1789,
	661, 1694, 2218, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 967, 1195, 1804, 968, 2203, 2152, 2024, 1809, 1810,
	1811, 1812, 1901, 1583, 1785, 1816, 1817, 1818, 1814, 1813,
	1141, 1195, 1821, 1822, 1823, 1355, 1693, 1873, 1785, 1419,
	1829, 1154, 1032, 1832, 1833, 1880, 1819, 1841, 1838, 1396,
	1362, 1303, 684, 1844, 1301, 1845, 1846, 1847, 1200, 1848,
	1849, 1916, 1918, 81, 672, 1741, 616, 684, 1196, 684,
	1198, 451, 1189, 1189, 1189, 1189, 1189, 1872, 1874, 1875,
	1860, 1206, 2732, 1863, 1902, 127, 451, 1196, 1189, 1194,
	1281, 2709, 1904, 2151, 2004, 2555, 448, 1892, 2553, 1189,
	2368, 451, 1622, 1861, 1862, 1713, 1864, 1910, 1885, 1915,
	1998, 2337, 1900, 1552, 1555, 1556, 1557, 1553, 1280, 1554,
	1558, 1651, 451, 2181, 684, 422, 81, 1733, 80, 1647,
	451, 1905, 1940, 1941, 2143, 2144, 2149, 974, 1676, 1947,
	1791, 1793, 1642, 1641, 1957, 1282, 1297, 957, 1709, 1954,
	2855, 684, 684, 1805, 1806, 1807, 1808, 127, 668, 2853,
	1959, 1997, 680, 2076, 2825, 1968, 1139, 684, 1966, 2216,
	2146, 1967, 2124, 1948, 1962, 1950, 1951, 1952, 1953, 1988,
	2002, 1308, 880, 1010, 684, 971, 966, 1869, 1871, 1867,
	1556, 1557, 1870, 453, 1868, 2015, 1771, 2148, 1866, 1865,
	2053, 2054, 1540, 2021, 1778, 1779, 1780, 2001, 540, 541,
	1442, 2774, 2729, 2055, 1761, 1429, 2060, 1050, 1051, 2009,
	2762, 2328, 1769, 2129, 80, 1768, 2467, 2433, 1441, 2007,
	2034, 2353, 2045, 2046, 2029, 2023, 2049, 2274, 2028, 2273,
	1919, 2026, 2037, 2042, 2189, 684, 1048, 684, 2154, 2188,
	2187, 1909, 2176, 2158, 2159, 2160, 2617, 2620, 2704, 2703,
	2543, 2752, 2130, 2541, 2119, 2598, 2125, 2597, 2137, 1858,
	684, 413, 2070, 2062, 1859, 1350, 2051, 2066, 2128, 2526,
	2527, 2212, 1835, 1836, 1837, 1942, 1943, 1944, 1946, 2050,
	1949, 684, 1213, 684, 1414, 684, 955, 684, 2183, 939,
	2164, 1039, 2065, 2153, 2157, 2109, 2108, 1323, 2073, 936,
	935, 2162, 2061, 1040, 892, 2813, 2560, 2559, 1669, 2323,
	2083, 2084, 1421, 1422, 2415, 2443, 1718, 1670, 1341, 1307,
	2132, 2416, 2764, 2092, 2697, 80, 2545, 2096, 2357, 2147,
	2060, 934, 1965, 1050, 1051, 537, 96, 2211, 1412, 1284,
	2755, 2155, 1028, 1029, 127, 2812, 1767, 2175, 2178, 2177,
	2811, 2179, 2810, 2180, 1766, 2504, 1740, 919, 2754, 1141,
	2701, 2131, 2621, 2210, 2233, 2168, 448, 2219, 2568, 2564,
	538, 451, 84, 2563, 2446, 1887, 127, 451, 1656, 2169,
	1657, 2213, 2214, 2215, 1974, 1975, 1976, 2071, 2072, 2254,
	127, 2020, 451, 2161, 684, 451, 2078, 2079, 2018, 451,
	451, 2017, 451, 2857, 2856, 672, 1831, 1828, 2086, 2087,
	2088, 2089, 1738, 2235, 1338, 2093, 2094, 2095, 1053, 684,
	2856, 2857, 2578, 127, 684, 2186, 1415, 460, 462, 2671,
	52, 684, 2673, 19, 684, 2672, 18, 2674, 20, 2675,
	21, 2194, 2077, 2670, 15, 86, 2080, 2081, 2082, 2669,
	14, 2085, 2240, 2003, 2663, 10, 55, 1431, 1432, 2284,
	2686, 34, 471, 1, 2263, 2244, 2684, 33, 2248, 2192,
	2193, 2241, 2252, 2253, 1728, 2255, 2196, 2287, 1379, 2319,
	2395, 2264, 2257, 2199, 2258, 2683, 32, 2682, 28, 1062,
	2394, 2278, 1072, 1082, 1083, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1074, 2401, 1281, 1084, 2242, 2681, 27, 2680,
	26, 2678, 23, 2677, 22, 2223, 127, 2679, 24, 2668,
	13, 2665, 12, 2664, 11, 2662, 9, 2064, 2226, 1986,
	2411, 1295, 2515, 684, 875, 1678, 961, 2702, 2616, 2618,
	684, 684, 684, 2540, 1141, 2418, 1858, 2379, 1518, 1519,
	684, 1859, 2332, 2378, 1979, 2345, 2346, 2347, 2090, 2091,
	1978, 956, 1360, 684, 2027, 2030, 1689, 1750, 2628, 2288,
	2343, 1739, 2110, 2111, 1011, 2112, 2113, 1607, 2355, 2114,
	1597, 2370, 2369, 2324, 674, 92, 1698, 902, 380, 2304,
	2333, 1604, 1925, 2619, 958, 2195, 1924, 2348, 127, 1937,
	1619, 1664, 1668, 1923, 1922, 2300, 2391, 2392, 2393, 2344,
	2614, 1926, 1226, 1224, 1592, 1225, 2309, 2310, 471, 1223,
	1228, 1227, 2315, 2371, 2156, 384, 1208, 2354, 2742, 2293,
	1054, 102, 56, 2358, 2435, 2041, 451, 2326, 2327, 456,
	2329, 457, 97, 2330, 1902, 105, 1186, 2429, 2430, 386,
	1280, 1092, 1765, 1893, 659, 660, 652, 1034, 2640, 2714,
	2734, 1044, 2633, 2342, 2290, 684, 2390, 127, 1840, 1153,
	1532, 558, 2292, 684, 2185, 1876, 2451, 2635, 1433, 573,
	2431, 572, 2295, 2296, 1658, 571, 2129, 568, 569, 2129,
	2472, 2299, 2725, 2448, 2449, 2447, 2439, 2424, 1424, 2362,
	2420, 2364, 2154, 2419, 2421, 2425, 2417, 2175, 1850, 2423,
	1066, 668, 2206, 684, 2444, 2432, 668, 1209, 2495, 684,
	1132, 1133, 2060, 2361, 127, 2440, 127, 556, 2471, 547,
	1184, 80, 684, 1177, 2475, 1717, 1551, 1549, 1656, 1548,
	2469, 2128, 1309, 648, 2128, 2145, 2141, 1561, 2301, 2302,
	684, 2303, 1183, 1187, 2305, 70, 2307, 2478, 917, 402,
	2320, 2575, 2468, 2500, 38, 461, 542, 2474, 25, 2501,
	17, 926, 16, 1743, 873, 42, 2490, 2491, 2479, 2489,
	44, 1973, 1672, 2484, 2741, 2505, 2840, 942, 2864, 2779,
	31, 30, 2492, 29, 471, 2676, 2685, 2667, 2666, 2827,
	1189, 2455, 2826, 4, 2561, 1025, 71, 35, 2289, 670,
	1568, 2506, 2480, 2, 0, 0, 0, 0, 0, 2518,
	684, 1046, 2351, 2352, 2461, 2462, 2463, 2528, 2465, 0,
	2533, 2129, 0, 80, 0, 2536, 0, 0, 0, 0,
	0, 2546, 0, 0, 0, 0, 0, 0, 0, 2565,
	2551, 2552, 0, 2481, 2482, 2483, 0, 0, 2558, 684,
	2316, 2317, 2318, 0, 2494, 0, 2567, 2566, 0, 0,
	2554, 2580, 0, 2594, 0, 2596, 0, 0, 0, 0,
	2584, 0, 2579, 0, 0, 0, 2128, 0, 0, 0,
	0, 2496, 0, 2497, 2583, 0, 0, 0, 2586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 1820, 0, 0, 0, 1283, 0,
	0, 0, 0, 0, 1290, 1293, 0, 451, 2356, 0,
	127, 0, 0, 0, 0, 684, 1843, 684, 0, 0,
	0, 1290, 1293, 0, 0, 0, 0, 0, 2624, 0,
	2626, 0, 0, 0, 0, 0, 0, 80, 2623, 0,
	0, 2569, 2570, 0, 2656, 2571, 2572, 2573, 2574, 2638,
	127, 2625, 0, 2639, 0, 0, 0, 2643, 0, 0,
	0, 0, 0, 2648, 0, 0, 1858, 0, 0, 471,
	0, 1859, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 2622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 684, 0, 684, 0, 0, 0, 0, 2700,
	2698, 0, 0, 0, 0, 2707, 0, 0, 2737, 0,
	0, 1380, 2718, 0, 0, 0, 0, 0, 1908, 0,
	2728, 0, 2453, 2454, 0, 0, 0, 0, 0, 0,
	2584, 80, 0, 2733, 0, 0, 2457, 2458, 2459, 2460,
	0, 0, 0, 1189, 2464, 0, 0, 0, 0, 0,
	0, 684, 0, 0, 0, 2758, 0, 2760, 0, 0,
	0, 0, 0, 2644, 0, 0, 0, 0, 2649, 0,
	0, 684, 680, 0, 2767, 0, 0, 0, 0, 0,
	2652, 0, 0, 2766, 2759, 2761, 2776, 2765, 0, 0,
	0, 2757, 0, 0, 684, 0, 2773, 0, 0, 0,
	2746, 680, 0, 0, 0, 2076, 0, 0, 2786, 2775,
	0, 2794, 0, 448, 0, 0, 2711, 2798, 451, 0,
	2799, 0, 0, 80, 0, 684, 2804, 0, 2719, 80,
	0, 2795, 0, 2809, 0, 684, 2816, 2807, 0, 0,
	0, 0, 1473, 2819, 0, 0, 0, 80, 0, 684,
	0, 0, 80, 2821, 0, 0, 0, 2834, 0, 2837,
	2818, 2850, 0, 0, 2831, 0, 0, 2830, 2854, 1504,
	1505, 2829, 2849, 80, 448, 2828, 80, 80, 2858, 451,
	0, 80, 2852, 2859, 2816, 0, 2861, 0, 2867, 0,
	2839, 0, 668, 0, 0, 0, 0, 0, 2814, 0,
	0, 80, 0, 2877, 80, 0, 0, 0, 2816, 2885,
	2298, 2887, 0, 0, 2882, 0, 0, 0, 0, 80,
	2592, 80, 0, 0, 2121, 80, 2816, 0, 2816, 395,
	0, 0, 0, 0, 0, 2897, 80, 668, 0, 80,
	0, 80, 0, 2816, 0, 80, 0, 0, 2816, 2901,
	0, 680, 2816, 0, 680, 680, 0, 1073, 1072, 1082,
	1083, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074, 2163,
	0, 1084, 0, 0, 0, 0, 0, 0, 1188, 0,
	1475, 1480, 1481, 0, 2627, 0, 1485, 0, 1487, 1488,
	1489, 1490, 0, 1492, 0, 0, 1495, 0, 0, 0,
	0, 1500, 1501, 1502, 1503, 0, 0, 0, 1507, 1508,
	1509, 0, 0, 0, 0, 2173, 1515, 1516, 0, 0,
	0, 1522, 1525, 0, 1530, 0, 124, 373, 0, 0,
	0, 0, 0, 0, 376, 405, 0, 0, 0, 0,
	0, 0, 0, 385, 393, 394, 1538, 0, 1541, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 2888, 2889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 1047, 0, 673, 2313, 0, 0, 862, 382, 0,
	0, 383, 0, 0, 391, 392, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 1726, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 399, 0, 0, 0, 0, 0, 125, 2280,
	0, 1726, 0, 0, 1726, 2262, 0, 388, 0, 0,
	545, 0, 1908, 0, 0, 2269, 2271, 0, 0, 0,
	0, 470, 0, 0, 0, 2262, 0, 0, 389, 546,
	680, 0, 651, 669, 0, 0, 125, 0, 0, 0,
	125, 1073, 1072, 1082, 1083, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1074, 0, 125, 1084, 0, 2312, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 2311, 0, 2322, 0, 0, 0, 0, 0,
	0, 1141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2334, 2335, 374, 0, 2336, 0, 0, 2338, 0,
	0, 0, 0, 0, 0, 0, 1141, 0, 2848, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 377, 378, 0,
	398, 0, 0, 0, 379, 381, 0, 375, 397, 396,
	0, 0, 0, 0, 0, 2870, 0, 0, 0, 0,
	0, 0, 0, 668, 1073, 1072, 1082, 1083, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1074, 0, 0, 1084, 1073,
	1072, 1082, 1083, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1074, 390, 0, 1084, 0, 0, 0, 0, 0, 668,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2266, 0, 1784, 0, 0,
	0, 890, 0, 0, 534, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 1803, 2297, 2262,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 2262,
	0, 0, 0, 0, 0, 963, 0, 1963, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1985, 1073, 1072, 1082, 1083, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1074, 0, 0, 1084,
	0, 0, 1221, 0, 0, 0, 0, 0, 0, 0,
	492, 474, 0, 0, 125, 0, 0, 0, 0, 0,
	496, 0, 471, 0, 471, 0, 0, 0, 0, 521,
	2173, 0, 487, 0, 481, 0, 0, 0, 0, 2016,
	0, 495, 0, 0, 0, 0, 0, 0, 2173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 680, 680, 0, 0,
	0, 0, 0, 0, 0, 499, 497, 0, 0, 0,
	500, 0, 680, 0, 0, 0, 508, 475, 0, 512,
	0, 0, 0, 0, 680, 0, 0, 473, 0, 2074,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 490, 514, 0, 0, 0, 0, 0, 0, 488,
	489, 491, 518, 0, 520, 526, 0, 0, 0, 0,
	0, 2117, 0, 0, 0, 0, 1068, 0, 1071, 0,
	0, 0, 0, 0, 0, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 0, 1069, 1070, 1067, 0, 0, 668, 0,
	680, 0, 2136, 1073, 1072, 1082, 1083, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1074, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 2136, 0, 0, 0, 0,
	0, 0, 0, 1179, 0, 1191, 0, 2116, 476, 0,
	0, 0, 0, 0, 0, 0, 680, 498, 680, 0,
	680, 0, 2172, 0, 0, 2634, 2637, 0, 0, 0,
	1141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2173, 0, 2173, 1073, 1072, 1082, 1083,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074, 527, 528,
	1084, 0, 0, 484, 477, 478, 479, 480, 482, 501,
	502, 506, 507, 524, 523, 522, 525, 529, 532, 531,
	533, 483, 485, 493, 503, 504, 505, 509, 510, 519,
	515, 517, 0, 0, 0, 0, 125, 125, 125, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	0, 669, 1073, 1072, 1082, 1083, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1074, 0, 0, 1084, 0, 0, 2247,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2738,
	2739, 0, 2063, 0, 2272, 0, 0, 0, 0, 2277,
	0, 511, 513, 0, 0, 0, 2281, 0, 0, 2282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2637,
	1073, 1072, 1082, 1083, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1074, 0, 0, 1084, 0, 0, 2115, 0, 2173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 41, 0, 0, 649, 0, 0,
	1310, 0, 0, 2808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 1326, 1327, 1328,
	1329, 1330, 0, 0, 0, 0, 0, 0, 2340, 0,
	0, 0, 81, 0, 0, 2340, 2340, 2340, 0, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2687, 0, 2340, 2863,
	2866, 2862, 1073, 1072, 1082, 1083, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1074, 0, 0, 1084, 0, 0, 1291,
	1294, 0, 0, 0, 0, 0, 0, 0, 2886, 0,
	125, 0, 0, 125, 0, 0, 1291, 1294, 0, 0,
	0, 1319, 43, 74, 46, 45, 48, 0, 0, 0,
	125, 125, 125, 125, 125, 0, 0, 2688, 1073, 1072,
	1082, 1083, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1074,
	0, 0, 1084, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 1782, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 1430, 0, 0, 1073, 1072, 1082, 1083, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1074, 57, 58, 1084,
	2689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 2473, 0,
	0, 0, 0, 0, 2340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2172, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 470, 2172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2690,
	75, 0, 53, 54, 61, 125, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1576, 0, 2557, 0, 0, 0, 1479,
	1479, 1479, 0, 0, 0, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 0, 0, 1479, 0, 0, 0, 0,
	1479, 1479, 1479, 1479, 0, 0, 0, 1479, 1479, 1479,
	0, 0, 0, 0, 2582, 1479, 1479, 0, 73, 0,
	1479, 1479, 0, 1479, 0, 0, 0, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1479, 1479, 1479, 1479, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	470, 0, 0, 0, 1662, 125, 125, 79, 0, 125,
	1579, 1319, 669, 0, 0, 0, 0, 0, 1683, 0,
	1684, 1685, 0, 0, 0, 0, 1319, 1692, 0, 0,
	2172, 0, 2172, 0, 0, 0, 36, 37, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 668, 78, 1704, 0, 0,
	41, 63, 64, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 125, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 2713, 0, 2716,
	0, 125, 0, 125, 125, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 1703,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 680, 0, 43, 74,
	46, 45, 48, 0, 125, 0, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1319, 0, 0, 0, 0,
	2716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2801, 0, 530, 57, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 2259,
	66, 0, 67, 2261, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 1479, 0, 0, 0,
	0, 0, 0, 0, 1479, 0, 0, 68, 486, 0,
	0, 0, 0, 0, 0, 1479, 1479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 1479, 0,
	0, 0, 1479, 0, 0, 51, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 125,
	125, 125, 125, 125, 0, 0, 0, 0, 492, 474,
	0, 470, 0, 0, 0, 125, 0, 0, 496, 470,
	0, 0, 0, 0, 1479, 0, 125, 521, 0, 0,
	487, 0, 481, 0, 669, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 497, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 508, 475, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	514, 0, 0, 79, 0, 0, 0, 488, 489, 491,
	518, 0, 520, 526, 2056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 476, 1906, 0, 0,
	0, 0, 0, 0, 0, 498, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 1479, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 0, 1319,
	494, 0, 0, 0, 0, 0, 527, 528, 0, 0,
	0, 484, 477, 478, 479, 480, 482, 501, 502, 506,
	507, 524, 523, 522, 525, 529, 532, 531, 533, 483,
	485, 493, 503, 504, 505, 509, 510, 519, 515, 517,
	0, 0, 0, 0, 1221, 0, 0, 0, 0, 0,
	0, 0, 492, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 669, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 487, 0, 481, 0, 0, 0,
	0, 2209, 0, 495, 0, 0, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	513, 0, 0, 2239, 0, 0, 0, 499, 497, 0,
	0, 0, 500, 0, 0, 0, 1248, 2243, 508, 475,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 514, 0, 0, 0, 0, 0,
	2276, 488, 489, 491, 518, 2787, 520, 526, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 484, 477, 478, 479, 480,
	482, 501, 502, 506, 507, 524, 523, 522, 525, 529,
	532, 531, 533, 483, 485, 493, 503, 504, 505, 509,
	510, 519, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 0,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 513, 0, 0, 0, 0, 1262,
	1265, 1266, 1267, 1268, 1269, 1270, 0, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 0, 1250, 1251, 1252, 1253,
	1229, 1233, 1263, 1230, 1236, 1232, 1234, 1231, 125, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 2651, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	2740, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	125, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	669, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	125, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 2743, 2744, 2745,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 816,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 842, 769, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 0, 0, 0, 0, 683, 0, 1601, 1602, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 1903, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 759, 208, 364, 838, 756, 755, 281, 0, 328,
	196, 218, 150, 128, 143, 161, 195, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 860, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 0, 747, 132, 827,
	856, 790, 801, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 0, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	683, 0, 1601, 1602, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	0, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	0, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 0, 0, 0,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 2133,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 842, 769, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 81, 0, 1037, 0, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 759, 208, 364, 838, 756, 755, 281, 0, 328,
	196, 218, 150, 128, 143, 161, 195, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 2134, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 0, 747, 132, 827,
	856, 790, 801, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 0, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	2450, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	0, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	0, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 0, 0, 0,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 816,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 842, 769, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 2069, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 759, 208, 364, 838, 756, 755, 281, 0, 328,
	196, 218, 150, 128, 143, 161, 195, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 860, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 0, 747, 132, 827,
	856, 790, 801, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 0, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	2059, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	0, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	0, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 0, 0, 0,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 816,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 842, 769, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 1580, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 759, 208, 364, 838, 756, 755, 281, 0, 328,
	196, 218, 150, 128, 143, 161, 195, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 860, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 0, 747, 132, 827,
	856, 790, 801, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 0, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	1439, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	0, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	0, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 0, 0, 0,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 816,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 842, 769, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 0, 0, 0, 0, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 759, 208, 364, 838, 756, 755, 281, 0, 328,
	196, 218, 150, 128, 143, 161, 195, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 860, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 0, 747, 132, 827,
	856, 790, 801, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 0, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	0, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	0, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 0, 0, 0,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 816,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 1613, 1617, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 0, 0, 0, 0, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 1616, 208, 364, 838, 756, 755, 1610, 0, 1611,
	1612, 218, 682, 128, 143, 1608, 1615, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 860, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 0, 747, 132, 827,
	856, 790, 801, 841, 816, 334, 761, 844, 718, 744,
	858, 749, 753, 796, 701, 774, 260, 740, 702, 0,
	722, 691, 732, 692, 719, 763, 178, 717, 818, 777,
	843, 217, 791, 0, 167, 225, 223, 0, 0, 0,
	267, 333, 842, 769, 0, 851, 220, 0, 786, 852,
	321, 244, 0, 0, 765, 828, 772, 814, 760, 798,
	710, 785, 846, 741, 793, 847, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	0, 789, 840, 735, 792, 795, 689, 788, 0, 696,
	703, 857, 835, 725, 726, 727, 0, 0, 0, 0,
	0, 0, 0, 764, 773, 808, 757, 353, 271, 288,
	309, 751, 279, 738, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 783, 0, 0, 0, 704, 697,
	0, 0, 762, 0, 0, 0, 709, 688, 724, 810,
	0, 686, 245, 145, 815, 834, 759, 208, 364, 838,
	756, 755, 281, 0, 328, 196, 218, 150, 128, 143,
	161, 195, 256, 807, 303, 737, 687, 819, 720, 733,
	168, 729, 295, 264, 352, 742, 780, 294, 221, 342,
	803, 839, 351, 746, 822, 361, 366, 728, 770, 707,
	318, 180, 176, 179, 0, 134, 739, 278, 173, 213,
	758, 797, 721, 165, 805, 784, 821, 317, 340, 152,
	335, 243, 249, 162, 164, 163, 144, 312, 339, 157,
	166, 322, 299, 329, 172, 0, 0, 0, 0, 0,
	752, 743, 0, 0, 357, 754, 306, 305, 748, 203,
	813, 787, 693, 287, 800, 209, 133, 331, 369, 151,
	215, 336, 685, 190, 255, 170, 265, 266, 187, 130,
	283, 237, 238, 236, 239, 194, 734, 802, 812, 285,
	308, 338, 153, 325, 730, 731, 736, 809, 297, 820,
	832, 845, 228, 183, 186, 197, 204, 794, 292, 326,
	358, 0, 146, 135, 332, 350, 158, 307, 310, 367,
	293, 138, 348, 327, 241, 210, 211, 136, 0, 137,
	290, 177, 193, 171, 259, 0, 192, 280, 345, 346,
	169, 370, 147, 360, 140, 148, 359, 252, 0, 251,
	362, 341, 349, 242, 230, 0, 139, 347, 240, 229,
	216, 185, 199, 276, 224, 277, 200, 247, 246, 248,
	226, 231, 0, 694, 0, 323, 355, 371, 155, 716,
	311, 337, 745, 284, 156, 191, 184, 275, 250, 149,
	202, 320, 214, 222, 289, 368, 263, 296, 159, 354,
	319, 181, 714, 715, 712, 0, 713, 775, 776, 848,
	849, 850, 811, 706, 0, 829, 830, 0, 0, 0,
	0, 0, 817, 836, 837, 799, 859, 750, 711, 695,
	698, 699, 700, 708, 766, 767, 779, 782, 825, 824,
	823, 826, 831, 854, 853, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 131, 141,
	219, 860, 286, 189, 356, 690, 175, 0, 768, 771,
	781, 806, 129, 142, 154, 160, 174, 182, 188, 198,
	201, 205, 206, 207, 212, 227, 232, 233, 234, 235,
	253, 254, 257, 258, 261, 262, 268, 269, 270, 272,
	273, 274, 282, 804, 291, 298, 300, 301, 302, 304,
	313, 314, 315, 316, 324, 330, 343, 344, 363, 365,
	833, 0, 747, 132, 827, 856, 790, 801, 841, 816,
	334, 761, 844, 718, 744, 858, 749, 753, 796, 701,
	774, 260, 740, 702, 0, 722, 691, 732, 692, 719,
	763, 178, 717, 818, 777, 843, 217, 791, 0, 167,
	225, 223, 0, 0, 0, 267, 333, 842, 769, 0,
	851, 220, 0, 786, 852, 321, 244, 0, 0, 765,
	828, 772, 814, 760, 798, 710, 785, 846, 741, 793,
	847, 0, 0, 0, 0, 683, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 789, 840, 735, 792,
	795, 689, 788, 0, 696, 703, 857, 835, 725, 726,
	727, 0, 0, 0, 0, 0, 0, 0, 764, 773,
	808, 757, 353, 271, 288, 309, 751, 279, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 783,
	0, 0, 0, 704, 697, 0, 0, 762, 0, 0,
	0, 709, 688, 724, 810, 0, 686, 245, 145, 815,
	834, 759, 208, 364, 838, 756, 755, 281, 0, 328,
	196, 218, 682, 128, 143, 678, 195, 256, 807, 303,
	737, 687, 819, 720, 733, 168, 729, 295, 264, 352,
	742, 780, 294, 221, 342, 803, 839, 351, 746, 822,
	361, 366, 728, 770, 707, 318, 180, 176, 179, 0,
	134, 739, 278, 173, 213, 758, 797, 721, 165, 805,
	784, 821, 317, 340, 152, 335, 243, 249, 162, 164,
	163, 144, 312, 339, 157, 166, 322, 299, 329, 172,
	0, 0, 0, 0, 0, 752, 743, 0, 0, 357,
	754, 306, 305, 748, 203, 813, 787, 693, 287, 800,
	209, 133, 331, 369, 151, 215, 336, 685, 190, 255,
	170, 265, 266, 187, 130, 283, 237, 238, 236, 239,
	194, 734, 802, 812, 285, 308, 338, 153, 325, 730,
	731, 736, 809, 297, 820, 832, 845, 228, 183, 186,
	197, 204, 794, 292, 326, 358, 0, 146, 135, 332,
	350, 158, 307, 310, 367, 293, 138, 348, 327, 241,
	210, 211, 136, 0, 137, 290, 177, 193, 171, 259,
	0, 192, 280, 345, 346, 169, 370, 147, 360, 140,
	148, 359, 252, 0, 251, 362, 341, 349, 242, 230,
	0, 139, 347, 240, 229, 216, 185, 199, 276, 224,
	277, 200, 247, 246, 248, 226, 231, 0, 694, 0,
	323, 355, 371, 155, 716, 311, 337, 745, 284, 156,
	191, 184, 275, 250, 149, 202, 320, 214, 222, 289,
	368, 263, 296, 159, 354, 319, 181, 714, 715, 712,
	0, 713, 775, 776, 848, 849, 850, 811, 706, 0,
	829, 830, 0, 0, 0, 0, 0, 817, 836, 837,
	799, 859, 750, 711, 695, 698, 699, 700, 708, 766,
	767, 779, 782, 825, 824, 823, 826, 831, 854, 853,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 131, 141, 219, 860, 286, 189, 356,
	690, 175, 0, 768, 771, 781, 806, 129, 142, 154,
	160, 174, 182, 188, 198, 201, 205, 206, 207, 212,
	227, 232, 233, 234, 235, 253, 254, 257, 258, 261,
	262, 268, 269, 270, 272, 273, 274, 282, 804, 291,
	298, 300, 301, 302, 304, 313, 314, 315, 316, 324,
	330, 343, 344, 363, 365, 833, 334, 747, 132, 827,
	856, 790, 801, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 178, 550, 0,
	0, 0, 217, 0, 0, 167, 225, 223, 0, 0,
	0, 267, 333, 0, 0, 0, 630, 220, 0, 0,
	530, 321, 244, 0, 0, 0, 0, 619, 620, 0,
	0, 0, 0, 0, 0, 1590, 0, 81, 0, 0,
	0, 551, 575, 574, 577, 578, 579, 580, 0, 0,
	534, 576, 581, 614, 615, 1591, 0, 0, 548, 566,
	0, 629, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 271,
	288, 309, 0, 279, 494, 0, 0, 0, 0, 563,
	564, 0, 0, 0, 0, 642, 0, 565, 0, 0,
	560, 561, 562, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 145, 621, 0, 0, 208, 364,
	0, 0, 640, 281, 0, 328, 196, 218, 150, 128,
	143, 161, 195, 256, 0, 303, 589, 474, 0, 0,
	0, 168, 0, 295, 264, 352, 591, 0, 294, 221,
	342, 0, 0, 351, 0, 521, 361, 366, 487, 0,
	481, 318, 180, 176, 179, 0, 134, 495, 278, 173,
	213, 0, 0, 0, 165, 0, 0, 0, 317, 340,
	152, 335, 243, 249, 162, 164, 163, 144, 312, 339,
	157, 166, 322, 299, 329, 172, 0, 0, 0, 0,
	0, 499, 497, 0, 0, 357, 500, 306, 305, 0,
	203, 0, 508, 475, 287, 512, 209, 133, 331, 369,
	151, 215, 336, 473, 190, 255, 170, 265, 266, 187,
	130, 283, 237, 238, 236, 239, 194, 490, 514, 0,
	285, 308, 338, 153, 325, 488, 489, 491, 518, 297,
	520, 526, 0, 228, 183, 186, 197, 204, 0, 292,
	326, 358, 0, 146, 135, 332, 350, 158, 307, 310,
	367, 293, 138, 348, 327, 241, 210, 211, 136, 0,
	137, 290, 177, 193, 171, 259, 0, 192, 280, 345,
	346, 169, 370, 147, 360, 140, 148, 359, 252, 0,
	251, 362, 341, 349, 242, 230, 0, 139, 347, 240,
	229, 216, 185, 199, 276, 224, 277, 200, 247, 246,
	248, 226, 231, 0, 476, 0, 323, 355, 371, 155,
	0, 311, 337, 498, 284, 156, 191, 184, 275, 250,
	149, 202, 320, 214, 222, 289, 368, 263, 296, 159,
	354, 319, 181, 631, 641, 637, 639, 638, 635, 636,
	634, 633, 632, 643, 622, 623, 624, 625, 626, 0,
	0, 0, 628, 0, 608, 609, 0, 0, 0, 484,
	582, 583, 584, 585, 586, 592, 593, 597, 598, 606,
	605, 604, 607, 610, 612, 611, 613, 587, 588, 590,
	594, 595, 596, 599, 600, 603, 601, 602, 627, 131,
	141, 219, 0, 286, 189, 356, 0, 175, 0, 0,
	0, 0, 0, 129, 142, 154, 160, 174, 182, 188,
	198, 201, 205, 206, 207, 212, 227, 232, 233, 234,
	235, 253, 254, 257, 258, 261, 262, 268, 269, 270,
	272, 273, 274, 282, 516, 291, 298, 300, 301, 302,
	304, 313, 314, 315, 316, 324, 330, 343, 344, 363,
	365, 36, 334, 0, 132, 0, 0, 511, 513, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 178, 550, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 630, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 551, 575, 574,
	577, 578, 579, 580, 0, 0, 534, 576, 581, 614,
	615, 0, 0, 0, 548, 566, 0, 629, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 642, 0, 565, 0, 0, 560, 561, 562, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 621, 0, 0, 208, 364, 0, 0, 640, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 589, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 591, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 631,
	641, 637, 639, 638, 635, 636, 634, 633, 632, 643,
	622, 623, 624, 625, 626, 0, 0, 0, 628, 0,
	608, 609, 0, 0, 0, 484, 582, 583, 584, 585,
	586, 592, 593, 597, 598, 606, 605, 604, 607, 610,
	612, 611, 613, 587, 588, 590, 594, 595, 596, 599,
	600, 603, 601, 602, 627, 131, 141, 219, 79, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 178, 550,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 630, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 551, 575, 574, 577, 578, 579, 580, 0,
	0, 534, 576, 581, 614, 615, 0, 0, 0, 548,
	566, 0, 629, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	563, 564, 544, 0, 0, 0, 642, 0, 565, 0,
	0, 560, 561, 562, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 621, 0, 0, 208,
	364, 0, 0, 640, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 589, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 591, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 631, 641, 637, 639, 638, 635,
	636, 634, 633, 632, 643, 622, 623, 624, 625, 626,
	0, 0, 0, 628, 0, 608, 609, 0, 0, 0,
	484, 582, 583, 584, 585, 586, 592, 593, 597, 598,
	606, 605, 604, 607, 610, 612, 611, 613, 587, 588,
	590, 594, 595, 596, 599, 600, 603, 601, 602, 627,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 178, 550, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 630, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1037, 0, 551, 575, 574,
	577, 578, 579, 580, 0, 0, 534, 576, 581, 614,
	615, 0, 0, 0, 548, 566, 0, 629, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 642, 0, 565, 0, 0, 560, 561, 562, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 621, 0, 0, 208, 364, 0, 0, 640, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 589, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 591, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 631,
	641, 637, 639, 638, 635, 636, 634, 633, 632, 643,
	622, 623, 624, 625, 626, 0, 0, 0, 628, 0,
	608, 609, 0, 0, 0, 484, 582, 583, 584, 585,
	586, 592, 593, 597, 598, 606, 605, 604, 607, 610,
	612, 611, 613, 587, 588, 590, 594, 595, 596, 599,
	600, 603, 601, 602, 627, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 178, 550,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 630, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 551, 575, 574, 577, 578, 579, 580, 0,
	0, 534, 576, 581, 614, 615, 0, 0, 0, 548,
	566, 0, 629, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	563, 564, 1477, 0, 0, 0, 642, 0, 565, 0,
	0, 560, 561, 562, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 621, 0, 0, 208,
	364, 0, 0, 640, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 589, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 591, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 631, 641, 637, 639, 638, 635,
	636, 634, 633, 632, 643, 622, 623, 624, 625, 626,
	0, 0, 0, 628, 0, 608, 609, 0, 0, 0,
	484, 582, 583, 584, 585, 586, 592, 593, 597, 598,
	606, 605, 604, 607, 610, 612, 611, 613, 587, 588,
	590, 594, 595, 596, 599, 600, 603, 601, 602, 627,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 178, 550, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 630, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 551, 575, 1524,
	577, 578, 579, 580, 0, 0, 534, 576, 581, 614,
	615, 0, 0, 0, 548, 566, 0, 629, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 563, 564, 1477, 0, 0,
	0, 642, 0, 565, 0, 0, 560, 561, 562, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 621, 0, 0, 208, 364, 0, 0, 640, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 589, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 591, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 631,
	641, 637, 639, 638, 635, 636, 634, 633, 632, 643,
	622, 623, 624, 625, 626, 0, 0, 0, 628, 0,
	608, 609, 0, 0, 0, 484, 582, 583, 584, 585,
	586, 592, 593, 597, 598, 606, 605, 604, 607, 610,
	612, 611, 613, 587, 588, 590, 594, 595, 596, 599,
	600, 603, 601, 602, 627, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 178, 550,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 630, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 551, 575, 1521, 577, 578, 579, 580, 0,
	0, 534, 576, 581, 614, 615, 0, 0, 0, 548,
	566, 0, 629, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	563, 564, 1477, 0, 0, 0, 642, 0, 565, 0,
	0, 560, 561, 562, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 621, 0, 0, 208,
	364, 0, 0, 640, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 589, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 591, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 631, 641, 637, 639, 638, 635,
	636, 634, 633, 632, 643, 622, 623, 624, 625, 626,
	0, 0, 0, 628, 0, 608, 609, 0, 0, 0,
	484, 582, 583, 584, 585, 586, 592, 593, 597, 598,
	606, 605, 604, 607, 610, 612, 611, 613, 587, 588,
	590, 594, 595, 596, 599, 600, 603, 601, 602, 627,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 178, 550, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 630, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1358, 0, 551, 575, 574,
	577, 578, 579, 580, 0, 0, 534, 576, 581, 614,
	615, 0, 0, 0, 548, 566, 0, 629, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 642, 0, 565, 0, 0, 560, 561, 562, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 621, 0, 0, 208, 364, 0, 0, 640, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 589, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 591, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 631,
	641, 637, 639, 638, 635, 636, 634, 633, 632, 643,
	622, 623, 624, 625, 626, 0, 0, 0, 628, 0,
	608, 609, 0, 0, 0, 484, 582, 583, 584, 585,
	586, 592, 593, 597, 598, 606, 605, 604, 607, 610,
	612, 611, 613, 587, 588, 590, 594, 595, 596, 599,
	600, 603, 601, 602, 627, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 178, 550,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 630, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 551, 575, 574, 577, 578, 579, 580, 0,
	0, 534, 576, 581, 614, 615, 0, 0, 0, 548,
	566, 0, 629, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	563, 564, 0, 0, 0, 0, 642, 0, 565, 0,
	0, 560, 561, 562, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 621, 0, 0, 208,
	364, 0, 0, 640, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 589, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 591, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 631, 641, 637, 639, 638, 635,
	636, 634, 633, 632, 643, 622, 623, 624, 625, 626,
	0, 0, 0, 628, 0, 608, 609, 0, 0, 0,
	484, 582, 583, 584, 585, 586, 592, 593, 597, 598,
	606, 605, 604, 607, 610, 612, 611, 613, 587, 588,
	590, 594, 595, 596, 599, 600, 603, 601, 602, 627,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 630, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 551, 575, 574,
	577, 578, 579, 580, 0, 0, 534, 576, 581, 614,
	615, 0, 0, 0, 0, 566, 0, 629, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 642, 0, 565, 0, 0, 560, 561, 562, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 621, 0, 0, 208, 364, 0, 0, 640, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 589, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 591, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 631,
	641, 637, 639, 638, 635, 636, 634, 633, 632, 643,
	622, 623, 624, 625, 626, 1527, 1528, 1529, 628, 0,
	608, 609, 0, 0, 0, 484, 582, 583, 584, 585,
	586, 592, 593, 597, 598, 606, 605, 604, 607, 610,
	612, 611, 613, 587, 588, 590, 594, 595, 596, 599,
	600, 603, 601, 602, 627, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 630, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 551, 575, 574, 577, 578, 579, 580, 0,
	0, 534, 576, 581, 614, 615, 0, 0, 0, 0,
	566, 0, 629, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	563, 564, 0, 0, 0, 0, 642, 0, 565, 0,
	0, 560, 561, 562, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 621, 0, 0, 208,
	364, 0, 0, 640, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 589, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 591, 2871, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 631, 641, 637, 639, 638, 635,
	636, 634, 633, 632, 643, 622, 623, 624, 625, 626,
	0, 0, 0, 628, 0, 608, 609, 0, 0, 0,
	484, 582, 583, 584, 585, 586, 592, 593, 597, 598,
	606, 605, 604, 607, 610, 612, 611, 613, 587, 588,
	590, 594, 595, 596, 599, 600, 603, 601, 602, 627,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 630, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1037, 0, 551, 575, 574,
	577, 578, 579, 580, 0, 0, 534, 576, 581, 614,
	615, 0, 0, 0, 0, 566, 0, 629, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 563, 564, 0, 0, 0,
	0, 642, 0, 565, 0, 0, 560, 561, 562, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 621, 0, 0, 208, 364, 0, 0, 640, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 589, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 591, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 631,
	641, 637, 639, 638, 635, 636, 634, 633, 632, 643,
	622, 623, 624, 625, 626, 0, 0, 0, 628, 0,
	608, 609, 0, 0, 0, 484, 582, 583, 584, 585,
	586, 592, 593, 597, 598, 606, 605, 604, 607, 610,
	612, 611, 613, 587, 588, 590, 594, 595, 596, 599,
	600, 603, 601, 602, 627, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 630, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 619, 620,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 551, 575, 574, 577, 578, 579, 580, 0,
	0, 534, 576, 581, 614, 615, 0, 0, 0, 0,
	566, 0, 629, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	563, 564, 0, 0, 0, 0, 642, 0, 565, 0,
	0, 560, 561, 562, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 621, 0, 0, 208,
	364, 0, 0, 640, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 589, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 591, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 631, 641, 637, 639, 638, 635,
	636, 634, 633, 632, 643, 622, 623, 624, 625, 626,
	0, 0, 0, 628, 0, 608, 609, 0, 0, 0,
	484, 582, 583, 584, 585, 586, 592, 593, 597, 598,
	606, 605, 604, 607, 610, 612, 611, 613, 587, 588,
	590, 594, 595, 596, 599, 600, 603, 601, 602, 627,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 1567, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	1571, 0, 0, 0, 0, 0, 0, 126, 0, 472,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 1570, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 492, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 496, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 484, 477, 478, 479, 480,
	482, 501, 502, 506, 507, 524, 523, 522, 525, 529,
	532, 531, 533, 483, 485, 493, 503, 504, 505, 509,
	510, 519, 515, 517, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 1567, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1569, 1571, 0, 0, 0, 0,
	0, 0, 126, 0, 472, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	1565, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 1570, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 492, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 496, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 0, 0, 0,
	484, 477, 478, 479, 480, 482, 501, 502, 506, 507,
	524, 523, 522, 525, 529, 532, 531, 533, 483, 485,
	493, 503, 504, 505, 509, 510, 519, 515, 517, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 1059, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 1063,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 1056, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	1057, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 492, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 496, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 484, 477, 478, 479, 480,
	482, 501, 502, 506, 507, 524, 523, 522, 525, 529,
	532, 531, 533, 483, 485, 493, 503, 504, 505, 509,
	510, 519, 515, 517, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 472, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 492, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 496, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 0, 0, 0,
	484, 477, 478, 479, 480, 482, 501, 502, 506, 507,
	524, 523, 522, 525, 529, 532, 531, 533, 483, 485,
	493, 503, 504, 505, 509, 510, 519, 515, 517, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 467, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 1879,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 472,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 492, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 496, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 484, 477, 478, 479, 480,
	482, 501, 502, 506, 507, 524, 523, 522, 525, 529,
	532, 531, 533, 483, 485, 493, 503, 504, 505, 509,
	510, 519, 515, 517, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 472, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 492, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 496, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 0, 0, 0,
	484, 477, 478, 479, 480, 482, 501, 502, 506, 507,
	524, 523, 522, 525, 529, 532, 531, 533, 483, 485,
	493, 503, 504, 505, 509, 510, 519, 515, 517, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 511, 513,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 530, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1060, 0, 1063,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 492, 474, 0, 0, 0, 168, 0, 295,
	264, 352, 496, 0, 294, 221, 342, 0, 0, 351,
	0, 521, 361, 366, 487, 0, 481, 318, 180, 176,
	179, 0, 134, 495, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 499, 497, 0,
	0, 357, 500, 306, 305, 0, 203, 0, 508, 475,
	287, 512, 209, 133, 331, 369, 151, 215, 336, 473,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 490, 514, 0, 285, 308, 338, 153,
	325, 488, 489, 491, 518, 297, 520, 526, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	476, 0, 323, 355, 371, 155, 0, 311, 337, 498,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 484, 477, 478, 479, 480,
	482, 501, 502, 506, 507, 524, 523, 522, 525, 529,
	532, 531, 533, 483, 485, 493, 503, 504, 505, 509,
	510, 519, 515, 517, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	516, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 511, 513, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 530, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 492, 474, 0,
	0, 0, 168, 0, 295, 264, 352, 496, 0, 294,
	221, 342, 0, 0, 351, 0, 521, 361, 366, 487,
	0, 481, 318, 180, 176, 179, 0, 134, 495, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 357, 500, 306, 305,
	0, 203, 0, 508, 475, 287, 512, 209, 133, 331,
	369, 151, 215, 336, 473, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 490, 514,
	0, 285, 308, 338, 153, 325, 488, 489, 491, 518,
	297, 520, 526, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 476, 0, 323, 355, 371,
	155, 0, 311, 337, 498, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 0, 0, 0,
	484, 477, 478, 479, 480, 482, 501, 502, 506, 507,
	524, 523, 522, 525, 529, 532, 531, 533, 483, 485,
	493, 503, 504, 505, 509, 510, 519, 515, 517, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 516, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 0, 0, 0, 132, 0, 0, 511, 513,
	441, 334, 435, 446, 429, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 452, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 436, 0, 217, 0, 0,
	167, 225, 223, 0, 0, 0, 267, 333, 0, 0,
	0, 0, 220, 0, 0, 0, 321, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 271, 288, 309, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 427, 430, 0, 0, 0, 245, 145,
	0, 0, 434, 208, 364, 0, 0, 0, 281, 0,
	328, 196, 218, 150, 128, 143, 161, 195, 256, 438,
	303, 0, 0, 442, 0, 0, 168, 0, 295, 264,
	352, 0, 0, 294, 221, 342, 0, 445, 351, 0,
	0, 361, 366, 0, 0, 0, 318, 180, 176, 179,
	0, 134, 0, 278, 173, 213, 0, 0, 0, 165,
	0, 0, 0, 317, 340, 152, 335, 243, 249, 162,
	164, 163, 144, 312, 339, 157, 166, 322, 299, 329,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 306, 305, 0, 203, 0, 0, 0, 287,
	0, 209, 133, 331, 369, 151, 215, 336, 0, 190,
	255, 170, 265, 266, 187, 130, 283, 237, 238, 236,
	239, 194, 0, 0, 0, 455, 308, 338, 153, 325,
	431, 432, 433, 439, 440, 443, 444, 447, 228, 183,
	186, 197, 204, 0, 292, 326, 358, 0, 146, 135,
	332, 350, 158, 307, 310, 367, 293, 138, 348, 327,
	241, 210, 211, 136, 0, 137, 290, 177, 193, 171,
	259, 0, 192, 280, 345, 346, 169, 370, 147, 360,
	140, 148, 359, 252, 0, 251, 362, 341, 349, 242,
	230, 0, 139, 347, 240, 229, 216, 185, 199, 276,
	224, 277, 200, 247, 246, 248, 226, 231, 0, 0,
	0, 323, 355, 371, 155, 0, 311, 337, 0, 284,
	156, 191, 184, 275, 250, 149, 202, 320, 214, 222,
	289, 368, 263, 296, 159, 354, 319, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 141, 219, 0, 286, 189,
	356, 0, 175, 0, 0, 0, 0, 0, 129, 142,
	154, 160, 174, 182, 188, 198, 201, 205, 206, 207,
	212, 227, 232, 233, 234, 235, 253, 254, 257, 258,
	261, 262, 268, 269, 270, 272, 273, 274, 282, 437,
	291, 298, 300, 301, 302, 304, 313, 314, 315, 316,
	324, 330, 343, 344, 363, 365, 0, 0, 0, 132,
	441, 334, 435, 446, 429, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 436, 0, 217, 0, 0,
	167, 225, 223, 0, 0, 0, 267, 333, 0, 0,
	0, 0, 220, 0, 0, 0, 321, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 271, 288, 309, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 427, 430, 0, 0, 0, 245, 145,
	0, 0, 434, 208, 364, 0, 0, 0, 281, 0,
	328, 196, 218, 150, 128, 143, 161, 195, 256, 438,
	303, 0, 0, 442, 0, 0, 168, 0, 295, 264,
	352, 0, 0, 294, 221, 342, 0, 445, 351, 0,
	0, 361, 366, 0, 0, 0, 318, 180, 176, 179,
	0, 134, 0, 278, 173, 213, 0, 0, 0, 165,
	0, 0, 0, 317, 340, 152, 335, 243, 249, 162,
	164, 163, 144, 312, 339, 157, 166, 322, 299, 329,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 306, 305, 0, 203, 0, 0, 0, 287,
	0, 209, 133, 331, 369, 151, 215, 336, 0, 190,
	255, 170, 265, 266, 187, 130, 283, 237, 238, 236,
	239, 194, 0, 0, 0, 424, 308, 338, 153, 325,
	431, 432, 433, 439, 440, 443, 444, 447, 228, 183,
	186, 197, 204, 0, 292, 326, 358, 0, 146, 135,
	332, 350, 158, 307, 310, 367, 293, 138, 348, 327,
	241, 210, 211, 136, 0, 137, 290, 177, 193, 171,
	259, 0, 192, 280, 345, 346, 169, 370, 147, 360,
	140, 148, 359, 252, 0, 251, 362, 341, 349, 242,
	230, 0, 139, 347, 240, 229, 216, 185, 199, 276,
	224, 277, 200, 247, 246, 248, 226, 231, 0, 0,
	0, 323, 355, 371, 155, 0, 311, 337, 0, 284,
	156, 191, 184, 275, 250, 149, 202, 320, 214, 222,
	289, 368, 263, 296, 159, 354, 319, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 141, 219, 0, 286, 189,
	356, 0, 175, 0, 0, 0, 0, 0, 129, 142,
	154, 160, 174, 182, 188, 198, 201, 205, 206, 207,
	212, 227, 232, 233, 234, 235, 253, 254, 257, 258,
	261, 262, 268, 269, 270, 272, 273, 274, 282, 437,
	291, 298, 300, 301, 302, 304, 313, 314, 315, 316,
	324, 330, 343, 344, 363, 365, 334, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 217, 0, 0, 167, 225, 223, 0, 0,
	0, 267, 333, 0, 0, 0, 0, 220, 0, 0,
	0, 321, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 271,
	288, 309, 0, 279, 0, 1073, 1072, 1082, 1083, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1074, 0, 0, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 145, 0, 0, 0, 208, 364,
	0, 0, 0, 281, 0, 328, 196, 218, 150, 128,
	143, 161, 195, 256, 0, 303, 0, 0, 0, 0,
	0, 168, 0, 295, 264, 352, 0, 0, 294, 221,
	342, 0, 0, 351, 0, 0, 361, 366, 0, 0,
	0, 318, 180, 176, 179, 0, 134, 0, 278, 173,
	213, 0, 0, 0, 165, 0, 0, 0, 317, 340,
	152, 335, 243, 249, 162, 164, 163, 144, 312, 339,
	157, 166, 322, 299, 329, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 357, 0, 306, 305, 0,
	203, 0, 0, 0, 287, 0, 209, 133, 331, 369,
	151, 215, 336, 0, 190, 255, 170, 265, 266, 187,
	130, 283, 237, 238, 236, 239, 194, 0, 0, 0,
	285, 308, 338, 153, 325, 0, 0, 0, 0, 297,
	0, 0, 0, 228, 183, 186, 197, 204, 0, 292,
	326, 358, 0, 146, 135, 332, 350, 158, 307, 310,
	367, 293, 138, 348, 327, 241, 210, 211, 136, 0,
	137, 290, 177, 193, 171, 259, 0, 192, 280, 345,
	346, 169, 370, 147, 360, 140, 148, 359, 252, 0,
	251, 362, 341, 349, 242, 230, 0, 139, 347, 240,
	229, 216, 185, 199, 276, 224, 277, 200, 247, 246,
	248, 226, 231, 0, 0, 0, 323, 355, 371, 155,
	0, 311, 337, 0, 284, 156, 191, 184, 275, 250,
	149, 202, 320, 214, 222, 289, 368, 263, 296, 159,
	354, 319, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	141, 219, 0, 286, 189, 356, 0, 175, 0, 0,
	0, 0, 0, 129, 142, 154, 160, 174, 182, 188,
	198, 201, 205, 206, 207, 212, 227, 232, 233, 234,
	235, 253, 254, 257, 258, 261, 262, 268, 269, 270,
	272, 273, 274, 282, 0, 291, 298, 300, 301, 302,
	304, 313, 314, 315, 316, 324, 330, 343, 344, 363,
	365, 334, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 2793, 0, 0, 0, 0,
	0, 0, 178, 2791, 0, 0, 0, 217, 0, 0,
	167, 225, 223, 0, 0, 0, 267, 333, 0, 0,
	0, 0, 220, 0, 0, 0, 321, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 271, 288, 309, 0, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 145,
	0, 0, 0, 208, 364, 0, 0, 0, 281, 0,
	328, 196, 218, 150, 128, 143, 161, 195, 256, 0,
	303, 0, 0, 0, 0, 0, 168, 0, 295, 264,
	352, 0, 0, 294, 221, 342, 0, 0, 351, 0,
	0, 361, 366, 0, 0, 0, 318, 180, 176, 179,
	0, 134, 0, 278, 173, 213, 0, 0, 0, 165,
	0, 0, 0, 317, 340, 152, 335, 243, 249, 162,
	164, 163, 144, 312, 339, 157, 166, 322, 299, 329,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 306, 305, 0, 203, 0, 2792, 0, 287,
	0, 209, 133, 331, 369, 151, 215, 336, 0, 190,
	255, 170, 265, 266, 187, 130, 283, 237, 238, 236,
	239, 194, 0, 0, 0, 285, 308, 338, 153, 325,
	0, 0, 0, 0, 297, 0, 0, 0, 228, 183,
	186, 197, 204, 0, 292, 326, 358, 0, 146, 135,
	332, 350, 158, 307, 310, 367, 293, 138, 348, 327,
	241, 210, 211, 136, 0, 137, 290, 177, 193, 171,
	259, 0, 192, 280, 345, 346, 169, 370, 147, 360,
	140, 148, 359, 252, 0, 251, 362, 341, 349, 242,
	230, 0, 139, 347, 240, 229, 216, 185, 199, 276,
	224, 277, 200, 247, 246, 248, 226, 231, 0, 0,
	0, 323, 355, 371, 155, 0, 311, 337, 0, 284,
	156, 191, 184, 275, 250, 149, 202, 320, 214, 222,
	289, 368, 263, 296, 159, 354, 319, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 141, 219, 0, 286, 189,
	356, 0, 175, 0, 0, 0, 0, 0, 129, 142,
	154, 160, 174, 182, 188, 198, 201, 205, 206, 207,
	212, 227, 232, 233, 234, 235, 253, 254, 257, 258,
	261, 262, 268, 269, 270, 272, 273, 274, 282, 0,
	291, 298, 300, 301, 302, 304, 313, 314, 315, 316,
	324, 330, 343, 344, 363, 365, 36, 334, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 1562, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 79, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 1211,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 2246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 646, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 123, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 148, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 226, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	250, 149, 202, 320, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 273, 274, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 350, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 350, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 666, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 662, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	667, 665, 656, 657, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 663, 664, 282, 0, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 334, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 217, 0,
	0, 167, 225, 223, 0, 0, 0, 267, 333, 0,
	0, 0, 0, 220, 0, 0, 0, 321, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 271, 288, 309, 0, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	145, 0, 0, 0, 208, 364, 0, 0, 0, 281,
	0, 328, 196, 218, 150, 128, 143, 161, 195, 256,
	0, 303, 0, 0, 0, 0, 0, 168, 0, 295,
	264, 352, 0, 0, 294, 221, 342, 0, 0, 351,
	0, 0, 361, 366, 0, 0, 0, 318, 180, 176,
	179, 0, 134, 0, 278, 173, 213, 0, 0, 0,
	165, 0, 0, 0, 317, 340, 152, 335, 243, 249,
	162, 164, 163, 144, 312, 339, 157, 166, 322, 299,
	329, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 306, 305, 0, 203, 0, 0, 0,
	287, 0, 209, 133, 331, 369, 151, 215, 336, 0,
	190, 255, 170, 265, 266, 187, 130, 283, 237, 238,
	236, 239, 194, 0, 0, 0, 285, 308, 338, 153,
	325, 0, 0, 0, 0, 297, 0, 0, 0, 228,
	183, 186, 197, 204, 0, 292, 326, 358, 0, 146,
	135, 332, 1205, 158, 307, 310, 367, 293, 138, 348,
	327, 241, 210, 211, 136, 0, 137, 290, 177, 193,
	171, 259, 0, 192, 280, 345, 346, 169, 370, 147,
	360, 140, 148, 359, 252, 0, 251, 362, 341, 349,
	242, 230, 0, 139, 347, 240, 229, 216, 185, 199,
	276, 224, 277, 200, 247, 246, 248, 226, 231, 0,
	0, 0, 323, 355, 371, 155, 0, 311, 337, 0,
	284, 156, 191, 184, 275, 250, 149, 202, 320, 214,
	222, 289, 368, 263, 296, 159, 354, 319, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 141, 219, 0, 286,
	189, 356, 0, 175, 0, 0, 0, 0, 0, 129,
	142, 154, 160, 174, 182, 188, 198, 201, 205, 206,
	207, 212, 227, 232, 233, 234, 235, 253, 254, 257,
	258, 261, 262, 268, 269, 270, 272, 273, 274, 282,
	0, 291, 298, 300, 301, 302, 304, 313, 314, 315,
	316, 324, 330, 343, 344, 363, 365, 334, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 217, 0, 0, 167, 225, 223, 0,
	0, 0, 267, 333, 0, 0, 0, 0, 220, 0,
	0, 0, 321, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	271, 288, 309, 0, 279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 145, 0, 0, 0, 208,
	364, 0, 0, 0, 281, 0, 328, 196, 218, 150,
	128, 143, 161, 195, 256, 0, 303, 0, 0, 0,
	0, 0, 168, 0, 295, 264, 352, 0, 0, 294,
	221, 342, 0, 0, 351, 0, 0, 361, 366, 0,
	0, 0, 318, 180, 176, 179, 0, 134, 0, 278,
	173, 213, 0, 0, 0, 165, 0, 0, 0, 317,
	340, 152, 335, 243, 249, 162, 164, 163, 144, 312,
	339, 157, 166, 322, 299, 329, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 357, 0, 306, 305,
	0, 203, 0, 0, 0, 287, 0, 209, 133, 331,
	369, 151, 215, 336, 0, 190, 255, 170, 265, 266,
	187, 130, 283, 237, 238, 236, 239, 194, 0, 0,
	0, 285, 308, 338, 153, 325, 0, 0, 0, 0,
	297, 0, 0, 0, 228, 183, 186, 197, 204, 0,
	292, 326, 358, 0, 146, 135, 332, 653, 158, 307,
	310, 367, 293, 138, 348, 327, 241, 210, 211, 136,
	0, 137, 290, 177, 193, 171, 259, 0, 192, 280,
	345, 346, 169, 370, 147, 360, 140, 666, 359, 252,
	0, 251, 362, 341, 349, 242, 230, 0, 139, 347,
	240, 229, 216, 185, 199, 276, 224, 277, 200, 247,
	246, 248, 662, 231, 0, 0, 0, 323, 355, 371,
	155, 0, 311, 337, 0, 284, 156, 191, 184, 275,
	667, 665, 656, 657, 214, 222, 289, 368, 263, 296,
	159, 354, 319, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 141, 219, 0, 286, 189, 356, 0, 175, 0,
	0, 0, 0, 0, 129, 142, 154, 160, 174, 182,
	188, 198, 201, 205, 206, 207, 212, 227, 232, 233,
	234, 235, 253, 254, 257, 258, 261, 262, 268, 269,
	270, 272, 663, 664, 282, 530, 291, 298, 300, 301,
	302, 304, 313, 314, 315, 316, 324, 330, 343, 344,
	363, 365, 0, 0, 0, 132, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 1221, 0, 0, 0, 0, 0, 0,
	0, 492, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 2261, 0, 0, 0, 0, 0, 0, 0,
	521, 534, 0, 487, 0, 481, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 499, 497, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 508, 475, 0,
	512, 0, 0, 0, 0, 0, 0, 0, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 514, 0, 0, 0, 492, 474, 0,
	488, 489, 491, 518, 0, 520, 526, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 487,
	0, 481, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 508, 475, 0, 512, 0, 0, 476,
	0, 0, 0, 0, 473, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 514,
	0, 0, 0, 0, 0, 0, 488, 489, 491, 518,
	0, 520, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	528, 0, 0, 0, 484, 477, 478, 479, 480, 482,
	501, 502, 506, 507, 524, 523, 522, 525, 529, 532,
	531, 533, 483, 485, 493, 503, 504, 505, 509, 510,
	519, 515, 517, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 2270, 0, 0, 0,
	0, 0, 0, 0, 498, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 511, 513, 0, 527, 528, 0, 0, 0,
	484, 477, 478, 479, 480, 482, 501, 502, 506, 507,
	524, 523, 522, 525, 529, 532, 531, 533, 483, 485,
	493, 503, 504, 505, 509, 510, 519, 515, 517, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 2268, 0, 0, 0, 0, 0, 0, 0,
	521, 534, 0, 487, 0, 481, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 516, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 511, 513,
	0, 0, 0, 0, 0, 0, 499, 497, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 508, 475, 0,
	512, 0, 0, 0, 0, 0, 0, 0, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 514, 0, 0, 0, 492, 474, 0,
	488, 489, 491, 518, 0, 520, 526, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 521, 0, 0, 487,
	0, 481, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 497, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 508, 475, 0, 512, 0, 0, 476,
	0, 0, 0, 0, 473, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 514,
	0, 0, 0, 0, 0, 0, 488, 489, 491, 518,
	0, 520, 526, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	528, 0, 0, 0, 484, 477, 478, 479, 480, 482,
	501, 502, 506, 507, 524, 523, 522, 525, 529, 532,
	531, 533, 483, 485, 493, 503, 504, 505, 509, 510,
	519, 515, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 511, 513, 41, 527, 528, 0, 0, 0,
	484, 477, 478, 479, 480, 482, 501, 502, 506, 507,
	524, 523, 522, 525, 529, 532, 531, 533, 483, 485,
	493, 503, 504, 505, 509, 510, 519, 515, 517, 0,
	0, 0, 81, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 2687, 41, 0, 0,
	0, 2903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 511, 513,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2688, 0, 2687,
	0, 0, 0, 0, 2899, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 36,
	47, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2688, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2689, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 81, 0, 47, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 2687, 0, 0, 0, 0,
	2893, 68, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 2689, 0, 0, 0, 0, 0, 2690,
	75, 0, 53, 54, 61, 0, 62, 66, 0, 67,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 2687, 0, 0, 0, 47,
	2879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2690, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 57, 58, 73, 2689,
	0, 0, 0, 0, 0, 0, 2688, 0, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 36, 47,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 59, 0, 0, 0, 0, 79, 78, 0,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 2690, 75,
	0, 53, 54, 61, 0, 62, 57, 58, 0, 2689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 2868, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 2687, 0, 0, 0, 0, 0,
	68, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 2690, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 36, 73, 72, 39,
	40, 0, 0, 0, 0, 2688, 0, 0, 0, 0,
	59, 0, 0, 81, 0, 0, 78, 0, 0, 0,
	41, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 2687, 0, 0,
	0, 0, 2815, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 73, 2689, 0,
	0, 0, 2687, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 2688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 68,
	0, 47, 0, 0, 0, 0, 79, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2688, 0, 0, 0, 2690, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 57, 58,
	0, 2689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 57, 58, 0, 2689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	2690, 75, 0, 53, 54, 61, 73, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2690, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79,
}

var yyPact = [...]int{
	4250, -1000, -319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1997, -1000, -1000, -1000, -1000,
	-1000, -1000, 971, 308, -1000, 289, 174, 29880, 700, 2856,
	30870, -1000, -1000, -1000, 216, 619, 30870, 476, 463, 1335,
	1865, 1334, 69, -22, -27, 171, 23444, 22944, 56, -1000,
	2061, 2063, -1000, -1000, 429, 73, -1000, -1000, -1000, 20460,
	211, -1000, -1000, 1958, 1994, 1784, -1000, 13530, 429, 429,
	29385, 32850, -1000, 2039, 30870, 12043, -1000, 694, 30870, -126,
	564, 564, 373, 564, 564, 698, -1000, 980, -1000, -1000,
	-1000, -1000, 30870, 26415, 625, 30375, 625, 625, 625, 625,
	625, 625, 625, 30870, -1000, 775, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 30870, 1326, 1914, 997, 162, -1000, -1000, -1000,
	994, -1000, 328, 317, 363, 315, 131, 1038, 1978, -1000,
	1625, 1958, 1958, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	371, 664, 255, 211, 978, 1948, 1910, 1909, 1218, 1899,
	552, 1896, 1709, 1, -1000, 1325, 30870, -1000, -1000, 1193,
	1189, 1750, 1575, 716, 1749, -1000, -1000, 393, 626, 1699,
	439, 1699, 1699, 1699, 1699, 1699, -28, 1699, 1699, 1699,
	112, 1699, 176, 1699, 1699, 1699, 1699, 1699, 1344, -1000,
	-1000, -1000, 418, 1470, 1557, 1747, 242, -1000, -1000, -1000,
	-1000, 1688, 1961, 697, -1000, -65, 1603, 21450, -1000, 1625,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1352, 1912, 1107, 16500, 1826,
	-1000, -1000, 1060, 2047, -1000, 19965, 771, -1000, 16500, 3437,
	1625, -1000, -1000, 1625, -1000, -1000, -1000, 720, -1000, -1000,
	18480, 18480, 18480, 18480, 18480, 18480, 18480, 18480, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 1625, 1625, 1625, -1000, -1000, 1625, -1000, 13035, 1625,
	1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 16500,
	1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 1625, 1625, 1625, 28890, 26910, 30870, 1650, 1631, -1000,
	-1000, 766, 1619, -102, 32355, -1000, -1000, -1000, -1000, 31365,
	25920, 969, -1000, -1000, -1000, -1000, 1892, -1000, -1000, 759,
	-1000, 1997, -1000, -1000, 1535, 411, -1000, 407, 33284, -1000,
	-1000, -1000, 1707, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30375, 1956, 642, 1324, 1010, 1321, 31365, 31365, 26415,
	26415, 564, 1317, 1615, 662, 1612, 658, 1341, 30870, 1935,
	1745, 30870, 1316, 1315, 31365, 31365, 26415, 26415, -1000, 11538,
	-1000, -1000, 997, -1000, 1232, 16500, 564, 564, 30870, 30870,
	30870, 30870, 30870, -1000, -1000, 997, 997, 997, 997, 951,
	2043, 951, -1000, 951, -1000, -1000, 16500, -1000, 18480, 25425,
	816, -1000, -1000, -1000, 1311, 358, -1000, -1000, -1000, -1000,
	-1000, -1000, 1310, -1000, 1871, 552, 552, -1000, 1231, 552,
	1596, -1000, 965, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 552, -1000, 16005, -308, -1000,
	-1000, 1611, -1000, 302, -1000, -1000, 613, 613, 199, 26415,
	26415, 26415, -1000, 1699, 30375, -1000, 1699, 1699, 1699, -44,
	1699, 1699, -1000, -1000, 1699, -1000, -1000, -1000, -1000, -1000,
	1699, -1000, -1000, -1000, 1699, 1699, -1000, 1699, 1699, -1000,
	-1000, -1000, -1000, -1000, 26415, 613, 183, 1610, 613, 26415,
	26415, -1000, 101, 99, 97, 96, -1000, -1000, -1000, -1000,
	95, 90, -1000, -1000, 1784, -1000, -1000, 211, -1000, -1000,
	30870, -71, 21450, 1603, 1955, 10023, -1000, -1000, -1000, 2057,
	890, 1485, -1000, -1000, 1600, -1000, 1088, 751, 1167, 1796,
	-1000, -1000, -1000, 30870, -1000, 16500, 16500, 1089, -1000, 21945,
	-1000, -1000, -1000, -1000, 9518, 920, 18480, 1053, 929, 18480,
	18480, 18480, 18480, 18480, 18480, 18480, 18480, 18480, 18480, 18480,
	18480, 18480, 18480, 18480, 1177, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1304, -1000, 211, 1355, 1355, 788, 788,
	788, 788, 788, 788, 788, 23939, 1952, 14520, 14520, 14520,
	1952, 1352, 1352, 14520, 14520, 14520, 14520, 14520, 14520, 14520,
	14520, 1952, 1952, 14520, 1352, 1352, 1352, 1352, 14520, 14520,
	14520, 14520, 30375, 30375, 1952, 14520, 14520, 14520, 1952, 1352,
	1531, 992, 13035, 14520, 14520, 1352, 16500, 16500, 15510, 15015,
	16995, 14520, 1952, 989, 992, 31365, -1000, -1000, 17985, -1000,
	-1000, -1000, -1000, -1000, 1352, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14520, 14520, 14520, 14520, 875, 30870, -1000,
	1461, 1687, -1000, -1000, -1000, 1953, 24930, -1000, 19470, -1000,
	1625, 875, 1558, 26910, 30870, -1000, -1000, 26910, 30870, 9013,
	31860, 1584, -1000, -61, -93, -102, -1000, -1000, 783, -1000,
	-1000, -1000, 12539, -1000, 10528, 1958, 1784, 6488, 11033, -1000,
	33284, 1707, -1000, -10, -1000, -1000, -1000, 1664, -1000, 1664,
	320, 34, 1664, 1664, 1664, 1664, 1664, 27, 27, 27,
	27, 38, -1000, -1000, -1000, -1000, -1000, 1705, 1704, -1000,
	1664, 1664, 1664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1691, 334, 1683, 1683, 1683, 1683, 1683, 398,
	398, -1000, 16500, 1441, -1000, 30870, 1919, 1933, 1919, 318,
	-1000, 749, 1700, -1000, 747, 1505, -1000, 198, 1408, 30870,
	-1000, 30870, 30870, 26415, 26415, 26415, 620, -1000, 30870, 1597,
	-1000, -1000, -1000, -1000, -1000, 1562, -1000, 1408, -1000, -1000,
	-1000, -1000, -1000, 992, 1303, 1302, 1948, -1000, -1000, -1000,
	993, -1000, -1000, -1000, -1000, 997, 30870, 30870, 30870, 1948,
	997, 992, 809, 1711, 1625, 1352, -1000, -1000, 1301, -1000,
	18480, 1596, 1596, -1000, 1596, 552, 1355, 1596, -1000, 1528,
	1929, 1230, 30870, -1000, 21450, -1, -1000, -97, 28395, -1000,
	-1000, -1000, 28395, -1000, 112, 175, -1000, 648, -1000, 1523,
	-1000, -1000, -1000, -1000, 1699, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 28395, 143, 181, 28395, 1562, 2041,
	-1000, -1000, -1000, -1000, 1977, -1000, 1952, 1352, 306, -1000,
	-1000, -1000, 1625, 1447, 746, -1000, 1792, 1107, 1107, 16500,
	-1000, -1000, -1000, 10528, 1975, -1000, 1808, 1805, 1769, -1000,
	-1000, 920, 919, -1000, -1000, 1128, -1000, -1000, -1000, -1000,
	743, 1625, -1000, 3822, -1000, -1000, -1000, -1000, 1053, 18480,
	18480, 18480, 809, 3822, 3879, 1108, 2015, 788, 1131, 1131,
	787, 787, 787, 787, 787, 1188, 1188, -1000, -1000, -1000,
	1352, -1000, -1000, -1000, 14520, 1514, -1000, -1000, 992, 742,
	1514, 1514, 14520, -160, -160, 1514, 1352, 1514, 1514, 1514,
	1514, 1352, 1514, 14520, 14520, 1514, -160, -160, -160, -160,
	1514, 1514, 1514, 1514, 1590, 1589, 14520, 1514, 1514, 1514,
	14520, -1000, 16500, -1000, 1352, 1514, 1514, -1000, 960, 1118,
	864, 2036, 1514, 852, 2035, 1514, 968, 18480, 18480, 18480,
	1514, 14520, 1052, -1000, 16500, 1352, -1000, 1040, 1514, 1352,
	1585, 1514, 1514, 213, 1625, -1000, 10528, 26910, 26910, 26910,
	26910, 26910, -1000, 1773, 1772, -1000, 1763, 1761, 1762, 21450,
	1518, 1352, 299, 24930, -1000, 1625, -1000, 20955, 641, 691,
	690, 685, 14520, 2003, 26910, 1431, -1000, 1431, -1000, 741,
	-1000, -1000, 31365, -102, -36, -1000, -1000, 1584, -1000, 1191,
	-1000, -1000, 992, -1000, 737, 1912, 1952, 1583, 5983, -1000,
	-1000, -1000, -1000, 411, -1000, -1000, -1000, 1693, 4705, -1000,
	1836, 796, 796, 807, 1259, 1825, -1000, -1000, 156, -17,
	-1000, -1000, 1187, 27, 27, 1664, 1664, 298, 1664, -1000,
	27, -1000, -1000, -1000, 783, 1890, 783, 783, 783, 783,
	27, 1228, 1228, -1000, -1000, -1000, -1000, 1175, -1000, 1691,
	-1000, 1171, -1000, -1000, -1000, -1000, -1000, -1000, 1081, 1738,
	30375, -1000, 1949, -1000, 1919, -1000, -1000, -1000, 141, -1000,
	-1000, -1000, 2016, -1000, -1000, 30375, 667, 30375, 119, 26415,
	188, 311, 207, -1000, 646, -1000, 638, -1000, -1000, -1000,
	-1000, -1000, -1000, 30870, 26415, -1000, -1000, -1000, 2003, 1294,
	1289, -1000, -1000, -1000, 951, 997, -1000, -1000, 18480, 26415,
	-1000, 321, -1000, 3822, -1000, -1000, -1000, 875, 696, -1000,
	-1000, -84, -1000, -1000, 636, 736, 731, 631, -1000, 129,
	26415, -1000, 30375, -1000, 2030, 2027, 142, 2020, 26415, -1000,
	77, 1796, -1000, 1578, -1000, 860, 537, 835, 421, 421,
	-1000, 897, 421, 1886, 1873, 874, -1000, 229, -1000, 10023,
	10023, 1790, -1000, -1000, -1000, 30870, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8508, 14520, -1000, 809, 3822,
	3644, -1000, 18480, -1000, 1514, 14520, -160, 8003, -160, -160,
	1514, -1000, 27900, -1000, -1000, -160, -1000, -160, -160, -160,
	-160, -160, 1514, 1514, -160, -1000, -1000, -1000, -1000, -160,
	-160, -160, -160, 18480, 18480, 1514, -160, -160, -160, 1352,
	992, -1000, -1000, -1000, 531, 1177, 531, 18480, 18480, -1000,
	18480, 18480, -1000, -1000, 18480, 3766, 3576, 3510, -209, 1599,
	956, -1000, 16500, 1043, -1000, -1000, -1000, -1000, -1000, -1000,
	1736, 10528, 1625, 6993, -1000, 30375, 1463, -1000, 957, 932,
	1687, 1698, 1734, 1439, -1000, -1000, -1000, -1000, 1771, -1000,
	1710, -1000, -1000, 1655, -1000, -1000, 1577, 1625, 30375, 18480,
	641, -1000, 1625, 1625, 1625, 1352, 1997, 16500, 1431, -1000,
	-1000, 815, -1000, -1000, -86, -98, -1000, -1000, -1000, 10023,
	-1000, 6488, -1000, 6488, -1000, 22440, 409, 1838, 401, -1000,
	1259, -1000, -1000, 1259, -1000, 1259, -1000, -1000, -1000, 1685,
	-1000, 1037, -1000, -1000, -1000, -1000, -1000, 1625, -311, 18480,
	2056, -1000, 1835, -1000, 1834, 1829, 1227, -1000, -1000, 1401,
	783, 783, 27, -1000, -1000, 1664, -1000, 783, -1000, 887,
	-1000, -1000, -1000, -1000, 783, 1490, -1000, 1488, 1576, -1000,
	1477, 110, 30870, -1000, 211, -1000, -1000, -1000, -1000, 1881,
	897, 897, 897, 1733, -1000, -1000, -1000, -1000, 1380, 1563,
	-1000, 407, 1283, 1275, 1271, -1000, -223, 270, -1000, 26415,
	163, 198, 431, 1270, 30870, 26415, -1000, -1000, -1000, -1000,
	-1000, 1948, -1000, 3822, 1408, -1000, -1000, 27, 30870, -1000,
	26415, 797, 27405, 26415, 138, 173, -1000, 26415, 26415, 2018,
	26415, 1562, 1226, 1769, 306, 4421, 1259, 740, -1000, -1000,
	412, -1000, 3233, 1825, 1268, 33780, 33674, 30375, 1824, 1822,
	1267, 30870, 30375, -1000, -1000, 33390, 1266, 16500, -1000, 30375,
	-1000, -1000, 30375, 730, -1000, -1000, -1000, 1517, 13530, -1000,
	-1000, 1352, -1000, 18480, 3822, -160, -1000, -1000, -1000, -1000,
	726, -1000, -1000, -160, -1000, -1000, 1264, -1000, -1000, -1000,
	-1000, -1000, -1000, -160, -160, -1000, -1000, -1000, -1000, -1000,
	3259, 2801, -160, -1000, -1000, -1000, -1000, 1352, 1664, 1664,
	-1000, 1664, 1683, -1000, 1664, 52, 1664, 47, 1352, 1352,
	3143, 3128, 3015, 1362, 1040, 18480, 18480, 18480, 1625, -138,
	-1000, 992, 16500, -1000, 1921, 1452, 1547, -1000, -1000, 14025,
	1352, 1804, 1447, -1000, 20460, 1445, -1000, 1997, 10528, 16500,
	16500, -1000, -1000, 16500, 1673, -1000, 16500, -1000, -1000, -1000,
	-1000, 30375, 296, -1000, 16500, 1445, 851, -1000, 30375, 30375,
	30375, -1000, 1958, 992, -1000, -1000, -1000, -1000, 5983, -1000,
	1442, -1000, 1664, 1664, 1816, -1000, 796, -1000, -1000, -1000,
	-1000, 30375, -1000, 18480, 1945, 3822, -88, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 783, -1000, -1000, -1000, -1000, -1000,
	27, 1223, 27, 1169, -1000, 1162, -1000, -1000, -256, 1662,
	-1000, -1000, 897, 886, 871, 1221, 30870, 123, 667, -1000,
	407, 407, 407, 151, 168, -1000, 1023, -1000, -1000, -1000,
	1220, 1217, 1212, 1408, 202, 1017, 172, -1000, 1938, -1000,
	-1000, 997, -33, -1000, 173, -1000, -1000, -1000, 173, -1000,
	-1000, 177, 1562, 1562, 26415, 1562, -1000, -1000, -1000, 33390,
	394, 407, 407, 1441, 796, 1812, 401, -1000, -1000, -1000,
	-1000, -1000, -1000, 1263, -1000, 756, -1000, 629, 394, 33390,
	992, 824, 1928, 10023, 2001, 26910, -1000, -1000, -1000, 3822,
	-1000, 7498, -1000, 855, -1000, -1000, -1000, 18480, 18480, -1000,
	-1000, -1000, 343, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18480, 18480, 18480, 18480, -1000, 1040, 1040, 1040, 18480,
	1352, 1210, 992, 1811, -1000, 1625, -1000, -1000, 1625, 226,
	-1000, 30375, 1958, -1000, 992, 992, 992, 30375, 992, 1440,
	-1000, 1625, 18975, -1000, 21450, 1404, 1404, 1404, -1000, 710,
	22440, 1927, 1927, -1000, 1259, 1400, 1040, 1625, -1000, 1625,
	1625, -1000, 783, -1000, 783, 1378, 1369, -1000, 22440, -1000,
	211, 868, -1000, -1000, -1000, -1000, -1000, 1976, -1000, 123,
	-1000, 1209, 263, 259, -1000, 261, 252, 251, 249, 244,
	-1000, -1000, -1000, -1000, 333, 151, -1000, -37, 1139, 905,
	1878, 168, -1000, 1132, 1126, 1120, 1114, 290, -1000, -1000,
	-1000, -1000, 205, 198, -1000, 428, 1208, -1000, 1855, 1851,
	1943, 1943, 134, 1562, 1552, 1354, -1000, -1000, 1262, -1000,
	-1000, 1660, 1259, 1657, -1000, 1256, -1000, -1000, 30375, -1000,
	394, 1918, 1917, 1625, -1000, 1999, 1993, 1431, 13530, -1000,
	-1000, 1997, 1992, 1040, 1040, -1000, -1000, 1040, 1040, 1040,
	1040, -1000, -1000, -1000, 132, -1000, -1000, 2053, -1000, 1547,
	1625, -1000, 211, -1000, -1000, 1383, -1000, 30375, -1000, -1000,
	641, -1000, -1000, -1000, 710, -1000, 1248, 897, 1207, -1000,
	-1000, -1000, -1000, 380, -314, 18480, -1000, -1000, -1000, -1000,
	1377, -1000, -1000, -1000, 293, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1861, 1859, 272, -1000, 1206, 1205, -1000, 419,
	1142, 778, -176, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 335, 1247, -1000, 170, -1000, -1000,
	422, 1843, 1845, 1986, -1000, 26415, -1000, -1000, 26910, -1000,
	-1000, 156, 156, 22440, 1441, 22440, -1000, -1000, -1000, 18480,
	-1000, 853, -167, 16500, 16500, 2001, -1000, 849, 16500, -1000,
	-1000, -1000, -1000, -1000, -1000, 1352, 204, -230, 10528, 1547,
	1352, -1000, -1000, -1000, -1000, -1000, 1109, -1000, 30870, -1000,
	-1000, -1000, 1040, 710, -1000, 287, 34710, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1077, -1000, -1000, 1124, 415,
	167, -1000, 1941, -1000, 1655, 1071, 1851, 1984, 1849, 1847,
	-1000, 1203, -227, 1431, 1365, 1653, 1356, 3822, 1351, -1000,
	30375, -1000, 30375, -1000, 992, 1537, -1000, 992, 1999, -1000,
	1352, 241, 241, 1526, -1000, 1789, -213, -234, 1496, -1000,
	-1000, 1644, -314, -1000, 710, 292, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 16500, 16500, 5478,
	34710, 150, -1000, 149, -1000, -1000, -1000, 1202, -1000, 1853,
	-1000, 1197, -1000, 1982, 1964, -1000, 186, 2001, 710, 22440,
	710, -1000, 853, 1803, 1458, -1000, 1939, 16500, -167, -1000,
	-1000, 161, -1000, 842, 278, 839, -1000, 1355, -1000, -1000,
	1788, -1000, 30375, -1000, -1000, 1245, 1244, -1000, 1031, 1028,
	228, 208, 4916, -1000, -1000, -1000, -1000, -320, -1000, -1000,
	-1000, -1000, -1000, -1000, 1196, 1192, 24434, 1999, -1000, 1348,
	-1000, -1000, 336, 30375, 1625, -1000, -1000, 1012, -1000, -1000,
	-1000, -1000, -1000, 30375, -228, 1339, -1000, -1000, -1000, 1095,
	-1000, 16500, 34710, 1973, 1971, 1966, 1916, 10023, 34665, -1000,
	-1000, -1000, -1000, 133, 1408, -167, 710, 325, -1000, -1000,
	161, -1000, -231, 1728, 368, 991, 34710, -1000, 955, -321,
	461, 211, 615, 18480, -1000, -1000, -1000, 26415, -1000, -1000,
	1625, -1000, -239, 1723, 1714, 2034, -1000, -1000, -1000, -1000,
	-1000, -1000, 34710, -1000, -323, 34710, 3784, -1000, -1000, -1000,
	34572, -1000, -1000, -1000, -1000, 219, -1000, -1000, 3822, 1408,
	17490, -1000, -1000, 2052, -1000, 2050, 729, 729, -1000, -328,
	34403, -329, 556, 34710, 977, -1000, 16500, -1000, 615, -1000,
	1040, 1352, -1000, -1000, -1000, 392, 1121, -1000, 34323, 966,
	34710, -1000, -332, 544, 34710, -1000, 946, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 34217, -1000, -333, 34710, 528,
	34154, -334, -1000, 425, 34710, -1000,
}

var yyPgo = [...]int{
	0, 2453, 2449, 38, 2447, 197, 2446, 2445, 2443, 26,
	22, 19, 30, 2442, 2165, 2163, 2161, 2159, 2157, 2439,
	7, 2438, 2437, 2153, 2436, 2435, 2151, 2149, 2147, 2127,
	2433, 2431, 2430, 2125, 2106, 2100, 10, 2429, 17, 2428,
	4, 151, 172, 2427, 2, 2426, 2424, 8, 2422, 2421,
	2094, 2420, 2415, 2414, 99, 2413, 2089, 2083, 2412, 2079,
	2077, 2411, 2410, 2075, 2072, 2069, 2408, 186, 2406, 2405,
	2404, 288, 98, 152, 2401, 2400, 2399, 124, 79, 1832,
	165, 58, 121, 1041, 2398, 29, 49, 196, 2395, 162,
	2393, 184, 2392, 169, 2387, 149, 154, 105, 2386, 2385,
	183, 2383, 2382, 2379, 148, 2377, 2376, 171, 2938, 2375,
	2373, 157, 2370, 75, 175, 53, 41, 2369, 2367, 2352,
	2350, 2348, 28, 384, 2338, 109, 160, 2332, 2328, 86,
	2327, 2325, 198, 2321, 2319, 2318, 142, 48, 2317, 2316,
	51, 2315, 55, 76, 2311, 47, 2310, 144, 2309, 2308,
	43, 33, 2302, 54, 2301, 57, 2300, 156, 286, 238,
	2299, 24, 13, 15, 2298, 37, 12, 11, 46, 9,
	64, 74, 146, 106, 2297, 36, 45, 141, 102, 97,
	44, 2296, 159, 2295, 91, 163, 128, 143, 161, 2294,
	2293, 2292, 1209, 2291, 132, 100, 2289, 104, 1490, 173,
	123, 2285, 93, 2282, 2281, 2279, 2275, 2274, 92, 113,
	2272, 2271, 52, 21, 1069, 1696, 70, 164, 2270, 56,
	2269, 2268, 2266, 3031, 114, 107, 110, 2265, 108, 25,
	60, 2261, 2260, 2259, 2255, 2253, 2252, 289, 2251, 2250,
	2244, 2243, 138, 168, 2242, 136, 133, 130, 2241, 155,
	40, 2240, 2239, 140, 126, 2236, 2234, 2233, 2232, 131,
	85, 153, 2231, 122, 118, 125, 2228, 90, 2227, 2226,
	77, 50, 2225, 2224, 2220, 103, 115, 2217, 68, 34,
	35, 73, 6, 2214, 2211, 80, 111, 2208, 32, 2207,
	5, 3, 18, 2206, 2205, 2204, 2202, 2201, 2200, 2194,
	87, 2193, 2187, 71, 2185, 2183, 2179, 42, 2178, 2177,
	2176, 150, 127, 96, 167, 94, 14, 2175, 2174, 16,
	2172, 129, 2171, 61, 2170, 62, 2169, 2168, 65, 2155,
	2143, 63, 2130, 2120, 170, 1755, 372, 2118, 174, 158,
	59, 95, 2114, 2103, 0, 147, 180, 188, 2096, 2085,
}

var yyR1 = [...]int{
	0, 343, 343, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 346, 346, 102, 102, 100, 100, 101,
	101, 177, 177, 12, 12, 12, 182, 182, 187, 187,
	187, 190, 190, 190, 190, 167, 168, 169, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	317, 317, 326, 326, 326, 327, 327, 325, 325, 325,
	325, 325, 329, 329, 330, 330, 328, 328, 328, 328,
	332, 332, 333, 333, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 320, 320,
	320, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 335, 335, 336, 336, 337, 337, 338, 338,
	338, 338, 339, 339, 339, 339, 339, 340, 340, 340,
	340, 340, 340, 340, 341, 341, 342, 342, 2, 298,
	298, 299, 299, 300, 300, 300, 300, 301, 301, 302,
	302, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 24, 211, 211, 319, 319, 319, 313, 313, 313,
	315, 315, 314, 314, 314, 316, 316, 321, 321, 321,
	321, 321, 323, 323, 323, 323, 323, 323, 324, 324,
	324, 322, 322, 48, 48, 49, 49, 49, 156, 156,
	156, 13, 13, 13, 13, 13, 19, 21, 21, 37,
	37, 38, 22, 22, 22, 22, 39, 39, 40, 25,
	25, 25, 25, 25, 25, 46, 46, 46, 45, 45,
	44, 44, 44, 44, 44, 44, 23, 23, 23, 23,
	47, 47, 42, 42, 41, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 26, 26, 26,
	26, 26, 26, 18, 297, 297, 297, 36, 36, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 52,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 260,
	260, 261, 250, 250, 250, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 229, 229, 229, 229, 233,
	233, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 232, 232, 232, 232, 232, 232, 232, 232, 234,
	234, 234, 234, 234, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 236,
	236, 236, 236, 236, 236, 236, 236, 259, 259, 237,
	237, 253, 253, 254, 254, 254, 251, 251, 252, 252,
	240, 241, 255, 242, 242, 242, 243, 243, 243, 244,
	244, 249, 249, 248, 248, 248, 248, 248, 248, 245,
	245, 245, 245, 246, 246, 247, 258, 258, 258, 258,
	258, 238, 35, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 284, 284, 204, 204, 205,
	205, 262, 262, 282, 282, 281, 281, 280, 280, 280,
	271, 271, 277, 277, 277, 277, 277, 277, 277, 277,
	266, 266, 266, 265, 265, 267, 267, 270, 270, 279,
	279, 278, 278, 263, 263, 263, 285, 285, 285, 285,
	285, 264, 264, 264, 264, 286, 268, 268, 269, 269,
	269, 291, 292, 290, 290, 290, 290, 290, 119, 119,
	119, 274, 274, 274, 275, 275, 275, 276, 276, 276,
	295, 295, 294, 294, 50, 51, 55, 55, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 155, 155, 155, 209, 209, 289,
	287, 287, 288, 288, 15, 15, 53, 53, 318, 318,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 293,
	293, 293, 17, 17, 56, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	84, 196, 196, 195, 195, 194, 194, 194, 197, 197,
	197, 227, 227, 227, 58, 58, 62, 62, 65, 65,
	65, 63, 64, 27, 28, 28, 28, 28, 29, 210,
	210, 60, 60, 61, 61, 61, 61, 76, 76, 348,
	348, 59, 349, 67, 68, 68, 69, 69, 69, 200,
	200, 73, 73, 73, 71, 71, 71, 72, 72, 78,
	78, 82, 82, 82, 82, 81, 81, 81, 81, 158,
	158, 163, 220, 220, 139, 139, 159, 159, 164, 164,
	164, 165, 165, 166, 166, 166, 166, 166, 161, 161,
	160, 160, 162, 127, 127, 218, 218, 218, 217, 217,
	217, 217, 86, 86, 89, 89, 91, 91, 91, 91,
	91, 94, 141, 141, 112, 112, 113, 113, 113, 113,
	113, 125, 125, 176, 176, 175, 175, 178, 178, 90,
	92, 92, 92, 92, 97, 97, 98, 98, 99, 99,
	208, 208, 225, 225, 225, 103, 103, 103, 105, 104,
	104, 104, 104, 106, 106, 107, 107, 109, 110, 110,
	108, 108, 114, 114, 111, 115, 115, 115, 115, 116,
	116, 83, 83, 83, 83, 83, 83, 83, 193, 193,
	118, 118, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 135, 135, 135, 135, 135, 135, 120, 120,
	120, 120, 120, 120, 120, 77, 77, 136, 136, 136,
	96, 95, 95, 80, 80, 79, 79, 137, 137, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 130, 130, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 347, 347, 132, 131, 131, 131, 131, 131,
	131, 74, 74, 74, 74, 74, 226, 226, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 148, 148, 75, 75, 146, 146, 147, 149, 149,
	145, 145, 145, 122, 122, 122, 122, 122, 122, 122,
	122, 124, 124, 124, 150, 150, 138, 138, 85, 151,
	151, 152, 153, 153, 154, 154, 157, 170, 170, 170,
	171, 171, 171, 171, 126, 126, 172, 172, 172, 121,
	121, 121, 121, 121, 121, 121, 174, 174, 173, 173,
	173, 173, 179, 179, 140, 140, 143, 143, 142, 144,
	180, 180, 184, 184, 181, 181, 185, 185, 185, 185,
	188, 188, 189, 189, 189, 186, 186, 186, 183, 183,
	183, 222, 222, 222, 191, 191, 201, 201, 198, 198,
	199, 199, 192, 192, 239, 239, 207, 207, 206, 206,
	206, 202, 202, 202, 203, 203, 219, 219, 215, 215,
	221, 221, 216, 216, 223, 223, 224, 224, 296, 296,
	256, 256, 306, 306, 257, 257, 307, 307, 309, 309,
	304, 304, 305, 305, 308, 308, 30, 310, 310, 311,
	311, 312, 312, 312, 312, 31, 32, 32, 32, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 344, 345,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 8, 10, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 0, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 0, 1, 1, 0, 2, 3, 2, 2,
	2, 2, 2, 6, 8, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	2, 3, 1, 0, 3, 3, 0, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 4, 4, 4, 4, 4, 2, 1, 2, 1,
	2, 2, 3, 2, 2, 2, 2, 1, 1, 1,
	1, 3, 2, 1, 1, 0, 3, 1, 1, 0,
	1, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 2, 4, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 0, 2, 1, 5, 1, 3, 5, 4,
	3, 5, 3, 8, 10, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 8, 2, 2, 0, 1, 2, 0, 1, 7,
	1, 3, 8, 8, 3, 3, 3, 5, 3, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 2, 2, 2, 6, 2, 4,
	4, 4, 5, 8, 6, 3, 5, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 1, 1, 2, 1, 1, 1, 2, 4,
	4, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	2, 6, 0, 1, 0, 3, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 0, 2,
	1, 3, 3, 1, 3, 0, 1, 2, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	1, 2, 2, 4, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -343, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 295, -65, 298, 299, -348, -210, 223, 224, 20,
	37, 300, 302, 31, 32, 190, 240, 242, 267, -5,
	-88, -6, 8, 394, 139, 296, 171, 170, 26, 443,
	-344, 68, 510, -153, 15, -67, -349, -67, -67, -67,
	-67, -67, -272, -208, 106, 68, 23, -203, 150, 87,
	385, 146, -211, 236, 238, -201, -202, 200, 210, 44,
	157, 156, 147, 236, 147, 148, 150, 385, 146, 183,
	182, 236, 238, 147, -108, -223, 72, -213, 160, 454,
	261, 440, 505, 248, 197, 295, 309, 311, 303, 338,
	326, 441, 455, 161, 218, 145, 294, 324, 327, 371,
	159, 251, 211, 274, 456, 360, 366, 221, 298, 380,
	457, 162, 215, 217, 216, 205, 222, 36, 172, 322,
	257, 315, 226, 200, 458, 448, 194, 313, 28, 195,
	193, 383, 459, 285, 368, 343, 286, 260, 460, 445,
	255, 367, 318, 314, 267, 163, 157, 287, 461, 344,
	348, 462, 372, 241, 288, 463, 464, 465, 149, 247,
	307, 308, 466, 201, 374, 252, 342, 33, 158, 442,
	48, 180, 375, 38, 346, 37, 352, 467, 284, 341,
	336, 353, 468, 469, 470, 471, 265, 263, 264, 266,
	340, 306, 335, 213, 53, 144, 350, 349, 351, 214,
	370, 331, 329, 472, 473, 256, 164, 474, 475, 316,
	18, 476, 477, 378, 175, 258, 259, 42, 478, 479,
	480, 110, 481, 482, 483, 369, 345, 347, 199, 114,
	319, 154, 484, 262, 365, 271, 444, 245, 111, 376,
	312, 486, 290, 302, 179, 174, 379, 280, 487, 224,
	488, 489, 490, 166, 491, 239, 238, 299, 272, 112,
	300, 362, 219, 492, 493, 494, 495, 209, 192, 382,
	373, 52, 223, 357, 496, 275, 291, 305, 156, 225,
	497, 249, 296, 43, 7, 212, 253, 363, 273, 220,
	210, 333, 181, 498, 499, 320, 321, 339, 304, 334,
	297, 184, 176, 109, 381, 358, 446, 236, 292, 328,
	325, 187, 332, 500, 150, 501, 188, 301, 377, 250,
	323, 359, 147, 131, 327, 371, 138, 361, 362, 368,
	-266, 369, 182, 185, -227, 147, -196, 360, 241, 262,
	415, 188, 189, 148, 149, 33, 373, 372, 364, -223,
	151, 301, -76, 142, 177, -108, -47, 72, 225, -47,
	30, 72, 72, 36, 72, 300, 363, 363, 75, 444,
	191, 21, -335, -316, 271, -334, -314, 139, 138, 10,
	140, 276, 277, 278, 148, 8, 31, 485, 165, 279,
	280, 6, 169, 281, 282, 183, 9, 283, -319, 74,
	72, -213, 21, -335, -316, 271, -205, -204, 293, 352,
	6, -69, 5, -192, 152, 297, -87, 453, -93, -225,
	-223, -214, 74, 254, 168, 244, 355, 411, 412, 413,
	414, 191, 415, 428, 410, 429, 97, 189, 276, 277,
	268, 278, 167, 430, 115, 198, 177, 233, 364, 232,
	237, 416, 417, 431, 432, 433, 418, 419, 243, 434,
	435, 508, 246, 509, 269, 437, 485, 438, 279, 436,
	281, 186, 422, 421, 420, 423, 282, 405, 406, 424,
	51, 426, 425, 427, 81, -3, -171, 17, 16, -73,
	54, 55, -68, -81, 122, -83, -223, -117, 89, -123,
	29, 72, -213, 24, -122, -214, -118, -145, -144, -96,
	131, 132, 133, 120, 121, 128, 90, 134, -130, -128,
	-129, -131, -133, -134, 74, 73, 82, 75, 76, 77,
	78, 83, 411, 412, 413, 414, 415, 428, 429, 167,
	430, 177, 416, 417, 431, 432, 433, 418, 419, 434,
	435, 437, 438, 436, 422, 421, 420, 423, 405, 406,
	424, 426, 425, 427, 84, 85, -215, -142, -344, 58,
	59, 146, 395, 396, 397, 398, 399, 439, 403, 92,
	47, 384, 393, 392, 391, 389, 390, 386, 388, 387,
	153, 385, 126, 394, -192, -192, 11, -100, -101, -108,
	-111, -223, -181, 297, -188, -185, 372, 373, -186, -189,
	-183, -145, 352, 482, 483, 371, 327, 370, -215, -223,
	-2, -5, 6, -108, -273, -261, -264, -216, 162, -286,
	-215, -212, 159, 72, -213, 254, 143, 168, 139, 88,
	447, 23, 25, 244, 355, 411, 91, 131, 412, 413,
	414, 16, 20, 92, 130, 81, 395, 191, 415, 138,
	62, 410, 386, 388, 384, 385, 361, 29, 10, 26,
	170, 204, 22, 124, 140, 95, 96, 97, 189, 173,
	276, 277, 24, 171, 268, 85, 278, 167, 115, 198,
	19, 65, 177, 233, 11, 364, 185, 504, 240, 13,
	409, 113, 232, 14, 237, 153, 152, 108, 202, 148,
	60, 8, 134, 27, 105, 56, 416, 417, 450, 45,
	190, 451, 58, 106, 17, 389, 390, 31, 439, 418,
	178, 452, 419, 126, 207, 63, 50, 243, 89, 83,
	508, 34, 86, 66, 289, 87, 15, 203, 61, 407,
	246, 509, 269, 182, 485, 206, 453, 165, 107, 279,
	141, 394, 270, 242, 59, 146, 6, 404, 30, 169,
	281, 208, 186, 422, 421, 420, 423, 506, 57, 397,
	398, 424, 282, 502, 147, 94, 405, 406, 151, 183,
	84, 5, 44, 32, 9, 283, 64, 67, 391, 392,
	393, 47, 51, 426, 425, 427, 507, 93, 12, 408,
	443, 148, -108, 394, -199, 153, -199, 183, 182, -199,
	-199, 147, 98, -53, -108, -318, -313, -319, -198, 153,
	-215, -198, -198, -198, -198, -198, -198, -198, -108, 135,
	-108, 72, 30, -197, 106, 12, 385, 146, 147, 182,
	183, 150, -268, 11, 108, 186, 186, 186, 187, 186,
	-195, 363, 365, 184, 366, 367, 12, -84, 106, 19,
	-344, -171, -171, 72, 300, 151, -61, -3, -11, -9,
	-10, -3, 98, -125, 23, 30, 30, 74, 51, 30,
	-42, -41, -43, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 30, -297, 68, -256, 352,
	72, -310, -311, -108, 75, 75, 66, 66, 69, 151,
	69, 66, -336, 272, 68, -336, 238, 272, 273, 210,
	236, 150, -336, -336, 238, -336, -336, -336, -336, -336,
	363, -336, -336, -336, 274, 275, -336, 361, 150, -336,
	-336, -336, -336, -336, 71, 66, 69, 262, 66, 11,
	66, -283, 131, 285, 286, 287, 288, 284, 262, 289,
	290, 291, 186, 292, -67, -7, -5, -344, 21, 22,
	147, 376, 69, -87, -174, -344, -345, 70, -172, 19,
	31, -126, 75, 78, -154, -157, -83, -223, 50, -71,
	21, 22, 80, 11, -218, 88, 87, 105, -217, 23,
	72, -213, -214, 74, 135, -83, -120, 108, 89, 106,
	107, 91, 117, 116, 127, 120, 121, 122, 123, 124,
	125, 126, 118, 119, 130, 98, 99, 100, 101, 102,
	103, 104, -193, -344, -96, -344, 136, 137, -123, -123,
	-123, -123, -123, -123, -123, -123, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -3,
	-137, -83, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, -344, -148, -83, -344, -347, -132, -344, -347,
	-132, -347, -132, -347, -344, -347, -132, -347, -132, -347,
	-347, -132, -347, -344, -344, -344, -344, -110, 27, -108,
	-86, -89, -91, -92, -112, -95, -344, -90, -108, -96,
	72, -108, -100, -346, 69, 11, 67, -346, 69, 135,
	69, -182, -187, 374, 376, 297, -186, -186, -222, -215,
	74, 29, 98, 30, 135, -153, -67, 70, 69, -264,
	162, 159, -229, -233, -235, -234, -236, -231, -232, 324,
	327, 331, 329, 325, 330, 131, 328, 333, 334, 335,
	336, 337, 338, 339, 340, 341, 342, 343, 30, 172,
	320, 321, 322, 323, 344, 345, 346, 347, 348, 349,
	350, 351, 303, 326, 441, 304, 305, 306, 307, 308,
	309, 311, 312, 313, 314, 315, 316, 317, 318, 72,
	-214, -286, 68, -215, 23, 150, 72, 89, 72, -107,
	-215, -223, -114, -215, -223, -322, -321, -313, -316, -199,
	72, 69, 151, 69, 151, 71, -100, 24, 66, -102,
	-108, 72, 72, -107, -114, -315, -313, -316, -224, -223,
	-212, -197, 74, -83, -199, -199, -108, -108, -108, -108,
	-108, -197, -197, -197, -197, -194, 11, 108, 11, -194,
	-194, -83, -123, -313, 387, 122, 72, 72, 300, 72,
	34, -42, -42, 74, -42, 69, 98, -42, 70, -137,
	-296, 503, 69, -312, 23, 376, 377, 353, -338, 147,
	185, 182, -338, -334, 280, -315, -314, -313, -336, -337,
	-215, -336, -336, -336, 363, -336, -336, -336, -336, -336,
	-336, -336, -336, -319, -338, 240, 69, -338, -315, -313,
	284, 284, 284, 284, 284, 284, -73, -3, -108, 377,
	378, -93, 23, -173, -216, 9, 108, 69, 18, 69,
	-170, 25, 26, 135, -124, 51, 75, 78, -200, 49,
	-108, -83, -83, -135, 83, 89, 84, 85, -217, 122,
	-224, -216, -212, -123, -136, -142, -96, 79, 108, 106,
	107, 91, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -226, 72, 74,
	72, -122, -122, -215, -71, -79, -82, 122, -83, -223,
	-79, -79, -71, -345, -345, -79, -82, -79, -79, -79,
	-79, -82, -79, -71, -71, -79, -345, -345, -345, -345,
	-79, -79, -79, -79, -215, -215, -71, -79, -79, -79,
	-71, -345, 69, -345, -3, -79, -79, -345, -83, -83,
	-145, 74, -79, -145, 74, -79, -123, 400, 401, 402,
	-79, -71, -146, -147, 93, -145, -345, -123, -79, -80,
	-79, -79, -79, -177, 110, -108, 30, 69, -103, -105,
	-104, -106, 56, 60, 62, 57, 58, 59, 63, -208,
	-86, -94, 47, -344, -113, 110, -115, 23, -225, 64,
	152, 65, -344, -177, 67, -86, -108, -86, -111, -223,
	122, -185, -188, 69, 375, 377, 378, -182, -243, 130,
	66, 86, -83, -216, -224, -171, -73, -274, -275, -276,
	-216, 74, 75, -261, -262, -263, -264, -277, 162, -285,
	154, 156, 157, 44, -265, 163, 148, 45, -230, -251,
	358, -237, 68, -237, -237, 332, 324, 327, 325, -237,
	-237, -237, -237, -237, -242, 327, -242, -242, -242, -242,
	325, 68, 68, -237, -237, -237, -253, 68, -253, 319,
	-254, 68, -254, -254, -254, -254, -286, -286, -83, -219,
	67, -167, -108, -249, -248, -245, -246, -247, -244, 29,
	24, -249, -48, 197, 168, 135, 68, 135, -317, 69,
	29, -323, 237, -108, -108, -108, -313, -313, -319, -293,
	166, 161, -108, 69, 69, 72, 72, -125, -269, 11,
	108, -197, -223, -223, -108, -125, -197, -77, 173, 67,
	-347, -345, 72, -123, -41, -122, 70, -109, 27, 74,
	-311, -225, 352, 377, -339, 122, -215, -339, -342, 443,
	151, 70, 69, -336, -339, 258, 240, -339, 11, -284,
	19, -71, -345, -55, -54, 143, 140, 141, 144, 145,
	-289, 355, 139, 194, 193, 179, -95, -344, -345, 69,
	135, 52, -126, -126, -157, -191, 19, 11, 47, 47,
	-72, 57, 83, 84, 85, 135, -344, -136, -123, -123,
	-123, -77, 88, -345, -79, 69, -345, 135, -345, -345,
	-79, -158, 407, -158, -345, -345, -345, -345, -345, -345,
	-345, -345, -79, -79, -345, -158, -158, -158, -158, -345,
	-345, -345, -345, 69, 69, -79, -345, -345, -345, -80,
	-83, -345, -345, -345, 69, 67, 23, 11, 11, -345,
	11, 11, -345, -345, 11, -123, -123, -123, -345, -79,
	-149, -147, 95, -83, -345, -345, -345, -345, -345, -345,
	-121, 30, 47, -344, -3, -344, -180, -184, -145, -212,
	-89, -91, -91, -89, -91, 56, 56, 56, 61, 56,
	61, 56, -104, -225, -345, -345, -141, 196, -344, 34,
	-225, -115, 148, 148, 148, -80, -116, 12, -86, -116,
	-116, 135, -187, -190, 379, 376, 382, 72, 74, 135,
	-172, 69, -276, 98, -264, 68, 72, -270, -214, 45,
	-265, 148, 45, -267, -265, -265, -270, 72, -270, 45,
	83, 89, -240, -241, -255, -258, -238, 23, 504, 29,
	66, 355, 154, 45, 44, 157, 81, -252, 359, 75,
	-242, -242, -237, -237, -237, 332, -237, -242, -243, 30,
	-243, -243, -243, -243, -242, -259, 74, -259, 75, -253,
	75, 70, 66, -215, -169, 23, -246, -245, -247, 327,
	371, 130, 383, -49, 8, 9, 10, -215, -298, -299,
	-300, 72, 108, 202, 203, -215, -326, 270, -321, 238,
	247, 88, 16, 443, 151, 151, -108, -313, -116, 72,
	72, -194, -197, -123, -316, 188, 189, -177, 147, -312,
	151, 135, 135, 151, 261, -315, -215, 11, 11, 258,
	11, -315, 294, -200, 69, -209, -265, -295, -263, -264,
	-294, 155, 162, 163, -209, 162, 159, -265, 163, 154,
	155, -206, -265, 151, 23, -209, -209, -271, 98, -209,
	33, 33, 110, -216, -216, 53, -108, -78, -168, 122,
	-216, -80, -77, 88, -123, -345, -82, -159, -158, 122,
	-224, -159, -159, -345, -215, -163, -344, -158, -159, -159,
	-158, -158, -158, -345, -345, -158, -159, -159, -159, -159,
	-123, -123, -345, -159, -159, -159, -345, -228, 131, 324,
	172, 322, 315, 342, 329, 357, 320, 358, -226, -228,
	-123, -123, -123, -123, -123, 11, 11, 11, 440, -153,
	97, -83, 94, -179, 66, -180, -140, -143, -142, -344,
	-3, -345, -173, 6, 443, -178, -215, -116, 69, 98,
	98, -98, -97, 66, 67, -99, 66, -97, 56, 56,
	-176, 68, 69, -142, -344, -178, -123, -115, -344, -344,
	-344, -345, -153, -83, -116, 376, 380, 381, -275, -276,
	-279, -278, -215, -214, 154, -285, 44, -285, -270, -270,
	-270, 68, 83, -344, 505, -123, 9, 45, 45, 45,
	74, 70, -243, -243, -242, -237, -243, 72, 131, -243,
	70, 69, 70, 69, 70, 69, -119, 459, 89, -108,
	-3, -167, 30, -271, -271, -271, 66, 70, 69, -229,
	72, 72, 72, -329, 443, 243, -327, -325, 249, 250,
	251, 252, 253, -316, 248, -323, 245, 74, 72, -108,
	-313, -125, -242, -108, -315, 122, 122, -215, -315, 258,
	-341, 443, -315, -315, 11, -315, 74, -72, -54, 68,
	-260, 72, -214, -270, -202, 154, 72, 72, 72, -214,
	72, -214, -215, 45, 45, 72, -108, -215, -260, 72,
	-83, -215, -215, 135, -116, 11, 69, -81, -345, -123,
	-159, 135, -159, -220, 72, -159, -159, 69, 69, -159,
	-345, -237, -237, -237, -254, -237, 308, -237, 308, -345,
	-345, 19, 19, 19, 19, -345, -123, -123, -123, -344,
	-75, 404, -83, 28, -179, 69, -345, -345, 47, -345,
	-345, 69, -153, -184, -83, -83, -83, 68, -83, -175,
	-215, 196, -345, -115, -208, -175, -175, -175, -171, 70,
	69, -237, -237, 45, -267, -175, -123, 23, -129, 405,
	406, -243, -242, 74, -242, 75, 75, 459, 68, -167,
	-169, -271, 72, 131, 72, 131, 74, -108, -301, -302,
	-303, 81, 442, 89, 204, 205, 164, 206, 207, 208,
	-300, -229, -229, -229, -332, -333, -331, 246, 268, 269,
	254, -330, -328, 263, 264, 265, 266, 88, 74, 74,
	74, -324, 237, 88, 246, 16, 23, -197, -304, -195,
	-341, -341, 240, -315, -78, -260, -155, 167, 168, -229,
	-229, -219, -267, 45, 72, -207, 151, 23, 151, -155,
	-260, 30, 140, 27, -216, -150, 13, -86, -168, -168,
	122, -139, 110, -123, -123, -242, 72, -123, -123, -123,
	-123, -345, -345, -345, -123, -345, 74, 45, -143, -140,
	47, -3, -344, -215, -171, -175, 70, 69, -142, -113,
	-225, -345, -345, -345, -281, -280, 67, 158, 81, -278,
	-170, -170, -270, 70, -345, -344, -243, -243, 70, 70,
	-279, -3, 72, 131, 19, -168, -303, 74, 208, 204,
	208, 208, 208, 208, 209, -320, 81, 244, -331, 255,
	464, 239, 270, 75, 75, 109, 31, 32, -328, 75,
	75, 75, 75, -325, 16, 443, -323, 245, 74, 74,
	-305, 38, -307, 39, -340, 23, -340, 258, 11, 70,
	72, -230, -230, 68, -270, 68, 72, -215, -155, 29,
	29, -344, -151, 14, 16, -116, -81, -153, 16, -345,
	-345, -345, -345, -345, -345, -74, 108, 443, 9, -140,
	-3, 70, -215, -115, -280, 72, -271, 74, 165, -250,
	507, 506, -123, 70, -167, 195, -169, 36, 36, 200,
	201, 74, 74, 29, 256, 134, 29, 75, 134, 410,
	245, 74, 72, 246, -239, 152, -308, 43, -306, -257,
	42, 16, -313, -86, -279, -219, -279, -123, -287, -288,
	110, -161, 408, -152, -83, -138, -85, -83, -150, -168,
	-164, 112, 111, -137, -345, 441, 63, 444, -180, -345,
	75, -108, -345, -282, -281, 196, -20, -3, -9, -10,
	-11, -12, -14, -50, -15, -16, -21, -22, -17, -56,
	-57, -65, -63, -64, -60, -59, -25, -23, -26, -18,
	-27, -28, -29, -33, -34, -24, -35, 92, 153, 226,
	295, 75, 29, 75, 29, 259, 246, 23, -176, 75,
	-307, 16, -309, 40, 41, 74, 443, -116, 70, 68,
	70, -345, 69, -215, -160, -162, -215, 69, -151, -345,
	-165, 91, -166, 109, 410, -127, 75, 134, -165, 53,
	442, 445, 68, -250, -156, 198, 199, -167, -83, -83,
	72, -46, -221, 229, 230, 231, -216, -36, -20, 257,
	257, 74, 38, 74, 16, 16, 238, -150, -282, -279,
	-282, -288, 47, 69, 23, -85, -161, -166, 114, 115,
	196, 114, 115, -122, 53, -175, -167, 72, 72, -37,
	-38, 93, 94, 227, 228, 232, -229, 69, 510, 74,
	74, 29, 243, 21, -316, -151, 70, 180, -162, -163,
	88, -215, 443, 70, -169, 97, 95, -38, -83, -36,
	19, 19, 19, 29, -216, 97, -20, 260, -161, -282,
	181, -166, 444, -291, -292, 66, -13, -19, -12, -9,
	-10, -11, 295, 92, -36, 94, 510, -47, 75, -3,
	-45, -44, 75, -47, 234, 89, 235, 72, -123, -316,
	-344, 445, -292, 66, -291, 66, 10, 9, -167, -36,
	510, -36, 97, 95, -39, -40, 96, -20, 69, 233,
	-123, 178, -290, 166, 161, 164, 30, -290, 510, 97,
	510, 153, -36, 97, 95, -40, -83, -44, -345, -345,
	160, 29, 83, 97, 92, 510, 153, -36, 94, 97,
	510, -36, 153, 97, 510, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 732, 732, 732, 732,
	732, 732, 830, -2, 594, 0, 0, 0, 0, -2,
	705, 706, 707, 711, 712, 727, 729, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 40,
	0, 0, 56, 57, 1142, 0, 730, 719, 720, 0,
	0, 1681, 2, 1080, 0, 741, 734, 0, 1142, 1142,
	0, 0, 88, 0, 0, 0, 831, 0, 0, 0,
	1140, 1140, 0, 1140, 1140, 0, 1155, 0, 1137, 1151,
	1152, 1153, 0, 0, 1138, 0, 1138, 1138, 1138, 1138,
	1138, 1138, 1138, 0, 653, 850, 1164, 1165, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 0, 0, 0, 698, 0, 664, 665, 666,
	0, 668, 0, 0, 0, 0, 0, 678, 681, 685,
	0, 1080, 1080, 540, 541, 542, 702, 703, 692, 704,
	0, 0, 0, 0, 0, 811, 306, 308, 0, 328,
	0, 331, 334, 1170, 713, 0, 0, 1195, 1196, 0,
	0, 0, 0, 0, 1532, 182, 245, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 0, 184, 184, 184,
	1544, 184, 0, 184, 184, 184, 184, 184, 244, 234,
	235, 236, 0, 0, 0, 1532, 0, 520, 517, 518,
	732, 0, 736, 0, 1143, 708, 45, 0, 47, 1096,
	832, 833, 834, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 0, 1086, 0, 0, 744,
	742, 743, 733, 0, 755, 785, 0, 861, 0, 866,
	868, -2, -2, 0, 909, 910, 911, 912, 913, 914,
	0, 0, 0, 0, 0, 0, 0, 0, 938, 939,
	940, 941, 942, 943, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1623, 1624, 1625, 1626, 1628, 1629, 1631, 1638,
	1639, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655,
	1656, 1661, 1663, 1665, 1668, 1669, 1670, 1671, 1673, 1674,
	1675, 1677, 1678, 1679, 870, 871, 1050, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1041,
	0, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 67,
	69, 850, 73, 1597, 0, 1114, -2, -2, 1116, 0,
	0, 0, -2, -2, -2, -2, 1395, -2, 1050, 0,
	89, 1072, 732, 90, 0, 371, 372, 0, 1408, 564,
	1162, 1163, 1397, 1158, 1159, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1140, 0, 634, 0, 635, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 652, 0,
	654, 655, 698, 657, 0, 0, 1140, 1140, 0, 0,
	0, 0, 0, 566, 567, 698, 698, 698, 698, 695,
	0, 695, 675, 695, 693, 694, 0, 680, 0, 0,
	0, 688, 689, 714, 0, 0, 721, 723, 724, 725,
	726, 722, 0, 731, 0, 0, 0, 310, 0, 0,
	330, 312, 0, 315, 316, 317, 318, 319, 320, 321,
	322, 323, 324, 325, 326, 0, 333, 0, 1168, 1171,
	718, 1186, 1187, 0, 1197, 1198, 188, 188, 0, 0,
	0, 0, 151, 184, 0, 153, 184, 184, 184, 0,
	184, 184, 160, 161, 184, 163, 164, 165, 166, 167,
	184, 169, 170, 171, 184, 184, 174, 184, 184, 177,
	178, 179, 180, 181, 243, 188, 0, 0, 188, 0,
	0, 502, 0, 0, 0, 0, 507, 508, 509, 510,
	0, 0, 513, 514, 741, 42, 52, 0, 737, 738,
	0, 0, 0, 46, 0, 0, 51, 1682, 37, 0,
	0, 1081, 1084, 1085, 1073, 1074, 1077, 0, 0, 739,
	745, 746, 735, 0, 756, 0, 0, 0, 786, 0,
	788, 789, 790, 791, 0, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 889, 890, 891, 892,
	893, 894, 867, 0, 881, 0, 0, 0, 930, 931,
	932, 933, 934, 935, 936, 0, 744, 0, 0, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 0, 0, 744, 0,
	0, 907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 1042, 0, 995, 1004, 0, 996,
	1005, 997, 1006, 998, 0, 999, 1007, 1000, 1008, 1001,
	1002, 1009, 1003, 0, 903, 0, 0, 71, 0, 849,
	0, 792, 794, 795, 796, -2, 0, 800, 855, 901,
	1164, -2, 0, 0, 0, 63, 64, 0, 0, 0,
	0, 74, 76, 0, 0, 1597, 1117, 1118, 476, 1131,
	1132, 1133, 0, 1129, 0, 1080, 741, 581, 0, 373,
	0, 0, 385, 466, 396, 397, 398, 459, 400, 459,
	459, 0, 459, 459, 459, 459, 459, 473, 473, 473,
	473, 473, 442, 443, 444, 445, 446, 0, 0, 419,
	459, 459, 459, 423, 449, 450, 451, 452, 453, 454,
	455, 456, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 461, 461, 463, 463, 463, 463, 463, 0,
	0, 563, 0, 1156, 85, 0, -2, 0, -2, 0,
	845, 0, 0, 852, 0, 100, 261, 247, 99, 0,
	233, 0, 0, 0, 0, 238, 649, 1139, 0, 642,
	65, 643, 644, 645, 646, 647, 240, 648, 851, 1166,
	1167, 656, 699, 700, 0, 0, 811, 661, 662, 663,
	568, 669, 670, 671, 677, 698, 0, 0, 0, 811,
	698, 679, 895, 682, 1012, 0, 716, 715, 0, 728,
	0, 307, 309, 311, 329, 0, 0, 332, 335, 0,
	0, 0, 0, 1189, 0, 1191, 1193, 0, 0, 189,
	190, 191, 0, 183, 0, 206, 246, 0, 152, 0,
	186, 154, 155, 156, 184, 158, 159, 162, 168, 172,
	173, 175, 176, 242, 0, 0, 0, 0, 149, 0,
	503, 504, 505, 506, 515, 512, 744, 0, 0, 709,
	710, 48, 0, 0, 1098, 1087, 0, 0, 0, 0,
	1076, 1078, 1079, 0, 0, 1061, 0, 0, 747, 740,
	39, 862, 863, 865, 882, 0, 884, 886, 787, 757,
	0, 1051, -2, 872, 873, 897, 898, 899, 0, 0,
	0, 0, 895, 877, 0, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 929, 1026, 1027,
	0, 927, 928, 937, 0, 0, 905, 751, 752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	903, 900, 0, 1108, 0, 0, 0, 977, 0, 0,
	912, 1053, 0, 912, 1053, 0, 0, 0, 0, 0,
	0, 0, 1048, 1045, 0, 0, 1013, 0, 0, 0,
	904, 0, 0, 0, 0, 848, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 1518, 806, 0, 855, 0,
	0, 0, 903, 859, 0, 859, 68, 859, 70, 0,
	854, 1115, 0, 0, 0, 79, 80, 75, 1119, 0,
	1125, 1126, 1127, 1051, 0, 1086, 744, 370, 582, 584,
	587, 588, 589, 374, 376, 377, 378, 0, -2, 555,
	1528, 1575, -2, -2, 547, 1442, -2, -2, 381, 468,
	467, 399, 0, 473, 473, 459, 459, 459, 459, 428,
	473, 431, 434, 435, 476, 0, 476, 476, 476, 476,
	473, 0, 0, 420, 421, 422, 411, 0, 412, 461,
	414, 0, 415, 416, 417, 418, 561, 562, 0, 0,
	0, 87, 0, 94, -2, 483, 484, 485, 0, 480,
	1141, 95, 0, 263, 264, 0, 209, 0, 102, 0,
	0, 248, 0, 369, 0, 636, 0, 638, 237, 640,
	650, 651, 641, 0, 0, 658, 659, 660, 859, 0,
	0, 672, 696, 697, 695, 698, 676, 690, 0, 0,
	683, 0, 717, 812, 313, 314, 336, 71, 0, 1169,
	1188, 0, 1192, 1194, 0, 192, 194, 0, 143, 0,
	0, 185, 0, 157, 0, 0, 0, 0, 0, 511,
	0, 739, 53, 595, 596, -2, 627, 1148, 627, 627,
	613, 530, 627, 0, 0, 0, 49, 0, 1097, 0,
	0, 0, 1082, 1083, 1075, 0, 1134, 1135, 1062, 1063,
	86, 748, 883, 885, 887, 0, 903, 874, 895, 878,
	0, 875, 0, 869, 0, 0, 766, 0, 766, 766,
	0, 963, 0, 964, 991, 0, 976, 766, 766, 0,
	0, 0, 0, 0, 0, 970, 971, 972, 973, 766,
	766, 766, 766, 0, 0, 0, 766, 766, 766, 0,
	908, -2, 974, 975, 0, 0, 0, 0, 0, 1019,
	0, 0, 1020, 985, 0, 0, 0, 0, 0, 1072,
	0, 1046, 0, 0, 994, 1014, 1015, 1016, 1017, 1018,
	1102, 0, 0, 0, 1091, 0, 859, 1110, 0, 0,
	793, 826, 828, 0, 823, 836, 837, 839, 0, 841,
	0, 843, 844, 813, 799, 902, 801, 0, 0, 0,
	855, 810, 0, 0, 0, 0, 1072, 0, 859, 61,
	62, 0, 77, 78, 0, 0, 84, 477, 478, 0,
	208, 0, 585, 0, 375, 0, 548, 0, 0, 532,
	547, 543, 544, 547, 546, 547, 538, 548, 539, 0,
	386, 0, 388, 389, 390, 391, 392, 0, 0, 0,
	0, 472, 0, 497, 499, 0, 0, 395, 469, 0,
	476, 476, 473, 426, 427, 459, 432, 476, 436, 0,
	437, 438, 439, 440, 476, 0, 457, 0, 0, 413,
	0, 578, 0, 1157, 0, 85, 486, 487, 488, 0,
	530, 530, 530, 0, 265, 266, 267, 846, 0, 210,
	211, 0, 0, 0, 0, 853, 112, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 66, 241, 667, 569,
	570, 811, 674, 896, 684, 686, 687, 473, 0, 1190,
	0, 0, 0, 0, 0, 204, 187, 0, 0, 0,
	0, 150, 0, 747, 0, 0, 547, 0, 614, 615,
	0, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 1150, 0, 0, 0, 531, 0,
	622, 623, 0, 1100, 1099, 1088, 38, 859, 0, 758,
	1052, 0, 876, 0, 879, 766, 906, 948, 767, 753,
	0, 949, 950, 766, 759, 760, 762, 965, 952, 953,
	966, 967, 968, 766, 766, 969, 957, 956, 955, 958,
	0, 0, 766, 961, 960, 962, 944, 0, 459, 459,
	1031, 459, 463, 1034, 459, 1036, 459, 1039, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1043,
	993, 1049, 0, 54, 0, 1102, 1089, 1104, 1106, 0,
	0, 0, 0, -2, 1374, 0, 817, 1072, 0, 0,
	0, 820, 827, 0, 0, 821, 0, 822, 840, 842,
	797, 0, 0, 802, 0, 0, -2, 809, 0, 0,
	0, 819, 1080, 860, 60, 81, 82, 83, 583, 586,
	0, 549, 459, 459, 0, 553, 545, 554, 534, 535,
	537, 0, 387, 0, 0, 470, 0, 496, 498, 500,
	501, 460, 424, 425, 476, 433, 429, 474, 475, 441,
	473, 0, 473, 0, 464, 0, 565, 579, 0, 0,
	85, 87, 530, 0, 0, 0, 0, 217, 0, 213,
	0, 0, 0, 120, 0, 103, 104, 105, 107, 108,
	0, 0, 0, 101, 0, 250, 0, 253, 254, 637,
	639, 698, 1180, 847, 204, 193, 195, 196, 204, 207,
	144, 0, 145, 147, 0, 146, 516, 86, 597, 0,
	624, 0, 0, 1156, 545, 0, -2, 600, 605, 606,
	607, 608, 609, 0, 620, 0, 602, 0, 624, 0,
	617, 0, 0, 0, 1064, 0, 86, 86, 945, 880,
	947, 0, 951, 764, 763, 946, 954, 0, 0, 959,
	978, 1028, 473, 1032, 1033, 1035, 1037, 1038, 1040, 980,
	979, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 1047, 0, 55, 0, 1107, -2, 0, 0,
	72, 0, 1080, 1111, 1112, 1113, 824, 0, 829, 0,
	815, 0, 855, 807, 0, 0, 0, 0, 59, 522,
	0, 1077, 1077, 533, 547, 0, 0, 0, 471, 0,
	0, 430, 476, 458, 476, 0, 0, 580, 0, 92,
	0, 0, 491, 492, 493, 494, 495, 0, 86, 218,
	219, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	212, 214, 215, 216, 138, 121, 122, 0, 0, 0,
	0, 113, 114, 0, 0, 0, 0, 0, 109, 110,
	111, 249, 0, 0, 252, 0, 0, 673, 1182, 1176,
	197, 197, 0, 148, 0, 0, 599, 625, 0, 385,
	385, 0, 547, 0, 616, 0, 1146, 1147, 0, 611,
	624, 0, 0, 0, 1101, 1069, 0, 859, 0, 749,
	754, 1072, 0, 0, 0, 1029, 1030, 0, 0, 0,
	0, 987, 988, 989, 1021, 992, 1044, 0, 1105, 1090,
	0, 1094, 0, 818, 58, 0, 814, 0, 803, 805,
	855, 856, 857, 858, 521, 525, 0, 530, 0, 550,
	551, 552, 536, 0, 382, 0, 447, 448, 462, 465,
	0, 85, 489, 490, 0, 87, 220, 221, 222, 223,
	225, 226, 0, 0, 0, 98, 0, 0, 123, 0,
	0, 0, 0, 133, 134, 135, 136, 137, 115, 116,
	117, 118, 119, 106, 0, 0, 251, 0, 256, 257,
	1144, 1184, -2, 0, 141, 0, 142, 205, 0, 598,
	626, 379, 380, 0, 1156, 0, 601, 610, 612, 0,
	619, 0, 778, 0, 0, 1064, 86, 768, 0, 1010,
	1011, 981, 983, 982, 984, 0, 0, 0, 0, 1093,
	0, 825, 816, 808, 526, 527, 0, 529, 0, 393,
	383, 384, 0, 523, 93, 0, 0, 227, 228, 229,
	230, 139, 140, 124, 125, 0, 127, 128, 0, 0,
	0, 259, 0, 255, 813, 0, 1176, 0, 1178, 0,
	1175, 0, 198, 859, 0, 0, 0, 618, 0, 630,
	0, 43, 0, 1070, 1071, 1065, 1066, 1068, 1069, 750,
	0, 0, 0, 765, 990, 0, 0, 0, 1103, -2,
	528, 0, 382, 91, 524, 268, 85, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 368, 0, 0, 0,
	0, 0, 129, 0, 131, 132, 258, 0, 36, 0,
	1183, 0, 1181, 0, 0, 1177, 0, 1064, 523, 0,
	523, 629, 0, 0, 779, 780, 0, 0, 778, 761,
	769, 0, 772, 0, 0, 0, 783, 0, 770, 1022,
	0, 1025, 0, 394, 85, 0, 0, 97, 0, 0,
	1158, 0, 0, 295, 296, 297, 1160, 0, 337, 126,
	130, 260, 1145, 1185, 0, 0, 0, 1069, 603, 0,
	621, 631, 0, 0, 0, 1067, 44, 0, 773, 774,
	775, 776, 777, 0, 1023, 0, 87, 269, 270, 0,
	279, 0, 0, 0, 0, 0, 293, 0, 0, 1179,
	1173, 199, 200, 201, 203, 778, 523, 0, 781, 782,
	0, 784, 0, 556, 0, 0, 0, 280, 0, 0,
	0, 0, 0, 0, 1161, 231, 338, 0, 41, 604,
	0, 771, 0, 557, 558, 0, 85, 271, 272, 273,
	274, 275, 0, 277, 0, 0, 0, 289, 290, 291,
	0, 298, 300, 301, 302, 0, 304, 305, 294, 202,
	0, 1024, 559, 0, 560, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 286, 0, 292, 0, 303,
	0, 0, 571, 573, 574, 0, 0, 572, 0, 0,
	281, 282, 0, 0, 0, 287, 0, 299, 632, 633,
	575, 576, 577, 276, 278, 0, 284, 0, 0, 0,
	0, 0, 283, 0, 288, 285,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 510,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:503
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:507
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:549
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:555
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:561
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:574
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:585
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:592
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:598
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:605
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:614
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:654
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:660
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:672
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:694
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:700
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:704
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:708
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:712
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:732
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:736
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:751
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:755
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:765
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:772
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:785
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:791
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:822
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:827
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:832
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:857
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[7].selStmt, SpecialCommentMode: yyDollar[6].boolean, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[8].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:865
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[9].selStmt, SpecialCommentMode: yyDollar[8].boolean, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[10].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:869
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:877
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 96:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:885
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:889
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:893
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:921
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:930
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:948
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:975
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:989
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:999
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1048
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1052
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1060
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1064
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1089
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1104
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1117
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1123
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1128
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1132
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1136
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1144
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1174
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1194
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.strs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1338
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantAssumption = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1372
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1381
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1400
		{
			yyVAL.procedureParams = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1437
		{
			yyVAL.characteristics = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1465
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1477
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1493
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1499
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1564
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1600
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1604
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1608
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1626
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1630
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1634
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1640
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1648
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1658
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = BeforeStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = AfterStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = InsertStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = UpdateStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = DeleteStr
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1687
		{
			yyVAL.triggerOrder = nil
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1711
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1717
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 278:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1721
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1737
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1743
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 283:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1748
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1753
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 285:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1759
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1791
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1803
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1828
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1872
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1882
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1892
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &Resignal{}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.exprs = nil
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2044
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2060
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2087
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = ColumnType{}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2213
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2222
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.sqlVal = nil
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2529
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2547
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2564
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.boolean = false
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.boolean = true
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2626
		{
			yyVAL.charsetCollates = nil
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2648
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2662
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2666
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2670
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2674
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2680
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2684
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2690
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.colKeyOpt = colKey
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = yyDollar[1].str
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2800
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2805
		{
			yyVAL.indexOptions = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2819
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2834
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2854
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2866
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2883
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = yyDollar[1].str
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 556:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2965
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 557:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2969
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 558:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2973
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 559:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2977
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 560:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2981
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3005
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3067
		{
			yyVAL.boolean = true
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.boolean = true
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3075
		{
			yyVAL.boolean = false
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3080
		{
			yyVAL.str = ""
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = yyDollar[1].str
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = string("")
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3145
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3168
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3175
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3182
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3186
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3195
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 604:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3199
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3208
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3218
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3227
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3231
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3238
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3260
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3269
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3273
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3281
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3296
		{
			yyVAL.columnOrder = nil
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3309
		{
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
		}
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3315
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3331
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3335
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3355
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3367
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3373
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3385
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3409
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3417
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3425
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3433
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3442
		{

		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3460
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3476
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3484
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3492
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3497
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3501
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3521
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3529
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 673:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3545
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3550
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3563
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3571
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3589
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3598
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3611
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3625
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3631
		{
			yyVAL.boolean = false
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.boolean = true
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.showFilter = nil
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = SessionStr
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = GlobalStr
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3693
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Begin{}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.statement = &Begin{}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.statement = &Commit{}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3733
		{
			yyVAL.statement = &Rollback{}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3749
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3757
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3773
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			setAllowComments(yylex, true)
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.bytes2 = nil
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = UnionStr
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = UnionAllStr
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = UnionDistinctStr
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.byt = 0
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.byt = 1
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = SQLCacheStr
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = DistinctStr
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = StraightJoinHint
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3898
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3921
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3931
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3939
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3945
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3949
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3955
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3968
		{
			yyVAL.exprs = nil
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.over = nil
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.over = yyDollar[1].over
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3986
		{
			yyVAL.frame = nil
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3994
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4001
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.window = nil
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4069
		{
			yyVAL.window = yyDollar[2].window
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4084
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4110
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4152
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4196
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4211
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4215
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.expr = nil
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4238
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.columns = nil
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4247
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4267
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4273
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4286
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4290
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4306
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4318
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4321
		{
			yyVAL.empty = struct{}{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = JoinStr
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = JoinStr
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = JoinStr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = StraightJoinStr
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = LeftJoinStr
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = LeftJoinStr
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = RightJoinStr
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = RightJoinStr
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = NaturalJoinStr
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4406
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4420
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4441
		{
			yyVAL.indexHints = nil
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4445
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4449
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4453
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4458
		{
			yyVAL.expr = nil
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4462
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = IsNullStr
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = IsNotNullStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = IsTrueStr
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = IsNotTrueStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = IsFalseStr
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = IsNotFalseStr
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.str = EqualStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.str = LessThanStr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = GreaterThanStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = LessEqualStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.str = GreaterEqualStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = NotEqualStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4615
		{
			yyVAL.expr = nil
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.selectExprs = nil
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4676
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4738
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4746
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4750
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4754
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 982:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 983:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 984:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 989:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 990:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5060
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5074
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5085
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5126
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1011:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5177
		{
			yyVAL.str = ""
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.str = BooleanModeStr
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5185
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5217
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5239
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5264
		{
			yyVAL.expr = nil
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5268
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = string("")
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5283
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5287
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5293
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = nil
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5308
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5312
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5316
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = &NullVal{}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
			yyVAL.exprs = nil
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5373
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5383
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5394
		{
			yyVAL.expr = nil
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5398
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5404
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5409
		{
			yyVAL.orderBy = nil
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5423
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5429
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = AscScr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = AscScr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = DescScr
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5447
		{
			yyVAL.limit = nil
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5451
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5455
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5459
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = ForUpdateStr
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = ShareModeStr
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5495
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5499
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5512
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5516
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5520
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5526
		{
			yyVAL.columns = nil
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5536
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5544
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5548
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5553
		{
			yyVAL.assignExprs = nil
		}
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5557
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5583
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5603
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5609
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5612
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5622
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5639
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5652
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5665
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5710
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = &Default{}
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5734
		{
			yyVAL.byt = 0
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.byt = 1
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			yyVAL.byt = 0
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5741
		{
			yyVAL.byt = 1
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			yyVAL.byt = 0
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yyVAL.byt = 1
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = IgnoreStr
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5754
		{
			yyVAL.sqlVal = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5756
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.empty = struct{}{}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.empty = struct{}{}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5765
		{
			yyVAL.empty = struct{}{}
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5767
		{
			yyVAL.empty = struct{}{}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.empty = struct{}{}
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = UniqueStr
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5775
		{
			yyVAL.str = FulltextStr
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = SpatialStr
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5780
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5785
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5787
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5791
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5795
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5801
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5834
		{
			yyVAL.str = string("")
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5839
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5844
		{
			yyVAL.EnclosedBy = nil
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5848
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5853
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5857
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5862
		{
			yyVAL.sqlVal = nil
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5871
		{
			yyVAL.sqlVal = nil
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5880
		{
			yyVAL.Fields = nil
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5884
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5889
		{
			yyVAL.Lines = nil
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5893
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5898
		{
			yyVAL.sqlVal = nil
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5908
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5918
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5924
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5928
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5934
		{
			yyVAL.lockType = LockRead
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5938
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.lockType = LockWrite
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5946
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5952
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5958
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6485
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
