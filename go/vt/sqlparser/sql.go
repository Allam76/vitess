// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:57
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	optLike               *OptLike
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	140, 870,
	-2, 130,
	-1, 44,
	181, 471,
	182, 471,
	-2, 459,
	-1, 51,
	1, 1257,
	424, 1257,
	-2, 491,
	-1, 372,
	126, 878,
	-2, 874,
	-1, 373,
	126, 879,
	-2, 875,
	-1, 474,
	96, 1180,
	126, 1180,
	-2, 71,
	-1, 475,
	96, 1089,
	126, 1089,
	-2, 72,
	-1, 480,
	96, 1049,
	126, 1049,
	-2, 837,
	-1, 482,
	96, 1124,
	126, 1124,
	-2, 839,
	-1, 687,
	5, 35,
	-2, 485,
	-1, 691,
	5, 35,
	-2, 484,
	-1, 913,
	1, 543,
	5, 543,
	12, 543,
	13, 543,
	14, 543,
	15, 543,
	17, 543,
	19, 543,
	30, 543,
	31, 543,
	55, 543,
	56, 543,
	57, 543,
	58, 543,
	59, 543,
	61, 543,
	62, 543,
	65, 543,
	66, 543,
	68, 543,
	69, 543,
	424, 543,
	-2, 570,
	-1, 916,
	66, 52,
	68, 52,
	-2, 56,
	-1, 1109,
	126, 881,
	-2, 877,
	-1, 1351,
	67, 398,
	70, 398,
	-2, 362,
	-1, 1400,
	5, 36,
	-2, 636,
	-1, 1460,
	5, 35,
	-2, 814,
	-1, 1554,
	5, 35,
	-2, 73,
	-1, 1698,
	1, 591,
	5, 591,
	12, 591,
	13, 591,
	14, 591,
	15, 591,
	17, 591,
	19, 591,
	30, 591,
	31, 591,
	55, 591,
	56, 591,
	57, 591,
	58, 591,
	59, 591,
	61, 591,
	62, 591,
	65, 591,
	66, 591,
	68, 591,
	69, 591,
	424, 591,
	-2, 570,
	-1, 1814,
	5, 36,
	-2, 815,
	-1, 1844,
	5, 35,
	-2, 73,
	-1, 1902,
	5, 35,
	-2, 817,
	-1, 1942,
	41, 888,
	-2, 886,
	-1, 1986,
	5, 35,
	-2, 105,
	-1, 2046,
	5, 36,
	-2, 818,
	-1, 2109,
	424, 183,
	-2, 35,
}

const yyPrivate = 57344

const yyLast = 22395

var yyAct = [...]int{
	406, 60, 2108, 2174, 2142, 2117, 2115, 2152, 2143, 1985,
	1315, 2112, 7, 2111, 6, 2110, 5, 1232, 2037, 1609,
	2050, 2116, 24, 2028, 2083, 1942, 1771, 71, 2114, 1916,
	377, 470, 1880, 1848, 1711, 1313, 1225, 2107, 1257, 1712,
	335, 1606, 1865, 1227, 1223, 1084, 1679, 405, 1678, 1509,
	2051, 351, 838, 485, 1562, 672, 1675, 942, 1266, 390,
	1219, 60, 1308, 93, 1685, 1256, 1626, 1689, 1134, 1583,
	1584, 1341, 1202, 375, 356, 1827, 1263, 1170, 1303, 1270,
	1033, 1147, 1040, 1051, 1251, 1162, 1546, 710, 910, 1210,
	2113, 8, 1221, 336, 337, 519, 1019, 340, 1111, 716,
	928, 517, 929, 468, 905, 760, 360, 491, 465, 473,
	918, 854, 476, 2195, 1291, 2191, 2181, 2164, 2154, 855,
	2146, 2137, 1487, 2086, 70, 1069, 1849, 909, 2156, 75,
	2076, 2141, 2043, 2126, 1851, 1772, 2075, 1643, 370, 1429,
	1799, 490, 1706, 1496, 1165, 930, 1495, 931, 751, 1497,
	1245, 2109, 3, 1707, 1708, 1246, 1247, 675, 676, 364,
	77, 78, 79, 80, 81, 656, 347, 339, 349, 338,
	1966, 803, 802, 812, 813, 805, 806, 807, 808, 809,
	810, 811, 804, 2042, 419, 814, 425, 427, 426, 423,
	424, 422, 421, 420, 674, 684, 701, 1529, 493, 1277,
	496, 428, 429, 1854, 1611, 1279, 1279, 1283, 1285, 1297,
	1284, 1292, 345, 1292, 29, 1278, 61, 32, 33, 103,
	99, 100, 95, 101, 1304, 1790, 1887, 379, 1788, 350,
	1939, 1660, 342, 655, 659, 1938, 1937, 661, 1936, 1935,
	1933, 1852, 1853, 1855, 1856, 1857, 1934, 1322, 1627, 2013,
	2014, 1563, 2052, 2080, 2081, 1984, 105, 104, 682, 61,
	32, 33, 29, 88, 61, 32, 33, 1075, 1613, 668,
	657, 660, 667, 658, 1321, 68, 1072, 669, 670, 1074,
	2140, 34, 495, 494, 2125, 2029, 34, 1564, 1608, 1203,
	1629, 1982, 683, 1612, 677, 332, 1866, 1867, 678, 675,
	676, 1271, 2187, 348, 2196, 1588, 2193, 2016, 516, 1917,
	516, 516, 1076, 72, 2182, 2165, 90, 92, 516, 1073,
	87, 492, 1919, 68, 516, 501, 97, 96, 349, 1875,
	1567, 333, 60, 60, 1009, 1000, 1486, 1485, 1484, 488,
	704, 304, 98, 688, 1974, 690, 2008, 689, 2178, 2149,
	2153, 2148, 1874, 826, 827, 1374, 1631, 60, 1373, 1817,
	1500, 1635, 1492, 1630, 1389, 1628, 1082, 937, 94, 1252,
	1633, 718, 823, 1565, 1566, 825, 95, 1241, 924, 693,
	694, 102, 747, 1632, 764, 1536, 1282, 1273, 794, 511,
	814, 1306, 1079, 1918, 1041, 654, 1634, 1636, 1292, 804,
	1850, 2009, 814, 1331, 665, 836, 1047, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 1967, 853,
	856, 856, 856, 862, 856, 856, 862, 856, 862, 871,
	872, 873, 874, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 1362, 914, 2118, 1273, 1035, 57, 1804,
	2118, 2176, 1873, 2041, 2177, 84, 2175, 1361, 89, 759,
	97, 96, 1272, 687, 691, 1228, 1230, 749, 1163, 1042,
	702, 1510, 29, 1730, 61, 32, 33, 1607, 1332, 666,
	1410, 1955, 476, 926, 1645, 709, 679, 29, 748, 61,
	32, 33, 85, 1407, 516, 516, 34, 62, 1366, 828,
	829, 830, 831, 832, 833, 834, 835, 1360, 1346, 932,
	1603, 34, 857, 859, 861, 863, 865, 867, 868, 870,
	858, 860, 1273, 864, 866, 1731, 869, 1521, 692, 758,
	757, 2180, 1273, 68, 497, 2084, 908, 2134, 837, 1034,
	62, 1272, 1526, 1525, 1002, 62, 1229, 759, 68, 706,
	486, 707, 1118, 917, 708, 27, 2008, 922, 1358, 1352,
	1353, 2194, 1351, 1522, 1354, 1355, 1718, 1116, 1117, 1115,
	1163, 2008, 1418, 754, 758, 757, 2190, 1527, 681, 1519,
	2060, 2184, 824, 2188, 484, 1520, 366, 1021, 68, 1010,
	757, 29, 759, 61, 32, 33, 826, 827, 1114, 1364,
	1367, 29, 2048, 61, 32, 33, 2123, 759, 1842, 826,
	827, 2009, 1841, 1085, 1086, 34, 1551, 1272, 758, 757,
	2168, 2153, 2167, 1592, 1588, 34, 2009, 1272, 1589, 355,
	1602, 1596, 1598, 1549, 1599, 2189, 759, 516, 516, 516,
	1135, 2084, 1136, 2104, 1524, 2103, 1530, 1498, 1593, 1499,
	516, 516, 68, 805, 806, 807, 808, 809, 810, 811,
	804, 2122, 68, 814, 807, 808, 809, 810, 811, 804,
	1359, 913, 814, 758, 757, 2008, 758, 757, 57, 2089,
	2118, 2066, 1273, 2136, 1981, 2008, 516, 1386, 1387, 1388,
	2171, 759, 1932, 57, 759, 2118, 1357, 1894, 1839, 500,
	889, 890, 891, 892, 893, 877, 878, 879, 894, 895,
	880, 881, 882, 888, 896, 883, 884, 885, 886, 887,
	899, 898, 897, 900, 901, 903, 902, 904, 1081, 1036,
	2009, 1723, 1067, 1101, 1103, 1104, 346, 1043, 1363, 1102,
	2009, 1547, 1024, 1025, 1087, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1349, 1343, 764,
	1659, 1405, 1333, 1404, 758, 757, 1523, 2102, 1065, 2101,
	29, 2085, 61, 32, 33, 62, 1979, 1272, 1080, 1088,
	758, 757, 759, 1592, 1588, 1365, 1269, 1273, 1589, 1406,
	62, 1590, 1591, 1949, 34, 758, 757, 57, 759, 2118,
	1045, 505, 506, 507, 508, 509, 60, 57, 1593, 2118,
	758, 757, 486, 759, 1510, 462, 463, 1647, 1946, 1753,
	486, 840, 486, 1911, 2127, 1112, 697, 1092, 759, 1833,
	2124, 68, 1871, 1911, 2121, 925, 1090, 812, 813, 805,
	806, 807, 808, 809, 810, 811, 804, 1105, 696, 814,
	1093, 758, 757, 1094, 2008, 2070, 703, 1152, 1155, 2163,
	1220, 1833, 2067, 703, 1164, 1911, 2032, 1833, 1983, 759,
	1109, 1107, 1774, 1089, 1911, 1975, 1108, 1911, 1922, 1944,
	1138, 1139, 1272, 1911, 703, 1833, 1832, 1926, 1267, 1768,
	1268, 1819, 703, 1925, 62, 1222, 1265, 1271, 1764, 914,
	1228, 1230, 1761, 914, 62, 1759, 1816, 703, 72, 2009,
	1758, 1748, 1747, 1746, 1574, 1110, 1738, 1737, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1734, 1735, 1743, 476, 1734, 1733, 713,
	717, 1176, 1573, 1178, 803, 802, 812, 813, 805, 806,
	807, 808, 809, 810, 811, 804, 795, 837, 814, 1401,
	703, 1143, 1142, 1144, 1505, 1141, 1207, 703, 1149, 1234,
	1143, 1347, 1145, 1329, 1261, 1166, 57, 1328, 2118, 1160,
	1137, 1229, 516, 1049, 516, 1143, 703, 29, 1018, 1017,
	1016, 1236, 1015, 839, 1007, 1238, 1005, 1004, 1003, 1001,
	1021, 513, 1174, 1175, 852, 1113, 343, 1239, 1243, 1181,
	1182, 1183, 1184, 1109, 1254, 1242, 1724, 1185, 1186, 1253,
	1274, 1258, 1190, 940, 939, 1193, 2073, 1812, 1901, 1488,
	1198, 72, 395, 394, 397, 398, 399, 400, 1310, 1311,
	1312, 396, 401, 1235, 1676, 919, 837, 925, 68, 29,
	1488, 1305, 1307, 1293, 1294, 1295, 1296, 803, 802, 812,
	813, 805, 806, 807, 808, 809, 810, 811, 804, 1206,
	1622, 814, 920, 62, 1954, 1207, 1212, 1215, 1216, 1217,
	1213, 718, 1214, 1218, 1401, 1207, 1690, 1691, 1744, 1390,
	1617, 803, 802, 812, 813, 805, 806, 807, 808, 809,
	810, 811, 804, 1736, 1340, 814, 925, 1207, 1501, 1244,
	68, 1096, 1401, 1423, 1422, 1342, 1345, 920, 1327, 919,
	1083, 1008, 913, 68, 357, 2078, 913, 921, 1610, 923,
	913, 802, 812, 813, 805, 806, 807, 808, 809, 810,
	811, 804, 2068, 1112, 814, 1280, 1281, 1401, 1286, 1287,
	1288, 1289, 1290, 1348, 29, 2059, 1379, 1947, 1109, 1254,
	1882, 1843, 1279, 1378, 1108, 1822, 1300, 1301, 1302, 1309,
	1717, 1395, 921, 1314, 919, 1690, 1691, 1883, 1458, 1304,
	1504, 1323, 1299, 1461, 1462, 68, 373, 1298, 914, 914,
	914, 914, 914, 699, 1391, 1459, 2160, 2158, 2144, 1398,
	1742, 1693, 1676, 1222, 1552, 1480, 1212, 1215, 1216, 1217,
	1213, 1048, 1214, 1218, 1012, 68, 914, 476, 1464, 1474,
	1472, 1696, 1695, 1471, 1475, 1473, 1470, 1417, 1476, 110,
	1216, 1217, 110, 361, 362, 1392, 1393, 1394, 110, 2098,
	2074, 1614, 1375, 1478, 1483, 2095, 1384, 1383, 752, 753,
	1482, 1899, 1763, 1512, 1722, 1721, 1506, 2018, 2021, 2065,
	2064, 1943, 1397, 2088, 1941, 2012, 1044, 110, 2011, 344,
	1400, 1402, 110, 1403, 110, 1502, 750, 1466, 1467, 1409,
	1469, 1577, 1412, 1413, 1414, 110, 839, 504, 1477, 1420,
	1540, 1421, 938, 110, 1424, 1425, 60, 1426, 1427, 711,
	1511, 1431, 1432, 1433, 1434, 1435, 695, 516, 1489, 516,
	516, 712, 1442, 1443, 1444, 1465, 1446, 1447, 1468, 1449,
	1450, 1451, 1452, 1113, 1454, 1455, 1456, 1493, 1507, 1508,
	514, 1810, 1085, 1086, 1460, 1878, 1318, 1011, 1258, 1490,
	1555, 1491, 752, 753, 1098, 1099, 1479, 1337, 1220, 999,
	358, 359, 1929, 352, 1145, 1382, 1539, 2091, 1541, 1542,
	1543, 1544, 2090, 1381, 2062, 1550, 1548, 2022, 1960, 1898,
	353, 1582, 72, 1959, 1885, 1531, 1532, 1488, 1557, 1558,
	1559, 2161, 1538, 2162, 2161, 2162, 1428, 1430, 1411, 1408,
	1039, 755, 1545, 1436, 1437, 1438, 1439, 1576, 1575, 1971,
	1580, 1581, 1594, 1595, 1604, 1605, 1720, 1078, 1587, 1579,
	1651, 1585, 1597, 1601, 74, 913, 913, 913, 913, 913,
	2000, 47, 76, 1644, 2002, 19, 50, 839, 2001, 18,
	913, 1150, 1151, 1572, 2003, 20, 2004, 21, 1999, 15,
	1681, 69, 60, 913, 1621, 1998, 14, 1554, 1620, 1992,
	10, 2006, 25, 1638, 1637, 1997, 13, 1994, 12, 1171,
	1, 1578, 1862, 1625, 1847, 1700, 1701, 1702, 1846, 476,
	1677, 1619, 1993, 11, 1991, 9, 1561, 1560, 1533, 1534,
	1535, 1537, 698, 2063, 2019, 2017, 1940, 1680, 1068, 1586,
	1773, 110, 1879, 1356, 504, 1703, 504, 504, 2027, 1699,
	1264, 1255, 83, 483, 504, 82, 1330, 664, 1869, 312,
	504, 1262, 1517, 700, 1516, 1623, 1694, 1513, 1528, 1250,
	1276, 1515, 1710, 1624, 1514, 1697, 1639, 1640, 2015, 1641,
	1642, 1518, 946, 944, 110, 945, 943, 1715, 1716, 948,
	947, 1648, 1649, 1275, 1714, 1740, 1741, 1709, 316, 471,
	933, 756, 91, 763, 51, 1872, 1600, 1350, 86, 1046,
	673, 318, 822, 1380, 1494, 1657, 1658, 1687, 477, 2058,
	1663, 1683, 2079, 1666, 715, 2033, 1958, 1884, 1671, 1416,
	851, 1161, 1619, 1258, 378, 1258, 2036, 1100, 393, 392,
	391, 388, 1705, 1682, 389, 1336, 1725, 1726, 914, 1091,
	1698, 1745, 1457, 1729, 796, 1755, 376, 368, 912, 1211,
	1732, 1209, 1208, 1013, 466, 1756, 1760, 1754, 1692, 1688,
	911, 1616, 1334, 680, 1797, 404, 2020, 331, 1727, 1798,
	1757, 1965, 1095, 31, 73, 363, 1750, 26, 1767, 17,
	1719, 686, 22, 1652, 1653, 1654, 1655, 1656, 16, 110,
	110, 110, 498, 35, 39, 38, 37, 1556, 1320, 1803,
	341, 1052, 1050, 2150, 504, 2082, 2056, 1376, 1377, 2007,
	717, 110, 23, 2128, 1786, 504, 1752, 4, 354, 28,
	2, 0, 0, 110, 0, 0, 0, 110, 0, 0,
	1779, 0, 110, 0, 0, 1820, 1751, 0, 110, 0,
	504, 504, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 1811, 1825, 0, 0, 0, 1778,
	0, 0, 60, 0, 0, 0, 502, 0, 1502, 515,
	1399, 0, 1728, 0, 0, 1831, 0, 0, 0, 1826,
	0, 1781, 0, 0, 0, 1780, 0, 0, 0, 0,
	1419, 1782, 0, 0, 0, 0, 0, 1829, 1830, 0,
	1836, 0, 1791, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1835, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 1859, 1860, 1861, 1864, 1863, 0,
	1876, 1258, 1837, 1681, 0, 0, 1903, 1714, 0, 0,
	0, 0, 1877, 0, 0, 0, 1813, 1814, 1815, 0,
	1818, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 1824, 1783, 1784, 913, 1785, 0, 1838, 1787,
	1840, 1789, 0, 0, 0, 1928, 0, 1930, 0, 1900,
	1680, 0, 0, 504, 504, 504, 110, 110, 110, 1909,
	1910, 110, 1907, 1920, 1881, 0, 504, 504, 1927, 1953,
	1921, 1931, 0, 1915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 1908, 1886,
	0, 0, 1681, 0, 60, 0, 1945, 0, 0, 0,
	0, 110, 504, 0, 0, 0, 110, 1951, 0, 1948,
	1952, 0, 0, 1923, 0, 1924, 0, 0, 0, 1834,
	0, 60, 1888, 1889, 1890, 1891, 1892, 1996, 0, 0,
	1895, 1896, 1989, 1893, 1988, 1978, 1987, 1976, 1897, 1680,
	1972, 1970, 2005, 518, 0, 518, 518, 0, 1956, 1995,
	1980, 0, 110, 518, 0, 0, 0, 1902, 763, 518,
	0, 0, 1912, 0, 1913, 1914, 0, 2035, 2039, 0,
	0, 0, 2024, 0, 2025, 2023, 0, 2030, 0, 0,
	0, 0, 0, 2026, 2031, 0, 2053, 0, 2044, 0,
	0, 0, 476, 2045, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 1996, 0, 0,
	2057, 1990, 1989, 0, 1988, 1646, 1987, 0, 0, 0,
	0, 0, 2005, 1961, 1962, 1963, 1964, 0, 0, 1995,
	1968, 1969, 504, 2061, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 0, 0, 1973, 1881, 1258, 0, 662,
	663, 0, 0, 0, 0, 0, 0, 671, 0, 0,
	0, 0, 0, 685, 0, 0, 0, 0, 504, 504,
	0, 1978, 1986, 0, 0, 0, 60, 60, 2092, 0,
	2100, 2039, 2097, 1996, 2094, 1704, 2120, 0, 1989, 2096,
	1988, 1990, 1987, 2093, 0, 60, 2129, 2105, 2005, 0,
	2040, 0, 2133, 110, 2132, 1995, 2131, 478, 2046, 60,
	0, 110, 110, 934, 0, 110, 110, 0, 0, 110,
	110, 110, 0, 0, 998, 2087, 0, 60, 60, 2145,
	2151, 2155, 2135, 0, 0, 2139, 504, 60, 2159, 2151,
	60, 2157, 0, 0, 2099, 60, 2138, 2151, 2169, 518,
	518, 0, 1986, 0, 0, 60, 2179, 2151, 0, 60,
	0, 0, 2069, 0, 2147, 0, 0, 1990, 0, 0,
	0, 0, 60, 0, 2151, 60, 0, 2166, 0, 2077,
	0, 2130, 60, 0, 2151, 0, 60, 0, 2151, 0,
	0, 0, 0, 0, 0, 0, 2183, 110, 504, 0,
	504, 0, 0, 1769, 0, 110, 110, 0, 0, 110,
	0, 0, 2192, 0, 1661, 1662, 0, 1664, 1665, 0,
	1667, 1668, 1669, 1670, 0, 1672, 1673, 1674, 1986, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 110, 110,
	0, 0, 0, 0, 1800, 110, 0, 0, 0, 0,
	0, 0, 0, 1022, 1023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 110,
	110, 110, 110, 110, 0, 0, 0, 0, 839, 0,
	0, 0, 703, 0, 2172, 0, 0, 1821, 0, 0,
	1823, 0, 518, 518, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 518, 2185, 2186, 0,
	0, 1146, 1148, 0, 0, 0, 1154, 1157, 1158, 1159,
	803, 802, 812, 813, 805, 806, 807, 808, 809, 810,
	811, 804, 0, 0, 814, 0, 1802, 0, 0, 0,
	0, 518, 0, 1169, 0, 1172, 1173, 0, 0, 0,
	1177, 0, 1179, 1180, 0, 0, 0, 0, 0, 0,
	1187, 1188, 1189, 0, 1191, 1192, 0, 1194, 1195, 1196,
	1197, 0, 1199, 1200, 1201, 803, 802, 812, 813, 805,
	806, 807, 808, 809, 810, 811, 804, 0, 1796, 814,
	0, 0, 0, 0, 0, 0, 1026, 1027, 1028, 0,
	0, 110, 0, 0, 110, 110, 110, 110, 110, 1037,
	1038, 0, 0, 0, 0, 1801, 110, 0, 0, 110,
	0, 0, 0, 110, 0, 0, 0, 0, 1805, 1806,
	518, 0, 110, 0, 1807, 0, 0, 1808, 0, 0,
	0, 0, 1809, 0, 0, 1071, 0, 0, 0, 0,
	0, 0, 0, 504, 803, 802, 812, 813, 805, 806,
	807, 808, 809, 810, 811, 804, 0, 0, 814, 0,
	0, 1140, 0, 0, 0, 0, 803, 802, 812, 813,
	805, 806, 807, 808, 809, 810, 811, 804, 0, 478,
	814, 0, 0, 0, 0, 839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1167, 1168, 0,
	0, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 110, 504, 504, 29, 0, 61,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 34, 0, 0, 0, 0, 2034, 2038, 0, 0,
	0, 478, 0, 0, 0, 1385, 0, 29, 30, 61,
	32, 33, 0, 518, 0, 518, 0, 110, 0, 0,
	0, 58, 0, 0, 0, 0, 504, 67, 68, 0,
	0, 34, 54, 55, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 0, 2054, 2055, 0, 0, 0,
	0, 2008, 0, 0, 1795, 0, 2119, 0, 0, 0,
	0, 0, 0, 0, 45, 0, 504, 0, 68, 0,
	1415, 0, 0, 0, 0, 0, 0, 518, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	36, 63, 41, 40, 43, 1440, 1441, 0, 504, 504,
	1445, 0, 0, 1448, 1794, 0, 2009, 0, 1453, 0,
	2038, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 2106, 44, 66, 65, 0, 0, 0, 0, 42,
	36, 63, 41, 40, 43, 0, 56, 504, 504, 0,
	504, 504, 803, 802, 812, 813, 805, 806, 807, 808,
	809, 810, 811, 804, 0, 0, 814, 0, 518, 0,
	0, 0, 44, 66, 65, 0, 0, 52, 53, 42,
	0, 0, 0, 57, 0, 2010, 64, 0, 48, 49,
	326, 1317, 0, 1319, 0, 0, 0, 0, 0, 110,
	2170, 0, 803, 802, 812, 813, 805, 806, 807, 808,
	809, 810, 811, 804, 110, 0, 814, 0, 0, 0,
	0, 0, 0, 57, 0, 46, 64, 323, 48, 49,
	0, 803, 802, 812, 813, 805, 806, 807, 808, 809,
	810, 811, 804, 0, 504, 814, 0, 110, 504, 29,
	0, 61, 32, 33, 0, 504, 0, 0, 504, 504,
	504, 0, 0, 58, 110, 0, 0, 0, 0, 67,
	0, 0, 0, 34, 0, 0, 0, 0, 0, 305,
	62, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 317, 324, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 714,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 2008, 0, 315, 0, 0, 0, 0,
	322, 0, 518, 0, 0, 0, 0, 504, 504, 504,
	0, 0, 108, 0, 0, 330, 504, 0, 0, 0,
	0, 108, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 36, 63, 41, 40, 43, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 915, 367, 2009, 110,
	469, 479, 0, 0, 0, 108, 0, 108, 0, 306,
	1553, 0, 0, 0, 44, 66, 65, 1793, 108, 0,
	0, 42, 518, 0, 518, 518, 108, 0, 0, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 319, 309, 310, 0, 320, 321, 329, 334, 0,
	0, 311, 313, 0, 307, 328, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 2010, 64, 0,
	48, 49, 0, 504, 504, 0, 504, 467, 0, 504,
	0, 110, 487, 110, 489, 518, 0, 0, 0, 0,
	504, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	504, 0, 0, 510, 0, 803, 802, 812, 813, 805,
	806, 807, 808, 809, 810, 811, 804, 0, 0, 814,
	1396, 0, 0, 0, 0, 1650, 1568, 0, 1570, 1571,
	0, 0, 504, 0, 0, 0, 0, 0, 0, 504,
	110, 803, 802, 812, 813, 805, 806, 807, 808, 809,
	810, 811, 804, 0, 478, 814, 0, 1684, 1686, 0,
	0, 0, 62, 0, 0, 0, 0, 0, 504, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 518, 518, 0, 518,
	1713, 0, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 504, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 798, 108, 801, 0, 0, 0, 0,
	0, 504, 815, 816, 817, 818, 819, 820, 821, 110,
	799, 800, 797, 803, 802, 812, 813, 805, 806, 807,
	808, 809, 810, 811, 804, 0, 0, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 504, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 1766, 0, 0,
	0, 512, 0, 0, 1770, 0, 0, 1775, 1776, 1777,
	0, 0, 0, 0, 0, 0, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 108, 108, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 1828, 1828, 1828, 0,
	0, 0, 0, 0, 108, 518, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 108, 0, 0, 0,
	108, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 907,
	0, 916, 0, 0, 0, 0, 0, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1006, 0, 0, 0, 467, 0, 0,
	0, 0, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1904, 1905, 0, 1906, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 0, 0, 0, 0, 0, 0, 1828, 108,
	108, 108, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	518, 518, 0, 0, 0, 0, 1029, 1030, 1031, 0,
	0, 1032, 0, 0, 0, 0, 0, 478, 0, 0,
	2047, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1070, 0, 0, 0, 0, 1077, 0, 0, 0,
	0, 0, 0, 0, 1020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 1828, 0, 0, 0, 0,
	0, 367, 367, 0, 1713, 0, 367, 367, 367, 367,
	0, 0, 0, 479, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 367, 367, 367, 0, 0, 367,
	367, 367, 367, 367, 0, 0, 0, 0, 0, 0,
	367, 367, 367, 0, 367, 367, 0, 367, 367, 367,
	367, 0, 367, 367, 367, 0, 108, 0, 0, 0,
	0, 0, 0, 0, 108, 1231, 0, 0, 108, 108,
	0, 0, 108, 1240, 1020, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1237, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 108, 108,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 1338, 1339, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	0, 0, 108, 108, 108, 108, 108, 1316, 0, 0,
	0, 0, 1020, 0, 0, 1324, 1325, 0, 0, 1326,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 907, 0, 0, 0, 1368,
	1369, 1370, 1371, 1372, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 367, 0, 0, 0,
	367, 0, 0, 367, 0, 0, 0, 0, 367, 0,
	0, 0, 955, 0, 108, 0, 479, 108, 108, 108,
	108, 108, 0, 0, 0, 0, 0, 0, 0, 1231,
	0, 0, 108, 0, 0, 0, 1231, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 982,
	985, 986, 987, 988, 989, 990, 0, 991, 992, 993,
	994, 995, 996, 997, 0, 970, 971, 972, 973, 949,
	953, 983, 950, 956, 952, 954, 951, 108, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 974,
	975, 976, 977, 978, 979, 980, 981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 1231, 0, 1231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 638, 618, 0, 575, 641, 547,
	564, 652, 565, 568, 607, 533, 587, 209, 562, 534,
	0, 551, 524, 558, 525, 548, 577, 149, 546, 620,
	591, 640, 176, 603, 0, 142, 184, 182, 0, 0,
	0, 215, 267, 639, 583, 0, 647, 179, 600, 0,
	258, 196, 0, 0, 579, 627, 585, 616, 574, 609,
	540, 599, 642, 563, 605, 643, 0, 0, 0, 503,
	0, 1259, 1260, 0, 0, 0, 0, 0, 133, 2049,
	602, 637, 560, 604, 606, 522, 601, 0, 528, 535,
	651, 633, 554, 555, 556, 1503, 0, 0, 0, 0,
	0, 0, 578, 586, 613, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 597, 0, 0, 0,
	536, 529, 0, 0, 576, 0, 0, 0, 539, 0,
	553, 614, 0, 520, 157, 0, 0, 617, 632, 573,
	0, 293, 636, 570, 569, 227, 0, 263, 160, 177,
	127, 112, 122, 0, 159, 205, 236, 244, 561, 521,
	621, 549, 559, 143, 557, 238, 213, 284, 0, 594,
	219, 237, 180, 273, 229, 282, 283, 161, 294, 295,
	268, 291, 299, 255, 0, 0, 0, 0, 0, 0,
	173, 572, 608, 550, 140, 611, 598, 626, 254, 128,
	269, 195, 200, 137, 139, 138, 123, 249, 271, 132,
	141, 259, 264, 115, 266, 281, 134, 248, 117, 279,
	262, 193, 170, 171, 116, 0, 234, 148, 156, 145,
	208, 0, 0, 0, 276, 277, 144, 302, 124, 290,
	119, 125, 289, 202, 0, 0, 0, 272, 280, 194,
	187, 0, 118, 278, 192, 186, 175, 152, 163, 224,
	183, 225, 164, 198, 197, 199, 0, 526, 0, 260,
	287, 303, 588, 130, 545, 0, 270, 297, 298, 0,
	0, 131, 155, 151, 223, 201, 126, 166, 257, 174,
	181, 233, 301, 212, 239, 135, 286, 256, 543, 544,
	541, 0, 542, 589, 590, 644, 645, 646, 615, 537,
	0, 628, 629, 0, 619, 634, 635, 610, 653, 566,
	567, 527, 530, 531, 532, 538, 580, 581, 593, 596,
	624, 623, 622, 625, 630, 649, 648, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	111, 120, 178, 300, 231, 154, 288, 523, 147, 0,
	0, 582, 584, 595, 612, 113, 114, 121, 129, 136,
	146, 150, 153, 158, 162, 165, 167, 168, 169, 172,
	185, 188, 189, 190, 191, 203, 204, 206, 207, 210,
	211, 214, 216, 217, 218, 220, 221, 222, 226, 228,
	230, 232, 235, 240, 241, 242, 243, 245, 246, 247,
	250, 251, 252, 253, 261, 265, 274, 275, 285, 292,
	296, 631, 638, 618, 0, 575, 641, 547, 564, 652,
	565, 568, 607, 533, 587, 209, 562, 534, 0, 551,
	524, 558, 525, 548, 577, 149, 546, 620, 591, 640,
	176, 603, 0, 142, 184, 182, 0, 0, 0, 215,
	267, 639, 583, 0, 647, 179, 600, 0, 258, 196,
	0, 0, 579, 627, 585, 616, 574, 609, 540, 599,
	642, 563, 605, 643, 0, 0, 0, 503, 0, 1259,
	1260, 0, 0, 0, 0, 0, 133, 0, 602, 637,
	560, 604, 606, 522, 601, 0, 528, 535, 651, 633,
	554, 555, 556, 0, 0, 0, 0, 0, 0, 0,
	578, 586, 613, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 597, 0, 0, 0, 536, 529,
	0, 0, 576, 0, 0, 0, 539, 0, 553, 614,
	0, 520, 157, 0, 0, 617, 632, 573, 0, 293,
	636, 570, 569, 227, 0, 263, 160, 177, 127, 112,
	122, 0, 159, 205, 236, 244, 561, 521, 621, 549,
	559, 143, 557, 238, 213, 284, 0, 594, 219, 237,
	180, 273, 229, 282, 283, 161, 294, 295, 268, 291,
	299, 255, 0, 0, 0, 0, 0, 0, 173, 572,
	608, 550, 140, 611, 598, 626, 254, 128, 269, 195,
	200, 137, 139, 138, 123, 249, 271, 132, 141, 259,
	264, 115, 266, 281, 134, 248, 117, 279, 262, 193,
	170, 171, 116, 0, 234, 148, 156, 145, 208, 0,
	0, 0, 276, 277, 144, 302, 124, 290, 119, 125,
	289, 202, 0, 0, 0, 272, 280, 194, 187, 0,
	118, 278, 192, 186, 175, 152, 163, 224, 183, 225,
	164, 198, 197, 199, 0, 526, 0, 260, 287, 303,
	588, 130, 545, 0, 270, 297, 298, 0, 0, 131,
	155, 151, 223, 201, 126, 166, 257, 174, 181, 233,
	301, 212, 239, 135, 286, 256, 543, 544, 541, 0,
	542, 589, 590, 644, 645, 646, 615, 537, 0, 628,
	629, 0, 619, 634, 635, 610, 653, 566, 567, 527,
	530, 531, 532, 538, 580, 581, 593, 596, 624, 623,
	622, 625, 630, 649, 648, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 111, 120,
	178, 300, 231, 154, 288, 523, 147, 0, 0, 582,
	584, 595, 612, 113, 114, 121, 129, 136, 146, 150,
	153, 158, 162, 165, 167, 168, 169, 172, 185, 188,
	189, 190, 191, 203, 204, 206, 207, 210, 211, 214,
	216, 217, 218, 220, 221, 222, 226, 228, 230, 232,
	235, 240, 241, 242, 243, 245, 246, 247, 250, 251,
	252, 253, 261, 265, 274, 275, 285, 292, 296, 631,
	638, 618, 0, 575, 641, 547, 564, 652, 565, 568,
	607, 533, 587, 209, 562, 534, 0, 551, 524, 558,
	525, 548, 577, 149, 546, 620, 591, 640, 176, 603,
	0, 142, 184, 182, 0, 0, 0, 215, 267, 639,
	583, 0, 647, 179, 600, 0, 258, 196, 0, 0,
	579, 627, 585, 616, 574, 609, 540, 599, 642, 563,
	605, 643, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 602, 637, 560, 604,
	606, 522, 601, 0, 528, 535, 651, 633, 554, 555,
	556, 0, 0, 0, 0, 0, 0, 0, 578, 586,
	613, 571, 0, 0, 0, 0, 0, 0, 1618, 0,
	552, 0, 597, 0, 0, 0, 536, 529, 0, 0,
	576, 0, 0, 0, 539, 0, 553, 614, 0, 520,
	157, 0, 0, 617, 632, 573, 0, 293, 636, 570,
	569, 227, 0, 263, 160, 177, 127, 112, 122, 0,
	159, 205, 236, 244, 561, 521, 621, 549, 559, 143,
	557, 238, 213, 284, 0, 594, 219, 237, 180, 273,
	229, 282, 283, 161, 294, 295, 268, 291, 299, 255,
	0, 0, 0, 0, 0, 0, 173, 572, 608, 550,
	140, 611, 598, 626, 254, 128, 269, 195, 200, 137,
	139, 138, 123, 249, 271, 132, 141, 259, 264, 115,
	266, 281, 134, 248, 117, 279, 262, 193, 170, 171,
	116, 0, 234, 148, 156, 145, 208, 0, 0, 0,
	276, 277, 144, 302, 124, 290, 119, 125, 289, 202,
	0, 0, 0, 272, 280, 194, 187, 0, 118, 278,
	192, 186, 175, 152, 163, 224, 183, 225, 164, 198,
	197, 199, 0, 526, 0, 260, 287, 303, 588, 130,
	545, 0, 270, 297, 298, 0, 0, 131, 155, 151,
	223, 201, 126, 166, 257, 174, 181, 233, 301, 212,
	239, 135, 286, 256, 543, 544, 541, 0, 542, 589,
	590, 644, 645, 646, 615, 537, 0, 628, 629, 0,
	619, 634, 635, 610, 653, 566, 567, 527, 530, 531,
	532, 538, 580, 581, 593, 596, 624, 623, 622, 625,
	630, 649, 648, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 111, 120, 178, 300,
	231, 154, 288, 523, 147, 0, 0, 582, 584, 595,
	612, 113, 114, 121, 129, 136, 146, 150, 153, 158,
	162, 165, 167, 168, 169, 172, 185, 188, 189, 190,
	191, 203, 204, 206, 207, 210, 211, 214, 216, 217,
	218, 220, 221, 222, 226, 228, 230, 232, 235, 240,
	241, 242, 243, 245, 246, 247, 250, 251, 252, 253,
	261, 265, 274, 275, 285, 292, 296, 631, 638, 618,
	0, 575, 641, 547, 564, 652, 565, 568, 607, 533,
	587, 209, 562, 534, 0, 551, 524, 558, 525, 548,
	577, 149, 546, 620, 591, 640, 176, 603, 0, 142,
	184, 182, 0, 0, 0, 215, 267, 639, 583, 0,
	647, 179, 600, 0, 258, 196, 0, 0, 579, 627,
	585, 616, 574, 609, 540, 599, 642, 563, 605, 643,
	68, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 602, 637, 560, 604, 606, 522,
	601, 0, 528, 535, 651, 633, 554, 555, 556, 0,
	0, 0, 0, 0, 0, 0, 578, 586, 613, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 0,
	597, 0, 0, 0, 536, 529, 0, 0, 576, 0,
	0, 0, 539, 0, 553, 614, 0, 520, 157, 0,
	0, 617, 632, 573, 0, 293, 636, 570, 569, 227,
	0, 263, 160, 177, 127, 112, 122, 0, 159, 205,
	236, 244, 561, 521, 621, 549, 559, 143, 557, 238,
	213, 284, 0, 594, 219, 237, 180, 273, 229, 282,
	283, 161, 294, 295, 268, 291, 299, 255, 0, 0,
	0, 0, 0, 0, 173, 572, 608, 550, 140, 611,
	598, 626, 254, 128, 269, 195, 200, 137, 139, 138,
	123, 249, 271, 132, 141, 259, 264, 115, 266, 281,
	134, 248, 117, 279, 262, 193, 170, 171, 116, 0,
	234, 148, 156, 145, 208, 0, 0, 0, 276, 277,
	144, 302, 124, 290, 119, 125, 289, 202, 0, 0,
	0, 272, 280, 194, 187, 0, 118, 278, 192, 186,
	175, 152, 163, 224, 183, 225, 164, 198, 197, 199,
	0, 526, 0, 260, 287, 303, 588, 130, 545, 0,
	270, 297, 298, 0, 0, 131, 155, 151, 223, 201,
	126, 166, 257, 174, 181, 233, 301, 212, 239, 135,
	286, 256, 543, 544, 541, 0, 542, 589, 590, 644,
	645, 646, 615, 537, 0, 628, 629, 0, 619, 634,
	635, 610, 653, 566, 567, 527, 530, 531, 532, 538,
	580, 581, 593, 596, 624, 623, 622, 625, 630, 649,
	648, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 111, 120, 178, 300, 231, 154,
	288, 523, 147, 0, 0, 582, 584, 595, 612, 113,
	114, 121, 129, 136, 146, 150, 153, 158, 162, 165,
	167, 168, 169, 172, 185, 188, 189, 190, 191, 203,
	204, 206, 207, 210, 211, 214, 216, 217, 218, 220,
	221, 222, 226, 228, 230, 232, 235, 240, 241, 242,
	243, 245, 246, 247, 250, 251, 252, 253, 261, 265,
	274, 275, 285, 292, 296, 631, 638, 618, 0, 575,
	641, 547, 564, 652, 565, 568, 607, 533, 587, 209,
	562, 534, 0, 551, 524, 558, 525, 548, 577, 149,
	546, 620, 591, 640, 176, 603, 0, 142, 184, 182,
	0, 0, 0, 215, 267, 639, 583, 0, 647, 179,
	600, 0, 258, 196, 0, 0, 579, 627, 585, 616,
	574, 609, 540, 599, 642, 563, 605, 643, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 602, 637, 560, 604, 606, 522, 601, 0,
	528, 535, 651, 633, 554, 555, 556, 0, 0, 0,
	0, 0, 0, 0, 578, 586, 613, 571, 0, 0,
	0, 0, 0, 0, 1241, 0, 552, 0, 597, 0,
	0, 0, 536, 529, 0, 0, 576, 0, 0, 0,
	539, 0, 553, 614, 0, 520, 157, 0, 0, 617,
	632, 573, 0, 293, 636, 570, 569, 227, 0, 263,
	160, 177, 127, 112, 122, 0, 159, 205, 236, 244,
	561, 521, 621, 549, 559, 143, 557, 238, 213, 284,
	0, 594, 219, 237, 180, 273, 229, 282, 283, 161,
	294, 295, 268, 291, 299, 255, 0, 0, 0, 0,
	0, 0, 173, 572, 608, 550, 140, 611, 598, 626,
	254, 128, 269, 195, 200, 137, 139, 138, 123, 249,
	271, 132, 141, 259, 264, 115, 266, 281, 134, 248,
	117, 279, 262, 193, 170, 171, 116, 0, 234, 148,
	156, 145, 208, 0, 0, 0, 276, 277, 144, 302,
	124, 290, 119, 125, 289, 202, 0, 0, 0, 272,
	280, 194, 187, 0, 118, 278, 192, 186, 175, 152,
	163, 224, 183, 225, 164, 198, 197, 199, 0, 526,
	0, 260, 287, 303, 588, 130, 545, 0, 270, 297,
	298, 0, 0, 131, 155, 151, 223, 201, 126, 166,
	257, 174, 181, 233, 301, 212, 239, 135, 286, 256,
	543, 544, 541, 0, 542, 589, 590, 644, 645, 646,
	615, 537, 0, 628, 629, 0, 619, 634, 635, 610,
	653, 566, 567, 527, 530, 531, 532, 538, 580, 581,
	593, 596, 624, 623, 622, 625, 630, 649, 648, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 111, 120, 178, 300, 231, 154, 288, 523,
	147, 0, 0, 582, 584, 595, 612, 113, 114, 121,
	129, 136, 146, 150, 153, 158, 162, 165, 167, 168,
	169, 172, 185, 188, 189, 190, 191, 203, 204, 206,
	207, 210, 211, 214, 216, 217, 218, 220, 221, 222,
	226, 228, 230, 232, 235, 240, 241, 242, 243, 245,
	246, 247, 250, 251, 252, 253, 261, 265, 274, 275,
	285, 292, 296, 631, 638, 618, 0, 575, 641, 547,
	564, 652, 565, 568, 607, 533, 587, 209, 562, 534,
	0, 551, 524, 558, 525, 548, 577, 149, 546, 620,
	591, 640, 176, 603, 0, 142, 184, 182, 0, 0,
	0, 215, 267, 639, 583, 0, 647, 179, 600, 0,
	258, 196, 0, 0, 579, 627, 585, 616, 574, 609,
	540, 599, 642, 563, 605, 643, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	602, 637, 560, 604, 606, 522, 601, 0, 528, 535,
	651, 633, 554, 555, 556, 0, 0, 0, 0, 0,
	0, 0, 578, 586, 613, 571, 0, 0, 0, 0,
	0, 0, 1106, 0, 552, 0, 597, 0, 0, 0,
	536, 529, 0, 0, 576, 0, 0, 0, 539, 0,
	553, 614, 0, 520, 157, 0, 0, 617, 632, 573,
	0, 293, 636, 570, 569, 227, 0, 263, 160, 177,
	127, 112, 122, 0, 159, 205, 236, 244, 561, 521,
	621, 549, 559, 143, 557, 238, 213, 284, 0, 594,
	219, 237, 180, 273, 229, 282, 283, 161, 294, 295,
	268, 291, 299, 255, 0, 0, 0, 0, 0, 0,
	173, 572, 608, 550, 140, 611, 598, 626, 254, 128,
	269, 195, 200, 137, 139, 138, 123, 249, 271, 132,
	141, 259, 264, 115, 266, 281, 134, 248, 117, 279,
	262, 193, 170, 171, 116, 0, 234, 148, 156, 145,
	208, 0, 0, 0, 276, 277, 144, 302, 124, 290,
	119, 125, 289, 202, 0, 0, 0, 272, 280, 194,
	187, 0, 118, 278, 192, 186, 175, 152, 163, 224,
	183, 225, 164, 198, 197, 199, 0, 526, 0, 260,
	287, 303, 588, 130, 545, 0, 270, 297, 298, 0,
	0, 131, 155, 151, 223, 201, 126, 166, 257, 174,
	181, 233, 301, 212, 239, 135, 286, 256, 543, 544,
	541, 0, 542, 589, 590, 644, 645, 646, 615, 537,
	0, 628, 629, 0, 619, 634, 635, 610, 653, 566,
	567, 527, 530, 531, 532, 538, 580, 581, 593, 596,
	624, 623, 622, 625, 630, 649, 648, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	111, 120, 178, 300, 231, 154, 288, 523, 147, 0,
	0, 582, 584, 595, 612, 113, 114, 121, 129, 136,
	146, 150, 153, 158, 162, 165, 167, 168, 169, 172,
	185, 188, 189, 190, 191, 203, 204, 206, 207, 210,
	211, 214, 216, 217, 218, 220, 221, 222, 226, 228,
	230, 232, 235, 240, 241, 242, 243, 245, 246, 247,
	250, 251, 252, 253, 261, 265, 274, 275, 285, 292,
	296, 631, 638, 618, 0, 575, 641, 547, 564, 652,
	565, 568, 607, 533, 587, 209, 562, 534, 0, 551,
	524, 558, 525, 548, 577, 149, 546, 620, 591, 640,
	176, 603, 0, 142, 184, 182, 0, 0, 0, 215,
	267, 639, 583, 0, 647, 179, 600, 0, 258, 196,
	0, 0, 579, 627, 585, 616, 574, 609, 540, 599,
	642, 563, 605, 643, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 602, 637,
	560, 604, 606, 522, 601, 0, 528, 535, 651, 633,
	554, 555, 556, 0, 0, 0, 0, 0, 0, 0,
	578, 586, 613, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 597, 0, 0, 0, 536, 529,
	0, 0, 576, 0, 0, 0, 539, 0, 553, 614,
	0, 520, 157, 0, 0, 617, 632, 573, 0, 293,
	636, 570, 569, 227, 0, 263, 160, 177, 127, 112,
	122, 0, 159, 205, 236, 244, 561, 521, 621, 549,
	559, 143, 557, 238, 213, 284, 0, 594, 219, 237,
	180, 273, 229, 282, 283, 161, 294, 295, 268, 291,
	299, 255, 0, 0, 0, 0, 0, 0, 173, 572,
	608, 550, 140, 611, 598, 626, 254, 128, 269, 195,
	200, 137, 139, 138, 123, 249, 271, 132, 141, 259,
	264, 115, 266, 281, 134, 248, 117, 279, 262, 193,
	170, 171, 116, 0, 234, 148, 156, 145, 208, 0,
	0, 0, 276, 277, 144, 302, 124, 290, 119, 125,
	289, 202, 0, 0, 0, 272, 280, 194, 187, 0,
	118, 278, 192, 186, 175, 152, 163, 224, 183, 225,
	164, 198, 197, 199, 0, 526, 0, 260, 287, 303,
	588, 130, 545, 0, 270, 297, 298, 0, 0, 131,
	155, 151, 223, 201, 126, 166, 257, 174, 181, 233,
	301, 212, 239, 135, 286, 256, 543, 544, 541, 0,
	542, 589, 590, 644, 645, 646, 615, 537, 0, 628,
	629, 0, 619, 634, 635, 610, 653, 566, 567, 527,
	530, 531, 532, 538, 580, 581, 593, 596, 624, 623,
	622, 625, 630, 649, 648, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 111, 120,
	178, 300, 231, 154, 288, 523, 147, 0, 0, 582,
	584, 595, 612, 113, 114, 121, 129, 136, 146, 150,
	153, 158, 162, 165, 167, 168, 169, 172, 185, 188,
	189, 190, 191, 203, 204, 206, 207, 210, 211, 214,
	216, 217, 218, 220, 221, 222, 226, 228, 230, 232,
	235, 240, 241, 242, 243, 245, 246, 247, 250, 251,
	252, 253, 261, 265, 274, 275, 285, 292, 296, 631,
	638, 618, 0, 575, 641, 547, 564, 652, 565, 568,
	607, 533, 587, 209, 562, 534, 0, 551, 524, 558,
	525, 548, 577, 149, 546, 620, 591, 640, 176, 603,
	0, 142, 184, 182, 0, 0, 0, 215, 267, 639,
	583, 0, 647, 179, 600, 0, 258, 196, 0, 0,
	579, 627, 585, 616, 574, 609, 540, 599, 642, 563,
	605, 643, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 602, 637, 560, 604,
	606, 522, 601, 0, 528, 535, 651, 633, 554, 555,
	556, 0, 0, 0, 0, 0, 0, 0, 578, 586,
	613, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 597, 0, 0, 0, 536, 529, 0, 0,
	576, 0, 0, 0, 539, 0, 553, 614, 0, 520,
	157, 0, 0, 617, 632, 573, 0, 293, 636, 570,
	569, 227, 0, 263, 160, 177, 127, 112, 122, 0,
	159, 205, 236, 244, 561, 521, 621, 549, 559, 143,
	557, 238, 213, 284, 0, 594, 219, 237, 180, 273,
	229, 282, 283, 161, 294, 295, 268, 291, 299, 255,
	0, 0, 0, 0, 0, 0, 173, 572, 608, 550,
	140, 611, 598, 626, 254, 128, 269, 195, 200, 137,
	139, 138, 123, 249, 271, 132, 141, 259, 264, 115,
	266, 281, 134, 248, 117, 279, 262, 193, 170, 171,
	116, 0, 234, 148, 156, 145, 208, 0, 0, 0,
	276, 277, 144, 302, 124, 290, 119, 125, 289, 202,
	0, 0, 0, 272, 280, 194, 187, 0, 118, 278,
	192, 186, 175, 152, 163, 224, 183, 225, 164, 198,
	197, 199, 0, 526, 0, 260, 287, 303, 588, 130,
	545, 0, 270, 297, 298, 0, 0, 131, 155, 151,
	223, 201, 126, 166, 257, 174, 181, 233, 301, 212,
	239, 135, 286, 256, 543, 544, 541, 0, 542, 589,
	590, 644, 645, 646, 615, 537, 0, 628, 629, 0,
	619, 634, 635, 610, 653, 566, 567, 527, 530, 531,
	532, 538, 580, 581, 593, 596, 624, 623, 622, 625,
	630, 649, 648, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 111, 120, 178, 300,
	231, 154, 288, 523, 147, 0, 0, 582, 584, 595,
	612, 113, 114, 121, 129, 136, 146, 150, 153, 158,
	162, 165, 167, 168, 169, 172, 185, 188, 189, 190,
	191, 203, 204, 206, 207, 210, 211, 214, 216, 217,
	218, 220, 221, 222, 226, 228, 230, 232, 235, 240,
	241, 242, 243, 245, 246, 247, 250, 251, 252, 253,
	261, 265, 274, 275, 285, 292, 296, 631, 638, 618,
	0, 575, 641, 547, 564, 652, 565, 568, 607, 533,
	587, 209, 562, 534, 0, 551, 524, 558, 525, 548,
	577, 149, 546, 620, 591, 640, 176, 603, 0, 142,
	184, 182, 0, 0, 0, 215, 267, 639, 583, 0,
	647, 179, 600, 0, 258, 196, 0, 0, 579, 627,
	585, 616, 574, 609, 540, 599, 642, 563, 605, 643,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 602, 637, 560, 604, 606, 522,
	601, 0, 528, 535, 651, 633, 554, 555, 556, 0,
	0, 0, 0, 0, 0, 0, 578, 586, 613, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 0,
	597, 0, 0, 0, 536, 529, 0, 0, 576, 0,
	0, 0, 539, 0, 553, 614, 0, 520, 157, 0,
	0, 617, 632, 573, 0, 293, 636, 570, 569, 227,
	0, 263, 160, 177, 127, 112, 122, 0, 159, 205,
	236, 244, 561, 521, 621, 549, 559, 143, 557, 238,
	213, 284, 0, 594, 219, 237, 180, 273, 229, 282,
	283, 161, 294, 295, 268, 291, 299, 255, 0, 0,
	0, 0, 0, 0, 173, 572, 608, 550, 140, 611,
	598, 626, 254, 128, 269, 195, 200, 137, 139, 138,
	123, 249, 271, 132, 141, 259, 264, 115, 266, 281,
	134, 248, 117, 279, 262, 193, 170, 171, 116, 0,
	234, 148, 156, 145, 208, 0, 0, 0, 276, 277,
	144, 302, 124, 290, 119, 125, 289, 202, 0, 0,
	0, 272, 280, 194, 187, 0, 118, 278, 192, 186,
	175, 152, 163, 224, 183, 225, 164, 198, 197, 199,
	0, 526, 0, 260, 287, 303, 588, 130, 545, 0,
	270, 297, 298, 0, 0, 131, 155, 151, 223, 201,
	126, 166, 257, 174, 181, 233, 301, 212, 239, 135,
	286, 256, 543, 544, 541, 0, 542, 589, 590, 644,
	645, 646, 615, 537, 0, 628, 629, 0, 619, 634,
	635, 610, 653, 566, 567, 527, 530, 531, 532, 538,
	580, 581, 593, 596, 624, 623, 622, 625, 630, 649,
	648, 650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 111, 120, 178, 300, 231, 154,
	288, 523, 147, 0, 0, 582, 584, 595, 612, 113,
	114, 121, 129, 136, 146, 150, 153, 158, 162, 165,
	167, 168, 169, 172, 185, 188, 189, 190, 191, 203,
	204, 206, 207, 210, 211, 214, 216, 217, 218, 220,
	221, 222, 226, 228, 230, 232, 235, 240, 241, 242,
	243, 245, 246, 247, 250, 251, 252, 253, 261, 265,
	274, 275, 285, 292, 296, 631, 209, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 149, 371, 0, 0,
	0, 176, 0, 0, 142, 184, 182, 0, 0, 0,
	215, 267, 0, 0, 0, 418, 179, 0, 0, 258,
	196, 0, 0, 0, 0, 407, 408, 0, 0, 0,
	0, 0, 0, 1248, 0, 68, 0, 0, 372, 395,
	394, 397, 398, 399, 400, 0, 0, 133, 396, 401,
	402, 403, 1249, 0, 0, 369, 386, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 0, 0, 0, 0, 432, 0, 385, 0, 0,
	380, 381, 382, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 409, 0, 0, 0,
	293, 0, 0, 430, 227, 0, 263, 160, 177, 127,
	112, 122, 0, 159, 205, 236, 244, 415, 0, 0,
	0, 0, 143, 0, 238, 213, 284, 0, 0, 219,
	237, 180, 273, 229, 282, 283, 161, 294, 295, 268,
	291, 299, 255, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 140, 0, 0, 0, 254, 128, 269,
	195, 200, 137, 139, 138, 123, 249, 271, 132, 141,
	259, 264, 115, 266, 281, 134, 248, 117, 279, 262,
	193, 170, 171, 116, 0, 234, 148, 156, 145, 208,
	0, 0, 0, 276, 277, 144, 302, 124, 290, 119,
	125, 289, 202, 0, 0, 0, 272, 280, 194, 187,
	0, 118, 278, 192, 186, 175, 152, 163, 224, 183,
	225, 164, 198, 197, 199, 0, 0, 0, 260, 287,
	303, 0, 130, 0, 0, 270, 297, 298, 0, 0,
	131, 155, 151, 223, 201, 126, 166, 257, 174, 181,
	233, 301, 212, 239, 135, 286, 256, 419, 431, 425,
	427, 426, 423, 424, 422, 421, 420, 433, 410, 411,
	412, 413, 416, 0, 428, 429, 0, 0, 0, 0,
	446, 447, 448, 449, 450, 451, 452, 445, 453, 454,
	455, 456, 457, 458, 459, 460, 461, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 442, 443, 414, 111,
	120, 178, 300, 231, 154, 288, 0, 147, 0, 0,
	0, 0, 0, 0, 113, 114, 121, 129, 136, 146,
	150, 153, 158, 162, 165, 167, 168, 169, 172, 185,
	188, 189, 190, 191, 203, 204, 206, 207, 210, 211,
	214, 216, 217, 218, 220, 221, 222, 226, 228, 230,
	232, 235, 240, 241, 242, 243, 245, 246, 247, 250,
	251, 252, 253, 261, 265, 274, 275, 285, 292, 296,
	209, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	149, 371, 0, 0, 0, 176, 0, 0, 142, 184,
	182, 0, 0, 0, 215, 267, 0, 0, 0, 418,
	179, 0, 0, 258, 196, 0, 0, 0, 0, 407,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 703, 372, 395, 394, 397, 398, 399, 400, 0,
	0, 133, 396, 401, 402, 403, 0, 0, 0, 369,
	386, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 0, 0, 0, 0, 432,
	0, 385, 0, 0, 380, 381, 382, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	409, 0, 0, 0, 293, 0, 0, 430, 227, 0,
	263, 160, 177, 127, 112, 122, 0, 159, 205, 236,
	244, 415, 0, 0, 0, 0, 143, 0, 238, 213,
	284, 0, 0, 219, 237, 180, 273, 229, 282, 283,
	161, 294, 295, 268, 291, 299, 255, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 140, 0, 0,
	0, 254, 128, 269, 195, 200, 137, 139, 138, 123,
	249, 271, 132, 141, 259, 264, 115, 266, 281, 134,
	248, 117, 279, 262, 193, 170, 171, 116, 0, 234,
	148, 156, 145, 208, 0, 0, 0, 276, 277, 144,
	302, 124, 290, 119, 125, 289, 202, 0, 0, 0,
	272, 280, 194, 187, 0, 118, 278, 192, 186, 175,
	152, 163, 224, 183, 225, 164, 198, 197, 199, 0,
	0, 0, 260, 287, 303, 0, 130, 0, 0, 270,
	297, 298, 0, 0, 131, 155, 151, 223, 201, 126,
	166, 257, 174, 181, 233, 301, 212, 239, 135, 286,
	256, 419, 431, 425, 427, 426, 423, 424, 422, 421,
	420, 433, 410, 411, 412, 413, 416, 0, 428, 429,
	0, 0, 0, 0, 446, 447, 448, 449, 450, 451,
	452, 445, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	442, 443, 414, 111, 120, 178, 300, 231, 154, 288,
	0, 147, 0, 0, 0, 0, 0, 0, 113, 114,
	121, 129, 136, 146, 150, 153, 158, 162, 165, 167,
	168, 169, 172, 185, 188, 189, 190, 191, 203, 204,
	206, 207, 210, 211, 214, 216, 217, 218, 220, 221,
	222, 226, 228, 230, 232, 235, 240, 241, 242, 243,
	245, 246, 247, 250, 251, 252, 253, 261, 265, 274,
	275, 285, 292, 296, 209, 0, 0, 0, 0, 0,
	374, 0, 0, 0, 149, 371, 0, 0, 0, 176,
	0, 0, 142, 184, 182, 0, 0, 0, 215, 267,
	0, 0, 0, 418, 179, 0, 0, 258, 196, 0,
	0, 0, 0, 407, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 372, 395, 394, 397,
	398, 399, 400, 0, 0, 133, 396, 401, 402, 403,
	0, 0, 0, 369, 386, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 365,
	0, 0, 0, 432, 0, 385, 0, 0, 380, 381,
	382, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 409, 0, 0, 0, 293, 0,
	0, 430, 227, 0, 263, 160, 177, 127, 112, 122,
	0, 159, 205, 236, 244, 415, 0, 0, 0, 0,
	143, 0, 238, 213, 284, 0, 0, 219, 237, 180,
	273, 229, 282, 283, 161, 294, 295, 268, 291, 299,
	255, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 140, 0, 0, 0, 254, 128, 269, 195, 200,
	137, 139, 138, 123, 249, 271, 132, 141, 259, 264,
	115, 266, 281, 134, 248, 117, 279, 262, 193, 170,
	171, 116, 0, 234, 148, 156, 145, 208, 0, 0,
	0, 276, 277, 144, 302, 124, 290, 119, 125, 289,
	202, 0, 0, 0, 272, 280, 194, 187, 0, 118,
	278, 192, 186, 175, 152, 163, 224, 183, 225, 164,
	198, 197, 199, 0, 0, 0, 260, 287, 303, 0,
	130, 0, 0, 270, 297, 298, 0, 0, 131, 155,
	151, 223, 201, 126, 166, 257, 174, 181, 233, 301,
	212, 239, 135, 286, 256, 419, 431, 425, 427, 426,
	423, 424, 422, 421, 420, 433, 410, 411, 412, 413,
	416, 0, 428, 429, 0, 0, 0, 0, 446, 447,
	448, 449, 450, 451, 452, 445, 453, 454, 455, 456,
	457, 458, 459, 460, 461, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 442, 443, 414, 111, 120, 178,
	300, 231, 154, 288, 0, 147, 0, 0, 0, 0,
	0, 0, 113, 114, 121, 129, 136, 146, 150, 153,
	158, 162, 165, 167, 168, 169, 172, 185, 188, 189,
	190, 191, 203, 204, 206, 207, 210, 211, 214, 216,
	217, 218, 220, 221, 222, 226, 228, 230, 232, 235,
	240, 241, 242, 243, 245, 246, 247, 250, 251, 252,
	253, 261, 265, 274, 275, 285, 292, 296, 209, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 149, 371,
	0, 0, 0, 176, 0, 0, 142, 184, 182, 0,
	0, 0, 215, 267, 0, 0, 0, 418, 179, 0,
	0, 258, 196, 0, 0, 0, 0, 407, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	372, 395, 1156, 397, 398, 399, 400, 0, 0, 133,
	396, 401, 402, 403, 0, 0, 0, 369, 386, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 365, 0, 0, 0, 432, 0, 385,
	0, 0, 380, 381, 382, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 409, 0,
	0, 0, 293, 0, 0, 430, 227, 0, 263, 160,
	177, 127, 112, 122, 0, 159, 205, 236, 244, 415,
	0, 0, 0, 0, 143, 0, 238, 213, 284, 0,
	0, 219, 237, 180, 273, 229, 282, 283, 161, 294,
	295, 268, 291, 299, 255, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 140, 0, 0, 0, 254,
	128, 269, 195, 200, 137, 139, 138, 123, 249, 271,
	132, 141, 259, 264, 115, 266, 281, 134, 248, 117,
	279, 262, 193, 170, 171, 116, 0, 234, 148, 156,
	145, 208, 0, 0, 0, 276, 277, 144, 302, 124,
	290, 119, 125, 289, 202, 0, 0, 0, 272, 280,
	194, 187, 0, 118, 278, 192, 186, 175, 152, 163,
	224, 183, 225, 164, 198, 197, 199, 0, 0, 0,
	260, 287, 303, 0, 130, 0, 0, 270, 297, 298,
	0, 0, 131, 155, 151, 223, 201, 126, 166, 257,
	174, 181, 233, 301, 212, 239, 135, 286, 256, 419,
	431, 425, 427, 426, 423, 424, 422, 421, 420, 433,
	410, 411, 412, 413, 416, 0, 428, 429, 0, 0,
	0, 0, 446, 447, 448, 449, 450, 451, 452, 445,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 442, 443,
	414, 111, 120, 178, 300, 231, 154, 288, 0, 147,
	0, 0, 0, 0, 0, 0, 113, 114, 121, 129,
	136, 146, 150, 153, 158, 162, 165, 167, 168, 169,
	172, 185, 188, 189, 190, 191, 203, 204, 206, 207,
	210, 211, 214, 216, 217, 218, 220, 221, 222, 226,
	228, 230, 232, 235, 240, 241, 242, 243, 245, 246,
	247, 250, 251, 252, 253, 261, 265, 274, 275, 285,
	292, 296, 209, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 149, 371, 0, 0, 0, 176, 0, 0,
	142, 184, 182, 0, 0, 0, 215, 267, 0, 0,
	0, 418, 179, 0, 0, 258, 196, 0, 0, 0,
	0, 407, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 372, 395, 1153, 397, 398, 399,
	400, 0, 0, 133, 396, 401, 402, 403, 0, 0,
	0, 369, 386, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 365, 0, 0,
	0, 432, 0, 385, 0, 0, 380, 381, 382, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 409, 0, 0, 0, 293, 0, 0, 430,
	227, 0, 263, 160, 177, 127, 112, 122, 0, 159,
	205, 236, 244, 415, 0, 0, 0, 0, 143, 0,
	238, 213, 284, 0, 0, 219, 237, 180, 273, 229,
	282, 283, 161, 294, 295, 268, 291, 299, 255, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 140,
	0, 0, 0, 254, 128, 269, 195, 200, 137, 139,
	138, 123, 249, 271, 132, 141, 259, 264, 115, 266,
	281, 134, 248, 117, 279, 262, 193, 170, 171, 116,
	0, 234, 148, 156, 145, 208, 0, 0, 0, 276,
	277, 144, 302, 124, 290, 119, 125, 289, 202, 0,
	0, 0, 272, 280, 194, 187, 0, 118, 278, 192,
	186, 175, 152, 163, 224, 183, 225, 164, 198, 197,
	199, 0, 0, 0, 260, 287, 303, 0, 130, 0,
	0, 270, 297, 298, 0, 0, 131, 155, 151, 223,
	201, 126, 166, 257, 174, 181, 233, 301, 212, 239,
	135, 286, 256, 419, 431, 425, 427, 426, 423, 424,
	422, 421, 420, 433, 410, 411, 412, 413, 416, 0,
	428, 429, 0, 0, 0, 0, 446, 447, 448, 449,
	450, 451, 452, 445, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 442, 443, 414, 111, 120, 178, 300, 231,
	154, 288, 0, 147, 0, 0, 0, 0, 0, 0,
	113, 114, 121, 129, 136, 146, 150, 153, 158, 162,
	165, 167, 168, 169, 172, 185, 188, 189, 190, 191,
	203, 204, 206, 207, 210, 211, 214, 216, 217, 218,
	220, 221, 222, 226, 228, 230, 232, 235, 240, 241,
	242, 243, 245, 246, 247, 250, 251, 252, 253, 261,
	265, 274, 275, 285, 292, 296, 29, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 374, 0, 0, 0, 149, 371,
	0, 0, 0, 176, 0, 0, 142, 184, 182, 0,
	0, 0, 215, 267, 0, 0, 0, 418, 179, 0,
	0, 258, 196, 0, 0, 0, 0, 407, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	372, 395, 394, 397, 398, 399, 400, 0, 0, 133,
	396, 401, 402, 403, 0, 0, 0, 369, 386, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 0, 0, 0, 0, 432, 0, 385,
	0, 0, 380, 381, 382, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 409, 0,
	0, 0, 293, 0, 0, 430, 227, 0, 263, 160,
	177, 127, 112, 122, 0, 159, 205, 236, 244, 415,
	0, 0, 0, 0, 143, 0, 238, 213, 284, 0,
	0, 219, 237, 180, 273, 229, 282, 283, 161, 294,
	295, 268, 291, 299, 255, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 140, 0, 0, 0, 254,
	128, 269, 195, 200, 137, 139, 138, 123, 249, 271,
	132, 141, 259, 264, 115, 266, 281, 134, 248, 117,
	279, 262, 193, 170, 171, 116, 0, 234, 148, 156,
	145, 208, 0, 0, 0, 276, 277, 144, 302, 124,
	290, 119, 125, 289, 202, 0, 0, 0, 272, 280,
	194, 187, 0, 118, 278, 192, 186, 175, 152, 163,
	224, 183, 225, 164, 198, 197, 199, 0, 0, 0,
	260, 287, 303, 0, 130, 0, 0, 270, 297, 298,
	0, 0, 131, 155, 151, 223, 201, 126, 166, 257,
	174, 181, 233, 301, 212, 239, 135, 286, 256, 419,
	431, 425, 427, 426, 423, 424, 422, 421, 420, 433,
	410, 411, 412, 413, 416, 0, 428, 429, 0, 0,
	0, 0, 446, 447, 448, 449, 450, 451, 452, 445,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 442, 443,
	414, 111, 120, 178, 300, 231, 154, 288, 0, 147,
	0, 0, 0, 0, 0, 0, 113, 114, 121, 129,
	136, 146, 150, 153, 158, 162, 165, 167, 168, 169,
	172, 185, 188, 189, 190, 191, 203, 204, 206, 207,
	210, 211, 214, 216, 217, 218, 220, 221, 222, 226,
	228, 230, 232, 235, 240, 241, 242, 243, 245, 246,
	247, 250, 251, 252, 253, 261, 265, 274, 275, 285,
	292, 296, 209, 0, 0, 0, 0, 0, 374, 0,
	0, 0, 149, 371, 0, 0, 0, 176, 0, 0,
	142, 184, 182, 0, 0, 0, 215, 267, 0, 0,
	0, 418, 179, 0, 0, 258, 196, 0, 0, 0,
	0, 407, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 1066, 372, 395, 394, 397, 398, 399,
	400, 0, 0, 133, 396, 401, 402, 403, 0, 0,
	0, 369, 386, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 0, 0, 0,
	0, 432, 0, 385, 0, 0, 380, 381, 382, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 409, 0, 0, 0, 293, 0, 0, 430,
	227, 0, 263, 160, 177, 127, 112, 122, 0, 159,
	205, 236, 244, 415, 0, 0, 0, 0, 143, 0,
	238, 213, 284, 0, 0, 219, 237, 180, 273, 229,
	282, 283, 161, 294, 295, 268, 291, 299, 255, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 140,
	0, 0, 0, 254, 128, 269, 195, 200, 137, 139,
	138, 123, 249, 271, 132, 141, 259, 264, 115, 266,
	281, 134, 248, 117, 279, 262, 193, 170, 171, 116,
	0, 234, 148, 156, 145, 208, 0, 0, 0, 276,
	277, 144, 302, 124, 290, 119, 125, 289, 202, 0,
	0, 0, 272, 280, 194, 187, 0, 118, 278, 192,
	186, 175, 152, 163, 224, 183, 225, 164, 198, 197,
	199, 0, 0, 0, 260, 287, 303, 0, 130, 0,
	0, 270, 297, 298, 0, 0, 131, 155, 151, 223,
	201, 126, 166, 257, 174, 181, 233, 301, 212, 239,
	135, 286, 256, 419, 431, 425, 427, 426, 423, 424,
	422, 421, 420, 433, 410, 411, 412, 413, 416, 0,
	428, 429, 0, 0, 0, 0, 446, 447, 448, 449,
	450, 451, 452, 445, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 442, 443, 414, 111, 120, 178, 300, 231,
	154, 288, 0, 147, 0, 0, 0, 0, 0, 0,
	113, 114, 121, 129, 136, 146, 150, 153, 158, 162,
	165, 167, 168, 169, 172, 185, 188, 189, 190, 191,
	203, 204, 206, 207, 210, 211, 214, 216, 217, 218,
	220, 221, 222, 226, 228, 230, 232, 235, 240, 241,
	242, 243, 245, 246, 247, 250, 251, 252, 253, 261,
	265, 274, 275, 285, 292, 296, 209, 0, 0, 0,
	0, 0, 374, 0, 0, 0, 149, 371, 0, 0,
	0, 176, 0, 0, 142, 184, 182, 0, 0, 0,
	215, 267, 0, 0, 0, 418, 179, 0, 0, 258,
	196, 0, 0, 0, 0, 407, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 372, 395,
	394, 397, 398, 399, 400, 0, 0, 133, 396, 401,
	402, 403, 0, 0, 0, 369, 386, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 383,
	384, 0, 0, 0, 0, 432, 0, 385, 0, 0,
	380, 381, 382, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 409, 0, 0, 0,
	293, 0, 0, 430, 227, 0, 263, 160, 177, 127,
	112, 122, 0, 159, 205, 236, 244, 415, 0, 0,
	0, 0, 143, 0, 238, 213, 284, 0, 0, 219,
	237, 180, 273, 229, 282, 283, 161, 294, 295, 268,
	291, 299, 255, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 140, 0, 0, 0, 254, 128, 269,
	195, 200, 137, 139, 138, 123, 249, 271, 132, 141,
	259, 264, 115, 266, 281, 134, 248, 117, 279, 262,
	193, 170, 171, 116, 0, 234, 148, 156, 145, 208,
	0, 0, 0, 276, 277, 144, 302, 124, 290, 119,
	125, 289, 202, 0, 0, 0, 272, 280, 194, 187,
	0, 118, 278, 192, 186, 175, 152, 163, 224, 183,
	225, 164, 198, 197, 199, 0, 0, 0, 260, 287,
	303, 0, 130, 0, 0, 270, 297, 298, 0, 0,
	131, 155, 151, 223, 201, 126, 166, 257, 174, 181,
	233, 301, 212, 239, 135, 286, 256, 419, 431, 425,
	427, 426, 423, 424, 422, 421, 420, 433, 410, 411,
	412, 413, 416, 0, 428, 429, 0, 0, 0, 0,
	446, 447, 448, 449, 450, 451, 452, 445, 453, 454,
	455, 456, 457, 458, 459, 460, 461, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 442, 443, 414, 111,
	120, 178, 300, 231, 154, 288, 0, 147, 0, 0,
	0, 0, 0, 0, 113, 114, 121, 129, 136, 146,
	150, 153, 158, 162, 165, 167, 168, 169, 172, 185,
	188, 189, 190, 191, 203, 204, 206, 207, 210, 211,
	214, 216, 217, 218, 220, 221, 222, 226, 228, 230,
	232, 235, 240, 241, 242, 243, 245, 246, 247, 250,
	251, 252, 253, 261, 265, 274, 275, 285, 292, 296,
	209, 0, 0, 0, 0, 0, 374, 0, 0, 0,
	149, 371, 0, 0, 0, 176, 0, 0, 142, 184,
	182, 0, 0, 0, 215, 267, 0, 0, 0, 418,
	179, 0, 0, 258, 196, 0, 0, 0, 0, 407,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 372, 395, 394, 397, 398, 399, 400, 0,
	0, 133, 396, 401, 402, 403, 0, 0, 0, 369,
	386, 0, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 0, 0, 0, 0, 432,
	0, 385, 0, 0, 380, 381, 382, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	409, 0, 0, 0, 293, 0, 0, 430, 227, 0,
	263, 160, 177, 127, 112, 122, 0, 159, 205, 236,
	244, 415, 0, 0, 0, 0, 143, 0, 238, 213,
	284, 0, 0, 219, 237, 180, 273, 229, 282, 283,
	161, 294, 295, 268, 291, 299, 255, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 140, 0, 0,
	0, 254, 128, 269, 195, 200, 137, 139, 138, 123,
	249, 271, 132, 141, 259, 264, 115, 266, 281, 134,
	248, 117, 279, 262, 193, 170, 171, 116, 0, 234,
	148, 156, 145, 208, 0, 0, 0, 276, 277, 144,
	302, 124, 290, 119, 125, 289, 202, 0, 0, 0,
	272, 280, 194, 187, 0, 118, 278, 192, 186, 175,
	152, 163, 224, 183, 225, 164, 198, 197, 199, 0,
	0, 0, 260, 287, 303, 0, 130, 0, 0, 270,
	297, 298, 0, 0, 131, 155, 151, 223, 201, 126,
	166, 257, 174, 181, 233, 301, 212, 239, 135, 286,
	256, 419, 431, 425, 427, 426, 423, 424, 422, 421,
	420, 433, 410, 411, 412, 413, 416, 0, 428, 429,
	0, 0, 0, 0, 719, 720, 721, 722, 723, 727,
	728, 732, 733, 741, 740, 739, 742, 743, 745, 744,
	746, 724, 725, 726, 729, 730, 731, 734, 735, 738,
	736, 737, 414, 111, 120, 178, 300, 231, 154, 288,
	0, 147, 0, 0, 0, 0, 0, 0, 113, 114,
	121, 129, 136, 146, 150, 153, 158, 162, 165, 167,
	168, 169, 172, 185, 188, 189, 190, 191, 203, 204,
	206, 207, 210, 211, 214, 216, 217, 218, 220, 221,
	222, 226, 228, 230, 232, 235, 240, 241, 242, 243,
	245, 246, 247, 250, 251, 252, 253, 261, 265, 274,
	275, 285, 292, 296, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 176,
	0, 0, 142, 184, 182, 0, 0, 0, 215, 267,
	0, 0, 0, 418, 179, 0, 0, 258, 196, 0,
	0, 0, 0, 407, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 372, 395, 394, 397,
	398, 399, 400, 0, 0, 133, 396, 401, 402, 403,
	0, 0, 0, 0, 386, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 384, 0,
	0, 0, 0, 432, 0, 385, 0, 0, 380, 381,
	382, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 409, 0, 0, 0, 293, 0,
	0, 430, 227, 0, 263, 160, 177, 127, 112, 122,
	0, 159, 205, 236, 244, 415, 0, 0, 0, 0,
	143, 0, 238, 213, 284, 0, 2173, 219, 237, 180,
	273, 229, 282, 283, 161, 294, 295, 268, 291, 299,
	255, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 140, 0, 0, 0, 254, 128, 269, 195, 200,
	137, 139, 138, 123, 249, 271, 132, 141, 259, 264,
	115, 266, 281, 134, 248, 117, 279, 262, 193, 170,
	171, 116, 0, 234, 148, 156, 145, 208, 0, 0,
	0, 276, 277, 144, 302, 124, 290, 119, 125, 289,
	202, 0, 0, 0, 272, 280, 194, 187, 0, 118,
	278, 192, 186, 175, 152, 163, 224, 183, 225, 164,
	198, 197, 199, 0, 0, 0, 260, 287, 303, 0,
	130, 0, 0, 270, 297, 298, 0, 0, 131, 155,
	151, 223, 201, 126, 166, 257, 174, 181, 233, 301,
	212, 239, 135, 286, 256, 419, 431, 425, 427, 426,
	423, 424, 422, 421, 420, 433, 410, 411, 412, 413,
	416, 0, 428, 429, 0, 0, 0, 0, 446, 447,
	448, 449, 450, 451, 452, 445, 453, 454, 455, 456,
	457, 458, 459, 460, 461, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 442, 443, 414, 111, 120, 178,
	300, 231, 154, 288, 0, 147, 0, 0, 0, 0,
	0, 0, 113, 114, 121, 129, 136, 146, 150, 153,
	158, 162, 165, 167, 168, 169, 172, 185, 188, 189,
	190, 191, 203, 204, 206, 207, 210, 211, 214, 216,
	217, 218, 220, 221, 222, 226, 228, 230, 232, 235,
	240, 241, 242, 243, 245, 246, 247, 250, 251, 252,
	253, 261, 265, 274, 275, 285, 292, 296, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 176, 0, 0, 142, 184, 182, 0,
	0, 0, 215, 267, 0, 0, 0, 418, 179, 0,
	0, 258, 196, 0, 0, 0, 0, 407, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 703,
	372, 395, 394, 397, 398, 399, 400, 0, 0, 133,
	396, 401, 402, 403, 0, 0, 0, 0, 386, 0,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 0, 0, 0, 0, 432, 0, 385,
	0, 0, 380, 381, 382, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 409, 0,
	0, 0, 293, 0, 0, 430, 227, 0, 263, 160,
	177, 127, 112, 122, 0, 159, 205, 236, 244, 415,
	0, 0, 0, 0, 143, 0, 238, 213, 284, 0,
	0, 219, 237, 180, 273, 229, 282, 283, 161, 294,
	295, 268, 291, 299, 255, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 140, 0, 0, 0, 254,
	128, 269, 195, 200, 137, 139, 138, 123, 249, 271,
	132, 141, 259, 264, 115, 266, 281, 134, 248, 117,
	279, 262, 193, 170, 171, 116, 0, 234, 148, 156,
	145, 208, 0, 0, 0, 276, 277, 144, 302, 124,
	290, 119, 125, 289, 202, 0, 0, 0, 272, 280,
	194, 187, 0, 118, 278, 192, 186, 175, 152, 163,
	224, 183, 225, 164, 198, 197, 199, 0, 0, 0,
	260, 287, 303, 0, 130, 0, 0, 270, 297, 298,
	0, 0, 131, 155, 151, 223, 201, 126, 166, 257,
	174, 181, 233, 301, 212, 239, 135, 286, 256, 419,
	431, 425, 427, 426, 423, 424, 422, 421, 420, 433,
	410, 411, 412, 413, 416, 0, 428, 429, 0, 0,
	0, 0, 446, 447, 448, 449, 450, 451, 452, 445,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 442, 443,
	414, 111, 120, 178, 300, 231, 154, 288, 0, 147,
	0, 0, 0, 0, 0, 0, 113, 114, 121, 129,
	136, 146, 150, 153, 158, 162, 165, 167, 168, 169,
	172, 185, 188, 189, 190, 191, 203, 204, 206, 207,
	210, 211, 214, 216, 217, 218, 220, 221, 222, 226,
	228, 230, 232, 235, 240, 241, 242, 243, 245, 246,
	247, 250, 251, 252, 253, 261, 265, 274, 275, 285,
	292, 296, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 176, 0, 0,
	142, 184, 182, 0, 0, 0, 215, 267, 0, 0,
	0, 418, 179, 0, 0, 258, 196, 0, 0, 0,
	0, 407, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 372, 395, 394, 397, 398, 399,
	400, 0, 0, 133, 396, 401, 402, 403, 0, 0,
	0, 0, 386, 0, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 0, 0, 0,
	0, 432, 0, 385, 0, 0, 380, 381, 382, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 409, 0, 0, 0, 293, 0, 0, 430,
	227, 0, 263, 160, 177, 127, 112, 122, 0, 159,
	205, 236, 244, 415, 0, 0, 0, 0, 143, 0,
	238, 213, 284, 0, 0, 219, 237, 180, 273, 229,
	282, 283, 161, 294, 295, 268, 291, 299, 255, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 140,
	0, 0, 0, 254, 128, 269, 195, 200, 137, 139,
	138, 123, 249, 271, 132, 141, 259, 264, 115, 266,
	281, 134, 248, 117, 279, 262, 193, 170, 171, 116,
	0, 234, 148, 156, 145, 208, 0, 0, 0, 276,
	277, 144, 302, 124, 290, 119, 125, 289, 202, 0,
	0, 0, 272, 280, 194, 187, 0, 118, 278, 192,
	186, 175, 152, 163, 224, 183, 225, 164, 198, 197,
	199, 0, 0, 0, 260, 287, 303, 0, 130, 0,
	0, 270, 297, 298, 0, 0, 131, 155, 151, 223,
	201, 126, 166, 257, 174, 181, 233, 301, 212, 239,
	135, 286, 256, 419, 431, 425, 427, 426, 423, 424,
	422, 421, 420, 433, 410, 411, 412, 413, 416, 0,
	428, 429, 0, 0, 0, 0, 446, 447, 448, 449,
	450, 451, 452, 445, 453, 454, 455, 456, 457, 458,
	459, 460, 461, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 442, 443, 414, 111, 120, 178, 300, 231,
	154, 288, 0, 147, 0, 0, 0, 0, 0, 0,
	113, 114, 121, 129, 136, 146, 150, 153, 158, 162,
	165, 167, 168, 169, 172, 185, 188, 189, 190, 191,
	203, 204, 206, 207, 210, 211, 214, 216, 217, 218,
	220, 221, 222, 226, 228, 230, 232, 235, 240, 241,
	242, 243, 245, 246, 247, 250, 251, 252, 253, 261,
	265, 274, 275, 285, 292, 296, 209, 0, 0, 0,
	0, 1226, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 176, 0, 0, 142, 184, 182, 0, 0, 0,
	215, 267, 0, 0, 0, 0, 179, 0, 0, 258,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1228, 1230, 0, 0, 0, 0, 0, 109, 0,
	1233, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	293, 0, 1229, 0, 227, 0, 263, 160, 177, 127,
	112, 122, 0, 159, 205, 236, 244, 0, 0, 0,
	0, 0, 143, 0, 238, 213, 284, 0, 0, 219,
	237, 180, 273, 229, 282, 283, 161, 294, 295, 268,
	291, 299, 255, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 140, 0, 0, 0, 254, 128, 269,
	195, 200, 137, 139, 138, 123, 249, 271, 132, 141,
	259, 264, 115, 266, 281, 134, 248, 117, 279, 262,
	193, 170, 171, 116, 0, 234, 148, 156, 145, 208,
	0, 0, 0, 276, 277, 144, 302, 124, 290, 119,
	125, 289, 202, 0, 0, 0, 272, 280, 194, 187,
	0, 118, 278, 192, 186, 175, 152, 163, 224, 183,
	225, 164, 198, 197, 199, 0, 0, 0, 260, 287,
	303, 0, 130, 0, 0, 270, 297, 298, 0, 0,
	131, 155, 151, 223, 201, 126, 166, 257, 174, 181,
	233, 301, 212, 239, 135, 286, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 767, 768, 769, 770, 774, 775, 779, 780, 788,
	787, 786, 789, 790, 792, 791, 793, 771, 772, 773,
	776, 777, 778, 781, 782, 785, 783, 784, 0, 111,
	120, 178, 300, 231, 154, 288, 0, 147, 0, 0,
	0, 0, 0, 0, 113, 114, 121, 129, 136, 146,
	150, 153, 158, 162, 165, 167, 168, 169, 172, 185,
	188, 189, 190, 191, 203, 204, 206, 207, 210, 211,
	214, 216, 217, 218, 220, 221, 222, 226, 228, 230,
	232, 235, 240, 241, 242, 243, 245, 246, 247, 250,
	251, 252, 253, 261, 265, 274, 275, 285, 292, 296,
	209, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 176, 0, 0, 142, 184,
	182, 0, 0, 0, 215, 267, 0, 0, 0, 0,
	179, 0, 0, 258, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1228, 1230, 0, 0, 0,
	0, 0, 109, 0, 1233, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 293, 0, 1229, 0, 227, 0,
	263, 160, 177, 127, 112, 122, 0, 159, 205, 236,
	244, 0, 0, 0, 0, 0, 143, 0, 238, 213,
	284, 0, 0, 1224, 237, 180, 273, 229, 282, 283,
	161, 294, 295, 268, 291, 299, 255, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 140, 0, 0,
	0, 254, 128, 269, 195, 200, 137, 139, 138, 123,
	249, 271, 132, 141, 259, 264, 115, 266, 281, 134,
	248, 117, 279, 262, 193, 170, 171, 116, 0, 234,
	148, 156, 145, 208, 0, 0, 0, 276, 277, 144,
	302, 124, 290, 119, 125, 289, 202, 0, 0, 0,
	272, 280, 194, 187, 0, 118, 278, 192, 186, 175,
	152, 163, 224, 183, 225, 164, 198, 197, 199, 0,
	0, 0, 260, 287, 303, 0, 130, 0, 0, 270,
	297, 298, 0, 0, 131, 155, 151, 223, 201, 126,
	166, 257, 174, 181, 233, 301, 212, 239, 135, 286,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 766, 767, 768, 769, 770, 774,
	775, 779, 780, 788, 787, 786, 789, 790, 792, 791,
	793, 771, 772, 773, 776, 777, 778, 781, 782, 785,
	783, 784, 0, 111, 120, 178, 300, 231, 154, 288,
	0, 147, 0, 0, 0, 0, 0, 0, 113, 114,
	121, 129, 136, 146, 150, 153, 158, 162, 165, 167,
	168, 169, 172, 185, 188, 189, 190, 191, 203, 204,
	206, 207, 210, 211, 214, 216, 217, 218, 220, 221,
	222, 226, 228, 230, 232, 235, 240, 241, 242, 243,
	245, 246, 247, 250, 251, 252, 253, 261, 265, 274,
	275, 285, 292, 296, 209, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 176,
	0, 0, 142, 184, 182, 0, 0, 0, 215, 267,
	0, 0, 0, 0, 179, 0, 0, 258, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 765, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 758, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 227, 0, 263, 160, 177, 127, 112, 122,
	0, 159, 205, 236, 244, 0, 0, 0, 0, 0,
	143, 0, 238, 213, 284, 0, 0, 219, 237, 180,
	273, 229, 282, 283, 161, 294, 295, 268, 291, 299,
	255, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 140, 0, 0, 0, 254, 128, 269, 195, 200,
	137, 139, 138, 123, 249, 271, 132, 141, 259, 264,
	115, 266, 281, 134, 248, 117, 279, 262, 193, 170,
	171, 116, 0, 234, 148, 156, 145, 208, 0, 0,
	0, 276, 277, 144, 302, 124, 290, 119, 125, 289,
	202, 0, 0, 0, 272, 280, 194, 187, 0, 118,
	278, 192, 186, 175, 152, 163, 224, 183, 225, 164,
	198, 197, 199, 0, 0, 0, 260, 287, 303, 0,
	130, 0, 0, 270, 297, 298, 0, 0, 131, 155,
	151, 223, 201, 126, 166, 257, 174, 181, 233, 301,
	212, 239, 135, 286, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 767,
	768, 769, 770, 774, 775, 779, 780, 788, 787, 786,
	789, 790, 792, 791, 793, 771, 772, 773, 776, 777,
	778, 781, 782, 785, 783, 784, 0, 111, 120, 178,
	300, 231, 154, 288, 0, 147, 0, 0, 0, 0,
	0, 0, 113, 114, 121, 129, 136, 146, 150, 153,
	158, 162, 165, 167, 168, 169, 172, 185, 188, 189,
	190, 191, 203, 204, 206, 207, 210, 211, 214, 216,
	217, 218, 220, 221, 222, 226, 228, 230, 232, 235,
	240, 241, 242, 243, 245, 246, 247, 250, 251, 252,
	253, 261, 265, 274, 275, 285, 292, 296, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 176, 1481, 0, 142, 184, 182, 0,
	0, 0, 215, 267, 0, 0, 0, 0, 179, 0,
	0, 258, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 1233, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 227, 0, 263, 160,
	177, 127, 112, 122, 0, 159, 205, 236, 244, 0,
	0, 0, 0, 0, 143, 0, 238, 213, 284, 0,
	0, 219, 237, 180, 273, 229, 282, 283, 161, 294,
	295, 268, 291, 299, 255, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 140, 0, 0, 0, 254,
	128, 269, 195, 200, 137, 139, 138, 123, 249, 271,
	132, 141, 259, 264, 115, 266, 281, 134, 248, 117,
	279, 262, 193, 170, 171, 116, 0, 234, 148, 156,
	145, 208, 0, 0, 0, 276, 277, 144, 302, 124,
	290, 119, 125, 289, 202, 0, 0, 0, 272, 280,
	194, 187, 0, 118, 278, 192, 186, 175, 152, 163,
	224, 183, 225, 164, 198, 197, 199, 0, 0, 0,
	260, 287, 303, 0, 130, 0, 0, 270, 297, 298,
	0, 0, 131, 155, 151, 223, 201, 126, 166, 257,
	174, 181, 233, 301, 212, 239, 135, 286, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 766, 767, 768, 769, 770, 774, 775, 779,
	780, 788, 787, 786, 789, 790, 792, 791, 793, 771,
	772, 773, 776, 777, 778, 781, 782, 785, 783, 784,
	0, 111, 120, 178, 300, 231, 154, 288, 0, 147,
	0, 0, 0, 0, 0, 0, 113, 114, 121, 129,
	136, 146, 150, 153, 158, 162, 165, 167, 168, 169,
	172, 185, 188, 189, 190, 191, 203, 204, 206, 207,
	210, 211, 214, 216, 217, 218, 220, 221, 222, 226,
	228, 230, 232, 235, 240, 241, 242, 243, 245, 246,
	247, 250, 251, 252, 253, 261, 265, 274, 275, 285,
	292, 296, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 176, 0, 0,
	142, 184, 182, 0, 0, 0, 215, 267, 0, 0,
	0, 0, 179, 0, 0, 258, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 1233, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	227, 0, 263, 160, 177, 127, 112, 122, 0, 159,
	205, 236, 244, 0, 0, 0, 0, 0, 143, 0,
	238, 213, 284, 0, 0, 219, 237, 180, 273, 229,
	282, 283, 161, 294, 295, 268, 291, 299, 255, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 140,
	0, 0, 0, 254, 128, 269, 195, 200, 137, 139,
	138, 123, 249, 271, 132, 141, 259, 264, 115, 266,
	281, 134, 248, 117, 279, 262, 193, 170, 171, 116,
	0, 234, 148, 156, 145, 208, 0, 0, 0, 276,
	277, 144, 302, 124, 290, 119, 125, 289, 202, 0,
	0, 0, 272, 280, 194, 187, 0, 118, 278, 192,
	186, 175, 152, 163, 224, 183, 225, 164, 198, 197,
	199, 0, 0, 0, 260, 287, 303, 0, 130, 0,
	0, 270, 297, 298, 0, 0, 131, 155, 151, 223,
	201, 126, 166, 257, 174, 181, 233, 301, 212, 239,
	135, 286, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 767, 768, 769,
	770, 774, 775, 779, 780, 788, 787, 786, 789, 790,
	792, 791, 793, 771, 772, 773, 776, 777, 778, 781,
	782, 785, 783, 784, 0, 111, 120, 178, 300, 231,
	154, 288, 0, 147, 0, 0, 0, 0, 0, 0,
	113, 114, 121, 129, 136, 146, 150, 153, 158, 162,
	165, 167, 168, 169, 172, 185, 188, 189, 190, 191,
	203, 204, 206, 207, 210, 211, 214, 216, 217, 218,
	220, 221, 222, 226, 228, 230, 232, 235, 240, 241,
	242, 243, 245, 246, 247, 250, 251, 252, 253, 261,
	265, 274, 275, 285, 292, 296, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 176, 0, 0, 142, 184, 182, 0, 0, 0,
	215, 267, 0, 0, 0, 0, 179, 0, 0, 258,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	765, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 227, 0, 263, 160, 177, 127,
	112, 122, 0, 159, 205, 236, 244, 0, 0, 0,
	0, 0, 143, 0, 238, 213, 284, 0, 0, 219,
	237, 180, 273, 229, 282, 283, 161, 294, 295, 268,
	291, 299, 255, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 140, 0, 0, 0, 254, 128, 269,
	195, 200, 137, 139, 138, 123, 249, 271, 132, 141,
	259, 264, 115, 266, 281, 134, 248, 117, 279, 262,
	193, 170, 171, 116, 0, 234, 148, 156, 145, 208,
	0, 0, 0, 276, 277, 144, 302, 124, 290, 119,
	125, 289, 202, 0, 0, 0, 272, 280, 194, 187,
	0, 118, 278, 192, 186, 175, 152, 163, 224, 183,
	225, 164, 198, 197, 199, 0, 0, 0, 260, 287,
	303, 0, 130, 0, 0, 270, 297, 298, 0, 0,
	131, 155, 151, 223, 201, 126, 166, 257, 174, 181,
	233, 301, 212, 239, 135, 286, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 767, 768, 769, 770, 774, 775, 779, 780, 788,
	787, 786, 789, 790, 792, 791, 793, 771, 772, 773,
	776, 777, 778, 781, 782, 785, 783, 784, 0, 111,
	120, 178, 300, 231, 154, 288, 0, 147, 0, 0,
	0, 0, 0, 0, 113, 114, 121, 129, 136, 146,
	150, 153, 158, 162, 165, 167, 168, 169, 172, 185,
	188, 189, 190, 191, 203, 204, 206, 207, 210, 211,
	214, 216, 217, 218, 220, 221, 222, 226, 228, 230,
	232, 235, 240, 241, 242, 243, 245, 246, 247, 250,
	251, 252, 253, 261, 265, 274, 275, 285, 292, 296,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 176, 0, 0, 142, 184,
	182, 0, 0, 0, 215, 267, 0, 0, 0, 0,
	179, 0, 0, 258, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	802, 812, 813, 805, 806, 807, 808, 809, 810, 811,
	804, 0, 0, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 227, 0,
	263, 160, 177, 127, 112, 122, 0, 159, 205, 236,
	244, 0, 0, 0, 0, 0, 143, 0, 238, 213,
	284, 0, 0, 219, 237, 180, 273, 229, 282, 283,
	161, 294, 295, 268, 291, 299, 255, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 140, 0, 0,
	0, 254, 128, 269, 195, 200, 137, 139, 138, 123,
	249, 271, 132, 141, 259, 264, 115, 266, 281, 134,
	248, 117, 279, 262, 193, 170, 171, 116, 0, 234,
	148, 156, 145, 208, 0, 0, 0, 276, 277, 144,
	302, 124, 290, 119, 125, 289, 202, 0, 0, 0,
	272, 280, 194, 187, 0, 118, 278, 192, 186, 175,
	152, 163, 224, 183, 225, 164, 198, 197, 199, 0,
	0, 0, 260, 287, 303, 0, 130, 0, 0, 270,
	297, 298, 0, 0, 131, 155, 151, 223, 201, 126,
	166, 257, 174, 181, 233, 301, 212, 239, 135, 286,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 120, 178, 300, 231, 154, 288,
	0, 147, 0, 0, 0, 0, 0, 0, 113, 114,
	121, 129, 136, 146, 150, 153, 158, 162, 165, 167,
	168, 169, 172, 185, 188, 189, 190, 191, 203, 204,
	206, 207, 210, 211, 214, 216, 217, 218, 220, 221,
	222, 226, 228, 230, 232, 235, 240, 241, 242, 243,
	245, 246, 247, 250, 251, 252, 253, 261, 265, 274,
	275, 285, 292, 296, 29, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 176, 0, 0, 142, 184, 182, 0, 0, 0,
	215, 267, 0, 0, 0, 0, 179, 0, 0, 258,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 227, 0, 263, 160, 177, 127,
	112, 122, 0, 159, 205, 236, 244, 0, 0, 0,
	0, 0, 143, 0, 238, 213, 284, 0, 0, 219,
	237, 180, 273, 229, 282, 283, 161, 294, 295, 268,
	291, 299, 255, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 140, 0, 0, 0, 254, 128, 269,
	195, 200, 137, 139, 138, 123, 249, 271, 132, 141,
	259, 264, 115, 266, 281, 134, 248, 117, 279, 262,
	193, 170, 171, 116, 0, 234, 148, 156, 145, 208,
	0, 0, 0, 276, 277, 144, 302, 124, 290, 119,
	125, 289, 202, 0, 0, 0, 272, 280, 194, 187,
	0, 118, 278, 192, 186, 175, 152, 163, 224, 183,
	225, 164, 198, 197, 199, 0, 0, 0, 260, 287,
	303, 0, 130, 0, 0, 270, 297, 298, 0, 0,
	131, 155, 151, 223, 201, 126, 166, 257, 174, 181,
	233, 301, 212, 239, 135, 286, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	120, 178, 300, 231, 154, 288, 0, 147, 0, 0,
	0, 0, 0, 0, 113, 114, 121, 129, 136, 146,
	150, 153, 158, 162, 165, 167, 168, 169, 172, 185,
	188, 189, 190, 191, 203, 204, 206, 207, 210, 211,
	214, 216, 217, 218, 220, 221, 222, 226, 228, 230,
	232, 235, 240, 241, 242, 243, 245, 246, 247, 250,
	251, 252, 253, 261, 265, 274, 275, 285, 292, 296,
	29, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 176, 0, 0,
	142, 184, 182, 0, 0, 0, 215, 267, 0, 0,
	0, 0, 179, 0, 0, 258, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 0,
	227, 0, 263, 160, 177, 127, 112, 122, 0, 159,
	205, 236, 244, 0, 0, 0, 0, 0, 143, 0,
	238, 213, 284, 0, 0, 219, 237, 180, 273, 229,
	282, 283, 161, 294, 295, 268, 291, 299, 255, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 140,
	0, 0, 0, 254, 128, 269, 195, 200, 137, 139,
	138, 123, 249, 271, 132, 141, 259, 264, 115, 266,
	281, 134, 248, 117, 279, 262, 193, 170, 171, 116,
	0, 234, 148, 156, 145, 208, 0, 0, 0, 276,
	277, 144, 302, 124, 290, 119, 125, 289, 202, 0,
	0, 0, 272, 280, 194, 187, 0, 118, 278, 192,
	186, 175, 152, 163, 224, 183, 225, 164, 198, 197,
	199, 0, 0, 0, 260, 287, 303, 0, 130, 0,
	0, 270, 297, 298, 0, 0, 131, 155, 151, 223,
	201, 126, 166, 257, 174, 181, 233, 301, 212, 239,
	135, 286, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 120, 178, 300, 231,
	154, 288, 0, 147, 0, 0, 0, 0, 0, 0,
	113, 114, 121, 129, 136, 146, 150, 153, 158, 162,
	165, 167, 168, 169, 172, 185, 188, 189, 190, 191,
	203, 204, 206, 207, 210, 211, 214, 216, 217, 218,
	220, 221, 222, 226, 228, 230, 232, 235, 240, 241,
	242, 243, 245, 246, 247, 250, 251, 252, 253, 261,
	265, 274, 275, 285, 292, 296, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 936, 0, 0,
	0, 176, 0, 0, 142, 184, 182, 0, 0, 0,
	215, 267, 0, 0, 0, 0, 179, 0, 0, 258,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	935, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	293, 0, 0, 0, 227, 0, 263, 160, 177, 127,
	112, 122, 0, 159, 205, 236, 244, 0, 0, 0,
	0, 0, 143, 0, 238, 213, 284, 0, 0, 219,
	237, 180, 273, 229, 282, 283, 161, 294, 295, 268,
	291, 299, 255, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 140, 0, 0, 0, 254, 128, 269,
	195, 200, 137, 139, 138, 123, 249, 271, 132, 141,
	259, 264, 115, 266, 281, 134, 248, 117, 279, 262,
	193, 170, 171, 116, 0, 234, 148, 156, 145, 208,
	0, 0, 0, 276, 277, 144, 302, 124, 290, 119,
	125, 289, 202, 0, 0, 0, 272, 280, 194, 187,
	0, 118, 278, 192, 186, 175, 152, 163, 224, 183,
	225, 164, 198, 197, 199, 0, 0, 0, 260, 287,
	303, 0, 130, 0, 0, 270, 297, 298, 0, 0,
	131, 155, 151, 223, 201, 126, 166, 257, 174, 181,
	233, 301, 212, 239, 135, 286, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	120, 178, 300, 231, 154, 288, 0, 147, 0, 0,
	0, 0, 0, 0, 113, 114, 121, 129, 136, 146,
	150, 153, 158, 162, 165, 167, 168, 169, 172, 185,
	188, 189, 190, 191, 203, 204, 206, 207, 210, 211,
	214, 216, 217, 218, 220, 221, 222, 226, 228, 230,
	232, 235, 240, 241, 242, 243, 245, 246, 247, 250,
	251, 252, 253, 261, 265, 274, 275, 285, 292, 296,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 176, 0, 0, 142, 184,
	182, 0, 0, 0, 215, 267, 0, 0, 0, 0,
	179, 0, 0, 258, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 293, 0, 0, 0, 227, 0,
	263, 160, 177, 127, 112, 122, 0, 159, 205, 236,
	244, 0, 0, 0, 0, 0, 143, 0, 238, 213,
	284, 0, 0, 219, 237, 180, 273, 229, 282, 283,
	161, 294, 295, 268, 291, 299, 255, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 140, 0, 0,
	0, 254, 128, 269, 195, 200, 137, 139, 138, 123,
	249, 271, 132, 141, 259, 264, 115, 266, 281, 134,
	248, 117, 279, 262, 193, 170, 171, 116, 0, 234,
	148, 156, 145, 208, 0, 0, 0, 276, 277, 144,
	302, 124, 290, 119, 125, 289, 202, 0, 0, 0,
	272, 280, 194, 187, 0, 118, 278, 192, 186, 175,
	152, 163, 224, 183, 225, 164, 198, 197, 199, 0,
	0, 0, 260, 287, 303, 0, 130, 0, 0, 270,
	297, 298, 0, 0, 131, 155, 151, 223, 201, 126,
	166, 257, 174, 181, 233, 301, 212, 239, 135, 286,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 120, 178, 300, 231, 154, 288,
	0, 147, 0, 0, 0, 0, 0, 0, 113, 114,
	121, 129, 136, 146, 150, 153, 158, 162, 165, 167,
	168, 169, 172, 185, 188, 189, 190, 191, 203, 204,
	206, 207, 210, 211, 214, 216, 217, 218, 220, 221,
	222, 226, 228, 230, 232, 235, 240, 241, 242, 243,
	245, 246, 247, 250, 251, 252, 253, 261, 265, 274,
	275, 285, 292, 296, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 176,
	0, 0, 142, 184, 182, 0, 0, 0, 215, 267,
	0, 0, 0, 0, 179, 0, 0, 258, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 0, 227, 0, 263, 160, 177, 127, 112, 122,
	0, 159, 205, 236, 244, 0, 0, 0, 0, 0,
	143, 0, 238, 213, 284, 0, 0, 219, 237, 180,
	273, 229, 282, 283, 161, 294, 295, 268, 291, 299,
	255, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 140, 0, 0, 0, 254, 128, 269, 195, 200,
	137, 139, 138, 123, 249, 271, 132, 141, 259, 264,
	115, 266, 281, 134, 248, 117, 279, 262, 193, 170,
	171, 116, 0, 234, 148, 156, 145, 208, 0, 0,
	0, 276, 277, 144, 302, 124, 290, 119, 125, 289,
	202, 0, 0, 0, 272, 280, 194, 187, 0, 118,
	278, 192, 186, 175, 152, 163, 224, 183, 225, 164,
	198, 197, 199, 0, 0, 0, 260, 287, 303, 0,
	130, 0, 0, 270, 297, 298, 0, 0, 131, 155,
	151, 223, 201, 126, 166, 257, 174, 181, 233, 301,
	212, 239, 135, 286, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 120, 178,
	300, 231, 154, 288, 0, 147, 0, 0, 0, 0,
	0, 0, 113, 114, 121, 129, 136, 146, 150, 153,
	158, 162, 165, 167, 168, 169, 172, 185, 188, 189,
	190, 191, 203, 204, 206, 207, 210, 211, 214, 216,
	217, 218, 220, 221, 222, 226, 228, 230, 232, 235,
	240, 241, 242, 243, 245, 246, 247, 250, 251, 252,
	253, 261, 265, 274, 275, 285, 292, 296, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 906, 149, 0,
	0, 0, 0, 176, 0, 0, 142, 184, 182, 0,
	0, 0, 215, 267, 0, 0, 0, 0, 179, 0,
	0, 258, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 293, 0, 0, 0, 227, 0, 263, 160,
	177, 127, 112, 122, 0, 159, 205, 236, 244, 0,
	0, 0, 0, 0, 143, 0, 238, 213, 284, 0,
	0, 219, 237, 180, 273, 229, 282, 283, 161, 294,
	295, 268, 291, 299, 255, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 140, 0, 0, 0, 254,
	128, 269, 195, 200, 137, 139, 138, 123, 249, 271,
	132, 141, 259, 264, 115, 266, 281, 134, 248, 117,
	279, 262, 193, 170, 171, 116, 0, 234, 148, 156,
	145, 208, 0, 0, 0, 276, 277, 144, 302, 124,
	290, 119, 125, 289, 202, 0, 0, 0, 272, 280,
	194, 187, 0, 118, 278, 192, 186, 175, 152, 163,
	224, 183, 225, 164, 198, 197, 199, 0, 0, 0,
	260, 287, 303, 0, 130, 0, 0, 270, 297, 298,
	0, 0, 131, 155, 151, 223, 201, 126, 166, 257,
	174, 181, 233, 301, 212, 239, 135, 286, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 120, 178, 300, 231, 154, 288, 0, 147,
	0, 0, 0, 0, 0, 0, 113, 114, 121, 129,
	136, 146, 150, 153, 158, 162, 165, 167, 168, 169,
	172, 185, 188, 189, 190, 191, 203, 204, 206, 207,
	210, 211, 214, 216, 217, 218, 220, 221, 222, 226,
	228, 230, 232, 235, 240, 241, 242, 243, 245, 246,
	247, 250, 251, 252, 253, 261, 265, 274, 275, 285,
	292, 296, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 176, 0, 0,
	142, 184, 182, 0, 0, 0, 215, 267, 0, 0,
	0, 0, 179, 0, 0, 258, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 1204, 0, 0, 293, 0, 0, 0,
	227, 0, 263, 160, 177, 127, 112, 122, 0, 159,
	205, 236, 244, 0, 0, 0, 0, 0, 143, 0,
	238, 213, 284, 0, 0, 219, 237, 180, 273, 229,
	282, 283, 161, 294, 295, 268, 291, 299, 255, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 140,
	0, 0, 0, 254, 128, 269, 195, 200, 137, 139,
	138, 123, 249, 271, 132, 141, 259, 264, 115, 266,
	281, 134, 248, 117, 279, 262, 193, 170, 171, 116,
	0, 234, 148, 156, 145, 208, 0, 0, 0, 276,
	277, 144, 302, 124, 290, 119, 125, 289, 202, 0,
	0, 0, 272, 280, 194, 187, 0, 118, 278, 192,
	186, 175, 152, 163, 224, 183, 225, 164, 198, 197,
	199, 0, 0, 0, 260, 287, 303, 0, 130, 0,
	0, 270, 297, 298, 0, 0, 131, 155, 151, 223,
	201, 126, 166, 257, 174, 181, 233, 301, 212, 239,
	135, 286, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 120, 178, 300, 231,
	154, 288, 0, 147, 0, 0, 0, 0, 0, 0,
	113, 114, 121, 129, 136, 146, 150, 153, 158, 162,
	165, 167, 168, 169, 172, 185, 188, 189, 190, 191,
	203, 204, 206, 207, 210, 211, 214, 216, 217, 218,
	220, 221, 222, 226, 228, 230, 232, 235, 240, 241,
	242, 243, 245, 246, 247, 250, 251, 252, 253, 261,
	265, 274, 275, 285, 292, 296, 464, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 176, 0,
	0, 142, 184, 182, 0, 0, 0, 215, 267, 0,
	0, 0, 0, 179, 0, 0, 258, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 227, 0, 263, 160, 177, 127, 112, 122, 0,
	159, 205, 236, 244, 0, 0, 0, 0, 0, 143,
	0, 238, 213, 284, 0, 0, 219, 237, 180, 273,
	229, 282, 283, 161, 294, 295, 268, 291, 299, 255,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	140, 0, 0, 0, 254, 128, 269, 195, 200, 137,
	139, 138, 123, 249, 271, 132, 141, 259, 264, 115,
	266, 281, 134, 248, 117, 279, 262, 193, 170, 171,
	116, 0, 234, 148, 156, 145, 208, 0, 0, 0,
	276, 277, 144, 302, 124, 290, 119, 125, 289, 202,
	0, 0, 0, 272, 280, 194, 187, 0, 118, 278,
	192, 186, 175, 152, 163, 224, 183, 225, 164, 198,
	197, 199, 0, 0, 0, 260, 287, 303, 0, 130,
	0, 0, 270, 297, 298, 0, 0, 131, 155, 151,
	223, 201, 126, 166, 257, 174, 181, 233, 301, 212,
	239, 135, 286, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 120, 178, 300,
	231, 154, 288, 0, 147, 0, 0, 0, 0, 0,
	0, 113, 114, 121, 129, 136, 146, 150, 153, 158,
	162, 165, 167, 168, 169, 172, 185, 188, 189, 190,
	191, 203, 204, 206, 207, 210, 211, 214, 216, 217,
	218, 220, 221, 222, 226, 228, 230, 232, 235, 240,
	241, 242, 243, 245, 246, 247, 250, 251, 252, 253,
	261, 265, 274, 275, 285, 292, 296, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 176, 0, 0, 142, 184, 182, 0, 0,
	0, 215, 267, 0, 0, 0, 0, 179, 0, 0,
	258, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 106, 0,
	0, 293, 0, 0, 0, 227, 0, 263, 160, 177,
	127, 112, 122, 0, 159, 205, 236, 244, 0, 0,
	0, 0, 0, 143, 0, 238, 213, 284, 0, 0,
	219, 237, 180, 273, 229, 282, 283, 161, 294, 295,
	268, 291, 299, 255, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 140, 0, 0, 0, 254, 128,
	269, 195, 200, 137, 139, 138, 123, 249, 271, 132,
	141, 259, 264, 115, 266, 281, 134, 248, 117, 279,
	262, 193, 170, 171, 116, 0, 234, 148, 156, 145,
	208, 0, 0, 0, 276, 277, 144, 302, 124, 290,
	119, 125, 289, 202, 0, 0, 0, 272, 280, 194,
	187, 0, 118, 278, 192, 186, 175, 152, 163, 224,
	183, 225, 164, 198, 197, 199, 0, 0, 0, 260,
	287, 303, 0, 130, 0, 0, 270, 297, 298, 0,
	0, 131, 155, 151, 223, 201, 126, 166, 257, 174,
	181, 233, 301, 212, 239, 135, 286, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 120, 178, 300, 231, 154, 288, 0, 147, 0,
	0, 0, 0, 0, 0, 113, 114, 121, 129, 136,
	146, 150, 153, 158, 162, 165, 167, 168, 169, 172,
	185, 188, 189, 190, 191, 203, 204, 206, 207, 210,
	211, 214, 216, 217, 218, 220, 221, 222, 226, 228,
	230, 232, 235, 240, 241, 242, 243, 245, 246, 247,
	250, 251, 252, 253, 261, 265, 274, 275, 285, 292,
	296, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 176, 0, 0, 142,
	184, 182, 0, 0, 0, 215, 267, 0, 0, 0,
	0, 179, 0, 0, 258, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 0, 227,
	0, 263, 160, 177, 127, 112, 122, 0, 159, 205,
	236, 244, 0, 0, 0, 0, 0, 143, 0, 238,
	213, 284, 0, 0, 219, 237, 180, 273, 229, 282,
	283, 161, 294, 295, 268, 291, 299, 255, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 140, 0,
	0, 0, 254, 128, 269, 195, 200, 137, 139, 138,
	123, 249, 271, 132, 141, 259, 264, 115, 266, 281,
	134, 248, 117, 279, 262, 193, 170, 171, 116, 0,
	234, 148, 156, 145, 208, 0, 0, 0, 276, 277,
	144, 302, 124, 290, 119, 125, 289, 202, 0, 0,
	0, 272, 280, 194, 187, 0, 118, 278, 192, 186,
	175, 152, 163, 224, 183, 225, 164, 198, 197, 199,
	0, 0, 0, 260, 287, 303, 0, 130, 0, 0,
	270, 297, 298, 0, 0, 131, 155, 151, 223, 201,
	126, 166, 257, 174, 181, 233, 301, 212, 239, 135,
	286, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 120, 178, 300, 231, 154,
	288, 0, 147, 0, 0, 0, 0, 0, 0, 113,
	114, 121, 129, 136, 146, 150, 153, 158, 162, 165,
	167, 168, 169, 172, 185, 188, 189, 190, 191, 203,
	204, 206, 207, 210, 211, 214, 216, 217, 218, 220,
	221, 222, 226, 228, 230, 232, 235, 240, 241, 242,
	243, 245, 246, 247, 250, 251, 252, 253, 261, 265,
	274, 275, 285, 292, 296, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	176, 0, 0, 142, 184, 182, 0, 0, 0, 215,
	267, 0, 0, 0, 0, 179, 0, 0, 258, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 227, 0, 263, 160, 177, 127, 112,
	122, 0, 159, 205, 236, 244, 0, 0, 0, 0,
	0, 143, 0, 238, 213, 284, 0, 0, 219, 237,
	180, 273, 229, 282, 283, 161, 294, 295, 268, 291,
	299, 255, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 140, 0, 0, 0, 254, 128, 269, 195,
	200, 137, 139, 138, 123, 249, 271, 132, 141, 259,
	264, 115, 266, 281, 134, 248, 117, 279, 262, 193,
	170, 171, 116, 0, 234, 148, 156, 145, 208, 0,
	0, 0, 276, 277, 144, 302, 124, 290, 119, 125,
	289, 202, 0, 0, 0, 272, 280, 194, 187, 0,
	118, 278, 192, 186, 175, 152, 163, 224, 183, 225,
	164, 198, 197, 199, 0, 0, 0, 260, 287, 303,
	0, 130, 0, 0, 270, 297, 298, 0, 0, 131,
	155, 151, 223, 201, 126, 166, 257, 174, 181, 233,
	301, 212, 239, 135, 286, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 120,
	178, 300, 231, 154, 288, 0, 147, 0, 0, 0,
	0, 0, 0, 113, 114, 121, 129, 136, 146, 150,
	153, 158, 162, 165, 167, 168, 169, 172, 185, 188,
	189, 190, 191, 203, 204, 206, 207, 210, 211, 214,
	216, 217, 218, 220, 221, 222, 226, 228, 230, 232,
	235, 240, 241, 242, 243, 245, 246, 247, 250, 251,
	252, 253, 261, 265, 274, 275, 285, 292, 296, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 176, 0, 0, 142, 184, 182,
	0, 0, 0, 215, 267, 0, 0, 0, 0, 179,
	0, 0, 258, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 0, 227, 0, 263,
	160, 177, 127, 112, 122, 0, 159, 205, 236, 244,
	0, 0, 0, 0, 0, 143, 0, 238, 213, 284,
	0, 0, 219, 237, 180, 273, 229, 282, 283, 161,
	294, 295, 268, 291, 299, 255, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 140, 0, 0, 0,
	254, 128, 269, 195, 200, 137, 139, 138, 123, 249,
	271, 132, 141, 259, 264, 115, 266, 281, 134, 248,
	117, 279, 262, 193, 170, 171, 116, 0, 234, 148,
	156, 145, 208, 0, 0, 0, 276, 277, 144, 302,
	124, 290, 119, 481, 289, 202, 0, 0, 0, 272,
	280, 194, 187, 0, 118, 278, 192, 186, 175, 152,
	163, 224, 183, 225, 164, 198, 197, 199, 0, 0,
	0, 260, 287, 303, 0, 130, 0, 0, 270, 297,
	298, 0, 0, 131, 155, 151, 223, 482, 480, 166,
	257, 174, 181, 233, 301, 212, 239, 135, 286, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 120, 178, 300, 231, 154, 288, 0,
	147, 0, 0, 0, 0, 0, 0, 113, 114, 121,
	129, 136, 146, 150, 153, 158, 162, 165, 167, 168,
	169, 172, 185, 188, 189, 190, 191, 203, 204, 206,
	207, 210, 211, 214, 216, 217, 218, 220, 221, 222,
	226, 228, 230, 232, 235, 240, 241, 242, 243, 245,
	246, 247, 250, 251, 252, 253, 261, 265, 274, 275,
	285, 292, 296, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 176, 0,
	0, 142, 184, 182, 0, 0, 0, 215, 267, 0,
	0, 0, 0, 179, 0, 0, 258, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 293, 0, 0,
	0, 227, 0, 263, 160, 177, 127, 112, 122, 0,
	159, 205, 236, 244, 0, 0, 0, 0, 0, 143,
	0, 238, 213, 284, 0, 0, 219, 237, 180, 273,
	229, 282, 283, 161, 294, 295, 268, 291, 299, 255,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	140, 0, 0, 0, 254, 128, 269, 195, 200, 137,
	139, 138, 123, 249, 271, 132, 141, 259, 264, 115,
	266, 281, 134, 248, 117, 279, 262, 193, 170, 171,
	116, 0, 234, 148, 156, 145, 208, 0, 0, 0,
	276, 277, 144, 302, 124, 290, 119, 125, 289, 202,
	0, 0, 0, 272, 280, 194, 187, 0, 118, 278,
	192, 186, 175, 152, 163, 224, 183, 225, 164, 198,
	197, 199, 0, 0, 0, 260, 287, 303, 0, 130,
	0, 0, 270, 297, 298, 0, 0, 131, 155, 151,
	223, 201, 126, 166, 257, 174, 181, 233, 301, 212,
	239, 135, 286, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 120, 178, 300,
	231, 154, 288, 0, 147, 0, 0, 0, 0, 0,
	0, 113, 114, 121, 129, 136, 146, 150, 153, 158,
	162, 165, 167, 168, 169, 172, 185, 188, 189, 190,
	191, 203, 204, 206, 207, 210, 211, 214, 216, 217,
	218, 220, 221, 222, 226, 228, 230, 232, 235, 240,
	241, 242, 243, 245, 246, 247, 250, 251, 252, 253,
	261, 265, 274, 275, 285, 292, 296, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 176, 0, 0, 142, 184, 182, 0, 0,
	0, 215, 267, 0, 0, 0, 0, 179, 0, 0,
	258, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 0, 227, 0, 263, 160, 177,
	127, 112, 122, 0, 159, 205, 236, 244, 0, 0,
	0, 0, 0, 143, 0, 238, 213, 284, 0, 0,
	219, 237, 180, 273, 229, 282, 283, 161, 294, 295,
	268, 291, 299, 255, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 140, 0, 0, 0, 254, 128,
	269, 195, 200, 137, 139, 138, 123, 249, 271, 132,
	141, 259, 264, 115, 266, 927, 134, 248, 117, 279,
	262, 193, 170, 171, 116, 0, 234, 148, 156, 145,
	208, 0, 0, 0, 276, 277, 144, 302, 124, 290,
	119, 481, 289, 202, 0, 0, 0, 272, 280, 194,
	187, 0, 118, 278, 192, 186, 175, 152, 163, 224,
	183, 225, 164, 198, 197, 199, 0, 0, 0, 260,
	287, 303, 0, 130, 0, 0, 270, 297, 298, 0,
	0, 131, 155, 151, 223, 482, 480, 166, 257, 174,
	181, 233, 301, 212, 239, 135, 286, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 120, 178, 300, 231, 154, 288, 0, 147, 0,
	0, 0, 0, 0, 0, 113, 114, 121, 129, 136,
	146, 150, 153, 158, 162, 165, 167, 168, 169, 172,
	185, 188, 189, 190, 191, 203, 204, 206, 207, 210,
	211, 214, 216, 217, 218, 220, 221, 222, 226, 228,
	230, 232, 235, 240, 241, 242, 243, 245, 246, 247,
	250, 251, 252, 253, 261, 265, 274, 275, 285, 292,
	296, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 176, 0, 0, 142,
	184, 182, 0, 0, 0, 215, 267, 0, 0, 0,
	0, 179, 0, 0, 258, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 293, 0, 0, 0, 227,
	0, 263, 160, 177, 127, 112, 122, 0, 159, 205,
	236, 244, 0, 0, 0, 0, 0, 143, 0, 238,
	213, 284, 0, 0, 219, 237, 180, 273, 229, 282,
	283, 161, 294, 295, 268, 291, 299, 255, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 140, 0,
	0, 0, 254, 128, 269, 195, 200, 137, 139, 138,
	123, 249, 271, 132, 141, 259, 264, 115, 266, 472,
	134, 248, 117, 279, 262, 193, 170, 171, 116, 0,
	234, 148, 156, 145, 208, 0, 0, 0, 276, 277,
	144, 302, 124, 290, 119, 481, 289, 202, 0, 0,
	0, 272, 280, 194, 187, 0, 118, 278, 192, 186,
	175, 152, 163, 224, 183, 225, 164, 198, 197, 199,
	0, 0, 0, 260, 287, 303, 0, 130, 0, 0,
	270, 297, 298, 0, 0, 131, 155, 151, 223, 482,
	480, 475, 474, 174, 181, 233, 301, 212, 239, 135,
	286, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 120, 178, 300, 231, 154,
	288, 0, 147, 0, 0, 0, 0, 0, 0, 113,
	114, 121, 129, 136, 146, 150, 153, 158, 162, 165,
	167, 168, 169, 172, 185, 188, 189, 190, 191, 203,
	204, 206, 207, 210, 211, 214, 216, 217, 218, 220,
	221, 222, 226, 228, 230, 232, 235, 240, 241, 242,
	243, 245, 246, 247, 250, 251, 252, 253, 261, 265,
	274, 275, 285, 292, 296,
}

var yyPact = [...]int{
	2571, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1377, 1429, -1000,
	-1000, -1000, -1000, -1000, -1000, 408, 178, -1000, -1000, -1000,
	203, 81, 19549, 202, 2717, 20357, -1000, -1000, -1000, -1000,
	162, 20357, -1000, -1000, -108, -110, -1000, 19, 956, 1253,
	1063, -1000, -1000, 24, 13, -1000, -1000, -1000, -1000, -1000,
	-1000, 1356, 1374, 1138, 1349, 1200, -1000, 9406, 184, 184,
	19145, 21973, -1000, -1000, 500, 20357, 199, 20357, -168, 176,
	176, 107, 176, -1000, 458, -1000, -1000, -1000, 20357, 180,
	19953, 180, 180, 180, 180, 180, 20357, -1000, 263, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20357, 951, 1320, 6103, 95, 6103,
	6103, -1000, 393, -1000, 91, 88, 96, 6103, 17, 494,
	76, 15, -1000, 6103, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 208, 1063, 452, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1296, 796, 1146, -77, 814, 201, 20357, 440, -1000,
	-1000, 1300, 11438, 11842, 1377, -1000, 1063, -1000, -1000, -1000,
	1247, -1000, -1000, 515, 1400, -1000, 14266, 262, -1000, 11438,
	3086, 1076, -1000, -1000, 1076, -1000, -1000, 226, -1000, -1000,
	13054, 13054, 13054, 13054, 13054, 13054, 13054, 13054, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1076, -1000, 10630, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 11438, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 18330, 17522, 20357, 1126, 1081, -1000, -1000, 252,
	787, 21569, -145, -1000, -1000, -1000, 433, 17118, -1000, 241,
	-1000, 1282, -1000, 975, 20357, -1000, 3950, -1000, 19953, 1346,
	193, 949, 477, 948, 947, 946, 20357, 944, 1073, 191,
	20357, 1333, 1169, -1000, -1000, 20357, 942, 940, 939, 938,
	-1000, 8193, -1000, 6103, 6103, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 176, 176, 6103, 6103, 6103, 20357,
	20357, 20357, -1000, -1000, 20357, -1000, -1000, 455, 455, 6103,
	6103, -1000, 1399, 383, 383, -1000, -1000, -1000, -1000, 11438,
	-1000, 13054, 302, -1000, 1166, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 933, -1000, -1000, 565, -1000, 716, -1000, 11034,
	-298, -1000, -1000, -1000, 20357, 6103, 97, 140, 128, 20357,
	-1000, 1418, 286, 730, 240, 1072, -1000, 608, 1327, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 1076, 1076, 1076, 1076, 1076, 1076, 1356, 814, 1200,
	797, 1075, -1000, -1000, -1000, 20357, -1000, 11438, 11438, 672,
	-1000, 15478, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6939, 376, 13054, 541, 483, 13054,
	13054, 13054, 13054, 13054, 13054, 13054, 13054, 13054, 13054, 13054,
	13054, 13054, 13054, 13054, 590, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 930, -1000, 1063, 981, 981, 269, 269,
	269, 269, 269, 269, 269, 15882, 1341, 814, 937, 553,
	10630, 9406, 9406, 814, 11438, 11438, 10214, 9810, 9406, 9406,
	1341, 397, 553, 21165, -1000, -1000, 12650, -1000, -1000, -1000,
	-1000, -1000, 814, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19953, 19953, 9406, 9406, 9406, 9406, 814, 814, 9406,
	9406, 9406, 9406, 9406, 814, 814, 814, 814, 1341, 1341,
	9406, 9406, 9406, 1341, 9406, 9406, 1341, 9406, 9406, 9406,
	9406, 1341, 9406, 9406, 9406, 118, 18734, -1000, 1059, 1171,
	-1000, -1000, -1000, 1345, 16714, 13862, 118, 997, 17522, 20357,
	-1000, -1000, 17522, 20357, 6521, 20761, 787, -145, 1061, -1000,
	-141, -138, 8598, 248, -1000, -1000, -1000, 7775, -1000, 5267,
	762, 971, -1000, -72, -1000, -1000, -1000, 1115, -1000, 1115,
	139, -32, 1115, 1115, 1115, 1115, 1115, -29, -29, -29,
	-29, -31, -1000, -1000, -1000, -1000, -1000, 1140, 1135, -1000,
	1115, 1115, 1115, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1132, 157, 1132, 1122, 1122, 1122, 1122, 1127, -1000,
	20357, 6103, 1332, 6103, 87, 1134, -1000, -1000, 20357, 20357,
	1071, -1000, 20357, 1070, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 927, 923, -1000, -1000, -1000, -1000,
	-1000, -1000, 392, -1000, 710, 11438, -1000, -1000, -1000, 20357,
	1344, 20357, 20357, 455, 553, 970, -1000, 706, 20357, -1000,
	1068, -1000, 432, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 922, 18330, 705,
	448, -1000, 20357, 20357, 20357, 20357, 20357, 224, -1000, 1211,
	11438, 11438, 7775, 11842, -1000, -1000, -1000, -1000, 1300, -1000,
	1341, 1364, -1000, 1220, 1219, 9406, -1000, -1000, 376, 524,
	-1000, -1000, 626, -1000, -1000, -1000, -1000, 238, 1076, -1000,
	2684, -1000, -1000, -1000, -1000, 541, 13054, 13054, 13054, 970,
	2684, 2984, 748, 1043, 269, 571, 571, 281, 281, 281,
	281, 281, 562, 562, -1000, -1000, -1000, 814, -1000, -1000,
	-1000, 9406, -1000, 11438, -1000, 814, 911, -1000, 911, -1000,
	715, 786, 502, 1398, 911, 489, 1397, 911, 911, 911,
	9406, 499, -1000, 11438, 814, -1000, 2223, 1066, 1065, 911,
	814, 1064, 911, 911, -179, -179, 814, 911, 814, 911,
	911, -179, -179, -179, -179, 9406, 9406, 911, 911, 911,
	9406, 911, 911, 9406, 911, 911, 911, 911, 9406, 911,
	911, 911, 1168, 1076, 20357, -1000, 20761, 17522, 17522, 17522,
	17522, 17522, -1000, 1191, 1188, -1000, 1185, 1184, 1193, 15074,
	-1000, 918, 16714, -1000, 1076, -1000, 14670, 422, 198, 197,
	196, -1000, -1000, -1000, 1385, 17522, 1037, -1000, 1037, -1000,
	236, -1000, -1000, 1061, -145, -149, -1000, -1000, -1000, -1000,
	553, -1000, 597, -1000, 234, 1060, 4849, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1133, 914, -1000, 1231, 342, 421,
	764, 1228, -1000, -1000, -1000, 518, -75, -1000, -1000, 593,
	-29, -29, 1115, 1115, 138, 1115, -1000, -29, -1000, -1000,
	-1000, 248, 1280, 248, 248, 248, 248, -29, 689, 689,
	-1000, -1000, -1000, -1000, 580, -1000, 1132, -1000, -1000, 563,
	-1000, -1000, -1000, 1159, 19953, 1063, 1337, -1000, -1000, -1000,
	1390, -1000, -1000, 181, 187, -1000, 6103, 20357, 6103, 6103,
	1385, 892, 864, -1000, 553, 383, 455, 1267, -1000, -1000,
	-1000, -1000, 13054, -1000, -1000, 565, 981, -1000, 118, -1000,
	-1000, 657, 497, 507, 158, 158, -1000, 401, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 117, 1082, -1000,
	-1000, -1000, -1000, 25, 89, 1209, 553, 553, -1000, -1000,
	20357, -1000, -1000, -1000, -1000, 1099, -1000, -1000, -1000, 5685,
	9406, -1000, 970, 2684, 1004, -1000, 13054, -1000, 814, 553,
	-1000, 9406, -1000, -1000, 126, 590, 126, 13054, 13054, -1000,
	13054, 13054, -1000, -214, -1000, 1036, 409, -1000, 11438, 745,
	-1000, -1000, 13054, 13054, -1000, -1000, -1000, -1000, -1000, 17926,
	-1000, -179, -179, -179, -179, -179, -1000, -1000, -1000, -1000,
	911, 911, -179, -179, -179, 911, -179, -179, 911, -179,
	-179, -179, -179, 911, -179, -179, -179, 1157, 20761, 1076,
	-1000, 16298, 19953, -1000, 1058, 1171, 1130, 1156, 1041, -1000,
	-1000, -1000, -1000, 1187, -1000, 1186, -1000, -1000, -1000, -1000,
	19953, 13054, 422, -1000, 1076, 1076, 1076, 1377, 11438, 1037,
	-1000, -1000, 264, -1000, -1000, -150, -143, -1000, -1000, -1000,
	7357, 5267, -1000, 5267, 19953, 146, -1000, 764, 764, -1000,
	-1000, -1000, 1123, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	505, 13054, 1417, -1000, 1230, -1000, 1229, 679, -1000, -1000,
	967, 248, 248, -29, -1000, -1000, 1115, -1000, 248, -1000,
	423, -1000, -1000, -1000, -1000, 248, 889, -1000, 885, 1055,
	-1000, 868, 20357, -1000, -1000, -1000, 1155, -1000, -1000, -1000,
	886, 1040, -1000, 3950, 863, 862, 861, 20357, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 455, -1000, 13054, 2684, -1000,
	-1000, -29, -1000, 772, -1000, 764, 332, -1000, -1000, -1000,
	860, 1228, -1000, -1000, 855, -1000, 852, 19953, 1227, 848,
	20357, 19953, -1000, -1000, 770, 839, 11438, -1000, 19953, -219,
	822, 19953, 19953, 19953, -1000, -1000, 1385, 17522, -1000, -1000,
	814, -1000, 13054, 2684, -1000, -1000, 814, 1115, 1115, -1000,
	1115, 1122, -1000, 1115, 4, 1115, 1, 814, 814, 2948,
	2655, 2605, 2379, 1076, -175, -1000, 553, 11438, 2357, 2278,
	-1000, 298, -1000, -1000, -1000, -1000, -1000, -179, -179, -1000,
	-1000, -1000, -1000, -179, -1000, -1000, -179, -1000, -1000, -1000,
	-1000, -179, -1000, -1000, -1000, -1000, 1323, 999, 979, -1000,
	-1000, 9002, 814, 858, 233, 843, -1000, 1377, -1000, -1000,
	11438, 1118, -1000, 11438, -1000, -1000, -1000, 843, 857, -1000,
	19953, 19953, 19953, 1356, 553, -1000, -1000, -1000, -1000, 4849,
	-1000, 837, -1000, 1115, -1000, -1000, -1000, 19953, -1000, 2684,
	-115, -1000, -1000, -1000, -1000, -1000, -1000, 248, -1000, -1000,
	-1000, -1000, -1000, -29, 646, -29, 559, -1000, 555, 1114,
	-1000, 1063, 20357, 47, 181, -1000, 3950, 3950, 3950, -1000,
	-1000, 2684, -125, 770, 137, -1000, 1127, 342, 146, -1000,
	-1000, -1000, -1000, 782, 329, -1000, 186, 137, 770, 553,
	1328, -1000, 7357, -1000, -1000, 1113, 1131, -1000, 1381, 1027,
	-1000, 2684, -1000, -1000, 156, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13054, 13054, 13054, 13054, 13054, 814, 645,
	553, 13054, 13054, 814, 1373, -1000, -1000, -1000, -1000, -1000,
	1226, -1000, 1076, -1000, -1000, 1001, 19953, 19953, -1000, 19953,
	1356, 553, 19953, 553, 13458, -1000, 15074, 835, -1000, 835,
	835, -1000, 243, 19953, 1327, 829, -1000, -1000, 248, -1000,
	248, 844, 838, 19953, -1000, 1353, -1000, 47, -1000, 640,
	42, 52, -1000, 41, 40, 38, 37, 31, -1000, -1000,
	-1000, -1000, 1246, 1242, 830, -1000, -1000, 768, 1110, 764,
	-1000, -1000, 743, -1000, -1000, 19953, -1000, 137, 1076, 1026,
	-1000, 405, 19953, 20357, 1379, 1372, -1000, -1000, 2223, 2223,
	2223, 2223, 64, -1000, -1000, 2223, 2223, -1000, 11438, 1410,
	-1000, 1076, -1000, 1063, 218, -1000, -1000, -1000, 826, -1000,
	422, 19953, -1000, -1000, -1000, 243, -1000, 726, 401, 632,
	-1000, -1000, 134, -1000, -1000, -1000, -1000, 819, -1000, 70,
	2803, -1000, -1000, -1000, -1000, -1000, -1000, 1252, 1249, 59,
	163, 1234, 1236, 1371, -1000, -1000, -1000, 19953, 1127, -1000,
	-1000, -1000, -1000, 114, 7357, 5267, 817, -1000, -1000, 11842,
	11842, -1000, -1000, -1000, -1000, 814, 121, -223, -1000, -1000,
	913, 20761, 979, 814, 19953, -1000, -1000, -1000, -1000, -1000,
	549, -1000, 20357, 243, 66, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11438, 11438,
	2803, -1000, -1000, -1000, -1000, 1108, 527, 1242, 1368, 1240,
	1238, -1000, 629, -1000, 813, 1095, -1000, 807, -1000, 19953,
	-1000, -1000, 1082, -1000, 553, -1000, 978, -1000, 553, -1000,
	-1000, 1208, -217, -226, 814, 787, -1000, -1000, -1000, 1078,
	-1000, 243, 65, -1000, 464, 699, -301, -1000, -1000, 19953,
	1245, -1000, 627, -1000, 1366, 1361, -1000, 243, 19953, -1000,
	114, 1218, -219, 11842, -1000, 1207, -1000, -1000, 19953, -1000,
	719, 717, 570, -1000, 11438, 605, 2531, 785, -1000, -1000,
	609, 554, -1000, 781, -1000, 111, -1000, -1000, -221, 775,
	251, -1000, -1000, 467, 605, -1000, 611, -303, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 605, -1000,
	-1000, -1000, -1000, -1000, 243, 106, -224, 1153, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -304, 605, 256, -306, -1000,
	1076, -228, 1152, 1151, 1394, -1000, 784, -307, 170, 605,
	547, -1000, -1000, 11438, 615, 12246, -1000, -1000, 1396, -1000,
	1391, 318, 318, 461, 605, -1000, -308, 169, 605, -1000,
	509, -1000, 2223, 814, -1000, -1000, -1000, 150, 574, -1000,
	-1000, 501, -1000, -309, 605, -1000, -1000, -1000, -1000, -1000,
	161, 486, -311, -1000, 159, 605, -1000,
}

var yyPgo = [...]int{
	0, 1700, 151, 575, 1699, 1698, 1697, 15, 13, 11,
	90, 1693, 1494, 1492, 1477, 1475, 1692, 1471, 5, 2,
	28, 6, 21, 9, 1689, 37, 1686, 1685, 24, 1683,
	7, 83, 1682, 1681, 1680, 1678, 1677, 1469, 1676, 1675,
	1674, 1673, 1672, 1465, 1458, 1668, 1662, 1456, 1454, 1661,
	1659, 1448, 1444, 1440, 1657, 129, 1655, 1654, 1653, 148,
	1652, 106, 1651, 1649, 1647, 1646, 71, 1479, 77, 81,
	606, 1643, 18, 1641, 92, 127, 88, 1640, 67, 1639,
	1638, 108, 1634, 1633, 1632, 89, 1631, 1629, 2946, 104,
	103, 1628, 44, 36, 122, 1627, 1626, 1624, 1622, 73,
	138, 1619, 1615, 1614, 59, 1611, 1610, 119, 1609, 1608,
	1607, 98, 52, 1606, 48, 47, 46, 1604, 227, 30,
	1601, 85, 1600, 1599, 1597, 1596, 1595, 27, 1594, 42,
	1592, 99, 231, 780, 10, 45, 51, 87, 1591, 75,
	1589, 72, 64, 56, 31, 100, 1588, 109, 102, 1584,
	1583, 756, 1582, 1581, 82, 1580, 55, 80, 1579, 719,
	107, 63, 1578, 1577, 1576, 1575, 60, 69, 1574, 1572,
	40, 1749, 95, 1206, 17, 1645, 101, 105, 1571, 35,
	1570, 2869, 96, 43, 68, 1569, 1568, 66, 57, 1563,
	1560, 1559, 1556, 1555, 1553, 1552, 215, 1551, 1548, 1544,
	1541, 114, 84, 1540, 1538, 78, 62, 1537, 1534, 1533,
	1532, 86, 53, 1531, 76, 79, 1529, 1528, 1527, 1526,
	49, 41, 1525, 1523, 1522, 1521, 65, 38, 1520, 39,
	34, 29, 50, 20, 58, 1518, 23, 1513, 32, 1512,
	26, 1510, 19, 70, 3, 4, 8, 1509, 1508, 1506,
	1505, 25, 1504, 1503, 1502, 1497, 1496, 54, 1488, 1484,
	33, 1482, 1480, 1461, 0, 144, 110, 1446, 1442, 111,
}

var yyR1 = [...]int{
	0, 262, 263, 263, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 54,
	2, 2, 2, 6, 3, 4, 4, 5, 5, 7,
	7, 58, 58, 8, 9, 9, 9, 9, 266, 266,
	83, 83, 81, 81, 82, 82, 141, 141, 10, 10,
	10, 10, 145, 145, 148, 148, 148, 149, 149, 149,
	149, 185, 185, 134, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 255, 255, 256, 256, 257, 257, 257,
	257, 258, 258, 259, 259, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 26, 26,
	169, 169, 35, 35, 36, 36, 36, 130, 130, 130,
	11, 11, 11, 11, 11, 18, 20, 20, 27, 27,
	28, 21, 21, 21, 21, 29, 29, 30, 22, 22,
	34, 34, 32, 32, 31, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 17, 254, 254,
	254, 25, 25, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 242, 242, 241, 240, 240, 239, 239, 238,
	41, 222, 224, 224, 223, 223, 223, 223, 212, 189,
	189, 189, 189, 189, 189, 189, 188, 188, 188, 188,
	192, 192, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 191, 191, 191, 191, 191, 191, 191, 191, 193,
	193, 193, 193, 193, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 195,
	195, 195, 195, 195, 195, 195, 195, 211, 211, 196,
	196, 205, 205, 206, 206, 206, 203, 203, 204, 204,
	207, 207, 199, 200, 208, 201, 201, 201, 202, 202,
	202, 210, 210, 210, 210, 197, 213, 213, 233, 233,
	232, 232, 231, 231, 231, 221, 221, 228, 228, 228,
	228, 228, 216, 216, 216, 215, 215, 217, 217, 220,
	220, 230, 230, 229, 214, 214, 234, 234, 234, 234,
	234, 218, 218, 219, 219, 219, 245, 246, 244, 244,
	244, 244, 244, 225, 225, 225, 226, 226, 226, 227,
	227, 227, 247, 247, 37, 37, 37, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 129, 129, 129, 39,
	40, 40, 40, 40, 40, 40, 40, 40, 167, 167,
	243, 243, 243, 243, 243, 237, 235, 235, 236, 236,
	13, 42, 42, 14, 14, 14, 14, 14, 14, 14,
	15, 15, 43, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 71, 155, 155, 153,
	153, 156, 156, 154, 154, 154, 157, 157, 157, 158,
	158, 186, 186, 186, 45, 45, 50, 50, 53, 51,
	52, 168, 168, 48, 48, 49, 49, 49, 49, 64,
	64, 267, 267, 47, 47, 46, 46, 46, 46, 16,
	268, 55, 56, 56, 57, 57, 57, 61, 61, 61,
	59, 59, 59, 60, 60, 68, 68, 67, 67, 69,
	69, 69, 69, 132, 132, 132, 133, 133, 178, 178,
	178, 177, 177, 177, 177, 73, 73, 74, 74, 75,
	75, 76, 76, 76, 76, 91, 91, 92, 92, 92,
	92, 92, 102, 102, 140, 140, 139, 139, 142, 142,
	77, 77, 77, 77, 78, 78, 79, 79, 80, 80,
	166, 166, 183, 183, 183, 84, 84, 84, 86, 85,
	85, 85, 85, 87, 87, 89, 89, 89, 88, 88,
	90, 93, 93, 93, 93, 94, 94, 70, 70, 70,
	70, 70, 70, 70, 152, 152, 96, 96, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 110, 110,
	110, 110, 110, 110, 97, 97, 97, 97, 97, 97,
	97, 66, 66, 111, 111, 111, 118, 112, 112, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 105, 105, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 269, 269, 107, 106, 106,
	106, 106, 106, 106, 62, 62, 62, 62, 62, 184,
	184, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 122, 122, 63, 63, 120, 120,
	121, 123, 123, 119, 119, 119, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 124, 124, 113,
	113, 72, 72, 125, 125, 126, 126, 127, 127, 128,
	128, 131, 131, 135, 135, 135, 136, 136, 136, 136,
	137, 137, 137, 98, 98, 98, 98, 98, 98, 138,
	138, 138, 138, 143, 143, 114, 114, 116, 116, 115,
	117, 144, 144, 147, 147, 147, 147, 146, 146, 146,
	180, 180, 180, 150, 150, 159, 159, 160, 160, 151,
	151, 198, 198, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 165, 165, 164, 164, 164, 161, 161, 161,
	162, 162, 179, 179, 175, 175, 176, 176, 181, 181,
	182, 182, 248, 248, 209, 209, 252, 252, 65, 65,
	251, 251, 253, 253, 261, 261, 249, 249, 250, 250,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 264, 265, 170, 171, 171,
	171,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 9, 8, 7, 6, 6, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 0, 2, 2, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 1, 3,
	0, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 2, 4, 1, 3, 3, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	1, 2, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 2, 1, 2, 1, 2, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 2, 1, 1, 1, 6, 10, 9,
	7, 7, 7, 9, 7, 12, 14, 7, 7, 9,
	9, 10, 5, 6, 8, 7, 0, 1, 2, 4,
	7, 5, 5, 5, 12, 7, 5, 9, 0, 1,
	1, 1, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 4, 6, 4, 4, 4, 4, 4,
	3, 2, 3, 4, 4, 3, 6, 6, 4, 4,
	4, 4, 4, 4, 3, 3, 2, 6, 2, 4,
	4, 4, 3, 7, 6, 5, 4, 2, 4, 3,
	4, 3, 3, 5, 2, 3, 3, 1, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 2, 2, 2, 3, 3, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 1, 3, 1,
	2, 3, 5, 2, 4, 7, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 1, 3, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 9, 4, 7, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 1,
	3, 1, 1, 0, 2, 1, 1, 0, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 4, 4,
	0, 2, 4, 2, 1, 3, 5, 4, 6, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 3, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -262, -1, -2, -6, -7, -8, -9, -10, -12,
	-37, -13, -14, -15, -43, -44, -45, -50, -51, -52,
	-48, -47, -46, -16, -22, -17, -54, -3, -4, 6,
	7, -58, 9, 10, 30, -41, 129, -38, -39, -40,
	132, 131, 168, 133, 161, 63, 214, -53, 217, 218,
	-267, -168, 166, 167, 31, 32, 135, 212, 20, 37,
	-264, 8, 309, 130, 215, 163, 162, 26, 67, -263,
	424, -127, 15, -57, 5, -55, -268, -55, -55, -55,
	-55, -55, -222, -224, 67, 104, -162, 142, 85, 300,
	138, -169, 139, -161, 190, 44, 149, 148, 139, 139,
	140, 142, 300, 138, 176, 175, 139, -88, -181, 70,
	-173, 351, 152, 366, 367, 214, 225, 219, 253, 241,
	352, 368, 153, 207, 239, 242, 287, 151, 200, 369,
	274, 282, 210, 79, 217, 296, 370, 204, 206, 205,
	195, 211, 36, 164, 237, 230, 371, 359, 228, 28,
	372, 284, 258, 373, 356, 283, 229, 135, 374, 155,
	149, 178, 375, 259, 263, 376, 288, 377, 378, 379,
	223, 224, 380, 191, 290, 257, 33, 150, 353, 48,
	173, 291, 38, 261, 37, 381, 256, 251, 382, 383,
	384, 385, 255, 222, 250, 202, 52, 265, 264, 266,
	203, 286, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 399, 146, 400, 175,
	401, 355, 402, 292, 227, 403, 157, 172, 166, 295,
	404, 405, 406, 407, 158, 408, 409, 410, 218, 208,
	411, 412, 413, 414, 199, 184, 298, 289, 51, 212,
	270, 415, 221, 148, 213, 416, 215, 43, 181, 201,
	277, 209, 248, 174, 417, 418, 235, 236, 254, 220,
	249, 216, 176, 177, 168, 419, 297, 271, 357, 243,
	240, 182, 420, 142, 179, 180, 421, 278, 279, 183,
	354, 293, 238, 272, 139, 122, 242, 287, 129, 275,
	276, 284, -216, 285, 175, 178, -186, 139, -153, 274,
	278, 279, 183, 70, 140, 141, 33, 289, 288, 280,
	-181, -64, 133, 169, -88, -170, -170, -170, 277, 277,
	-170, -34, 213, 70, 36, -2, -151, 142, 279, 144,
	216, -136, 17, 16, -5, -3, -264, 6, 21, 22,
	-61, 53, 54, -56, -69, 113, -70, -181, -95, 87,
	-100, 29, 70, -173, 24, -99, -96, -119, -117, -118,
	122, 123, 124, 111, 112, 119, 88, 125, -105, -103,
	-104, -106, -108, -109, 72, 71, 80, 73, 74, 75,
	76, 81, 82, 83, -175, -115, -264, 57, 58, 138,
	310, 311, 312, 313, 350, 159, 314, 90, 47, 299,
	308, 307, 306, 304, 305, 301, 303, 302, 316, 317,
	145, 300, 117, 309, 339, 340, 341, 342, 343, 344,
	345, 346, 348, 349, 347, 329, 322, 323, 324, 325,
	326, 327, 328, 330, 331, 332, 333, 334, 335, 336,
	337, 338, -151, -151, 11, -81, -82, -88, -90, -181,
	-144, -185, 216, -147, 289, 288, -119, -146, -175, -181,
	287, 242, 286, -223, 104, -212, 70, -88, 140, -88,
	309, -160, 145, -160, 176, 175, -160, 96, -42, -88,
	-159, 145, -175, 70, -173, -159, -159, -159, -159, -159,
	-88, 126, -88, 70, 30, -171, -264, -176, -175, -172,
	134, 160, 86, 358, 23, 25, 268, 322, 89, 122,
	323, 324, 325, 16, 20, 90, 121, 310, 326, 129,
	61, 301, 303, 299, 300, 275, 29, 10, 26, 162,
	194, 22, 115, 131, 93, 94, 95, 165, 24, 163,
	83, 159, 19, 64, 11, 13, 320, 321, 14, 145,
	144, 106, 192, 140, 59, 8, 125, 27, 103, 55,
	327, 328, 362, 45, 363, 57, 104, 17, 273, 304,
	305, 31, 350, 329, 170, 364, 330, 117, 197, 62,
	49, 87, 81, 34, 84, 65, 85, 15, 193, 60,
	318, 196, 365, 105, 132, 309, 58, 138, 6, 315,
	30, 161, 333, 332, 331, 334, 198, 56, 312, 313,
	335, 422, 139, 92, 316, 317, 143, 82, 5, 44,
	32, 9, 63, 66, 306, 307, 308, 47, 337, 336,
	338, 91, 12, 319, 300, 138, 70, 175, 178, 139,
	176, 142, -171, -171, -218, 11, 106, 181, 181, 181,
	182, -171, -156, -155, 177, 282, 283, 277, 281, 12,
	-71, 104, 182, 277, 180, -171, -49, -2, -9, -7,
	-8, -2, 96, -170, -170, 30, 72, 50, -254, 67,
	-209, 273, -265, 69, 139, -88, 129, 131, 134, 65,
	-137, 19, 31, -70, -181, -128, -131, -70, -174, 322,
	323, 324, 325, 326, 339, 340, 341, 327, 328, 342,
	343, 344, 329, 330, 345, 346, 348, 349, 347, 333,
	332, 331, 334, 335, 337, 336, 338, -127, -2, -55,
	49, -59, 21, 22, 78, 11, -178, 86, 85, 103,
	-177, 23, 70, -173, -174, 72, 322, 323, 324, 325,
	326, 339, 340, 341, 327, 328, 342, 343, 344, 329,
	330, 345, 346, 348, 349, 347, 333, 332, 331, 334,
	335, 337, 336, 338, 126, -70, -97, 106, 87, 104,
	105, 89, 108, 107, 118, 111, 112, 113, 114, 115,
	116, 117, 109, 110, 121, 96, 97, 98, 99, 100,
	101, 102, -152, -264, -118, -264, 127, 128, -100, -100,
	-100, -100, -100, -100, -100, -100, -264, -2, -112, -70,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -122, -70, -264, -269, -107, -264, -269, -107, -269,
	-107, -269, -264, -269, -107, -269, -107, -269, -269, -107,
	-269, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -264, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, -264, -264, -89, 27, -88, -74, -75,
	-76, -77, -91, -118, -264, -88, -88, -81, -266, 68,
	11, 66, -266, 68, 126, 68, -144, 216, -145, -148,
	290, 292, 96, -180, -175, 72, 29, 126, 30, 69,
	68, -88, -188, -192, -194, -193, -195, -190, -191, 239,
	242, 246, 244, 240, 245, 122, 243, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 30, 164,
	235, 236, 237, 238, 259, 260, 261, 262, 263, 264,
	265, 266, 219, 241, 352, 220, 221, 222, 223, 224,
	225, 227, 228, 229, 230, 231, 232, 233, -175, 23,
	142, 70, 87, 70, 70, 70, -88, 70, 68, 143,
	-81, 24, 65, -83, -88, 70, 70, 70, 70, -182,
	-181, -172, -171, -171, -160, -160, -171, -171, -171, -88,
	-88, -88, -88, -157, 104, 12, -157, -171, -171, 11,
	-154, 11, 106, -154, -70, -100, -158, 104, 65, 70,
	-32, -31, -33, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 72, 69, -112, -248, 423,
	-88, -171, 179, 179, 139, 139, 184, -88, 9, 106,
	68, 18, 126, 68, -135, 25, 26, -135, -136, -265,
	-61, -101, 50, 73, 76, -60, 56, -88, -70, -70,
	-110, 81, 87, 82, 83, -177, 113, -182, -176, -172,
	-100, -111, -115, -118, 77, 106, 104, 105, 89, -100,
	-100, -100, -100, -100, -100, -100, -100, -100, -100, -100,
	-100, -100, -100, -100, -184, 70, 72, 70, -99, -99,
	-175, -59, -265, 68, -265, -2, -67, -69, -67, -265,
	-70, -70, -119, 72, -67, -119, 72, -67, -67, -67,
	-59, -120, -121, 91, -119, -265, -100, -175, -175, -67,
	-68, -67, -67, -67, -265, -265, -69, -67, -69, -67,
	-67, -265, -265, -265, -265, -59, -59, -67, -67, -67,
	-59, -67, -67, -59, -67, -67, -67, -67, -59, -67,
	-67, -67, -141, 171, 139, -88, 30, 68, -84, -86,
	-85, -87, 55, 59, 61, 56, 57, 58, 62, -166,
	23, -74, -264, -92, 171, -93, 23, -183, 63, 144,
	64, -181, -174, 72, -141, 66, -74, -88, -74, -90,
	-181, 113, -147, -145, 68, 291, 293, 294, 65, 84,
	-70, -202, 121, -176, -182, -225, -226, -227, -176, 72,
	73, -212, -213, -214, -228, 154, -234, 146, 148, 44,
	-215, 155, 140, 45, 69, -189, -203, 271, -196, 67,
	-196, -196, 247, 239, 242, 240, -196, -196, -196, -196,
	-196, -201, 242, -201, -201, -201, -201, 240, 67, 67,
	-196, -196, -196, -205, 67, -205, 234, -205, -206, 67,
	-206, -206, -206, -179, 66, -134, -88, -171, 24, -171,
	-35, 187, 160, 67, -88, -88, -88, 68, 70, 70,
	-219, 11, 106, 72, -70, -88, -102, 23, -181, -181,
	-157, -66, 165, 72, -88, 68, 96, 69, -89, 72,
	-163, 134, 131, 132, 136, 137, -237, 268, 130, 242,
	79, 29, 15, 310, 171, 357, 70, 172, -88, -88,
	-88, -88, -88, 134, 131, 51, -70, -70, -131, -137,
	-150, 19, 11, 47, 47, -67, 81, 82, 83, 126,
	-264, -111, -100, -100, -100, -66, 86, -265, -68, -70,
	-265, 68, -265, -265, 68, 66, 23, 11, 11, -265,
	11, 11, -265, -265, -265, -67, -123, -121, 93, -70,
	-265, -265, 68, 68, -265, -265, -265, -265, -132, 318,
	-132, -265, -265, -265, -265, -265, -132, -132, -132, -132,
	-67, -67, -265, -265, -265, -67, -265, -265, -67, -265,
	-265, -265, -265, -67, -265, -265, -265, -98, 30, 47,
	-2, -264, -264, -88, -144, -75, -76, -76, -75, -76,
	55, 55, 55, 60, 55, 60, 55, -85, -183, -265,
	-264, 34, -183, -93, 140, 140, 140, -94, 12, -74,
	-94, -94, 126, -148, -149, 295, 292, 298, 70, 72,
	126, 68, -227, 96, 67, 70, 45, -215, -215, -220,
	70, -220, 45, -207, -199, -200, -208, -210, -197, 81,
	87, 29, 65, 268, 146, 45, 44, 79, -204, 272,
	73, -201, -201, -196, -196, -196, 247, -196, -201, -202,
	30, -202, -202, -202, -202, -201, -211, 72, -211, 73,
	-205, 73, 65, -175, -2, 23, -36, 8, 9, 10,
	-255, -256, -257, 70, 106, 192, 193, 143, -171, -88,
	-171, -171, -94, 70, 70, -154, -157, 34, -100, -31,
	-99, -141, -170, -167, -243, -215, -247, -214, 147, 151,
	154, 155, 146, 171, -167, -243, 154, -215, 155, 147,
	-164, -215, 143, 23, -167, -167, -221, 96, 171, -242,
	66, 179, 268, 179, 52, -88, -73, 11, 113, -176,
	-68, -66, 86, -100, -265, -69, -187, 122, 239, 164,
	237, 230, 257, 244, 270, 235, 271, -184, -187, -100,
	-100, -100, -100, 351, -127, 95, -70, 92, -100, -100,
	-175, -264, -132, -132, -132, -132, -132, -265, -265, -133,
	-132, -133, -133, -265, -133, -133, -265, -133, -133, -133,
	-133, -265, -133, -133, -133, -143, 65, -144, -114, -116,
	-115, -264, -2, -138, -175, -142, -175, -94, -79, -78,
	65, 66, -80, 65, -78, 55, 55, -142, -100, -93,
	-264, -264, -264, -127, -70, -94, 292, 296, 297, -226,
	-227, -230, -229, -175, -234, -220, -220, 67, 81, -100,
	9, 45, 45, 72, 69, -202, -202, -201, -196, -202,
	70, 122, -202, 69, 68, 69, 68, 69, 68, -88,
	-134, -134, 65, 69, 68, -188, 70, 70, 70, -88,
	-157, -100, -201, 67, -212, -170, -220, -161, 70, 70,
	-170, 70, -175, 45, 70, -88, -175, -212, 70, -70,
	-175, -240, 354, -241, 70, -175, -175, -175, -94, -74,
	-265, -100, -265, -196, -196, -196, -206, -196, 224, -196,
	224, -265, -265, 19, 19, 19, 19, -264, -63, 315,
	-70, 68, 68, -127, 171, -133, -133, -133, -133, -133,
	28, -143, 68, -265, -265, -265, 68, 126, -265, 68,
	-127, -70, 67, -70, -265, -93, -166, -139, -175, -139,
	-139, -136, 69, 68, -196, -139, -104, -202, -201, 72,
	-201, 73, 73, 67, -2, -88, -258, -259, -260, 79,
	353, 87, 194, 195, 156, 196, 197, 198, -257, -188,
	-188, -188, -261, -156, -212, -129, 159, 160, -179, -217,
	-215, 70, -165, 143, 23, 143, -129, -212, 27, -239,
	-238, -176, 67, 66, -124, 13, -201, 70, -100, -100,
	-100, -100, -100, -265, 72, -100, -100, -265, 16, 45,
	-116, 47, -2, -264, -175, -175, -175, -136, -139, -92,
	-183, 68, -265, -265, -265, -232, -231, 66, 150, 79,
	-229, -135, 69, -202, -202, 69, 69, -230, -134, 19,
	-134, -260, 72, 198, 194, 198, 198, 198, 198, 199,
	-249, 38, -251, 39, 69, -170, 70, 67, -220, 70,
	-175, -170, -129, -264, 68, 96, -139, -88, -125, 14,
	16, -265, -265, -265, -265, -62, 106, 354, -265, -265,
	-112, 9, -114, -2, 126, 69, -93, -175, -231, 70,
	-221, 72, 157, 69, 185, -23, -2, -7, -8, -9,
	-10, -12, -37, -13, -14, -20, -21, -15, -43, -44,
	-53, -51, -52, -48, -47, -22, -17, -24, 90, 145,
	214, 36, 36, 190, 191, -198, 144, -250, 43, -252,
	-65, 42, 16, -170, -230, -179, -170, -235, -236, 171,
	-238, -227, 69, -126, -70, -174, -113, -72, -70, -174,
	-265, 352, 62, 355, -127, -144, -265, -175, 73, -88,
	-233, -232, 186, -134, -70, -70, -26, -23, -140, 67,
	73, -251, 16, -253, 40, 41, 72, 69, 67, -265,
	68, -175, -242, 68, 52, 353, 356, -265, 67, -130,
	188, 189, -27, -28, 91, 92, 424, -139, 38, 72,
	16, 16, -233, -230, -236, 47, -240, -72, 52, -139,
	-134, 70, 70, 95, 93, -28, -70, -25, -19, -2,
	-7, -8, -9, -10, -20, -21, -22, -18, 214, 95,
	-23, 69, 72, 72, 69, 173, 354, 69, -11, -18,
	-10, -7, -8, -9, 90, -25, 92, 424, -25, -233,
	174, 355, -245, -246, 65, -134, 424, -25, 95, 93,
	-29, -19, -30, 94, 424, -264, 356, -246, 65, -245,
	65, 10, 9, 95, 424, 145, -25, 95, 93, -30,
	-70, 95, -100, 170, -244, 158, 153, 156, 30, -244,
	90, 424, 145, -25, 92, -265, -265, 152, 29, 81,
	95, 424, -25, 145, 95, 424, 145,
}

var yyDef = [...]int{
	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 797, 0, 500,
	500, 500, 500, 500, 500, 0, -2, 364, 365, 366,
	0, 0, 0, 0, -2, 475, 476, 477, 479, 480,
	489, -2, 1257, 1257, 0, 0, 1257, 0, 0, 0,
	0, 41, 42, 849, 0, 492, 481, 482, 1255, 1,
	3, 806, 0, 0, 504, 507, 502, 0, 849, 849,
	0, 0, 74, 75, 0, 0, 0, 0, 0, 847,
	847, 0, 847, 871, 0, 867, 868, 869, 0, 845,
	0, 845, 845, 845, 845, 845, 0, 421, 588, 878,
	879, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 0, 0, 0, 1258, 0, 1258,
	1258, 436, 0, 438, 0, 0, 0, 1258, 0, 447,
	0, 0, 454, 1258, 322, 323, 324, 472, 473, 460,
	474, 0, 0, 0, 493, 494, 495, 496, 1257, 1257,
	499, 158, 0, 178, 884, 35, 0, 0, 0, 850,
	478, 810, 0, 0, 797, 37, 0, 500, 505, 506,
	510, 508, 509, 501, 0, 519, 528, 0, 597, 0,
	602, 604, -2, -2, 0, 639, 640, 641, 642, 643,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 776, 777, 778, 779, 780, 781,
	782, 783, 606, 607, 773, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 764, 0, 735,
	735, 735, 735, 735, 735, 735, 735, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 54, 588,
	58, 0, 1204, 831, -2, -2, 0, 0, 773, 0,
	-2, 1048, -2, 0, 0, 204, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 874, 875, 0, 0, 0, 0, 0,
	420, 0, 422, 1258, 1258, 425, 1259, 1260, 876, 877,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 847, 847, 1258, 1258, 1258, 0,
	0, 0, 434, 435, 0, 341, 342, 466, 466, 1258,
	1258, 442, 0, 463, 463, 461, 462, 457, 458, 0,
	449, 0, 469, 451, 452, 455, 483, -2, 486, 487,
	488, -2, 0, 497, 498, 0, 160, 0, 177, 0,
	882, 885, 36, 1256, 0, 1258, 0, 0, 0, 0,
	30, 0, 0, 807, 0, 798, 799, 803, 803, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 806, 35, 507,
	0, 513, 511, 512, 503, 0, 520, 0, 0, 0,
	529, 0, 531, 532, 533, 534, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 624, 625, 626, 627, 628,
	629, 630, 603, 0, 617, 0, 0, 0, 659, 660,
	661, 662, 663, 664, 665, 0, 510, 35, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 0, 765, 0, 718, 727, 0, 719, 728, 720,
	729, 721, 0, 722, 730, 723, 731, 724, 725, 732,
	726, 0, 0, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 510,
	0, 0, 0, 510, 0, 0, 510, 0, 0, 0,
	0, 510, 0, 0, 0, 56, 0, 587, 0, 537,
	539, 540, 541, -2, 0, 591, -2, 0, 0, 0,
	48, 49, 0, 0, 0, 0, 59, 1204, 61, 62,
	0, 0, 0, 298, 840, 841, 842, 0, 838, 353,
	0, 0, 209, 286, 217, 218, 219, 279, 221, 279,
	279, 0, 279, 279, 279, 279, 279, 295, 295, 295,
	295, 295, 262, 263, 264, 265, 266, 0, 0, 239,
	279, 279, 279, 243, 269, 270, 271, 272, 273, 274,
	275, 276, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 281, 281, 281, 283, 283, 283, 283, 872, 73,
	0, 1258, 0, 1258, 0, 0, 200, 131, 0, 0,
	413, 846, 0, 415, 50, 416, 417, 418, 419, 589,
	880, 881, 423, 424, 0, 0, 428, 429, 430, 431,
	432, 433, 343, 439, 0, 0, 440, 441, 446, 0,
	552, 0, 0, 466, 448, 631, 450, 0, 0, 490,
	159, 162, 0, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 161, 179, 0, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 0, 811, 0,
	0, 0, 0, 0, 801, 804, 805, 802, 810, 38,
	510, 0, 784, 0, 0, 0, 514, 33, 598, 599,
	601, 618, 0, 620, 622, 530, 521, 0, 774, -2,
	608, 609, 633, 634, 635, 0, 0, 0, 0, 631,
	613, 0, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 658, 749, 750, 0, 656, 657,
	666, 515, 636, 0, 829, 35, 0, 517, 0, 705,
	0, 0, 641, 776, 0, 641, 776, 0, 0, 0,
	0, 771, 768, 0, 0, 736, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 575, 0, 0, 578, 0, 0, 0, 0,
	571, 0, 0, 545, 1142, 547, 0, 591, 0, 0,
	0, 572, 573, 574, 595, 0, 595, 53, 595, 55,
	0, 590, 832, 60, 0, 0, 65, 66, 833, 834,
	835, 836, 0, 774, 0, 201, 354, 356, 359, 360,
	361, 205, 206, 207, 0, 0, 335, 0, 0, 329,
	329, 0, 325, 326, 203, 208, 288, 287, 220, 0,
	295, 295, 279, 279, 279, 279, 248, 295, 251, 254,
	255, 298, 0, 298, 298, 298, 298, 295, 0, 0,
	240, 241, 242, 231, 0, 232, 281, 234, 235, 0,
	236, 237, 238, 0, 0, 0, 0, 79, 848, 80,
	0, 132, 133, 83, 0, 411, 1258, 0, 1258, 1258,
	595, 0, 0, 467, 468, 463, 466, 0, 464, 465,
	445, 456, 0, 470, 453, 0, 0, 180, 56, 883,
	1257, -2, 398, 864, 398, 398, 382, 315, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 0, 192, 391,
	393, 392, 396, 0, 0, 0, 808, 809, 800, 31,
	0, 843, 844, 785, 786, 535, 619, 621, 623, 0,
	515, 610, 631, 614, 0, 611, 0, 605, 0, 638,
	-2, 0, 703, 704, 0, 0, 0, 0, 0, 742,
	0, 0, 743, 0, 714, 797, 0, 769, 0, 0,
	717, 737, 0, 0, 738, 739, 740, 741, 692, 0,
	693, 0, 0, 0, 0, 0, 699, 700, 701, 702,
	0, 0, 526, 526, 526, 0, 526, 526, 0, 526,
	526, 526, 526, 0, 526, 526, 526, 823, 0, 0,
	-2, 0, 0, 585, 595, 538, 566, 568, 0, 563,
	576, 577, 579, 0, 581, 0, 583, 584, 542, 544,
	0, 0, 591, 551, 0, 0, 0, 797, 0, 595,
	46, 47, 0, 63, 64, 0, 0, 70, 299, 300,
	0, 0, 357, 0, 0, 0, 317, 329, 329, 320,
	330, 321, 0, 210, 211, 212, 213, 214, 215, 290,
	0, 0, 0, 294, 0, 302, 304, 0, 216, 289,
	0, 298, 298, 295, 246, 247, 279, 252, 298, 256,
	0, 257, 258, 259, 260, 298, 0, 277, 0, 0,
	233, 0, 0, 873, -2, 73, 0, 134, 135, 136,
	0, 84, 85, 0, 0, 0, 0, 0, 414, 51,
	426, 427, 437, 344, 345, 466, 444, 0, 632, 163,
	164, 295, 367, 0, 1257, 329, 0, 383, 399, 400,
	401, 402, 403, 404, 0, 1257, 401, 0, 402, 0,
	0, 0, 865, 866, 0, 0, 0, 316, 0, 195,
	0, 0, 0, 0, 812, 32, 595, 0, 522, 775,
	0, 612, 0, 615, 673, 518, 0, 279, 279, 754,
	279, 283, 757, 279, 759, 279, 762, 0, 0, 0,
	0, 0, 0, 0, 766, 716, 772, 0, 0, 0,
	523, 797, 694, 695, 696, 697, 698, 526, 526, 677,
	527, 678, 679, 526, 681, 682, 526, 684, 685, 686,
	687, 526, 689, 690, 691, 39, 0, 823, 813, 825,
	827, 0, 35, 0, 819, 0, 558, 797, 560, 567,
	0, 0, 561, 0, 562, 580, 582, 0, -2, 550,
	0, 0, 0, 806, 596, 45, 67, 68, 69, 355,
	358, 0, 331, 279, 334, 318, 319, 0, 291, 292,
	0, 301, 303, 305, 280, 244, 245, 298, 253, 249,
	296, 297, 261, 295, 0, 295, 0, 284, 0, 0,
	77, 0, 0, 91, 0, 87, 0, 0, 0, 412,
	443, 553, 894, 0, 386, 370, 872, 327, 363, 371,
	372, 377, 378, 0, 0, 374, 0, 386, 0, 385,
	0, 390, 0, 193, 194, 0, 0, 395, 787, 536,
	674, 616, 706, 751, 295, 755, 756, 758, 760, 761,
	763, 708, 707, 0, 0, 0, 0, 0, 0, 0,
	770, 0, 0, 0, 0, 675, 676, 680, 683, 688,
	0, 40, 0, 828, -2, 0, 0, 0, 57, 0,
	806, 564, 0, 569, 591, 548, 0, 0, 556, 0,
	0, 44, 307, 0, 803, 0, 293, 250, 298, 278,
	298, 0, 0, 0, -2, 0, 73, 92, 93, 0,
	0, 0, 98, 0, 0, 0, 0, 0, 86, 88,
	89, 90, 896, 890, 0, 1257, 387, 0, 0, 329,
	328, 384, 0, 862, 863, 0, 1257, 386, 0, 196,
	197, 0, 0, 0, 793, 0, 752, 753, 0, 0,
	0, 0, 744, 715, 767, 0, 0, 524, 0, 0,
	826, 0, -2, 0, 821, 820, 559, 43, 0, 546,
	591, 0, 592, 593, 594, 306, 310, 0, 315, 0,
	332, 333, 0, 267, 268, 282, 285, 0, 78, 0,
	0, 94, 95, 96, 97, 99, 100, 0, 0, 0,
	851, 898, -2, 0, 1257, 369, 388, 0, 872, 373,
	379, 380, 1257, 0, 0, 0, 0, 397, 34, 0,
	0, 709, 711, 710, 712, 0, 0, 0, 733, 734,
	797, 0, 816, 35, 0, 565, 549, 557, 311, 312,
	0, 314, 0, 308, 0, 73, -2, 106, 107, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 0, 0,
	0, 101, 102, 103, 104, 554, 0, 890, 0, 892,
	0, 889, 0, 368, 0, 0, 381, 0, 406, 0,
	198, 199, 192, 794, 795, 796, 788, 789, 791, 792,
	713, 0, 0, 0, 0, 824, -2, 822, 313, 0,
	76, 309, 137, 82, 0, 0, 0, 128, 29, 0,
	0, 897, 0, 895, 0, 0, 891, 308, 0, 405,
	0, 0, 195, 0, 745, 0, 748, 525, 0, 73,
	0, 0, 0, 148, 0, 0, 0, 0, 852, 899,
	0, 0, 375, 0, 407, 0, 394, 790, 746, 0,
	0, 138, 139, 0, 0, 149, 0, 0, 181, -2,
	184, 185, 186, 187, 188, 189, 190, 191, 0, 127,
	129, 555, 893, 887, 308, 0, 0, 336, 73, 140,
	141, 142, 143, 144, 146, 0, 0, 0, 0, 376,
	0, 0, 337, 338, 0, 81, 0, 0, 0, 0,
	0, 182, 155, 0, 0, 0, 747, 339, 0, 340,
	0, 0, 0, 0, 150, 151, 0, 0, 0, 156,
	0, 145, 0, 0, 346, 348, 349, 0, 0, 347,
	147, 0, 153, 0, 0, 408, 409, 350, 351, 352,
	0, 0, 0, 152, 0, 157, 154,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:383
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:388
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:389
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:393
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:420
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:426
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].str, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:432
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:440
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:444
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:450
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:457
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:463
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:467
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:473
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:477
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:484
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:496
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:508
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:518
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:524
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:528
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:532
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:536
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:546
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:550
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:556
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:560
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:575
		{
			yyVAL.partitions = nil
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:579
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:585
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:613
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:617
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:621
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:627
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:631
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:635
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.str = SessionStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.str = GlobalStr
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:660
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:668
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 76:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:686
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:694
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 81:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:702
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 82:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:706
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:711
		{
			yyVAL.procedureParams = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:731
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:735
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:748
		{
			yyVAL.characteristics = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:758
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:762
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:780
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:843
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:852
		{
			yyVAL.str = ""
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.str = BeforeStr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.str = AfterStr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.str = InsertStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.str = UpdateStr
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.str = DeleteStr
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:885
		{
			yyVAL.triggerOrder = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:889
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:909
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:915
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:919
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:935
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:941
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:946
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:951
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 154:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:957
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:975
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:985
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.exprs = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.exprs = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1047
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1053
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1057
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1076
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1107
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1119
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1130
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1141
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1147
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1391
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1395
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1514
		{
			yyVAL.sqlVal = nil
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1523
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1527
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1535
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1545
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1562
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = ""
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = ""
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1627
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.colKeyOpt = colKey
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1651
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1655
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1660
		{
			yyVAL.indexOptions = nil
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1680
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1689
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = ""
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = ""
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = yyDollar[1].str
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1785
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 336:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1796
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 337:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1800
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 338:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1804
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 339:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1808
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 340:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1812
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = yyDollar[1].str
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = ""
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 368:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1936
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 369:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1943
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1950
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 373:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1966
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 375:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 376:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1979
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 379:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1988
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 380:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1992
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 381:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1999
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2009
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2015
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2020
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnOrder = nil
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2039
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2045
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 394:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 397:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2115
		{
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
		}
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2128
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2144
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2148
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2164
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2172
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2180
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2184
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2192
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2200
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2208
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2216
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2246
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2254
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2258
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2263
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2267
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2271
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2275
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2279
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2283
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2299
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2307
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2323
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 444:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2328
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2338
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2342
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2350
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = "full "
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2437
		{
			yyVAL.str = ""
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2451
		{
			yyVAL.showFilter = nil
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2455
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.showFilter = nil
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = SessionStr
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = GlobalStr
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2489
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.statement = &Begin{}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			yyVAL.statement = &Begin{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.statement = &Commit{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.statement = &Rollback{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.statement = &OtherRead{}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2582
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2586
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2592
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2596
		{
			setAllowComments(yylex, true)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.bytes2 = nil
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.str = UnionStr
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = UnionAllStr
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = UnionDistinctStr
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2629
		{
			yyVAL.str = ""
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = SQLCacheStr
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2642
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = DistinctStr
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = StraightJoinHint
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2664
		{
			yyVAL.selectExprs = nil
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2678
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2696
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2703
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2707
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2711
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2716
		{
			yyVAL.over = nil
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.over = yyDollar[1].over
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2725
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2756
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2784
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2794
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2805
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2820
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2824
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.expr = nil
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2847
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2852
		{
			yyVAL.columns = nil
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2889
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2893
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2897
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2909
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2919
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.empty = struct{}{}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.empty = struct{}{}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = JoinStr
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = JoinStr
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = JoinStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = StraightJoinStr
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = LeftJoinStr
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = LeftJoinStr
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = RightJoinStr
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = RightJoinStr
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = NaturalJoinStr
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3022
		{
			yyVAL.indexHints = nil
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3026
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3030
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3034
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = nil
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3079
		{
			yyVAL.str = ""
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3083
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3127
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.str = IsNullStr
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3145
		{
			yyVAL.str = IsNotNullStr
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.str = IsTrueStr
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.str = IsNotTrueStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.str = IsFalseStr
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = IsNotFalseStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = EqualStr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = LessThanStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = GreaterThanStr
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = LessEqualStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = GreaterEqualStr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = NotEqualStr
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3196
		{
			yyVAL.expr = nil
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3200
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3220
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3252
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3256
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3272
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3276
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3292
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3328
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3396
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3400
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3404
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3408
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3412
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3416
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3420
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3424
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3428
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3444
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3448
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3452
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3465
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3469
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3473
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3481
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3485
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3489
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema")}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 709:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 710:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 711:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 712:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 713:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3555
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("first"), Exprs: yyDollar[3].selectExprs}
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3615
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_user")}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3637
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = BooleanModeStr
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 747:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = QueryExpansionStr
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3737
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3745
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3753
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = nil
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = string("")
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.expr = nil
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3836
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3840
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = &NullVal{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3893
		{
			yyVAL.exprs = nil
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3897
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3922
		{
			yyVAL.expr = nil
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3926
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3941
		{
			yyVAL.orderBy = nil
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3945
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3961
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = AscScr
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = AscScr
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = DescScr
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.limit = nil
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3987
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3991
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3995
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = ForUpdateStr
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4008
		{
			yyVAL.str = ShareModeStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4021
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4034
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4038
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4042
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4053
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4057
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4061
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.setExprs = nil
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4070
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4122
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4126
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4134
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.bytes = []byte("charset")
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.expr = &Default{}
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4165
		{
			yyVAL.byt = 0
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.byt = 1
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4170
		{
			yyVAL.byt = 0
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.byt = 1
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = IgnoreStr
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4180
		{
			yyVAL.sqlVal = nil
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4182
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.empty = struct{}{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.empty = struct{}{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.empty = struct{}{}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.empty = struct{}{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.empty = struct{}{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.empty = struct{}{}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4211
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.empty = struct{}{}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = UniqueStr
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = FulltextStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = SpatialStr
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4231
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4233
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string("")
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = "'" + string(yyDollar[4].bytes) + "'"
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.str = " optionally"
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = "'" + string(yyDollar[3].bytes) + "'"
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.Fields = nil
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4320
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].str, EnclosedBy: yyDollar[3].str, EscapedBy: yyDollar[4].str}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			decNesting(yylex)
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			skipToEnd(yylex)
		}
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4742
		{
			skipToEnd(yylex)
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			skipToEnd(yylex)
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
