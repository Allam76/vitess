// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const ENABLE = 57517
const DISABLE = 57518
const EACH = 57519
const ROW = 57520
const BEFORE = 57521
const FOLLOWS = 57522
const PRECEDES = 57523
const DEFINER = 57524
const INVOKER = 57525
const INOUT = 57526
const OUT = 57527
const DETERMINISTIC = 57528
const CONTAINS = 57529
const READS = 57530
const MODIFIES = 57531
const SQL = 57532
const SECURITY = 57533
const TEMPORARY = 57534
const CLASS_ORIGIN = 57535
const SUBCLASS_ORIGIN = 57536
const MESSAGE_TEXT = 57537
const MYSQL_ERRNO = 57538
const CONSTRAINT_CATALOG = 57539
const CONSTRAINT_SCHEMA = 57540
const CONSTRAINT_NAME = 57541
const CATALOG_NAME = 57542
const SCHEMA_NAME = 57543
const TABLE_NAME = 57544
const COLUMN_NAME = 57545
const CURSOR_NAME = 57546
const SIGNAL = 57547
const RESIGNAL = 57548
const SQLSTATE = 57549
const DECLARE = 57550
const CONDITION = 57551
const CURSOR = 57552
const CONTINUE = 57553
const EXIT = 57554
const UNDO = 57555
const HANDLER = 57556
const FOUND = 57557
const SQLWARNING = 57558
const SQLEXCEPTION = 57559
const USER = 57560
const IDENTIFIED = 57561
const ROLE = 57562
const REUSE = 57563
const GRANT = 57564
const GRANTS = 57565
const REVOKE = 57566
const NONE = 57567
const ATTRIBUTE = 57568
const RANDOM = 57569
const PASSWORD = 57570
const INITIAL = 57571
const AUTHENTICATION = 57572
const SSL = 57573
const X509 = 57574
const CIPHER = 57575
const ISSUER = 57576
const SUBJECT = 57577
const ACCOUNT = 57578
const EXPIRE = 57579
const NEVER = 57580
const DAY = 57581
const OPTION = 57582
const OPTIONAL = 57583
const EXCEPT = 57584
const ADMIN = 57585
const PRIVILEGES = 57586
const MAX_QUERIES_PER_HOUR = 57587
const MAX_UPDATES_PER_HOUR = 57588
const MAX_CONNECTIONS_PER_HOUR = 57589
const MAX_USER_CONNECTIONS = 57590
const FLUSH = 57591
const FAILED_LOGIN_ATTEMPTS = 57592
const PASSWORD_LOCK_TIME = 57593
const REQUIRE = 57594
const PROXY = 57595
const ROUTINE = 57596
const TABLESPACE = 57597
const CLIENT = 57598
const SLAVE = 57599
const EVENT = 57600
const EXECUTE = 57601
const FILE = 57602
const RELOAD = 57603
const REPLICATION = 57604
const SHUTDOWN = 57605
const SUPER = 57606
const USAGE = 57607
const LOGS = 57608
const ENGINE = 57609
const ERROR = 57610
const GENERAL = 57611
const HOSTS = 57612
const OPTIMIZER_COSTS = 57613
const RELAY = 57614
const SLOW = 57615
const USER_RESOURCES = 57616
const NO_WRITE_TO_BINLOG = 57617
const CHANNEL = 57618
const BEGIN = 57619
const START = 57620
const TRANSACTION = 57621
const COMMIT = 57622
const ROLLBACK = 57623
const SAVEPOINT = 57624
const WORK = 57625
const RELEASE = 57626
const BIT = 57627
const TINYINT = 57628
const SMALLINT = 57629
const MEDIUMINT = 57630
const INT = 57631
const INTEGER = 57632
const BIGINT = 57633
const INTNUM = 57634
const SERIAL = 57635
const REAL = 57636
const DOUBLE = 57637
const FLOAT_TYPE = 57638
const DECIMAL = 57639
const NUMERIC = 57640
const DEC = 57641
const FIXED = 57642
const PRECISION = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const NVARCHAR = 57654
const NATIONAL = 57655
const VARYING = 57656
const TEXT = 57657
const TINYTEXT = 57658
const MEDIUMTEXT = 57659
const LONGTEXT = 57660
const LONG = 57661
const BLOB = 57662
const TINYBLOB = 57663
const MEDIUMBLOB = 57664
const LONGBLOB = 57665
const JSON = 57666
const ENUM = 57667
const GEOMETRY = 57668
const POINT = 57669
const LINESTRING = 57670
const POLYGON = 57671
const GEOMETRYCOLLECTION = 57672
const MULTIPOINT = 57673
const MULTILINESTRING = 57674
const MULTIPOLYGON = 57675
const LOCAL = 57676
const LOW_PRIORITY = 57677
const NULLX = 57678
const AUTO_INCREMENT = 57679
const APPROXNUM = 57680
const SIGNED = 57681
const UNSIGNED = 57682
const ZEROFILL = 57683
const COLLATION = 57684
const DATABASES = 57685
const SCHEMAS = 57686
const TABLES = 57687
const FULL = 57688
const PROCESSLIST = 57689
const COLUMNS = 57690
const FIELDS = 57691
const ENGINES = 57692
const PLUGINS = 57693
const NAMES = 57694
const CHARSET = 57695
const GLOBAL = 57696
const SESSION = 57697
const ISOLATION = 57698
const LEVEL = 57699
const READ = 57700
const WRITE = 57701
const ONLY = 57702
const REPEATABLE = 57703
const COMMITTED = 57704
const UNCOMMITTED = 57705
const SERIALIZABLE = 57706
const ENCRYPTION = 57707
const CURRENT_TIMESTAMP = 57708
const DATABASE = 57709
const CURRENT_DATE = 57710
const CURRENT_USER = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const UTC_DATE = 57715
const UTC_TIME = 57716
const UTC_TIMESTAMP = 57717
const REPLACE = 57718
const CONVERT = 57719
const CAST = 57720
const SUBSTR = 57721
const SUBSTRING = 57722
const TRIM = 57723
const LEADING = 57724
const TRAILING = 57725
const BOTH = 57726
const GROUP_CONCAT = 57727
const SEPARATOR = 57728
const TIMESTAMPADD = 57729
const TIMESTAMPDIFF = 57730
const OVER = 57731
const WINDOW = 57732
const GROUPING = 57733
const CURRENT = 57734
const AVG = 57735
const BIT_AND = 57736
const BIT_OR = 57737
const BIT_XOR = 57738
const COUNT = 57739
const JSON_ARRAYAGG = 57740
const JSON_OBJECTAGG = 57741
const MAX = 57742
const MIN = 57743
const STDDEV_POP = 57744
const STDDEV = 57745
const STD = 57746
const STDDEV_SAMP = 57747
const SUM = 57748
const VAR_POP = 57749
const VARIANCE = 57750
const VAR_SAMP = 57751
const CUME_DIST = 57752
const DENSE_RANK = 57753
const FIRST_VALUE = 57754
const LAG = 57755
const LAST_VALUE = 57756
const LEAD = 57757
const NTH_VALUE = 57758
const NTILE = 57759
const ROW_NUMBER = 57760
const PERCENT_RANK = 57761
const RANK = 57762
const MATCH = 57763
const AGAINST = 57764
const BOOLEAN = 57765
const LANGUAGE = 57766
const WITH = 57767
const QUERY = 57768
const EXPANSION = 57769
const UNUSED = 57770
const ARRAY = 57771
const DESCRIPTION = 57772
const EMPTY = 57773
const JSON_TABLE = 57774
const LATERAL = 57775
const MEMBER = 57776
const RECURSIVE = 57777
const ACTIVE = 57778
const BUCKETS = 57779
const CLONE = 57780
const COMPONENT = 57781
const DEFINITION = 57782
const ENFORCED = 57783
const EXCLUDE = 57784
const GEOMCOLLECTION = 57785
const GET_MASTER_PUBLIC_KEY = 57786
const HISTOGRAM = 57787
const HISTORY = 57788
const INACTIVE = 57789
const INVISIBLE = 57790
const LOCKED = 57791
const MASTER_COMPRESSION_ALGORITHMS = 57792
const MASTER_PUBLIC_KEY_PATH = 57793
const MASTER_TLS_CIPHERSUITES = 57794
const MASTER_ZSTD_COMPRESSION_LEVEL = 57795
const NESTED = 57796
const NETWORK_NAMESPACE = 57797
const NOWAIT = 57798
const NULLS = 57799
const OJ = 57800
const OLD = 57801
const ORDINALITY = 57802
const ORGANIZATION = 57803
const OTHERS = 57804
const PATH = 57805
const PERSIST = 57806
const PERSIST_ONLY = 57807
const PRIVILEGE_CHECKS_USER = 57808
const PROCESS = 57809
const REFERENCE = 57810
const REQUIRE_ROW_FORMAT = 57811
const RESOURCE = 57812
const RESPECT = 57813
const RESTART = 57814
const RETAIN = 57815
const SECONDARY = 57816
const SECONDARY_ENGINE = 57817
const SECONDARY_LOAD = 57818
const SECONDARY_UNLOAD = 57819
const SKIP = 57820
const SRID = 57821
const THREAD_PRIORITY = 57822
const TIES = 57823
const VCPU = 57824
const VISIBLE = 57825
const SYSTEM = 57826
const INFILE = 57827
const NVAR = 57828
const PASSWORD_LOCK = 57829

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1067,
	-1, 43,
	147, 1131,
	148, 1149,
	-2, 232,
	-1, 49,
	186, 696,
	187, 696,
	-2, 686,
	-1, 550,
	135, 1159,
	-2, 1153,
	-1, 551,
	135, 1160,
	-2, 1154,
	-1, 655,
	98, 1440,
	135, 1440,
	-2, 1115,
	-1, 656,
	98, 1558,
	135, 1558,
	-2, 1116,
	-1, 661,
	98, 1464,
	135, 1464,
	-2, 1117,
	-1, 662,
	98, 1511,
	135, 1511,
	-2, 1118,
	-1, 663,
	98, 1512,
	135, 1512,
	-2, 1119,
	-1, 664,
	98, 1387,
	135, 1387,
	-2, 1123,
	-1, 666,
	98, 1488,
	135, 1488,
	-2, 1125,
	-1, 1181,
	1, 793,
	5, 793,
	12, 793,
	13, 793,
	14, 793,
	15, 793,
	17, 793,
	19, 793,
	30, 793,
	31, 793,
	56, 793,
	57, 793,
	58, 793,
	59, 793,
	60, 793,
	62, 793,
	63, 793,
	66, 793,
	67, 793,
	69, 793,
	70, 793,
	408, 793,
	506, 793,
	-2, 825,
	-1, 1187,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1282,
	1, 476,
	506, 476,
	-2, 474,
	-1, 1284,
	1, 476,
	506, 476,
	-2, 474,
	-1, 1438,
	135, 1162,
	-2, 1158,
	-1, 1604,
	44, 542,
	-2, 1399,
	-1, 1608,
	68, 540,
	72, 540,
	-2, 1434,
	-1, 1609,
	68, 542,
	-2, 1349,
	-1, 1612,
	68, 538,
	72, 538,
	-2, 1267,
	-1, 1613,
	68, 539,
	72, 539,
	-2, 1277,
	-1, 1660,
	1, 477,
	506, 477,
	-2, 474,
	-1, 1740,
	44, 585,
	154, 587,
	156, 585,
	157, 585,
	-2, 622,
	-1, 1816,
	5, 51,
	-2, 895,
	-1, 2126,
	69, 1324,
	70, 1324,
	135, 1324,
	-2, 727,
	-1, 2149,
	1, 850,
	5, 850,
	12, 850,
	13, 850,
	14, 850,
	15, 850,
	17, 850,
	19, 850,
	30, 850,
	31, 850,
	56, 850,
	57, 850,
	58, 850,
	59, 850,
	60, 850,
	62, 850,
	63, 850,
	66, 850,
	67, 850,
	69, 850,
	70, 850,
	408, 850,
	506, 850,
	-2, 825,
	-1, 2257,
	154, 588,
	-2, 586,
	-1, 2318,
	5, 51,
	-2, 1087,
	-1, 2529,
	41, 1169,
	-2, 1167,
	-1, 2632,
	5, 51,
	-2, 1090,
}

const yyPrivate = 57344

const yyLast = 34908

var yyAct = [...]int{
	617, 80, 2822, 2804, 2846, 2853, 2805, 2729, 2824, 2704,
	2728, 2642, 7, 1957, 422, 2641, 6, 2640, 5, 2643,
	8, 2635, 873, 2761, 2697, 2619, 2068, 2612, 553, 2614,
	2330, 2434, 1218, 1657, 2702, 551, 2143, 2549, 2474, 1881,
	2163, 2529, 83, 542, 1136, 2051, 556, 1596, 1655, 2415,
	1562, 1614, 1556, 1902, 2639, 3, 2040, 2531, 1851, 2218,
	2391, 2385, 2369, 1312, 616, 2119, 405, 408, 1416, 1677,
	1560, 2120, 468, 2164, 2251, 2636, 535, 678, 1908, 2050,
	1973, 80, 453, 127, 1605, 569, 127, 93, 1595, 447,
	447, 680, 127, 906, 1311, 1852, 2241, 106, 2116, 1646,
	1765, 1739, 450, 450, 929, 1594, 2128, 2135, 1463, 558,
	1535, 889, 1409, 2018, 1314, 127, 1424, 2090, 1702, 1601,
	1359, 1539, 1292, 1472, 1331, 1663, 127, 1909, 1662, 1642,
	127, 683, 1661, 1948, 127, 534, 657, 1198, 660, 1034,
	1546, 1178, 675, 676, 1177, 1529, 1181, 1630, 127, 450,
	937, 683, 2061, 1440, 958, 1184, 1041, 1659, 1719, 127,
	1037, 653, 425, 674, 1197, 654, 1054, 467, 1285, 1364,
	424, 1152, 649, 936, 538, 1288, 1189, 872, 860, 2885,
	1584, 646, 2881, 1153, 85, 2876, 2861, 2859, 2841, 2817,
	2769, 82, 1357, 465, 69, 2199, 2356, 2508, 2370, 417,
	2832, 2713, 2803, 124, 548, 440, 2372, 434, 445, 428,
	36, 36, 404, 2506, 36, 36, 2630, 2783, 2688, 2521,
	2215, 2712, 87, 88, 89, 90, 91, 1985, 2509, 36,
	435, 72, 39, 40, 1846, 2111, 2592, 2708, 2615, 1787,
	1690, 1690, 2312, 859, 1964, 1718, 648, 2159, 2160, 2158,
	672, 1847, 2459, 2703, 858, 1558, 893, 894, 1045, 1027,
	897, 1581, 1582, 1580, 72, 39, 40, 909, 870, 1405,
	1406, 2705, 81, 81, 1363, 2629, 81, 81, 1380, 884,
	862, 2375, 865, 866, 1890, 986, 41, 1889, 670, 416,
	1891, 81, 895, 896, 2563, 415, 2709, 1361, 1362, 1199,
	994, 1200, 1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1070, 1931, 419, 1080, 1616, 109, 910,
	911, 2373, 2374, 2376, 2377, 2378, 2708, 630, 457, 636,
	638, 637, 634, 635, 633, 632, 631, 427, 426, 429,
	1360, 1717, 118, 114, 115, 955, 116, 433, 2348, 2349,
	2091, 1622, 1624, 1636, 1623, 1631, 1631, 2299, 2297, 414,
	2705, 99, 2060, 464, 437, 2015, 1401, 1980, 441, 1400,
	1399, 1398, 399, 1922, 1397, 1396, 990, 991, 120, 119,
	2007, 2798, 444, 2534, 2240, 2709, 2012, 458, 1927, 1926,
	916, 2093, 1618, 1618, 2445, 2392, 2393, 2394, 2395, 1730,
	2731, 2730, 80, 80, 2225, 2678, 2596, 127, 1984, 2403,
	1923, 2503, 2737, 924, 1643, 2386, 2411, 926, 1731, 925,
	101, 1391, 2507, 2389, 98, 1929, 1474, 1915, 1982, 1678,
	111, 110, 121, 1916, 122, 1343, 919, 2387, 2388, 2676,
	2850, 1962, 2766, 2401, 2586, 2501, 907, 112, 908, 910,
	911, 127, 2764, 2765, 2500, 2499, 923, 927, 2498, 2496,
	2497, 1023, 1670, 970, 2751, 2495, 2578, 917, 918, 1031,
	2582, 2583, 2637, 2332, 107, 430, 431, 432, 438, 1370,
	442, 443, 446, 1872, 108, 1963, 2801, 1001, 2716, 2717,
	1002, 1669, 1998, 1999, 905, 892, 409, 1965, 1925, 903,
	904, 1928, 127, 2219, 2220, 2221, 2222, 2223, 970, 1365,
	103, 993, 104, 902, 544, 1747, 1741, 1742, 2594, 1740,
	1743, 1744, 400, 2216, 2819, 2525, 901, 886, 2778, 2219,
	2220, 2221, 2222, 2223, 2095, 2228, 113, 406, 410, 2099,
	402, 2094, 2575, 2092, 1367, 2416, 2417, 1366, 2097, 2588,
	1089, 2813, 2871, 1091, 2256, 1750, 864, 863, 1217, 2371,
	1217, 2096, 2026, 1216, 1217, 2198, 2024, 1983, 418, 1749,
	1748, 959, 2706, 2857, 2504, 403, 2098, 2100, 2886, 2883,
	1057, 117, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 2242, 1724, 1134, 73, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 2564,
	1151, 1154, 1154, 1154, 1160, 1154, 1154, 1160, 1154, 1160,
	1169, 1170, 1171, 1172, 1020, 1182, 2522, 79, 79, 1631,
	73, 79, 79, 2628, 1986, 1022, 1938, 1621, 970, 100,
	1029, 2706, 1090, 1344, 920, 1645, 79, 969, 2167, 2677,
	1363, 2587, 1135, 1217, 407, 109, 2877, 2026, 980, 127,
	127, 127, 1008, 1003, 436, 2862, 861, 875, 2598, 2593,
	407, 407, 1974, 1361, 1362, 683, 2524, 1176, 2828, 1924,
	660, 2823, 966, 2426, 2855, 660, 2227, 2856, 463, 2854,
	1565, 1567, 2427, 1211, 2006, 2826, 939, 940, 941, 942,
	943, 944, 945, 946, 947, 948, 949, 950, 1975, 2475,
	2003, 1746, 1988, 1190, 1987, 1725, 1300, 1018, 1298, 921,
	977, 1281, 1907, 2477, 1879, 1878, 1877, 857, 2001, 1026,
	867, 371, 1092, 1093, 1185, 1277, 1907, 2430, 1825, 2282,
	1822, 1907, 2274, 2005, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1070, 965, 2004, 1080, 111, 110, 1894,
	1202, 2591, 2037, 1886, 1782, 1203, 1770, 2236, 1566, 1175,
	975, 1187, 1755, 1155, 1157, 1159, 1161, 1163, 1165, 1166,
	1168, 1673, 1671, 1014, 1907, 1156, 1158, 1215, 1162, 1164,
	2476, 1167, 1976, 1977, 1193, 1687, 976, 1188, 972, 1703,
	1686, 2425, 2489, 1419, 1210, 1013, 1009, 1010, 1011, 1012,
	1015, 1016, 1017, 1019, 1195, 1906, 96, 1060, 885, 1907,
	2363, 407, 2361, 2188, 1585, 1070, 1212, 1576, 1080, 1906,
	2825, 2827, 973, 974, 1906, 2032, 2024, 2431, 1080, 2613,
	2029, 2024, 1341, 2028, 2031, 1217, 1912, 2441, 2025, 2026,
	2511, 1294, 2045, 1092, 1093, 1092, 1093, 1565, 1567, 447,
	2041, 2490, 1412, 683, 2625, 2624, 2752, 2753, 1313, 2749,
	2750, 450, 450, 1540, 1052, 1051, 447, 1332, 1694, 2364,
	127, 2362, 2189, 127, 2512, 899, 1053, 1906, 450, 450,
	2036, 127, 1053, 2133, 2033, 2865, 2847, 2864, 891, 1293,
	127, 127, 127, 127, 127, 912, 2132, 1352, 1208, 1069,
	1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1070, 450, 1906, 1080, 1078, 1079, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1070, 1042, 928, 1080, 868, 1073, 1074,
	1075, 1076, 1077, 1070, 1061, 1566, 1080, 1316, 1051, 1339,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 2113, 447,
	1080, 1530, 1447, 874, 2875, 1053, 1283, 1820, 1355, 1819,
	1317, 450, 450, 450, 1333, 1695, 683, 1445, 1446, 1444,
	1954, 2814, 900, 1327, 1328, 1329, 1330, 1052, 1051, 1417,
	1418, 554, 890, 1389, 80, 2781, 2402, 1052, 1051, 914,
	648, 1373, 1335, 1306, 1336, 1053, 450, 1530, 1821, 1837,
	2396, 450, 450, 2872, 1137, 1053, 1295, 2175, 1048, 1309,
	1322, 1323, 1324, 1325, 1326, 1150, 1302, 1310, 1052, 1051,
	1371, 462, 127, 81, 127, 2879, 2681, 683, 1052, 1051,
	1395, 1320, 1321, 2673, 1443, 2816, 1053, 2771, 1403, 1410,
	1038, 1052, 1051, 1039, 2674, 127, 1053, 2633, 2589, 1052,
	1051, 1057, 80, 96, 2519, 2518, 2763, 2873, 2517, 1053,
	1394, 470, 1052, 1051, 2516, 1347, 1348, 1053, 1437, 1350,
	877, 878, 879, 880, 881, 882, 883, 2510, 2355, 1338,
	1053, 1467, 1468, 2759, 2354, 1353, 1052, 1051, 1441, 1372,
	2675, 1532, 2762, 1368, 2590, 1369, 1953, 683, 95, 1138,
	1464, 2762, 1465, 2787, 1053, 2786, 1135, 1767, 1768, 1769,
	643, 644, 1438, 1068, 1078, 1079, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1070, 683, 683, 1080, 2758, 1951, 1932,
	1892, 1390, 1893, 1442, 1393, 1436, 94, 961, 960, 1052,
	1051, 934, 1404, 1559, 1421, 2770, 2115, 1568, 2734, 2732,
	1182, 1516, 1519, 1510, 1182, 1402, 1407, 1053, 1531, 2687,
	1430, 1432, 1433, 2585, 933, 1426, 1431, 1301, 1422, 2584,
	127, 1423, 2574, 2526, 2494, 2455, 2399, 2398, 127, 2397,
	127, 2365, 1434, 2352, 2247, 127, 127, 2181, 1949, 127,
	127, 127, 1714, 1349, 1482, 1318, 2595, 1135, 2572, 1487,
	2543, 1912, 1571, 660, 2537, 2423, 1573, 2285, 2270, 683,
	683, 574, 573, 576, 577, 578, 579, 1564, 1589, 2266,
	575, 580, 676, 2258, 2229, 2213, 2212, 1439, 2211, 1555,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1993, 1992, 1316, 1591, 1707,
	1692, 1691, 1185, 1466, 1277, 1345, 1342, 1308, 1307, 1185,
	1296, 1284, 1438, 1185, 1548, 1551, 1552, 1553, 1549, 1569,
	1550, 1554, 1282, 2305, 2136, 2137, 956, 127, 1319, 887,
	966, 413, 411, 1000, 1684, 1590, 2466, 2784, 2341, 2777,
	1541, 127, 1033, 127, 127, 450, 450, 450, 1882, 1337,
	127, 1160, 1610, 2694, 1033, 2536, 1572, 2341, 2692, 2341,
	2690, 1522, 2486, 1652, 1653, 2341, 2576, 1602, 1578, 1533,
	2485, 1470, 1577, 1682, 1683, 1478, 1583, 1574, 127, 127,
	127, 1648, 1649, 1650, 1651, 2208, 1489, 1490, 1599, 2182,
	1137, 1710, 1632, 1633, 1634, 1635, 1570, 1592, 1190, 1502,
	2466, 2568, 2744, 1506, 127, 1543, 127, 2466, 2482, 1644,
	683, 2466, 1033, 2131, 683, 2466, 2465, 1527, 1508, 1752,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 2341, 2340, 1080, 1191, 683, 2322, 1033, 683,
	1754, 1033, 1882, 1716, 2276, 1882, 2535, 1658, 1771, 1191,
	1700, 1542, 1667, 1696, 2196, 2195, 2192, 2193, 1701, 2192,
	2191, 1679, 84, 1680, 1681, 1780, 1033, 1543, 1033, 1676,
	1688, 1727, 1726, 1508, 1711, 1508, 1033, 1437, 1214, 1213,
	2117, 1414, 1005, 2131, 1004, 2699, 2316, 964, 1427, 1428,
	1543, 1192, 963, 1194, 1690, 964, 2209, 2194, 470, 2131,
	1699, 2145, 2277, 2017, 2277, 1192, 1896, 1190, 1579, 1675,
	1780, 1809, 1709, 1808, 1351, 1689, 1780, 1415, 1028, 1441,
	1392, 1438, 1705, 1715, 959, 1358, 1299, 1297, 1185, 1196,
	81, 1656, 1413, 671, 2714, 2691, 2144, 1722, 2542, 421,
	966, 2540, 2357, 1618, 1590, 2328, 1647, 2174, 2136, 2137,
	1848, 1850, 1643, 1900, 1182, 1182, 1182, 1182, 1182, 1729,
	970, 1708, 1732, 1672, 1442, 1751, 1638, 1637, 1278, 953,
	1559, 1704, 1873, 2836, 2834, 1137, 1058, 1776, 2806, 1514,
	1515, 1182, 1759, 2207, 1757, 1758, 2139, 2117, 1955, 127,
	127, 127, 127, 127, 1304, 81, 1006, 967, 962, 1853,
	1866, 127, 1552, 1553, 1849, 127, 1766, 452, 1772, 127,
	2142, 1548, 1551, 1552, 1553, 1549, 127, 1550, 1554, 2141,
	1861, 1884, 1860, 1885, 1510, 1876, 1864, 1814, 2755, 1862,
	2711, 1865, 2048, 1883, 1863, 660, 539, 540, 1868, 1756,
	683, 1425, 1786, 1788, 1854, 1588, 1875, 2743, 1046, 1047,
	2319, 1764, 1763, 2456, 2422, 1800, 1801, 1802, 1803, 2344,
	1773, 1774, 1775, 1185, 1185, 1185, 1185, 1185, 2265, 2264,
	1914, 1736, 2169, 1911, 1913, 2180, 1032, 1044, 2179, 1185,
	2178, 1904, 2600, 2603, 1836, 2686, 2685, 2530, 2733, 1880,
	1185, 2528, 1277, 1897, 2581, 2580, 1856, 1857, 1855, 1859,
	412, 1858, 683, 1346, 2044, 1867, 2513, 2514, 1035, 1276,
	2043, 2203, 1942, 1209, 951, 1654, 1617, 683, 935, 683,
	1036, 450, 932, 931, 888, 1202, 2794, 1887, 2547, 1997,
	2546, 1665, 2314, 1417, 1418, 127, 450, 447, 1830, 1831,
	1832, 1895, 2432, 1991, 1713, 1905, 2404, 1910, 1666, 1293,
	450, 1303, 1899, 2405, 2745, 2679, 2532, 930, 1958, 1046,
	1047, 1762, 96, 80, 1990, 1408, 1280, 1024, 1025, 1761,
	2793, 450, 2792, 683, 2791, 2491, 1735, 1933, 1934, 450,
	915, 536, 1950, 2736, 1940, 1952, 2735, 2683, 2604, 2555,
	2551, 537, 84, 2550, 1947, 2435, 1961, 1882, 2069, 1959,
	683, 683, 2245, 1960, 2838, 2837, 127, 2013, 1981, 1967,
	1968, 1969, 2046, 2047, 2011, 2010, 683, 1135, 1826, 1823,
	1733, 1941, 1995, 1943, 1944, 1945, 1946, 1334, 2053, 1049,
	2008, 2837, 2838, 683, 1994, 2565, 2177, 1411, 2014, 671,
	1437, 459, 461, 86, 2000, 2653, 52, 2002, 2655, 19,
	2654, 18, 1042, 2656, 20, 1989, 2657, 21, 2122, 80,
	2652, 15, 55, 2016, 1, 2027, 1723, 2038, 2039, 615,
	2021, 2042, 2651, 14, 2645, 10, 2668, 34, 2019, 2030,
	2035, 2666, 33, 2147, 1438, 2665, 32, 2112, 2151, 2152,
	2153, 1375, 2054, 2022, 683, 2384, 683, 2664, 28, 2663,
	27, 2130, 2055, 1853, 2662, 26, 1410, 2063, 2660, 23,
	2659, 22, 2383, 2123, 2059, 2118, 2661, 24, 1996, 683,
	2650, 13, 2121, 2647, 12, 2390, 2049, 2646, 11, 2644,
	9, 2214, 2217, 2157, 2155, 1979, 2150, 2400, 1291, 2101,
	683, 2502, 683, 871, 683, 1815, 683, 2146, 1854, 2102,
	1674, 957, 2053, 2070, 2684, 2599, 2601, 2073, 2074, 2075,
	2527, 667, 2078, 2407, 2368, 679, 2367, 1838, 80, 2171,
	1972, 2125, 2172, 1971, 2173, 952, 2140, 1356, 2020, 2023,
	1685, 1745, 2611, 1536, 1734, 876, 1007, 1603, 1593, 1652,
	2148, 1653, 2057, 673, 92, 1693, 2168, 2162, 2170, 898,
	379, 127, 2202, 1600, 1920, 2602, 954, 2224, 1919, 1930,
	1615, 1660, 2161, 1664, 1918, 447, 1917, 2210, 2597, 1921,
	1222, 1220, 2201, 2083, 2084, 1221, 1219, 1224, 450, 1223,
	2204, 2205, 2206, 127, 450, 1829, 383, 2103, 2104, 1204,
	2105, 2106, 2723, 2284, 2107, 1050, 102, 127, 56, 450,
	2424, 683, 450, 2034, 455, 456, 450, 450, 97, 450,
	470, 105, 2231, 385, 2226, 1088, 1760, 1888, 658, 659,
	651, 1030, 2623, 2696, 2715, 1040, 683, 2616, 1835, 1149,
	127, 683, 1528, 2254, 557, 1871, 2440, 1058, 683, 2149,
	2618, 683, 1429, 2185, 1033, 572, 571, 570, 567, 568,
	2275, 2707, 1420, 1845, 1062, 2278, 2197, 555, 2235, 2232,
	546, 2239, 1180, 1277, 1173, 2243, 2244, 1712, 2246, 1547,
	1545, 2200, 2310, 2269, 2183, 2184, 1544, 2248, 2255, 2249,
	1305, 2187, 647, 2138, 2134, 1557, 1179, 2176, 2190, 1183,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 70, 2230, 1080, 913, 2064, 2065, 2233, 401,
	2311, 2562, 38, 460, 541, 2071, 2072, 2234, 25, 17,
	922, 16, 1738, 127, 869, 42, 44, 2079, 2080, 2081,
	2082, 1966, 1668, 2323, 2086, 2087, 2088, 2722, 1853, 2821,
	683, 938, 2336, 2337, 2338, 2845, 2760, 683, 683, 683,
	2267, 31, 30, 29, 2304, 2295, 2658, 683, 2667, 2649,
	2334, 2648, 2808, 2807, 4, 2346, 470, 1021, 71, 35,
	683, 669, 2, 0, 0, 0, 2359, 2315, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 2324, 0, 0,
	0, 0, 2339, 0, 0, 2358, 0, 2335, 1276, 1479,
	1480, 0, 0, 127, 2380, 2381, 2382, 0, 2345, 0,
	1897, 0, 1492, 1493, 1494, 1495, 0, 0, 0, 0,
	2360, 2280, 0, 2347, 2114, 0, 0, 1507, 1509, 0,
	0, 0, 0, 1513, 0, 0, 0, 1182, 0, 0,
	0, 450, 0, 0, 0, 2418, 2419, 0, 0, 0,
	2379, 1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1070, 2420, 0, 1080, 0, 0, 0, 2156,
	683, 0, 127, 2307, 2308, 2309, 0, 2122, 683, 2428,
	2122, 2461, 2433, 2437, 2438, 2414, 0, 2408, 2413, 2436,
	2053, 0, 2409, 2147, 2421, 1652, 2410, 0, 0, 2351,
	2412, 2353, 2168, 0, 2406, 2429, 0, 0, 0, 1128,
	1129, 0, 0, 0, 0, 0, 0, 0, 683, 2464,
	80, 0, 0, 2366, 683, 0, 2350, 0, 0, 127,
	0, 127, 0, 0, 0, 2460, 0, 683, 0, 0,
	0, 2121, 470, 0, 2121, 2458, 1185, 0, 2457, 0,
	0, 0, 0, 683, 0, 0, 0, 2467, 2487, 2481,
	2463, 0, 0, 0, 2468, 0, 1564, 0, 2469, 0,
	0, 2479, 2480, 2492, 2488, 2478, 2473, 0, 0, 0,
	0, 2281, 0, 0, 0, 0, 0, 0, 0, 2283,
	0, 2493, 0, 2548, 0, 0, 0, 0, 0, 2286,
	2287, 2444, 0, 0, 0, 0, 2505, 0, 2290, 0,
	0, 2515, 0, 0, 0, 0, 2520, 0, 0, 0,
	2122, 0, 80, 683, 0, 0, 0, 2271, 2533, 0,
	2538, 2539, 2523, 1706, 0, 2541, 2552, 0, 544, 2545,
	0, 2553, 0, 2554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2442, 2443, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 2579, 2446, 2447, 2448,
	2449, 0, 2571, 667, 0, 2453, 2567, 0, 667, 1205,
	2570, 0, 2577, 0, 2121, 2566, 0, 0, 0, 0,
	0, 0, 2483, 2573, 2484, 1737, 1182, 0, 0, 0,
	0, 1753, 2313, 0, 0, 0, 0, 0, 0, 1137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2325,
	2326, 0, 0, 2327, 0, 0, 2329, 0, 450, 0,
	0, 127, 0, 0, 1137, 0, 683, 470, 683, 2303,
	80, 2607, 0, 2609, 2621, 470, 0, 2638, 2606, 0,
	2608, 0, 0, 0, 0, 0, 2605, 0, 1778, 2622,
	2626, 0, 0, 1781, 0, 0, 0, 0, 1783, 1784,
	0, 127, 1853, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 0, 0, 1799, 2631, 0, 1903, 0, 1804, 1805,
	1806, 1807, 0, 0, 2680, 1811, 1812, 1813, 0, 0,
	0, 2682, 1816, 1817, 1818, 1185, 2689, 0, 1033, 683,
	1824, 683, 0, 1827, 1828, 0, 0, 1854, 1833, 2700,
	2710, 0, 0, 1839, 0, 1840, 1841, 1842, 0, 1843,
	1844, 0, 2718, 80, 0, 2571, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 1869, 1870,
	1080, 0, 0, 0, 1069, 1068, 1078, 1079, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1070, 0, 683, 1080, 0,
	0, 0, 2739, 2748, 2741, 0, 0, 1279, 0, 2727,
	0, 2738, 2742, 1286, 1289, 2746, 0, 683, 0, 0,
	2747, 2634, 2740, 0, 0, 0, 0, 0, 2754, 0,
	1286, 1289, 0, 0, 0, 2756, 2069, 0, 0, 2757,
	683, 2610, 2775, 0, 0, 0, 2767, 0, 0, 0,
	447, 0, 0, 0, 80, 0, 0, 0, 0, 2779,
	80, 2785, 2780, 450, 2790, 0, 2776, 2797, 0, 0,
	683, 0, 0, 0, 2788, 0, 0, 0, 80, 0,
	683, 2802, 0, 80, 0, 0, 0, 2812, 2815, 2800,
	2818, 2811, 2831, 2810, 683, 2809, 2799, 0, 0, 2835,
	0, 2833, 0, 2830, 80, 0, 2795, 80, 80, 0,
	0, 447, 80, 0, 2840, 2797, 0, 2842, 0, 2848,
	1376, 0, 0, 0, 450, 0, 0, 0, 0, 0,
	0, 2839, 80, 0, 2858, 80, 0, 2820, 2289, 2797,
	2866, 0, 2868, 0, 0, 2863, 968, 0, 0, 0,
	80, 0, 80, 0, 544, 2302, 80, 2797, 0, 2797,
	0, 0, 0, 0, 0, 0, 2878, 80, 0, 0,
	80, 0, 80, 0, 2797, 0, 80, 0, 0, 2797,
	2882, 679, 0, 2797, 0, 1069, 1068, 1078, 1079, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1070, 0, 0, 1080,
	0, 2058, 0, 0, 0, 0, 0, 2066, 0, 0,
	679, 0, 2166, 0, 0, 0, 0, 0, 0, 2076,
	2077, 0, 1619, 1620, 0, 1625, 1626, 1627, 1628, 1629,
	0, 0, 2085, 0, 0, 0, 2089, 0, 0, 0,
	0, 0, 0, 1639, 1640, 1641, 0, 0, 0, 0,
	0, 1469, 1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1070, 0, 0, 1080, 2617, 2620, 0,
	2124, 0, 1137, 0, 0, 0, 0, 0, 1500, 1501,
	0, 1064, 0, 1067, 0, 0, 0, 0, 0, 2829,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 0, 1065, 1066,
	1063, 667, 2154, 0, 0, 0, 0, 0, 1069, 1068,
	1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070,
	0, 0, 1080, 0, 0, 0, 2851, 0, 0, 0,
	2253, 0, 0, 0, 0, 0, 0, 1903, 0, 0,
	2260, 2262, 0, 0, 0, 0, 667, 0, 0, 0,
	2253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 679, 679, 0, 0, 1471, 1476, 1477,
	0, 0, 0, 1481, 0, 1483, 1484, 1485, 1486, 0,
	1488, 2110, 0, 1491, 0, 0, 2719, 2720, 1496, 1497,
	1498, 1499, 2056, 2288, 0, 1503, 1504, 1505, 0, 0,
	0, 0, 0, 1511, 1512, 0, 0, 0, 1518, 1521,
	0, 1526, 0, 0, 0, 0, 2620, 0, 1043, 0,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 0, 1534, 1080, 1537, 1538, 0, 0, 470,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 0, 0, 1080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 398,
	0, 0, 0, 0, 0, 125, 2279, 0, 0, 2789,
	0, 0, 0, 0, 0, 0, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 469, 0,
	1080, 0, 0, 0, 0, 0, 545, 0, 0, 650,
	668, 0, 2291, 125, 1721, 0, 0, 125, 1721, 2109,
	0, 0, 0, 2300, 2301, 0, 0, 0, 0, 2306,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 125, 1721, 2317, 2318, 0, 2320, 0, 2108,
	2321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2253, 0, 2867, 0, 1777, 0, 0, 679,
	2333, 0, 0, 0, 971, 978, 979, 981, 982, 983,
	984, 985, 2253, 987, 988, 989, 0, 992, 0, 995,
	996, 997, 998, 999, 1069, 1068, 1078, 1079, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1070, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	1937, 1939, 0, 0, 1069, 1068, 1078, 1079, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1070, 0, 0, 1080, 0,
	0, 0, 0, 0, 0, 470, 0, 470, 0, 0,
	0, 0, 0, 2166, 1069, 1068, 1078, 1079, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1070, 0, 0, 1080, 2166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 667, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 0, 0,
	1080, 0, 0, 0, 0, 0, 0, 0, 667, 2450,
	2451, 2452, 0, 2454, 1779, 0, 0, 0, 0, 0,
	0, 0, 1785, 81, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 0, 0, 0, 2470, 2471,
	2472, 0, 0, 0, 0, 0, 1810, 2669, 0, 0,
	2844, 2847, 2843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 1970, 0, 1978, 0, 0, 0, 0, 2670, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 2166, 0, 2166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2556, 2557, 0, 0, 2558, 2559,
	2560, 2561, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2671, 0, 0, 679, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 2186, 0, 2067, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2672, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 2627, 0, 0, 0, 0, 2632,
	0, 0, 0, 0, 0, 0, 667, 0, 679, 0,
	2129, 0, 0, 2166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2693, 0, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 2701, 679, 0, 679, 0,
	2165, 0, 0, 0, 0, 0, 2257, 0, 0, 1244,
	0, 0, 125, 125, 125, 533, 0, 0, 0, 73,
	0, 0, 668, 0, 0, 0, 0, 668, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 2292, 2293,
	0, 2294, 0, 0, 2296, 0, 2298, 0, 2768, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1374, 0, 79, 1377,
	1378, 1379, 0, 1381, 1382, 0, 0, 1383, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 1385, 1386, 0,
	1387, 1388, 0, 1217, 0, 0, 0, 0, 0, 0,
	0, 491, 473, 0, 0, 2238, 0, 0, 0, 0,
	1231, 495, 2342, 2343, 0, 0, 0, 0, 0, 0,
	520, 0, 0, 486, 0, 480, 0, 0, 0, 0,
	2263, 0, 494, 0, 0, 2268, 0, 0, 0, 0,
	0, 0, 2272, 0, 0, 2273, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 496, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 507, 474, 0,
	511, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 513, 0, 0, 0, 0, 0, 0,
	487, 488, 490, 517, 0, 519, 525, 0, 0, 0,
	0, 0, 0, 2869, 2870, 0, 0, 0, 0, 0,
	0, 667, 1287, 1290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 2331, 0, 125, 0, 0, 1287,
	1290, 2331, 2331, 2331, 1315, 0, 0, 0, 0, 0,
	0, 679, 0, 125, 125, 125, 125, 125, 0, 0,
	0, 0, 0, 0, 2331, 0, 0, 0, 0, 0,
	0, 0, 1258, 1261, 1262, 1263, 1264, 1265, 1266, 475,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 497, 1246,
	1247, 1248, 1249, 1225, 1229, 1259, 1226, 1232, 1228, 1230,
	1227, 1244, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 0, 0, 0, 483, 476, 477, 478, 479, 481,
	500, 501, 505, 506, 523, 522, 521, 524, 528, 531,
	530, 532, 482, 484, 492, 502, 503, 504, 508, 509,
	518, 514, 516, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1231, 0, 0, 0, 0, 0, 125, 515,
	1260, 0, 2462, 0, 0, 0, 0, 0, 2331, 1315,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 512,
	0, 2165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 2165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1475, 1475, 1475, 0, 0, 1728, 1475, 1475,
	1475, 1475, 1475, 1475, 1475, 1475, 0, 0, 1475, 0,
	0, 0, 0, 1475, 1475, 1475, 1475, 0, 0, 0,
	1475, 1475, 1475, 0, 0, 0, 0, 0, 1475, 1475,
	0, 0, 0, 1475, 1475, 0, 1475, 0, 0, 0,
	668, 0, 0, 0, 0, 0, 0, 2544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1475, 1475,
	1475, 1475, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 469, 0, 0, 0, 0, 125, 125,
	0, 0, 125, 1575, 1315, 668, 2569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 0, 0, 0, 1258, 1261, 1262, 1263, 1264, 1265,
	1266, 0, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	0, 1246, 1247, 1248, 1249, 1225, 1229, 1259, 1226, 1232,
	1228, 1230, 1227, 0, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 0, 0, 0, 0, 0, 0, 0,
	2165, 0, 2165, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 125, 667, 125, 125, 394, 0,
	0, 0, 0, 125, 0, 0, 0, 2250, 0, 0,
	0, 2252, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 1698, 125, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 2695, 0, 2698, 0, 0, 0, 0,
	0, 0, 1260, 0, 493, 0, 0, 125, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 679, 0, 375, 0, 0, 491, 473, 0, 0,
	0, 0, 384, 392, 393, 0, 495, 0, 1315, 0,
	0, 2165, 0, 0, 0, 520, 0, 0, 486, 0,
	480, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 2331, 0, 0, 381, 0, 0,
	382, 0, 0, 390, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1475,
	0, 498, 496, 0, 2698, 0, 499, 1475, 0, 0,
	0, 0, 507, 474, 2782, 511, 0, 0, 1475, 1475,
	0, 0, 0, 472, 0, 0, 0, 0, 679, 0,
	0, 1475, 0, 0, 0, 1475, 387, 489, 513, 0,
	0, 0, 0, 0, 0, 487, 488, 490, 517, 0,
	519, 525, 0, 0, 0, 0, 1475, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 125, 125, 125, 125, 125, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 125, 0,
	0, 0, 469, 0, 0, 0, 0, 1475, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 376, 377, 0, 397,
	0, 0, 0, 378, 380, 0, 374, 396, 395, 0,
	0, 0, 0, 0, 526, 527, 0, 0, 0, 483,
	476, 477, 478, 479, 481, 500, 501, 505, 506, 523,
	522, 521, 524, 528, 531, 530, 532, 482, 484, 492,
	502, 503, 504, 508, 509, 518, 514, 516, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 510, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1475, 0, 0, 0, 0, 0, 0, 0, 0, 1475,
	0, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 0, 491,
	473, 1275, 0, 0, 0, 0, 0, 0, 0, 495,
	533, 0, 0, 0, 0, 0, 0, 0, 520, 0,
	0, 486, 0, 480, 0, 0, 485, 0, 0, 0,
	494, 0, 0, 0, 0, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 507, 474, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 472, 0, 1217, 0,
	0, 0, 0, 0, 0, 0, 491, 473, 0, 0,
	489, 513, 0, 0, 0, 0, 495, 0, 487, 488,
	490, 517, 0, 519, 525, 520, 0, 0, 486, 0,
	480, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 496, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 507, 474, 0, 511, 125, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 0, 475, 0, 0,
	125, 0, 0, 0, 0, 0, 497, 489, 513, 0,
	0, 0, 0, 0, 0, 487, 488, 490, 517, 0,
	519, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 0,
	545, 0, 483, 476, 477, 478, 479, 481, 500, 501,
	505, 506, 523, 522, 521, 524, 528, 531, 530, 532,
	482, 484, 492, 502, 503, 504, 508, 509, 518, 514,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 469, 515, 0, 0,
	668, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 41, 0, 526, 527, 510, 512, 0, 483,
	476, 477, 478, 479, 481, 500, 501, 505, 506, 523,
	522, 521, 524, 528, 531, 530, 532, 482, 484, 492,
	502, 503, 504, 508, 509, 518, 514, 516, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2669, 0, 125, 0, 0, 2884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 469, 57, 58, 0, 2671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2672, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 838, 814, 333,
	759, 841, 717, 743, 854, 747, 751, 794, 700, 772,
	259, 739, 701, 0, 721, 690, 731, 691, 718, 761,
	177, 716, 816, 775, 840, 216, 789, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 839, 767, 0, 848,
	219, 0, 784, 849, 320, 243, 0, 0, 763, 825,
	770, 812, 758, 796, 709, 783, 843, 740, 791, 844,
	0, 0, 0, 0, 2721, 0, 73, 0, 0, 0,
	0, 0, 0, 704, 0, 787, 837, 734, 790, 793,
	688, 786, 0, 695, 702, 853, 832, 724, 725, 726,
	0, 0, 0, 0, 125, 0, 0, 762, 771, 806,
	755, 352, 270, 287, 308, 749, 278, 737, 0, 0,
	0, 0, 0, 0, 0, 79, 722, 0, 781, 0,
	0, 0, 703, 696, 668, 0, 760, 0, 0, 0,
	708, 687, 723, 808, 125, 685, 244, 144, 813, 831,
	757, 207, 363, 835, 754, 753, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 805, 302, 736,
	686, 817, 719, 732, 167, 728, 294, 263, 351, 741,
	778, 293, 220, 341, 801, 836, 350, 745, 820, 360,
	365, 727, 768, 706, 317, 179, 175, 178, 0, 133,
	738, 277, 172, 212, 756, 795, 720, 164, 803, 782,
	819, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 2724, 2725, 2726, 750, 742, 0, 0, 356, 752,
	305, 304, 746, 202, 811, 785, 692, 286, 798, 208,
	132, 330, 368, 150, 214, 335, 684, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	733, 800, 810, 284, 307, 337, 152, 324, 729, 730,
	735, 807, 296, 818, 829, 842, 227, 182, 185, 196,
	203, 792, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 693, 0, 322,
	354, 370, 154, 715, 310, 336, 744, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 713, 714, 711, 0,
	712, 773, 774, 845, 846, 847, 809, 705, 0, 826,
	827, 0, 0, 0, 0, 0, 815, 833, 834, 797,
	855, 748, 710, 694, 697, 698, 699, 707, 764, 765,
	777, 780, 823, 822, 821, 824, 828, 851, 850, 852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 131, 140, 218, 856, 285, 188, 355, 689,
	174, 0, 766, 769, 779, 804, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 802, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 830, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 682, 0, 1597, 1598, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 1898, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 788, 799, 838,
	814, 333, 759, 841, 717, 743, 854, 747, 751, 794,
	700, 772, 259, 739, 701, 0, 721, 690, 731, 691,
	718, 761, 177, 716, 816, 775, 840, 216, 789, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 839, 767,
	0, 848, 219, 0, 784, 849, 320, 243, 0, 0,
	763, 825, 770, 812, 758, 796, 709, 783, 843, 740,
	791, 844, 0, 0, 0, 0, 682, 0, 1597, 1598,
	0, 0, 0, 0, 0, 704, 0, 787, 837, 734,
	790, 793, 688, 786, 0, 695, 702, 853, 832, 724,
	725, 726, 0, 0, 0, 0, 0, 0, 0, 762,
	771, 806, 755, 352, 270, 287, 308, 749, 278, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	781, 0, 0, 0, 703, 696, 0, 0, 760, 0,
	0, 0, 708, 687, 723, 808, 0, 685, 244, 144,
	813, 831, 757, 207, 363, 835, 754, 753, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 805,
	302, 736, 686, 817, 719, 732, 167, 728, 294, 263,
	351, 741, 778, 293, 220, 341, 801, 836, 350, 745,
	820, 360, 365, 727, 768, 706, 317, 179, 175, 178,
	0, 133, 738, 277, 172, 212, 756, 795, 720, 164,
	803, 782, 819, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 750, 742, 0, 0,
	356, 752, 305, 304, 746, 202, 811, 785, 692, 286,
	798, 208, 132, 330, 368, 150, 214, 335, 684, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 733, 800, 810, 284, 307, 337, 152, 324,
	729, 730, 735, 807, 296, 818, 829, 842, 227, 182,
	185, 196, 203, 792, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 693,
	0, 322, 354, 370, 154, 715, 310, 336, 744, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 713, 714,
	711, 0, 712, 773, 774, 845, 846, 847, 809, 705,
	0, 826, 827, 0, 0, 0, 0, 0, 815, 833,
	834, 797, 855, 748, 710, 694, 697, 698, 699, 707,
	764, 765, 777, 780, 823, 822, 821, 824, 828, 851,
	850, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 131, 140, 218, 856, 285, 188,
	355, 689, 174, 0, 766, 769, 779, 804, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 802,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 830, 0, 788, 799,
	838, 2126, 333, 759, 841, 717, 743, 854, 747, 751,
	794, 700, 772, 259, 739, 701, 0, 721, 690, 731,
	691, 718, 761, 177, 716, 816, 775, 840, 216, 789,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 839,
	767, 0, 848, 219, 0, 784, 849, 320, 243, 0,
	0, 763, 825, 770, 812, 758, 796, 709, 783, 843,
	740, 791, 844, 81, 0, 1033, 0, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 787, 837,
	734, 790, 793, 688, 786, 0, 695, 702, 853, 832,
	724, 725, 726, 0, 0, 0, 0, 0, 0, 0,
	762, 771, 806, 755, 352, 270, 287, 308, 749, 278,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 781, 0, 0, 0, 703, 696, 0, 0, 760,
	0, 0, 0, 708, 687, 723, 808, 0, 685, 244,
	144, 813, 831, 757, 207, 363, 835, 754, 753, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	805, 302, 736, 686, 817, 719, 732, 167, 728, 294,
	263, 351, 741, 778, 293, 220, 341, 801, 836, 350,
	745, 820, 360, 365, 727, 768, 706, 317, 179, 175,
	178, 0, 133, 738, 277, 172, 212, 756, 795, 720,
	164, 803, 782, 819, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 750, 742, 0,
	0, 356, 752, 305, 304, 746, 202, 811, 785, 692,
	286, 798, 208, 132, 330, 368, 150, 214, 335, 684,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 733, 800, 810, 284, 307, 337, 152,
	324, 729, 730, 735, 807, 296, 818, 829, 842, 227,
	182, 185, 196, 203, 792, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	693, 0, 322, 354, 370, 154, 715, 310, 336, 744,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 713,
	714, 711, 0, 712, 773, 774, 845, 846, 847, 809,
	705, 0, 826, 827, 0, 0, 0, 0, 0, 815,
	833, 834, 797, 855, 748, 710, 694, 697, 698, 699,
	707, 764, 765, 777, 780, 823, 822, 821, 824, 828,
	851, 850, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 131, 140, 218, 2127, 285,
	188, 355, 689, 174, 0, 766, 769, 779, 804, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	802, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 830, 0, 788,
	799, 838, 814, 333, 759, 841, 717, 743, 854, 747,
	751, 794, 700, 772, 259, 739, 701, 0, 721, 690,
	731, 691, 718, 761, 177, 716, 816, 775, 840, 216,
	789, 0, 166, 224, 222, 0, 0, 0, 266, 332,
	839, 767, 0, 848, 219, 0, 784, 849, 320, 243,
	0, 0, 763, 825, 770, 812, 758, 796, 709, 783,
	843, 740, 791, 844, 0, 0, 0, 0, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 787,
	837, 734, 790, 793, 688, 786, 0, 695, 702, 853,
	832, 724, 725, 726, 0, 0, 0, 0, 0, 0,
	0, 762, 771, 806, 755, 352, 270, 287, 308, 749,
	278, 737, 0, 0, 0, 0, 0, 0, 2439, 0,
	722, 0, 781, 0, 0, 0, 703, 696, 0, 0,
	760, 0, 0, 0, 708, 687, 723, 808, 0, 685,
	244, 144, 813, 831, 757, 207, 363, 835, 754, 753,
	280, 0, 327, 195, 217, 149, 128, 142, 160, 194,
	255, 805, 302, 736, 686, 817, 719, 732, 167, 728,
	294, 263, 351, 741, 778, 293, 220, 341, 801, 836,
	350, 745, 820, 360, 365, 727, 768, 706, 317, 179,
	175, 178, 0, 133, 738, 277, 172, 212, 756, 795,
	720, 164, 803, 782, 819, 316, 339, 151, 334, 242,
	248, 161, 163, 162, 143, 311, 338, 156, 165, 321,
	298, 328, 171, 0, 0, 0, 0, 0, 750, 742,
	0, 0, 356, 752, 305, 304, 746, 202, 811, 785,
	692, 286, 798, 208, 132, 330, 368, 150, 214, 335,
	684, 189, 254, 169, 264, 265, 186, 130, 282, 236,
	237, 235, 238, 193, 733, 800, 810, 284, 307, 337,
	152, 324, 729, 730, 735, 807, 296, 818, 829, 842,
	227, 182, 185, 196, 203, 792, 291, 325, 357, 0,
	145, 134, 331, 349, 157, 306, 309, 366, 292, 137,
	347, 326, 240, 209, 210, 135, 0, 136, 289, 176,
	192, 170, 258, 0, 191, 279, 344, 345, 168, 369,
	146, 359, 139, 147, 358, 251, 0, 250, 361, 340,
	348, 241, 229, 0, 138, 346, 239, 228, 215, 184,
	198, 275, 223, 276, 199, 246, 245, 247, 225, 230,
	0, 693, 0, 322, 354, 370, 154, 715, 310, 336,
	744, 283, 155, 190, 183, 274, 249, 148, 201, 319,
	213, 221, 288, 367, 262, 295, 158, 353, 318, 180,
	713, 714, 711, 0, 712, 773, 774, 845, 846, 847,
	809, 705, 0, 826, 827, 0, 0, 0, 0, 0,
	815, 833, 834, 797, 855, 748, 710, 694, 697, 698,
	699, 707, 764, 765, 777, 780, 823, 822, 821, 824,
	828, 851, 850, 852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 131, 140, 218, 856,
	285, 188, 355, 689, 174, 0, 766, 769, 779, 804,
	129, 141, 153, 159, 173, 181, 187, 197, 200, 204,
	205, 206, 211, 226, 231, 232, 233, 234, 252, 253,
	256, 257, 260, 261, 267, 268, 269, 271, 272, 273,
	281, 802, 290, 297, 299, 300, 301, 303, 312, 313,
	314, 315, 323, 329, 342, 343, 362, 364, 830, 0,
	788, 799, 838, 814, 333, 759, 841, 717, 743, 854,
	747, 751, 794, 700, 772, 259, 739, 701, 0, 721,
	690, 731, 691, 718, 761, 177, 716, 816, 775, 840,
	216, 789, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 839, 767, 0, 848, 219, 0, 784, 849, 320,
	243, 0, 0, 763, 825, 770, 812, 758, 796, 709,
	783, 843, 740, 791, 844, 0, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	787, 837, 734, 790, 793, 688, 786, 0, 695, 702,
	853, 832, 724, 725, 726, 0, 0, 0, 0, 0,
	0, 0, 762, 771, 806, 755, 352, 270, 287, 308,
	749, 278, 737, 0, 0, 0, 0, 0, 0, 2062,
	0, 722, 0, 781, 0, 0, 0, 703, 696, 0,
	0, 760, 0, 0, 0, 708, 687, 723, 808, 0,
	685, 244, 144, 813, 831, 757, 207, 363, 835, 754,
	753, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 805, 302, 736, 686, 817, 719, 732, 167,
	728, 294, 263, 351, 741, 778, 293, 220, 341, 801,
	836, 350, 745, 820, 360, 365, 727, 768, 706, 317,
	179, 175, 178, 0, 133, 738, 277, 172, 212, 756,
	795, 720, 164, 803, 782, 819, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 750,
	742, 0, 0, 356, 752, 305, 304, 746, 202, 811,
	785, 692, 286, 798, 208, 132, 330, 368, 150, 214,
	335, 684, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 733, 800, 810, 284, 307,
	337, 152, 324, 729, 730, 735, 807, 296, 818, 829,
	842, 227, 182, 185, 196, 203, 792, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 693, 0, 322, 354, 370, 154, 715, 310,
	336, 744, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 713, 714, 711, 0, 712, 773, 774, 845, 846,
	847, 809, 705, 0, 826, 827, 0, 0, 0, 0,
	0, 815, 833, 834, 797, 855, 748, 710, 694, 697,
	698, 699, 707, 764, 765, 777, 780, 823, 822, 821,
	824, 828, 851, 850, 852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 776, 131, 140, 218,
	856, 285, 188, 355, 689, 174, 0, 766, 769, 779,
	804, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 802, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 830,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	2052, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 788, 799, 838, 814, 333, 759, 841, 717,
	743, 854, 747, 751, 794, 700, 772, 259, 739, 701,
	0, 721, 690, 731, 691, 718, 761, 177, 716, 816,
	775, 840, 216, 789, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 839, 767, 0, 848, 219, 0, 784,
	849, 320, 243, 0, 0, 763, 825, 770, 812, 758,
	796, 709, 783, 843, 740, 791, 844, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 787, 837, 734, 790, 793, 688, 786, 0,
	695, 702, 853, 832, 724, 725, 726, 0, 0, 0,
	0, 0, 0, 0, 762, 771, 806, 755, 352, 270,
	287, 308, 749, 278, 737, 0, 0, 0, 0, 0,
	0, 1576, 0, 722, 0, 781, 0, 0, 0, 703,
	696, 0, 0, 760, 0, 0, 0, 708, 687, 723,
	808, 0, 685, 244, 144, 813, 831, 757, 207, 363,
	835, 754, 753, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 805, 302, 736, 686, 817, 719,
	732, 167, 728, 294, 263, 351, 741, 778, 293, 220,
	341, 801, 836, 350, 745, 820, 360, 365, 727, 768,
	706, 317, 179, 175, 178, 0, 133, 738, 277, 172,
	212, 756, 795, 720, 164, 803, 782, 819, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 750, 742, 0, 0, 356, 752, 305, 304, 746,
	202, 811, 785, 692, 286, 798, 208, 132, 330, 368,
	150, 214, 335, 684, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 733, 800, 810,
	284, 307, 337, 152, 324, 729, 730, 735, 807, 296,
	818, 829, 842, 227, 182, 185, 196, 203, 792, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 693, 0, 322, 354, 370, 154,
	715, 310, 336, 744, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 713, 714, 711, 0, 712, 773, 774,
	845, 846, 847, 809, 705, 0, 826, 827, 0, 0,
	0, 0, 0, 815, 833, 834, 797, 855, 748, 710,
	694, 697, 698, 699, 707, 764, 765, 777, 780, 823,
	822, 821, 824, 828, 851, 850, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 131,
	140, 218, 856, 285, 188, 355, 689, 174, 0, 766,
	769, 779, 804, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 802, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 830, 0, 788, 799, 838, 814, 333, 759, 841,
	717, 743, 854, 747, 751, 794, 700, 772, 259, 739,
	701, 0, 721, 690, 731, 691, 718, 761, 177, 716,
	816, 775, 840, 216, 789, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 839, 767, 0, 848, 219, 0,
	784, 849, 320, 243, 0, 0, 763, 825, 770, 812,
	758, 796, 709, 783, 843, 740, 791, 844, 0, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 0, 787, 837, 734, 790, 793, 688, 786,
	0, 695, 702, 853, 832, 724, 725, 726, 0, 0,
	0, 0, 0, 0, 0, 762, 771, 806, 755, 352,
	270, 287, 308, 749, 278, 737, 0, 0, 0, 0,
	0, 0, 1435, 0, 722, 0, 781, 0, 0, 0,
	703, 696, 0, 0, 760, 0, 0, 0, 708, 687,
	723, 808, 0, 685, 244, 144, 813, 831, 757, 207,
	363, 835, 754, 753, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 805, 302, 736, 686, 817,
	719, 732, 167, 728, 294, 263, 351, 741, 778, 293,
	220, 341, 801, 836, 350, 745, 820, 360, 365, 727,
	768, 706, 317, 179, 175, 178, 0, 133, 738, 277,
	172, 212, 756, 795, 720, 164, 803, 782, 819, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 750, 742, 0, 0, 356, 752, 305, 304,
	746, 202, 811, 785, 692, 286, 798, 208, 132, 330,
	368, 150, 214, 335, 684, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 733, 800,
	810, 284, 307, 337, 152, 324, 729, 730, 735, 807,
	296, 818, 829, 842, 227, 182, 185, 196, 203, 792,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 693, 0, 322, 354, 370,
	154, 715, 310, 336, 744, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 713, 714, 711, 0, 712, 773,
	774, 845, 846, 847, 809, 705, 0, 826, 827, 0,
	0, 0, 0, 0, 815, 833, 834, 797, 855, 748,
	710, 694, 697, 698, 699, 707, 764, 765, 777, 780,
	823, 822, 821, 824, 828, 851, 850, 852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 776,
	131, 140, 218, 856, 285, 188, 355, 689, 174, 0,
	766, 769, 779, 804, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 802, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 830, 0, 788, 799, 838, 814, 333, 759,
	841, 717, 743, 854, 747, 751, 794, 700, 772, 259,
	739, 701, 0, 721, 690, 731, 691, 718, 761, 177,
	716, 816, 775, 840, 216, 789, 0, 166, 224, 222,
	0, 0, 0, 266, 332, 839, 767, 0, 848, 219,
	0, 784, 849, 320, 243, 0, 0, 763, 825, 770,
	812, 758, 796, 709, 783, 843, 740, 791, 844, 0,
	0, 0, 0, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 787, 837, 734, 790, 793, 688,
	786, 0, 695, 702, 853, 832, 724, 725, 726, 0,
	0, 0, 0, 0, 0, 0, 762, 771, 806, 755,
	352, 270, 287, 308, 749, 278, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 781, 0, 0,
	0, 703, 696, 0, 0, 760, 0, 0, 0, 708,
	687, 723, 808, 0, 685, 244, 144, 813, 831, 757,
	207, 363, 835, 754, 753, 280, 0, 327, 195, 217,
	149, 128, 142, 160, 194, 255, 805, 302, 736, 686,
	817, 719, 732, 167, 728, 294, 263, 351, 741, 778,
	293, 220, 341, 801, 836, 350, 745, 820, 360, 365,
	727, 768, 706, 317, 179, 175, 178, 0, 133, 738,
	277, 172, 212, 756, 795, 720, 164, 803, 782, 819,
	316, 339, 151, 334, 242, 248, 161, 163, 162, 143,
	311, 338, 156, 165, 321, 298, 328, 171, 0, 0,
	0, 0, 0, 750, 742, 0, 0, 356, 752, 305,
	304, 746, 202, 811, 785, 692, 286, 798, 208, 132,
	330, 368, 150, 214, 335, 684, 189, 254, 169, 264,
	265, 186, 130, 282, 236, 237, 235, 238, 193, 733,
	800, 810, 284, 307, 337, 152, 324, 729, 730, 735,
	807, 296, 818, 829, 842, 227, 182, 185, 196, 203,
	792, 291, 325, 357, 0, 145, 134, 331, 349, 157,
	306, 309, 366, 292, 137, 347, 326, 240, 209, 210,
	135, 0, 136, 289, 176, 192, 170, 258, 0, 191,
	279, 344, 345, 168, 369, 146, 359, 139, 147, 358,
	251, 0, 250, 361, 340, 348, 241, 229, 0, 138,
	346, 239, 228, 215, 184, 198, 275, 223, 276, 199,
	246, 245, 247, 225, 230, 0, 693, 0, 322, 354,
	370, 154, 715, 310, 336, 744, 283, 155, 190, 183,
	274, 249, 148, 201, 319, 213, 221, 288, 367, 262,
	295, 158, 353, 318, 180, 713, 714, 711, 0, 712,
	773, 774, 845, 846, 847, 809, 705, 0, 826, 827,
	0, 0, 0, 0, 0, 815, 833, 834, 797, 855,
	748, 710, 694, 697, 698, 699, 707, 764, 765, 777,
	780, 823, 822, 821, 824, 828, 851, 850, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 131, 140, 218, 856, 285, 188, 355, 689, 174,
	0, 766, 769, 779, 804, 129, 141, 153, 159, 173,
	181, 187, 197, 200, 204, 205, 206, 211, 226, 231,
	232, 233, 234, 252, 253, 256, 257, 260, 261, 267,
	268, 269, 271, 272, 273, 281, 802, 290, 297, 299,
	300, 301, 303, 312, 313, 314, 315, 323, 329, 342,
	343, 362, 364, 830, 0, 788, 799, 838, 814, 333,
	759, 841, 717, 743, 854, 747, 751, 794, 700, 772,
	259, 739, 701, 0, 721, 690, 731, 691, 718, 761,
	177, 716, 816, 775, 840, 216, 789, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 839, 767, 0, 848,
	219, 0, 784, 849, 320, 243, 0, 0, 763, 825,
	770, 812, 758, 796, 709, 783, 843, 740, 791, 844,
	0, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 787, 837, 734, 790, 793,
	688, 786, 0, 695, 702, 853, 832, 724, 725, 726,
	0, 0, 0, 0, 0, 0, 0, 762, 771, 806,
	755, 352, 270, 287, 308, 749, 278, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 781, 0,
	0, 0, 703, 696, 0, 0, 760, 0, 0, 0,
	708, 687, 723, 808, 0, 685, 244, 144, 813, 831,
	757, 207, 363, 835, 754, 753, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 805, 302, 736,
	686, 817, 719, 732, 167, 728, 294, 263, 351, 741,
	778, 293, 220, 341, 801, 836, 350, 745, 820, 360,
	365, 727, 768, 706, 317, 179, 175, 178, 0, 133,
	738, 277, 172, 212, 756, 795, 720, 164, 803, 782,
	819, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 750, 742, 0, 0, 356, 752,
	305, 304, 746, 202, 811, 785, 692, 286, 798, 208,
	132, 330, 368, 150, 214, 335, 684, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	733, 800, 810, 284, 307, 337, 152, 324, 729, 730,
	735, 807, 296, 818, 829, 842, 227, 182, 185, 196,
	203, 792, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 693, 0, 322,
	354, 370, 154, 715, 310, 336, 744, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 713, 714, 711, 0,
	712, 773, 774, 845, 846, 847, 809, 705, 0, 826,
	827, 0, 0, 0, 0, 0, 815, 833, 834, 797,
	855, 748, 710, 694, 697, 698, 699, 707, 764, 765,
	777, 780, 823, 822, 821, 824, 828, 851, 850, 852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 131, 140, 218, 856, 285, 188, 355, 689,
	174, 0, 766, 769, 779, 804, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 802, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 830, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 1609, 1613, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 1612, 207, 363, 835, 754, 753, 1606, 0, 1607,
	1608, 217, 681, 128, 142, 1604, 1611, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 788, 799, 838,
	814, 333, 759, 841, 717, 743, 854, 747, 751, 794,
	700, 772, 259, 739, 701, 0, 721, 690, 731, 691,
	718, 761, 177, 716, 816, 775, 840, 216, 789, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 839, 767,
	0, 848, 219, 0, 784, 849, 320, 243, 0, 0,
	763, 825, 770, 812, 758, 796, 709, 783, 843, 740,
	791, 844, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 787, 837, 734,
	790, 793, 688, 786, 0, 695, 702, 853, 832, 724,
	725, 726, 0, 0, 0, 0, 0, 0, 0, 762,
	771, 806, 755, 352, 270, 287, 308, 749, 278, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 0,
	781, 0, 0, 0, 703, 696, 0, 0, 760, 0,
	0, 0, 708, 687, 723, 808, 0, 685, 244, 144,
	813, 831, 757, 207, 363, 835, 754, 753, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 805,
	302, 736, 686, 817, 719, 732, 167, 728, 294, 263,
	351, 741, 778, 293, 220, 341, 801, 836, 350, 745,
	820, 360, 365, 727, 768, 706, 317, 179, 175, 178,
	0, 133, 738, 277, 172, 212, 756, 795, 720, 164,
	803, 782, 819, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 750, 742, 0, 0,
	356, 752, 305, 304, 746, 202, 811, 785, 692, 286,
	798, 208, 132, 330, 368, 150, 214, 335, 684, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 733, 800, 810, 284, 307, 337, 152, 324,
	729, 730, 735, 807, 296, 818, 829, 842, 227, 182,
	185, 196, 203, 792, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 693,
	0, 322, 354, 370, 154, 715, 310, 336, 744, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 713, 714,
	711, 0, 712, 773, 774, 845, 846, 847, 809, 705,
	0, 826, 827, 0, 0, 0, 0, 0, 815, 833,
	834, 797, 855, 748, 710, 694, 697, 698, 699, 707,
	764, 765, 777, 780, 823, 822, 821, 824, 828, 851,
	850, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 131, 140, 218, 856, 285, 188,
	355, 689, 174, 0, 766, 769, 779, 804, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 802,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 830, 0, 788, 799,
	838, 814, 333, 759, 841, 717, 743, 854, 747, 751,
	794, 700, 772, 259, 739, 701, 0, 721, 690, 731,
	691, 718, 761, 177, 716, 816, 775, 840, 216, 789,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 839,
	767, 0, 848, 219, 0, 784, 849, 320, 243, 0,
	0, 763, 825, 770, 812, 758, 796, 709, 783, 843,
	740, 791, 844, 0, 0, 0, 0, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 787, 837,
	734, 790, 793, 688, 786, 0, 695, 702, 853, 832,
	724, 725, 726, 0, 0, 0, 0, 0, 0, 0,
	762, 771, 806, 755, 352, 270, 287, 308, 749, 278,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 781, 0, 0, 0, 703, 696, 0, 0, 760,
	0, 0, 0, 708, 687, 723, 808, 0, 685, 244,
	144, 813, 831, 757, 207, 363, 835, 754, 753, 280,
	0, 327, 195, 217, 681, 128, 142, 677, 194, 255,
	805, 302, 736, 686, 817, 719, 732, 167, 728, 294,
	263, 351, 741, 778, 293, 220, 341, 801, 836, 350,
	745, 820, 360, 365, 727, 768, 706, 317, 179, 175,
	178, 0, 133, 738, 277, 172, 212, 756, 795, 720,
	164, 803, 782, 819, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 750, 742, 0,
	0, 356, 752, 305, 304, 746, 202, 811, 785, 692,
	286, 798, 208, 132, 330, 368, 150, 214, 335, 684,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 733, 800, 810, 284, 307, 337, 152,
	324, 729, 730, 735, 807, 296, 818, 829, 842, 227,
	182, 185, 196, 203, 792, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	693, 0, 322, 354, 370, 154, 715, 310, 336, 744,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 713,
	714, 711, 0, 712, 773, 774, 845, 846, 847, 809,
	705, 0, 826, 827, 0, 0, 0, 0, 0, 815,
	833, 834, 797, 855, 748, 710, 694, 697, 698, 699,
	707, 764, 765, 777, 780, 823, 822, 821, 824, 828,
	851, 850, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 776, 131, 140, 218, 856, 285,
	188, 355, 689, 174, 0, 766, 769, 779, 804, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	802, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 830, 333, 788,
	799, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 552, 0, 0, 0, 177,
	549, 0, 0, 0, 216, 0, 0, 166, 224, 222,
	0, 0, 0, 266, 332, 0, 0, 0, 629, 219,
	0, 0, 529, 320, 243, 0, 0, 0, 0, 618,
	619, 0, 0, 0, 0, 0, 0, 1586, 0, 81,
	0, 0, 0, 550, 574, 573, 576, 577, 578, 579,
	0, 0, 533, 575, 580, 613, 614, 1587, 0, 0,
	547, 565, 0, 628, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 270, 287, 308, 0, 278, 493, 0, 0, 0,
	0, 562, 563, 0, 0, 0, 0, 641, 0, 564,
	0, 0, 559, 560, 561, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 144, 620, 0, 0,
	207, 363, 0, 0, 639, 280, 0, 327, 195, 217,
	149, 128, 142, 160, 194, 255, 0, 302, 588, 473,
	0, 0, 0, 167, 0, 294, 263, 351, 590, 0,
	293, 220, 341, 0, 0, 350, 0, 520, 360, 365,
	486, 0, 480, 317, 179, 175, 178, 0, 133, 494,
	277, 172, 212, 0, 0, 0, 164, 0, 0, 0,
	316, 339, 151, 334, 242, 248, 161, 163, 162, 143,
	311, 338, 156, 165, 321, 298, 328, 171, 0, 0,
	0, 0, 0, 498, 496, 0, 0, 356, 499, 305,
	304, 0, 202, 0, 507, 474, 286, 511, 208, 132,
	330, 368, 150, 214, 335, 472, 189, 254, 169, 264,
	265, 186, 130, 282, 236, 237, 235, 238, 193, 489,
	513, 0, 284, 307, 337, 152, 324, 487, 488, 490,
	517, 296, 519, 525, 0, 227, 182, 185, 196, 203,
	0, 291, 325, 357, 0, 145, 134, 331, 349, 157,
	306, 309, 366, 292, 137, 347, 326, 240, 209, 210,
	135, 0, 136, 289, 176, 192, 170, 258, 0, 191,
	279, 344, 345, 168, 369, 146, 359, 139, 147, 358,
	251, 0, 250, 361, 340, 348, 241, 229, 0, 138,
	346, 239, 228, 215, 184, 198, 275, 223, 276, 199,
	246, 245, 247, 225, 230, 0, 475, 0, 322, 354,
	370, 154, 0, 310, 336, 497, 283, 155, 190, 183,
	274, 249, 148, 201, 319, 213, 221, 288, 367, 262,
	295, 158, 353, 318, 180, 630, 640, 636, 638, 637,
	634, 635, 633, 632, 631, 642, 621, 622, 623, 624,
	625, 0, 0, 0, 627, 0, 607, 608, 0, 0,
	0, 483, 581, 582, 583, 584, 585, 591, 592, 596,
	597, 605, 604, 603, 606, 609, 611, 610, 612, 586,
	587, 589, 593, 594, 595, 598, 599, 602, 600, 601,
	626, 131, 140, 218, 0, 285, 188, 355, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	181, 187, 197, 200, 204, 205, 206, 211, 226, 231,
	232, 233, 234, 252, 253, 256, 257, 260, 261, 267,
	268, 269, 271, 272, 273, 281, 515, 290, 297, 299,
	300, 301, 303, 312, 313, 314, 315, 323, 329, 342,
	343, 362, 364, 36, 333, 510, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 177, 549, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 629, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 550,
	574, 573, 576, 577, 578, 579, 0, 0, 533, 575,
	580, 613, 614, 0, 0, 0, 547, 565, 0, 628,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 641, 0, 564, 0, 0, 559, 560,
	561, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 620, 0, 0, 207, 363, 0, 0,
	639, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 588, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 590, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 630, 640, 636, 638, 637, 634, 635, 633, 632,
	631, 642, 621, 622, 623, 624, 625, 0, 0, 0,
	627, 0, 607, 608, 0, 0, 0, 483, 581, 582,
	583, 584, 585, 591, 592, 596, 597, 605, 604, 603,
	606, 609, 611, 610, 612, 586, 587, 589, 593, 594,
	595, 598, 599, 602, 600, 601, 626, 131, 140, 218,
	79, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	177, 549, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 629,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 550, 574, 573, 576, 577, 578,
	579, 0, 0, 533, 575, 580, 613, 614, 0, 0,
	0, 547, 565, 0, 628, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 562, 563, 543, 0, 0, 0, 641, 0,
	564, 0, 0, 559, 560, 561, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 620, 0,
	0, 207, 363, 0, 0, 639, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 588,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 590,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 630, 640, 636, 638,
	637, 634, 635, 633, 632, 631, 642, 621, 622, 623,
	624, 625, 0, 0, 0, 627, 0, 607, 608, 0,
	0, 0, 483, 581, 582, 583, 584, 585, 591, 592,
	596, 597, 605, 604, 603, 606, 609, 611, 610, 612,
	586, 587, 589, 593, 594, 595, 598, 599, 602, 600,
	601, 626, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 177, 549, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 629, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1033, 0, 550,
	574, 573, 576, 577, 578, 579, 0, 0, 533, 575,
	580, 613, 614, 0, 0, 0, 547, 565, 0, 628,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 641, 0, 564, 0, 0, 559, 560,
	561, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 620, 0, 0, 207, 363, 0, 0,
	639, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 588, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 590, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 630, 640, 636, 638, 637, 634, 635, 633, 632,
	631, 642, 621, 622, 623, 624, 625, 0, 0, 0,
	627, 0, 607, 608, 0, 0, 0, 483, 581, 582,
	583, 584, 585, 591, 592, 596, 597, 605, 604, 603,
	606, 609, 611, 610, 612, 586, 587, 589, 593, 594,
	595, 598, 599, 602, 600, 601, 626, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	177, 549, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 629,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 550, 574, 573, 576, 577, 578,
	579, 0, 0, 533, 575, 580, 613, 614, 0, 0,
	0, 547, 565, 0, 628, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 562, 563, 1473, 0, 0, 0, 641, 0,
	564, 0, 0, 559, 560, 561, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 620, 0,
	0, 207, 363, 0, 0, 639, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 588,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 590,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 630, 640, 636, 638,
	637, 634, 635, 633, 632, 631, 642, 621, 622, 623,
	624, 625, 0, 0, 0, 627, 0, 607, 608, 0,
	0, 0, 483, 581, 582, 583, 584, 585, 591, 592,
	596, 597, 605, 604, 603, 606, 609, 611, 610, 612,
	586, 587, 589, 593, 594, 595, 598, 599, 602, 600,
	601, 626, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 177, 549, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 629, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 550,
	574, 1520, 576, 577, 578, 579, 0, 0, 533, 575,
	580, 613, 614, 0, 0, 0, 547, 565, 0, 628,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 562, 563, 1473,
	0, 0, 0, 641, 0, 564, 0, 0, 559, 560,
	561, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 620, 0, 0, 207, 363, 0, 0,
	639, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 588, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 590, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 630, 640, 636, 638, 637, 634, 635, 633, 632,
	631, 642, 621, 622, 623, 624, 625, 0, 0, 0,
	627, 0, 607, 608, 0, 0, 0, 483, 581, 582,
	583, 584, 585, 591, 592, 596, 597, 605, 604, 603,
	606, 609, 611, 610, 612, 586, 587, 589, 593, 594,
	595, 598, 599, 602, 600, 601, 626, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	177, 549, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 629,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 550, 574, 1517, 576, 577, 578,
	579, 0, 0, 533, 575, 580, 613, 614, 0, 0,
	0, 547, 565, 0, 628, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 562, 563, 1473, 0, 0, 0, 641, 0,
	564, 0, 0, 559, 560, 561, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 620, 0,
	0, 207, 363, 0, 0, 639, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 588,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 590,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 630, 640, 636, 638,
	637, 634, 635, 633, 632, 631, 642, 621, 622, 623,
	624, 625, 0, 0, 0, 627, 0, 607, 608, 0,
	0, 0, 483, 581, 582, 583, 584, 585, 591, 592,
	596, 597, 605, 604, 603, 606, 609, 611, 610, 612,
	586, 587, 589, 593, 594, 595, 598, 599, 602, 600,
	601, 626, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 552, 0, 0, 0, 177, 549, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 629, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1354, 0, 550,
	574, 573, 576, 577, 578, 579, 0, 0, 533, 575,
	580, 613, 614, 0, 0, 0, 547, 565, 0, 628,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 641, 0, 564, 0, 0, 559, 560,
	561, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 620, 0, 0, 207, 363, 0, 0,
	639, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 588, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 590, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 630, 640, 636, 638, 637, 634, 635, 633, 632,
	631, 642, 621, 622, 623, 624, 625, 0, 0, 0,
	627, 0, 607, 608, 0, 0, 0, 483, 581, 582,
	583, 584, 585, 591, 592, 596, 597, 605, 604, 603,
	606, 609, 611, 610, 612, 586, 587, 589, 593, 594,
	595, 598, 599, 602, 600, 601, 626, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	177, 549, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 629,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 550, 574, 573, 576, 577, 578,
	579, 0, 0, 533, 575, 580, 613, 614, 0, 0,
	0, 547, 565, 0, 628, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 641, 0,
	564, 0, 0, 559, 560, 561, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 620, 0,
	0, 207, 363, 0, 0, 639, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 588,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 590,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 630, 640, 636, 638,
	637, 634, 635, 633, 632, 631, 642, 621, 622, 623,
	624, 625, 0, 0, 0, 627, 0, 607, 608, 0,
	0, 0, 483, 581, 582, 583, 584, 585, 591, 592,
	596, 597, 605, 604, 603, 606, 609, 611, 610, 612,
	586, 587, 589, 593, 594, 595, 598, 599, 602, 600,
	601, 626, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 629, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 550,
	574, 573, 576, 577, 578, 579, 0, 0, 533, 575,
	580, 613, 614, 0, 0, 0, 0, 565, 0, 628,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 641, 0, 564, 0, 0, 559, 560,
	561, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 620, 0, 0, 207, 363, 0, 0,
	639, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 588, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 590, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 630, 640, 636, 638, 637, 634, 635, 633, 632,
	631, 642, 621, 622, 623, 624, 625, 1523, 1524, 1525,
	627, 0, 607, 608, 0, 0, 0, 483, 581, 582,
	583, 584, 585, 591, 592, 596, 597, 605, 604, 603,
	606, 609, 611, 610, 612, 586, 587, 589, 593, 594,
	595, 598, 599, 602, 600, 601, 626, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 629,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 550, 574, 573, 576, 577, 578,
	579, 0, 0, 533, 575, 580, 613, 614, 0, 0,
	0, 0, 565, 0, 628, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 641, 0,
	564, 0, 0, 559, 560, 561, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 620, 0,
	0, 207, 363, 0, 0, 639, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 588,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 590,
	2852, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 630, 640, 636, 638,
	637, 634, 635, 633, 632, 631, 642, 621, 622, 623,
	624, 625, 0, 0, 0, 627, 0, 607, 608, 0,
	0, 0, 483, 581, 582, 583, 584, 585, 591, 592,
	596, 597, 605, 604, 603, 606, 609, 611, 610, 612,
	586, 587, 589, 593, 594, 595, 598, 599, 602, 600,
	601, 626, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 629, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 618, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1033, 0, 550,
	574, 573, 576, 577, 578, 579, 0, 0, 533, 575,
	580, 613, 614, 0, 0, 0, 0, 565, 0, 628,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 641, 0, 564, 0, 0, 559, 560,
	561, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 620, 0, 0, 207, 363, 0, 0,
	639, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 588, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 590, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 630, 640, 636, 638, 637, 634, 635, 633, 632,
	631, 642, 621, 622, 623, 624, 625, 0, 0, 0,
	627, 0, 607, 608, 0, 0, 0, 483, 581, 582,
	583, 584, 585, 591, 592, 596, 597, 605, 604, 603,
	606, 609, 611, 610, 612, 586, 587, 589, 593, 594,
	595, 598, 599, 602, 600, 601, 626, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 629,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	618, 619, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 550, 574, 573, 576, 577, 578,
	579, 0, 0, 533, 575, 580, 613, 614, 0, 0,
	0, 0, 565, 0, 628, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 641, 0,
	564, 0, 0, 559, 560, 561, 566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 620, 0,
	0, 207, 363, 0, 0, 639, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 588,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 590,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 630, 640, 636, 638,
	637, 634, 635, 633, 632, 631, 642, 621, 622, 623,
	624, 625, 0, 0, 0, 627, 0, 607, 608, 0,
	0, 0, 483, 581, 582, 583, 584, 585, 591, 592,
	596, 597, 605, 604, 603, 606, 609, 611, 610, 612,
	586, 587, 589, 593, 594, 595, 598, 599, 602, 600,
	601, 626, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	1563, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 0, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1565, 1567, 0, 0, 0, 0, 0, 0, 126,
	0, 471, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 0, 0, 0, 207, 363, 0, 1566,
	0, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 491, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 495, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 483, 476, 477,
	478, 479, 481, 500, 501, 505, 506, 523, 522, 521,
	524, 528, 531, 530, 532, 482, 484, 492, 502, 503,
	504, 508, 509, 518, 514, 516, 0, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 1563, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 0,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 1567, 0, 0,
	0, 0, 0, 0, 126, 0, 471, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 1561, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 0, 0,
	0, 207, 363, 0, 1566, 0, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 491,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 495,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 0,
	0, 0, 483, 476, 477, 478, 479, 481, 500, 501,
	505, 506, 523, 522, 521, 524, 528, 531, 530, 532,
	482, 484, 492, 502, 503, 504, 508, 509, 518, 514,
	516, 0, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	1055, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 0, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1056,
	0, 1059, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 1052, 1051, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 0, 0, 0, 207, 363, 0, 0,
	0, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 491, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 495, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 483, 476, 477,
	478, 479, 481, 500, 501, 505, 506, 523, 522, 521,
	524, 528, 531, 530, 532, 482, 484, 492, 502, 503,
	504, 508, 509, 518, 514, 516, 0, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 0,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 471, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 0, 0,
	0, 207, 363, 0, 0, 0, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 491,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 495,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 0,
	0, 0, 483, 476, 477, 478, 479, 481, 500, 501,
	505, 506, 523, 522, 521, 524, 528, 531, 530, 532,
	482, 484, 492, 502, 503, 504, 508, 509, 518, 514,
	516, 0, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 466, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	216, 1874, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 0, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 471, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 0, 0, 0, 207, 363, 0, 0,
	0, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 491, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 495, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 483, 476, 477,
	478, 479, 481, 500, 501, 505, 506, 523, 522, 521,
	524, 528, 531, 530, 532, 482, 484, 492, 502, 503,
	504, 508, 509, 518, 514, 516, 0, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 0,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 471, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 0, 0,
	0, 207, 363, 0, 0, 0, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 491,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 495,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 0,
	0, 0, 483, 476, 477, 478, 479, 481, 500, 501,
	505, 506, 523, 522, 521, 524, 528, 531, 530, 532,
	482, 484, 492, 502, 503, 504, 508, 509, 518, 514,
	516, 0, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 510, 512, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 0, 219, 0, 0, 529, 320,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1056,
	0, 1059, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 0, 0, 0, 207, 363, 0, 0,
	0, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 491, 473, 0, 0, 0, 167,
	0, 294, 263, 351, 495, 0, 293, 220, 341, 0,
	0, 350, 0, 520, 360, 365, 486, 0, 480, 317,
	179, 175, 178, 0, 133, 494, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 356, 499, 305, 304, 0, 202, 0,
	507, 474, 286, 511, 208, 132, 330, 368, 150, 214,
	335, 472, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 489, 513, 0, 284, 307,
	337, 152, 324, 487, 488, 490, 517, 296, 519, 525,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 475, 0, 322, 354, 370, 154, 0, 310,
	336, 497, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 483, 476, 477,
	478, 479, 481, 500, 501, 505, 506, 523, 522, 521,
	524, 528, 531, 530, 532, 482, 484, 492, 502, 503,
	504, 508, 509, 518, 514, 516, 0, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 515, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 0,
	219, 0, 0, 529, 320, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 0, 0,
	0, 207, 363, 0, 0, 0, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 491,
	473, 0, 0, 0, 167, 0, 294, 263, 351, 495,
	0, 293, 220, 341, 0, 0, 350, 0, 520, 360,
	365, 486, 0, 480, 317, 179, 175, 178, 0, 133,
	494, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 498, 496, 0, 0, 356, 499,
	305, 304, 0, 202, 0, 507, 474, 286, 511, 208,
	132, 330, 368, 150, 214, 335, 472, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	489, 513, 0, 284, 307, 337, 152, 324, 487, 488,
	490, 517, 296, 519, 525, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 475, 0, 322,
	354, 370, 154, 0, 310, 336, 497, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 0,
	0, 0, 483, 476, 477, 478, 479, 481, 500, 501,
	505, 506, 523, 522, 521, 524, 528, 531, 530, 532,
	482, 484, 492, 502, 503, 504, 508, 509, 518, 514,
	516, 0, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 515, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 0, 0, 510, 512, 440, 333,
	434, 445, 428, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 451, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 435, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 0,
	219, 0, 0, 0, 320, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 0, 448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 426, 429, 0, 0, 0, 244, 144, 0, 0,
	433, 207, 363, 0, 0, 0, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 437, 302, 0,
	0, 441, 0, 0, 167, 0, 294, 263, 351, 0,
	0, 293, 220, 341, 0, 444, 350, 0, 0, 360,
	365, 0, 0, 0, 317, 179, 175, 178, 0, 133,
	0, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	305, 304, 0, 202, 0, 0, 0, 286, 0, 208,
	132, 330, 368, 150, 214, 335, 0, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	0, 0, 0, 454, 307, 337, 152, 324, 430, 431,
	432, 438, 439, 442, 443, 446, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 0, 0, 322,
	354, 370, 154, 0, 310, 336, 0, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 436, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 440, 333, 434, 445, 428, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 435,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 426, 429, 0,
	0, 0, 244, 144, 0, 0, 433, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 437, 302, 0, 0, 441, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 444, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 423,
	307, 337, 152, 324, 430, 431, 432, 438, 439, 442,
	443, 446, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 436, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 1069,
	1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1070, 0, 0, 1080, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 2774,
	0, 0, 0, 0, 0, 0, 177, 2772, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 2773, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	36, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 1558, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 79, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 0, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 1340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 1207, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 682, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 0, 448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 123, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 349, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 665, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 661, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 666, 664, 655, 656, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 662, 663, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 216, 0, 0, 166, 224, 222, 0, 0,
	0, 266, 332, 0, 0, 0, 0, 219, 0, 0,
	0, 320, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 270,
	287, 308, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 144, 0, 0, 0, 207, 363,
	0, 0, 0, 280, 0, 327, 195, 217, 149, 128,
	142, 160, 194, 255, 0, 302, 0, 0, 0, 0,
	0, 167, 0, 294, 263, 351, 0, 0, 293, 220,
	341, 0, 0, 350, 0, 0, 360, 365, 0, 0,
	0, 317, 179, 175, 178, 0, 133, 0, 277, 172,
	212, 0, 0, 0, 164, 0, 0, 0, 316, 339,
	151, 334, 242, 248, 161, 163, 162, 143, 311, 338,
	156, 165, 321, 298, 328, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 305, 304, 0,
	202, 0, 0, 0, 286, 0, 208, 132, 330, 368,
	150, 214, 335, 0, 189, 254, 169, 264, 265, 186,
	130, 282, 236, 237, 235, 238, 193, 0, 0, 0,
	284, 307, 337, 152, 324, 0, 0, 0, 0, 296,
	0, 0, 0, 227, 182, 185, 196, 203, 0, 291,
	325, 357, 0, 145, 134, 331, 1201, 157, 306, 309,
	366, 292, 137, 347, 326, 240, 209, 210, 135, 0,
	136, 289, 176, 192, 170, 258, 0, 191, 279, 344,
	345, 168, 369, 146, 359, 139, 147, 358, 251, 0,
	250, 361, 340, 348, 241, 229, 0, 138, 346, 239,
	228, 215, 184, 198, 275, 223, 276, 199, 246, 245,
	247, 225, 230, 0, 0, 0, 322, 354, 370, 154,
	0, 310, 336, 0, 283, 155, 190, 183, 274, 249,
	148, 201, 319, 213, 221, 288, 367, 262, 295, 158,
	353, 318, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 218, 0, 285, 188, 355, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 181, 187,
	197, 200, 204, 205, 206, 211, 226, 231, 232, 233,
	234, 252, 253, 256, 257, 260, 261, 267, 268, 269,
	271, 272, 273, 281, 0, 290, 297, 299, 300, 301,
	303, 312, 313, 314, 315, 323, 329, 342, 343, 362,
	364, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 0, 219, 0, 0, 0, 320, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	0, 0, 0, 207, 363, 0, 0, 0, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 0, 0, 0, 0, 0, 167, 0, 294, 263,
	351, 0, 0, 293, 220, 341, 0, 0, 350, 0,
	0, 360, 365, 0, 0, 0, 317, 179, 175, 178,
	0, 133, 0, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 305, 304, 0, 202, 0, 0, 0, 286,
	0, 208, 132, 330, 368, 150, 214, 335, 0, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 0, 0, 0, 284, 307, 337, 152, 324,
	0, 0, 0, 0, 296, 0, 0, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 652, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 665, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 661, 230, 0, 0,
	0, 322, 354, 370, 154, 0, 310, 336, 0, 283,
	155, 190, 183, 274, 666, 664, 655, 656, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2252, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 493, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 662, 663, 281, 0,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 491, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 0, 0, 486, 0,
	480, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 496, 0, 0, 0, 499, 0, 0, 0,
	0, 0, 507, 474, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 489, 513, 0,
	0, 0, 0, 0, 0, 487, 488, 490, 517, 0,
	519, 525, 2261, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 486,
	0, 480, 0, 0, 526, 527, 0, 0, 494, 483,
	476, 477, 478, 479, 481, 500, 501, 505, 506, 523,
	522, 521, 524, 528, 531, 530, 532, 482, 484, 492,
	502, 503, 504, 508, 509, 518, 514, 516, 0, 0,
	0, 0, 498, 496, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 507, 474, 0, 511, 0, 0, 0,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 489, 513,
	0, 0, 0, 0, 515, 0, 487, 488, 490, 517,
	0, 519, 525, 2259, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 510, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 0, 0,
	486, 0, 480, 0, 0, 526, 527, 0, 0, 494,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 0,
	0, 0, 0, 498, 496, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 507, 474, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	513, 0, 0, 0, 0, 515, 0, 487, 488, 490,
	517, 0, 519, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 37,
	72, 39, 40, 0, 0, 0, 0, 36, 0, 72,
	39, 40, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 59, 41, 63, 64, 0, 0, 78, 0, 60,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 50, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2669, 0, 0, 526, 527, 2880, 0,
	0, 483, 476, 477, 478, 479, 481, 500, 501, 505,
	506, 523, 522, 521, 524, 528, 531, 530, 532, 482,
	484, 492, 502, 503, 504, 508, 509, 518, 514, 516,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2670, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	49, 77, 76, 0, 0, 0, 515, 47, 0, 0,
	0, 0, 65, 0, 36, 0, 72, 39, 40, 0,
	0, 0, 0, 0, 0, 510, 512, 0, 59, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2671, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 81, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 59, 0, 0, 0, 0, 0, 78, 68, 0,
	2669, 41, 0, 0, 0, 2874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 75, 0,
	53, 54, 61, 0, 62, 0, 2672, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2670, 0, 2669, 0, 0, 0, 0, 2860, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 36, 47, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 41, 0, 43,
	74, 46, 45, 48, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 2670, 73, 0, 0, 0, 0,
	0, 57, 58, 0, 2671, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 81, 2849, 47, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 2669,
	0, 0, 0, 0, 79, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2671, 0, 0,
	0, 0, 0, 2672, 75, 0, 53, 54, 61, 0,
	62, 66, 0, 67, 0, 43, 74, 46, 45, 48,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	2670, 0, 0, 0, 59, 0, 0, 0, 68, 0,
	78, 0, 0, 0, 41, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 2672, 75, 0, 53,
	54, 61, 0, 62, 59, 0, 0, 0, 0, 0,
	78, 0, 81, 0, 41, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 73, 2671, 0, 0, 2669, 0, 0, 0,
	0, 2796, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 2669, 0, 0, 0,
	0, 79, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 2670, 0, 0,
	0, 0, 2672, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2670, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 57, 58, 0,
	2671, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2672,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	79, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2672,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	33932, -1000, -315, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1767, -1000, -1000, -1000, -1000,
	-1000, -1000, 1070, 274, -1000, 300, 196, 29904, 604, 4395,
	30894, -1000, -1000, -1000, 221, 398, 30894, 465, 466, 1250,
	1654, 1249, 59, -68, -74, 124, 23468, 22972, 35, -1000,
	1825, 1827, -1000, -1000, 556, 66, -1000, -1000, -1000, 20492,
	209, -1000, -1000, 1754, 1765, 1572, -1000, 13562, 556, 556,
	29409, 32874, -1000, 1823, 30894, 12075, -1000, 599, 30894, -151,
	533, 533, 374, 533, 533, 603, -1000, 869, -1000, -1000,
	-1000, -1000, 30894, 26439, 534, 30399, 534, 534, 534, 534,
	534, 534, 534, 30894, -1000, 713, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30894, 1247, 1684, 916, 110, -1000, -1000, -1000, 904,
	-1000, 340, 327, 313, 308, 83, 923, 1751, -1000, 1452,
	1754, 1754, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 364,
	588, 223, 209, 867, 1724, 1683, 1682, 1130, 1678, 505,
	1674, 1491, -7, -1000, 1244, 30894, -1000, -1000, 1103, 1102,
	1522, 1416, 633, 1521, -1000, -1000, 395, 590, 1482, 440,
	1482, 1482, 1482, 1482, 1482, -78, 1482, 1482, 1482, 102,
	1482, 150, 1482, 1482, 1482, 1482, 1482, 1252, -1000, -1000,
	-1000, 421, 1408, 1461, 1520, 551, -1000, -1000, -1000, -1000,
	1517, 1736, 602, -1000, -117, 1439, 21482, -1000, 1452, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1262, 1679, 1005, 16532, 1617, -1000,
	-1000, 968, 1808, -1000, 19997, 712, -1000, 16532, 2902, 1452,
	-1000, -1000, 1452, -1000, -1000, -1000, 616, -1000, -1000, 18512,
	18512, 18512, 18512, 18512, 18512, 18512, 18512, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452,
	1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452,
	1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452,
	1452, 1452, 1452, -1000, -1000, 1452, -1000, 13067, 1452, 1452,
	1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 16532, 1452,
	1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452, 1452,
	1452, 1452, 1452, 28914, 26934, 30894, 1428, 1414, -1000, -1000,
	709, 1450, -75, 32379, -1000, -1000, -1000, -1000, 31389, 25944,
	840, -1000, -1000, -1000, -1000, 1673, -1000, -1000, 699, -1000,
	1767, -1000, -1000, 1399, 401, -1000, 4041, 4869, -1000, -1000,
	-1000, 1490, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 30399, 1733, 591,
	1240, 907, 1229, 31389, 31389, 26439, 26439, 533, 1228, 1448,
	587, 1447, 585, 1136, 30894, 1717, 1518, 30894, 1226, 1225,
	31389, 31389, 26439, 26439, -1000, 11574, -1000, -1000, 916, -1000,
	1161, 16532, 533, 533, 30894, 30894, 30894, 30894, 30894, -1000,
	-1000, 916, 916, 916, 916, 896, 1806, 896, -1000, 896,
	-1000, -1000, 16532, -1000, 18512, 25449, 750, -1000, -1000, -1000,
	1224, 363, -1000, -1000, -1000, -1000, -1000, -1000, 1223, -1000,
	1659, 505, 505, -1000, 1159, 505, 1435, -1000, 839, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 505, -1000, 16037, -311, -1000, -1000, 1446, -1000, 317,
	-1000, -1000, 362, 362, 199, 26439, 26439, 26439, -1000, 1482,
	30399, -1000, 1482, 1482, 1482, -85, 1482, 1482, -1000, -1000,
	1482, -1000, -1000, -1000, -1000, -1000, 1482, -1000, -1000, -1000,
	1482, 1482, -1000, 1482, 1482, -1000, -1000, -1000, -1000, -1000,
	26439, 362, 181, 1441, 362, 26439, 26439, -1000, 91, 90,
	87, 86, -1000, -1000, -1000, -1000, 85, 82, -1000, -1000,
	1572, -1000, -1000, 209, -1000, -1000, 30894, -108, 21482, 1439,
	1732, 10071, -1000, -1000, -1000, 1818, 784, 1453, -1000, -1000,
	1438, -1000, 994, 698, 1133, 1582, -1000, -1000, -1000, 30894,
	-1000, 16532, 16532, 1117, -1000, 21977, -1000, -1000, -1000, -1000,
	9570, 811, 18512, 995, 901, 18512, 18512, 18512, 18512, 18512,
	18512, 18512, 18512, 18512, 18512, 18512, 18512, 18512, 18512, 18512,
	1068, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1221,
	-1000, 209, 1178, 1178, 738, 738, 738, 738, 738, 738,
	738, 23963, 1728, 14552, 14552, 14552, 1728, 1262, 1262, 14552,
	14552, 14552, 14552, 14552, 14552, 14552, 14552, 1728, 1728, 14552,
	1262, 1262, 1262, 1262, 14552, 14552, 14552, 14552, 30399, 30399,
	1728, 14552, 14552, 14552, 1728, 1262, 1396, 817, 13067, 14552,
	14552, 1262, 16532, 16532, 15542, 15047, 17027, 14552, 1728, 898,
	817, 31389, -1000, -1000, 18017, -1000, -1000, -1000, -1000, -1000,
	1262, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14552,
	14552, 14552, 14552, 793, 30894, -1000, 1411, 1545, -1000, -1000,
	-1000, 1729, 24954, -1000, 19502, -1000, 1452, 793, 1319, 26934,
	30894, -1000, -1000, 26934, 30894, 9069, 31884, 1429, -1000, -112,
	-116, -75, -1000, -1000, 724, -1000, -1000, -1000, 12571, -1000,
	10572, 1754, 1572, 6564, 11073, -1000, 4869, 1490, -1000, -41,
	-1000, -1000, -1000, 1465, -1000, 1465, 325, 27, 1465, 1465,
	1465, 1465, 1465, 29, 29, 29, 29, 28, -1000, -1000,
	-1000, -1000, -1000, 1489, 1488, -1000, 1465, 1465, 1465, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1474, 346,
	1468, 1468, 1468, 1468, 1468, 405, 405, -1000, 16532, 1454,
	-1000, 30894, 1692, 1714, 1692, 294, -1000, 677, 1485, -1000,
	676, 1430, -1000, 192, 1251, 30894, -1000, 30894, 30894, 26439,
	26439, 26439, 664, -1000, 30894, 1436, -1000, -1000, -1000, -1000,
	-1000, 1415, -1000, 1251, -1000, -1000, -1000, -1000, -1000, 817,
	1219, 1218, -1000, -1000, -1000, -1000, 897, -1000, -1000, -1000,
	-1000, 916, 30894, 30894, 30894, 1724, 916, 817, 656, 1494,
	1452, 1262, -1000, -1000, 1217, -1000, 18512, 1435, 1435, -1000,
	1435, 505, 1178, 1435, -1000, 1394, 1707, 1158, 30894, -1000,
	21482, -11, -1000, -132, 28419, -1000, -1000, -1000, 28419, -1000,
	102, 172, -1000, 584, -1000, 1392, -1000, -1000, -1000, -1000,
	1482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28419, 141, 178, 28419, 1415, 1799, -1000, -1000, -1000, -1000,
	1747, -1000, 1728, 1262, 376, -1000, -1000, -1000, 1452, 1361,
	667, -1000, 1577, 1005, 1005, 16532, -1000, -1000, -1000, 10572,
	1740, -1000, 1595, 1594, 1539, -1000, -1000, 811, 890, -1000,
	-1000, 1064, -1000, -1000, -1000, -1000, 661, 1452, -1000, 3300,
	-1000, -1000, -1000, -1000, 995, 18512, 18512, 18512, 656, 3300,
	3188, 836, 1036, 738, 846, 846, 728, 728, 728, 728,
	728, 860, 860, -1000, -1000, -1000, 1262, -1000, -1000, -1000,
	14552, 1386, -1000, -1000, 817, 659, 1386, 1386, 14552, -168,
	-168, 1386, 1262, 1386, 1386, 1386, 1386, 1262, 1386, 14552,
	14552, 1386, -168, -168, -168, -168, 1386, 1386, 1386, 1386,
	1434, 1432, 14552, 1386, 1386, 1386, 14552, -1000, 16532, -1000,
	1262, 1386, 1386, -1000, 930, 1015, 749, 1798, 1386, 747,
	1797, 1386, 2014, 18512, 18512, 18512, 1386, 14552, 944, -1000,
	16532, 1262, -1000, 2578, 1386, 1262, 1431, 1386, 1386, 204,
	1452, -1000, 10572, 26934, 26934, 26934, 26934, 26934, -1000, 1556,
	1554, -1000, 1563, 1560, 1534, 21482, 1388, 1262, 287, 24954,
	-1000, 1452, -1000, 20987, 646, 598, 597, 596, 14552, 1775,
	26934, 1326, -1000, 1326, -1000, 658, -1000, -1000, 31389, -75,
	-92, -1000, -1000, 1429, -1000, 1098, -1000, -1000, 817, -1000,
	654, 1679, 1728, 1427, 6063, -1000, -1000, -1000, -1000, 401,
	-1000, -1000, -1000, 1475, 4772, -1000, 1626, 697, 697, 804,
	1169, 1615, -1000, -1000, 344, -45, -1000, -1000, 1094, 29,
	29, 1465, 1465, 324, 1465, -1000, 29, -1000, -1000, -1000,
	724, 1672, 724, 724, 724, 724, 29, 1154, 1154, -1000,
	-1000, -1000, -1000, 1093, -1000, 1474, -1000, 1061, -1000, -1000,
	-1000, -1000, -1000, -1000, 940, 1512, 30399, -1000, 1725, -1000,
	1692, -1000, -1000, -1000, 114, -1000, -1000, -1000, 1791, -1000,
	-1000, 30399, 620, 30399, 97, 26439, 190, 320, 211, -1000,
	583, -1000, 581, -1000, -1000, -1000, -1000, -1000, -1000, 30894,
	26439, -1000, -1000, 1775, 1214, 1213, -1000, -1000, -1000, 896,
	916, -1000, -1000, 18512, 26439, -1000, 304, -1000, 3300, -1000,
	-1000, -1000, 793, 601, -1000, -1000, -79, -1000, -1000, 579,
	650, 628, 563, -1000, 119, 26439, -1000, 30399, -1000, 1794,
	1793, 128, 1786, 26439, -1000, 71, 1582, -1000, 1424, -1000,
	716, 711, 769, 411, 411, -1000, 792, 411, 1667, 1661,
	772, -1000, 208, -1000, 10071, 10071, 1569, -1000, -1000, -1000,
	30894, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8568, 14552, -1000, 656, 3300, 3014, -1000, 18512, -1000, 1386,
	14552, -168, 8067, -168, -168, 1386, -1000, 27924, -1000, -1000,
	-168, -1000, -168, -168, -168, -168, -168, 1386, 1386, -168,
	-1000, -1000, -1000, -1000, -168, -168, -168, -168, 18512, 18512,
	1386, -168, -168, -168, 1262, 817, -1000, -1000, -1000, 219,
	1068, 219, 18512, 18512, -1000, 18512, 18512, -1000, -1000, 18512,
	3248, 3218, 3080, -205, 1437, 891, -1000, 16532, 1092, -1000,
	-1000, -1000, -1000, -1000, -1000, 1511, 10572, 1452, 7065, -1000,
	30399, 1420, -1000, 838, 825, 1545, 1472, 1510, 1248, -1000,
	-1000, -1000, -1000, 1553, -1000, 1544, -1000, -1000, 1458, -1000,
	-1000, 1422, 1452, 30399, 18512, 646, -1000, 1452, 1452, 1452,
	1262, 1767, 16532, 1326, -1000, -1000, 735, -1000, -1000, -127,
	-133, -1000, -1000, -1000, 10071, -1000, 6564, -1000, 6564, -1000,
	22472, 514, 1618, 399, -1000, 1169, -1000, -1000, 1169, -1000,
	1169, -1000, -1000, -1000, 1469, -1000, 964, -1000, -1000, -1000,
	-1000, -1000, 18512, 1817, -1000, 1625, -1000, 1623, 1620, 1153,
	-1000, -1000, 1309, 724, 724, 29, -1000, -1000, 1465, -1000,
	724, -1000, 781, -1000, -1000, -1000, -1000, 724, 1380, -1000,
	1377, 1418, -1000, 1375, 106, 30894, -1000, 209, -1000, -1000,
	-1000, -1000, 1671, 792, 792, 792, 1507, -1000, -1000, -1000,
	-1000, 1305, 1417, -1000, 4041, 1196, 1194, 1193, -1000, -223,
	280, -1000, 26439, 156, 192, 461, 1192, 30894, 26439, -1000,
	-1000, -1000, -1000, -1000, 1724, -1000, 3300, 1251, -1000, -1000,
	29, 30894, -1000, 26439, 675, 27429, 26439, 126, 171, -1000,
	26439, 26439, 1781, 26439, 1415, 1150, 1539, 376, 4369, 1169,
	631, -1000, -1000, 400, -1000, 3694, 1615, 1191, 33631, 33420,
	30399, 1614, 1613, 1187, 30894, 30399, -1000, -1000, 33209, 1176,
	16532, -1000, 30399, -1000, -1000, 30399, 627, -1000, -1000, -1000,
	1423, 13562, -1000, -1000, 1262, -1000, 18512, 3300, -168, -1000,
	-1000, -1000, -1000, 624, -1000, -1000, -168, -1000, -1000, 1175,
	-1000, -1000, -1000, -1000, -1000, -1000, -168, -168, -1000, -1000,
	-1000, -1000, -1000, 3034, 2779, -168, -1000, -1000, -1000, -1000,
	1262, 1465, 1465, -1000, 1465, 1468, -1000, 1465, 50, 1465,
	49, 1262, 1262, 2846, 2560, 2175, 1294, 2578, 18512, 18512,
	18512, 1452, -162, -1000, 817, 16532, -1000, 1694, 1404, 1407,
	-1000, -1000, 14057, 1262, 1593, 1361, -1000, 20492, 1358, -1000,
	1767, 10572, 16532, 16532, -1000, -1000, 16532, 1467, -1000, 16532,
	-1000, -1000, -1000, -1000, 30399, 277, -1000, 16532, 1358, 823,
	-1000, 30399, 30399, 30399, -1000, 1754, 817, -1000, -1000, -1000,
	-1000, 6063, -1000, 1353, -1000, 1465, 1465, 1604, -1000, 697,
	-1000, -1000, -1000, -1000, 30399, -1000, 3300, -57, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 724, -1000, -1000, -1000, -1000,
	-1000, 29, 1149, 29, 1049, -1000, 1043, -1000, -1000, -263,
	1464, -1000, -1000, 792, 780, 778, 1147, 30894, 117, 620,
	-1000, 4041, 4041, 4041, 169, 132, -1000, 952, -1000, -1000,
	-1000, 1145, 1143, 1142, 1251, 206, 938, 163, -1000, 1720,
	-1000, -1000, 916, -47, -1000, 171, -1000, -1000, -1000, 171,
	-1000, -1000, 176, 1415, 1415, 26439, 1415, -1000, -1000, -1000,
	33209, 378, 4041, 4041, 1454, 697, 1599, 399, -1000, -1000,
	-1000, -1000, -1000, -1000, 1173, -1000, 680, -1000, 561, 378,
	33209, 817, 727, 1705, 10071, 1772, 26934, -1000, -1000, -1000,
	3300, -1000, 7566, -1000, 767, -1000, -1000, -1000, 18512, 18512,
	-1000, -1000, -1000, 322, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18512, 18512, 18512, 18512, -1000, 2578, 2578, 2578,
	18512, 1262, 1141, 817, 1598, -1000, 1452, -1000, -1000, 1452,
	205, -1000, 30399, 1754, -1000, 817, 817, 817, 30399, 817,
	1336, -1000, 1452, 19007, -1000, 21482, 1332, 1332, 1332, -1000,
	662, 22472, 1698, 1698, -1000, 1169, 1328, -1000, 1452, 1452,
	-1000, 724, -1000, 724, 1290, 1282, -1000, 22472, -1000, 209,
	760, -1000, -1000, -1000, -1000, -1000, 1746, -1000, 117, -1000,
	1140, 257, 255, -1000, 252, 250, 247, 246, 236, -1000,
	-1000, -1000, -1000, 330, 169, -1000, -42, 1042, 805, 1665,
	132, -1000, 1029, 1023, 1020, 1019, 254, -1000, -1000, -1000,
	-1000, 203, 192, -1000, 451, 1139, -1000, 1643, 1638, 1723,
	1723, 125, 1415, 1425, 1275, -1000, -1000, 1172, -1000, -1000,
	1463, 1169, 1460, -1000, 1168, -1000, -1000, 30399, -1000, 378,
	1691, 1689, 1452, -1000, 1769, 1764, 1326, 13562, -1000, -1000,
	1767, 1763, 2578, 2578, -1000, -1000, 2578, 2578, 2578, 2578,
	-1000, -1000, -1000, 186, -1000, -1000, 1816, -1000, 1407, 1452,
	-1000, 209, -1000, -1000, 1321, -1000, 30399, -1000, -1000, 646,
	-1000, -1000, -1000, 662, -1000, 1166, 792, 1138, -1000, -1000,
	-1000, -1000, 377, -1000, -1000, -1000, -1000, 1286, -1000, -1000,
	-1000, 271, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1649,
	1648, 270, -1000, 1135, 1129, -1000, 415, 1059, 657, -174,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 444, 1164, -1000, 160, -1000, -1000, 536, 1629, 1631,
	1762, -1000, 26439, -1000, -1000, 26934, -1000, -1000, 344, 344,
	22472, 1454, 22472, -1000, -1000, -1000, 18512, -1000, 759, -170,
	16532, 16532, 1772, -1000, 783, 16532, -1000, -1000, -1000, -1000,
	-1000, -1000, 1262, 212, -228, 10572, 1407, 1262, -1000, -1000,
	-1000, -1000, -1000, 1012, -1000, 30894, 662, -1000, 276, 34464,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 998, -1000,
	-1000, 1055, 410, 159, -1000, 1722, -1000, 1458, 991, 1638,
	1761, 1636, 1634, -1000, 1125, -225, 1326, 1280, 1457, 1278,
	3300, 1274, -1000, 30399, -1000, 30399, -1000, 817, 1406, -1000,
	817, 1769, -1000, 1262, 162, 162, 1339, -1000, 1567, -221,
	-244, 1334, -1000, -1000, 1456, -1000, 662, 290, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16532,
	16532, 5562, 34464, 144, -1000, 143, -1000, -1000, -1000, 1115,
	-1000, 1640, -1000, 1114, -1000, 1760, 1757, -1000, 174, 1772,
	662, 22472, 662, -1000, 759, 1590, 1323, -1000, 1721, 16532,
	-170, -1000, -1000, 251, -1000, 785, 268, 782, -1000, 1178,
	-1000, -1000, 1565, -1000, 30399, -1000, 1095, 1051, -1000, 1039,
	1002, 225, 210, 3739, -1000, -1000, -1000, -1000, -316, -1000,
	-1000, -1000, -1000, -1000, -1000, 1111, 1003, 24458, 1769, -1000,
	1259, -1000, -1000, 348, 30399, 1452, -1000, -1000, 937, -1000,
	-1000, -1000, -1000, -1000, 30399, -226, 1257, -1000, -1000, -1000,
	1048, -1000, 16532, 34464, 1745, 1743, 1741, 1687, 10071, 34424,
	-1000, -1000, -1000, -1000, 121, 1251, -170, 662, 305, -1000,
	-1000, 251, -1000, -242, 1502, 256, 919, 34464, -1000, 981,
	-317, 449, 209, 626, 18512, -1000, -1000, -1000, 26439, -1000,
	-1000, 1452, -1000, -245, 1498, 1497, 1785, -1000, -1000, -1000,
	-1000, -1000, -1000, 34464, -1000, -318, 34464, 3385, -1000, -1000,
	-1000, 34287, -1000, -1000, -1000, -1000, 207, -1000, -1000, 3300,
	1251, 17522, -1000, -1000, 1813, -1000, 1811, 543, 543, -1000,
	-319, 34181, -320, 532, 34464, 830, -1000, 16532, -1000, 626,
	-1000, 2578, 1262, -1000, -1000, -1000, 392, 1014, -1000, 34118,
	902, 34464, -1000, -321, 523, 34464, -1000, 971, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 33941, -1000, -324, 34464,
	426, 5242, -327, -1000, 425, 34464, -1000,
}

var yyPgo = [...]int{
	0, 2212, 2211, 54, 2209, 194, 2208, 2207, 2204, 17,
	15, 11, 19, 2203, 1919, 1917, 1913, 1910, 1906, 2202,
	7, 2201, 2199, 1900, 2198, 2196, 1898, 1894, 1889, 1887,
	2193, 2192, 2191, 1875, 1871, 1866, 10, 2186, 23, 2185,
	4, 150, 173, 2181, 2, 2179, 2177, 8, 2172, 2171,
	1864, 2166, 2165, 2164, 101, 2162, 1862, 1850, 2161, 1846,
	1843, 2160, 2159, 1840, 1838, 1835, 2158, 184, 2154, 2153,
	2152, 258, 100, 174, 2151, 2150, 2149, 118, 79, 1973,
	110, 43, 123, 426, 2145, 25, 52, 193, 2142, 144,
	2129, 141, 2126, 167, 2125, 146, 109, 107, 2124, 2123,
	181, 2122, 2120, 2116, 140, 2110, 2109, 168, 155, 2107,
	2104, 172, 2102, 70, 175, 50, 39, 2100, 2097, 2096,
	2094, 2093, 28, 204, 2092, 104, 160, 2091, 2089, 85,
	2088, 2087, 183, 2086, 2085, 2082, 153, 44, 2080, 2076,
	65, 2075, 64, 71, 2074, 46, 2072, 145, 2069, 2068,
	31, 37, 2067, 42, 2065, 49, 2064, 156, 152, 362,
	2063, 29, 24, 26, 2062, 34, 9, 33, 45, 13,
	68, 76, 139, 112, 2061, 30, 36, 121, 106, 98,
	58, 2060, 164, 2059, 95, 165, 136, 137, 161, 2058,
	2057, 2056, 1061, 2055, 124, 93, 2053, 111, 993, 178,
	116, 2051, 97, 2048, 2045, 2044, 2043, 2040, 87, 113,
	2038, 2036, 91, 35, 1021, 1859, 47, 166, 2035, 48,
	2033, 2032, 2029, 3128, 114, 72, 108, 2026, 117, 32,
	51, 2019, 2017, 2016, 2015, 2011, 2010, 1706, 2009, 2008,
	2006, 2004, 147, 180, 2003, 132, 128, 125, 2001, 157,
	2000, 1999, 129, 99, 1998, 1996, 1995, 1994, 133, 74,
	163, 1993, 119, 142, 127, 1990, 78, 1989, 1985, 53,
	56, 1984, 1983, 1978, 105, 88, 1977, 73, 40, 38,
	75, 21, 1976, 1974, 84, 77, 1972, 27, 1971, 5,
	3, 6, 1970, 1969, 1968, 1967, 1965, 1963, 1960, 80,
	1956, 1954, 62, 1953, 1950, 1946, 41, 1945, 1944, 1941,
	154, 120, 63, 162, 94, 14, 1940, 1933, 22, 1931,
	122, 1928, 69, 1927, 59, 1925, 1922, 60, 1921, 1915,
	61, 1902, 1885, 170, 1529, 2856, 1881, 169, 158, 57,
	96, 1856, 1854, 0, 1131, 176, 171, 1852, 1833,
}

var yyR1 = [...]int{
	0, 342, 342, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 345, 345, 102, 102, 100, 100, 101,
	101, 177, 177, 12, 12, 12, 182, 182, 187, 187,
	187, 190, 190, 190, 190, 167, 168, 169, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	316, 316, 325, 325, 325, 326, 326, 324, 324, 324,
	324, 324, 328, 328, 329, 329, 327, 327, 327, 327,
	331, 331, 332, 332, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 319, 319,
	319, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 334, 334, 335, 335, 336, 336, 337, 337,
	337, 337, 338, 338, 338, 338, 338, 339, 339, 339,
	339, 339, 339, 339, 340, 340, 341, 341, 2, 297,
	297, 298, 298, 299, 299, 299, 299, 300, 300, 301,
	301, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 24, 211, 211, 318, 318, 318, 312, 312, 312,
	314, 314, 313, 313, 313, 315, 315, 320, 320, 320,
	320, 320, 322, 322, 322, 322, 322, 322, 323, 323,
	323, 321, 321, 48, 48, 49, 49, 49, 156, 156,
	156, 13, 13, 13, 13, 13, 19, 21, 21, 37,
	37, 38, 22, 22, 22, 22, 39, 39, 40, 25,
	25, 25, 25, 25, 25, 46, 46, 46, 45, 45,
	44, 44, 44, 44, 44, 44, 23, 23, 23, 23,
	47, 47, 42, 42, 41, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 26, 26, 26,
	26, 26, 26, 18, 296, 296, 296, 36, 36, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 52,
	271, 272, 272, 272, 272, 272, 272, 272, 272, 259,
	259, 260, 230, 230, 230, 230, 230, 230, 230, 230,
	229, 229, 229, 229, 233, 233, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 232, 232, 232, 232,
	232, 232, 232, 232, 234, 234, 234, 234, 234, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 236, 236, 236, 236, 236, 236,
	236, 236, 258, 258, 237, 237, 252, 252, 253, 253,
	253, 250, 250, 251, 251, 240, 241, 254, 242, 242,
	242, 243, 243, 243, 244, 244, 249, 249, 248, 248,
	248, 248, 248, 248, 245, 245, 245, 245, 246, 246,
	247, 257, 257, 257, 257, 257, 238, 35, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	283, 283, 204, 204, 205, 205, 261, 261, 281, 281,
	280, 280, 279, 279, 279, 270, 270, 276, 276, 276,
	276, 276, 276, 276, 276, 265, 265, 265, 264, 264,
	266, 266, 269, 269, 278, 278, 277, 277, 262, 262,
	262, 284, 284, 284, 284, 284, 263, 263, 263, 263,
	285, 267, 267, 268, 268, 268, 290, 291, 289, 289,
	289, 289, 289, 119, 119, 119, 273, 273, 273, 274,
	274, 274, 275, 275, 275, 294, 294, 293, 293, 50,
	51, 55, 55, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 155,
	155, 155, 209, 209, 288, 286, 286, 287, 287, 15,
	15, 53, 53, 317, 317, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 292, 292, 292, 17, 17, 56,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 84, 196, 196, 195, 195,
	194, 194, 194, 197, 197, 197, 227, 227, 227, 58,
	58, 62, 62, 65, 65, 65, 63, 64, 27, 28,
	28, 28, 28, 29, 210, 210, 60, 60, 61, 61,
	61, 61, 76, 76, 347, 347, 59, 348, 67, 68,
	68, 69, 69, 69, 200, 200, 73, 73, 73, 71,
	71, 71, 72, 72, 78, 78, 82, 82, 82, 82,
	81, 81, 81, 81, 158, 158, 163, 220, 220, 139,
	139, 159, 159, 164, 164, 164, 165, 165, 166, 166,
	166, 166, 166, 161, 161, 160, 160, 162, 127, 127,
	218, 218, 218, 217, 217, 217, 217, 86, 86, 89,
	89, 91, 91, 91, 91, 91, 94, 141, 141, 112,
	112, 113, 113, 113, 113, 113, 125, 125, 176, 176,
	175, 175, 178, 178, 90, 92, 92, 92, 92, 97,
	97, 98, 98, 99, 99, 208, 208, 225, 225, 225,
	103, 103, 103, 105, 104, 104, 104, 104, 106, 106,
	107, 107, 109, 110, 110, 108, 108, 114, 114, 111,
	115, 115, 115, 115, 116, 116, 83, 83, 83, 83,
	83, 83, 83, 193, 193, 118, 118, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 135, 135, 135,
	135, 135, 135, 120, 120, 120, 120, 120, 120, 120,
	77, 77, 136, 136, 136, 96, 95, 95, 80, 80,
	79, 79, 137, 137, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 130,
	130, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 346, 346, 132,
	131, 131, 131, 131, 131, 131, 74, 74, 74, 74,
	74, 226, 226, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 148, 148, 75, 75,
	146, 146, 147, 149, 149, 145, 145, 145, 122, 122,
	122, 122, 122, 122, 122, 122, 124, 124, 124, 150,
	150, 138, 138, 85, 151, 151, 152, 153, 153, 154,
	154, 157, 170, 170, 170, 171, 171, 171, 171, 126,
	126, 172, 172, 172, 121, 121, 121, 121, 121, 121,
	121, 174, 174, 173, 173, 173, 173, 179, 179, 140,
	140, 143, 143, 142, 144, 180, 180, 184, 184, 181,
	181, 185, 185, 185, 185, 188, 188, 189, 189, 189,
	186, 186, 186, 183, 183, 183, 222, 222, 222, 191,
	191, 201, 201, 198, 198, 199, 199, 192, 192, 239,
	239, 207, 207, 206, 206, 206, 202, 202, 202, 203,
	203, 219, 219, 215, 215, 221, 221, 216, 216, 223,
	223, 224, 224, 295, 295, 255, 255, 305, 305, 256,
	256, 306, 306, 308, 308, 303, 303, 304, 304, 307,
	307, 30, 309, 309, 310, 310, 311, 311, 311, 311,
	31, 32, 32, 32, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 343, 344,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 8, 10, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 0, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 0, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 3, 3, 2, 4, 5, 2, 3, 4, 2,
	2, 3, 3, 3, 3, 3, 4, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 2, 3, 1, 0, 3,
	3, 0, 2, 2, 0, 1, 0, 1, 1, 1,
	1, 2, 2, 2, 5, 5, 4, 4, 4, 4,
	4, 2, 1, 2, 1, 2, 2, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	0, 3, 1, 1, 0, 1, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 4, 3,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 2, 2, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 4, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 4, 5, 8, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 1, 1, 2,
	1, 1, 1, 2, 4, 4, 1, 1, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 3,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 4, 1, 3, 1, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	1, 3, 3, 2, 1, 1, 3, 1, 3, 3,
	0, 5, 5, 5, 0, 2, 1, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 1, 1, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 6, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 0, 2, 1, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 1,
	1, 0, 2, 4, 2, 4, 1, 3, 5, 4,
	6, 0, 3, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -342, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 295, -65, 298, 299, -347, -210, 223, 224, 20,
	37, 300, 302, 31, 32, 190, 240, 242, 267, -5,
	-88, -6, 8, 394, 139, 296, 171, 170, 26, 443,
	-343, 68, 506, -153, 15, -67, -348, -67, -67, -67,
	-67, -67, -271, -208, 106, 68, 23, -203, 150, 87,
	385, 146, -211, 236, 238, -201, -202, 200, 210, 44,
	157, 156, 147, 236, 147, 148, 150, 385, 146, 183,
	182, 236, 238, 147, -108, -223, 72, -213, 160, 454,
	261, 440, 248, 197, 295, 309, 311, 303, 338, 326,
	441, 455, 161, 218, 145, 294, 324, 327, 371, 159,
	251, 211, 274, 456, 360, 366, 221, 298, 380, 457,
	162, 215, 217, 216, 205, 222, 36, 172, 322, 257,
	315, 226, 200, 458, 448, 194, 313, 28, 195, 193,
	383, 459, 285, 368, 343, 286, 260, 460, 445, 255,
	367, 318, 314, 267, 163, 157, 287, 461, 344, 348,
	462, 372, 241, 288, 463, 464, 465, 149, 247, 307,
	308, 466, 201, 374, 252, 342, 33, 158, 442, 48,
	180, 375, 38, 346, 37, 352, 467, 284, 341, 336,
	353, 468, 469, 470, 471, 265, 263, 264, 266, 340,
	306, 335, 213, 53, 144, 350, 349, 351, 214, 370,
	331, 329, 472, 473, 256, 164, 474, 475, 316, 18,
	476, 477, 378, 175, 258, 259, 42, 478, 479, 480,
	110, 481, 482, 483, 369, 345, 347, 199, 114, 319,
	154, 484, 262, 365, 271, 444, 245, 111, 376, 312,
	486, 290, 302, 179, 174, 379, 280, 487, 224, 488,
	489, 490, 166, 491, 239, 238, 299, 272, 112, 300,
	362, 219, 492, 493, 494, 495, 209, 192, 382, 373,
	52, 223, 357, 496, 275, 291, 305, 156, 225, 497,
	249, 296, 43, 7, 212, 253, 363, 273, 220, 210,
	333, 181, 498, 499, 320, 321, 339, 304, 334, 297,
	184, 176, 109, 381, 358, 446, 236, 292, 328, 325,
	187, 332, 500, 150, 501, 188, 301, 377, 250, 323,
	359, 147, 131, 327, 371, 138, 361, 362, 368, -265,
	369, 182, 185, -227, 147, -196, 360, 241, 262, 415,
	188, 189, 148, 149, 33, 373, 372, 364, -223, 151,
	301, -76, 142, 177, -108, -47, 72, 225, -47, 30,
	72, 72, 36, 72, 300, 363, 363, 75, 444, 191,
	21, -334, -315, 271, -333, -313, 139, 138, 10, 140,
	276, 277, 278, 148, 8, 31, 485, 165, 279, 280,
	6, 169, 281, 282, 183, 9, 283, -318, 74, 72,
	-213, 21, -334, -315, 271, -205, -204, 293, 352, 6,
	-69, 5, -192, 152, 297, -87, 453, -93, -225, -223,
	-214, 74, 254, 168, 244, 355, 411, 412, 413, 414,
	191, 415, 428, 410, 429, 97, 189, 276, 277, 268,
	278, 167, 430, 115, 198, 177, 233, 364, 232, 237,
	416, 417, 431, 432, 433, 418, 419, 243, 434, 435,
	504, 246, 505, 269, 437, 485, 438, 279, 436, 281,
	186, 422, 421, 420, 423, 282, 405, 406, 424, 51,
	426, 425, 427, 81, -3, -171, 17, 16, -73, 54,
	55, -68, -81, 122, -83, -223, -117, 89, -123, 29,
	72, -213, 24, -122, -214, -118, -145, -144, -96, 131,
	132, 133, 120, 121, 128, 90, 134, -130, -128, -129,
	-131, -133, -134, 74, 73, 82, 75, 76, 77, 78,
	83, 411, 412, 413, 414, 415, 428, 429, 167, 430,
	177, 416, 417, 431, 432, 433, 418, 419, 434, 435,
	437, 438, 436, 422, 421, 420, 423, 405, 406, 424,
	426, 425, 427, 84, 85, -215, -142, -343, 58, 59,
	146, 395, 396, 397, 398, 399, 439, 403, 92, 47,
	384, 393, 392, 391, 389, 390, 386, 388, 387, 153,
	385, 126, 394, -192, -192, 11, -100, -101, -108, -111,
	-223, -181, 297, -188, -185, 372, 373, -186, -189, -183,
	-145, 352, 482, 483, 371, 327, 370, -215, -223, -2,
	-5, 6, -108, -272, -260, -263, -216, 162, -285, -215,
	-212, 159, 72, -213, 254, 143, 168, 139, 88, 447,
	23, 25, 244, 355, 411, 91, 131, 412, 413, 414,
	16, 20, 92, 130, 81, 395, 191, 415, 138, 62,
	410, 386, 388, 384, 385, 361, 29, 10, 26, 170,
	204, 22, 124, 140, 95, 96, 97, 189, 173, 276,
	277, 24, 171, 268, 85, 278, 167, 115, 198, 19,
	65, 177, 233, 11, 364, 185, 240, 13, 409, 113,
	232, 14, 237, 153, 152, 108, 202, 148, 60, 8,
	134, 27, 105, 56, 416, 417, 450, 45, 190, 451,
	58, 106, 17, 389, 390, 31, 439, 418, 178, 452,
	419, 126, 207, 63, 50, 243, 89, 83, 504, 34,
	86, 66, 289, 87, 15, 203, 61, 407, 246, 505,
	269, 182, 485, 206, 453, 165, 107, 279, 141, 394,
	270, 242, 59, 146, 6, 404, 30, 169, 281, 208,
	186, 422, 421, 420, 423, 57, 397, 398, 424, 282,
	502, 147, 94, 405, 406, 151, 183, 84, 5, 44,
	32, 9, 283, 64, 67, 391, 392, 393, 47, 51,
	426, 425, 427, 93, 12, 408, 443, 148, -108, 394,
	-199, 153, -199, 183, 182, -199, -199, 147, 98, -53,
	-108, -317, -312, -318, -198, 153, -215, -198, -198, -198,
	-198, -198, -198, -198, -108, 135, -108, 72, 30, -197,
	106, 12, 385, 146, 147, 182, 183, 150, -267, 11,
	108, 186, 186, 186, 187, 186, -195, 363, 365, 184,
	366, 367, 12, -84, 106, 19, -343, -171, -171, 72,
	300, 151, -61, -3, -11, -9, -10, -3, 98, -125,
	23, 30, 30, 74, 51, 30, -42, -41, -43, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 30, -296, 68, -255, 352, 72, -309, -310, -108,
	75, 75, 66, 66, 69, 151, 69, 66, -335, 272,
	68, -335, 238, 272, 273, 210, 236, 150, -335, -335,
	238, -335, -335, -335, -335, -335, 363, -335, -335, -335,
	274, 275, -335, 361, 150, -335, -335, -335, -335, -335,
	71, 66, 69, 262, 66, 11, 66, -282, 131, 285,
	286, 287, 288, 284, 262, 289, 290, 291, 186, 292,
	-67, -7, -5, -343, 21, 22, 147, 376, 69, -87,
	-174, -343, -344, 70, -172, 19, 31, -126, 75, 78,
	-154, -157, -83, -223, 50, -71, 21, 22, 80, 11,
	-218, 88, 87, 105, -217, 23, 72, -213, -214, 74,
	135, -83, -120, 108, 89, 106, 107, 91, 117, 116,
	127, 120, 121, 122, 123, 124, 125, 126, 118, 119,
	130, 98, 99, 100, 101, 102, 103, 104, -193, -343,
	-96, -343, 136, 137, -123, -123, -123, -123, -123, -123,
	-123, -123, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, -343,
	-343, -343, -343, -343, -343, -3, -137, -83, -343, -343,
	-343, -343, -343, -343, -343, -343, -343, -343, -343, -148,
	-83, -343, -346, -132, -343, -346, -132, -346, -132, -346,
	-343, -346, -132, -346, -132, -346, -346, -132, -346, -343,
	-343, -343, -343, -110, 27, -108, -86, -89, -91, -92,
	-112, -95, -343, -90, -108, -96, 72, -108, -100, -345,
	69, 11, 67, -345, 69, 135, 69, -182, -187, 374,
	376, 297, -186, -186, -222, -215, 74, 29, 98, 30,
	135, -153, -67, 70, 69, -263, 162, 159, -229, -233,
	-235, -234, -236, -231, -232, 324, 327, 331, 329, 325,
	330, 131, 328, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 342, 343, 30, 172, 320, 321, 322, 323,
	344, 345, 346, 347, 348, 349, 350, 351, 303, 326,
	441, 304, 305, 306, 307, 308, 309, 311, 312, 313,
	314, 315, 316, 317, 318, 72, -214, -285, 68, -215,
	23, 150, 72, 89, 72, -107, -215, -223, -114, -215,
	-223, -321, -320, -312, -315, -199, 72, 69, 151, 69,
	151, 71, -100, 24, 66, -102, -108, 72, 72, -107,
	-114, -314, -312, -315, -224, -223, -212, -197, 74, -83,
	-199, -199, -108, -108, -108, -108, -108, -197, -197, -197,
	-197, -194, 11, 108, 11, -194, -194, -83, -123, -312,
	387, 122, 72, 72, 300, 72, 34, -42, -42, 74,
	-42, 69, 98, -42, 70, -137, -295, 503, 69, -311,
	23, 376, 377, 353, -337, 147, 185, 182, -337, -333,
	280, -314, -313, -312, -335, -336, -215, -335, -335, -335,
	363, -335, -335, -335, -335, -335, -335, -335, -335, -318,
	-337, 240, 69, -337, -314, -312, 284, 284, 284, 284,
	284, 284, -73, -3, -108, 377, 378, -93, 23, -173,
	-216, 9, 108, 69, 18, 69, -170, 25, 26, 135,
	-124, 51, 75, 78, -200, 49, -108, -83, -83, -135,
	83, 89, 84, 85, -217, 122, -224, -216, -212, -123,
	-136, -142, -96, 79, 108, 106, 107, 91, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -226, 72, 74, 72, -122, -122, -215,
	-71, -79, -82, 122, -83, -223, -79, -79, -71, -344,
	-344, -79, -82, -79, -79, -79, -79, -82, -79, -71,
	-71, -79, -344, -344, -344, -344, -79, -79, -79, -79,
	-215, -215, -71, -79, -79, -79, -71, -344, 69, -344,
	-3, -79, -79, -344, -83, -83, -145, 74, -79, -145,
	74, -79, -123, 400, 401, 402, -79, -71, -146, -147,
	93, -145, -344, -123, -79, -80, -79, -79, -79, -177,
	110, -108, 30, 69, -103, -105, -104, -106, 56, 60,
	62, 57, 58, 59, 63, -208, -86, -94, 47, -343,
	-113, 110, -115, 23, -225, 64, 152, 65, -343, -177,
	67, -86, -108, -86, -111, -223, 122, -185, -188, 69,
	375, 377, 378, -182, -243, 130, 66, 86, -83, -216,
	-224, -171, -73, -273, -274, -275, -216, 74, 75, -260,
	-261, -262, -263, -276, 162, -284, 154, 156, 157, 44,
	-264, 163, 148, 45, -230, -250, 358, -237, 68, -237,
	-237, 332, 324, 327, 325, -237, -237, -237, -237, -237,
	-242, 327, -242, -242, -242, -242, 325, 68, 68, -237,
	-237, -237, -252, 68, -252, 319, -253, 68, -253, -253,
	-253, -253, -285, -285, -83, -219, 67, -167, -108, -249,
	-248, -245, -246, -247, -244, 29, 24, -249, -48, 197,
	168, 135, 68, 135, -316, 69, 29, -322, 237, -108,
	-108, -108, -312, -312, -318, -292, 166, 161, -108, 69,
	69, 72, 72, -268, 11, 108, -197, -223, -223, -108,
	-125, -197, -77, 173, 67, -346, -344, 72, -123, -41,
	-122, 70, -109, 27, 74, -310, -225, 352, 377, -338,
	122, -215, -338, -341, 443, 151, 70, 69, -335, -338,
	258, 240, -338, 11, -283, 19, -71, -344, -55, -54,
	143, 140, 141, 144, 145, -288, 355, 139, 194, 193,
	179, -95, -343, -344, 69, 135, 52, -126, -126, -157,
	-191, 19, 11, 47, 47, -72, 57, 83, 84, 85,
	135, -343, -136, -123, -123, -123, -77, 88, -344, -79,
	69, -344, 135, -344, -344, -79, -158, 407, -158, -344,
	-344, -344, -344, -344, -344, -344, -344, -79, -79, -344,
	-158, -158, -158, -158, -344, -344, -344, -344, 69, 69,
	-79, -344, -344, -344, -80, -83, -344, -344, -344, 69,
	67, 23, 11, 11, -344, 11, 11, -344, -344, 11,
	-123, -123, -123, -344, -79, -149, -147, 95, -83, -344,
	-344, -344, -344, -344, -344, -121, 30, 47, -343, -3,
	-343, -180, -184, -145, -212, -89, -91, -91, -89, -91,
	56, 56, 56, 61, 56, 61, 56, -104, -225, -344,
	-344, -141, 196, -343, 34, -225, -115, 148, 148, 148,
	-80, -116, 12, -86, -116, -116, 135, -187, -190, 379,
	376, 382, 72, 74, 135, -172, 69, -275, 98, -263,
	68, 72, -269, -214, 45, -264, 148, 45, -266, -264,
	-264, -269, 72, -269, 45, 83, 89, -240, -241, -254,
	-257, -238, 29, 66, 355, 154, 45, 44, 157, 81,
	-251, 359, 75, -242, -242, -237, -237, -237, 332, -237,
	-242, -243, 30, -243, -243, -243, -243, -242, -258, 74,
	-258, 75, -252, 75, 70, 66, -215, -169, 23, -246,
	-245, -247, 327, 371, 130, 383, -49, 8, 9, 10,
	-215, -297, -298, -299, 72, 108, 202, 203, -215, -325,
	270, -320, 238, 247, 88, 16, 443, 151, 151, -108,
	-312, -116, 72, 72, -194, -197, -123, -315, 188, 189,
	-177, 147, -311, 151, 135, 135, 151, 261, -314, -215,
	11, 11, 258, 11, -314, 294, -200, 69, -209, -264,
	-294, -262, -263, -293, 155, 162, 163, -209, 162, 159,
	-264, 163, 154, 155, -206, -264, 151, 23, -209, -209,
	-270, 98, -209, 33, 33, 110, -216, -216, 53, -108,
	-78, -168, 122, -216, -80, -77, 88, -123, -344, -82,
	-159, -158, 122, -224, -159, -159, -344, -215, -163, -343,
	-158, -159, -159, -158, -158, -158, -344, -344, -158, -159,
	-159, -159, -159, -123, -123, -344, -159, -159, -159, -344,
	-228, 131, 324, 172, 322, 315, 342, 329, 357, 320,
	358, -226, -228, -123, -123, -123, -123, -123, 11, 11,
	11, 440, -153, 97, -83, 94, -179, 66, -180, -140,
	-143, -142, -343, -3, -344, -173, 6, 443, -178, -215,
	-116, 69, 98, 98, -98, -97, 66, 67, -99, 66,
	-97, 56, 56, -176, 68, 69, -142, -343, -178, -123,
	-115, -343, -343, -343, -344, -153, -83, -116, 376, 380,
	381, -274, -275, -278, -277, -215, -214, 154, -284, 44,
	-284, -269, -269, -269, 68, 83, -123, 9, 45, 45,
	45, 74, 70, -243, -243, -242, -237, -243, 72, 131,
	-243, 70, 69, 70, 69, 70, 69, -119, 459, 89,
	-108, -3, -167, 30, -270, -270, -270, 66, 70, 69,
	-229, 72, 72, 72, -328, 443, 243, -326, -324, 249,
	250, 251, 252, 253, -315, 248, -322, 245, 74, 72,
	-108, -312, -125, -242, -108, -314, 122, 122, -215, -314,
	258, -340, 443, -314, -314, 11, -314, 74, -72, -54,
	68, -259, 72, -214, -269, -202, 154, 72, 72, 72,
	-214, 72, -214, -215, 45, 45, 72, -108, -215, -259,
	72, -83, -215, -215, 135, -116, 11, 69, -81, -344,
	-123, -159, 135, -159, -220, 72, -159, -159, 69, 69,
	-159, -344, -237, -237, -237, -253, -237, 308, -237, 308,
	-344, -344, 19, 19, 19, 19, -344, -123, -123, -123,
	-343, -75, 404, -83, 28, -179, 69, -344, -344, 47,
	-344, -344, 69, -153, -184, -83, -83, -83, 68, -83,
	-175, -215, 196, -344, -115, -208, -175, -175, -175, -171,
	70, 69, -237, -237, 45, -266, -175, -129, 405, 406,
	-243, -242, 74, -242, 75, 75, 459, 68, -167, -169,
	-270, 72, 131, 72, 131, 74, -108, -300, -301, -302,
	81, 442, 89, 204, 205, 164, 206, 207, 208, -299,
	-229, -229, -229, -331, -332, -330, 246, 268, 269, 254,
	-329, -327, 263, 264, 265, 266, 88, 74, 74, 74,
	-323, 237, 88, 246, 16, 23, -197, -303, -195, -340,
	-340, 240, -314, -78, -259, -155, 167, 168, -229, -229,
	-219, -266, 45, 72, -207, 151, 23, 151, -155, -259,
	30, 140, 27, -216, -150, 13, -86, -168, -168, 122,
	-139, 110, -123, -123, -242, 72, -123, -123, -123, -123,
	-344, -344, -344, -123, -344, 74, 45, -143, -140, 47,
	-3, -343, -215, -171, -175, 70, 69, -142, -113, -225,
	-344, -344, -344, -280, -279, 67, 158, 81, -277, -170,
	-170, -269, 70, -243, -243, 70, 70, -278, -3, 72,
	131, 19, -168, -302, 74, 208, 204, 208, 208, 208,
	208, 209, -319, 81, 244, -330, 255, 464, 239, 270,
	75, 75, 109, 31, 32, -327, 75, 75, 75, 75,
	-324, 16, 443, -322, 245, 74, 74, -304, 38, -306,
	39, -339, 23, -339, 258, 11, 70, 72, -230, -230,
	68, -269, 68, 72, -215, -155, 29, 29, -343, -151,
	14, 16, -116, -81, -153, 16, -344, -344, -344, -344,
	-344, -344, -74, 108, 443, 9, -140, -3, 70, -215,
	-115, -279, 72, -270, 74, 165, 70, -167, 195, -169,
	36, 36, 200, 201, 74, 74, 29, 256, 134, 29,
	75, 134, 410, 245, 74, 72, 246, -239, 152, -307,
	43, -305, -256, 42, 16, -312, -86, -278, -219, -278,
	-123, -286, -287, 110, -161, 408, -152, -83, -138, -85,
	-83, -150, -168, -164, 112, 111, -137, -344, 441, 63,
	444, -180, -344, 75, -108, -281, -280, 196, -20, -3,
	-9, -10, -11, -12, -14, -50, -15, -16, -21, -22,
	-17, -56, -57, -65, -63, -64, -60, -59, -25, -23,
	-26, -18, -27, -28, -29, -33, -34, -24, -35, 92,
	153, 226, 295, 75, 29, 75, 29, 259, 246, 23,
	-176, 75, -306, 16, -308, 40, 41, 74, 443, -116,
	70, 68, 70, -344, 69, -215, -160, -162, -215, 69,
	-151, -344, -165, 91, -166, 109, 410, -127, 75, 134,
	-165, 53, 442, 445, 68, -156, 198, 199, -167, -83,
	-83, 72, -46, -221, 229, 230, 231, -216, -36, -20,
	257, 257, 74, 38, 74, 16, 16, 238, -150, -281,
	-278, -281, -287, 47, 69, 23, -85, -161, -166, 114,
	115, 196, 114, 115, -122, 53, -175, -167, 72, 72,
	-37, -38, 93, 94, 227, 228, 232, -229, 69, 506,
	74, 74, 29, 243, 21, -315, -151, 70, 180, -162,
	-163, 88, -215, 443, 70, -169, 97, 95, -38, -83,
	-36, 19, 19, 19, 29, -216, 97, -20, 260, -161,
	-281, 181, -166, 444, -290, -291, 66, -13, -19, -12,
	-9, -10, -11, 295, 92, -36, 94, 506, -47, 75,
	-3, -45, -44, 75, -47, 234, 89, 235, 72, -123,
	-315, -343, 445, -291, 66, -290, 66, 10, 9, -167,
	-36, 506, -36, 97, 95, -39, -40, 96, -20, 69,
	233, -123, 178, -289, 166, 161, 164, 30, -289, 506,
	97, 506, 153, -36, 97, 95, -40, -83, -44, -344,
	-344, 160, 29, 83, 97, 92, 506, 153, -36, 94,
	97, 506, -36, 153, 97, 506, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 727, 727, 727, 727,
	727, 727, 825, -2, 589, 0, 0, 0, 0, -2,
	700, 701, 702, 706, 707, 722, 724, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 40,
	0, 0, 56, 57, 1137, 0, 725, 714, 715, 0,
	0, 1672, 2, 1075, 0, 736, 729, 0, 1137, 1137,
	0, 0, 88, 0, 0, 0, 826, 0, 0, 0,
	1135, 1135, 0, 1135, 1135, 0, 1150, 0, 1132, 1146,
	1147, 1148, 0, 0, 1133, 0, 1133, 1133, 1133, 1133,
	1133, 1133, 1133, 0, 648, 845, 1159, 1160, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 0, 0, 0, 693, 0, 659, 660, 661, 0,
	663, 0, 0, 0, 0, 0, 673, 676, 680, 0,
	1075, 1075, 535, 536, 537, 697, 698, 687, 699, 0,
	0, 0, 0, 0, 806, 306, 308, 0, 328, 0,
	331, 334, 1165, 708, 0, 0, 1190, 1191, 0, 0,
	0, 0, 0, 1523, 182, 245, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 0, 184, 184, 184, 1535,
	184, 0, 184, 184, 184, 184, 184, 244, 234, 235,
	236, 0, 0, 0, 1523, 0, 515, 512, 513, 727,
	0, 731, 0, 1138, 703, 45, 0, 47, 1091, 827,
	828, 829, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 0, 1081, 0, 0, 739, 737,
	738, 728, 0, 750, 780, 0, 856, 0, 861, 863,
	-2, -2, 0, 904, 905, 906, 907, 908, 909, 0,
	0, 0, 0, 0, 0, 0, 0, 933, 934, 935,
	936, 937, 938, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1614, 1615, 1616, 1617, 1619, 1620, 1622, 1629, 1630,
	1633, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647,
	1652, 1654, 1656, 1659, 1660, 1661, 1662, 1664, 1665, 1666,
	1668, 1669, 1670, 865, 866, 1045, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1036, 0,
	1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 1007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 67, 69,
	845, 73, 1588, 0, 1109, -2, -2, 1111, 0, 0,
	0, -2, -2, -2, -2, 1386, -2, 1045, 0, 89,
	1067, 727, 90, 0, 371, 372, 0, 1399, 559, 1157,
	1158, 1388, 1153, 1154, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 0, 629,
	0, 630, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 0, 649, 650, 693, 652,
	0, 0, 1135, 1135, 0, 0, 0, 0, 0, 561,
	562, 693, 693, 693, 693, 690, 0, 690, 670, 690,
	688, 689, 0, 675, 0, 0, 0, 683, 684, 709,
	0, 0, 716, 718, 719, 720, 721, 717, 0, 726,
	0, 0, 0, 310, 0, 0, 330, 312, 0, 315,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	326, 0, 333, 0, 1163, 1166, 713, 1181, 1182, 0,
	1192, 1193, 188, 188, 0, 0, 0, 0, 151, 184,
	0, 153, 184, 184, 184, 0, 184, 184, 160, 161,
	184, 163, 164, 165, 166, 167, 184, 169, 170, 171,
	184, 184, 174, 184, 184, 177, 178, 179, 180, 181,
	243, 188, 0, 0, 188, 0, 0, 497, 0, 0,
	0, 0, 502, 503, 504, 505, 0, 0, 508, 509,
	736, 42, 52, 0, 732, 733, 0, 0, 0, 46,
	0, 0, 51, 1673, 37, 0, 0, 1076, 1079, 1080,
	1068, 1069, 1072, 0, 0, 734, 740, 741, 730, 0,
	751, 0, 0, 0, 781, 0, 783, 784, 785, 786,
	0, 859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 883, 884, 885, 886, 887, 888, 889, 862, 0,
	876, 0, 0, 0, 925, 926, 927, 928, 929, 930,
	931, 0, 739, 0, 0, 0, 739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 739, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	739, 0, 0, 0, 739, 0, 0, 902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	1037, 0, 990, 999, 0, 991, 1000, 992, 1001, 993,
	0, 994, 1002, 995, 1003, 996, 997, 1004, 998, 0,
	898, 0, 0, 71, 0, 844, 0, 787, 789, 790,
	791, -2, 0, 795, 850, 896, 1159, -2, 0, 0,
	0, 63, 64, 0, 0, 0, 0, 74, 76, 0,
	0, 1588, 1112, 1113, 471, 1126, 1127, 1128, 0, 1124,
	0, 1075, 736, 576, 0, 373, 0, 0, 382, 461,
	391, 392, 393, 454, 395, 454, 454, 0, 454, 454,
	454, 454, 454, 468, 468, 468, 468, 468, 437, 438,
	439, 440, 441, 0, 0, 414, 454, 454, 454, 418,
	444, 445, 446, 447, 448, 449, 450, 451, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 456, 456,
	458, 458, 458, 458, 458, 0, 0, 558, 0, 1151,
	85, 0, -2, 0, -2, 0, 840, 0, 0, 847,
	0, 100, 261, 247, 99, 0, 233, 0, 0, 0,
	0, 238, 644, 1134, 0, 637, 65, 638, 639, 640,
	641, 642, 240, 643, 846, 1161, 1162, 651, 694, 695,
	0, 0, 655, 656, 657, 658, 563, 664, 665, 666,
	672, 693, 0, 0, 0, 806, 693, 674, 890, 677,
	1007, 0, 711, 710, 0, 723, 0, 307, 309, 311,
	329, 0, 0, 332, 335, 0, 0, 0, 0, 1184,
	0, 1186, 1188, 0, 0, 189, 190, 191, 0, 183,
	0, 206, 246, 0, 152, 0, 186, 154, 155, 156,
	184, 158, 159, 162, 168, 172, 173, 175, 176, 242,
	0, 0, 0, 0, 149, 0, 498, 499, 500, 501,
	510, 507, 739, 0, 0, 704, 705, 48, 0, 0,
	1093, 1082, 0, 0, 0, 0, 1071, 1073, 1074, 0,
	0, 1056, 0, 0, 742, 735, 39, 857, 858, 860,
	877, 0, 879, 881, 782, 752, 0, 1046, -2, 867,
	868, 892, 893, 894, 0, 0, 0, 0, 890, 872,
	0, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 924, 1021, 1022, 0, 922, 923, 932,
	0, 0, 900, 746, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 898, 895, 0, 1103,
	0, 0, 0, 972, 0, 0, 907, 1048, 0, 907,
	1048, 0, 0, 0, 0, 0, 0, 0, 1043, 1040,
	0, 0, 1008, 0, 0, 0, 899, 0, 0, 0,
	0, 843, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	799, 1509, 801, 0, 850, 0, 0, 0, 898, 854,
	0, 854, 68, 854, 70, 0, 849, 1110, 0, 0,
	0, 79, 80, 75, 1114, 0, 1120, 1121, 1122, 1046,
	0, 1081, 739, 370, 577, 579, 582, 583, 584, 374,
	376, 377, 378, 0, -2, 550, 1519, 1566, -2, -2,
	542, 1433, -2, -2, 381, 463, 462, 394, 0, 468,
	468, 454, 454, 454, 454, 423, 468, 426, 429, 430,
	471, 0, 471, 471, 471, 471, 468, 0, 0, 415,
	416, 417, 406, 0, 407, 456, 409, 0, 410, 411,
	412, 413, 556, 557, 0, 0, 0, 87, 0, 94,
	-2, 478, 479, 480, 0, 475, 1136, 95, 0, 263,
	264, 0, 209, 0, 102, 0, 0, 248, 0, 369,
	0, 631, 0, 633, 237, 635, 645, 646, 636, 0,
	0, 653, 654, 854, 0, 0, 667, 691, 692, 690,
	693, 671, 685, 0, 0, 678, 0, 712, 807, 313,
	314, 336, 71, 0, 1164, 1183, 0, 1187, 1189, 0,
	192, 194, 0, 143, 0, 0, 185, 0, 157, 0,
	0, 0, 0, 0, 506, 0, 734, 53, 590, 591,
	-2, 622, 1143, 622, 622, 608, 525, 622, 0, 0,
	0, 49, 0, 1092, 0, 0, 0, 1077, 1078, 1070,
	0, 1129, 1130, 1057, 1058, 86, 743, 878, 880, 882,
	0, 898, 869, 890, 873, 0, 870, 0, 864, 0,
	0, 761, 0, 761, 761, 0, 958, 0, 959, 986,
	0, 971, 761, 761, 0, 0, 0, 0, 0, 0,
	965, 966, 967, 968, 761, 761, 761, 761, 0, 0,
	0, 761, 761, 761, 0, 903, -2, 969, 970, 0,
	0, 0, 0, 0, 1014, 0, 0, 1015, 980, 0,
	0, 0, 0, 0, 1067, 0, 1041, 0, 0, 989,
	1009, 1010, 1011, 1012, 1013, 1097, 0, 0, 0, 1086,
	0, 854, 1105, 0, 0, 788, 821, 823, 0, 818,
	831, 832, 834, 0, 836, 0, 838, 839, 808, 794,
	897, 796, 0, 0, 0, 850, 805, 0, 0, 0,
	0, 1067, 0, 854, 61, 62, 0, 77, 78, 0,
	0, 84, 472, 473, 0, 208, 0, 580, 0, 375,
	0, 543, 0, 0, 527, 542, 538, 539, 542, 541,
	542, 533, 543, 534, 0, 383, 0, 385, 386, 387,
	388, 389, 0, 0, 467, 0, 492, 494, 0, 0,
	390, 464, 0, 471, 471, 468, 421, 422, 454, 427,
	471, 431, 0, 432, 433, 434, 435, 471, 0, 452,
	0, 0, 408, 0, 573, 0, 1152, 0, 85, 481,
	482, 483, 0, 525, 525, 525, 0, 265, 266, 267,
	841, 0, 210, 211, 0, 0, 0, 0, 848, 112,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 66,
	241, 662, 564, 565, 806, 669, 891, 679, 681, 682,
	468, 0, 1185, 0, 0, 0, 0, 0, 204, 187,
	0, 0, 0, 0, 150, 0, 742, 0, 0, 542,
	0, 609, 610, 0, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1144, 1145, 0, 0,
	0, 526, 0, 617, 618, 0, 1095, 1094, 1083, 38,
	854, 0, 753, 1047, 0, 871, 0, 874, 761, 901,
	943, 762, 748, 0, 944, 945, 761, 754, 755, 757,
	960, 947, 948, 961, 962, 963, 761, 761, 964, 952,
	951, 950, 953, 0, 0, 761, 956, 955, 957, 939,
	0, 454, 454, 1026, 454, 458, 1029, 454, 1031, 454,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1038, 988, 1044, 0, 54, 0, 1097, 1084,
	1099, 1101, 0, 0, 0, 0, -2, 1366, 0, 812,
	1067, 0, 0, 0, 815, 822, 0, 0, 816, 0,
	817, 835, 837, 792, 0, 0, 797, 0, 0, -2,
	804, 0, 0, 0, 814, 1075, 855, 60, 81, 82,
	83, 578, 581, 0, 544, 454, 454, 0, 548, 540,
	549, 529, 530, 532, 0, 384, 465, 0, 491, 493,
	495, 496, 455, 419, 420, 471, 428, 424, 469, 470,
	436, 468, 0, 468, 0, 459, 0, 560, 574, 0,
	0, 85, 87, 525, 0, 0, 0, 0, 217, 0,
	213, 0, 0, 0, 120, 0, 103, 104, 105, 107,
	108, 0, 0, 0, 101, 0, 250, 0, 253, 254,
	632, 634, 693, 1175, 842, 204, 193, 195, 196, 204,
	207, 144, 0, 145, 147, 0, 146, 511, 86, 592,
	0, 619, 0, 0, 1151, 540, 0, -2, 595, 600,
	601, 602, 603, 604, 0, 615, 0, 597, 0, 619,
	0, 612, 0, 0, 0, 1059, 0, 86, 86, 940,
	875, 942, 0, 946, 759, 758, 941, 949, 0, 0,
	954, 973, 1023, 468, 1027, 1028, 1030, 1032, 1033, 1035,
	975, 974, 0, 0, 0, 0, 981, 0, 0, 0,
	0, 0, 0, 1042, 0, 55, 0, 1102, -2, 0,
	0, 72, 0, 1075, 1106, 1107, 1108, 819, 0, 824,
	0, 810, 0, 850, 802, 0, 0, 0, 0, 59,
	517, 0, 1072, 1072, 528, 542, 0, 466, 0, 0,
	425, 471, 453, 471, 0, 0, 575, 0, 92, 0,
	0, 486, 487, 488, 489, 490, 0, 86, 218, 219,
	0, 0, 0, 224, 0, 0, 0, 0, 0, 212,
	214, 215, 216, 138, 121, 122, 0, 0, 0, 0,
	113, 114, 0, 0, 0, 0, 0, 109, 110, 111,
	249, 0, 0, 252, 0, 0, 668, 1177, 1171, 197,
	197, 0, 148, 0, 0, 594, 620, 0, 382, 382,
	0, 542, 0, 611, 0, 1141, 1142, 0, 606, 619,
	0, 0, 0, 1096, 1064, 0, 854, 0, 744, 749,
	1067, 0, 0, 0, 1024, 1025, 0, 0, 0, 0,
	982, 983, 984, 1016, 987, 1039, 0, 1100, 1085, 0,
	1089, 0, 813, 58, 0, 809, 0, 798, 800, 850,
	851, 852, 853, 516, 520, 0, 525, 0, 545, 546,
	547, 531, 0, 442, 443, 457, 460, 0, 85, 484,
	485, 0, 87, 220, 221, 222, 223, 225, 226, 0,
	0, 0, 98, 0, 0, 123, 0, 0, 0, 0,
	133, 134, 135, 136, 137, 115, 116, 117, 118, 119,
	106, 0, 0, 251, 0, 256, 257, 1139, 1179, -2,
	0, 141, 0, 142, 205, 0, 593, 621, 379, 380,
	0, 1151, 0, 596, 605, 607, 0, 614, 0, 773,
	0, 0, 1059, 86, 763, 0, 1005, 1006, 976, 978,
	977, 979, 0, 0, 0, 0, 1088, 0, 820, 811,
	803, 521, 522, 0, 524, 0, 518, 93, 0, 0,
	227, 228, 229, 230, 139, 140, 124, 125, 0, 127,
	128, 0, 0, 0, 259, 0, 255, 808, 0, 1171,
	0, 1173, 0, 1170, 0, 198, 854, 0, 0, 0,
	613, 0, 625, 0, 43, 0, 1065, 1066, 1060, 1061,
	1063, 1064, 745, 0, 0, 0, 760, 985, 0, 0,
	0, 1098, -2, 523, 0, 91, 519, 268, 85, 339,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 0,
	0, 0, 0, 0, 129, 0, 131, 132, 258, 0,
	36, 0, 1178, 0, 1176, 0, 0, 1172, 0, 1059,
	518, 0, 518, 624, 0, 0, 774, 775, 0, 0,
	773, 756, 764, 0, 767, 0, 0, 0, 778, 0,
	765, 1017, 0, 1020, 0, 85, 0, 0, 97, 0,
	0, 1153, 0, 0, 295, 296, 297, 1155, 0, 337,
	126, 130, 260, 1140, 1180, 0, 0, 0, 1064, 598,
	0, 616, 626, 0, 0, 0, 1062, 44, 0, 768,
	769, 770, 771, 772, 0, 1018, 0, 87, 269, 270,
	0, 279, 0, 0, 0, 0, 0, 293, 0, 0,
	1174, 1168, 199, 200, 201, 203, 773, 518, 0, 776,
	777, 0, 779, 0, 551, 0, 0, 0, 280, 0,
	0, 0, 0, 0, 0, 1156, 231, 338, 0, 41,
	599, 0, 766, 0, 552, 553, 0, 85, 271, 272,
	273, 274, 275, 0, 277, 0, 0, 0, 289, 290,
	291, 0, 298, 300, 301, 302, 0, 304, 305, 294,
	202, 0, 1019, 554, 0, 555, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 286, 0, 292, 0,
	303, 0, 0, 566, 568, 569, 0, 0, 567, 0,
	0, 281, 282, 0, 0, 0, 287, 0, 299, 627,
	628, 570, 571, 572, 276, 278, 0, 284, 0, 0,
	0, 0, 0, 283, 0, 288, 285,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 506,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:499
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:503
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:510
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:545
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:551
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:557
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:564
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:570
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:581
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:588
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:594
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:601
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:610
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:668
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:690
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:696
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:700
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:704
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:708
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:728
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:738
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:747
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:751
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:761
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:768
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:777
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:781
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:787
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:801
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:818
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:823
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:828
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:834
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:848
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:853
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:857
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[7].selStmt, SpecialCommentMode: yyDollar[6].boolean, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[8].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[9].selStmt, SpecialCommentMode: yyDollar[8].boolean, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[10].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:865
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:873
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 96:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:881
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:885
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:889
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:908
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:917
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:958
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:971
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:999
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1008
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1048
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1052
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1060
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1085
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1100
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1105
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1119
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1124
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1128
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1132
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1140
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1154
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1281
		{
			yyVAL.strs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantAssumption = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1368
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1377
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1388
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1396
		{
			yyVAL.procedureParams = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1433
		{
			yyVAL.characteristics = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1469
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1477
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1495
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1546
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1552
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1560
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1596
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1600
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1604
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1610
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1626
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1630
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1636
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1644
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = BeforeStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = AfterStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = InsertStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = UpdateStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = DeleteStr
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1683
		{
			yyVAL.triggerOrder = nil
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1707
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 278:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1717
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1733
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1739
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 283:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1744
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1749
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 285:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1755
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1773
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1779
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1791
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1799
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1878
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1888
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.statement = &Resignal{}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1981
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.exprs = nil
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2040
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2056
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2083
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2178
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.sqlVal = nil
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2494
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2502
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2512
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2545
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2582
		{
			yyVAL.boolean = false
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.boolean = true
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.charsetCollates = nil
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2627
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2631
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2635
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2639
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2645
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2649
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2655
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.colKeyOpt = colKey
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2689
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2703
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2731
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = yyDollar[1].str
		}
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2761
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2765
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2770
		{
			yyVAL.indexOptions = nil
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2794
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2805
		{
			yyVAL.str = ""
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2819
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2827
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2831
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2840
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = yyDollar[1].str
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2900
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2916
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 551:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2930
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 552:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2934
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2938
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 554:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2942
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 555:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2946
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2952
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2970
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2985
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3032
		{
			yyVAL.boolean = true
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.boolean = true
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.boolean = false
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = ""
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = yyDollar[1].str
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = ""
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3097
		{
			yyVAL.str = string("")
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3110
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3133
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3140
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3151
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3160
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 599:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3164
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3168
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3173
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3178
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3196
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3203
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3213
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3225
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3234
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3238
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3246
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3261
		{
			yyVAL.columnOrder = nil
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3274
		{
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3276
		{
		}
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3280
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3296
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 628:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3300
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3316
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3320
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3332
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3338
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3346
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3350
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3358
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3366
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3374
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3382
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3390
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3398
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3407
		{

		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3441
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3445
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3449
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3453
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3457
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3461
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3465
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3469
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3477
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3485
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3489
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3493
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3497
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3501
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 668:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3509
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 669:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3514
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3527
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3535
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3549
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3553
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3558
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3562
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 681:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3575
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3595
		{
			yyVAL.boolean = false
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.boolean = true
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3609
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = ""
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3629
		{
			yyVAL.showFilter = nil
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3633
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3637
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = SessionStr
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = GlobalStr
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.statement = &Begin{}
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Begin{}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3685
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &Commit{}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.statement = &Rollback{}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3713
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3727
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3732
		{
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3733
		{
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3737
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3776
		{
			setAllowComments(yylex, true)
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3786
		{
			yyVAL.bytes2 = nil
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3790
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = UnionStr
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = UnionAllStr
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = UnionDistinctStr
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.byt = 0
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.byt = 1
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = ""
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = SQLCacheStr
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3854
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3862
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3881
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3885
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3895
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3903
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3909
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3913
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 756:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3919
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3924
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3932
		{
			yyVAL.exprs = nil
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3941
		{
			yyVAL.over = nil
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3945
		{
			yyVAL.over = yyDollar[1].over
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3950
		{
			yyVAL.frame = nil
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3954
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3965
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.window = nil
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.window = yyDollar[2].window
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4074
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4116
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4145
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4149
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 800:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4160
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4175
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 803:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4179
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4198
		{
			yyVAL.expr = nil
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4207
		{
			yyVAL.columns = nil
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4231
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4237
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4250
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4254
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4258
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4270
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = JoinStr
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = JoinStr
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = JoinStr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = StraightJoinStr
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = LeftJoinStr
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = LeftJoinStr
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = RightJoinStr
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = RightJoinStr
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = NaturalJoinStr
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4405
		{
			yyVAL.indexHints = nil
		}
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4409
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4413
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4417
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.expr = nil
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4426
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4490
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4494
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4498
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4506
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4510
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4514
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = IsNullStr
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = IsNotNullStr
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = IsTrueStr
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = IsNotTrueStr
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = IsFalseStr
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = IsNotFalseStr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = EqualStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = LessThanStr
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = GreaterThanStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = LessEqualStr
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = GreaterEqualStr
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = NotEqualStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = nil
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4613
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4619
		{
			yyVAL.selectExprs = nil
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4630
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4640
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4654
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4730
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4738
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4742
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4750
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4796
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4810
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4814
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4822
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4826
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4879
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4887
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4903
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4930
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4950
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4954
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 976:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4962
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 982:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 983:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 984:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 985:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5033
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5043
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5058
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5081
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5086
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5090
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5105
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5135
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5141
		{
			yyVAL.str = ""
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5145
		{
			yyVAL.str = BooleanModeStr
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5149
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5153
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5173
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5177
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5185
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5189
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5193
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5203
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5211
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5219
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5223
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5228
		{
			yyVAL.expr = nil
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5237
		{
			yyVAL.str = string("")
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5241
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5247
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5257
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5262
		{
			yyVAL.expr = nil
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5276
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5280
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5314
		{
			yyVAL.expr = &NullVal{}
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5324
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5328
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5333
		{
			yyVAL.exprs = nil
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5337
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5343
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5347
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = nil
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5362
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5373
		{
			yyVAL.orderBy = nil
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5387
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = AscScr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = AscScr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = DescScr
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5411
		{
			yyVAL.limit = nil
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5415
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5419
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5423
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = ""
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = ForUpdateStr
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = ShareModeStr
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5459
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5463
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5471
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5476
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5480
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5484
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5490
		{
			yyVAL.columns = nil
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5494
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5500
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5504
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5508
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5512
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5517
		{
			yyVAL.assignExprs = nil
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5521
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5541
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5586
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5603
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5616
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5629
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5639
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5649
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5653
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5659
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5663
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5667
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5674
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.expr = &Default{}
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5698
		{
			yyVAL.byt = 0
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5700
		{
			yyVAL.byt = 1
		}
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5703
		{
			yyVAL.byt = 0
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5705
		{
			yyVAL.byt = 1
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5708
		{
			yyVAL.byt = 0
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5710
		{
			yyVAL.byt = 1
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5715
		{
			yyVAL.str = IgnoreStr
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5718
		{
			yyVAL.sqlVal = nil
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5720
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5724
		{
			yyVAL.empty = struct{}{}
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.empty = struct{}{}
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5729
		{
			yyVAL.empty = struct{}{}
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5731
		{
			yyVAL.empty = struct{}{}
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.empty = struct{}{}
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = UniqueStr
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = FulltextStr
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = SpatialStr
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5749
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5751
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5755
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5759
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5769
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5776
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5798
		{
			yyVAL.str = string("")
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5800
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5803
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5808
		{
			yyVAL.EnclosedBy = nil
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5812
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5817
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5826
		{
			yyVAL.sqlVal = nil
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5830
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5835
		{
			yyVAL.sqlVal = nil
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5839
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5844
		{
			yyVAL.Fields = nil
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5848
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5853
		{
			yyVAL.Lines = nil
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5857
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5862
		{
			yyVAL.sqlVal = nil
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5872
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5878
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5882
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5888
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5892
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5898
		{
			yyVAL.lockType = LockRead
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5902
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5906
		{
			yyVAL.lockType = LockWrite
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5910
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5916
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5922
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5926
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5930
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6445
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6454
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
