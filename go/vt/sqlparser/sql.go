// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:17

package sqlparser

import __yyfmt__ "fmt"

//line sql.y:19

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const ENABLE = 57517
const DISABLE = 57518
const EACH = 57519
const ROW = 57520
const BEFORE = 57521
const FOLLOWS = 57522
const PRECEDES = 57523
const DEFINER = 57524
const INVOKER = 57525
const INOUT = 57526
const OUT = 57527
const DETERMINISTIC = 57528
const CONTAINS = 57529
const READS = 57530
const MODIFIES = 57531
const SQL = 57532
const SECURITY = 57533
const TEMPORARY = 57534
const CLASS_ORIGIN = 57535
const SUBCLASS_ORIGIN = 57536
const MESSAGE_TEXT = 57537
const MYSQL_ERRNO = 57538
const CONSTRAINT_CATALOG = 57539
const CONSTRAINT_SCHEMA = 57540
const CONSTRAINT_NAME = 57541
const CATALOG_NAME = 57542
const SCHEMA_NAME = 57543
const TABLE_NAME = 57544
const COLUMN_NAME = 57545
const CURSOR_NAME = 57546
const SIGNAL = 57547
const RESIGNAL = 57548
const SQLSTATE = 57549
const DECLARE = 57550
const CONDITION = 57551
const CURSOR = 57552
const CONTINUE = 57553
const EXIT = 57554
const UNDO = 57555
const HANDLER = 57556
const FOUND = 57557
const SQLWARNING = 57558
const SQLEXCEPTION = 57559
const USER = 57560
const IDENTIFIED = 57561
const ROLE = 57562
const REUSE = 57563
const GRANT = 57564
const GRANTS = 57565
const REVOKE = 57566
const NONE = 57567
const ATTRIBUTE = 57568
const RANDOM = 57569
const PASSWORD = 57570
const INITIAL = 57571
const AUTHENTICATION = 57572
const SSL = 57573
const X509 = 57574
const CIPHER = 57575
const ISSUER = 57576
const SUBJECT = 57577
const ACCOUNT = 57578
const EXPIRE = 57579
const NEVER = 57580
const DAY = 57581
const OPTION = 57582
const OPTIONAL = 57583
const EXCEPT = 57584
const ADMIN = 57585
const PRIVILEGES = 57586
const MAX_QUERIES_PER_HOUR = 57587
const MAX_UPDATES_PER_HOUR = 57588
const MAX_CONNECTIONS_PER_HOUR = 57589
const MAX_USER_CONNECTIONS = 57590
const FLUSH = 57591
const FAILED_LOGIN_ATTEMPTS = 57592
const PASSWORD_LOCK_TIME = 57593
const REQUIRE = 57594
const PROXY = 57595
const ROUTINE = 57596
const TABLESPACE = 57597
const CLIENT = 57598
const SLAVE = 57599
const EVENT = 57600
const EXECUTE = 57601
const FILE = 57602
const RELOAD = 57603
const REPLICATION = 57604
const SHUTDOWN = 57605
const SUPER = 57606
const USAGE = 57607
const LOGS = 57608
const ENGINE = 57609
const ERROR = 57610
const GENERAL = 57611
const HOSTS = 57612
const OPTIMIZER_COSTS = 57613
const RELAY = 57614
const SLOW = 57615
const USER_RESOURCES = 57616
const NO_WRITE_TO_BINLOG = 57617
const CHANNEL = 57618
const BEGIN = 57619
const START = 57620
const TRANSACTION = 57621
const COMMIT = 57622
const ROLLBACK = 57623
const SAVEPOINT = 57624
const WORK = 57625
const RELEASE = 57626
const BIT = 57627
const TINYINT = 57628
const SMALLINT = 57629
const MEDIUMINT = 57630
const INT = 57631
const INTEGER = 57632
const BIGINT = 57633
const INTNUM = 57634
const SERIAL = 57635
const REAL = 57636
const DOUBLE = 57637
const FLOAT_TYPE = 57638
const DECIMAL = 57639
const NUMERIC = 57640
const DEC = 57641
const FIXED = 57642
const PRECISION = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const NVARCHAR = 57654
const NATIONAL = 57655
const VARYING = 57656
const TEXT = 57657
const TINYTEXT = 57658
const MEDIUMTEXT = 57659
const LONGTEXT = 57660
const LONG = 57661
const BLOB = 57662
const TINYBLOB = 57663
const MEDIUMBLOB = 57664
const LONGBLOB = 57665
const JSON = 57666
const ENUM = 57667
const GEOMETRY = 57668
const POINT = 57669
const LINESTRING = 57670
const POLYGON = 57671
const GEOMETRYCOLLECTION = 57672
const MULTIPOINT = 57673
const MULTILINESTRING = 57674
const MULTIPOLYGON = 57675
const LOCAL = 57676
const LOW_PRIORITY = 57677
const NULLX = 57678
const AUTO_INCREMENT = 57679
const APPROXNUM = 57680
const SIGNED = 57681
const UNSIGNED = 57682
const ZEROFILL = 57683
const COLLATION = 57684
const DATABASES = 57685
const SCHEMAS = 57686
const TABLES = 57687
const FULL = 57688
const PROCESSLIST = 57689
const COLUMNS = 57690
const FIELDS = 57691
const ENGINES = 57692
const PLUGINS = 57693
const NAMES = 57694
const CHARSET = 57695
const GLOBAL = 57696
const SESSION = 57697
const ISOLATION = 57698
const LEVEL = 57699
const READ = 57700
const WRITE = 57701
const ONLY = 57702
const REPEATABLE = 57703
const COMMITTED = 57704
const UNCOMMITTED = 57705
const SERIALIZABLE = 57706
const ENCRYPTION = 57707
const CURRENT_TIMESTAMP = 57708
const DATABASE = 57709
const CURRENT_DATE = 57710
const CURRENT_USER = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const UTC_DATE = 57715
const UTC_TIME = 57716
const UTC_TIMESTAMP = 57717
const REPLACE = 57718
const CONVERT = 57719
const CAST = 57720
const SUBSTR = 57721
const SUBSTRING = 57722
const TRIM = 57723
const LEADING = 57724
const TRAILING = 57725
const BOTH = 57726
const GROUP_CONCAT = 57727
const SEPARATOR = 57728
const TIMESTAMPADD = 57729
const TIMESTAMPDIFF = 57730
const OVER = 57731
const WINDOW = 57732
const GROUPING = 57733
const CURRENT = 57734
const AVG = 57735
const BIT_AND = 57736
const BIT_OR = 57737
const BIT_XOR = 57738
const COUNT = 57739
const JSON_ARRAYAGG = 57740
const JSON_OBJECTAGG = 57741
const MAX = 57742
const MIN = 57743
const STDDEV_POP = 57744
const STDDEV = 57745
const STD = 57746
const STDDEV_SAMP = 57747
const SUM = 57748
const VAR_POP = 57749
const VARIANCE = 57750
const VAR_SAMP = 57751
const CUME_DIST = 57752
const DENSE_RANK = 57753
const FIRST_VALUE = 57754
const LAG = 57755
const LAST_VALUE = 57756
const LEAD = 57757
const NTH_VALUE = 57758
const NTILE = 57759
const ROW_NUMBER = 57760
const PERCENT_RANK = 57761
const RANK = 57762
const MATCH = 57763
const AGAINST = 57764
const BOOLEAN = 57765
const LANGUAGE = 57766
const WITH = 57767
const QUERY = 57768
const EXPANSION = 57769
const UNUSED = 57770
const ARRAY = 57771
const DESCRIPTION = 57772
const EMPTY = 57773
const JSON_TABLE = 57774
const LATERAL = 57775
const MEMBER = 57776
const RECURSIVE = 57777
const ACTIVE = 57778
const BUCKETS = 57779
const CLONE = 57780
const COMPONENT = 57781
const DEFINITION = 57782
const ENFORCED = 57783
const EXCLUDE = 57784
const GEOMCOLLECTION = 57785
const GET_MASTER_PUBLIC_KEY = 57786
const HISTOGRAM = 57787
const HISTORY = 57788
const INACTIVE = 57789
const INVISIBLE = 57790
const LOCKED = 57791
const MASTER_COMPRESSION_ALGORITHMS = 57792
const MASTER_PUBLIC_KEY_PATH = 57793
const MASTER_TLS_CIPHERSUITES = 57794
const MASTER_ZSTD_COMPRESSION_LEVEL = 57795
const NESTED = 57796
const NETWORK_NAMESPACE = 57797
const NOWAIT = 57798
const NULLS = 57799
const OJ = 57800
const OLD = 57801
const ORDINALITY = 57802
const ORGANIZATION = 57803
const OTHERS = 57804
const PATH = 57805
const PERSIST = 57806
const PERSIST_ONLY = 57807
const PRIVILEGE_CHECKS_USER = 57808
const PROCESS = 57809
const REFERENCE = 57810
const REQUIRE_ROW_FORMAT = 57811
const RESOURCE = 57812
const RESPECT = 57813
const RESTART = 57814
const RETAIN = 57815
const SECONDARY = 57816
const SECONDARY_ENGINE = 57817
const SECONDARY_LOAD = 57818
const SECONDARY_UNLOAD = 57819
const SKIP = 57820
const SRID = 57821
const THREAD_PRIORITY = 57822
const TIES = 57823
const VCPU = 57824
const VISIBLE = 57825
const SYSTEM = 57826
const INFILE = 57827
const GENERATED = 57828
const ALWAYS = 57829
const STORED = 57830
const VIRTUAL = 57831
const NVAR = 57832
const PASSWORD_LOCK = 57833

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1072,
	-1, 43,
	147, 1136,
	148, 1154,
	-2, 232,
	-1, 49,
	186, 701,
	187, 701,
	-2, 691,
	-1, 550,
	135, 1164,
	-2, 1158,
	-1, 551,
	135, 1165,
	-2, 1159,
	-1, 655,
	98, 1445,
	135, 1445,
	-2, 1120,
	-1, 656,
	98, 1563,
	135, 1563,
	-2, 1121,
	-1, 661,
	98, 1469,
	135, 1469,
	-2, 1122,
	-1, 662,
	98, 1516,
	135, 1516,
	-2, 1123,
	-1, 663,
	98, 1517,
	135, 1517,
	-2, 1124,
	-1, 664,
	98, 1392,
	135, 1392,
	-2, 1128,
	-1, 666,
	98, 1493,
	135, 1493,
	-2, 1130,
	-1, 1181,
	1, 798,
	5, 798,
	12, 798,
	13, 798,
	14, 798,
	15, 798,
	17, 798,
	19, 798,
	30, 798,
	31, 798,
	56, 798,
	57, 798,
	58, 798,
	59, 798,
	60, 798,
	62, 798,
	63, 798,
	66, 798,
	67, 798,
	69, 798,
	70, 798,
	408, 798,
	510, 798,
	-2, 830,
	-1, 1187,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1282,
	1, 481,
	510, 481,
	-2, 479,
	-1, 1284,
	1, 481,
	510, 481,
	-2, 479,
	-1, 1438,
	135, 1167,
	-2, 1163,
	-1, 1604,
	44, 547,
	-2, 1404,
	-1, 1608,
	68, 545,
	72, 545,
	-2, 1439,
	-1, 1609,
	68, 547,
	-2, 1354,
	-1, 1612,
	68, 543,
	72, 543,
	-2, 1272,
	-1, 1613,
	68, 544,
	72, 544,
	-2, 1282,
	-1, 1660,
	1, 482,
	510, 482,
	-2, 479,
	-1, 1741,
	44, 590,
	154, 592,
	156, 590,
	157, 590,
	-2, 627,
	-1, 1817,
	5, 51,
	-2, 900,
	-1, 2129,
	69, 1329,
	70, 1329,
	135, 1329,
	-2, 732,
	-1, 2152,
	1, 855,
	5, 855,
	12, 855,
	13, 855,
	14, 855,
	15, 855,
	17, 855,
	19, 855,
	30, 855,
	31, 855,
	56, 855,
	57, 855,
	58, 855,
	59, 855,
	60, 855,
	62, 855,
	63, 855,
	66, 855,
	67, 855,
	69, 855,
	70, 855,
	408, 855,
	510, 855,
	-2, 830,
	-1, 2262,
	154, 593,
	-2, 591,
	-1, 2323,
	5, 51,
	-2, 1092,
	-1, 2538,
	41, 1174,
	-2, 1172,
	-1, 2645,
	5, 51,
	-2, 1095,
}

const yyPrivate = 57344

const yyLast = 34942

var yyAct = [...]int{
	617, 80, 2837, 1657, 2861, 2820, 2819, 2744, 2868, 873,
	2743, 2649, 2839, 2656, 7, 2718, 422, 2655, 6, 2654,
	5, 551, 2776, 2657, 8, 2071, 2558, 1960, 2711, 2627,
	2625, 1218, 553, 2632, 2166, 2335, 2585, 2441, 2653, 3,
	2538, 2716, 1852, 2146, 2054, 1136, 2481, 1556, 1882, 2122,
	2043, 1614, 1596, 2540, 1655, 616, 1677, 542, 2392, 2223,
	2398, 1562, 83, 2376, 1416, 1903, 1312, 2422, 2167, 127,
	405, 408, 127, 535, 2650, 1560, 447, 447, 127, 2123,
	906, 80, 1605, 2053, 453, 1976, 569, 2256, 450, 450,
	1909, 93, 889, 1853, 556, 2119, 1595, 106, 1646, 1311,
	1766, 127, 1740, 929, 2131, 1594, 2138, 1409, 468, 2093,
	1703, 1472, 127, 1463, 2021, 1424, 127, 683, 1663, 534,
	127, 1535, 1601, 675, 1630, 2246, 1539, 1359, 1292, 678,
	1662, 1951, 1314, 1198, 127, 450, 1331, 683, 1661, 1546,
	1642, 1034, 657, 1440, 1181, 127, 1045, 1532, 676, 958,
	937, 1529, 1152, 680, 558, 1659, 1041, 649, 1364, 674,
	1037, 1178, 467, 538, 1720, 425, 1197, 1054, 653, 424,
	860, 1285, 1177, 1288, 646, 936, 1189, 1153, 654, 1923,
	872, 1584, 2900, 2896, 2891, 1925, 660, 2876, 2874, 2856,
	85, 2832, 2784, 82, 2587, 2586, 2180, 1357, 69, 2204,
	1930, 1929, 2517, 465, 2363, 2847, 2377, 417, 2727, 440,
	1910, 434, 445, 428, 2379, 36, 2818, 36, 2515, 2643,
	2798, 2530, 1926, 2702, 36, 36, 1988, 2220, 87, 88,
	89, 90, 91, 2518, 435, 2726, 2114, 1932, 2572, 1916,
	1690, 1847, 2722, 1690, 2605, 1917, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 1848, 36,
	1080, 72, 39, 40, 2628, 2466, 1558, 1788, 2317, 859,
	1719, 2642, 862, 1967, 865, 866, 2719, 81, 2161, 81,
	2162, 2163, 1027, 72, 39, 40, 81, 81, 1891, 2382,
	1580, 1890, 670, 1363, 1892, 1581, 1582, 1405, 1406, 910,
	911, 2723, 554, 893, 894, 41, 1199, 897, 1200, 1380,
	1928, 2722, 909, 1931, 986, 416, 1361, 1362, 415, 1934,
	994, 81, 1616, 419, 457, 1360, 1718, 2717, 955, 2380,
	2381, 2383, 2384, 2385, 1622, 1624, 109, 1623, 1631, 895,
	896, 427, 426, 429, 1636, 2719, 1631, 2304, 2064, 2302,
	1343, 433, 630, 919, 636, 638, 637, 634, 635, 633,
	632, 631, 414, 399, 464, 1618, 2018, 1401, 437, 1400,
	2723, 1399, 441, 2355, 2356, 1398, 118, 114, 115, 99,
	116, 1397, 470, 458, 548, 1396, 444, 1618, 2393, 2452,
	916, 990, 991, 127, 1983, 2813, 2396, 2399, 2400, 2401,
	2402, 2010, 80, 80, 2543, 2245, 1643, 2015, 1731, 2746,
	2394, 2395, 120, 119, 2230, 924, 2745, 2512, 2692, 926,
	1987, 925, 2221, 2609, 2410, 2418, 968, 2516, 2224, 2225,
	2226, 2227, 2228, 2690, 1732, 1391, 2752, 127, 101, 1985,
	923, 927, 98, 112, 2599, 2505, 2510, 2781, 111, 110,
	1678, 2408, 2509, 2865, 970, 2224, 2225, 2226, 2227, 2228,
	2508, 1023, 2779, 2780, 917, 918, 121, 2507, 122, 1031,
	1965, 2506, 1001, 2504, 2591, 1002, 2595, 2596, 2766, 430,
	431, 432, 438, 1370, 442, 443, 446, 2816, 127, 2731,
	2732, 907, 107, 908, 910, 911, 1670, 2651, 1365, 2337,
	2094, 2607, 108, 1748, 1742, 1743, 409, 1741, 1744, 1745,
	970, 1927, 2534, 400, 1966, 2233, 1873, 2001, 2002, 903,
	904, 905, 406, 902, 2834, 1669, 1968, 901, 103, 2793,
	104, 993, 113, 1367, 864, 863, 1366, 2843, 2584, 402,
	2838, 2096, 892, 1751, 2423, 2424, 2170, 2886, 410, 2601,
	1089, 1217, 1217, 1091, 2841, 2029, 2029, 1750, 1749, 1217,
	1217, 2261, 1216, 2027, 2901, 2898, 1057, 2378, 2611, 2203,
	2828, 2892, 2877, 2573, 403, 861, 418, 2720, 1344, 1986,
	2513, 920, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 2247, 117, 1134, 1725, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1941,
	1151, 1154, 1154, 1154, 1160, 1154, 1154, 1160, 1154, 1160,
	1169, 1170, 1171, 1172, 1631, 1182, 2720, 73, 2531, 2641,
	1020, 1621, 79, 1989, 79, 1363, 1135, 1645, 969, 1022,
	1924, 79, 79, 2691, 1908, 127, 127, 127, 1003, 73,
	1029, 2600, 2606, 1008, 407, 407, 970, 100, 1361, 1362,
	980, 683, 1032, 2533, 2098, 2872, 2232, 875, 436, 2102,
	407, 2097, 1176, 2095, 2433, 966, 79, 463, 2100, 2840,
	2842, 407, 2482, 1190, 2434, 2009, 2006, 1090, 1991, 1990,
	1977, 2099, 1726, 1300, 1565, 1567, 2484, 1298, 921, 1747,
	1908, 1281, 1908, 109, 1880, 1879, 2101, 2103, 1018, 1878,
	857, 2004, 1026, 1211, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 1978, 1913, 660, 867,
	371, 2287, 1826, 660, 1092, 1093, 2437, 2279, 977, 1823,
	2008, 2241, 2007, 1895, 1887, 1783, 1771, 1907, 1756, 470,
	2040, 1673, 1908, 2035, 2027, 1671, 1419, 965, 2032, 1210,
	1195, 2031, 2034, 1060, 1155, 1157, 1159, 1161, 1163, 1165,
	1166, 1168, 1908, 2483, 885, 1687, 1202, 2604, 1215, 1185,
	1686, 1203, 1566, 1070, 1014, 1576, 1080, 1277, 1585, 1156,
	1158, 1080, 1162, 1164, 1341, 1167, 2870, 2626, 975, 2871,
	1188, 2869, 2432, 1907, 1193, 1907, 1013, 1009, 1010, 1011,
	1012, 1015, 1016, 1017, 1019, 111, 110, 1053, 2498, 2448,
	1979, 1980, 2370, 2048, 976, 1540, 972, 1058, 1412, 2368,
	2193, 1617, 2767, 2768, 971, 978, 979, 981, 982, 983,
	984, 985, 1212, 987, 988, 989, 2438, 992, 1332, 995,
	996, 997, 998, 999, 2044, 1907, 447, 1092, 1093, 683,
	973, 974, 2027, 1294, 1092, 1093, 1217, 450, 450, 2028,
	2029, 2638, 2637, 447, 1695, 1907, 127, 2499, 2039, 127,
	1313, 2371, 2036, 2136, 450, 450, 2520, 127, 2369, 2194,
	2764, 2765, 891, 912, 2135, 1352, 127, 127, 127, 127,
	127, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 1293, 899, 1080, 1208, 928, 450, 96, 868,
	2521, 2880, 2862, 2879, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1070, 2116, 1333, 1080, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1070, 1530, 447, 1080, 874, 2890,
	1276, 1317, 1339, 95, 1530, 1283, 1838, 450, 450, 450,
	2829, 1696, 683, 2796, 1327, 1328, 1329, 1330, 2409, 1355,
	1073, 1074, 1075, 1076, 1077, 1070, 890, 914, 1080, 1704,
	1389, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1070, 94, 450, 1080, 80, 1447, 2403, 450, 450, 2777,
	900, 2802, 2695, 2801, 1373, 2178, 1052, 1051, 1295, 1316,
	1445, 1446, 1444, 2894, 1335, 1048, 1336, 462, 127, 1302,
	127, 1822, 1309, 683, 1053, 1310, 1052, 1051, 1417, 1418,
	1052, 1051, 1403, 1320, 1321, 1371, 1821, 2831, 1820, 2687,
	2646, 127, 81, 1395, 1053, 1052, 1051, 1057, 1053, 1768,
	1769, 1770, 2778, 1443, 1410, 1051, 1052, 1051, 1052, 1051,
	2887, 2528, 80, 1053, 2777, 877, 878, 879, 880, 881,
	882, 883, 1053, 2786, 1053, 1394, 1053, 1347, 1348, 1038,
	2688, 1350, 1039, 1437, 2527, 1052, 1051, 1052, 1051, 1441,
	1052, 1051, 1368, 683, 2118, 1467, 1468, 1353, 2526, 1957,
	1135, 2525, 1372, 1053, 1369, 1053, 643, 644, 1053, 1138,
	2602, 2519, 2362, 2361, 2888, 1956, 1052, 1051, 1954, 2063,
	683, 683, 1430, 1432, 1433, 1421, 2689, 1464, 1431, 1465,
	1390, 1935, 961, 1393, 1053, 574, 573, 576, 577, 578,
	579, 1893, 1474, 1894, 575, 580, 960, 1510, 934, 1422,
	2785, 2749, 1423, 1559, 1402, 2774, 2603, 1568, 2747, 2701,
	1182, 1407, 2598, 1436, 1182, 2597, 127, 2583, 2535, 2503,
	2462, 933, 2406, 2405, 127, 2404, 127, 2372, 2359, 2252,
	2186, 127, 127, 1952, 1438, 127, 127, 127, 1442, 1715,
	1349, 1135, 1482, 1434, 1318, 2773, 2608, 1487, 2581, 2552,
	1913, 2546, 2430, 2290, 2275, 683, 683, 1571, 2271, 1516,
	1519, 1573, 2263, 2234, 2218, 2217, 1531, 2216, 1996, 1470,
	1995, 1708, 1692, 1478, 1691, 1479, 1480, 1466, 1345, 1342,
	544, 1308, 1307, 1589, 1489, 1490, 1296, 676, 1492, 1493,
	1494, 1495, 1284, 1555, 1282, 956, 887, 1502, 413, 411,
	1301, 1506, 1000, 1507, 1509, 1591, 2473, 2799, 1033, 1513,
	1883, 660, 2545, 1564, 2495, 1527, 2346, 2792, 2494, 1338,
	2708, 1033, 2213, 127, 2346, 2706, 2346, 2704, 2346, 2589,
	2187, 1684, 2473, 2577, 1569, 2473, 2489, 127, 1414, 127,
	127, 450, 450, 450, 2473, 1033, 127, 2473, 2472, 2346,
	2345, 470, 2327, 1033, 1755, 1033, 966, 1185, 1602, 2281,
	1883, 1160, 2120, 1590, 1185, 2134, 1277, 1543, 1185, 1316,
	2201, 2200, 1574, 2544, 127, 127, 127, 1883, 1058, 1632,
	1633, 1634, 1635, 1542, 1438, 1578, 1682, 1683, 1583, 1413,
	1648, 1649, 1650, 1651, 1599, 1577, 1592, 2197, 2198, 1676,
	127, 96, 127, 2197, 2196, 1711, 683, 1781, 1033, 84,
	683, 1543, 1033, 1728, 1727, 1004, 1374, 2282, 964, 1377,
	1378, 1379, 1543, 1381, 1382, 1652, 1653, 1383, 1005, 1753,
	1644, 2282, 683, 1384, 2134, 683, 2759, 1385, 1386, 1675,
	1387, 1388, 1565, 1567, 1697, 1610, 1693, 1656, 2134, 1702,
	1508, 1712, 1508, 1033, 1214, 1213, 1508, 2713, 1772, 1701,
	1667, 1191, 1570, 1781, 1190, 1191, 963, 1439, 2321, 964,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1690, 966, 2214, 2199, 1717,
	2148, 2020, 1437, 1897, 1069, 1068, 1078, 1079, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1070, 1579, 470, 1080, 1707,
	1781, 1810, 1809, 1706, 615, 1351, 1689, 1192, 1415, 1194,
	1441, 1192, 1710, 1190, 1028, 1392, 1358, 1299, 1716, 1297,
	1566, 1548, 1551, 1552, 1553, 1549, 1196, 1550, 1554, 1276,
	671, 2139, 2140, 1548, 1551, 1552, 1553, 1549, 81, 1550,
	1554, 1522, 2728, 1723, 2705, 421, 2147, 2551, 2549, 1533,
	1849, 1851, 2364, 1618, 1182, 1182, 1182, 1182, 1182, 1737,
	2333, 1738, 1590, 1752, 1647, 1730, 2177, 1754, 1733, 1777,
	1559, 1643, 1874, 1185, 1901, 127, 127, 127, 127, 127,
	970, 1182, 1760, 1438, 1758, 1759, 1672, 127, 1850, 2139,
	2140, 127, 81, 1638, 1637, 127, 667, 1278, 1773, 953,
	679, 1705, 127, 2851, 2849, 2821, 2212, 2142, 1510, 1442,
	2120, 1958, 1304, 452, 1006, 967, 962, 1865, 1863, 2145,
	876, 1767, 1866, 1864, 1779, 2144, 683, 1862, 1884, 1782,
	1885, 1861, 1886, 2770, 1784, 1785, 1877, 2725, 1815, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1854, 1867, 1800,
	1552, 1553, 539, 540, 1805, 1806, 1807, 1808, 2051, 1757,
	1425, 1812, 1813, 1814, 2758, 1046, 1047, 2324, 1817, 1818,
	1819, 1765, 1764, 470, 1869, 2463, 1825, 2429, 2349, 1828,
	1829, 2270, 1876, 660, 1834, 1912, 1914, 2269, 683, 1840,
	1837, 1841, 1842, 1843, 1044, 1844, 1845, 1915, 2185, 2184,
	1881, 1898, 2183, 683, 1868, 683, 1855, 450, 1185, 1185,
	1185, 1185, 1185, 1905, 1870, 1871, 1857, 1858, 2172, 1860,
	1042, 127, 450, 1888, 1185, 447, 1856, 2613, 2616, 1859,
	1061, 1202, 2000, 1900, 2700, 1185, 2699, 450, 2539, 2748,
	2537, 1709, 2594, 1896, 1277, 2593, 412, 1346, 2522, 2523,
	1035, 2047, 1293, 1994, 1936, 1937, 2046, 2208, 450, 1945,
	683, 1943, 1036, 1209, 80, 951, 450, 1993, 935, 932,
	931, 1950, 888, 2809, 2556, 2555, 1665, 2319, 1417, 1418,
	1953, 2439, 1714, 2411, 1666, 1303, 2760, 683, 683, 1964,
	2412, 2693, 2541, 127, 2353, 930, 1955, 1961, 96, 2072,
	1137, 1962, 1135, 683, 1998, 1046, 1047, 1763, 1408, 1963,
	1280, 1150, 1024, 1025, 1984, 1762, 2808, 1729, 2049, 2050,
	683, 2807, 1944, 2806, 1946, 1947, 1948, 1949, 1906, 2500,
	1911, 1736, 915, 536, 2056, 2751, 2011, 2750, 1787, 1789,
	1774, 1775, 1776, 2697, 2017, 2617, 1437, 1997, 2564, 2560,
	2003, 1801, 1802, 1803, 1804, 2005, 537, 84, 2559, 2125,
	80, 2442, 1883, 2019, 1970, 1971, 1972, 2030, 470, 2041,
	2042, 2853, 2852, 2045, 2024, 2025, 470, 2250, 2016, 2014,
	2013, 683, 1827, 683, 2150, 1824, 1734, 1334, 1049, 2154,
	2155, 2156, 2852, 2853, 2574, 2058, 2182, 1411, 2126, 671,
	2121, 459, 461, 2062, 2057, 86, 683, 55, 2115, 2667,
	52, 2133, 1410, 1, 2124, 2669, 19, 1904, 1831, 1832,
	1833, 2668, 18, 2670, 20, 1724, 2066, 683, 1375, 683,
	2391, 683, 2390, 683, 2179, 2397, 1536, 2219, 2061, 2149,
	2671, 21, 2105, 2160, 2069, 2104, 2222, 1438, 2153, 2666,
	15, 1982, 1854, 2665, 14, 2158, 2079, 2080, 2056, 2659,
	10, 2407, 2022, 2033, 2038, 2682, 34, 2128, 1291, 2088,
	2511, 80, 871, 2092, 1674, 2207, 2143, 2680, 33, 2679,
	32, 957, 2174, 2678, 28, 2175, 2698, 2176, 2612, 2151,
	127, 2677, 27, 2676, 26, 2171, 2614, 2173, 2674, 23,
	2673, 22, 2675, 24, 2536, 447, 2165, 2127, 2414, 2206,
	2375, 1855, 2229, 2164, 2664, 13, 2374, 450, 1975, 2215,
	2661, 12, 127, 450, 2660, 11, 1974, 2209, 2210, 2211,
	2658, 9, 952, 1356, 2023, 2026, 127, 1685, 450, 2157,
	683, 450, 1652, 1746, 1653, 450, 450, 2624, 450, 1735,
	1007, 1603, 1593, 673, 2231, 92, 1694, 898, 379, 1600,
	1921, 2615, 954, 1920, 1933, 683, 1615, 1660, 2236, 127,
	683, 1664, 1919, 2190, 1319, 1918, 2610, 683, 1922, 1222,
	683, 1220, 1221, 1219, 1224, 1223, 383, 1619, 1620, 1204,
	1625, 1626, 1627, 1628, 1629, 1337, 2738, 2289, 2259, 1999,
	1050, 102, 56, 2431, 2037, 455, 456, 97, 1639, 1640,
	1641, 2237, 2280, 105, 385, 1088, 2240, 1761, 1889, 2244,
	658, 659, 2283, 2248, 2249, 2315, 2251, 651, 2188, 2189,
	2253, 2260, 1030, 2254, 2636, 2192, 1137, 1184, 2238, 2274,
	2710, 2730, 2195, 1040, 2629, 1836, 1149, 1528, 557, 1872,
	2073, 2447, 2631, 1429, 2076, 2077, 2078, 572, 667, 2081,
	571, 570, 127, 667, 1205, 567, 568, 2721, 1277, 1420,
	1846, 1062, 2202, 2060, 555, 546, 1180, 1173, 1713, 683,
	1547, 1545, 1544, 1305, 647, 124, 683, 683, 683, 2141,
	2137, 1557, 1179, 1183, 404, 70, 683, 913, 401, 2316,
	2341, 2342, 2343, 2571, 2086, 2087, 2328, 2300, 38, 683,
	460, 541, 25, 17, 2169, 2284, 922, 16, 2106, 2107,
	2365, 2108, 2109, 2351, 2339, 2110, 1739, 2320, 648, 869,
	42, 44, 672, 1969, 1427, 1428, 858, 1668, 2329, 1854,
	2737, 2836, 2344, 938, 127, 2366, 2860, 2775, 31, 30,
	870, 2296, 29, 2672, 2340, 2681, 2663, 2662, 2387, 2388,
	2389, 884, 2305, 2306, 2823, 2822, 4, 1021, 2311, 2367,
	2152, 1898, 71, 2350, 35, 669, 2, 0, 0, 2354,
	0, 0, 450, 2322, 2323, 0, 2325, 0, 0, 2326,
	0, 0, 1182, 0, 0, 0, 0, 0, 1855, 2425,
	2426, 0, 0, 0, 0, 0, 0, 0, 0, 2338,
	2386, 683, 0, 127, 0, 0, 0, 0, 0, 683,
	2181, 1137, 0, 0, 2427, 1514, 1515, 0, 0, 2415,
	0, 2358, 2125, 2360, 2258, 2125, 2468, 2444, 2445, 2443,
	2413, 1904, 2440, 0, 2265, 2267, 0, 2420, 2150, 0,
	2056, 0, 2435, 2421, 2258, 2171, 0, 0, 0, 683,
	2419, 2428, 1279, 0, 2491, 683, 1128, 1129, 1286, 1289,
	127, 0, 127, 2436, 2467, 0, 2416, 80, 683, 2471,
	2417, 0, 2357, 0, 2465, 1286, 1289, 2124, 0, 0,
	2124, 1588, 0, 0, 0, 0, 683, 0, 0, 0,
	0, 0, 1652, 2474, 0, 0, 0, 0, 0, 2496,
	0, 2464, 2470, 0, 0, 2497, 0, 0, 0, 0,
	0, 0, 2486, 2487, 2475, 2485, 2488, 0, 0, 2501,
	2480, 0, 0, 2451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 0, 0, 1185, 0, 0, 2502,
	2557, 0, 0, 0, 2285, 0, 0, 1564, 0, 2476,
	2514, 1654, 0, 0, 0, 0, 683, 0, 2524, 0,
	2457, 2458, 2459, 2529, 2461, 1376, 2532, 2125, 0, 80,
	0, 2542, 0, 1938, 1939, 1940, 1942, 2547, 2548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2477,
	2478, 2479, 2561, 0, 2550, 683, 2312, 2313, 2314, 886,
	2490, 2590, 2562, 0, 2554, 0, 0, 2576, 0, 0,
	2563, 0, 0, 0, 0, 0, 2575, 0, 0, 0,
	1830, 0, 2124, 0, 0, 0, 679, 2580, 0, 2592,
	0, 0, 0, 0, 2582, 0, 0, 0, 2579, 0,
	2492, 0, 2493, 959, 0, 1182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 2258, 0,
	0, 0, 0, 450, 2352, 0, 127, 0, 0, 0,
	0, 683, 0, 683, 0, 0, 0, 0, 2258, 1033,
	0, 0, 0, 0, 2620, 0, 2622, 0, 1042, 0,
	0, 0, 2619, 80, 0, 0, 1469, 2565, 2566, 2634,
	2652, 2567, 2568, 2569, 2570, 2621, 127, 2635, 2618, 0,
	2639, 0, 0, 0, 0, 0, 0, 2644, 0, 0,
	0, 0, 0, 1500, 1501, 1069, 1068, 1078, 1079, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1070, 0, 0, 1080,
	0, 470, 0, 470, 0, 0, 667, 0, 683, 2169,
	683, 0, 0, 2696, 2694, 0, 2733, 0, 0, 0,
	0, 2714, 0, 0, 0, 0, 0, 2169, 2703, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 2450,
	2724, 1816, 0, 0, 0, 2729, 0, 80, 0, 0,
	0, 667, 2453, 2454, 2455, 2456, 0, 2580, 0, 1185,
	2460, 0, 0, 1839, 0, 679, 0, 683, 679, 679,
	0, 0, 0, 0, 0, 0, 2754, 0, 2756, 2640,
	0, 0, 0, 0, 2645, 0, 0, 683, 1855, 0,
	0, 0, 0, 2763, 2772, 0, 2648, 0, 2742, 2757,
	2755, 2753, 0, 0, 2762, 0, 0, 2761, 0, 0,
	683, 0, 0, 0, 0, 0, 2769, 0, 0, 0,
	0, 2072, 447, 0, 2771, 0, 0, 0, 0, 2790,
	2782, 1175, 2707, 1187, 450, 0, 0, 0, 0, 80,
	2791, 683, 0, 0, 2715, 80, 2795, 0, 2794, 2805,
	0, 683, 2812, 2191, 0, 0, 0, 0, 2803, 0,
	2800, 0, 0, 80, 2815, 683, 0, 0, 80, 0,
	0, 0, 2817, 2830, 2827, 0, 0, 2846, 2826, 2833,
	2825, 2814, 0, 447, 2824, 2848, 2854, 2850, 1244, 80,
	2845, 0, 80, 80, 0, 450, 2810, 80, 0, 2855,
	2812, 0, 2857, 0, 2863, 0, 2835, 0, 0, 0,
	0, 0, 2169, 0, 2169, 0, 0, 80, 0, 1722,
	80, 0, 2873, 1722, 2812, 2881, 0, 2883, 0, 2294,
	2878, 0, 0, 0, 0, 80, 2588, 80, 0, 0,
	1043, 80, 2812, 2310, 2812, 1722, 0, 0, 1722, 0,
	0, 2893, 80, 0, 0, 80, 0, 80, 0, 2812,
	0, 80, 0, 0, 2812, 2897, 0, 0, 2812, 0,
	0, 0, 0, 0, 679, 0, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 125, 1231,
	1080, 398, 0, 0, 2067, 2068, 0, 125, 0, 0,
	2623, 0, 0, 2074, 2075, 0, 2297, 2298, 0, 2299,
	0, 0, 2301, 0, 2303, 2082, 2083, 2084, 2085, 0,
	469, 0, 2089, 2090, 2091, 0, 0, 0, 545, 0,
	1245, 650, 668, 0, 0, 125, 0, 0, 0, 125,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 0, 125, 1080, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 125, 1306, 0, 0, 2169, 0,
	0, 2117, 0, 0, 2884, 2885, 0, 0, 0, 0,
	2347, 2348, 1322, 1323, 1324, 1325, 1326, 0, 0, 2293,
	1471, 1476, 1477, 0, 0, 0, 1481, 667, 1483, 1484,
	1485, 1486, 0, 1488, 0, 0, 1491, 0, 0, 0,
	0, 1496, 1497, 1498, 1499, 0, 2159, 0, 1503, 1504,
	1505, 0, 0, 0, 0, 0, 1511, 1512, 0, 0,
	0, 1518, 1521, 667, 1526, 0, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 0, 679,
	1080, 0, 0, 0, 0, 0, 1534, 0, 1537, 1538,
	0, 1258, 1261, 1262, 1263, 1264, 1265, 1266, 0, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 0, 1246, 1247,
	1248, 1249, 1225, 1229, 1259, 1226, 1232, 1228, 1230, 1227,
	394, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	0, 1959, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 1981, 1064,
	0, 1067, 0, 0, 0, 0, 0, 1426, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 0, 1065, 1066, 1063, 0,
	0, 0, 0, 0, 2844, 0, 1069, 1068, 1078, 1079,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070, 1033, 0,
	1080, 2286, 0, 0, 0, 0, 2276, 0, 0, 2288,
	0, 0, 0, 2012, 0, 0, 0, 544, 372, 2291,
	2292, 2866, 0, 0, 0, 375, 0, 0, 2295, 1260,
	0, 0, 0, 0, 384, 392, 393, 0, 0, 0,
	679, 679, 125, 0, 1069, 1068, 1078, 1079, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1070, 679, 0, 1080, 0,
	0, 1244, 0, 0, 0, 0, 2309, 0, 679, 381,
	0, 0, 382, 2070, 0, 390, 391, 0, 0, 0,
	0, 2318, 0, 0, 0, 0, 125, 0, 1137, 0,
	0, 0, 1541, 0, 0, 0, 0, 0, 2330, 2331,
	2783, 0, 2332, 0, 0, 2334, 0, 0, 1572, 0,
	0, 0, 0, 1137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2308, 0, 387, 0,
	0, 0, 667, 0, 679, 0, 2132, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 2113, 0, 0, 2132,
	0, 0, 1231, 1069, 1068, 1078, 1079, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1070, 0, 0, 1080, 0, 0,
	679, 2307, 679, 0, 679, 0, 2168, 1780, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 1658,
	0, 0, 0, 1245, 0, 0, 1798, 1799, 0, 0,
	0, 0, 0, 1679, 373, 1680, 1681, 0, 0, 1811,
	0, 0, 1688, 1069, 1068, 1078, 1079, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1070, 0, 0, 1080, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 386, 376, 377,
	0, 397, 1700, 0, 0, 378, 380, 0, 374, 396,
	395, 1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1070, 0, 0, 1080, 959, 0, 1069, 1068,
	1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070,
	2112, 0, 1080, 2243, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 125, 125, 0, 2268, 0,
	0, 0, 0, 2273, 668, 0, 0, 0, 0, 668,
	2277, 0, 0, 2278, 1258, 1261, 1262, 1263, 1264, 1265,
	1266, 0, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	0, 1246, 1247, 1248, 1249, 1225, 1229, 1259, 1226, 1232,
	1228, 1230, 1227, 0, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 2111, 0, 0, 0, 0, 0, 0,
	0, 0, 2059, 0, 0, 1069, 1068, 1078, 1079, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1070, 544, 0, 1080,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 2336, 0, 1080, 0, 0, 0, 0, 2336,
	2336, 2336, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 36, 37, 72, 39,
	40, 0, 2336, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 1260, 0, 0, 0, 78, 0, 0, 0,
	41, 63, 64, 0, 0, 0, 0, 60, 1069, 1068,
	1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 0, 81, 0,
	0, 0, 2630, 2633, 0, 0, 0, 1137, 0, 0,
	0, 0, 0, 0, 1287, 1290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 125, 0,
	0, 1287, 1290, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 0, 0, 679, 125, 125, 125, 125, 125,
	0, 0, 679, 1069, 1068, 1078, 1079, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1070, 0, 0, 1080, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 0,
	0, 0, 2469, 0, 0, 0, 0, 0, 2336, 49,
	77, 76, 1778, 0, 0, 0, 47, 0, 0, 0,
	0, 2168, 0, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 2734, 2735, 0, 2168,
	1069, 1068, 1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1070, 0, 0, 1080, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2633, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 125, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 2553,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	2804, 0, 0, 0, 0, 51, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 2578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1475, 1475, 1475, 0, 0, 0,
	1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 0, 0,
	1475, 0, 0, 0, 0, 1475, 1475, 1475, 1475, 0,
	0, 0, 1475, 1475, 1475, 0, 0, 0, 0, 0,
	1475, 1475, 0, 0, 0, 1475, 1475, 0, 1475, 0,
	0, 0, 668, 0, 0, 2882, 0, 0, 0, 0,
	0, 0, 0, 0, 2168, 0, 2168, 0, 0, 0,
	1475, 1475, 1475, 1475, 73, 125, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 469, 0, 0, 0, 667,
	125, 125, 0, 0, 125, 1575, 1315, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 2205, 0, 0, 0,
	0, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2235, 0,
	0, 2709, 0, 2712, 0, 0, 0, 0, 0, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 529, 0, 2272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 125, 125,
	679, 0, 0, 0, 2262, 125, 0, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	2168, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 1698, 1699, 125, 0, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2797, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 679, 491,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 0,
	1315, 486, 0, 480, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2373, 0, 0, 0, 498, 496, 0, 0, 0, 499,
	0, 1475, 0, 0, 0, 507, 474, 0, 511, 1475,
	0, 0, 0, 0, 0, 0, 472, 0, 0, 0,
	1475, 1475, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 513, 0, 1475, 0, 0, 0, 1475, 487, 488,
	490, 517, 0, 519, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 125, 125, 125, 125, 125, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	125, 529, 0, 0, 469, 0, 0, 0, 0, 1475,
	0, 125, 0, 0, 0, 0, 0, 0, 2255, 668,
	0, 0, 2257, 0, 0, 0, 0, 475, 0, 0,
	0, 533, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 0,
	0, 0, 483, 476, 477, 478, 479, 481, 500, 501,
	505, 506, 523, 522, 521, 524, 528, 531, 530, 532,
	482, 484, 492, 502, 503, 504, 508, 509, 518, 514,
	516, 0, 0, 0, 0, 0, 0, 491, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	125, 0, 0, 0, 0, 0, 520, 0, 0, 486,
	0, 480, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 36, 0, 72, 39, 40,
	510, 512, 498, 496, 0, 0, 0, 499, 0, 59,
	0, 0, 0, 507, 474, 78, 511, 0, 0, 41,
	0, 0, 125, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 1475, 0, 0, 0, 0, 489, 513,
	0, 0, 1475, 0, 1315, 0, 487, 488, 490, 517,
	0, 519, 525, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2683, 0, 0, 2859, 2862, 2858, 0, 0, 0,
	0, 0, 2647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 475, 0, 43, 74, 46,
	45, 48, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 2684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 0,
	0, 529, 57, 58, 0, 2685, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 1902, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 515, 68, 485, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 0, 0, 510, 512,
	0, 0, 0, 0, 2686, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 1217,
	0, 0, 0, 0, 0, 0, 0, 491, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 486,
	0, 480, 0, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 36, 0, 72, 39, 40,
	0, 469, 498, 496, 0, 668, 0, 499, 0, 59,
	0, 0, 0, 507, 474, 78, 511, 0, 0, 41,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 513,
	0, 0, 79, 0, 0, 0, 487, 488, 490, 517,
	0, 519, 525, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2683, 0, 125, 0, 0, 2899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 475, 0, 43, 74, 46,
	45, 48, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 2684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 469,
	0, 469, 57, 58, 0, 2685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 0, 2686, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 73, 0, 2736, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 125, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 79, 0, 0, 0, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 668, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 125, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 2739, 2740, 2741, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	682, 0, 1597, 1598, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 1899, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 0, 0, 0, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 682, 0, 1597, 1598, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 2129, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 81, 0, 1033, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 2130, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 0, 0, 0, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 2446, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	2065, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 0, 0, 0, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 2055, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	1576, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 0, 0, 0, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 1435, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 0, 0, 0, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 1609, 1613, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 1612, 207, 363, 835,
	754, 753, 1606, 0, 1607, 1608, 217, 681, 128, 142,
	1604, 1611, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 0, 0, 0, 0, 0, 788, 799, 838, 814,
	333, 759, 841, 717, 743, 854, 747, 751, 794, 700,
	772, 259, 739, 701, 0, 721, 690, 731, 691, 718,
	761, 177, 716, 816, 775, 840, 216, 789, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 839, 767, 0,
	848, 219, 0, 784, 849, 320, 243, 0, 0, 763,
	825, 770, 812, 758, 796, 709, 783, 843, 740, 791,
	844, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 787, 837, 734, 790,
	793, 688, 786, 0, 695, 702, 853, 832, 724, 725,
	726, 0, 0, 0, 0, 0, 0, 0, 762, 771,
	806, 755, 352, 270, 287, 308, 749, 278, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 0, 781,
	0, 0, 0, 703, 696, 0, 0, 760, 0, 0,
	0, 708, 687, 723, 808, 0, 685, 244, 144, 813,
	831, 757, 207, 363, 835, 754, 753, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 805, 302,
	736, 686, 817, 719, 732, 167, 728, 294, 263, 351,
	741, 778, 293, 220, 341, 801, 836, 350, 745, 820,
	360, 365, 727, 768, 706, 317, 179, 175, 178, 0,
	133, 738, 277, 172, 212, 756, 795, 720, 164, 803,
	782, 819, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 750, 742, 0, 0, 356,
	752, 305, 304, 746, 202, 811, 785, 692, 286, 798,
	208, 132, 330, 368, 150, 214, 335, 684, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 733, 800, 810, 284, 307, 337, 152, 324, 729,
	730, 735, 807, 296, 818, 829, 842, 227, 182, 185,
	196, 203, 792, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 693, 0,
	322, 354, 370, 154, 715, 310, 336, 744, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 713, 714, 711,
	0, 712, 773, 774, 845, 846, 847, 809, 705, 0,
	826, 827, 0, 0, 0, 0, 0, 815, 833, 834,
	797, 855, 748, 710, 694, 697, 698, 699, 707, 764,
	765, 777, 780, 823, 822, 821, 824, 828, 851, 850,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 131, 140, 218, 856, 285, 188, 355,
	689, 174, 0, 766, 769, 779, 804, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 802, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 830, 0, 0, 0, 0,
	0, 788, 799, 838, 814, 333, 759, 841, 717, 743,
	854, 747, 751, 794, 700, 772, 259, 739, 701, 0,
	721, 690, 731, 691, 718, 761, 177, 716, 816, 775,
	840, 216, 789, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 839, 767, 0, 848, 219, 0, 784, 849,
	320, 243, 0, 0, 763, 825, 770, 812, 758, 796,
	709, 783, 843, 740, 791, 844, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 787, 837, 734, 790, 793, 688, 786, 0, 695,
	702, 853, 832, 724, 725, 726, 0, 0, 0, 0,
	0, 0, 0, 762, 771, 806, 755, 352, 270, 287,
	308, 749, 278, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 781, 0, 0, 0, 703, 696,
	0, 0, 760, 0, 0, 0, 708, 687, 723, 808,
	0, 685, 244, 144, 813, 831, 757, 207, 363, 835,
	754, 753, 280, 0, 327, 195, 217, 681, 128, 142,
	677, 194, 255, 805, 302, 736, 686, 817, 719, 732,
	167, 728, 294, 263, 351, 741, 778, 293, 220, 341,
	801, 836, 350, 745, 820, 360, 365, 727, 768, 706,
	317, 179, 175, 178, 0, 133, 738, 277, 172, 212,
	756, 795, 720, 164, 803, 782, 819, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	750, 742, 0, 0, 356, 752, 305, 304, 746, 202,
	811, 785, 692, 286, 798, 208, 132, 330, 368, 150,
	214, 335, 684, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 733, 800, 810, 284,
	307, 337, 152, 324, 729, 730, 735, 807, 296, 818,
	829, 842, 227, 182, 185, 196, 203, 792, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 693, 0, 322, 354, 370, 154, 715,
	310, 336, 744, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 713, 714, 711, 0, 712, 773, 774, 845,
	846, 847, 809, 705, 0, 826, 827, 0, 0, 0,
	0, 0, 815, 833, 834, 797, 855, 748, 710, 694,
	697, 698, 699, 707, 764, 765, 777, 780, 823, 822,
	821, 824, 828, 851, 850, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 131, 140,
	218, 856, 285, 188, 355, 689, 174, 0, 766, 769,
	779, 804, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 802, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	830, 333, 0, 0, 0, 0, 788, 799, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 552, 0,
	0, 0, 177, 549, 0, 0, 0, 216, 0, 0,
	166, 224, 222, 0, 0, 0, 266, 332, 0, 0,
	0, 629, 219, 0, 0, 529, 320, 243, 0, 0,
	0, 0, 618, 619, 0, 0, 0, 0, 0, 0,
	1586, 0, 81, 0, 0, 0, 550, 574, 573, 576,
	577, 578, 579, 0, 0, 533, 575, 580, 613, 614,
	1587, 0, 0, 547, 565, 0, 628, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 270, 287, 308, 0, 278, 493,
	0, 0, 0, 0, 562, 563, 0, 0, 0, 0,
	641, 0, 564, 0, 0, 559, 560, 561, 566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 144,
	620, 0, 0, 207, 363, 0, 0, 639, 280, 0,
	327, 195, 217, 149, 128, 142, 160, 194, 255, 0,
	302, 588, 473, 0, 0, 0, 167, 0, 294, 263,
	351, 590, 0, 293, 220, 341, 0, 0, 350, 0,
	520, 360, 365, 486, 0, 480, 317, 179, 175, 178,
	0, 133, 494, 277, 172, 212, 0, 0, 0, 164,
	0, 0, 0, 316, 339, 151, 334, 242, 248, 161,
	163, 162, 143, 311, 338, 156, 165, 321, 298, 328,
	171, 0, 0, 0, 0, 0, 498, 496, 0, 0,
	356, 499, 305, 304, 0, 202, 0, 507, 474, 286,
	511, 208, 132, 330, 368, 150, 214, 335, 472, 189,
	254, 169, 264, 265, 186, 130, 282, 236, 237, 235,
	238, 193, 489, 513, 0, 284, 307, 337, 152, 324,
	487, 488, 490, 517, 296, 519, 525, 0, 227, 182,
	185, 196, 203, 0, 291, 325, 357, 0, 145, 134,
	331, 349, 157, 306, 309, 366, 292, 137, 347, 326,
	240, 209, 210, 135, 0, 136, 289, 176, 192, 170,
	258, 0, 191, 279, 344, 345, 168, 369, 146, 359,
	139, 147, 358, 251, 0, 250, 361, 340, 348, 241,
	229, 0, 138, 346, 239, 228, 215, 184, 198, 275,
	223, 276, 199, 246, 245, 247, 225, 230, 0, 475,
	0, 322, 354, 370, 154, 0, 310, 336, 497, 283,
	155, 190, 183, 274, 249, 148, 201, 319, 213, 221,
	288, 367, 262, 295, 158, 353, 318, 180, 630, 640,
	636, 638, 637, 634, 635, 633, 632, 631, 642, 621,
	622, 623, 624, 625, 0, 0, 0, 627, 0, 607,
	608, 0, 0, 0, 483, 581, 582, 583, 584, 585,
	591, 592, 596, 597, 605, 604, 603, 606, 609, 611,
	610, 612, 586, 587, 589, 593, 594, 595, 598, 599,
	602, 600, 601, 626, 131, 140, 218, 0, 285, 188,
	355, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 181, 187, 197, 200, 204, 205, 206,
	211, 226, 231, 232, 233, 234, 252, 253, 256, 257,
	260, 261, 267, 268, 269, 271, 272, 273, 281, 515,
	290, 297, 299, 300, 301, 303, 312, 313, 314, 315,
	323, 329, 342, 343, 362, 364, 36, 333, 0, 0,
	0, 0, 510, 512, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 177, 549,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 629, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 550, 574, 573, 576, 577, 578, 579, 0,
	0, 533, 575, 580, 613, 614, 0, 0, 0, 547,
	565, 0, 628, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	562, 563, 0, 0, 0, 0, 641, 0, 564, 0,
	0, 559, 560, 561, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 620, 0, 0, 207,
	363, 0, 0, 639, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 588, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 590, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 630, 640, 636, 638, 637, 634,
	635, 633, 632, 631, 642, 621, 622, 623, 624, 625,
	0, 0, 0, 627, 0, 607, 608, 0, 0, 0,
	483, 581, 582, 583, 584, 585, 591, 592, 596, 597,
	605, 604, 603, 606, 609, 611, 610, 612, 586, 587,
	589, 593, 594, 595, 598, 599, 602, 600, 601, 626,
	131, 140, 218, 79, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 177, 549, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 629, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 550, 574, 573,
	576, 577, 578, 579, 0, 0, 533, 575, 580, 613,
	614, 0, 0, 0, 547, 565, 0, 628, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 562, 563, 543, 0, 0,
	0, 641, 0, 564, 0, 0, 559, 560, 561, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 620, 0, 0, 207, 363, 0, 0, 639, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 588, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 590, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 630,
	640, 636, 638, 637, 634, 635, 633, 632, 631, 642,
	621, 622, 623, 624, 625, 0, 0, 0, 627, 0,
	607, 608, 0, 0, 0, 483, 581, 582, 583, 584,
	585, 591, 592, 596, 597, 605, 604, 603, 606, 609,
	611, 610, 612, 586, 587, 589, 593, 594, 595, 598,
	599, 602, 600, 601, 626, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 177, 549,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 629, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1033, 0, 550, 574, 573, 576, 577, 578, 579, 0,
	0, 533, 575, 580, 613, 614, 0, 0, 0, 547,
	565, 0, 628, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	562, 563, 0, 0, 0, 0, 641, 0, 564, 0,
	0, 559, 560, 561, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 620, 0, 0, 207,
	363, 0, 0, 639, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 588, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 590, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 630, 640, 636, 638, 637, 634,
	635, 633, 632, 631, 642, 621, 622, 623, 624, 625,
	0, 0, 0, 627, 0, 607, 608, 0, 0, 0,
	483, 581, 582, 583, 584, 585, 591, 592, 596, 597,
	605, 604, 603, 606, 609, 611, 610, 612, 586, 587,
	589, 593, 594, 595, 598, 599, 602, 600, 601, 626,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 177, 549, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 629, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 550, 574, 573,
	576, 577, 578, 579, 0, 0, 533, 575, 580, 613,
	614, 0, 0, 0, 547, 565, 0, 628, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 562, 563, 1473, 0, 0,
	0, 641, 0, 564, 0, 0, 559, 560, 561, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 620, 0, 0, 207, 363, 0, 0, 639, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 588, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 590, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 630,
	640, 636, 638, 637, 634, 635, 633, 632, 631, 642,
	621, 622, 623, 624, 625, 0, 0, 0, 627, 0,
	607, 608, 0, 0, 0, 483, 581, 582, 583, 584,
	585, 591, 592, 596, 597, 605, 604, 603, 606, 609,
	611, 610, 612, 586, 587, 589, 593, 594, 595, 598,
	599, 602, 600, 601, 626, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 177, 549,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 629, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 550, 574, 1520, 576, 577, 578, 579, 0,
	0, 533, 575, 580, 613, 614, 0, 0, 0, 547,
	565, 0, 628, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	562, 563, 1473, 0, 0, 0, 641, 0, 564, 0,
	0, 559, 560, 561, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 620, 0, 0, 207,
	363, 0, 0, 639, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 588, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 590, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 630, 640, 636, 638, 637, 634,
	635, 633, 632, 631, 642, 621, 622, 623, 624, 625,
	0, 0, 0, 627, 0, 607, 608, 0, 0, 0,
	483, 581, 582, 583, 584, 585, 591, 592, 596, 597,
	605, 604, 603, 606, 609, 611, 610, 612, 586, 587,
	589, 593, 594, 595, 598, 599, 602, 600, 601, 626,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 177, 549, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 629, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 550, 574, 1517,
	576, 577, 578, 579, 0, 0, 533, 575, 580, 613,
	614, 0, 0, 0, 547, 565, 0, 628, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 562, 563, 1473, 0, 0,
	0, 641, 0, 564, 0, 0, 559, 560, 561, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 620, 0, 0, 207, 363, 0, 0, 639, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 588, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 590, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 630,
	640, 636, 638, 637, 634, 635, 633, 632, 631, 642,
	621, 622, 623, 624, 625, 0, 0, 0, 627, 0,
	607, 608, 0, 0, 0, 483, 581, 582, 583, 584,
	585, 591, 592, 596, 597, 605, 604, 603, 606, 609,
	611, 610, 612, 586, 587, 589, 593, 594, 595, 598,
	599, 602, 600, 601, 626, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 177, 549,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 629, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1354, 0, 550, 574, 573, 576, 577, 578, 579, 0,
	0, 533, 575, 580, 613, 614, 0, 0, 0, 547,
	565, 0, 628, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	562, 563, 0, 0, 0, 0, 641, 0, 564, 0,
	0, 559, 560, 561, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 620, 0, 0, 207,
	363, 0, 0, 639, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 588, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 590, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 630, 640, 636, 638, 637, 634,
	635, 633, 632, 631, 642, 621, 622, 623, 624, 625,
	0, 0, 0, 627, 0, 607, 608, 0, 0, 0,
	483, 581, 582, 583, 584, 585, 591, 592, 596, 597,
	605, 604, 603, 606, 609, 611, 610, 612, 586, 587,
	589, 593, 594, 595, 598, 599, 602, 600, 601, 626,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 552,
	0, 0, 0, 177, 549, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 629, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 550, 574, 573,
	576, 577, 578, 579, 0, 0, 533, 575, 580, 613,
	614, 0, 0, 0, 547, 565, 0, 628, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 562, 563, 0, 0, 0,
	0, 641, 0, 564, 0, 0, 559, 560, 561, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 620, 0, 0, 207, 363, 0, 0, 639, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 588, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 590, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 630,
	640, 636, 638, 637, 634, 635, 633, 632, 631, 642,
	621, 622, 623, 624, 625, 0, 0, 0, 627, 0,
	607, 608, 0, 0, 0, 483, 581, 582, 583, 584,
	585, 591, 592, 596, 597, 605, 604, 603, 606, 609,
	611, 610, 612, 586, 587, 589, 593, 594, 595, 598,
	599, 602, 600, 601, 626, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 629, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 550, 574, 573, 576, 577, 578, 579, 0,
	0, 533, 575, 580, 613, 614, 0, 0, 0, 0,
	565, 0, 628, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	562, 563, 0, 0, 0, 0, 641, 0, 564, 0,
	0, 559, 560, 561, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 620, 0, 0, 207,
	363, 0, 0, 639, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 588, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 590, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 630, 640, 636, 638, 637, 634,
	635, 633, 632, 631, 642, 621, 622, 623, 624, 625,
	1523, 1524, 1525, 627, 0, 607, 608, 0, 0, 0,
	483, 581, 582, 583, 584, 585, 591, 592, 596, 597,
	605, 604, 603, 606, 609, 611, 610, 612, 586, 587,
	589, 593, 594, 595, 598, 599, 602, 600, 601, 626,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 629, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 550, 574, 573,
	576, 577, 578, 579, 0, 0, 533, 575, 580, 613,
	614, 0, 0, 0, 0, 565, 0, 628, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 562, 563, 0, 0, 0,
	0, 641, 0, 564, 0, 0, 559, 560, 561, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 620, 0, 0, 207, 363, 0, 0, 639, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 588, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 590, 2867, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 630,
	640, 636, 638, 637, 634, 635, 633, 632, 631, 642,
	621, 622, 623, 624, 625, 0, 0, 0, 627, 0,
	607, 608, 0, 0, 0, 483, 581, 582, 583, 584,
	585, 591, 592, 596, 597, 605, 604, 603, 606, 609,
	611, 610, 612, 586, 587, 589, 593, 594, 595, 598,
	599, 602, 600, 601, 626, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 629, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 618, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1033, 0, 550, 574, 573, 576, 577, 578, 579, 0,
	0, 533, 575, 580, 613, 614, 0, 0, 0, 0,
	565, 0, 628, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	562, 563, 0, 0, 0, 0, 641, 0, 564, 0,
	0, 559, 560, 561, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 620, 0, 0, 207,
	363, 0, 0, 639, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 588, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 590, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 630, 640, 636, 638, 637, 634,
	635, 633, 632, 631, 642, 621, 622, 623, 624, 625,
	0, 0, 0, 627, 0, 607, 608, 0, 0, 0,
	483, 581, 582, 583, 584, 585, 591, 592, 596, 597,
	605, 604, 603, 606, 609, 611, 610, 612, 586, 587,
	589, 593, 594, 595, 598, 599, 602, 600, 601, 626,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 629, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 618, 619, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 550, 574, 573,
	576, 577, 578, 579, 0, 0, 533, 575, 580, 613,
	614, 0, 0, 0, 0, 565, 0, 628, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 562, 563, 0, 0, 0,
	0, 641, 0, 564, 0, 0, 559, 560, 561, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 620, 0, 0, 207, 363, 0, 0, 639, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 588, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 590, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 630,
	640, 636, 638, 637, 634, 635, 633, 632, 631, 642,
	621, 622, 623, 624, 625, 0, 0, 0, 627, 0,
	607, 608, 0, 0, 0, 483, 581, 582, 583, 584,
	585, 591, 592, 596, 597, 605, 604, 603, 606, 609,
	611, 610, 612, 586, 587, 589, 593, 594, 595, 598,
	599, 602, 600, 601, 626, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 1563, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 0, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 1567, 0, 0, 0, 0,
	0, 0, 126, 0, 471, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 0, 0, 0, 207,
	363, 0, 1566, 0, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 491, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 495, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 0,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 1563, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 0, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	1567, 0, 0, 0, 0, 0, 0, 126, 0, 471,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 1561, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 0, 0, 0, 207, 363, 0, 1566, 0, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 491, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 495, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 483, 476, 477, 478, 479,
	481, 500, 501, 505, 506, 523, 522, 521, 524, 528,
	531, 530, 532, 482, 484, 492, 502, 503, 504, 508,
	509, 518, 514, 516, 0, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 1055, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 0, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 1059, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 1052, 1051, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 0, 0, 0, 207,
	363, 0, 0, 0, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 491, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 495, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 0,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 0, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 471,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 0, 0, 0, 207, 363, 0, 0, 0, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 491, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 495, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 483, 476, 477, 478, 479,
	481, 500, 501, 505, 506, 523, 522, 521, 524, 528,
	531, 530, 532, 482, 484, 492, 502, 503, 504, 508,
	509, 518, 514, 516, 0, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 466, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 216, 1875, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 0, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 471, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 0, 0, 0, 207,
	363, 0, 0, 0, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 491, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 495, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 0,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 0, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 471,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 0, 0, 0, 207, 363, 0, 0, 0, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 491, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 495, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 483, 476, 477, 478, 479,
	481, 500, 501, 505, 506, 523, 522, 521, 524, 528,
	531, 530, 532, 482, 484, 492, 502, 503, 504, 508,
	509, 518, 514, 516, 0, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 333, 0, 0,
	0, 0, 0, 510, 512, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 216, 0, 0, 166, 224, 222, 0,
	0, 0, 266, 332, 0, 0, 0, 0, 219, 0,
	0, 529, 320, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 1059, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	270, 287, 308, 0, 278, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 144, 0, 0, 0, 207,
	363, 0, 0, 0, 280, 0, 327, 195, 217, 149,
	128, 142, 160, 194, 255, 0, 302, 491, 473, 0,
	0, 0, 167, 0, 294, 263, 351, 495, 0, 293,
	220, 341, 0, 0, 350, 0, 520, 360, 365, 486,
	0, 480, 317, 179, 175, 178, 0, 133, 494, 277,
	172, 212, 0, 0, 0, 164, 0, 0, 0, 316,
	339, 151, 334, 242, 248, 161, 163, 162, 143, 311,
	338, 156, 165, 321, 298, 328, 171, 0, 0, 0,
	0, 0, 498, 496, 0, 0, 356, 499, 305, 304,
	0, 202, 0, 507, 474, 286, 511, 208, 132, 330,
	368, 150, 214, 335, 472, 189, 254, 169, 264, 265,
	186, 130, 282, 236, 237, 235, 238, 193, 489, 513,
	0, 284, 307, 337, 152, 324, 487, 488, 490, 517,
	296, 519, 525, 0, 227, 182, 185, 196, 203, 0,
	291, 325, 357, 0, 145, 134, 331, 349, 157, 306,
	309, 366, 292, 137, 347, 326, 240, 209, 210, 135,
	0, 136, 289, 176, 192, 170, 258, 0, 191, 279,
	344, 345, 168, 369, 146, 359, 139, 147, 358, 251,
	0, 250, 361, 340, 348, 241, 229, 0, 138, 346,
	239, 228, 215, 184, 198, 275, 223, 276, 199, 246,
	245, 247, 225, 230, 0, 475, 0, 322, 354, 370,
	154, 0, 310, 336, 497, 283, 155, 190, 183, 274,
	249, 148, 201, 319, 213, 221, 288, 367, 262, 295,
	158, 353, 318, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	483, 476, 477, 478, 479, 481, 500, 501, 505, 506,
	523, 522, 521, 524, 528, 531, 530, 532, 482, 484,
	492, 502, 503, 504, 508, 509, 518, 514, 516, 0,
	131, 140, 218, 0, 285, 188, 355, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 181,
	187, 197, 200, 204, 205, 206, 211, 226, 231, 232,
	233, 234, 252, 253, 256, 257, 260, 261, 267, 268,
	269, 271, 272, 273, 281, 515, 290, 297, 299, 300,
	301, 303, 312, 313, 314, 315, 323, 329, 342, 343,
	362, 364, 333, 0, 0, 0, 0, 0, 510, 512,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 216, 0,
	0, 166, 224, 222, 0, 0, 0, 266, 332, 0,
	0, 0, 0, 219, 0, 0, 529, 320, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 270, 287, 308, 0, 278,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	144, 0, 0, 0, 207, 363, 0, 0, 0, 280,
	0, 327, 195, 217, 149, 128, 142, 160, 194, 255,
	0, 302, 491, 473, 0, 0, 0, 167, 0, 294,
	263, 351, 495, 0, 293, 220, 341, 0, 0, 350,
	0, 520, 360, 365, 486, 0, 480, 317, 179, 175,
	178, 0, 133, 494, 277, 172, 212, 0, 0, 0,
	164, 0, 0, 0, 316, 339, 151, 334, 242, 248,
	161, 163, 162, 143, 311, 338, 156, 165, 321, 298,
	328, 171, 0, 0, 0, 0, 0, 498, 496, 0,
	0, 356, 499, 305, 304, 0, 202, 0, 507, 474,
	286, 511, 208, 132, 330, 368, 150, 214, 335, 472,
	189, 254, 169, 264, 265, 186, 130, 282, 236, 237,
	235, 238, 193, 489, 513, 0, 284, 307, 337, 152,
	324, 487, 488, 490, 517, 296, 519, 525, 0, 227,
	182, 185, 196, 203, 0, 291, 325, 357, 0, 145,
	134, 331, 349, 157, 306, 309, 366, 292, 137, 347,
	326, 240, 209, 210, 135, 0, 136, 289, 176, 192,
	170, 258, 0, 191, 279, 344, 345, 168, 369, 146,
	359, 139, 147, 358, 251, 0, 250, 361, 340, 348,
	241, 229, 0, 138, 346, 239, 228, 215, 184, 198,
	275, 223, 276, 199, 246, 245, 247, 225, 230, 0,
	475, 0, 322, 354, 370, 154, 0, 310, 336, 497,
	283, 155, 190, 183, 274, 249, 148, 201, 319, 213,
	221, 288, 367, 262, 295, 158, 353, 318, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 483, 476, 477, 478, 479,
	481, 500, 501, 505, 506, 523, 522, 521, 524, 528,
	531, 530, 532, 482, 484, 492, 502, 503, 504, 508,
	509, 518, 514, 516, 0, 131, 140, 218, 0, 285,
	188, 355, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 181, 187, 197, 200, 204, 205,
	206, 211, 226, 231, 232, 233, 234, 252, 253, 256,
	257, 260, 261, 267, 268, 269, 271, 272, 273, 281,
	515, 290, 297, 299, 300, 301, 303, 312, 313, 314,
	315, 323, 329, 342, 343, 362, 364, 440, 333, 434,
	445, 428, 0, 510, 512, 0, 0, 0, 0, 259,
	0, 0, 451, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 435, 0, 216, 0, 0, 166, 224, 222,
	0, 0, 0, 266, 332, 0, 0, 0, 0, 219,
	0, 0, 0, 320, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 0, 448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 270, 287, 308, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	426, 429, 0, 0, 0, 244, 144, 0, 0, 433,
	207, 363, 0, 0, 0, 280, 0, 327, 195, 217,
	149, 128, 142, 160, 194, 255, 437, 302, 0, 0,
	441, 0, 0, 167, 0, 294, 263, 351, 0, 0,
	293, 220, 341, 0, 444, 350, 0, 0, 360, 365,
	0, 0, 0, 317, 179, 175, 178, 0, 133, 0,
	277, 172, 212, 0, 0, 0, 164, 0, 0, 0,
	316, 339, 151, 334, 242, 248, 161, 163, 162, 143,
	311, 338, 156, 165, 321, 298, 328, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 305,
	304, 0, 202, 0, 0, 0, 286, 0, 208, 132,
	330, 368, 150, 214, 335, 0, 189, 254, 169, 264,
	265, 186, 130, 282, 236, 237, 235, 238, 193, 0,
	0, 0, 454, 307, 337, 152, 324, 430, 431, 432,
	438, 439, 442, 443, 446, 227, 182, 185, 196, 203,
	0, 291, 325, 357, 0, 145, 134, 331, 349, 157,
	306, 309, 366, 292, 137, 347, 326, 240, 209, 210,
	135, 0, 136, 289, 176, 192, 170, 258, 0, 191,
	279, 344, 345, 168, 369, 146, 359, 139, 147, 358,
	251, 0, 250, 361, 340, 348, 241, 229, 0, 138,
	346, 239, 228, 215, 184, 198, 275, 223, 276, 199,
	246, 245, 247, 225, 230, 0, 0, 0, 322, 354,
	370, 154, 0, 310, 336, 0, 283, 155, 190, 183,
	274, 249, 148, 201, 319, 213, 221, 288, 367, 262,
	295, 158, 353, 318, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 218, 0, 285, 188, 355, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	181, 187, 197, 200, 204, 205, 206, 211, 226, 231,
	232, 233, 234, 252, 253, 256, 257, 260, 261, 267,
	268, 269, 271, 272, 273, 281, 436, 290, 297, 299,
	300, 301, 303, 312, 313, 314, 315, 323, 329, 342,
	343, 362, 364, 440, 333, 434, 445, 428, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 435, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 0, 219, 0, 0, 0, 320,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 427, 426, 429, 0, 0,
	0, 244, 144, 0, 0, 433, 207, 363, 0, 0,
	0, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 437, 302, 0, 0, 441, 0, 0, 167,
	0, 294, 263, 351, 0, 0, 293, 220, 341, 0,
	444, 350, 0, 0, 360, 365, 0, 0, 0, 317,
	179, 175, 178, 0, 133, 0, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 305, 304, 0, 202, 0,
	0, 0, 286, 0, 208, 132, 330, 368, 150, 214,
	335, 0, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 0, 0, 0, 423, 307,
	337, 152, 324, 430, 431, 432, 438, 439, 442, 443,
	446, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 0, 0, 322, 354, 370, 154, 0, 310,
	336, 0, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 436, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 216, 0, 0, 166, 224,
	222, 0, 0, 0, 266, 332, 0, 0, 0, 0,
	219, 0, 0, 0, 320, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 270, 287, 308, 0, 278, 0, 1069, 1068,
	1078, 1079, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1070,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 144, 0, 0,
	0, 207, 363, 0, 0, 0, 280, 0, 327, 195,
	217, 149, 128, 142, 160, 194, 255, 0, 302, 0,
	0, 0, 0, 0, 167, 0, 294, 263, 351, 0,
	0, 293, 220, 341, 0, 0, 350, 0, 0, 360,
	365, 0, 0, 0, 317, 179, 175, 178, 0, 133,
	0, 277, 172, 212, 0, 0, 0, 164, 0, 0,
	0, 316, 339, 151, 334, 242, 248, 161, 163, 162,
	143, 311, 338, 156, 165, 321, 298, 328, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	305, 304, 0, 202, 0, 0, 0, 286, 0, 208,
	132, 330, 368, 150, 214, 335, 0, 189, 254, 169,
	264, 265, 186, 130, 282, 236, 237, 235, 238, 193,
	0, 0, 0, 284, 307, 337, 152, 324, 0, 0,
	0, 0, 296, 0, 0, 0, 227, 182, 185, 196,
	203, 0, 291, 325, 357, 0, 145, 134, 331, 349,
	157, 306, 309, 366, 292, 137, 347, 326, 240, 209,
	210, 135, 0, 136, 289, 176, 192, 170, 258, 0,
	191, 279, 344, 345, 168, 369, 146, 359, 139, 147,
	358, 251, 0, 250, 361, 340, 348, 241, 229, 0,
	138, 346, 239, 228, 215, 184, 198, 275, 223, 276,
	199, 246, 245, 247, 225, 230, 0, 0, 0, 322,
	354, 370, 154, 0, 310, 336, 0, 283, 155, 190,
	183, 274, 249, 148, 201, 319, 213, 221, 288, 367,
	262, 295, 158, 353, 318, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 218, 0, 285, 188, 355, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 181, 187, 197, 200, 204, 205, 206, 211, 226,
	231, 232, 233, 234, 252, 253, 256, 257, 260, 261,
	267, 268, 269, 271, 272, 273, 281, 0, 290, 297,
	299, 300, 301, 303, 312, 313, 314, 315, 323, 329,
	342, 343, 362, 364, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 2789, 0,
	0, 0, 0, 0, 0, 177, 2787, 0, 0, 0,
	216, 0, 0, 166, 224, 222, 0, 0, 0, 266,
	332, 0, 0, 0, 0, 219, 0, 0, 0, 320,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	0, 448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 270, 287, 308,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 144, 0, 0, 0, 207, 363, 0, 0,
	0, 280, 0, 327, 195, 217, 149, 128, 142, 160,
	194, 255, 0, 302, 0, 0, 0, 0, 0, 167,
	0, 294, 263, 351, 0, 0, 293, 220, 341, 0,
	0, 350, 0, 0, 360, 365, 0, 0, 0, 317,
	179, 175, 178, 0, 133, 0, 277, 172, 212, 0,
	0, 0, 164, 0, 0, 0, 316, 339, 151, 334,
	242, 248, 161, 163, 162, 143, 311, 338, 156, 165,
	321, 298, 328, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 305, 304, 0, 202, 0,
	2788, 0, 286, 0, 208, 132, 330, 368, 150, 214,
	335, 0, 189, 254, 169, 264, 265, 186, 130, 282,
	236, 237, 235, 238, 193, 0, 0, 0, 284, 307,
	337, 152, 324, 0, 0, 0, 0, 296, 0, 0,
	0, 227, 182, 185, 196, 203, 0, 291, 325, 357,
	0, 145, 134, 331, 349, 157, 306, 309, 366, 292,
	137, 347, 326, 240, 209, 210, 135, 0, 136, 289,
	176, 192, 170, 258, 0, 191, 279, 344, 345, 168,
	369, 146, 359, 139, 147, 358, 251, 0, 250, 361,
	340, 348, 241, 229, 0, 138, 346, 239, 228, 215,
	184, 198, 275, 223, 276, 199, 246, 245, 247, 225,
	230, 0, 0, 0, 322, 354, 370, 154, 0, 310,
	336, 0, 283, 155, 190, 183, 274, 249, 148, 201,
	319, 213, 221, 288, 367, 262, 295, 158, 353, 318,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 218,
	0, 285, 188, 355, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 181, 187, 197, 200,
	204, 205, 206, 211, 226, 231, 232, 233, 234, 252,
	253, 256, 257, 260, 261, 267, 268, 269, 271, 272,
	273, 281, 0, 290, 297, 299, 300, 301, 303, 312,
	313, 314, 315, 323, 329, 342, 343, 362, 364, 36,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	1558, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 79, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 1207, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	2242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	123, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	147, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 225, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 249, 148, 201, 319, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 272, 273, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 349, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	349, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	665, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 661, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 666, 664, 655, 656, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 662, 663, 281, 0, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 216, 0, 0, 166, 224, 222, 0, 0, 0,
	266, 332, 0, 0, 0, 0, 219, 0, 0, 0,
	320, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 270, 287,
	308, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 144, 0, 0, 0, 207, 363, 0,
	0, 0, 280, 0, 327, 195, 217, 149, 128, 142,
	160, 194, 255, 0, 302, 0, 0, 0, 0, 0,
	167, 0, 294, 263, 351, 0, 0, 293, 220, 341,
	0, 0, 350, 0, 0, 360, 365, 0, 0, 0,
	317, 179, 175, 178, 0, 133, 0, 277, 172, 212,
	0, 0, 0, 164, 0, 0, 0, 316, 339, 151,
	334, 242, 248, 161, 163, 162, 143, 311, 338, 156,
	165, 321, 298, 328, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 305, 304, 0, 202,
	0, 0, 0, 286, 0, 208, 132, 330, 368, 150,
	214, 335, 0, 189, 254, 169, 264, 265, 186, 130,
	282, 236, 237, 235, 238, 193, 0, 0, 0, 284,
	307, 337, 152, 324, 0, 0, 0, 0, 296, 0,
	0, 0, 227, 182, 185, 196, 203, 0, 291, 325,
	357, 0, 145, 134, 331, 1201, 157, 306, 309, 366,
	292, 137, 347, 326, 240, 209, 210, 135, 0, 136,
	289, 176, 192, 170, 258, 0, 191, 279, 344, 345,
	168, 369, 146, 359, 139, 147, 358, 251, 0, 250,
	361, 340, 348, 241, 229, 0, 138, 346, 239, 228,
	215, 184, 198, 275, 223, 276, 199, 246, 245, 247,
	225, 230, 0, 0, 0, 322, 354, 370, 154, 0,
	310, 336, 0, 283, 155, 190, 183, 274, 249, 148,
	201, 319, 213, 221, 288, 367, 262, 295, 158, 353,
	318, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	218, 0, 285, 188, 355, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 181, 187, 197,
	200, 204, 205, 206, 211, 226, 231, 232, 233, 234,
	252, 253, 256, 257, 260, 261, 267, 268, 269, 271,
	272, 273, 281, 0, 290, 297, 299, 300, 301, 303,
	312, 313, 314, 315, 323, 329, 342, 343, 362, 364,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 216, 0, 0, 166,
	224, 222, 0, 0, 0, 266, 332, 0, 0, 0,
	0, 219, 0, 0, 0, 320, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 270, 287, 308, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 144, 0,
	0, 0, 207, 363, 0, 0, 0, 280, 0, 327,
	195, 217, 149, 128, 142, 160, 194, 255, 0, 302,
	0, 0, 0, 0, 0, 167, 0, 294, 263, 351,
	0, 0, 293, 220, 341, 0, 0, 350, 0, 0,
	360, 365, 0, 0, 0, 317, 179, 175, 178, 0,
	133, 0, 277, 172, 212, 0, 0, 0, 164, 0,
	0, 0, 316, 339, 151, 334, 242, 248, 161, 163,
	162, 143, 311, 338, 156, 165, 321, 298, 328, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 305, 304, 0, 202, 0, 0, 0, 286, 0,
	208, 132, 330, 368, 150, 214, 335, 0, 189, 254,
	169, 264, 265, 186, 130, 282, 236, 237, 235, 238,
	193, 0, 0, 0, 284, 307, 337, 152, 324, 0,
	0, 0, 0, 296, 0, 0, 0, 227, 182, 185,
	196, 203, 0, 291, 325, 357, 0, 145, 134, 331,
	652, 157, 306, 309, 366, 292, 137, 347, 326, 240,
	209, 210, 135, 0, 136, 289, 176, 192, 170, 258,
	0, 191, 279, 344, 345, 168, 369, 146, 359, 139,
	665, 358, 251, 0, 250, 361, 340, 348, 241, 229,
	0, 138, 346, 239, 228, 215, 184, 198, 275, 223,
	276, 199, 246, 245, 247, 661, 230, 0, 0, 0,
	322, 354, 370, 154, 0, 310, 336, 0, 283, 155,
	190, 183, 274, 666, 664, 655, 656, 213, 221, 288,
	367, 262, 295, 158, 353, 318, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 218, 0, 285, 188, 355,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 181, 187, 197, 200, 204, 205, 206, 211,
	226, 231, 232, 233, 234, 252, 253, 256, 257, 260,
	261, 267, 268, 269, 271, 662, 663, 281, 529, 290,
	297, 299, 300, 301, 303, 312, 313, 314, 315, 323,
	329, 342, 343, 362, 364, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 491, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 2257, 0, 0, 0, 0,
	0, 0, 0, 520, 533, 0, 486, 0, 480, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	507, 474, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 513, 0, 0, 0,
	491, 473, 0, 487, 488, 490, 517, 0, 519, 525,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	0, 0, 486, 0, 480, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 496, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 507, 474, 0, 511,
	0, 0, 475, 0, 0, 0, 0, 472, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 513, 0, 0, 0, 0, 0, 0, 487,
	488, 490, 517, 0, 519, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 483, 476, 477,
	478, 479, 481, 500, 501, 505, 506, 523, 522, 521,
	524, 528, 531, 530, 532, 482, 484, 492, 502, 503,
	504, 508, 509, 518, 514, 516, 0, 0, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 475, 2266,
	0, 0, 0, 0, 0, 0, 0, 497, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 510, 512, 0, 526, 527,
	0, 0, 0, 483, 476, 477, 478, 479, 481, 500,
	501, 505, 506, 523, 522, 521, 524, 528, 531, 530,
	532, 482, 484, 492, 502, 503, 504, 508, 509, 518,
	514, 516, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 2264, 0, 0, 0, 0,
	0, 0, 0, 520, 533, 0, 486, 0, 480, 0,
	0, 0, 0, 0, 0, 494, 0, 0, 515, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 510, 512, 0, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 0, 499, 0, 0, 0, 0, 0,
	507, 474, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 513, 0, 0, 0,
	491, 473, 0, 487, 488, 490, 517, 0, 519, 525,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	0, 0, 486, 0, 480, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 496, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 507, 474, 0, 511,
	0, 0, 475, 0, 0, 0, 0, 472, 0, 0,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 513, 0, 0, 0, 0, 0, 0, 487,
	488, 490, 517, 0, 519, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 483, 476, 477,
	478, 479, 481, 500, 501, 505, 506, 523, 522, 521,
	524, 528, 531, 530, 532, 482, 484, 492, 502, 503,
	504, 508, 509, 518, 514, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 36, 0, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	0, 0, 0, 78, 0, 510, 512, 41, 526, 527,
	0, 0, 0, 483, 476, 477, 478, 479, 481, 500,
	501, 505, 506, 523, 522, 521, 524, 528, 531, 530,
	532, 482, 484, 492, 502, 503, 504, 508, 509, 518,
	514, 516, 0, 0, 0, 81, 36, 0, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 2683,
	41, 0, 0, 0, 2895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 510, 512, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2684, 0, 2683, 0, 0, 0, 0, 2889, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 36, 47, 72, 39, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 41, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2684, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 2685, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 81, 0, 47, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 36, 0, 72, 39, 40, 0, 2683, 0,
	0, 0, 0, 2875, 68, 0, 59, 0, 0, 0,
	0, 0, 78, 0, 0, 0, 41, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2685, 0, 0, 0,
	0, 0, 2686, 75, 0, 53, 54, 61, 0, 62,
	66, 0, 67, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 0, 0, 81, 2864, 0, 0, 0, 2684,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 49, 77, 76, 2683, 0,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2686, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 57,
	58, 73, 2685, 0, 0, 0, 0, 0, 0, 2684,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 49, 77, 76, 0, 0,
	0, 36, 47, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 59, 0, 0, 0, 0,
	79, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 2686, 75, 0, 53, 54, 61, 0, 62, 57,
	58, 0, 2685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 2683, 0, 0,
	0, 0, 2811, 68, 36, 0, 72, 39, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 2686, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 2684, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	2683, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	73, 2685, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 2684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 68, 0, 47, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2686, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2686, 75, 0, 53, 54, 61, 73,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79,
}

var yyPact = [...]int{
	3660, -1000, -317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1832, -1000, -1000, -1000, -1000,
	-1000, -1000, 915, 292, -1000, 296, 230, 29713, 603, 3097,
	30703, -1000, -1000, -1000, 212, 397, 30703, 450, 476, 1207,
	1700, 1206, 62, -45, -48, 132, 23277, 22781, 31, -1000,
	1885, 1887, -1000, -1000, 545, 67, -1000, -1000, -1000, 20305,
	209, -1000, -1000, 1806, 1830, 1588, -1000, 13375, 545, 545,
	29218, 32683, -1000, 1883, 30703, 11888, -1000, 582, 30703, -125,
	422, 422, 352, 422, 422, 602, -1000, 841, -1000, -1000,
	-1000, -1000, 30703, 26248, 534, 30208, 534, 534, 534, 534,
	534, 534, 534, 30703, -1000, 659, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30703, 1204, 1732, 900, 157, -1000, -1000, -1000, 922,
	-1000, 341, 337, 333, 335, 128, 901, 1803, -1000, 1460,
	1806, 1806, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 281,
	567, 253, 209, 838, 1762, 1730, 1729, 1127, 1728, 523,
	1725, 1521, -24, -1000, 1203, 30703, -1000, -1000, 1101, 1087,
	1540, 1380, 626, 1539, -1000, -1000, 386, 608, 1502, 442,
	1502, 1502, 1502, 1502, 1502, -49, 1502, 1502, 1502, 117,
	1502, 170, 1502, 1502, 1502, 1502, 1502, 1211, -1000, -1000,
	-1000, 406, 1329, 1397, 1538, 542, -1000, -1000, -1000, -1000,
	1514, 1781, 585, -1000, -94, 1435, 21295, -1000, 1460, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1218, 1721, 1034, 16345, 1634, -1000,
	-1000, 965, 1867, -1000, 19810, 648, -1000, 16345, 3080, 1460,
	-1000, -1000, 1460, -1000, -1000, -1000, 618, -1000, -1000, 18325,
	18325, 18325, 18325, 18325, 18325, 18325, 18325, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, -1000, -1000, 1460, -1000, 12880, 1460, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 16345, 1460,
	1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460, 1460,
	1460, 1460, 1460, 28723, 26743, 30703, 1434, 1430, -1000, -1000,
	645, 1447, -68, 32188, -1000, -1000, -1000, -1000, 31198, 25753,
	837, -1000, -1000, -1000, -1000, 1723, -1000, -1000, 644, -1000,
	1832, -1000, -1000, 1365, 400, -1000, 2798, 33117, -1000, -1000,
	-1000, 1519, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 30208, 1777, 571,
	1202, 896, 1200, 31198, 31198, 26248, 26248, 422, 1194, 1440,
	566, 1438, 562, 1209, 30703, 1751, 1536, 30703, 1190, 1189,
	31198, 31198, 26248, 26248, -1000, 11383, -1000, -1000, 900, -1000,
	1150, 16345, 422, 422, 30703, 30703, 30703, 30703, 30703, -1000,
	-1000, 900, 900, 900, 900, 857, 1866, 857, -1000, 857,
	-1000, -1000, 16345, -1000, 18325, 25258, 692, -1000, -1000, -1000,
	1187, 278, -1000, -1000, -1000, -1000, -1000, -1000, 1186, -1000,
	1703, 523, 523, -1000, 1146, 523, 1426, -1000, 817, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 523, -1000, 15850, -306, -1000, -1000, 1437, -1000, 302,
	-1000, -1000, 351, 351, 203, 26248, 26248, 26248, -1000, 1502,
	30208, -1000, 1502, 1502, 1502, -54, 1502, 1502, -1000, -1000,
	1502, -1000, -1000, -1000, -1000, -1000, 1502, -1000, -1000, -1000,
	1502, 1502, -1000, 1502, 1502, -1000, -1000, -1000, -1000, -1000,
	26248, 351, 195, 1436, 351, 26248, 26248, -1000, 101, 97,
	91, 87, -1000, -1000, -1000, -1000, 85, 83, -1000, -1000,
	1588, -1000, -1000, 209, -1000, -1000, 30703, -80, 21295, 1435,
	1775, 9868, -1000, -1000, -1000, 1878, 740, 1300, -1000, -1000,
	1429, -1000, 1033, 641, 1104, 1601, -1000, -1000, -1000, 30703,
	-1000, 16345, 16345, 1069, -1000, 21790, -1000, -1000, -1000, -1000,
	9363, 732, 18325, 1004, 934, 18325, 18325, 18325, 18325, 18325,
	18325, 18325, 18325, 18325, 18325, 18325, 18325, 18325, 18325, 18325,
	1085, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1185,
	-1000, 209, 1092, 1092, 681, 681, 681, 681, 681, 681,
	681, 23772, 1774, 14365, 14365, 14365, 1774, 1218, 1218, 14365,
	14365, 14365, 14365, 14365, 14365, 14365, 14365, 1774, 1774, 14365,
	1218, 1218, 1218, 1218, 14365, 14365, 14365, 14365, 30208, 30208,
	1774, 14365, 14365, 14365, 1774, 1218, 1363, 969, 12880, 14365,
	14365, 1218, 16345, 16345, 15355, 14860, 16840, 14365, 1774, 882,
	969, 31198, -1000, -1000, 17830, -1000, -1000, -1000, -1000, -1000,
	1218, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14365,
	14365, 14365, 14365, 735, 30703, -1000, 1333, 1467, -1000, -1000,
	-1000, 1765, 24763, -1000, 19315, -1000, 1460, 735, 1375, 26743,
	30703, -1000, -1000, 26743, 30703, 8858, 31693, 1417, -1000, -85,
	-82, -68, -1000, -1000, 678, -1000, -1000, -1000, 12384, -1000,
	10373, 1806, 1588, 6333, 10878, -1000, 33117, 1519, -1000, -36,
	-1000, -1000, -1000, 1475, -1000, 1475, 319, 10, 1475, 1475,
	1475, 1475, 1475, 11, 11, 11, 11, 19, -1000, -1000,
	-1000, -1000, -1000, 1516, 1515, -1000, 1475, 1475, 1475, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1493, 338,
	1486, 1486, 1486, 1486, 1486, 401, 401, -1000, 16345, 1360,
	-1000, 30703, 1737, 1750, 1737, 328, -1000, 640, 1508, -1000,
	636, 1350, -1000, 213, 1267, 30703, -1000, 30703, 30703, 26248,
	26248, 26248, 634, -1000, 30703, 1427, -1000, -1000, -1000, -1000,
	-1000, 1396, -1000, 1267, -1000, -1000, -1000, -1000, -1000, 969,
	1182, 1180, 1762, -1000, -1000, -1000, 883, -1000, -1000, -1000,
	-1000, 900, 30703, 30703, 30703, 1762, 900, 969, 836, 1524,
	1460, 1218, -1000, -1000, 1179, -1000, 18325, 1426, 1426, -1000,
	1426, 523, 1092, 1426, -1000, 1361, 1745, 1145, 30703, -1000,
	21295, -26, -1000, -107, 28228, -1000, -1000, -1000, 28228, -1000,
	117, 174, -1000, 561, -1000, 1324, -1000, -1000, -1000, -1000,
	1502, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28228, 150, 194, 28228, 1396, 1865, -1000, -1000, -1000, -1000,
	1802, -1000, 1774, 1218, 364, -1000, -1000, -1000, 1460, 1265,
	633, -1000, 1597, 1034, 1034, 16345, -1000, -1000, -1000, 10373,
	1786, -1000, 1615, 1614, 1554, -1000, -1000, 732, 997, -1000,
	-1000, 996, -1000, -1000, -1000, -1000, 631, 1460, -1000, 3667,
	-1000, -1000, -1000, -1000, 1004, 18325, 18325, 18325, 836, 3667,
	3744, 893, 804, 681, 878, 878, 676, 676, 676, 676,
	676, 847, 847, -1000, -1000, -1000, 1218, -1000, -1000, -1000,
	14365, 1318, -1000, -1000, 969, 630, 1318, 1318, 14365, -140,
	-140, 1318, 1218, 1318, 1318, 1318, 1318, 1218, 1318, 14365,
	14365, 1318, -140, -140, -140, -140, 1318, 1318, 1318, 1318,
	1423, 1422, 14365, 1318, 1318, 1318, 14365, -1000, 16345, -1000,
	1218, 1318, 1318, -1000, 999, 1028, 748, 1864, 1318, 741,
	1861, 1318, 2509, 18325, 18325, 18325, 1318, 14365, 891, -1000,
	16345, 1218, -1000, 3138, 1318, 1218, 1421, 1318, 1318, 211,
	1460, -1000, 10373, 26743, 26743, 26743, 26743, 26743, -1000, 1565,
	1561, -1000, 1552, 1551, 1582, 21295, 1322, 1218, 320, 24763,
	-1000, 1460, -1000, 20800, 650, 581, 577, 576, 14365, 1840,
	26743, 1278, -1000, 1278, -1000, 629, -1000, -1000, 31198, -68,
	-88, -1000, -1000, 1417, -1000, 1099, -1000, -1000, 969, -1000,
	628, 1721, 1774, 1404, 5828, -1000, -1000, -1000, -1000, 400,
	-1000, -1000, -1000, 1496, 4780, -1000, 1658, 677, 677, 675,
	1158, 1642, -1000, -1000, 156, -40, -1000, -1000, 1086, 11,
	11, 1475, 1475, 297, 1475, -1000, 11, -1000, -1000, -1000,
	678, 1719, 678, 678, 678, 678, 11, 1139, 1139, -1000,
	-1000, -1000, -1000, 1073, -1000, 1493, -1000, 1070, -1000, -1000,
	-1000, -1000, -1000, -1000, 1059, 1535, 30208, -1000, 1764, -1000,
	1737, -1000, -1000, -1000, 143, -1000, -1000, -1000, 1846, -1000,
	-1000, 30208, 638, 30208, 124, 26248, 201, 332, 210, -1000,
	558, -1000, 557, -1000, -1000, -1000, -1000, -1000, -1000, 30703,
	26248, -1000, -1000, -1000, 1840, 1178, 1176, -1000, -1000, -1000,
	857, 900, -1000, -1000, 18325, 26248, -1000, 329, -1000, 3667,
	-1000, -1000, -1000, 735, 584, -1000, -1000, -60, -1000, -1000,
	555, 627, 625, 554, -1000, 140, 26248, -1000, 30208, -1000,
	1859, 1858, 149, 1857, 26248, -1000, 72, 1601, -1000, 1402,
	-1000, 727, 619, 747, 408, 408, -1000, 776, 408, 1713,
	1708, 733, -1000, 219, -1000, 9868, 9868, 1595, -1000, -1000,
	-1000, 30703, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8353, 14365, -1000, 836, 3667, 3514, -1000, 18325, -1000,
	1318, 14365, -140, 7848, -140, -140, 1318, -1000, 27733, -1000,
	-1000, -140, -1000, -140, -140, -140, -140, -140, 1318, 1318,
	-140, -1000, -1000, -1000, -1000, -140, -140, -140, -140, 18325,
	18325, 1318, -140, -140, -140, 1218, 969, -1000, -1000, -1000,
	369, 1085, 369, 18325, 18325, -1000, 18325, 18325, -1000, -1000,
	18325, 3582, 3489, 3355, -204, 1374, 867, -1000, 16345, 1030,
	-1000, -1000, -1000, -1000, -1000, -1000, 1534, 10373, 1460, 6838,
	-1000, 30208, 1345, -1000, 816, 805, 1467, 1513, 1531, 1455,
	-1000, -1000, -1000, -1000, 1559, -1000, 1553, -1000, -1000, 1468,
	-1000, -1000, 1401, 1460, 30208, 18325, 650, -1000, 1460, 1460,
	1460, 1218, 1832, 16345, 1278, -1000, -1000, 683, -1000, -1000,
	-98, -100, -1000, -1000, -1000, 9868, -1000, 6333, -1000, 6333,
	-1000, 22285, 392, 1664, 393, -1000, 1158, -1000, -1000, 1158,
	-1000, 1158, -1000, -1000, -1000, 1488, -1000, 952, -1000, -1000,
	-1000, -1000, -1000, 1460, -309, 18325, 1877, -1000, 1647, -1000,
	1644, 1643, 1136, -1000, -1000, 1240, 678, 678, 11, -1000,
	-1000, 1475, -1000, 678, -1000, 778, -1000, -1000, -1000, -1000,
	678, 1314, -1000, 1308, 1399, -1000, 1281, 110, 30703, -1000,
	209, -1000, -1000, -1000, -1000, 1717, 776, 776, 776, 1530,
	-1000, -1000, -1000, -1000, 1232, 1398, -1000, 2798, 1175, 1173,
	1172, -1000, -216, 179, -1000, 26248, 166, 213, 441, 1171,
	30703, 26248, -1000, -1000, -1000, -1000, -1000, 1762, -1000, 3667,
	1267, -1000, -1000, 11, 30703, -1000, 26248, 639, 27238, 26248,
	147, 171, -1000, 26248, 26248, 1856, 26248, 1396, 1135, 1554,
	364, 4390, 1158, 679, -1000, -1000, 407, -1000, 4112, 1642,
	1170, 33613, 33507, 30208, 1632, 1626, 1166, 30703, 30208, -1000,
	-1000, 33223, 1162, 16345, -1000, 30208, -1000, -1000, 30208, 622,
	-1000, -1000, -1000, 1328, 13375, -1000, -1000, 1218, -1000, 18325,
	3667, -140, -1000, -1000, -1000, -1000, 616, -1000, -1000, -140,
	-1000, -1000, 1161, -1000, -1000, -1000, -1000, -1000, -1000, -140,
	-140, -1000, -1000, -1000, -1000, -1000, 2960, 2800, -140, -1000,
	-1000, -1000, -1000, 1218, 1475, 1475, -1000, 1475, 1486, -1000,
	1475, 41, 1475, 39, 1218, 1218, 3372, 3317, 3257, 2864,
	3138, 18325, 18325, 18325, 1460, -136, -1000, 969, 16345, -1000,
	1739, 1276, 1379, -1000, -1000, 13870, 1218, 1610, 1265, -1000,
	20305, 1263, -1000, 1832, 10373, 16345, 16345, -1000, -1000, 16345,
	1482, -1000, 16345, -1000, -1000, -1000, -1000, 30208, 303, -1000,
	16345, 1263, 1358, -1000, 30208, 30208, 30208, -1000, 1806, 969,
	-1000, -1000, -1000, -1000, 5828, -1000, 1260, -1000, 1475, 1475,
	1623, -1000, 677, -1000, -1000, -1000, -1000, 30208, -1000, 18325,
	1761, 3667, -32, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	678, -1000, -1000, -1000, -1000, -1000, 11, 1134, 11, 1068,
	-1000, 1067, -1000, -1000, -255, 1474, -1000, -1000, 776, 777,
	770, 1133, 30703, 125, 638, -1000, 2798, 2798, 2798, 142,
	134, -1000, 938, -1000, -1000, -1000, 1131, 1129, 1128, 1267,
	214, 910, 178, -1000, 1757, -1000, -1000, 900, -67, -1000,
	171, -1000, -1000, -1000, 171, -1000, -1000, 185, 1396, 1396,
	26248, 1396, -1000, -1000, -1000, 33223, 377, 2798, 2798, 1360,
	677, 1622, 393, -1000, -1000, -1000, -1000, -1000, -1000, 1160,
	-1000, 671, -1000, 553, 377, 33223, 969, 726, 1744, 9868,
	1838, 26743, -1000, -1000, -1000, 3667, -1000, 7343, -1000, 729,
	-1000, -1000, -1000, 18325, 18325, -1000, -1000, -1000, 317, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18325, 18325, 18325,
	18325, -1000, 3138, 3138, 3138, 18325, 1218, 1126, 969, 1620,
	-1000, 1460, -1000, -1000, 1460, 218, -1000, 30208, 1806, -1000,
	969, 969, 969, 30208, 969, 1258, -1000, 1460, 18820, -1000,
	21295, 1255, 1255, 1255, -1000, 635, 22285, 1743, 1743, -1000,
	1158, 1246, 3138, 1460, -1000, 1460, 1460, -1000, 678, -1000,
	678, 1228, 1224, -1000, 22285, -1000, 209, 766, -1000, -1000,
	-1000, -1000, -1000, 1800, -1000, 125, -1000, 1125, 265, 241,
	-1000, 263, 259, 252, 244, 237, -1000, -1000, -1000, -1000,
	336, 142, -1000, -37, 1066, 831, 1707, 134, -1000, 1056,
	1053, 1039, 1016, 206, -1000, -1000, -1000, -1000, 205, 213,
	-1000, 438, 1124, -1000, 1692, 1689, 1759, 1759, 146, 1396,
	1342, 1222, -1000, -1000, 1159, -1000, -1000, 1470, 1158, 1469,
	-1000, 1157, -1000, -1000, 30208, -1000, 377, 1736, 1735, 1460,
	-1000, 1834, 1823, 1278, 13375, -1000, -1000, 1832, 1822, 3138,
	3138, -1000, -1000, 3138, 3138, 3138, 3138, -1000, -1000, -1000,
	130, -1000, -1000, 1875, -1000, 1379, 1460, -1000, 209, -1000,
	-1000, 1243, -1000, 30208, -1000, -1000, 650, -1000, -1000, -1000,
	635, -1000, 1156, 776, 1123, -1000, -1000, -1000, -1000, 373,
	-312, 18325, -1000, -1000, -1000, -1000, 1239, -1000, -1000, -1000,
	279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1699, 1696,
	276, -1000, 1121, 1118, -1000, 415, 1111, 663, -166, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	427, 1154, -1000, 177, -1000, -1000, 416, 1674, 1676, 1819,
	-1000, 26248, -1000, -1000, 26743, -1000, -1000, 156, 156, 22285,
	1360, 22285, -1000, -1000, -1000, 18325, -1000, 707, -144, 16345,
	16345, 1838, -1000, 780, 16345, -1000, -1000, -1000, -1000, -1000,
	-1000, 1218, 208, -225, 10373, 1379, 1218, -1000, -1000, -1000,
	-1000, -1000, 995, -1000, 30703, -1000, -1000, -1000, 3138, 635,
	-1000, 301, 34498, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 994, -1000, -1000, 1081, 404, 172, -1000, 1758, -1000,
	1468, 957, 1689, 1817, 1686, 1683, -1000, 1115, -220, 1278,
	1237, 1466, 1235, 3667, 1231, -1000, 30208, -1000, 30208, -1000,
	969, 1368, -1000, 969, 1834, -1000, 1218, 236, 236, 1367,
	-1000, 1574, -207, -237, 1359, -1000, -1000, 1464, -312, -1000,
	635, 291, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16345, 16345, 5323, 34498, 159, -1000, 152,
	-1000, -1000, -1000, 1114, -1000, 1691, -1000, 1107, -1000, 1811,
	1809, -1000, 198, 1838, 635, 22285, 635, -1000, 707, 1607,
	1347, -1000, 1753, 16345, -144, -1000, -1000, 167, -1000, 796,
	282, 738, -1000, 1092, -1000, -1000, 1570, -1000, 30208, -1000,
	-1000, 1153, 1113, -1000, 1001, 988, 235, 215, 3241, -1000,
	-1000, -1000, -1000, -318, -1000, -1000, -1000, -1000, -1000, -1000,
	1106, 1029, 24267, 1834, -1000, 1227, -1000, -1000, 349, 30208,
	1460, -1000, -1000, 905, -1000, -1000, -1000, -1000, -1000, 30208,
	-223, 1217, -1000, -1000, -1000, 936, -1000, 16345, 34498, 1794,
	1792, 1787, 1734, 9868, 34405, -1000, -1000, -1000, -1000, 135,
	1267, -144, 635, 306, -1000, -1000, 167, -1000, -228, 1529,
	275, 898, 34498, -1000, 973, -319, 449, 209, 465, 18325,
	-1000, -1000, -1000, 26248, -1000, -1000, 1460, -1000, -240, 1528,
	1527, 1852, -1000, -1000, -1000, -1000, -1000, -1000, 34498, -1000,
	-321, 34498, 4609, -1000, -1000, -1000, 34236, -1000, -1000, -1000,
	-1000, 220, -1000, -1000, 3667, 1267, 17335, -1000, -1000, 1874,
	-1000, 1872, 655, 655, -1000, -322, 34156, -323, 419, 34498,
	846, -1000, 16345, -1000, 465, -1000, 3138, 1218, -1000, -1000,
	-1000, 387, 1061, -1000, 34050, 887, 34498, -1000, -326, 418,
	34498, -1000, 949, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33987, -1000, -327, 34498, 412, 4999, -328, -1000, 411,
	34498, -1000,
}

var yyPgo = [...]int{
	0, 2266, 2265, 38, 2264, 198, 2262, 2257, 2256, 19,
	17, 13, 23, 2255, 2020, 2014, 2010, 2004, 1992, 2254,
	7, 2247, 2246, 1990, 2245, 2243, 1988, 1983, 1981, 1973,
	2242, 2239, 2238, 1969, 1967, 1955, 10, 2237, 22, 2236,
	4, 150, 175, 2233, 2, 2231, 2230, 12, 2227, 2223,
	1949, 2221, 2220, 2219, 102, 2216, 1943, 1939, 2207, 1930,
	1913, 2206, 2203, 1911, 1905, 1899, 2202, 190, 2201, 2200,
	2198, 146, 100, 163, 2193, 2189, 2188, 110, 83, 1926,
	121, 57, 111, 1172, 2187, 33, 47, 203, 2185, 172,
	2183, 161, 2182, 162, 2181, 144, 154, 106, 2180, 2179,
	174, 2174, 2173, 2172, 139, 2171, 2170, 171, 2127, 2168,
	2167, 157, 2166, 75, 173, 61, 48, 2165, 2164, 2162,
	2161, 2160, 32, 384, 2159, 103, 160, 2157, 2156, 86,
	2155, 2151, 177, 2150, 2147, 2143, 143, 45, 2142, 2141,
	49, 2139, 55, 79, 2138, 94, 2137, 151, 2136, 2135,
	37, 26, 2134, 62, 2133, 67, 2131, 156, 348, 1149,
	2130, 29, 28, 25, 2124, 41, 15, 3, 44, 27,
	64, 73, 141, 107, 2122, 35, 43, 126, 104, 95,
	42, 2117, 166, 2111, 93, 178, 142, 133, 168, 2110,
	2108, 2107, 1047, 2105, 136, 80, 2104, 92, 978, 170,
	115, 2103, 97, 2097, 2096, 2095, 2094, 2093, 91, 114,
	2092, 2091, 153, 21, 302, 1494, 52, 167, 2090, 54,
	2087, 2086, 2079, 2880, 132, 108, 113, 2076, 109, 31,
	51, 2075, 2074, 2073, 2072, 2071, 2069, 851, 2068, 2066,
	2065, 2062, 124, 181, 2061, 138, 130, 118, 2057, 155,
	36, 2056, 2054, 140, 98, 2053, 2052, 2051, 2050, 131,
	87, 159, 2049, 122, 123, 210, 2048, 90, 2047, 2046,
	65, 50, 2045, 2043, 2042, 105, 96, 2041, 68, 34,
	46, 74, 11, 2040, 2039, 82, 129, 2037, 30, 2033,
	8, 6, 5, 2027, 2025, 2024, 2023, 2022, 2016, 2008,
	85, 2006, 2000, 63, 1998, 1994, 1986, 40, 1978, 1976,
	1971, 149, 127, 66, 165, 99, 16, 1964, 1962, 9,
	1960, 128, 1958, 56, 1951, 59, 1941, 1936, 60, 1927,
	1925, 58, 1922, 1920, 169, 1535, 426, 1918, 158, 164,
	53, 125, 1915, 1903, 0, 147, 176, 152, 1897, 1895,
}

var yyR1 = [...]int{
	0, 343, 343, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 93,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 346, 346, 102, 102, 100, 100, 101,
	101, 177, 177, 12, 12, 12, 182, 182, 187, 187,
	187, 190, 190, 190, 190, 167, 168, 169, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	317, 317, 326, 326, 326, 327, 327, 325, 325, 325,
	325, 325, 329, 329, 330, 330, 328, 328, 328, 328,
	332, 332, 333, 333, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 320, 320,
	320, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 335, 335, 336, 336, 337, 337, 338, 338,
	338, 338, 339, 339, 339, 339, 339, 340, 340, 340,
	340, 340, 340, 340, 341, 341, 342, 342, 2, 298,
	298, 299, 299, 300, 300, 300, 300, 301, 301, 302,
	302, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 24, 211, 211, 319, 319, 319, 313, 313, 313,
	315, 315, 314, 314, 314, 316, 316, 321, 321, 321,
	321, 321, 323, 323, 323, 323, 323, 323, 324, 324,
	324, 322, 322, 48, 48, 49, 49, 49, 156, 156,
	156, 13, 13, 13, 13, 13, 19, 21, 21, 37,
	37, 38, 22, 22, 22, 22, 39, 39, 40, 25,
	25, 25, 25, 25, 25, 46, 46, 46, 45, 45,
	44, 44, 44, 44, 44, 44, 23, 23, 23, 23,
	47, 47, 42, 42, 41, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 26, 26, 26,
	26, 26, 26, 18, 297, 297, 297, 36, 36, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 52,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 260,
	260, 261, 250, 250, 250, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 229, 229, 229, 229, 233,
	233, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 232, 232, 232, 232, 232, 232, 232, 232, 234,
	234, 234, 234, 234, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 236,
	236, 236, 236, 236, 236, 236, 236, 259, 259, 237,
	237, 253, 253, 254, 254, 254, 251, 251, 252, 252,
	240, 241, 255, 242, 242, 242, 243, 243, 243, 244,
	244, 249, 249, 248, 248, 248, 248, 248, 248, 245,
	245, 245, 245, 246, 246, 247, 258, 258, 258, 258,
	258, 238, 35, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 284, 284, 204, 204, 205,
	205, 262, 262, 282, 282, 281, 281, 280, 280, 280,
	271, 271, 277, 277, 277, 277, 277, 277, 277, 277,
	266, 266, 266, 265, 265, 267, 267, 270, 270, 279,
	279, 278, 278, 263, 263, 263, 285, 285, 285, 285,
	285, 264, 264, 264, 264, 286, 268, 268, 269, 269,
	269, 291, 292, 290, 290, 290, 290, 290, 119, 119,
	119, 274, 274, 274, 275, 275, 275, 276, 276, 276,
	295, 295, 294, 294, 50, 51, 55, 55, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 155, 155, 155, 209, 209, 289,
	287, 287, 288, 288, 15, 15, 53, 53, 318, 318,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 293,
	293, 293, 17, 17, 56, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	84, 196, 196, 195, 195, 194, 194, 194, 197, 197,
	197, 227, 227, 227, 58, 58, 62, 62, 65, 65,
	65, 63, 64, 27, 28, 28, 28, 28, 29, 210,
	210, 60, 60, 61, 61, 61, 61, 76, 76, 348,
	348, 59, 349, 67, 68, 68, 69, 69, 69, 200,
	200, 73, 73, 73, 71, 71, 71, 72, 72, 78,
	78, 82, 82, 82, 82, 81, 81, 81, 81, 158,
	158, 163, 220, 220, 139, 139, 159, 159, 164, 164,
	164, 165, 165, 166, 166, 166, 166, 166, 161, 161,
	160, 160, 162, 127, 127, 218, 218, 218, 217, 217,
	217, 217, 86, 86, 89, 89, 91, 91, 91, 91,
	91, 94, 141, 141, 112, 112, 113, 113, 113, 113,
	113, 125, 125, 176, 176, 175, 175, 178, 178, 90,
	92, 92, 92, 92, 97, 97, 98, 98, 99, 99,
	208, 208, 225, 225, 225, 103, 103, 103, 105, 104,
	104, 104, 104, 106, 106, 107, 107, 109, 110, 110,
	108, 108, 114, 114, 111, 115, 115, 115, 115, 116,
	116, 83, 83, 83, 83, 83, 83, 83, 193, 193,
	118, 118, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 135, 135, 135, 135, 135, 135, 120, 120,
	120, 120, 120, 120, 120, 77, 77, 136, 136, 136,
	96, 95, 95, 80, 80, 79, 79, 137, 137, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 130, 130, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 347, 347, 132, 131, 131, 131, 131, 131,
	131, 74, 74, 74, 74, 74, 226, 226, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 148, 148, 75, 75, 146, 146, 147, 149, 149,
	145, 145, 145, 122, 122, 122, 122, 122, 122, 122,
	122, 124, 124, 124, 150, 150, 138, 138, 85, 151,
	151, 152, 153, 153, 154, 154, 157, 170, 170, 170,
	171, 171, 171, 171, 126, 126, 172, 172, 172, 121,
	121, 121, 121, 121, 121, 121, 174, 174, 173, 173,
	173, 173, 179, 179, 140, 140, 143, 143, 142, 144,
	180, 180, 184, 184, 181, 181, 185, 185, 185, 185,
	188, 188, 189, 189, 189, 186, 186, 186, 183, 183,
	183, 222, 222, 222, 191, 191, 201, 201, 198, 198,
	199, 199, 192, 192, 239, 239, 207, 207, 206, 206,
	206, 202, 202, 202, 203, 203, 219, 219, 215, 215,
	221, 221, 216, 216, 223, 223, 224, 224, 296, 296,
	256, 256, 306, 306, 257, 257, 307, 307, 309, 309,
	304, 304, 305, 305, 308, 308, 30, 310, 310, 311,
	311, 312, 312, 312, 312, 31, 32, 32, 32, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 344, 345,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 8, 10, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 0, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 0, 1, 1, 0, 2, 3, 2, 2,
	2, 2, 2, 6, 8, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	2, 3, 1, 0, 3, 3, 0, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 4, 4, 4, 4, 4, 2, 1, 2, 1,
	2, 2, 3, 2, 2, 2, 2, 1, 1, 1,
	1, 3, 2, 1, 1, 0, 3, 1, 1, 0,
	1, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 2, 4, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 0, 2, 1, 5, 1, 3, 5, 4,
	3, 5, 3, 8, 10, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 8, 2, 2, 0, 1, 2, 0, 1, 7,
	1, 3, 8, 8, 3, 3, 3, 5, 3, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 2, 2, 2, 6, 2, 4,
	4, 4, 5, 8, 6, 3, 5, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 1, 1, 2, 1, 1, 1, 2, 4,
	4, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	2, 6, 0, 1, 0, 3, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 0, 2,
	1, 3, 3, 1, 3, 0, 1, 2, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	1, 2, 2, 4, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -343, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 295, -65, 298, 299, -348, -210, 223, 224, 20,
	37, 300, 302, 31, 32, 190, 240, 242, 267, -5,
	-88, -6, 8, 394, 139, 296, 171, 170, 26, 443,
	-344, 68, 510, -153, 15, -67, -349, -67, -67, -67,
	-67, -67, -272, -208, 106, 68, 23, -203, 150, 87,
	385, 146, -211, 236, 238, -201, -202, 200, 210, 44,
	157, 156, 147, 236, 147, 148, 150, 385, 146, 183,
	182, 236, 238, 147, -108, -223, 72, -213, 160, 454,
	261, 440, 248, 197, 295, 309, 311, 303, 338, 326,
	441, 455, 161, 218, 145, 294, 324, 327, 371, 159,
	251, 211, 274, 456, 360, 366, 221, 298, 380, 457,
	162, 215, 217, 216, 205, 222, 36, 172, 322, 257,
	315, 226, 200, 458, 448, 194, 313, 28, 195, 193,
	383, 459, 285, 368, 343, 286, 260, 460, 445, 255,
	367, 318, 314, 267, 163, 157, 287, 461, 344, 348,
	462, 372, 241, 288, 463, 464, 465, 149, 247, 307,
	308, 466, 201, 374, 252, 342, 33, 158, 442, 48,
	180, 375, 38, 346, 37, 352, 467, 284, 341, 336,
	353, 468, 469, 470, 471, 265, 263, 264, 266, 340,
	306, 335, 213, 53, 144, 350, 349, 351, 214, 370,
	331, 329, 472, 473, 256, 164, 474, 475, 316, 18,
	476, 477, 378, 175, 258, 259, 42, 478, 479, 480,
	110, 481, 482, 483, 369, 345, 347, 199, 114, 319,
	154, 484, 262, 365, 271, 444, 245, 111, 376, 312,
	486, 290, 302, 179, 174, 379, 280, 487, 224, 488,
	489, 490, 166, 491, 239, 238, 299, 272, 112, 300,
	362, 219, 492, 493, 494, 495, 209, 192, 382, 373,
	52, 223, 357, 496, 275, 291, 305, 156, 225, 497,
	249, 296, 43, 7, 212, 253, 363, 273, 220, 210,
	333, 181, 498, 499, 320, 321, 339, 304, 334, 297,
	184, 176, 109, 381, 358, 446, 236, 292, 328, 325,
	187, 332, 500, 150, 501, 188, 301, 377, 250, 323,
	359, 147, 131, 327, 371, 138, 361, 362, 368, -266,
	369, 182, 185, -227, 147, -196, 360, 241, 262, 415,
	188, 189, 148, 149, 33, 373, 372, 364, -223, 151,
	301, -76, 142, 177, -108, -47, 72, 225, -47, 30,
	72, 72, 36, 72, 300, 363, 363, 75, 444, 191,
	21, -335, -316, 271, -334, -314, 139, 138, 10, 140,
	276, 277, 278, 148, 8, 31, 485, 165, 279, 280,
	6, 169, 281, 282, 183, 9, 283, -319, 74, 72,
	-213, 21, -335, -316, 271, -205, -204, 293, 352, 6,
	-69, 5, -192, 152, 297, -87, 453, -93, -225, -223,
	-214, 74, 254, 168, 244, 355, 411, 412, 413, 414,
	191, 415, 428, 410, 429, 97, 189, 276, 277, 268,
	278, 167, 430, 115, 198, 177, 233, 364, 232, 237,
	416, 417, 431, 432, 433, 418, 419, 243, 434, 435,
	508, 246, 509, 269, 437, 485, 438, 279, 436, 281,
	186, 422, 421, 420, 423, 282, 405, 406, 424, 51,
	426, 425, 427, 81, -3, -171, 17, 16, -73, 54,
	55, -68, -81, 122, -83, -223, -117, 89, -123, 29,
	72, -213, 24, -122, -214, -118, -145, -144, -96, 131,
	132, 133, 120, 121, 128, 90, 134, -130, -128, -129,
	-131, -133, -134, 74, 73, 82, 75, 76, 77, 78,
	83, 411, 412, 413, 414, 415, 428, 429, 167, 430,
	177, 416, 417, 431, 432, 433, 418, 419, 434, 435,
	437, 438, 436, 422, 421, 420, 423, 405, 406, 424,
	426, 425, 427, 84, 85, -215, -142, -344, 58, 59,
	146, 395, 396, 397, 398, 399, 439, 403, 92, 47,
	384, 393, 392, 391, 389, 390, 386, 388, 387, 153,
	385, 126, 394, -192, -192, 11, -100, -101, -108, -111,
	-223, -181, 297, -188, -185, 372, 373, -186, -189, -183,
	-145, 352, 482, 483, 371, 327, 370, -215, -223, -2,
	-5, 6, -108, -273, -261, -264, -216, 162, -286, -215,
	-212, 159, 72, -213, 254, 143, 168, 139, 88, 447,
	23, 25, 244, 355, 411, 91, 131, 412, 413, 414,
	16, 20, 92, 130, 81, 395, 191, 415, 138, 62,
	410, 386, 388, 384, 385, 361, 29, 10, 26, 170,
	204, 22, 124, 140, 95, 96, 97, 189, 173, 276,
	277, 24, 171, 268, 85, 278, 167, 115, 198, 19,
	65, 177, 233, 11, 364, 185, 240, 13, 409, 113,
	232, 14, 237, 153, 152, 108, 202, 148, 60, 8,
	134, 27, 105, 56, 416, 417, 450, 45, 190, 451,
	58, 106, 17, 389, 390, 31, 439, 418, 178, 452,
	419, 126, 207, 63, 50, 243, 89, 83, 508, 34,
	86, 66, 289, 87, 15, 203, 61, 407, 246, 509,
	269, 182, 485, 206, 453, 165, 107, 279, 141, 394,
	270, 242, 59, 146, 6, 404, 30, 169, 281, 208,
	186, 422, 421, 420, 423, 57, 397, 398, 424, 282,
	502, 147, 94, 405, 406, 151, 183, 84, 5, 44,
	32, 9, 283, 64, 67, 391, 392, 393, 47, 51,
	426, 425, 427, 93, 12, 408, 443, 148, -108, 394,
	-199, 153, -199, 183, 182, -199, -199, 147, 98, -53,
	-108, -318, -313, -319, -198, 153, -215, -198, -198, -198,
	-198, -198, -198, -198, -108, 135, -108, 72, 30, -197,
	106, 12, 385, 146, 147, 182, 183, 150, -268, 11,
	108, 186, 186, 186, 187, 186, -195, 363, 365, 184,
	366, 367, 12, -84, 106, 19, -344, -171, -171, 72,
	300, 151, -61, -3, -11, -9, -10, -3, 98, -125,
	23, 30, 30, 74, 51, 30, -42, -41, -43, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 30, -297, 68, -256, 352, 72, -310, -311, -108,
	75, 75, 66, 66, 69, 151, 69, 66, -336, 272,
	68, -336, 238, 272, 273, 210, 236, 150, -336, -336,
	238, -336, -336, -336, -336, -336, 363, -336, -336, -336,
	274, 275, -336, 361, 150, -336, -336, -336, -336, -336,
	71, 66, 69, 262, 66, 11, 66, -283, 131, 285,
	286, 287, 288, 284, 262, 289, 290, 291, 186, 292,
	-67, -7, -5, -344, 21, 22, 147, 376, 69, -87,
	-174, -344, -345, 70, -172, 19, 31, -126, 75, 78,
	-154, -157, -83, -223, 50, -71, 21, 22, 80, 11,
	-218, 88, 87, 105, -217, 23, 72, -213, -214, 74,
	135, -83, -120, 108, 89, 106, 107, 91, 117, 116,
	127, 120, 121, 122, 123, 124, 125, 126, 118, 119,
	130, 98, 99, 100, 101, 102, 103, 104, -193, -344,
	-96, -344, 136, 137, -123, -123, -123, -123, -123, -123,
	-123, -123, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -344,
	-344, -344, -344, -344, -344, -3, -137, -83, -344, -344,
	-344, -344, -344, -344, -344, -344, -344, -344, -344, -148,
	-83, -344, -347, -132, -344, -347, -132, -347, -132, -347,
	-344, -347, -132, -347, -132, -347, -347, -132, -347, -344,
	-344, -344, -344, -110, 27, -108, -86, -89, -91, -92,
	-112, -95, -344, -90, -108, -96, 72, -108, -100, -346,
	69, 11, 67, -346, 69, 135, 69, -182, -187, 374,
	376, 297, -186, -186, -222, -215, 74, 29, 98, 30,
	135, -153, -67, 70, 69, -264, 162, 159, -229, -233,
	-235, -234, -236, -231, -232, 324, 327, 331, 329, 325,
	330, 131, 328, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 342, 343, 30, 172, 320, 321, 322, 323,
	344, 345, 346, 347, 348, 349, 350, 351, 303, 326,
	441, 304, 305, 306, 307, 308, 309, 311, 312, 313,
	314, 315, 316, 317, 318, 72, -214, -286, 68, -215,
	23, 150, 72, 89, 72, -107, -215, -223, -114, -215,
	-223, -322, -321, -313, -316, -199, 72, 69, 151, 69,
	151, 71, -100, 24, 66, -102, -108, 72, 72, -107,
	-114, -315, -313, -316, -224, -223, -212, -197, 74, -83,
	-199, -199, -108, -108, -108, -108, -108, -197, -197, -197,
	-197, -194, 11, 108, 11, -194, -194, -83, -123, -313,
	387, 122, 72, 72, 300, 72, 34, -42, -42, 74,
	-42, 69, 98, -42, 70, -137, -296, 503, 69, -312,
	23, 376, 377, 353, -338, 147, 185, 182, -338, -334,
	280, -315, -314, -313, -336, -337, -215, -336, -336, -336,
	363, -336, -336, -336, -336, -336, -336, -336, -336, -319,
	-338, 240, 69, -338, -315, -313, 284, 284, 284, 284,
	284, 284, -73, -3, -108, 377, 378, -93, 23, -173,
	-216, 9, 108, 69, 18, 69, -170, 25, 26, 135,
	-124, 51, 75, 78, -200, 49, -108, -83, -83, -135,
	83, 89, 84, 85, -217, 122, -224, -216, -212, -123,
	-136, -142, -96, 79, 108, 106, 107, 91, -123, -123,
	-123, -123, -123, -123, -123, -123, -123, -123, -123, -123,
	-123, -123, -123, -226, 72, 74, 72, -122, -122, -215,
	-71, -79, -82, 122, -83, -223, -79, -79, -71, -345,
	-345, -79, -82, -79, -79, -79, -79, -82, -79, -71,
	-71, -79, -345, -345, -345, -345, -79, -79, -79, -79,
	-215, -215, -71, -79, -79, -79, -71, -345, 69, -345,
	-3, -79, -79, -345, -83, -83, -145, 74, -79, -145,
	74, -79, -123, 400, 401, 402, -79, -71, -146, -147,
	93, -145, -345, -123, -79, -80, -79, -79, -79, -177,
	110, -108, 30, 69, -103, -105, -104, -106, 56, 60,
	62, 57, 58, 59, 63, -208, -86, -94, 47, -344,
	-113, 110, -115, 23, -225, 64, 152, 65, -344, -177,
	67, -86, -108, -86, -111, -223, 122, -185, -188, 69,
	375, 377, 378, -182, -243, 130, 66, 86, -83, -216,
	-224, -171, -73, -274, -275, -276, -216, 74, 75, -261,
	-262, -263, -264, -277, 162, -285, 154, 156, 157, 44,
	-265, 163, 148, 45, -230, -251, 358, -237, 68, -237,
	-237, 332, 324, 327, 325, -237, -237, -237, -237, -237,
	-242, 327, -242, -242, -242, -242, 325, 68, 68, -237,
	-237, -237, -253, 68, -253, 319, -254, 68, -254, -254,
	-254, -254, -286, -286, -83, -219, 67, -167, -108, -249,
	-248, -245, -246, -247, -244, 29, 24, -249, -48, 197,
	168, 135, 68, 135, -317, 69, 29, -323, 237, -108,
	-108, -108, -313, -313, -319, -293, 166, 161, -108, 69,
	69, 72, 72, -125, -269, 11, 108, -197, -223, -223,
	-108, -125, -197, -77, 173, 67, -347, -345, 72, -123,
	-41, -122, 70, -109, 27, 74, -311, -225, 352, 377,
	-339, 122, -215, -339, -342, 443, 151, 70, 69, -336,
	-339, 258, 240, -339, 11, -284, 19, -71, -345, -55,
	-54, 143, 140, 141, 144, 145, -289, 355, 139, 194,
	193, 179, -95, -344, -345, 69, 135, 52, -126, -126,
	-157, -191, 19, 11, 47, 47, -72, 57, 83, 84,
	85, 135, -344, -136, -123, -123, -123, -77, 88, -345,
	-79, 69, -345, 135, -345, -345, -79, -158, 407, -158,
	-345, -345, -345, -345, -345, -345, -345, -345, -79, -79,
	-345, -158, -158, -158, -158, -345, -345, -345, -345, 69,
	69, -79, -345, -345, -345, -80, -83, -345, -345, -345,
	69, 67, 23, 11, 11, -345, 11, 11, -345, -345,
	11, -123, -123, -123, -345, -79, -149, -147, 95, -83,
	-345, -345, -345, -345, -345, -345, -121, 30, 47, -344,
	-3, -344, -180, -184, -145, -212, -89, -91, -91, -89,
	-91, 56, 56, 56, 61, 56, 61, 56, -104, -225,
	-345, -345, -141, 196, -344, 34, -225, -115, 148, 148,
	148, -80, -116, 12, -86, -116, -116, 135, -187, -190,
	379, 376, 382, 72, 74, 135, -172, 69, -276, 98,
	-264, 68, 72, -270, -214, 45, -265, 148, 45, -267,
	-265, -265, -270, 72, -270, 45, 83, 89, -240, -241,
	-255, -258, -238, 23, 504, 29, 66, 355, 154, 45,
	44, 157, 81, -252, 359, 75, -242, -242, -237, -237,
	-237, 332, -237, -242, -243, 30, -243, -243, -243, -243,
	-242, -259, 74, -259, 75, -253, 75, 70, 66, -215,
	-169, 23, -246, -245, -247, 327, 371, 130, 383, -49,
	8, 9, 10, -215, -298, -299, -300, 72, 108, 202,
	203, -215, -326, 270, -321, 238, 247, 88, 16, 443,
	151, 151, -108, -313, -116, 72, 72, -194, -197, -123,
	-316, 188, 189, -177, 147, -312, 151, 135, 135, 151,
	261, -315, -215, 11, 11, 258, 11, -315, 294, -200,
	69, -209, -265, -295, -263, -264, -294, 155, 162, 163,
	-209, 162, 159, -265, 163, 154, 155, -206, -265, 151,
	23, -209, -209, -271, 98, -209, 33, 33, 110, -216,
	-216, 53, -108, -78, -168, 122, -216, -80, -77, 88,
	-123, -345, -82, -159, -158, 122, -224, -159, -159, -345,
	-215, -163, -344, -158, -159, -159, -158, -158, -158, -345,
	-345, -158, -159, -159, -159, -159, -123, -123, -345, -159,
	-159, -159, -345, -228, 131, 324, 172, 322, 315, 342,
	329, 357, 320, 358, -226, -228, -123, -123, -123, -123,
	-123, 11, 11, 11, 440, -153, 97, -83, 94, -179,
	66, -180, -140, -143, -142, -344, -3, -345, -173, 6,
	443, -178, -215, -116, 69, 98, 98, -98, -97, 66,
	67, -99, 66, -97, 56, 56, -176, 68, 69, -142,
	-344, -178, -123, -115, -344, -344, -344, -345, -153, -83,
	-116, 376, 380, 381, -275, -276, -279, -278, -215, -214,
	154, -285, 44, -285, -270, -270, -270, 68, 83, -344,
	505, -123, 9, 45, 45, 45, 74, 70, -243, -243,
	-242, -237, -243, 72, 131, -243, 70, 69, 70, 69,
	70, 69, -119, 459, 89, -108, -3, -167, 30, -271,
	-271, -271, 66, 70, 69, -229, 72, 72, 72, -329,
	443, 243, -327, -325, 249, 250, 251, 252, 253, -316,
	248, -323, 245, 74, 72, -108, -313, -125, -242, -108,
	-315, 122, 122, -215, -315, 258, -341, 443, -315, -315,
	11, -315, 74, -72, -54, 68, -260, 72, -214, -270,
	-202, 154, 72, 72, 72, -214, 72, -214, -215, 45,
	45, 72, -108, -215, -260, 72, -83, -215, -215, 135,
	-116, 11, 69, -81, -345, -123, -159, 135, -159, -220,
	72, -159, -159, 69, 69, -159, -345, -237, -237, -237,
	-254, -237, 308, -237, 308, -345, -345, 19, 19, 19,
	19, -345, -123, -123, -123, -344, -75, 404, -83, 28,
	-179, 69, -345, -345, 47, -345, -345, 69, -153, -184,
	-83, -83, -83, 68, -83, -175, -215, 196, -345, -115,
	-208, -175, -175, -175, -171, 70, 69, -237, -237, 45,
	-267, -175, -123, 23, -129, 405, 406, -243, -242, 74,
	-242, 75, 75, 459, 68, -167, -169, -271, 72, 131,
	72, 131, 74, -108, -301, -302, -303, 81, 442, 89,
	204, 205, 164, 206, 207, 208, -300, -229, -229, -229,
	-332, -333, -331, 246, 268, 269, 254, -330, -328, 263,
	264, 265, 266, 88, 74, 74, 74, -324, 237, 88,
	246, 16, 23, -197, -304, -195, -341, -341, 240, -315,
	-78, -260, -155, 167, 168, -229, -229, -219, -267, 45,
	72, -207, 151, 23, 151, -155, -260, 30, 140, 27,
	-216, -150, 13, -86, -168, -168, 122, -139, 110, -123,
	-123, -242, 72, -123, -123, -123, -123, -345, -345, -345,
	-123, -345, 74, 45, -143, -140, 47, -3, -344, -215,
	-171, -175, 70, 69, -142, -113, -225, -345, -345, -345,
	-281, -280, 67, 158, 81, -278, -170, -170, -270, 70,
	-345, -344, -243, -243, 70, 70, -279, -3, 72, 131,
	19, -168, -303, 74, 208, 204, 208, 208, 208, 208,
	209, -320, 81, 244, -331, 255, 464, 239, 270, 75,
	75, 109, 31, 32, -328, 75, 75, 75, 75, -325,
	16, 443, -323, 245, 74, 74, -305, 38, -307, 39,
	-340, 23, -340, 258, 11, 70, 72, -230, -230, 68,
	-270, 68, 72, -215, -155, 29, 29, -344, -151, 14,
	16, -116, -81, -153, 16, -345, -345, -345, -345, -345,
	-345, -74, 108, 443, 9, -140, -3, 70, -215, -115,
	-280, 72, -271, 74, 165, -250, 507, 506, -123, 70,
	-167, 195, -169, 36, 36, 200, 201, 74, 74, 29,
	256, 134, 29, 75, 134, 410, 245, 74, 72, 246,
	-239, 152, -308, 43, -306, -257, 42, 16, -313, -86,
	-279, -219, -279, -123, -287, -288, 110, -161, 408, -152,
	-83, -138, -85, -83, -150, -168, -164, 112, 111, -137,
	-345, 441, 63, 444, -180, -345, 75, -108, -345, -282,
	-281, 196, -20, -3, -9, -10, -11, -12, -14, -50,
	-15, -16, -21, -22, -17, -56, -57, -65, -63, -64,
	-60, -59, -25, -23, -26, -18, -27, -28, -29, -33,
	-34, -24, -35, 92, 153, 226, 295, 75, 29, 75,
	29, 259, 246, 23, -176, 75, -307, 16, -309, 40,
	41, 74, 443, -116, 70, 68, 70, -345, 69, -215,
	-160, -162, -215, 69, -151, -345, -165, 91, -166, 109,
	410, -127, 75, 134, -165, 53, 442, 445, 68, -250,
	-156, 198, 199, -167, -83, -83, 72, -46, -221, 229,
	230, 231, -216, -36, -20, 257, 257, 74, 38, 74,
	16, 16, 238, -150, -282, -279, -282, -288, 47, 69,
	23, -85, -161, -166, 114, 115, 196, 114, 115, -122,
	53, -175, -167, 72, 72, -37, -38, 93, 94, 227,
	228, 232, -229, 69, 510, 74, 74, 29, 243, 21,
	-316, -151, 70, 180, -162, -163, 88, -215, 443, 70,
	-169, 97, 95, -38, -83, -36, 19, 19, 19, 29,
	-216, 97, -20, 260, -161, -282, 181, -166, 444, -291,
	-292, 66, -13, -19, -12, -9, -10, -11, 295, 92,
	-36, 94, 510, -47, 75, -3, -45, -44, 75, -47,
	234, 89, 235, 72, -123, -316, -344, 445, -292, 66,
	-291, 66, 10, 9, -167, -36, 510, -36, 97, 95,
	-39, -40, 96, -20, 69, 233, -123, 178, -290, 166,
	161, 164, 30, -290, 510, 97, 510, 153, -36, 97,
	95, -40, -83, -44, -345, -345, 160, 29, 83, 97,
	92, 510, 153, -36, 94, 97, 510, -36, 153, 97,
	510, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 732, 732, 732, 732,
	732, 732, 830, -2, 594, 0, 0, 0, 0, -2,
	705, 706, 707, 711, 712, 727, 729, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 40,
	0, 0, 56, 57, 1142, 0, 730, 719, 720, 0,
	0, 1677, 2, 1080, 0, 741, 734, 0, 1142, 1142,
	0, 0, 88, 0, 0, 0, 831, 0, 0, 0,
	1140, 1140, 0, 1140, 1140, 0, 1155, 0, 1137, 1151,
	1152, 1153, 0, 0, 1138, 0, 1138, 1138, 1138, 1138,
	1138, 1138, 1138, 0, 653, 850, 1164, 1165, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 0, 0, 0, 698, 0, 664, 665, 666, 0,
	668, 0, 0, 0, 0, 0, 678, 681, 685, 0,
	1080, 1080, 540, 541, 542, 702, 703, 692, 704, 0,
	0, 0, 0, 0, 811, 306, 308, 0, 328, 0,
	331, 334, 1170, 713, 0, 0, 1195, 1196, 0, 0,
	0, 0, 0, 1528, 182, 245, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 0, 184, 184, 184, 1540,
	184, 0, 184, 184, 184, 184, 184, 244, 234, 235,
	236, 0, 0, 0, 1528, 0, 520, 517, 518, 732,
	0, 736, 0, 1143, 708, 45, 0, 47, 1096, 832,
	833, 834, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 0, 1086, 0, 0, 744, 742,
	743, 733, 0, 755, 785, 0, 861, 0, 866, 868,
	-2, -2, 0, 909, 910, 911, 912, 913, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 938, 939, 940,
	941, 942, 943, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1619, 1620, 1621, 1622, 1624, 1625, 1627, 1634, 1635,
	1638, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652,
	1657, 1659, 1661, 1664, 1665, 1666, 1667, 1669, 1670, 1671,
	1673, 1674, 1675, 870, 871, 1050, 1109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 67, 69,
	850, 73, 1593, 0, 1114, -2, -2, 1116, 0, 0,
	0, -2, -2, -2, -2, 1391, -2, 1050, 0, 89,
	1072, 732, 90, 0, 371, 372, 0, 1404, 564, 1162,
	1163, 1393, 1158, 1159, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1140, 0, 634,
	0, 635, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 652, 0, 654, 655, 698, 657,
	0, 0, 1140, 1140, 0, 0, 0, 0, 0, 566,
	567, 698, 698, 698, 698, 695, 0, 695, 675, 695,
	693, 694, 0, 680, 0, 0, 0, 688, 689, 714,
	0, 0, 721, 723, 724, 725, 726, 722, 0, 731,
	0, 0, 0, 310, 0, 0, 330, 312, 0, 315,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	326, 0, 333, 0, 1168, 1171, 718, 1186, 1187, 0,
	1197, 1198, 188, 188, 0, 0, 0, 0, 151, 184,
	0, 153, 184, 184, 184, 0, 184, 184, 160, 161,
	184, 163, 164, 165, 166, 167, 184, 169, 170, 171,
	184, 184, 174, 184, 184, 177, 178, 179, 180, 181,
	243, 188, 0, 0, 188, 0, 0, 502, 0, 0,
	0, 0, 507, 508, 509, 510, 0, 0, 513, 514,
	741, 42, 52, 0, 737, 738, 0, 0, 0, 46,
	0, 0, 51, 1678, 37, 0, 0, 1081, 1084, 1085,
	1073, 1074, 1077, 0, 0, 739, 745, 746, 735, 0,
	756, 0, 0, 0, 786, 0, 788, 789, 790, 791,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 889, 890, 891, 892, 893, 894, 867, 0,
	881, 0, 0, 0, 930, 931, 932, 933, 934, 935,
	936, 0, 744, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	744, 0, 0, 0, 744, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	1042, 0, 995, 1004, 0, 996, 1005, 997, 1006, 998,
	0, 999, 1007, 1000, 1008, 1001, 1002, 1009, 1003, 0,
	903, 0, 0, 71, 0, 849, 0, 792, 794, 795,
	796, -2, 0, 800, 855, 901, 1164, -2, 0, 0,
	0, 63, 64, 0, 0, 0, 0, 74, 76, 0,
	0, 1593, 1117, 1118, 476, 1131, 1132, 1133, 0, 1129,
	0, 1080, 741, 581, 0, 373, 0, 0, 385, 466,
	396, 397, 398, 459, 400, 459, 459, 0, 459, 459,
	459, 459, 459, 473, 473, 473, 473, 473, 442, 443,
	444, 445, 446, 0, 0, 419, 459, 459, 459, 423,
	449, 450, 451, 452, 453, 454, 455, 456, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 461, 461,
	463, 463, 463, 463, 463, 0, 0, 563, 0, 1156,
	85, 0, -2, 0, -2, 0, 845, 0, 0, 852,
	0, 100, 261, 247, 99, 0, 233, 0, 0, 0,
	0, 238, 649, 1139, 0, 642, 65, 643, 644, 645,
	646, 647, 240, 648, 851, 1166, 1167, 656, 699, 700,
	0, 0, 811, 661, 662, 663, 568, 669, 670, 671,
	677, 698, 0, 0, 0, 811, 698, 679, 895, 682,
	1012, 0, 716, 715, 0, 728, 0, 307, 309, 311,
	329, 0, 0, 332, 335, 0, 0, 0, 0, 1189,
	0, 1191, 1193, 0, 0, 189, 190, 191, 0, 183,
	0, 206, 246, 0, 152, 0, 186, 154, 155, 156,
	184, 158, 159, 162, 168, 172, 173, 175, 176, 242,
	0, 0, 0, 0, 149, 0, 503, 504, 505, 506,
	515, 512, 744, 0, 0, 709, 710, 48, 0, 0,
	1098, 1087, 0, 0, 0, 0, 1076, 1078, 1079, 0,
	0, 1061, 0, 0, 747, 740, 39, 862, 863, 865,
	882, 0, 884, 886, 787, 757, 0, 1051, -2, 872,
	873, 897, 898, 899, 0, 0, 0, 0, 895, 877,
	0, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 929, 1026, 1027, 0, 927, 928, 937,
	0, 0, 905, 751, 752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 903, 900, 0, 1108,
	0, 0, 0, 977, 0, 0, 912, 1053, 0, 912,
	1053, 0, 0, 0, 0, 0, 0, 0, 1048, 1045,
	0, 0, 1013, 0, 0, 0, 904, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 1514, 806, 0, 855, 0, 0, 0, 903, 859,
	0, 859, 68, 859, 70, 0, 854, 1115, 0, 0,
	0, 79, 80, 75, 1119, 0, 1125, 1126, 1127, 1051,
	0, 1086, 744, 370, 582, 584, 587, 588, 589, 374,
	376, 377, 378, 0, -2, 555, 1524, 1571, -2, -2,
	547, 1438, -2, -2, 381, 468, 467, 399, 0, 473,
	473, 459, 459, 459, 459, 428, 473, 431, 434, 435,
	476, 0, 476, 476, 476, 476, 473, 0, 0, 420,
	421, 422, 411, 0, 412, 461, 414, 0, 415, 416,
	417, 418, 561, 562, 0, 0, 0, 87, 0, 94,
	-2, 483, 484, 485, 0, 480, 1141, 95, 0, 263,
	264, 0, 209, 0, 102, 0, 0, 248, 0, 369,
	0, 636, 0, 638, 237, 640, 650, 651, 641, 0,
	0, 658, 659, 660, 859, 0, 0, 672, 696, 697,
	695, 698, 676, 690, 0, 0, 683, 0, 717, 812,
	313, 314, 336, 71, 0, 1169, 1188, 0, 1192, 1194,
	0, 192, 194, 0, 143, 0, 0, 185, 0, 157,
	0, 0, 0, 0, 0, 511, 0, 739, 53, 595,
	596, -2, 627, 1148, 627, 627, 613, 530, 627, 0,
	0, 0, 49, 0, 1097, 0, 0, 0, 1082, 1083,
	1075, 0, 1134, 1135, 1062, 1063, 86, 748, 883, 885,
	887, 0, 903, 874, 895, 878, 0, 875, 0, 869,
	0, 0, 766, 0, 766, 766, 0, 963, 0, 964,
	991, 0, 976, 766, 766, 0, 0, 0, 0, 0,
	0, 970, 971, 972, 973, 766, 766, 766, 766, 0,
	0, 0, 766, 766, 766, 0, 908, -2, 974, 975,
	0, 0, 0, 0, 0, 1019, 0, 0, 1020, 985,
	0, 0, 0, 0, 0, 1072, 0, 1046, 0, 0,
	994, 1014, 1015, 1016, 1017, 1018, 1102, 0, 0, 0,
	1091, 0, 859, 1110, 0, 0, 793, 826, 828, 0,
	823, 836, 837, 839, 0, 841, 0, 843, 844, 813,
	799, 902, 801, 0, 0, 0, 855, 810, 0, 0,
	0, 0, 1072, 0, 859, 61, 62, 0, 77, 78,
	0, 0, 84, 477, 478, 0, 208, 0, 585, 0,
	375, 0, 548, 0, 0, 532, 547, 543, 544, 547,
	546, 547, 538, 548, 539, 0, 386, 0, 388, 389,
	390, 391, 392, 0, 0, 0, 0, 472, 0, 497,
	499, 0, 0, 395, 469, 0, 476, 476, 473, 426,
	427, 459, 432, 476, 436, 0, 437, 438, 439, 440,
	476, 0, 457, 0, 0, 413, 0, 578, 0, 1157,
	0, 85, 486, 487, 488, 0, 530, 530, 530, 0,
	265, 266, 267, 846, 0, 210, 211, 0, 0, 0,
	0, 853, 112, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 66, 241, 667, 569, 570, 811, 674, 896,
	684, 686, 687, 473, 0, 1190, 0, 0, 0, 0,
	0, 204, 187, 0, 0, 0, 0, 150, 0, 747,
	0, 0, 547, 0, 614, 615, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1149,
	1150, 0, 0, 0, 531, 0, 622, 623, 0, 1100,
	1099, 1088, 38, 859, 0, 758, 1052, 0, 876, 0,
	879, 766, 906, 948, 767, 753, 0, 949, 950, 766,
	759, 760, 762, 965, 952, 953, 966, 967, 968, 766,
	766, 969, 957, 956, 955, 958, 0, 0, 766, 961,
	960, 962, 944, 0, 459, 459, 1031, 459, 463, 1034,
	459, 1036, 459, 1039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1043, 993, 1049, 0, 54,
	0, 1102, 1089, 1104, 1106, 0, 0, 0, 0, -2,
	1371, 0, 817, 1072, 0, 0, 0, 820, 827, 0,
	0, 821, 0, 822, 840, 842, 797, 0, 0, 802,
	0, 0, -2, 809, 0, 0, 0, 819, 1080, 860,
	60, 81, 82, 83, 583, 586, 0, 549, 459, 459,
	0, 553, 545, 554, 534, 535, 537, 0, 387, 0,
	0, 470, 0, 496, 498, 500, 501, 460, 424, 425,
	476, 433, 429, 474, 475, 441, 473, 0, 473, 0,
	464, 0, 565, 579, 0, 0, 85, 87, 530, 0,
	0, 0, 0, 217, 0, 213, 0, 0, 0, 120,
	0, 103, 104, 105, 107, 108, 0, 0, 0, 101,
	0, 250, 0, 253, 254, 637, 639, 698, 1180, 847,
	204, 193, 195, 196, 204, 207, 144, 0, 145, 147,
	0, 146, 516, 86, 597, 0, 624, 0, 0, 1156,
	545, 0, -2, 600, 605, 606, 607, 608, 609, 0,
	620, 0, 602, 0, 624, 0, 617, 0, 0, 0,
	1064, 0, 86, 86, 945, 880, 947, 0, 951, 764,
	763, 946, 954, 0, 0, 959, 978, 1028, 473, 1032,
	1033, 1035, 1037, 1038, 1040, 980, 979, 0, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 0, 1047, 0,
	55, 0, 1107, -2, 0, 0, 72, 0, 1080, 1111,
	1112, 1113, 824, 0, 829, 0, 815, 0, 855, 807,
	0, 0, 0, 0, 59, 522, 0, 1077, 1077, 533,
	547, 0, 0, 0, 471, 0, 0, 430, 476, 458,
	476, 0, 0, 580, 0, 92, 0, 0, 491, 492,
	493, 494, 495, 0, 86, 218, 219, 0, 0, 0,
	224, 0, 0, 0, 0, 0, 212, 214, 215, 216,
	138, 121, 122, 0, 0, 0, 0, 113, 114, 0,
	0, 0, 0, 0, 109, 110, 111, 249, 0, 0,
	252, 0, 0, 673, 1182, 1176, 197, 197, 0, 148,
	0, 0, 599, 625, 0, 385, 385, 0, 547, 0,
	616, 0, 1146, 1147, 0, 611, 624, 0, 0, 0,
	1101, 1069, 0, 859, 0, 749, 754, 1072, 0, 0,
	0, 1029, 1030, 0, 0, 0, 0, 987, 988, 989,
	1021, 992, 1044, 0, 1105, 1090, 0, 1094, 0, 818,
	58, 0, 814, 0, 803, 805, 855, 856, 857, 858,
	521, 525, 0, 530, 0, 550, 551, 552, 536, 0,
	382, 0, 447, 448, 462, 465, 0, 85, 489, 490,
	0, 87, 220, 221, 222, 223, 225, 226, 0, 0,
	0, 98, 0, 0, 123, 0, 0, 0, 0, 133,
	134, 135, 136, 137, 115, 116, 117, 118, 119, 106,
	0, 0, 251, 0, 256, 257, 1144, 1184, -2, 0,
	141, 0, 142, 205, 0, 598, 626, 379, 380, 0,
	1156, 0, 601, 610, 612, 0, 619, 0, 778, 0,
	0, 1064, 86, 768, 0, 1010, 1011, 981, 983, 982,
	984, 0, 0, 0, 0, 1093, 0, 825, 816, 808,
	526, 527, 0, 529, 0, 393, 383, 384, 0, 523,
	93, 0, 0, 227, 228, 229, 230, 139, 140, 124,
	125, 0, 127, 128, 0, 0, 0, 259, 0, 255,
	813, 0, 1176, 0, 1178, 0, 1175, 0, 198, 859,
	0, 0, 0, 618, 0, 630, 0, 43, 0, 1070,
	1071, 1065, 1066, 1068, 1069, 750, 0, 0, 0, 765,
	990, 0, 0, 0, 1103, -2, 528, 0, 382, 91,
	524, 268, 85, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 0, 0, 0, 0, 0, 129, 0,
	131, 132, 258, 0, 36, 0, 1183, 0, 1181, 0,
	0, 1177, 0, 1064, 523, 0, 523, 629, 0, 0,
	779, 780, 0, 0, 778, 761, 769, 0, 772, 0,
	0, 0, 783, 0, 770, 1022, 0, 1025, 0, 394,
	85, 0, 0, 97, 0, 0, 1158, 0, 0, 295,
	296, 297, 1160, 0, 337, 126, 130, 260, 1145, 1185,
	0, 0, 0, 1069, 603, 0, 621, 631, 0, 0,
	0, 1067, 44, 0, 773, 774, 775, 776, 777, 0,
	1023, 0, 87, 269, 270, 0, 279, 0, 0, 0,
	0, 0, 293, 0, 0, 1179, 1173, 199, 200, 201,
	203, 778, 523, 0, 781, 782, 0, 784, 0, 556,
	0, 0, 0, 280, 0, 0, 0, 0, 0, 0,
	1161, 231, 338, 0, 41, 604, 0, 771, 0, 557,
	558, 0, 85, 271, 272, 273, 274, 275, 0, 277,
	0, 0, 0, 289, 290, 291, 0, 298, 300, 301,
	302, 0, 304, 305, 294, 202, 0, 1024, 559, 0,
	560, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 286, 0, 292, 0, 303, 0, 0, 571, 573,
	574, 0, 0, 572, 0, 0, 281, 282, 0, 0,
	0, 287, 0, 299, 632, 633, 575, 576, 577, 276,
	278, 0, 284, 0, 0, 0, 0, 0, 283, 0,
	288, 285,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 510,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:503
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:507
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:549
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:555
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:561
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:574
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:585
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:592
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:598
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:605
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:614
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:654
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:660
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:672
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:694
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:700
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:704
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:708
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:712
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:732
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:736
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:751
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:755
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:765
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:772
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:785
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:791
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:822
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:827
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:832
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:857
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[7].selStmt, SpecialCommentMode: yyDollar[6].boolean, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[8].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:865
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[9].selStmt, SpecialCommentMode: yyDollar[8].boolean, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[10].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:869
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:877
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 96:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:885
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:889
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:893
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:921
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:930
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:948
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:975
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:989
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:999
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1048
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1052
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1060
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1064
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1089
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1104
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1117
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1123
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1128
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1132
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1136
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1144
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1174
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1194
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.strs = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1338
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantAssumption = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 202:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1372
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1381
		{
			yyVAL.boolean = false
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.boolean = true
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1400
		{
			yyVAL.procedureParams = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1437
		{
			yyVAL.characteristics = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1465
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1473
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1477
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1493
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1499
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1564
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1600
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1604
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1608
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1626
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1630
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1634
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1640
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1648
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1658
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = BeforeStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = AfterStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = InsertStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = UpdateStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = DeleteStr
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1687
		{
			yyVAL.triggerOrder = nil
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1711
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1717
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 278:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1721
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1737
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1743
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 283:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1748
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1753
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 285:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1759
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1791
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1803
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1828
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1872
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1882
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1892
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &Resignal{}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.exprs = nil
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2044
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2060
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2087
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2096
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = ColumnType{}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2213
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2222
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.sqlVal = nil
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2529
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2547
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2564
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.boolean = false
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.boolean = true
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2626
		{
			yyVAL.charsetCollates = nil
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2648
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2662
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2666
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2670
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2674
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2680
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2684
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2690
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.colKeyOpt = colKey
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = yyDollar[1].str
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2800
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2805
		{
			yyVAL.indexOptions = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2819
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2834
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2854
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2866
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2883
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = yyDollar[1].str
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2951
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 556:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2965
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 557:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2969
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 558:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2973
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 559:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2977
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 560:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2981
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3005
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3067
		{
			yyVAL.boolean = true
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.boolean = true
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3075
		{
			yyVAL.boolean = false
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3080
		{
			yyVAL.str = ""
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = yyDollar[1].str
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = string("")
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3145
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3168
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3175
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3182
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3186
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3195
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 604:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3199
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3208
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3218
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3227
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3231
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3238
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3260
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3269
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3273
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3281
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3296
		{
			yyVAL.columnOrder = nil
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3309
		{
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
		}
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3315
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3331
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3335
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3355
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3367
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3373
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3385
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3409
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3417
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3425
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3433
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3442
		{

		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3460
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3476
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3484
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3492
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3497
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3501
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3521
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3529
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 673:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3545
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3550
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3563
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3571
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3589
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3598
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3611
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3625
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3631
		{
			yyVAL.boolean = false
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.boolean = true
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.showFilter = nil
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = SessionStr
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = GlobalStr
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3693
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Begin{}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.statement = &Begin{}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.statement = &Commit{}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3733
		{
			yyVAL.statement = &Rollback{}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3749
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3757
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3773
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			setAllowComments(yylex, true)
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.bytes2 = nil
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = UnionStr
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = UnionAllStr
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = UnionDistinctStr
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.byt = 0
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.byt = 1
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = SQLCacheStr
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = DistinctStr
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = StraightJoinHint
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3898
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3921
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3931
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3939
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3945
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3949
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3955
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3968
		{
			yyVAL.exprs = nil
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.over = nil
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.over = yyDollar[1].over
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3986
		{
			yyVAL.frame = nil
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3994
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4001
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.window = nil
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4069
		{
			yyVAL.window = yyDollar[2].window
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4084
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4110
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4152
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4196
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4211
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4215
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4234
		{
			yyVAL.expr = nil
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4238
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.columns = nil
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4247
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4267
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4273
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4286
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4290
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4306
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4318
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4321
		{
			yyVAL.empty = struct{}{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = JoinStr
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = JoinStr
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = JoinStr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = StraightJoinStr
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = LeftJoinStr
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = LeftJoinStr
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = RightJoinStr
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = RightJoinStr
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = NaturalJoinStr
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4394
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4406
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4420
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4441
		{
			yyVAL.indexHints = nil
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4445
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4449
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4453
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4458
		{
			yyVAL.expr = nil
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4462
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = IsNullStr
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = IsNotNullStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = IsTrueStr
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = IsNotTrueStr
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = IsFalseStr
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = IsNotFalseStr
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.str = EqualStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.str = LessThanStr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = GreaterThanStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.str = LessEqualStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.str = GreaterEqualStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.str = NotEqualStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4615
		{
			yyVAL.expr = nil
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.selectExprs = nil
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4676
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4738
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4746
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4750
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4754
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 955:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 982:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 983:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 984:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 989:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 990:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 992:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5060
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5074
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5085
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5126
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1011:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5177
		{
			yyVAL.str = ""
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.str = BooleanModeStr
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5185
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5217
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5239
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5264
		{
			yyVAL.expr = nil
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5268
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = string("")
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5283
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5287
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5293
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = nil
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5308
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5312
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5316
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = &NullVal{}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
			yyVAL.exprs = nil
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5373
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5383
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5394
		{
			yyVAL.expr = nil
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5398
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5404
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5409
		{
			yyVAL.orderBy = nil
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5423
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5429
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = AscScr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = AscScr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = DescScr
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5447
		{
			yyVAL.limit = nil
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5451
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5455
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5459
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = ForUpdateStr
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = ShareModeStr
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5495
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5499
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5512
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5516
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5520
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5526
		{
			yyVAL.columns = nil
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5536
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5544
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5548
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5553
		{
			yyVAL.assignExprs = nil
		}
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5557
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5583
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5603
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5609
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5612
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5622
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5639
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5652
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5665
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5710
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = &Default{}
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5734
		{
			yyVAL.byt = 0
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.byt = 1
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			yyVAL.byt = 0
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5741
		{
			yyVAL.byt = 1
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			yyVAL.byt = 0
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yyVAL.byt = 1
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = IgnoreStr
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5754
		{
			yyVAL.sqlVal = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5756
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.empty = struct{}{}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.empty = struct{}{}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5765
		{
			yyVAL.empty = struct{}{}
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5767
		{
			yyVAL.empty = struct{}{}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.empty = struct{}{}
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = UniqueStr
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5775
		{
			yyVAL.str = FulltextStr
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = SpatialStr
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5780
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5785
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5787
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5791
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5795
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5801
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5834
		{
			yyVAL.str = string("")
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5839
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5844
		{
			yyVAL.EnclosedBy = nil
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5848
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5853
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5857
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5862
		{
			yyVAL.sqlVal = nil
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5871
		{
			yyVAL.sqlVal = nil
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5880
		{
			yyVAL.Fields = nil
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5884
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5889
		{
			yyVAL.Lines = nil
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5893
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5898
		{
			yyVAL.sqlVal = nil
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5908
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5918
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5924
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5928
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5934
		{
			yyVAL.lockType = LockRead
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5938
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.lockType = LockWrite
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5946
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5952
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5958
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6481
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
