// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const TEMPORARY = 57525
const CLASS_ORIGIN = 57526
const SUBCLASS_ORIGIN = 57527
const MESSAGE_TEXT = 57528
const MYSQL_ERRNO = 57529
const CONSTRAINT_CATALOG = 57530
const CONSTRAINT_SCHEMA = 57531
const CONSTRAINT_NAME = 57532
const CATALOG_NAME = 57533
const SCHEMA_NAME = 57534
const TABLE_NAME = 57535
const COLUMN_NAME = 57536
const CURSOR_NAME = 57537
const SIGNAL = 57538
const RESIGNAL = 57539
const SQLSTATE = 57540
const DECLARE = 57541
const CONDITION = 57542
const CURSOR = 57543
const CONTINUE = 57544
const EXIT = 57545
const UNDO = 57546
const HANDLER = 57547
const FOUND = 57548
const SQLWARNING = 57549
const SQLEXCEPTION = 57550
const BEGIN = 57551
const START = 57552
const TRANSACTION = 57553
const COMMIT = 57554
const ROLLBACK = 57555
const SAVEPOINT = 57556
const WORK = 57557
const RELEASE = 57558
const BIT = 57559
const TINYINT = 57560
const SMALLINT = 57561
const MEDIUMINT = 57562
const INT = 57563
const INTEGER = 57564
const BIGINT = 57565
const INTNUM = 57566
const REAL = 57567
const DOUBLE = 57568
const FLOAT_TYPE = 57569
const DECIMAL = 57570
const NUMERIC = 57571
const DEC = 57572
const FIXED = 57573
const PRECISION = 57574
const TIME = 57575
const TIMESTAMP = 57576
const DATETIME = 57577
const YEAR = 57578
const CHAR = 57579
const VARCHAR = 57580
const BOOL = 57581
const CHARACTER = 57582
const VARBINARY = 57583
const NCHAR = 57584
const NVARCHAR = 57585
const NATIONAL = 57586
const VARYING = 57587
const TEXT = 57588
const TINYTEXT = 57589
const MEDIUMTEXT = 57590
const LONGTEXT = 57591
const LONG = 57592
const BLOB = 57593
const TINYBLOB = 57594
const MEDIUMBLOB = 57595
const LONGBLOB = 57596
const JSON = 57597
const ENUM = 57598
const GEOMETRY = 57599
const POINT = 57600
const LINESTRING = 57601
const POLYGON = 57602
const GEOMETRYCOLLECTION = 57603
const MULTIPOINT = 57604
const MULTILINESTRING = 57605
const MULTIPOLYGON = 57606
const LOCAL = 57607
const LOW_PRIORITY = 57608
const NULLX = 57609
const AUTO_INCREMENT = 57610
const APPROXNUM = 57611
const SIGNED = 57612
const UNSIGNED = 57613
const ZEROFILL = 57614
const COLLATION = 57615
const DATABASES = 57616
const SCHEMAS = 57617
const TABLES = 57618
const FULL = 57619
const PROCESSLIST = 57620
const COLUMNS = 57621
const FIELDS = 57622
const ENGINES = 57623
const PLUGINS = 57624
const NAMES = 57625
const CHARSET = 57626
const GLOBAL = 57627
const SESSION = 57628
const ISOLATION = 57629
const LEVEL = 57630
const READ = 57631
const WRITE = 57632
const ONLY = 57633
const REPEATABLE = 57634
const COMMITTED = 57635
const UNCOMMITTED = 57636
const SERIALIZABLE = 57637
const CURRENT_TIMESTAMP = 57638
const DATABASE = 57639
const CURRENT_DATE = 57640
const CURRENT_USER = 57641
const CURRENT_TIME = 57642
const LOCALTIME = 57643
const LOCALTIMESTAMP = 57644
const UTC_DATE = 57645
const UTC_TIME = 57646
const UTC_TIMESTAMP = 57647
const REPLACE = 57648
const CONVERT = 57649
const CAST = 57650
const SUBSTR = 57651
const SUBSTRING = 57652
const TRIM = 57653
const LEADING = 57654
const TRAILING = 57655
const BOTH = 57656
const GROUP_CONCAT = 57657
const SEPARATOR = 57658
const TIMESTAMPADD = 57659
const TIMESTAMPDIFF = 57660
const OVER = 57661
const WINDOW = 57662
const GROUPING = 57663
const GROUPS = 57664
const AVG = 57665
const BIT_AND = 57666
const BIT_OR = 57667
const BIT_XOR = 57668
const COUNT = 57669
const JSON_ARRAYAGG = 57670
const JSON_OBJECTAGG = 57671
const MAX = 57672
const MIN = 57673
const STDDEV_POP = 57674
const STDDEV = 57675
const STD = 57676
const STDDEV_SAMP = 57677
const SUM = 57678
const VAR_POP = 57679
const VARIANCE = 57680
const VAR_SAMP = 57681
const CUME_DIST = 57682
const DENSE_RANK = 57683
const FIRST_VALUE = 57684
const LAG = 57685
const LAST_VALUE = 57686
const LEAD = 57687
const NTH_VALUE = 57688
const NTILE = 57689
const ROW_NUMBER = 57690
const PERCENT_RANK = 57691
const RANK = 57692
const MATCH = 57693
const AGAINST = 57694
const BOOLEAN = 57695
const LANGUAGE = 57696
const WITH = 57697
const QUERY = 57698
const EXPANSION = 57699
const UNUSED = 57700
const ARRAY = 57701
const DESCRIPTION = 57702
const EMPTY = 57703
const EXCEPT = 57704
const JSON_TABLE = 57705
const LATERAL = 57706
const MEMBER = 57707
const RECURSIVE = 57708
const ACTIVE = 57709
const ADMIN = 57710
const BUCKETS = 57711
const CLONE = 57712
const COMPONENT = 57713
const DEFINITION = 57714
const ENFORCED = 57715
const EXCLUDE = 57716
const FOLLOWING = 57717
const GEOMCOLLECTION = 57718
const GET_MASTER_PUBLIC_KEY = 57719
const HISTOGRAM = 57720
const HISTORY = 57721
const INACTIVE = 57722
const INVISIBLE = 57723
const LOCKED = 57724
const MASTER_COMPRESSION_ALGORITHMS = 57725
const MASTER_PUBLIC_KEY_PATH = 57726
const MASTER_TLS_CIPHERSUITES = 57727
const MASTER_ZSTD_COMPRESSION_LEVEL = 57728
const NESTED = 57729
const NETWORK_NAMESPACE = 57730
const NOWAIT = 57731
const NULLS = 57732
const OJ = 57733
const OLD = 57734
const OPTIONAL = 57735
const ORDINALITY = 57736
const ORGANIZATION = 57737
const OTHERS = 57738
const PATH = 57739
const PERSIST = 57740
const PERSIST_ONLY = 57741
const PRECEDING = 57742
const PRIVILEGE_CHECKS_USER = 57743
const PROCESS = 57744
const RANDOM = 57745
const REFERENCE = 57746
const REQUIRE_ROW_FORMAT = 57747
const RESOURCE = 57748
const RESPECT = 57749
const RESTART = 57750
const RETAIN = 57751
const REUSE = 57752
const ROLE = 57753
const SECONDARY = 57754
const SECONDARY_ENGINE = 57755
const SECONDARY_LOAD = 57756
const SECONDARY_UNLOAD = 57757
const SKIP = 57758
const SRID = 57759
const THREAD_PRIORITY = 57760
const TIES = 57761
const UNBOUNDED = 57762
const VCPU = 57763
const VISIBLE = 57764
const SYSTEM = 57765
const INFILE = 57766

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 48,
	-2, 858,
	-1, 41,
	140, 920,
	141, 946,
	-2, 119,
	-1, 48,
	180, 510,
	181, 510,
	-2, 500,
	-1, 55,
	1, 1366,
	442, 1366,
	-2, 538,
	-1, 439,
	127, 956,
	-2, 950,
	-1, 440,
	127, 957,
	-2, 951,
	-1, 544,
	97, 1187,
	127, 1187,
	-2, 904,
	-1, 545,
	97, 1289,
	127, 1289,
	-2, 905,
	-1, 550,
	97, 1207,
	127, 1207,
	-2, 906,
	-1, 551,
	97, 1247,
	127, 1247,
	-2, 907,
	-1, 552,
	97, 1248,
	127, 1248,
	-2, 908,
	-1, 553,
	97, 1142,
	127, 1142,
	-2, 912,
	-1, 555,
	97, 1226,
	127, 1226,
	-2, 914,
	-1, 970,
	1, 590,
	5, 590,
	12, 590,
	13, 590,
	14, 590,
	15, 590,
	17, 590,
	19, 590,
	30, 590,
	31, 590,
	56, 590,
	57, 590,
	58, 590,
	59, 590,
	60, 590,
	62, 590,
	63, 590,
	66, 590,
	67, 590,
	69, 590,
	70, 590,
	442, 590,
	-2, 620,
	-1, 974,
	67, 65,
	69, 65,
	-2, 69,
	-1, 1174,
	127, 959,
	-2, 955,
	-1, 1343,
	68, 358,
	-2, 1106,
	-1, 1346,
	68, 354,
	71, 354,
	-2, 1041,
	-1, 1347,
	68, 355,
	71, 355,
	-2, 1051,
	-1, 1439,
	44, 401,
	147, 403,
	149, 401,
	150, 401,
	-2, 441,
	-1, 1515,
	5, 49,
	-2, 686,
	-1, 1798,
	69, 1085,
	70, 1085,
	127, 1085,
	-2, 545,
	-1, 1821,
	1, 641,
	5, 641,
	12, 641,
	13, 641,
	14, 641,
	15, 641,
	17, 641,
	19, 641,
	30, 641,
	31, 641,
	56, 641,
	57, 641,
	58, 641,
	59, 641,
	60, 641,
	62, 641,
	63, 641,
	66, 641,
	67, 641,
	69, 641,
	70, 641,
	442, 641,
	-2, 620,
	-1, 1895,
	147, 404,
	-2, 402,
	-1, 1958,
	5, 49,
	-2, 878,
	-1, 2105,
	41, 966,
	-2, 964,
	-1, 2214,
	5, 49,
	-2, 881,
}

const yyPrivate = 57344

const yyLast = 26371

var yyAct = [...]int{

	502, 78, 2230, 2317, 2363, 2338, 2328, 2231, 2217, 2329,
	2319, 2153, 7, 2199, 2152, 6, 1391, 2258, 2204, 2151,
	5, 2154, 8, 1970, 2038, 2078, 1834, 2105, 1815, 2121,
	445, 1724, 1714, 1298, 1554, 1791, 1389, 81, 921, 431,
	569, 1583, 2018, 1611, 2000, 1292, 1319, 1005, 501, 1348,
	2218, 1835, 1792, 1296, 1723, 757, 1152, 458, 567, 424,
	1888, 1344, 1351, 2150, 3, 1664, 1788, 1555, 970, 1364,
	368, 371, 1340, 1380, 102, 1437, 1330, 1807, 364, 78,
	1800, 1468, 1145, 1329, 1420, 1760, 389, 1271, 1689, 1199,
	91, 1208, 1086, 1690, 1106, 1160, 1336, 564, 734, 1647,
	1376, 823, 1282, 546, 1176, 830, 1131, 985, 1263, 1266,
	826, 1275, 807, 786, 563, 967, 442, 984, 427, 542,
	549, 543, 388, 843, 785, 538, 712, 535, 976, 2385,
	2381, 2371, 2353, 2351, 940, 365, 366, 367, 2333, 2312,
	2266, 80, 423, 1129, 1994, 2344, 747, 2252, 2327, 939,
	1869, 966, 2001, 2212, 83, 67, 1450, 2300, 2251, 1781,
	2003, 2211, 1490, 1950, 711, 1830, 1831, 986, 834, 987,
	1449, 2132, 858, 857, 867, 868, 860, 861, 862, 863,
	864, 865, 866, 859, 437, 1433, 869, 34, 1829, 34,
	85, 86, 87, 88, 89, 34, 34, 1316, 1317, 1140,
	1141, 517, 817, 523, 525, 524, 521, 522, 520, 519,
	518, 1549, 1454, 447, 1592, 1315, 379, 1591, 378, 1734,
	1593, 1448, 526, 527, 761, 762, 714, 760, 1550, 2006,
	34, 35, 70, 37, 38, 1630, 2063, 1294, 1350, 34,
	565, 70, 37, 38, 61, 1432, 804, 559, 2047, 79,
	76, 79, 1365, 61, 39, 65, 66, 79, 79, 76,
	1377, 62, 1352, 39, 1352, 1937, 2004, 2005, 2007, 2008,
	2009, 1135, 1446, 1440, 1441, 1370, 1439, 1365, 1442, 1443,
	1132, 34, 1622, 70, 37, 38, 1356, 1358, 49, 1357,
	1935, 377, 79, 386, 1133, 1134, 358, 1627, 1626, 2342,
	2263, 79, 2261, 2262, 2102, 2101, 2100, 1116, 2099, 739,
	770, 2098, 2096, 1452, 1455, 2097, 2183, 2184, 2148, 1623,
	2255, 2256, 2219, 1398, 2177, 369, 1972, 2336, 2339, 2335,
	70, 37, 38, 1628, 1575, 1615, 756, 746, 746, 1681,
	1682, 1616, 758, 79, 759, 761, 762, 753, 766, 1397,
	752, 746, 39, 2326, 41, 72, 45, 44, 47, 2314,
	58, 78, 78, 41, 72, 45, 44, 47, 2146, 113,
	109, 110, 775, 111, 2299, 777, 2200, 738, 742, 2178,
	776, 744, 812, 1717, 359, 82, 48, 75, 74, 1276,
	820, 56, 57, 46, 2377, 48, 75, 74, 1447, 372,
	1625, 1004, 46, 754, 755, 1840, 115, 114, 767, 768,
	745, 716, 715, 1004, 740, 743, 1003, 741, 2019, 2020,
	1004, 1696, 2186, 1838, 774, 778, 1445, 2323, 1004, 1894,
	2318, 385, 1840, 2386, 1365, 2383, 2133, 59, 60, 878,
	373, 1379, 880, 2002, 2321, 2372, 59, 60, 2354, 2179,
	50, 73, 1868, 52, 53, 63, 1637, 64, 1355, 2180,
	73, 353, 52, 53, 63, 1451, 64, 1117, 2210, 370,
	771, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 350,
	370, 919, 2367, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 1453, 938, 941, 941,
	941, 947, 941, 941, 947, 941, 947, 956, 957, 958,
	959, 960, 961, 821, 971, 809, 361, 811, 1624, 713,
	1135, 722, 1925, 105, 112, 2030, 1067, 71, 2308, 2031,
	1669, 332, 737, 77, 1076, 77, 71, 1665, 335, 1761,
	772, 77, 77, 1133, 1134, 384, 920, 385, 344, 351,
	352, 370, 362, 549, 2079, 1582, 1581, 1684, 549, 965,
	2320, 2322, 1580, 709, 370, 815, 1711, 2081, 105, 717,
	331, 108, 977, 1666, 2034, 1609, 77, 998, 71, 1301,
	1303, 1763, 1609, 1922, 341, 77, 1914, 342, 1609, 1596,
	348, 349, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 1588, 1063, 2365, 1485, 1612, 2366,
	97, 2364, 1525, 883, 884, 885, 886, 887, 888, 889,
	890, 881, 882, 1473, 1458, 71, 989, 77, 107, 106,
	1522, 990, 1155, 943, 945, 879, 949, 951, 2080, 954,
	997, 1002, 975, 1609, 982, 980, 2029, 443, 942, 944,
	946, 948, 950, 952, 953, 955, 849, 1405, 1667, 1668,
	1302, 1765, 1404, 99, 1858, 333, 1769, 96, 1764, 730,
	1762, 1608, 1609, 107, 106, 1767, 2035, 859, 1608, 1320,
	869, 1210, 869, 1311, 1608, 1114, 1148, 1710, 1766, 94,
	842, 1707, 1715, 1805, 1804, 999, 1107, 1124, 346, 336,
	337, 995, 356, 1768, 1770, 736, 338, 340, 779, 334,
	355, 354, 1411, 746, 103, 750, 1859, 718, 841, 840,
	746, 746, 746, 763, 104, 391, 840, 973, 748, 881,
	882, 841, 840, 1783, 93, 746, 842, 2259, 721, 1608,
	2259, 769, 2284, 842, 2283, 1706, 1696, 881, 882, 842,
	1703, 1088, 347, 1702, 1705, 858, 857, 867, 868, 860,
	861, 862, 863, 864, 865, 866, 859, 433, 1608, 869,
	1698, 92, 2357, 2339, 2356, 1696, 1264, 2370, 1538, 1004,
	1153, 1154, 1699, 1697, 860, 861, 862, 863, 864, 865,
	866, 859, 1108, 78, 869, 1264, 2309, 746, 735, 1698,
	1144, 862, 863, 864, 865, 866, 859, 94, 1412, 869,
	1183, 751, 1090, 1421, 1069, 1846, 765, 1166, 1168, 1169,
	1520, 1127, 1519, 1167, 1073, 1181, 1182, 1180, 837, 1077,
	1653, 1102, 1103, 1110, 1105, 1111, 2233, 2378, 98, 841,
	840, 841, 840, 2215, 1093, 1094, 841, 840, 1301, 1303,
	724, 725, 726, 727, 728, 827, 1137, 842, 828, 842,
	1993, 78, 841, 840, 842, 841, 840, 383, 1143, 2374,
	1174, 822, 2311, 1992, 79, 1521, 1470, 1471, 1472, 1652,
	842, 1177, 2296, 842, 1179, 1119, 1120, 1650, 1631, 1122,
	2379, 2295, 858, 857, 867, 868, 860, 861, 862, 863,
	864, 865, 866, 859, 923, 1125, 869, 2268, 1136, 858,
	857, 867, 868, 860, 861, 862, 863, 864, 865, 866,
	859, 1142, 1172, 869, 920, 841, 840, 841, 840, 1302,
	1113, 1200, 2260, 1201, 1785, 2239, 1157, 1733, 841, 840,
	2145, 1249, 1252, 842, 1594, 842, 1595, 1146, 1170, 1265,
	783, 2095, 1295, 2057, 532, 533, 842, 971, 822, 1158,
	1990, 971, 1159, 1851, 1648, 1429, 1121, 1242, 1091, 2282,
	1217, 2281, 782, 2143, 1221, 2115, 1173, 1612, 1203, 1204,
	463, 462, 465, 466, 467, 468, 1215, 1216, 2109, 464,
	469, 2070, 2301, 2108, 549, 1981, 2298, 1226, 1227, 1228,
	1229, 2027, 1306, 1088, 2245, 822, 1308, 1981, 2243, 2089,
	1239, 1241, 1909, 973, 1905, 920, 1175, 1246, 1174, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1981, 2241, 1981, 2147, 1326, 1300,
	1206, 1291, 1063, 1896, 1214, 1879, 1178, 2070, 2139, 746,
	1878, 746, 1877, 1223, 1224, 1353, 1354, 1676, 1359, 1360,
	1361, 1362, 1363, 1675, 1234, 1423, 1304, 1409, 1238, 1408,
	1325, 1366, 1367, 1368, 1369, 1202, 1373, 1374, 1375, 1337,
	1118, 847, 1115, 1313, 1261, 1312, 1318, 1309, 2070, 2085,
	2070, 822, 2070, 2069, 1981, 1980, 1334, 1255, 1327, 1085,
	1386, 1387, 1962, 822, 1457, 822, 1267, 1084, 831, 1866,
	1865, 1382, 1383, 1384, 1385, 1916, 1584, 1083, 850, 1862,
	1863, 1862, 1861, 1089, 1324, 78, 1082, 1331, 565, 1074,
	1095, 1096, 1097, 1483, 822, 978, 1378, 1284, 1287, 1288,
	1289, 1285, 1072, 1286, 1290, 1104, 1071, 1808, 1809, 1279,
	822, 1240, 1426, 1584, 1474, 867, 868, 860, 861, 862,
	863, 864, 865, 866, 859, 973, 1070, 869, 1240, 822,
	973, 1068, 805, 1917, 973, 978, 1174, 1001, 1000, 1584,
	732, 376, 374, 2088, 922, 1413, 2107, 1874, 920, 82,
	1419, 979, 1789, 981, 82, 1803, 1150, 937, 1852, 1431,
	1305, 1803, 977, 1278, 1422, 2247, 1956, 1139, 1875, 1177,
	1279, 1864, 1817, 1687, 1062, 1598, 1314, 1424, 1483, 1543,
	1542, 1425, 1123, 1430, 1407, 1151, 1130, 1435, 1325, 1075,
	983, 979, 819, 977, 818, 1456, 1803, 1462, 560, 79,
	1460, 1461, 1279, 1240, 1917, 2253, 2348, 1149, 1483, 1479,
	2242, 1816, 2114, 2112, 1995, 1352, 1551, 1553, 1968, 1381,
	971, 971, 971, 971, 971, 1475, 1284, 1287, 1288, 1289,
	1285, 1845, 1286, 1290, 1808, 1809, 1295, 79, 1576, 1377,
	1602, 1399, 1173, 1372, 1371, 1434, 971, 1064, 802, 1556,
	1390, 2346, 1481, 2330, 1873, 1811, 1789, 1484, 1469, 1557,
	79, 1654, 1486, 1487, 1079, 1814, 1513, 1492, 1493, 1494,
	1495, 1496, 1497, 1567, 1579, 1500, 1813, 1564, 1568, 1552,
	1505, 1506, 1507, 1508, 549, 1510, 1511, 1512, 1586, 1563,
	1587, 1585, 1515, 1516, 1517, 1518, 2278, 1565, 2250, 1242,
	1721, 1524, 1566, 1459, 1527, 1528, 1476, 1477, 1478, 1533,
	1534, 1537, 428, 429, 1161, 1540, 2276, 1541, 1571, 1959,
	1544, 1545, 1467, 1546, 1547, 1466, 1578, 1569, 1613, 1288,
	1289, 2060, 78, 1570, 1178, 2026, 1559, 1560, 1063, 1562,
	835, 836, 1572, 1573, 1607, 1610, 1599, 746, 1614, 746,
	746, 1640, 1984, 1642, 1643, 1644, 1645, 989, 1634, 1635,
	1636, 1638, 1589, 1632, 1633, 1904, 1903, 1850, 1597, 833,
	1639, 1558, 1601, 1849, 1561, 1489, 1491, 1606, 1092, 2188,
	1646, 1530, 1531, 1532, 2191, 2238, 1501, 1502, 1503, 1504,
	2237, 2106, 1674, 2267, 2104, 1656, 2182, 2181, 375, 1679,
	1641, 824, 996, 800, 784, 1112, 781, 780, 733, 2291,
	2119, 1954, 1649, 825, 2118, 2036, 1331, 440, 1428, 1393,
	1651, 1395, 1153, 1154, 1394, 1078, 391, 1718, 1657, 835,
	836, 1741, 1418, 973, 973, 973, 973, 973, 94, 1066,
	1465, 1691, 1704, 1709, 922, 813, 814, 2290, 1464, 973,
	2289, 1677, 847, 2288, 2092, 425, 1678, 1688, 2270, 973,
	2269, 2235, 2192, 2123, 120, 2045, 1174, 120, 426, 1700,
	1686, 1712, 1713, 120, 1701, 1716, 1693, 1694, 1685, 1683,
	82, 2122, 1163, 1164, 2039, 1584, 1659, 1660, 1661, 2350,
	2349, 1794, 78, 1526, 1523, 120, 1109, 838, 2349, 2350,
	2136, 1728, 1727, 1848, 1147, 560, 120, 380, 382, 84,
	120, 572, 54, 1782, 120, 1732, 1819, 1, 1736, 806,
	1556, 1823, 1824, 1825, 1790, 2236, 120, 2187, 572, 2189,
	1557, 2103, 1731, 2014, 120, 1999, 1802, 1998, 1739, 1793,
	2164, 51, 2166, 19, 1719, 1720, 1680, 1772, 1748, 1749,
	1771, 1663, 1822, 2165, 18, 1795, 2167, 20, 1662, 1755,
	1726, 1826, 801, 1759, 1818, 922, 1128, 1828, 2168, 21,
	1247, 1248, 1173, 1692, 1797, 2163, 15, 2162, 14, 1812,
	391, 2156, 10, 2175, 30, 2174, 29, 2173, 28, 2171,
	25, 1843, 2170, 24, 1844, 2172, 26, 1820, 2161, 13,
	1695, 1796, 1386, 1403, 1387, 1730, 1841, 2158, 12, 2157,
	11, 1062, 1444, 1871, 1872, 2198, 1839, 1833, 1842, 1853,
	1854, 500, 1832, 2155, 9, 1338, 1857, 1328, 562, 90,
	1410, 749, 2024, 1860, 339, 1335, 1620, 1323, 1146, 2190,
	1856, 803, 1619, 1629, 1855, 1349, 1618, 1773, 1774, 1617,
	1775, 1776, 1742, 1876, 1777, 1745, 1746, 1747, 2185, 1144,
	1750, 1621, 1009, 1007, 1008, 1006, 1011, 1786, 1787, 1010,
	343, 991, 2225, 839, 100, 1892, 55, 2028, 1708, 1438,
	95, 101, 345, 1726, 877, 1331, 1463, 1331, 1590, 547,
	548, 540, 2254, 1883, 829, 2201, 1536, 936, 1063, 1262,
	446, 1574, 1821, 1886, 1918, 1915, 1388, 1893, 1885, 1891,
	2203, 556, 1165, 1908, 461, 568, 1881, 460, 459, 1924,
	1897, 456, 1948, 457, 1417, 1156, 1548, 1913, 851, 1867,
	444, 435, 723, 969, 962, 1427, 1283, 1281, 1280, 1080,
	391, 536, 1810, 1806, 1293, 968, 387, 1847, 68, 120,
	764, 360, 1949, 2131, 572, 572, 36, 1670, 381, 1672,
	1673, 430, 27, 17, 1930, 1931, 773, 1932, 572, 22,
	1934, 16, 1936, 1436, 1556, 719, 40, 1919, 43, 1933,
	1963, 42, 1658, 1396, 1557, 2224, 2316, 1976, 1977, 1978,
	787, 2337, 2257, 831, 32, 1974, 120, 1955, 31, 2169,
	2176, 2160, 120, 2159, 1882, 2303, 23, 2302, 4, 1986,
	1929, 1964, 810, 78, 69, 33, 558, 2, 0, 0,
	0, 1938, 1939, 0, 0, 1985, 1979, 1944, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 1982,
	1983, 1272, 1988, 0, 1957, 1958, 1987, 1960, 0, 1599,
	1961, 846, 1975, 0, 1920, 0, 0, 971, 0, 0,
	0, 0, 0, 0, 0, 2011, 2012, 2013, 0, 2023,
	1973, 1989, 973, 1991, 0, 0, 1996, 2021, 2022, 2015,
	2016, 2010, 1514, 0, 0, 0, 0, 0, 2017, 2041,
	2042, 2032, 0, 0, 1386, 2025, 0, 1794, 0, 391,
	1794, 2065, 2040, 1945, 1946, 1947, 1539, 391, 1839, 0,
	2033, 0, 0, 1819, 0, 0, 0, 0, 0, 1331,
	858, 857, 867, 868, 860, 861, 862, 863, 864, 865,
	866, 859, 2068, 0, 869, 2062, 0, 0, 0, 0,
	0, 2046, 0, 0, 0, 1793, 0, 1605, 1793, 2061,
	120, 120, 120, 2091, 0, 2093, 0, 0, 568, 568,
	0, 2071, 2090, 2067, 2064, 0, 572, 2072, 0, 0,
	0, 2077, 568, 2082, 2044, 0, 2086, 2120, 2087, 2083,
	2084, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2052, 2053, 2054, 0, 2056,
	1300, 2037, 2073, 0, 1794, 0, 78, 0, 2113, 1726,
	0, 2110, 2111, 0, 0, 0, 2117, 0, 0, 0,
	0, 2125, 2124, 0, 2126, 0, 2074, 2075, 2076, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 2137,
	0, 2149, 0, 2142, 0, 0, 0, 2141, 971, 0,
	0, 0, 1793, 2144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2048, 2049, 2050, 2051, 2138,
	973, 0, 0, 2055, 0, 0, 0, 2058, 2059, 2194,
	0, 2196, 0, 0, 0, 0, 0, 0, 0, 2206,
	2195, 0, 0, 2193, 0, 0, 0, 2207, 2127, 2128,
	2129, 2130, 0, 0, 2208, 0, 2220, 1556, 2134, 2135,
	0, 2213, 0, 0, 0, 0, 0, 1557, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 572, 857, 867,
	868, 860, 861, 862, 863, 864, 865, 866, 859, 120,
	0, 869, 120, 0, 0, 0, 0, 0, 120, 0,
	572, 0, 0, 0, 2232, 2234, 0, 572, 572, 572,
	120, 120, 120, 0, 556, 0, 0, 120, 0, 556,
	992, 0, 572, 0, 0, 2240, 2248, 0, 0, 0,
	1784, 2209, 0, 0, 2142, 0, 0, 0, 2214, 0,
	2272, 0, 2274, 0, 0, 0, 0, 0, 0, 2275,
	0, 78, 0, 2287, 0, 2271, 2277, 78, 0, 2273,
	1837, 2280, 0, 2264, 2294, 2285, 0, 2279, 0, 0,
	0, 0, 0, 0, 0, 78, 1827, 2310, 0, 0,
	78, 0, 2307, 120, 572, 2306, 120, 1529, 572, 2313,
	2305, 2297, 2304, 2197, 0, 0, 0, 2325, 2244, 78,
	0, 2332, 78, 78, 2334, 0, 120, 78, 2249, 2331,
	2294, 973, 846, 0, 2340, 0, 2229, 2343, 0, 0,
	0, 0, 0, 0, 78, 0, 2347, 78, 2345, 2355,
	0, 2294, 0, 2358, 0, 2360, 0, 0, 0, 0,
	0, 0, 78, 2315, 78, 2368, 822, 1890, 78, 2294,
	2373, 2294, 0, 0, 0, 0, 0, 1605, 572, 0,
	1899, 1901, 78, 0, 0, 78, 0, 2382, 0, 2294,
	1890, 0, 78, 0, 0, 0, 78, 0, 0, 2294,
	0, 1065, 0, 2294, 858, 857, 867, 868, 860, 861,
	862, 863, 864, 865, 866, 859, 0, 0, 869, 0,
	0, 0, 2292, 0, 568, 0, 1910, 0, 0, 0,
	0, 568, 568, 568, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 572, 572, 568, 0, 0, 0,
	0, 120, 0, 0, 1737, 1738, 0, 0, 0, 120,
	120, 1743, 1744, 0, 120, 120, 0, 0, 120, 120,
	120, 0, 0, 1751, 1752, 1753, 1754, 391, 1756, 1757,
	1758, 2375, 2376, 0, 0, 0, 2324, 0, 572, 572,
	0, 0, 0, 0, 0, 0, 0, 1951, 0, 0,
	0, 0, 0, 0, 1953, 0, 922, 0, 568, 1942,
	0, 0, 568, 0, 0, 0, 1965, 1966, 0, 0,
	1967, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	1952, 922, 0, 0, 0, 0, 0, 0, 2361, 0,
	0, 568, 1941, 858, 857, 867, 868, 860, 861, 862,
	863, 864, 865, 866, 859, 120, 572, 869, 572, 0,
	0, 120, 0, 120, 120, 1890, 0, 120, 0, 858,
	857, 867, 868, 860, 861, 862, 863, 864, 865, 866,
	859, 0, 1205, 869, 0, 0, 0, 1890, 0, 0,
	0, 0, 0, 0, 0, 120, 120, 120, 858, 857,
	867, 868, 860, 861, 862, 863, 864, 865, 866, 859,
	0, 0, 869, 0, 0, 0, 0, 0, 120, 0,
	120, 972, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 858, 857, 867, 868, 860, 861, 862, 863, 864,
	865, 866, 859, 0, 0, 869, 0, 0, 1268, 1269,
	0, 391, 1940, 391, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 1837, 0, 556, 0, 363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	0, 0, 568, 568, 0, 0, 0, 0, 0, 1921,
	0, 0, 0, 0, 0, 0, 0, 1923, 0, 0,
	537, 0, 0, 0, 561, 0, 1926, 1927, 710, 0,
	0, 0, 0, 1928, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 858, 857, 867, 868, 860, 861, 862, 863, 864,
	865, 866, 859, 433, 1780, 869, 0, 922, 0, 0,
	568, 0, 568, 0, 0, 0, 0, 120, 120, 120,
	120, 120, 0, 0, 0, 0, 0, 0, 0, 120,
	0, 0, 0, 120, 0, 0, 0, 120, 0, 0,
	1837, 0, 1837, 120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1207, 1212, 1213, 0, 0, 0,
	0, 1218, 1219, 1220, 0, 1222, 0, 572, 1225, 0,
	0, 0, 0, 1230, 1231, 1232, 1233, 0, 1235, 1236,
	1237, 0, 0, 0, 2202, 2205, 1243, 1244, 1245, 0,
	0, 0, 1251, 1254, 0, 1259, 1260, 568, 0, 0,
	0, 858, 857, 867, 868, 860, 861, 862, 863, 864,
	865, 866, 859, 0, 0, 869, 0, 0, 0, 0,
	1270, 0, 1273, 1274, 0, 0, 0, 0, 572, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 2221,
	2222, 0, 0, 0, 572, 120, 572, 572, 0, 0,
	0, 0, 0, 0, 853, 0, 856, 0, 0, 0,
	0, 1778, 0, 870, 871, 872, 873, 874, 875, 876,
	1837, 854, 855, 852, 858, 857, 867, 868, 860, 861,
	862, 863, 864, 865, 866, 859, 0, 0, 869, 0,
	0, 0, 0, 0, 0, 572, 572, 0, 0, 0,
	0, 120, 0, 731, 0, 0, 0, 0, 0, 2205,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 2286, 0, 0, 0, 0, 0, 0, 572, 858,
	857, 867, 868, 860, 861, 862, 863, 864, 865, 866,
	859, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	808, 0, 1729, 0, 0, 556, 816, 0, 858, 857,
	867, 868, 860, 861, 862, 863, 864, 865, 866, 859,
	0, 568, 869, 858, 857, 867, 868, 860, 861, 862,
	863, 864, 865, 866, 859, 0, 0, 869, 0, 572,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2359, 858, 857, 867, 868, 860, 861, 862, 863,
	864, 865, 866, 859, 572, 0, 869, 0, 0, 0,
	0, 0, 0, 0, 832, 0, 0, 0, 0, 0,
	0, 1480, 1655, 0, 572, 0, 572, 0, 572, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 568, 0,
	568, 568, 858, 857, 867, 868, 860, 861, 862, 863,
	864, 865, 866, 859, 0, 0, 869, 0, 1482, 0,
	0, 118, 0, 0, 357, 0, 1488, 0, 0, 0,
	118, 0, 0, 0, 0, 1498, 1499, 0, 0, 0,
	0, 0, 120, 0, 0, 0, 1509, 0, 0, 568,
	568, 0, 390, 0, 964, 0, 974, 120, 0, 0,
	434, 0, 0, 539, 557, 568, 0, 118, 0, 0,
	0, 118, 120, 1535, 0, 0, 0, 568, 0, 0,
	0, 0, 1740, 118, 0, 0, 0, 0, 0, 0,
	0, 118, 572, 0, 0, 0, 120, 572, 0, 0,
	0, 0, 0, 0, 572, 572, 0, 0, 0, 0,
	0, 34, 0, 70, 37, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 556, 0, 568, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 34, 0, 70,
	37, 38, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 61, 0, 79, 0, 0, 0, 76, 0, 0,
	0, 39, 0, 0, 0, 0, 0, 120, 568, 0,
	568, 0, 568, 0, 1836, 0, 2177, 0, 0, 0,
	0, 2384, 0, 0, 572, 0, 0, 0, 0, 0,
	0, 572, 572, 572, 0, 0, 0, 0, 0, 79,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 0, 41, 72, 45, 44, 47,
	0, 0, 2177, 537, 0, 0, 1081, 2380, 0, 0,
	0, 2178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 0, 1098, 1099, 1100, 48, 75, 74,
	0, 1101, 0, 0, 46, 0, 0, 0, 0, 0,
	0, 41, 72, 45, 44, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1902, 2178, 0, 0,
	0, 1907, 572, 0, 120, 0, 118, 0, 1911, 1912,
	572, 0, 0, 48, 75, 74, 0, 0, 59, 60,
	46, 2179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2180, 73, 0, 52, 53, 63, 1138, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 0, 0, 118, 0, 0, 572, 0, 0, 118,
	1162, 120, 0, 120, 59, 60, 0, 2179, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 2180, 73, 0,
	52, 53, 63, 572, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 1971, 1971, 1971, 0, 572,
	0, 0, 0, 0, 568, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 1604, 0, 0, 1971, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 34, 0, 70, 37, 38, 0, 0, 572, 0,
	0, 1603, 0, 0, 0, 61, 0, 0, 0, 0,
	0, 76, 0, 0, 71, 39, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 0, 0, 0, 1307,
	572, 0, 572, 0, 0, 0, 568, 118, 118, 118,
	0, 0, 0, 79, 568, 0, 0, 557, 0, 0,
	0, 0, 557, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 0, 2177, 0, 0, 0,
	0, 2369, 1004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 572, 0, 0,
	413, 0, 0, 1836, 0, 41, 72, 45, 44, 47,
	0, 0, 0, 0, 0, 0, 0, 1836, 572, 1392,
	0, 2178, 0, 0, 0, 1400, 0, 1401, 1402, 0,
	0, 1406, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 0, 0, 0, 0, 0, 0,
	572, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 572, 0, 0, 0, 0, 59, 60,
	0, 2179, 2140, 0, 0, 0, 0, 0, 0, 0,
	0, 2180, 73, 0, 52, 53, 63, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 118,
	0, 0, 0, 0, 1836, 1087, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 118, 118,
	0, 0, 0, 0, 118, 0, 0, 0, 556, 0,
	393, 394, 395, 396, 397, 401, 402, 406, 407, 416,
	415, 414, 417, 418, 421, 420, 422, 398, 399, 400,
	403, 404, 405, 408, 409, 412, 410, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	118, 0, 2246, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 1087, 2265, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 419, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 0, 0,
	0, 0, 1895, 0, 0, 0, 0, 1211, 1211, 1211,
	0, 0, 0, 1211, 1211, 1211, 1211, 1211, 1211, 1018,
	0, 1211, 0, 0, 0, 0, 1211, 1211, 1211, 1211,
	0, 1211, 1211, 1211, 0, 0, 0, 0, 0, 1211,
	1211, 1211, 0, 0, 0, 1211, 1211, 0, 1211, 1211,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 1032, 0, 0, 0, 0, 0, 0, 0, 1671,
	0, 0, 0, 1211, 1211, 1211, 1211, 0, 118, 0,
	0, 0, 0, 1004, 0, 0, 118, 390, 0, 0,
	0, 118, 118, 0, 0, 118, 1310, 1087, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 1087, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	1045, 1048, 1049, 1050, 1051, 1052, 1053, 0, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 0, 1033, 1034, 1035, 1036,
	1012, 1016, 1046, 1013, 1019, 1015, 1017, 1014, 0, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 118, 0,
	118, 118, 0, 0, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 1414, 1415, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	1087, 393, 394, 395, 396, 397, 401, 402, 406, 407,
	416, 415, 414, 417, 418, 421, 420, 422, 398, 399,
	400, 403, 404, 405, 408, 409, 412, 410, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1018, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 1880, 0, 0, 0, 0, 0, 0, 1211, 1211,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 1211,
	0, 0, 1032, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1906, 0, 0, 0, 0, 0, 1211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 34, 0, 70,
	37, 38, 0, 557, 118, 118, 118, 118, 118, 0,
	0, 61, 0, 0, 0, 0, 390, 76, 0, 0,
	118, 39, 0, 0, 390, 0, 0, 0, 0, 0,
	118, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 557, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 0, 1033, 1034, 1035,
	1036, 1012, 1016, 1046, 1013, 1019, 1015, 1017, 1014, 79,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 0,
	0, 0, 2177, 0, 0, 0, 0, 2352, 34, 0,
	70, 37, 38, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 72, 45, 44, 47, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 2178, 0, 0,
	0, 0, 0, 0, 34, 1997, 70, 37, 38, 0,
	79, 2341, 0, 48, 75, 74, 0, 0, 61, 0,
	46, 0, 0, 0, 76, 0, 0, 1047, 39, 0,
	0, 0, 0, 2177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	0, 0, 0, 0, 59, 60, 79, 2179, 1211, 0,
	1087, 0, 41, 72, 45, 44, 47, 2180, 73, 0,
	52, 53, 63, 0, 64, 0, 0, 0, 2178, 2177,
	0, 0, 0, 0, 2293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 75, 74, 419, 0, 0,
	0, 46, 0, 0, 0, 0, 0, 0, 0, 34,
	0, 70, 37, 38, 1887, 0, 0, 1889, 41, 72,
	45, 44, 47, 61, 557, 0, 0, 0, 0, 76,
	0, 0, 0, 39, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 60, 0, 2179, 0,
	48, 75, 74, 0, 0, 0, 0, 46, 2180, 73,
	0, 52, 53, 63, 71, 64, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2177, 0, 0, 0, 0, 0,
	0, 59, 60, 0, 2179, 0, 0, 0, 419, 0,
	0, 0, 0, 77, 2180, 73, 0, 52, 53, 63,
	0, 64, 0, 0, 0, 0, 413, 0, 1061, 118,
	0, 0, 0, 41, 72, 45, 44, 47, 0, 0,
	0, 0, 0, 0, 118, 0, 0, 0, 0, 2178,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 48, 75, 74, 2216, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 0, 0, 0, 77, 1889, 0, 0, 0, 1004,
	0, 71, 0, 0, 0, 0, 59, 60, 0, 2179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2180,
	73, 0, 52, 53, 63, 0, 64, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 396,
	397, 401, 402, 406, 407, 416, 415, 414, 417, 418,
	421, 420, 422, 398, 399, 400, 403, 404, 405, 408,
	409, 412, 410, 411, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 0, 0, 0, 393, 394, 395,
	396, 397, 401, 402, 406, 407, 416, 415, 414, 417,
	418, 421, 420, 422, 398, 399, 400, 403, 404, 405,
	408, 409, 412, 410, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 396, 397, 401,
	402, 406, 407, 416, 415, 414, 417, 418, 421, 420,
	422, 398, 399, 400, 403, 404, 405, 408, 409, 412,
	410, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 434, 690, 670, 297,
	628, 693, 600, 617, 705, 618, 621, 659, 586, 640,
	232, 615, 587, 0, 604, 577, 611, 578, 601, 630,
	165, 599, 672, 643, 692, 195, 655, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 691, 636, 0, 699,
	198, 0, 652, 700, 287, 217, 0, 0, 632, 679,
	638, 668, 627, 661, 593, 651, 694, 616, 657, 695,
	0, 0, 118, 2223, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 654, 689, 613, 656, 658, 575,
	653, 0, 581, 588, 704, 685, 607, 608, 609, 0,
	0, 557, 0, 0, 0, 0, 631, 639, 665, 624,
	0, 118, 0, 0, 0, 0, 0, 0, 605, 0,
	649, 0, 0, 0, 589, 582, 0, 0, 629, 0,
	0, 0, 592, 125, 606, 666, 0, 573, 175, 218,
	136, 669, 684, 626, 188, 324, 688, 623, 622, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 614, 574, 673, 602, 612, 157, 610, 264,
	236, 314, 0, 646, 242, 263, 199, 303, 254, 312,
	313, 179, 708, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 625, 660, 603, 154, 663, 650,
	678, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 2226, 2227, 2228, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 579, 0, 289,
	317, 330, 143, 598, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 596, 597, 594, 0, 595,
	641, 642, 696, 697, 698, 667, 590, 0, 680, 681,
	0, 0, 0, 0, 0, 671, 686, 687, 662, 706,
	619, 620, 580, 583, 584, 585, 591, 633, 634, 645,
	648, 676, 675, 674, 677, 682, 702, 701, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 121, 132, 197, 707, 256, 171, 318, 576, 163,
	0, 0, 635, 637, 647, 664, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 683, 690, 670, 297, 628, 693, 600, 617,
	705, 618, 621, 659, 586, 640, 232, 615, 587, 0,
	604, 577, 611, 578, 601, 630, 165, 599, 672, 643,
	692, 195, 655, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 691, 636, 0, 699, 198, 0, 652, 700,
	287, 217, 0, 0, 632, 679, 638, 668, 627, 661,
	593, 651, 694, 616, 657, 695, 0, 0, 0, 571,
	0, 1332, 1333, 0, 0, 0, 0, 0, 146, 0,
	654, 689, 613, 656, 658, 575, 653, 0, 581, 588,
	704, 685, 607, 608, 609, 1600, 0, 0, 0, 0,
	0, 0, 631, 639, 665, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 0, 649, 0, 0, 0,
	589, 582, 0, 0, 629, 0, 0, 0, 592, 125,
	606, 666, 0, 573, 175, 218, 136, 669, 684, 626,
	188, 324, 688, 623, 622, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 614, 574,
	673, 602, 612, 157, 610, 264, 236, 314, 0, 646,
	242, 263, 199, 303, 254, 312, 313, 179, 708, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	625, 660, 603, 154, 663, 650, 678, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 579, 0, 289, 317, 330, 143, 598,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 596, 597, 594, 0, 595, 641, 642, 696, 697,
	698, 667, 590, 0, 680, 681, 0, 0, 0, 0,
	0, 671, 686, 687, 662, 706, 619, 620, 580, 583,
	584, 585, 591, 633, 634, 645, 648, 676, 675, 674,
	677, 682, 702, 701, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 121, 132, 197,
	707, 256, 171, 318, 576, 163, 0, 0, 635, 637,
	647, 664, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 683, 690,
	670, 297, 628, 693, 600, 617, 705, 618, 621, 659,
	586, 640, 232, 615, 587, 0, 604, 577, 611, 578,
	601, 630, 165, 599, 672, 643, 692, 195, 655, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 691, 636,
	0, 699, 198, 0, 652, 700, 287, 217, 0, 0,
	632, 679, 638, 668, 627, 661, 593, 651, 694, 616,
	657, 695, 0, 0, 0, 571, 0, 1332, 1333, 0,
	0, 0, 0, 0, 146, 0, 654, 689, 613, 656,
	658, 575, 653, 0, 581, 588, 704, 685, 607, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 631, 639,
	665, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 649, 0, 0, 0, 589, 582, 0, 0,
	629, 0, 0, 0, 592, 125, 606, 666, 0, 573,
	175, 218, 136, 669, 684, 626, 188, 324, 688, 623,
	622, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 614, 574, 673, 602, 612, 157,
	610, 264, 236, 314, 0, 646, 242, 263, 199, 303,
	254, 312, 313, 179, 708, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 625, 660, 603, 154,
	663, 650, 678, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 579,
	0, 289, 317, 330, 143, 598, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 596, 597, 594,
	0, 595, 641, 642, 696, 697, 698, 667, 590, 0,
	680, 681, 0, 0, 0, 0, 0, 671, 686, 687,
	662, 706, 619, 620, 580, 583, 584, 585, 591, 633,
	634, 645, 648, 676, 675, 674, 677, 682, 702, 701,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 121, 132, 197, 707, 256, 171, 318,
	576, 163, 0, 0, 635, 637, 647, 664, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 683, 690, 1798, 297, 628, 693,
	600, 617, 705, 618, 621, 659, 586, 640, 232, 615,
	587, 0, 604, 577, 611, 578, 601, 630, 165, 599,
	672, 643, 692, 195, 655, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 691, 636, 0, 699, 198, 0,
	652, 700, 287, 217, 0, 0, 632, 679, 638, 668,
	627, 661, 593, 651, 694, 616, 657, 695, 79, 0,
	822, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 654, 689, 613, 656, 658, 575, 653, 0,
	581, 588, 704, 685, 607, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 631, 639, 665, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 649, 0,
	0, 0, 589, 582, 0, 0, 629, 0, 0, 0,
	592, 125, 606, 666, 0, 573, 175, 218, 136, 669,
	684, 626, 188, 324, 688, 623, 622, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	614, 574, 673, 602, 612, 157, 610, 264, 236, 314,
	0, 646, 242, 263, 199, 303, 254, 312, 313, 179,
	708, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 625, 660, 603, 154, 663, 650, 678, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 579, 0, 289, 317, 330,
	143, 598, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 596, 597, 594, 0, 595, 641, 642,
	696, 697, 698, 667, 590, 0, 680, 681, 0, 0,
	0, 0, 0, 671, 686, 687, 662, 706, 619, 620,
	580, 583, 584, 585, 591, 633, 634, 645, 648, 676,
	675, 674, 677, 682, 702, 701, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 121,
	132, 197, 1799, 256, 171, 318, 576, 163, 0, 0,
	635, 637, 647, 664, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	683, 690, 670, 297, 628, 693, 600, 617, 705, 618,
	621, 659, 586, 640, 232, 615, 587, 0, 604, 577,
	611, 578, 601, 630, 165, 599, 672, 643, 692, 195,
	655, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	691, 636, 0, 699, 198, 0, 652, 700, 287, 217,
	0, 0, 632, 679, 638, 668, 627, 661, 593, 651,
	694, 616, 657, 695, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 654, 689,
	613, 656, 658, 575, 653, 0, 581, 588, 704, 685,
	607, 608, 609, 0, 0, 0, 0, 0, 0, 0,
	631, 639, 665, 624, 0, 0, 0, 0, 0, 0,
	2043, 0, 605, 0, 649, 0, 0, 0, 589, 582,
	0, 0, 629, 0, 0, 0, 592, 125, 606, 666,
	0, 573, 175, 218, 136, 669, 684, 626, 188, 324,
	688, 623, 622, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 614, 574, 673, 602,
	612, 157, 610, 264, 236, 314, 0, 646, 242, 263,
	199, 303, 254, 312, 313, 179, 708, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 625, 660,
	603, 154, 663, 650, 678, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 579, 0, 289, 317, 330, 143, 598, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 596,
	597, 594, 0, 595, 641, 642, 696, 697, 698, 667,
	590, 0, 680, 681, 0, 0, 0, 0, 0, 671,
	686, 687, 662, 706, 619, 620, 580, 583, 584, 585,
	591, 633, 634, 645, 648, 676, 675, 674, 677, 682,
	702, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 121, 132, 197, 707, 256,
	171, 318, 576, 163, 0, 0, 635, 637, 647, 664,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 683, 690, 670, 297,
	628, 693, 600, 617, 705, 618, 621, 659, 586, 640,
	232, 615, 587, 0, 604, 577, 611, 578, 601, 630,
	165, 599, 672, 643, 692, 195, 655, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 691, 636, 0, 699,
	198, 0, 652, 700, 287, 217, 0, 0, 632, 679,
	638, 668, 627, 661, 593, 651, 694, 616, 657, 695,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 654, 689, 613, 656, 658, 575,
	653, 0, 581, 588, 704, 685, 607, 608, 609, 0,
	0, 0, 0, 0, 0, 0, 631, 639, 665, 624,
	0, 0, 0, 0, 0, 0, 1735, 0, 605, 0,
	649, 0, 0, 0, 589, 582, 0, 0, 629, 0,
	0, 0, 592, 125, 606, 666, 0, 573, 175, 218,
	136, 669, 684, 626, 188, 324, 688, 623, 622, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 614, 574, 673, 602, 612, 157, 610, 264,
	236, 314, 0, 646, 242, 263, 199, 303, 254, 312,
	313, 179, 708, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 625, 660, 603, 154, 663, 650,
	678, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 579, 0, 289,
	317, 330, 143, 598, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 596, 597, 594, 0, 595,
	641, 642, 696, 697, 698, 667, 590, 0, 680, 681,
	0, 0, 0, 0, 0, 671, 686, 687, 662, 706,
	619, 620, 580, 583, 584, 585, 591, 633, 634, 645,
	648, 676, 675, 674, 677, 682, 702, 701, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 121, 132, 197, 707, 256, 171, 318, 576, 163,
	0, 0, 635, 637, 647, 664, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 683, 690, 670, 297, 628, 693, 600, 617,
	705, 618, 621, 659, 586, 640, 232, 615, 587, 0,
	604, 577, 611, 578, 601, 630, 165, 599, 672, 643,
	692, 195, 655, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 691, 636, 0, 699, 198, 0, 652, 700,
	287, 217, 0, 0, 632, 679, 638, 668, 627, 661,
	593, 651, 694, 616, 657, 695, 0, 0, 0, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	654, 689, 613, 656, 658, 575, 653, 0, 581, 588,
	704, 685, 607, 608, 609, 0, 0, 0, 0, 0,
	0, 0, 631, 639, 665, 624, 0, 0, 0, 0,
	0, 0, 1725, 0, 605, 0, 649, 0, 0, 0,
	589, 582, 0, 0, 629, 0, 0, 0, 592, 125,
	606, 666, 0, 573, 175, 218, 136, 669, 684, 626,
	188, 324, 688, 623, 622, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 614, 574,
	673, 602, 612, 157, 610, 264, 236, 314, 0, 646,
	242, 263, 199, 303, 254, 312, 313, 179, 708, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	625, 660, 603, 154, 663, 650, 678, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 579, 0, 289, 317, 330, 143, 598,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 596, 597, 594, 0, 595, 641, 642, 696, 697,
	698, 667, 590, 0, 680, 681, 0, 0, 0, 0,
	0, 671, 686, 687, 662, 706, 619, 620, 580, 583,
	584, 585, 591, 633, 634, 645, 648, 676, 675, 674,
	677, 682, 702, 701, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 121, 132, 197,
	707, 256, 171, 318, 576, 163, 0, 0, 635, 637,
	647, 664, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 683, 690,
	670, 297, 628, 693, 600, 617, 705, 618, 621, 659,
	586, 640, 232, 615, 587, 0, 604, 577, 611, 578,
	601, 630, 165, 599, 672, 643, 692, 195, 655, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 691, 636,
	0, 699, 198, 0, 652, 700, 287, 217, 0, 0,
	632, 679, 638, 668, 627, 661, 593, 651, 694, 616,
	657, 695, 79, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 654, 689, 613, 656,
	658, 575, 653, 0, 581, 588, 704, 685, 607, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 631, 639,
	665, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 649, 0, 0, 0, 589, 582, 0, 0,
	629, 0, 0, 0, 592, 125, 606, 666, 0, 573,
	175, 218, 136, 669, 684, 626, 188, 324, 688, 623,
	622, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 614, 574, 673, 602, 612, 157,
	610, 264, 236, 314, 0, 646, 242, 263, 199, 303,
	254, 312, 313, 179, 708, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 625, 660, 603, 154,
	663, 650, 678, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 579,
	0, 289, 317, 330, 143, 598, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 596, 597, 594,
	0, 595, 641, 642, 696, 697, 698, 667, 590, 0,
	680, 681, 0, 0, 0, 0, 0, 671, 686, 687,
	662, 706, 619, 620, 580, 583, 584, 585, 591, 633,
	634, 645, 648, 676, 675, 674, 677, 682, 702, 701,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 121, 132, 197, 707, 256, 171, 318,
	576, 163, 0, 0, 635, 637, 647, 664, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 683, 690, 670, 297, 628, 693,
	600, 617, 705, 618, 621, 659, 586, 640, 232, 615,
	587, 0, 604, 577, 611, 578, 601, 630, 165, 599,
	672, 643, 692, 195, 655, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 691, 636, 0, 699, 198, 0,
	652, 700, 287, 217, 0, 0, 632, 679, 638, 668,
	627, 661, 593, 651, 694, 616, 657, 695, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 654, 689, 613, 656, 658, 575, 653, 0,
	581, 588, 704, 685, 607, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 631, 639, 665, 624, 0, 0,
	0, 0, 0, 0, 1311, 0, 605, 0, 649, 0,
	0, 0, 589, 582, 0, 0, 629, 0, 0, 0,
	592, 125, 606, 666, 0, 573, 175, 218, 136, 669,
	684, 626, 188, 324, 688, 623, 622, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	614, 574, 673, 602, 612, 157, 610, 264, 236, 314,
	0, 646, 242, 263, 199, 303, 254, 312, 313, 179,
	708, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 625, 660, 603, 154, 663, 650, 678, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 579, 0, 289, 317, 330,
	143, 598, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 596, 597, 594, 0, 595, 641, 642,
	696, 697, 698, 667, 590, 0, 680, 681, 0, 0,
	0, 0, 0, 671, 686, 687, 662, 706, 619, 620,
	580, 583, 584, 585, 591, 633, 634, 645, 648, 676,
	675, 674, 677, 682, 702, 701, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 121,
	132, 197, 707, 256, 171, 318, 576, 163, 0, 0,
	635, 637, 647, 664, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	683, 690, 670, 297, 628, 693, 600, 617, 705, 618,
	621, 659, 586, 640, 232, 615, 587, 0, 604, 577,
	611, 578, 601, 630, 165, 599, 672, 643, 692, 195,
	655, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	691, 636, 0, 699, 198, 0, 652, 700, 287, 217,
	0, 0, 632, 679, 638, 668, 627, 661, 593, 651,
	694, 616, 657, 695, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 654, 689,
	613, 656, 658, 575, 653, 0, 581, 588, 704, 685,
	607, 608, 609, 0, 0, 0, 0, 0, 0, 0,
	631, 639, 665, 624, 0, 0, 0, 0, 0, 0,
	1171, 0, 605, 0, 649, 0, 0, 0, 589, 582,
	0, 0, 629, 0, 0, 0, 592, 125, 606, 666,
	0, 573, 175, 218, 136, 669, 684, 626, 188, 324,
	688, 623, 622, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 614, 574, 673, 602,
	612, 157, 610, 264, 236, 314, 0, 646, 242, 263,
	199, 303, 254, 312, 313, 179, 708, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 625, 660,
	603, 154, 663, 650, 678, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 579, 0, 289, 317, 330, 143, 598, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 596,
	597, 594, 0, 595, 641, 642, 696, 697, 698, 667,
	590, 0, 680, 681, 0, 0, 0, 0, 0, 671,
	686, 687, 662, 706, 619, 620, 580, 583, 584, 585,
	591, 633, 634, 645, 648, 676, 675, 674, 677, 682,
	702, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 121, 132, 197, 707, 256,
	171, 318, 576, 163, 0, 0, 635, 637, 647, 664,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 683, 690, 670, 297,
	628, 693, 600, 617, 705, 618, 621, 659, 586, 640,
	232, 615, 587, 0, 604, 577, 611, 578, 601, 630,
	165, 599, 672, 643, 692, 195, 655, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 691, 636, 0, 699,
	198, 0, 652, 700, 287, 217, 0, 0, 632, 679,
	638, 668, 627, 661, 593, 651, 694, 616, 657, 695,
	0, 0, 0, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 654, 689, 613, 656, 658, 575,
	653, 0, 581, 588, 704, 685, 607, 608, 609, 0,
	0, 0, 0, 0, 0, 0, 631, 639, 665, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 0,
	649, 0, 0, 0, 589, 582, 0, 0, 629, 0,
	0, 0, 592, 125, 606, 666, 0, 573, 175, 218,
	136, 669, 684, 626, 188, 324, 688, 623, 622, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 614, 574, 673, 602, 612, 157, 610, 264,
	236, 314, 0, 646, 242, 263, 199, 303, 254, 312,
	313, 179, 708, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 625, 660, 603, 154, 663, 650,
	678, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 579, 0, 289,
	317, 330, 143, 598, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 596, 597, 594, 0, 595,
	641, 642, 696, 697, 698, 667, 590, 0, 680, 681,
	0, 0, 0, 0, 0, 671, 686, 687, 662, 706,
	619, 620, 580, 583, 584, 585, 591, 633, 634, 645,
	648, 676, 675, 674, 677, 682, 702, 701, 703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	644, 121, 132, 197, 707, 256, 171, 318, 576, 163,
	0, 0, 635, 637, 647, 664, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 683, 690, 670, 297, 628, 693, 600, 617,
	705, 618, 621, 659, 586, 640, 232, 615, 587, 0,
	604, 577, 611, 578, 601, 630, 165, 599, 672, 643,
	692, 195, 655, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 691, 636, 0, 699, 198, 0, 652, 700,
	287, 217, 0, 0, 632, 679, 638, 668, 627, 661,
	593, 651, 694, 616, 657, 695, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	654, 689, 613, 656, 658, 575, 653, 0, 581, 588,
	704, 685, 607, 608, 609, 0, 0, 0, 0, 0,
	0, 0, 631, 639, 665, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 605, 0, 649, 0, 0, 0,
	589, 582, 0, 0, 629, 0, 0, 0, 592, 125,
	606, 666, 0, 573, 175, 218, 136, 669, 684, 626,
	188, 324, 688, 623, 622, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 614, 574,
	673, 602, 612, 157, 610, 264, 236, 314, 0, 646,
	242, 263, 199, 303, 254, 312, 313, 179, 708, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	625, 660, 603, 154, 663, 650, 678, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 579, 0, 289, 317, 330, 143, 598,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 596, 597, 594, 0, 595, 641, 642, 696, 697,
	698, 667, 590, 0, 680, 681, 0, 0, 0, 0,
	0, 671, 686, 687, 662, 706, 619, 620, 580, 583,
	584, 585, 591, 633, 634, 645, 648, 676, 675, 674,
	677, 682, 702, 701, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 121, 132, 197,
	707, 256, 171, 318, 576, 163, 0, 0, 635, 637,
	647, 664, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 683, 690,
	670, 297, 628, 693, 600, 617, 705, 618, 621, 659,
	586, 640, 232, 615, 587, 0, 604, 577, 611, 578,
	601, 630, 165, 599, 672, 643, 692, 195, 655, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 1343, 1347,
	0, 699, 198, 0, 652, 700, 287, 217, 0, 0,
	632, 679, 638, 668, 627, 661, 593, 651, 694, 616,
	657, 695, 0, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 654, 689, 613, 656,
	658, 575, 653, 0, 581, 588, 704, 685, 607, 608,
	609, 0, 0, 0, 0, 0, 0, 0, 631, 639,
	665, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 649, 0, 0, 0, 589, 582, 0, 0,
	629, 0, 0, 0, 592, 125, 606, 666, 0, 573,
	175, 218, 136, 669, 684, 1346, 188, 324, 688, 623,
	622, 1341, 0, 1342, 178, 196, 570, 122, 134, 1339,
	1345, 228, 261, 271, 614, 574, 673, 602, 612, 157,
	610, 264, 236, 314, 0, 646, 242, 263, 199, 303,
	254, 312, 313, 179, 708, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 625, 660, 603, 154,
	663, 650, 678, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 579,
	0, 289, 317, 330, 143, 598, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 596, 597, 594,
	0, 595, 641, 642, 696, 697, 698, 667, 590, 0,
	680, 681, 0, 0, 0, 0, 0, 671, 686, 687,
	662, 706, 619, 620, 580, 583, 584, 585, 591, 633,
	634, 645, 648, 676, 675, 674, 677, 682, 702, 701,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 644, 121, 132, 197, 707, 256, 171, 318,
	576, 163, 0, 0, 635, 637, 647, 664, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 683, 690, 670, 297, 628, 693,
	600, 617, 705, 618, 621, 659, 586, 640, 232, 615,
	587, 0, 604, 577, 611, 578, 601, 630, 165, 599,
	672, 643, 692, 195, 655, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 691, 636, 0, 699, 198, 0,
	652, 700, 287, 217, 0, 0, 632, 679, 638, 668,
	627, 661, 593, 651, 694, 616, 657, 695, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 654, 689, 613, 656, 658, 575, 653, 0,
	581, 588, 704, 685, 607, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 631, 639, 665, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 649, 0,
	0, 0, 589, 582, 0, 0, 629, 0, 0, 0,
	592, 125, 606, 666, 0, 573, 175, 218, 136, 669,
	684, 626, 188, 324, 688, 623, 622, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	614, 574, 673, 602, 612, 157, 610, 264, 236, 314,
	0, 646, 242, 263, 199, 303, 254, 312, 313, 179,
	708, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 625, 660, 603, 154, 663, 650, 678, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 579, 0, 289, 317, 330,
	143, 598, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 596, 597, 594, 0, 595, 641, 642,
	696, 697, 698, 667, 590, 0, 680, 681, 0, 0,
	0, 0, 0, 671, 686, 687, 662, 706, 619, 620,
	580, 583, 584, 585, 591, 633, 634, 645, 648, 676,
	675, 674, 677, 682, 702, 701, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 121,
	132, 197, 707, 256, 171, 318, 576, 163, 0, 0,
	635, 637, 647, 664, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	683, 690, 670, 297, 628, 693, 600, 617, 705, 618,
	621, 659, 586, 640, 232, 615, 587, 0, 604, 577,
	611, 578, 601, 630, 165, 599, 672, 643, 692, 195,
	655, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	691, 636, 0, 699, 198, 0, 652, 700, 287, 217,
	0, 0, 632, 679, 638, 668, 627, 661, 593, 651,
	694, 616, 657, 695, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 654, 689,
	613, 656, 658, 575, 653, 0, 581, 588, 704, 685,
	607, 608, 609, 0, 0, 0, 0, 0, 0, 0,
	631, 639, 665, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 605, 0, 649, 0, 0, 0, 589, 582,
	0, 0, 629, 0, 0, 0, 592, 125, 606, 666,
	0, 573, 175, 218, 136, 669, 684, 626, 188, 324,
	688, 623, 622, 252, 0, 292, 178, 196, 570, 122,
	134, 566, 177, 228, 261, 271, 614, 574, 673, 602,
	612, 157, 610, 264, 236, 314, 0, 646, 242, 263,
	199, 303, 254, 312, 313, 179, 708, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 625, 660,
	603, 154, 663, 650, 678, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 579, 0, 289, 317, 330, 143, 598, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 596,
	597, 594, 0, 595, 641, 642, 696, 697, 698, 667,
	590, 0, 680, 681, 0, 0, 0, 0, 0, 671,
	686, 687, 662, 706, 619, 620, 580, 583, 584, 585,
	591, 633, 634, 645, 648, 676, 675, 674, 677, 682,
	702, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 121, 132, 197, 707, 256,
	171, 318, 576, 163, 0, 0, 635, 637, 647, 664,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 683, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 441, 0, 0, 0, 165, 438,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 516, 198, 0,
	0, 419, 287, 217, 0, 0, 0, 0, 503, 504,
	0, 0, 0, 0, 0, 0, 1321, 0, 79, 0,
	0, 439, 463, 462, 465, 466, 467, 468, 0, 0,
	146, 464, 469, 498, 499, 1322, 0, 0, 436, 454,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 530, 0,
	453, 0, 0, 448, 449, 450, 455, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 506,
	0, 0, 188, 324, 0, 0, 528, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	513, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	505, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	413, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 517, 529, 523, 525, 524, 521, 522,
	520, 519, 518, 531, 507, 508, 509, 510, 511, 0,
	0, 0, 514, 0, 526, 527, 0, 0, 0, 0,
	470, 471, 472, 473, 474, 478, 479, 483, 484, 492,
	491, 490, 493, 494, 496, 495, 497, 475, 476, 477,
	480, 481, 482, 485, 486, 489, 487, 488, 512, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	34, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 441, 0,
	0, 0, 165, 438, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 516, 198, 0, 0, 419, 287, 217, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 439, 463, 462, 465, 466,
	467, 468, 0, 0, 146, 464, 469, 498, 499, 0,
	0, 0, 436, 454, 0, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 530, 0, 453, 0, 0, 448, 449, 450,
	455, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 506, 0, 0, 188, 324, 0, 0,
	528, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 513, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 505, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 413, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 517, 529, 523,
	525, 524, 521, 522, 520, 519, 518, 531, 507, 508,
	509, 510, 511, 0, 0, 0, 514, 0, 526, 527,
	0, 0, 0, 0, 470, 471, 472, 473, 474, 478,
	479, 483, 484, 492, 491, 490, 493, 494, 496, 495,
	497, 475, 476, 477, 480, 481, 482, 485, 486, 489,
	487, 488, 512, 121, 132, 197, 77, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 441, 0, 0, 0, 165, 438, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 516, 198, 0, 0, 419, 287,
	217, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 439, 463,
	462, 465, 466, 467, 468, 0, 0, 146, 464, 469,
	498, 499, 0, 0, 0, 436, 454, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 451,
	452, 432, 0, 0, 0, 530, 0, 453, 0, 0,
	448, 449, 450, 455, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 506, 0, 0, 188,
	324, 0, 0, 528, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 513, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 505, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 413, 321, 326,
	0, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	517, 529, 523, 525, 524, 521, 522, 520, 519, 518,
	531, 507, 508, 509, 510, 511, 0, 0, 0, 514,
	0, 526, 527, 0, 0, 0, 0, 470, 471, 472,
	473, 474, 478, 479, 483, 484, 492, 491, 490, 493,
	494, 496, 495, 497, 475, 476, 477, 480, 481, 482,
	485, 486, 489, 487, 488, 512, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 441, 0, 0, 0, 165, 438,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 516, 198, 0,
	0, 419, 287, 217, 0, 0, 0, 0, 503, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	822, 439, 463, 462, 465, 466, 467, 468, 0, 0,
	146, 464, 469, 498, 499, 0, 0, 0, 436, 454,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 451, 452, 0, 0, 0, 0, 530, 0,
	453, 0, 0, 448, 449, 450, 455, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 506,
	0, 0, 188, 324, 0, 0, 528, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	513, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	505, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	413, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 517, 529, 523, 525, 524, 521, 522,
	520, 519, 518, 531, 507, 508, 509, 510, 511, 0,
	0, 0, 514, 0, 526, 527, 0, 0, 0, 0,
	470, 471, 472, 473, 474, 478, 479, 483, 484, 492,
	491, 490, 493, 494, 496, 495, 497, 475, 476, 477,
	480, 481, 482, 485, 486, 489, 487, 488, 512, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 165, 438, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	516, 198, 0, 0, 419, 287, 217, 0, 0, 0,
	0, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 439, 463, 462, 465, 466, 467,
	468, 0, 0, 146, 464, 469, 498, 499, 0, 0,
	0, 436, 454, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 451, 452, 1209, 0, 0,
	0, 530, 0, 453, 0, 0, 448, 449, 450, 455,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 506, 0, 0, 188, 324, 0, 0, 528,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 513, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 505, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 413, 321, 326, 0, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 517, 529, 523, 525,
	524, 521, 522, 520, 519, 518, 531, 507, 508, 509,
	510, 511, 0, 0, 0, 514, 0, 526, 527, 0,
	0, 0, 0, 470, 471, 472, 473, 474, 478, 479,
	483, 484, 492, 491, 490, 493, 494, 496, 495, 497,
	475, 476, 477, 480, 481, 482, 485, 486, 489, 487,
	488, 512, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 165, 438, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 516, 198, 0, 0, 419, 287, 217,
	0, 0, 0, 0, 503, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 439, 463, 1253,
	465, 466, 467, 468, 0, 0, 146, 464, 469, 498,
	499, 0, 0, 0, 436, 454, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 451, 452,
	1209, 0, 0, 0, 530, 0, 453, 0, 0, 448,
	449, 450, 455, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 506, 0, 0, 188, 324,
	0, 0, 528, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 513, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 505, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 413, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 517,
	529, 523, 525, 524, 521, 522, 520, 519, 518, 531,
	507, 508, 509, 510, 511, 0, 0, 0, 514, 0,
	526, 527, 0, 0, 0, 0, 470, 471, 472, 473,
	474, 478, 479, 483, 484, 492, 491, 490, 493, 494,
	496, 495, 497, 475, 476, 477, 480, 481, 482, 485,
	486, 489, 487, 488, 512, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 165, 438, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 516, 198, 0, 0,
	419, 287, 217, 0, 0, 0, 0, 503, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	439, 463, 1250, 465, 466, 467, 468, 0, 0, 146,
	464, 469, 498, 499, 0, 0, 0, 436, 454, 0,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 451, 452, 1209, 0, 0, 0, 530, 0, 453,
	0, 0, 448, 449, 450, 455, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 506, 0,
	0, 188, 324, 0, 0, 528, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 513,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 505,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 413,
	321, 326, 0, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 517, 529, 523, 525, 524, 521, 522, 520,
	519, 518, 531, 507, 508, 509, 510, 511, 0, 0,
	0, 514, 0, 526, 527, 0, 0, 0, 0, 470,
	471, 472, 473, 474, 478, 479, 483, 484, 492, 491,
	490, 493, 494, 496, 495, 497, 475, 476, 477, 480,
	481, 482, 485, 486, 489, 487, 488, 512, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 441, 0, 0, 0,
	165, 438, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 516,
	198, 0, 0, 419, 287, 217, 0, 0, 0, 0,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 1126, 439, 463, 462, 465, 466, 467, 468,
	0, 0, 146, 464, 469, 498, 499, 0, 0, 0,
	436, 454, 0, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 451, 452, 0, 0, 0, 0,
	530, 0, 453, 0, 0, 448, 449, 450, 455, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 506, 0, 0, 188, 324, 0, 0, 528, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 513, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 505, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 413, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 517, 529, 523, 525, 524,
	521, 522, 520, 519, 518, 531, 507, 508, 509, 510,
	511, 0, 0, 0, 514, 0, 526, 527, 0, 0,
	0, 0, 470, 471, 472, 473, 474, 478, 479, 483,
	484, 492, 491, 490, 493, 494, 496, 495, 497, 475,
	476, 477, 480, 481, 482, 485, 486, 489, 487, 488,
	512, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 441,
	0, 0, 0, 165, 438, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 516, 198, 0, 0, 419, 287, 217, 0,
	0, 0, 0, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 439, 463, 462, 465,
	466, 467, 468, 0, 0, 146, 464, 469, 498, 499,
	0, 0, 0, 436, 454, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 452, 0,
	0, 0, 0, 530, 0, 453, 0, 0, 448, 449,
	450, 455, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 506, 0, 0, 188, 324, 0,
	0, 528, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 513, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 505, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 413, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 517, 529,
	523, 525, 524, 521, 522, 520, 519, 518, 531, 507,
	508, 509, 510, 511, 0, 0, 0, 514, 0, 526,
	527, 0, 0, 0, 0, 470, 471, 472, 473, 474,
	478, 479, 483, 484, 492, 491, 490, 493, 494, 496,
	495, 497, 475, 476, 477, 480, 481, 482, 485, 486,
	489, 487, 488, 512, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 516, 198, 0, 0, 419,
	287, 217, 0, 0, 0, 0, 503, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 439,
	463, 462, 465, 466, 467, 468, 0, 0, 146, 464,
	469, 498, 499, 0, 0, 0, 0, 454, 0, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	451, 452, 0, 0, 0, 0, 530, 0, 453, 0,
	0, 448, 449, 450, 455, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 506, 0, 0,
	188, 324, 0, 0, 528, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 513, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 505, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 413, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 517, 529, 523, 525, 524, 521, 522, 520, 519,
	518, 531, 507, 508, 509, 510, 511, 1256, 1257, 1258,
	514, 0, 526, 527, 0, 0, 0, 0, 470, 471,
	472, 473, 474, 478, 479, 483, 484, 492, 491, 490,
	493, 494, 496, 495, 497, 475, 476, 477, 480, 481,
	482, 485, 486, 489, 487, 488, 512, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 516, 198,
	0, 0, 419, 287, 217, 0, 0, 0, 0, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 439, 463, 462, 465, 466, 467, 468, 0,
	0, 146, 464, 469, 498, 499, 0, 0, 0, 0,
	454, 0, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 451, 452, 0, 0, 0, 0, 530,
	0, 453, 0, 0, 448, 449, 450, 455, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	506, 0, 0, 188, 324, 0, 0, 528, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 513, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 505, 2362, 242, 263, 199, 303, 254, 312, 313,
	179, 413, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 517, 529, 523, 525, 524, 521,
	522, 520, 519, 518, 531, 507, 508, 509, 510, 511,
	0, 0, 0, 514, 0, 526, 527, 0, 0, 0,
	0, 470, 471, 472, 473, 474, 478, 479, 483, 484,
	492, 491, 490, 493, 494, 496, 495, 497, 475, 476,
	477, 480, 481, 482, 485, 486, 489, 487, 488, 512,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 516, 198, 0, 0, 419, 287, 217, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 822, 439, 463, 462, 465, 466,
	467, 468, 0, 0, 146, 464, 469, 498, 499, 0,
	0, 0, 0, 454, 0, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 452, 0, 0,
	0, 0, 530, 0, 453, 0, 0, 448, 449, 450,
	455, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 506, 0, 0, 188, 324, 0, 0,
	528, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 513, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 505, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 413, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 517, 529, 523,
	525, 524, 521, 522, 520, 519, 518, 531, 507, 508,
	509, 510, 511, 0, 0, 0, 514, 0, 526, 527,
	0, 0, 0, 0, 470, 471, 472, 473, 474, 478,
	479, 483, 484, 492, 491, 490, 493, 494, 496, 495,
	497, 475, 476, 477, 480, 481, 482, 485, 486, 489,
	487, 488, 512, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 516, 198, 0, 0, 419, 287,
	217, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 439, 463,
	462, 465, 466, 467, 468, 0, 0, 146, 464, 469,
	498, 499, 0, 0, 0, 0, 454, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 451,
	452, 0, 0, 0, 0, 530, 0, 453, 0, 0,
	448, 449, 450, 455, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 506, 0, 0, 188,
	324, 0, 0, 528, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 513, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 505, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 413, 321, 326,
	0, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 419, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 1900, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	517, 529, 523, 525, 524, 521, 522, 520, 519, 518,
	531, 507, 508, 509, 510, 511, 0, 0, 0, 514,
	0, 526, 527, 0, 0, 0, 0, 470, 471, 472,
	473, 474, 478, 479, 483, 484, 492, 491, 490, 493,
	494, 496, 495, 497, 475, 476, 477, 480, 481, 482,
	485, 486, 489, 487, 488, 512, 121, 132, 197, 0,
	256, 171, 318, 413, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 1299, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 0, 198, 0,
	0, 419, 287, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 1303, 0, 0, 0, 0,
	0, 119, 0, 392, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 396, 397, 401, 402,
	406, 407, 416, 415, 414, 417, 418, 421, 420, 422,
	398, 399, 400, 403, 404, 405, 408, 409, 412, 410,
	411, 125, 0, 0, 0, 0, 175, 218, 136, 0,
	0, 0, 188, 324, 0, 1302, 0, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	0, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	0, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	413, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 419, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 1898, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 396, 397, 401, 402, 406, 407, 416,
	415, 414, 417, 418, 421, 420, 422, 398, 399, 400,
	403, 404, 405, 408, 409, 412, 410, 411, 0, 121,
	132, 197, 0, 256, 171, 318, 413, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 1299, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	0, 198, 0, 0, 419, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1301, 1303, 0,
	0, 0, 0, 0, 119, 0, 392, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 396,
	397, 401, 402, 406, 407, 416, 415, 414, 417, 418,
	421, 420, 422, 398, 399, 400, 403, 404, 405, 408,
	409, 412, 410, 411, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 0, 0, 188, 324, 0, 1302, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 1297, 263, 199, 303, 254,
	312, 313, 179, 413, 321, 326, 0, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 396, 397, 401, 402,
	406, 407, 416, 415, 414, 417, 418, 421, 420, 422,
	398, 399, 400, 403, 404, 405, 408, 409, 412, 410,
	411, 0, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 844,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 0, 198, 0, 0, 419, 287, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 845, 0, 848,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 841, 840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 0, 0, 0, 188, 324,
	0, 0, 0, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 0, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 0, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 413, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 396,
	397, 401, 402, 406, 407, 416, 415, 414, 417, 418,
	421, 420, 422, 398, 399, 400, 403, 404, 405, 408,
	409, 412, 410, 411, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 195, 1577, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 0, 198, 0, 0,
	419, 287, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 392, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 0, 0,
	0, 188, 324, 0, 0, 0, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 0,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 0,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 413,
	321, 326, 0, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 396, 397, 401, 402, 406, 407, 416, 415,
	414, 417, 418, 421, 420, 422, 398, 399, 400, 403,
	404, 405, 408, 409, 412, 410, 411, 0, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 0,
	198, 0, 0, 419, 287, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 392, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 0, 0, 0, 188, 324, 0, 0, 0, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 0, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 0, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 413, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 396, 397, 401, 402, 406,
	407, 416, 415, 414, 417, 418, 421, 420, 422, 398,
	399, 400, 403, 404, 405, 408, 409, 412, 410, 411,
	0, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 419, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 845, 0, 848, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 413, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 396, 397,
	401, 402, 406, 407, 416, 415, 414, 417, 418, 421,
	420, 422, 398, 399, 400, 403, 404, 405, 408, 409,
	412, 410, 411, 0, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 419,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 413, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 396, 397, 401, 402, 406, 407, 416, 415, 414,
	417, 418, 421, 420, 422, 398, 399, 400, 403, 404,
	405, 408, 409, 412, 410, 411, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 858,
	857, 867, 868, 860, 861, 862, 863, 864, 865, 866,
	859, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 34, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 1294, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 138, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 204, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 223, 139, 184, 286, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 132, 197, 77, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	244, 245, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 994, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 0,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 993, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 0, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 311, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 311,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 138, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 204, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 223, 139, 184, 286, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 244, 245, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 195, 0, 0,
	156, 203, 201, 0, 0, 0, 238, 296, 0, 0,
	0, 0, 198, 0, 0, 0, 287, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	175, 218, 136, 0, 0, 0, 188, 324, 0, 0,
	0, 252, 0, 292, 178, 196, 140, 122, 134, 150,
	177, 228, 261, 271, 0, 0, 0, 0, 0, 157,
	0, 264, 236, 314, 0, 0, 242, 263, 199, 303,
	254, 312, 313, 179, 0, 321, 326, 0, 284, 166,
	0, 126, 0, 249, 161, 192, 0, 0, 0, 154,
	0, 0, 0, 283, 301, 141, 298, 216, 222, 151,
	153, 152, 135, 278, 300, 145, 155, 288, 267, 293,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 295, 311, 147, 275, 276, 327, 262, 129, 309,
	291, 214, 189, 190, 128, 0, 259, 164, 174, 159,
	231, 0, 173, 251, 306, 307, 158, 329, 137, 320,
	131, 138, 319, 225, 0, 224, 322, 302, 310, 215,
	207, 0, 130, 308, 213, 206, 194, 169, 181, 247,
	202, 248, 182, 220, 219, 221, 204, 208, 0, 0,
	0, 289, 317, 330, 143, 0, 277, 299, 0, 0,
	144, 172, 168, 246, 223, 139, 184, 286, 193, 200,
	258, 328, 235, 265, 148, 316, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 132, 197, 0, 256, 171, 318,
	0, 163, 0, 0, 0, 0, 0, 0, 123, 124,
	133, 142, 149, 162, 167, 170, 176, 180, 183, 185,
	186, 187, 191, 205, 209, 210, 211, 212, 226, 227,
	229, 230, 233, 234, 237, 239, 240, 241, 243, 244,
	245, 250, 253, 255, 257, 260, 266, 268, 269, 270,
	272, 273, 274, 279, 280, 281, 282, 290, 294, 304,
	305, 315, 323, 325, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 963, 165, 0, 0, 0, 0,
	195, 0, 0, 156, 203, 201, 0, 0, 0, 238,
	296, 0, 0, 0, 0, 198, 0, 0, 0, 287,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 175, 218, 136, 0, 0, 0, 188,
	324, 0, 0, 0, 252, 0, 292, 178, 196, 140,
	122, 134, 150, 177, 228, 261, 271, 0, 0, 0,
	0, 0, 157, 0, 264, 236, 314, 0, 0, 242,
	263, 199, 303, 254, 312, 313, 179, 0, 321, 326,
	0, 284, 166, 0, 126, 0, 249, 161, 192, 0,
	0, 0, 154, 0, 0, 0, 283, 301, 141, 298,
	216, 222, 151, 153, 152, 135, 278, 300, 145, 155,
	288, 267, 293, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 295, 311, 147, 275, 276, 327,
	262, 129, 309, 291, 214, 189, 190, 128, 0, 259,
	164, 174, 159, 231, 0, 173, 251, 306, 307, 158,
	329, 137, 320, 131, 138, 319, 225, 0, 224, 322,
	302, 310, 215, 207, 0, 130, 308, 213, 206, 194,
	169, 181, 247, 202, 248, 182, 220, 219, 221, 204,
	208, 0, 0, 0, 289, 317, 330, 143, 0, 277,
	299, 0, 0, 144, 172, 168, 246, 223, 139, 184,
	286, 193, 200, 258, 328, 235, 265, 148, 316, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 132, 197, 0,
	256, 171, 318, 0, 163, 0, 0, 0, 0, 0,
	0, 123, 124, 133, 142, 149, 162, 167, 170, 176,
	180, 183, 185, 186, 187, 191, 205, 209, 210, 211,
	212, 226, 227, 229, 230, 233, 234, 237, 239, 240,
	241, 243, 244, 245, 250, 253, 255, 257, 260, 266,
	268, 269, 270, 272, 273, 274, 279, 280, 281, 282,
	290, 294, 304, 305, 315, 323, 325, 297, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 195, 0, 0, 156, 203, 201, 0,
	0, 0, 238, 296, 0, 0, 0, 0, 198, 0,
	0, 0, 287, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 175, 218, 136, 0,
	0, 0, 188, 324, 0, 0, 0, 252, 0, 292,
	178, 196, 140, 122, 134, 150, 177, 228, 261, 271,
	0, 0, 0, 0, 0, 157, 0, 264, 236, 314,
	0, 0, 242, 263, 199, 303, 254, 312, 313, 179,
	0, 321, 326, 0, 284, 166, 0, 126, 0, 249,
	161, 192, 0, 0, 0, 154, 0, 0, 0, 283,
	301, 141, 298, 216, 222, 151, 153, 152, 135, 278,
	300, 145, 155, 288, 267, 293, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 295, 311, 147,
	275, 276, 327, 262, 129, 309, 291, 214, 189, 190,
	128, 0, 259, 164, 174, 159, 231, 0, 173, 251,
	306, 307, 158, 329, 137, 320, 131, 138, 319, 225,
	0, 224, 322, 302, 310, 215, 207, 0, 130, 308,
	213, 206, 194, 169, 181, 247, 202, 248, 182, 220,
	219, 221, 204, 208, 0, 0, 0, 289, 317, 330,
	143, 0, 277, 299, 0, 0, 144, 172, 168, 246,
	223, 139, 184, 286, 193, 200, 258, 328, 235, 265,
	148, 316, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
	132, 197, 0, 256, 171, 318, 0, 163, 0, 0,
	0, 0, 0, 0, 123, 124, 133, 142, 149, 162,
	167, 170, 176, 180, 183, 185, 186, 187, 191, 205,
	209, 210, 211, 212, 226, 227, 229, 230, 233, 234,
	237, 239, 240, 241, 243, 244, 245, 250, 253, 255,
	257, 260, 266, 268, 269, 270, 272, 273, 274, 279,
	280, 281, 282, 290, 294, 304, 305, 315, 323, 325,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 195, 0, 0, 156,
	203, 201, 0, 0, 0, 238, 296, 0, 0, 0,
	0, 198, 0, 0, 0, 287, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 175,
	218, 136, 0, 116, 0, 188, 324, 0, 0, 0,
	252, 0, 292, 178, 196, 140, 122, 134, 150, 177,
	228, 261, 271, 0, 0, 0, 0, 0, 157, 0,
	264, 236, 314, 0, 0, 242, 263, 199, 303, 254,
	312, 313, 179, 0, 321, 326, 0, 284, 166, 0,
	126, 0, 249, 161, 192, 0, 0, 0, 154, 0,
	0, 0, 283, 301, 141, 298, 216, 222, 151, 153,
	152, 135, 278, 300, 145, 155, 288, 267, 293, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	295, 311, 147, 275, 276, 327, 262, 129, 309, 291,
	214, 189, 190, 128, 0, 259, 164, 174, 159, 231,
	0, 173, 251, 306, 307, 158, 329, 137, 320, 131,
	138, 319, 225, 0, 224, 322, 302, 310, 215, 207,
	0, 130, 308, 213, 206, 194, 169, 181, 247, 202,
	248, 182, 220, 219, 221, 204, 208, 0, 0, 0,
	289, 317, 330, 143, 0, 277, 299, 0, 0, 144,
	172, 168, 246, 223, 139, 184, 286, 193, 200, 258,
	328, 235, 265, 148, 316, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 132, 197, 0, 256, 171, 318, 0,
	163, 0, 0, 0, 0, 0, 0, 123, 124, 133,
	142, 149, 162, 167, 170, 176, 180, 183, 185, 186,
	187, 191, 205, 209, 210, 211, 212, 226, 227, 229,
	230, 233, 234, 237, 239, 240, 241, 243, 244, 245,
	250, 253, 255, 257, 260, 266, 268, 269, 270, 272,
	273, 274, 279, 280, 281, 282, 290, 294, 304, 305,
	315, 323, 325, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 195,
	0, 0, 156, 203, 201, 0, 0, 0, 238, 296,
	0, 0, 0, 0, 198, 0, 0, 0, 287, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 175, 218, 136, 0, 0, 0, 188, 324,
	0, 0, 0, 252, 0, 292, 178, 196, 140, 122,
	134, 150, 177, 228, 261, 271, 0, 0, 0, 0,
	0, 157, 0, 264, 236, 314, 0, 0, 242, 263,
	199, 303, 254, 312, 313, 179, 0, 321, 326, 0,
	284, 166, 0, 126, 0, 249, 161, 192, 0, 0,
	0, 154, 0, 0, 0, 283, 301, 141, 298, 216,
	222, 151, 153, 152, 135, 278, 300, 145, 155, 288,
	267, 293, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 295, 311, 147, 275, 276, 327, 262,
	129, 309, 291, 214, 189, 190, 128, 0, 259, 164,
	174, 159, 231, 0, 173, 251, 306, 307, 158, 329,
	137, 320, 131, 138, 319, 225, 0, 224, 322, 302,
	310, 215, 207, 0, 130, 308, 213, 206, 194, 169,
	181, 247, 202, 248, 182, 220, 219, 221, 204, 208,
	0, 0, 0, 289, 317, 330, 143, 0, 277, 299,
	0, 0, 144, 172, 168, 246, 223, 139, 184, 286,
	193, 200, 258, 328, 235, 265, 148, 316, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 132, 197, 0, 256,
	171, 318, 0, 163, 0, 0, 0, 0, 0, 0,
	123, 124, 133, 142, 149, 162, 167, 170, 176, 180,
	183, 185, 186, 187, 191, 205, 209, 210, 211, 212,
	226, 227, 229, 230, 233, 234, 237, 239, 240, 241,
	243, 244, 245, 250, 253, 255, 257, 260, 266, 268,
	269, 270, 272, 273, 274, 279, 280, 281, 282, 290,
	294, 304, 305, 315, 323, 325, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 195, 0, 0, 156, 203, 201, 0, 0,
	0, 238, 296, 0, 0, 0, 0, 198, 0, 0,
	0, 287, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 175, 218, 136, 0, 0,
	0, 188, 324, 0, 0, 0, 252, 0, 292, 178,
	196, 140, 122, 134, 150, 177, 228, 261, 271, 0,
	0, 0, 0, 0, 157, 0, 264, 236, 314, 0,
	0, 242, 263, 199, 303, 254, 312, 313, 179, 0,
	321, 326, 0, 284, 166, 0, 126, 0, 249, 161,
	192, 0, 0, 0, 154, 0, 0, 0, 283, 301,
	141, 298, 216, 222, 151, 153, 152, 135, 278, 300,
	145, 155, 288, 267, 293, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 295, 311, 147, 275,
	276, 327, 262, 129, 309, 291, 214, 189, 190, 128,
	0, 259, 164, 174, 159, 231, 0, 173, 251, 306,
	307, 158, 329, 137, 320, 131, 138, 319, 225, 0,
	224, 322, 302, 310, 215, 207, 0, 130, 308, 213,
	206, 194, 169, 181, 247, 202, 248, 182, 220, 219,
	221, 204, 208, 0, 0, 0, 289, 317, 330, 143,
	0, 277, 299, 0, 0, 144, 172, 168, 246, 223,
	139, 184, 286, 193, 200, 258, 328, 235, 265, 148,
	316, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 132,
	197, 0, 256, 171, 318, 0, 163, 0, 0, 0,
	0, 0, 0, 123, 124, 133, 142, 149, 162, 167,
	170, 176, 180, 183, 185, 186, 187, 191, 205, 209,
	210, 211, 212, 226, 227, 229, 230, 233, 234, 237,
	239, 240, 241, 243, 244, 245, 250, 253, 255, 257,
	260, 266, 268, 269, 270, 272, 273, 274, 279, 280,
	281, 282, 290, 294, 304, 305, 315, 323, 325, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 195, 0, 0, 156, 203,
	201, 0, 0, 0, 238, 296, 0, 0, 0, 0,
	198, 0, 0, 0, 287, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 175, 218,
	136, 0, 0, 0, 188, 324, 0, 0, 0, 252,
	0, 292, 178, 196, 140, 122, 134, 150, 177, 228,
	261, 271, 0, 0, 0, 0, 0, 157, 0, 264,
	236, 314, 0, 0, 242, 263, 199, 303, 254, 312,
	313, 179, 0, 321, 326, 0, 284, 166, 0, 126,
	0, 249, 161, 192, 0, 0, 0, 154, 0, 0,
	0, 283, 301, 141, 298, 216, 222, 151, 153, 152,
	135, 278, 300, 145, 155, 288, 267, 293, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 295,
	311, 147, 275, 276, 327, 262, 129, 309, 291, 214,
	189, 190, 128, 0, 259, 164, 174, 159, 231, 0,
	173, 251, 306, 307, 158, 329, 137, 320, 131, 138,
	319, 225, 0, 224, 322, 302, 310, 215, 207, 0,
	130, 308, 213, 206, 194, 169, 181, 247, 202, 248,
	182, 220, 219, 221, 204, 208, 0, 0, 0, 289,
	317, 330, 143, 0, 277, 299, 0, 0, 144, 172,
	168, 246, 223, 139, 184, 286, 193, 200, 258, 328,
	235, 265, 148, 316, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 132, 197, 0, 256, 171, 318, 0, 163,
	0, 0, 0, 0, 0, 0, 123, 124, 133, 142,
	149, 162, 167, 170, 176, 180, 183, 185, 186, 187,
	191, 205, 209, 210, 211, 212, 226, 227, 229, 230,
	233, 234, 237, 239, 240, 241, 243, 244, 245, 250,
	253, 255, 257, 260, 266, 268, 269, 270, 272, 273,
	274, 279, 280, 281, 282, 290, 294, 304, 305, 315,
	323, 325, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 195, 0,
	0, 156, 203, 201, 0, 0, 0, 238, 296, 0,
	0, 0, 0, 198, 0, 0, 0, 287, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 175, 218, 136, 0, 0, 0, 188, 324, 0,
	0, 0, 252, 0, 292, 178, 196, 140, 122, 134,
	150, 177, 228, 261, 271, 0, 0, 0, 0, 0,
	157, 0, 264, 236, 314, 0, 0, 242, 263, 199,
	303, 254, 312, 313, 179, 0, 321, 326, 0, 284,
	166, 0, 126, 0, 249, 161, 192, 0, 0, 0,
	154, 0, 0, 0, 283, 301, 141, 298, 216, 222,
	151, 153, 152, 135, 278, 300, 145, 155, 288, 267,
	293, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 295, 311, 147, 275, 276, 327, 262, 129,
	309, 291, 214, 189, 190, 128, 0, 259, 164, 174,
	159, 231, 0, 173, 251, 306, 307, 158, 329, 137,
	320, 131, 554, 319, 225, 0, 224, 322, 302, 310,
	215, 207, 0, 130, 308, 213, 206, 194, 169, 181,
	247, 202, 248, 182, 220, 219, 221, 550, 208, 0,
	0, 0, 289, 317, 330, 143, 0, 277, 299, 0,
	0, 144, 172, 168, 246, 555, 553, 544, 545, 193,
	200, 258, 328, 235, 265, 148, 316, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 132, 197, 0, 256, 171,
	318, 0, 163, 0, 0, 0, 0, 0, 0, 123,
	124, 133, 142, 149, 162, 167, 170, 176, 180, 183,
	185, 186, 187, 191, 205, 209, 210, 211, 212, 226,
	227, 229, 230, 233, 234, 237, 239, 240, 241, 243,
	551, 552, 250, 253, 255, 257, 260, 266, 268, 269,
	270, 272, 273, 274, 279, 280, 281, 282, 290, 294,
	304, 305, 315, 323, 325, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 195, 0, 0, 156, 203, 201, 0, 0, 0,
	238, 296, 0, 0, 0, 0, 198, 0, 0, 0,
	287, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 175, 218, 136, 0, 0, 0,
	188, 324, 0, 0, 0, 252, 0, 292, 178, 196,
	140, 122, 134, 150, 177, 228, 261, 271, 0, 0,
	0, 0, 0, 157, 0, 264, 236, 314, 0, 0,
	242, 263, 199, 303, 254, 312, 313, 179, 0, 321,
	326, 0, 284, 166, 0, 126, 0, 249, 161, 192,
	0, 0, 0, 154, 0, 0, 0, 283, 301, 141,
	298, 216, 222, 151, 153, 152, 135, 278, 300, 145,
	155, 288, 267, 293, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 295, 988, 147, 275, 276,
	327, 262, 129, 309, 291, 214, 189, 190, 128, 0,
	259, 164, 174, 159, 231, 0, 173, 251, 306, 307,
	158, 329, 137, 320, 131, 138, 319, 225, 0, 224,
	322, 302, 310, 215, 207, 0, 130, 308, 213, 206,
	194, 169, 181, 247, 202, 248, 182, 220, 219, 221,
	204, 208, 0, 0, 0, 289, 317, 330, 143, 0,
	277, 299, 0, 0, 144, 172, 168, 246, 223, 139,
	184, 286, 193, 200, 258, 328, 235, 265, 148, 316,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 132, 197,
	0, 256, 171, 318, 0, 163, 0, 0, 0, 0,
	0, 0, 123, 124, 133, 142, 149, 162, 167, 170,
	176, 180, 183, 185, 186, 187, 191, 205, 209, 210,
	211, 212, 226, 227, 229, 230, 233, 234, 237, 239,
	240, 241, 243, 244, 245, 250, 253, 255, 257, 260,
	266, 268, 269, 270, 272, 273, 274, 279, 280, 281,
	282, 290, 294, 304, 305, 315, 323, 325, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 195, 0, 0, 156, 203, 201,
	0, 0, 0, 238, 296, 0, 0, 0, 0, 198,
	0, 0, 0, 287, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 175, 218, 136,
	0, 0, 0, 188, 324, 0, 0, 0, 252, 0,
	292, 178, 196, 140, 122, 134, 150, 177, 228, 261,
	271, 0, 0, 0, 0, 0, 157, 0, 264, 236,
	314, 0, 0, 242, 263, 199, 303, 254, 312, 313,
	179, 0, 321, 326, 0, 284, 166, 0, 126, 0,
	249, 161, 192, 0, 0, 0, 154, 0, 0, 0,
	283, 301, 141, 298, 216, 222, 151, 153, 152, 135,
	278, 300, 145, 155, 288, 267, 293, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 295, 541,
	147, 275, 276, 327, 262, 129, 309, 291, 214, 189,
	190, 128, 0, 259, 164, 174, 159, 231, 0, 173,
	251, 306, 307, 158, 329, 137, 320, 131, 554, 319,
	225, 0, 224, 322, 302, 310, 215, 207, 0, 130,
	308, 213, 206, 194, 169, 181, 247, 202, 248, 182,
	220, 219, 221, 550, 208, 0, 0, 0, 289, 317,
	330, 143, 0, 277, 299, 0, 0, 144, 172, 168,
	246, 555, 553, 544, 545, 193, 200, 258, 328, 235,
	265, 148, 316, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 132, 197, 0, 256, 171, 318, 0, 163, 0,
	0, 0, 0, 0, 0, 123, 124, 133, 142, 149,
	162, 167, 170, 176, 180, 183, 185, 186, 187, 191,
	205, 209, 210, 211, 212, 226, 227, 229, 230, 233,
	234, 237, 239, 240, 241, 243, 551, 552, 250, 253,
	255, 257, 260, 266, 268, 269, 270, 272, 273, 274,
	279, 280, 281, 282, 290, 294, 304, 305, 315, 323,
	325,
}
var yyPact = [...]int{

	224, -1000, -301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1525, -1000, -1000, -1000, -1000, -1000, -1000,
	686, 544, -1000, -1000, 451, 230, 23333, 450, 428, 24199,
	-1000, -1000, -1000, 152, 402, 24199, -1000, -1000, -1000, 254,
	369, 1131, 1422, 1130, 60, -75, -77, -1000, 1561, 1563,
	-1000, -1000, 422, 65, -1000, -1000, -1000, 19002, 183, -1000,
	-1000, 1498, 1512, 1318, -1000, 12507, 286, 286, 22900, 25931,
	-1000, 1559, 24199, 11206, -1000, 442, 24199, -159, 393, 393,
	235, 449, -1000, 640, -1000, -1000, -1000, -1000, 24199, 395,
	23766, 395, 395, 395, 395, 395, 24199, -1000, 562, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 24199, 1129, 1438, 713, 238, 8154, 8154, -1000, 724,
	-1000, 170, 167, 223, 156, 49, 731, 1191, 1498, 1498,
	8154, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 239, 416,
	275, 183, 631, -1000, -1000, -1000, -1000, -1000, 1437, 1436,
	919, 1434, 411, 1433, 1240, -36, -1000, 1121, 24199, -1000,
	-1000, 1252, 1484, 445, 24199, -1000, -104, 1185, -1000, 1229,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 908, 1442, 801, 15105, 1379, -1000, -1000,
	769, 1546, -1000, 18136, 549, -1000, 15105, 2806, 1191, -1000,
	-1000, 1191, -1000, -1000, -1000, 513, -1000, -1000, 16837, 16837,
	16837, 16837, 16837, 16837, 16837, 16837, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, -1000, -1000,
	1191, -1000, 12074, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1191, 1191, 15105, 1191, 1191, 1191, 1191,
	1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191,
	1191, 1191, 22467, 21601, 24199, 1184, 1144, -1000, -1000, 537,
	1181, -137, 25498, -1000, -1000, -1000, -1000, 24632, 21168, 624,
	-1000, -1000, -1000, -1000, 1432, -1000, -1000, 533, -1000, 1525,
	-1000, -1000, 1128, 261, -1000, 4137, 4647, -1000, -1000, -1000,
	1239, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23766,
	1476, 403, 1120, 746, 1115, 1095, 1091, 393, 1078, 1180,
	410, 24199, 1461, 1258, 24199, 1075, 1066, 1056, 1048, -1000,
	10770, -1000, 8154, 713, -1000, 915, 15105, 393, 393, 8154,
	8154, 8154, 24199, 24199, 24199, -1000, -1000, -1000, -1000, 24199,
	-1000, -1000, 713, 713, 8154, 713, 705, 1545, 705, -1000,
	705, -1000, -1000, 15105, -1000, 16837, 591, -1000, -1000, -1000,
	-1000, 1031, 236, -1000, -1000, -1000, -1000, -1000, -1000, 1029,
	411, 411, -1000, 913, 411, 1173, -1000, 620, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	411, -1000, 14672, -298, -1000, -1000, 1177, -1000, 257, 1318,
	-1000, -1000, 183, -1000, -1000, 24199, 8154, -108, 19002, 1191,
	9462, -1000, -1000, -1000, 1555, 599, 1198, -1000, -1000, 1176,
	-1000, 775, 525, 905, 1325, -1000, -1000, -1000, 24199, -1000,
	15105, 15105, 755, -1000, 19435, -1000, -1000, -1000, -1000, 9026,
	606, 16837, 826, 740, 16837, 16837, 16837, 16837, 16837, 16837,
	16837, 16837, 16837, 16837, 16837, 16837, 16837, 16837, 16837, 880,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1024, -1000,
	183, 928, 928, 580, 580, 580, 580, 580, 580, 580,
	20301, 1468, 13373, 13373, 13373, 1468, 908, 908, 13373, 13373,
	13373, 13373, 13373, 13373, 1468, 1468, 13373, 908, 908, 908,
	908, 13373, 13373, 13373, 13373, 1468, 13373, 13373, 13373, 1468,
	908, 1119, 652, 12074, 13373, 13373, 13373, 908, 15105, 15105,
	14239, 13806, 15538, 13373, 13373, 1468, 723, 652, 24632, -1000,
	-1000, 16404, -1000, -1000, -1000, -1000, -1000, 908, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23766, 23766, 13373, 13373,
	13373, 13373, 217, 24199, -1000, 1193, 1230, -1000, -1000, -1000,
	1475, 20735, 17703, -1000, 217, 1153, 21601, 24199, -1000, -1000,
	21601, 24199, 8590, 25065, 1167, -1000, -90, -110, -137, -1000,
	-1000, 577, -1000, -1000, -1000, 11640, -1000, 9898, 1498, 1318,
	5974, 10334, -1000, 4647, 1239, -1000, -50, -1000, -1000, -1000,
	1207, -1000, 1207, 196, 32, 1207, 1207, 1207, 1207, 1207,
	-5, -5, -5, -5, 20, -1000, -1000, -1000, -1000, -1000,
	1236, 1235, -1000, 1207, 1207, 1207, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1231, 192, 1211, 1211, 1211, 1211,
	1211, 268, 268, -1000, 15105, 1243, -1000, 24199, 8154, 1460,
	8154, 162, 1233, 24199, -1000, 24199, 24199, 523, -1000, 24199,
	1175, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 652, 1018, 1016, -1000, -1000, -1000, -1000, -1000,
	-1000, 721, -1000, -1000, -1000, -1000, 713, 24199, 24199, 24199,
	1469, 713, 652, 667, 908, -1000, -1000, 1014, -1000, 1173,
	1173, -1000, 1173, 411, 928, 1173, -1000, 1102, 1451, 912,
	24199, -1000, 19002, -37, -1000, -122, 1468, 908, 141, -1000,
	-1000, -1000, -1000, -1000, 190, 1055, 517, -1000, 1311, 801,
	801, 15105, -1000, -1000, -1000, 9898, 1489, -1000, 1338, 1335,
	1261, -1000, -1000, 606, 659, -1000, -1000, 814, -1000, -1000,
	-1000, -1000, 516, 1191, -1000, 2934, -1000, -1000, -1000, -1000,
	826, 16837, 16837, 16837, 667, 2934, 2984, 1065, 2079, 580,
	707, 707, 578, 578, 578, 578, 578, 692, 692, -1000,
	-1000, -1000, 908, -1000, -1000, -1000, 13373, 1084, -1000, -1000,
	652, 500, 1084, 1084, 13373, -174, -174, 908, 1084, 1084,
	1084, 908, 1084, 13373, 13373, 1084, -174, -174, -174, -174,
	1084, 1084, 1084, 1084, 13373, 1084, 1084, 1084, 13373, -1000,
	15105, -1000, 908, 1084, 1084, 1084, -1000, 773, 872, 639,
	1543, 1084, 621, 1542, 1084, 2286, 16837, 16837, 16837, 1084,
	1084, 13373, 704, -1000, 15105, 908, -1000, 821, 1171, 1170,
	1084, 908, 1169, 1084, 1084, 181, 1191, -1000, 9898, 21601,
	21601, 21601, 21601, 21601, -1000, 1293, 1281, -1000, 1301, 1277,
	1331, 19002, 1100, 908, 148, 20735, -1000, 1191, -1000, 18569,
	535, 441, 435, 434, 1533, 21601, 1161, -1000, 1161, -1000,
	497, -1000, -1000, 24632, -137, -92, -1000, -1000, 1167, -1000,
	893, -1000, -1000, 652, -1000, 482, 1442, 1468, 1166, 5538,
	-1000, -1000, -1000, -1000, 261, -1000, -1000, -1000, 1232, 3480,
	-1000, 1392, 550, 557, 926, 1363, -1000, -1000, 253, -54,
	-1000, -1000, 834, -5, -5, 1207, 1207, 194, 1207, -1000,
	-5, -1000, -1000, -1000, 577, 1430, 577, 577, 577, 577,
	-5, 911, 911, -1000, -1000, -1000, -1000, 833, -1000, 1231,
	-1000, 825, -1000, -1000, -1000, -1000, -1000, -1000, 780, 1255,
	23766, 183, 1465, -1000, -1000, -1000, 1538, -1000, -1000, 486,
	-1000, 406, -1000, -1000, -1000, -1000, 8154, 24199, 8154, 8154,
	1533, 1012, 1006, -1000, -1000, -1000, 705, 713, 1425, -1000,
	-1000, 16837, 157, -1000, -1000, -1000, -1000, 217, 437, -1000,
	-1000, -12, -1000, -1000, 1325, -1000, 1164, -1000, -1000, 647,
	618, 563, 273, 273, -1000, 615, 273, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 211, 1464, 9462, 9462, 1307,
	-1000, -1000, -1000, 24199, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7718, 13373, -1000, 667, 2934, 2905, -1000,
	16837, -1000, 1084, 13373, -174, 7282, -174, -174, 1084, -1000,
	22034, -1000, -174, -174, -174, -174, -174, -174, 1084, 1084,
	-174, -1000, -1000, -1000, -1000, -174, -174, -174, -174, 1084,
	-174, -174, -174, 908, 652, -1000, -1000, -1000, -1000, 436,
	880, 436, 16837, 16837, -1000, 16837, 16837, -1000, -1000, 16837,
	2890, 2861, 2733, -210, -1000, 1199, 657, -1000, 15105, 861,
	-1000, -1000, 16837, 16837, -1000, -1000, -1000, -1000, 1250, 9898,
	1191, 6410, -1000, 23766, 1187, -1000, 617, 616, 1230, 1228,
	1249, 1101, -1000, -1000, -1000, -1000, 1280, -1000, 1269, -1000,
	-1000, 1203, -1000, -1000, 1163, 1191, 23766, 16837, 535, -1000,
	1191, 1191, 1191, 1525, 15105, 1161, -1000, -1000, 589, -1000,
	-1000, -118, -145, -1000, -1000, -1000, 9462, -1000, 5974, -1000,
	5974, -1000, 19868, 276, 550, 249, -1000, 926, -1000, -1000,
	926, -1000, -1000, -1000, 1223, -1000, 753, -1000, -1000, -1000,
	-1000, -1000, 16837, 1554, -1000, 1388, -1000, 1382, 910, -1000,
	-1000, 1148, 577, 577, -5, -1000, -1000, 1207, -1000, 577,
	-1000, 613, -1000, -1000, -1000, -1000, 577, 1072, -1000, 1070,
	1162, -1000, 1060, 62, 24199, -1000, -1000, -1000, 1248, -1000,
	-1000, -1000, 1137, 1159, -1000, 4137, 1001, 999, 994, 24199,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 713, -1000, 16837,
	2934, -1000, -1000, -5, 24199, -1000, 1261, 141, -1000, 4536,
	-1000, 926, 499, -1000, -1000, 282, -1000, 1363, -1000, 3881,
	992, -1000, 17466, 17033, 23766, 1381, 1380, 963, 24199, 23766,
	-1000, -1000, 4724, 961, 15105, -1000, 23766, 23766, 1191, 479,
	-1000, -1000, -1000, 1124, 12507, -1000, -1000, 908, -1000, 16837,
	2934, -174, -1000, -1000, -1000, -1000, 476, -1000, -1000, -174,
	-1000, 370, -1000, -1000, -1000, -1000, -1000, -1000, -174, -174,
	-1000, -1000, -1000, -1000, -1000, -174, -1000, -1000, -1000, -1000,
	908, 1207, 1207, -1000, 1207, 1211, -1000, 1207, 51, 1207,
	26, 908, 908, 2623, 2513, 2480, 1872, 821, 16837, 16837,
	16837, 1191, -170, -1000, 652, 15105, 2451, 2425, -1000, 1443,
	1146, 1157, -1000, -1000, 12940, 908, 1332, 1055, -1000, 19002,
	1053, -1000, 1525, 9898, 15105, 15105, -1000, -1000, 15105, 1210,
	-1000, 15105, -1000, -1000, -1000, -1000, 23766, 140, -1000, 15105,
	1053, 804, -1000, 23766, 23766, 23766, 1498, 652, -1000, -1000,
	-1000, -1000, 5538, -1000, 1045, -1000, 1207, 1207, 1367, -1000,
	1363, 926, -1000, -1000, -1000, 23766, -1000, 2934, -112, -1000,
	-1000, -1000, -1000, -1000, -1000, 577, -1000, -1000, -1000, -1000,
	-1000, -5, 907, -5, 819, -1000, 806, -1000, -1000, -246,
	1206, -1000, 183, 24199, 72, 486, -1000, 4137, 4137, 4137,
	-1000, -1000, 2934, -72, -1000, -1000, -1000, 4724, 258, 4137,
	4137, -1000, 1243, 550, 1350, 249, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 950, -1000, 522, -1000, 405, 258, 4724,
	652, 564, 1448, -1000, 9462, 1531, 21601, -1000, -1000, -1000,
	2934, -1000, 6846, -1000, 908, 1509, -1000, -1000, -1000, -1000,
	-1000, 177, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16837, 16837, 16837, 16837, -1000, 821, 821, 821, 16837, 908,
	900, 652, 16837, 16837, 1346, -1000, 1191, -1000, -1000, 1191,
	189, -1000, 23766, 1498, -1000, 652, 652, 652, 23766, 652,
	1043, -1000, 1191, 17270, -1000, 19002, 1041, 1041, 1041, -1000,
	507, 19868, 1457, 1457, -1000, -1000, 1039, -1000, -1000, 577,
	-1000, 577, 1133, 959, -1000, 19868, -1000, 1495, -1000, 72,
	-1000, 898, 114, 121, -1000, 113, 110, 108, 107, 105,
	-1000, -1000, -1000, -1000, 1416, 1412, 1195, 943, -1000, -1000,
	937, -1000, -1000, 1205, 926, -1000, 1204, -1000, 924, -1000,
	-1000, 23766, -1000, 258, 1445, 1441, 1191, -1000, 1527, 1507,
	1161, 12507, -1000, -1000, -1000, 15105, -1000, -1000, 821, 821,
	821, 821, -1000, -1000, -1000, 64, -1000, -1000, 821, 821,
	1551, -1000, 1157, 1191, -1000, 183, -1000, -1000, 998, -1000,
	23766, -1000, -1000, 535, -1000, -1000, -1000, 507, -1000, 922,
	615, 887, -1000, -1000, -1000, 210, -1000, -1000, -1000, -1000,
	987, -1000, 133, 4593, -1000, -1000, -1000, -1000, -1000, -1000,
	1421, 1420, 126, 277, 1396, 1402, 1506, 21601, -1000, -1000,
	253, 253, 19868, 1243, 19868, -1000, -1000, -1000, 16837, -1000,
	204, -1000, 15105, 15105, 1531, -1000, 1194, -1000, -1000, -1000,
	-1000, 908, 98, -220, -1000, -1000, 9898, 1157, 908, -1000,
	-1000, -1000, -1000, -1000, 789, -1000, 24199, 507, 136, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15105, 15105, 5102,
	4593, -1000, -1000, -1000, -1000, 1203, 782, 1412, 1505, 1410,
	1404, -1000, 882, 1161, 985, 1202, 958, 2934, 955, -1000,
	23766, -1000, 652, 1156, -1000, 652, 1527, -1000, 908, -1000,
	1305, -213, -227, 1152, -1000, -1000, 1197, -1000, 507, 132,
	-1000, 665, 859, 85, 78, 3846, -1000, -1000, -1000, -1000,
	-302, -1000, -1000, 1415, -1000, 854, -1000, 1504, 1502, -1000,
	1531, 507, 19868, 507, -1000, 204, 1329, 15105, -1000, -1000,
	-1000, 1303, -1000, 23766, -1000, 920, 918, 668, -1000, 15105,
	4593, 1494, 1491, 1488, 1440, 9462, 4478, -1000, -1000, 838,
	829, 1527, -1000, 946, -1000, -1000, 200, -1000, -215, 942,
	322, -1000, -1000, 725, 4593, -1000, 799, -303, 285, 183,
	356, 16837, -1000, -1000, -1000, -1000, -1000, -1000, 507, 178,
	-225, 1247, -1000, -1000, -1000, -1000, -1000, -1000, 4593, -1000,
	-304, 4593, 233, -1000, -1000, -1000, 4422, -1000, -1000, -1000,
	-1000, 76, -1000, -1000, 2934, -1000, 1191, -229, 1245, 1200,
	1540, -1000, -309, 4331, -310, 302, 4593, 698, -1000, 15105,
	-1000, 356, -1000, 15971, -1000, -1000, 1550, -1000, 1548, 472,
	472, 3535, 706, 4593, -1000, -311, 299, 4593, -1000, 796,
	-1000, 821, 908, -1000, -1000, -1000, 241, 828, -1000, -1000,
	-1000, 3241, -1000, -312, 4593, -1000, -1000, -1000, -1000, -1000,
	289, 3195, -313, -1000, 287, 4593, -1000,
}
var yyPgo = [...]int{

	0, 1877, 1876, 63, 1875, 155, 1874, 1872, 1868, 19,
	14, 11, 21, 1867, 1683, 1669, 1667, 1658, 1866, 1655,
	1865, 7, 1863, 1861, 1652, 1860, 1859, 1649, 1647, 1645,
	1643, 1858, 1854, 2, 1852, 17, 1851, 5, 113, 124,
	1850, 3, 1846, 1845, 10, 1843, 1842, 1641, 1841, 1838,
	1836, 1835, 75, 1833, 1637, 1635, 1831, 1829, 1628, 1616,
	1826, 1823, 1613, 1602, 1600, 1822, 154, 1821, 1818, 1816,
	168, 81, 118, 1813, 1812, 1811, 84, 54, 1901, 87,
	39, 91, 701, 1810, 18, 45, 1808, 1806, 151, 115,
	1805, 122, 1804, 68, 213, 77, 1803, 1802, 127, 1801,
	1799, 1798, 102, 1797, 1796, 2611, 1795, 1794, 125, 1793,
	53, 33, 41, 1791, 1790, 1789, 1788, 1786, 116, 184,
	1785, 1784, 110, 1783, 57, 1781, 1778, 134, 1777, 1774,
	1772, 104, 38, 1770, 35, 1761, 48, 52, 1760, 30,
	1759, 108, 1757, 1756, 24, 29, 1755, 37, 1754, 42,
	1752, 105, 219, 957, 16, 31, 56, 59, 101, 82,
	23, 28, 111, 80, 66, 34, 1751, 117, 1750, 67,
	121, 103, 107, 119, 1749, 1748, 1746, 887, 1744, 94,
	55, 1742, 98, 758, 126, 95, 1741, 74, 1740, 1739,
	1738, 1737, 90, 88, 1736, 1734, 78, 410, 40, 1477,
	667, 1681, 146, 123, 1733, 36, 1732, 1731, 3064, 92,
	86, 89, 1730, 85, 47, 49, 1729, 1726, 1725, 1724,
	1723, 1722, 62, 1721, 1718, 1709, 1706, 69, 46, 1705,
	1703, 100, 73, 1702, 1701, 1699, 1696, 99, 60, 114,
	1695, 96, 97, 61, 1694, 1692, 1691, 1690, 43, 32,
	1689, 1688, 1687, 83, 76, 1685, 51, 26, 25, 50,
	8, 72, 58, 1675, 13, 1672, 93, 4, 6, 9,
	1663, 1660, 1633, 1626, 1622, 1618, 1611, 65, 1597, 1595,
	44, 1593, 1591, 1589, 27, 1587, 1585, 1579, 112, 106,
	1577, 0, 109, 128, 1572, 1569, 149,
}
var yyR1 = [...]int{

	0, 290, 290, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 65, 3, 3, 8, 4, 4,
	4, 5, 5, 86, 87, 87, 91, 91, 6, 6,
	7, 7, 9, 9, 69, 69, 10, 11, 11, 11,
	11, 293, 293, 100, 100, 98, 98, 99, 99, 162,
	162, 12, 12, 12, 167, 167, 172, 172, 172, 175,
	175, 175, 175, 154, 155, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 2, 275, 275, 276, 276,
	277, 277, 277, 277, 278, 278, 279, 279, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 25, 195,
	195, 45, 45, 46, 46, 46, 150, 150, 150, 13,
	13, 13, 13, 13, 20, 22, 22, 34, 34, 35,
	23, 23, 23, 23, 36, 36, 37, 26, 26, 26,
	26, 26, 26, 43, 43, 43, 42, 42, 41, 41,
	41, 41, 41, 41, 24, 24, 24, 24, 44, 44,
	39, 39, 38, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 27, 27, 27, 27, 27,
	27, 19, 274, 274, 274, 33, 33, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 50, 250, 251, 251, 251, 251,
	251, 251, 251, 251, 238, 238, 239, 215, 215, 215,
	215, 215, 215, 215, 215, 214, 214, 214, 214, 218,
	218, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	217, 217, 217, 217, 217, 217, 217, 217, 219, 219,
	219, 219, 219, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 221, 221,
	221, 221, 221, 221, 221, 221, 237, 237, 222, 222,
	231, 231, 232, 232, 232, 229, 229, 230, 230, 225,
	226, 233, 227, 227, 227, 228, 228, 228, 236, 236,
	236, 236, 223, 240, 240, 260, 260, 259, 259, 258,
	258, 258, 249, 249, 255, 255, 255, 255, 255, 255,
	255, 244, 244, 244, 243, 243, 245, 245, 248, 248,
	257, 257, 256, 256, 241, 241, 241, 261, 261, 261,
	261, 261, 242, 242, 242, 242, 262, 246, 246, 247,
	247, 247, 268, 269, 267, 267, 267, 267, 267, 115,
	115, 115, 252, 252, 252, 253, 253, 253, 254, 254,
	254, 272, 272, 271, 271, 47, 47, 48, 53, 53,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 149, 149, 149,
	49, 193, 193, 266, 266, 265, 263, 263, 264, 264,
	15, 51, 51, 16, 16, 16, 16, 16, 16, 16,
	270, 270, 270, 17, 17, 54, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 83,
	181, 181, 180, 180, 179, 179, 179, 182, 182, 182,
	212, 212, 212, 56, 56, 61, 61, 64, 64, 64,
	62, 63, 28, 29, 29, 29, 29, 30, 194, 194,
	59, 59, 60, 60, 60, 60, 75, 75, 294, 294,
	58, 58, 57, 57, 18, 295, 66, 67, 67, 68,
	68, 68, 185, 185, 72, 72, 72, 70, 70, 70,
	71, 71, 77, 77, 81, 81, 81, 81, 80, 80,
	80, 80, 152, 152, 152, 153, 153, 204, 204, 204,
	203, 203, 203, 203, 85, 85, 88, 88, 89, 89,
	89, 89, 92, 135, 135, 109, 109, 110, 110, 110,
	110, 110, 121, 121, 161, 161, 160, 160, 163, 163,
	90, 90, 90, 90, 95, 95, 96, 96, 97, 97,
	192, 192, 210, 210, 210, 101, 101, 101, 103, 102,
	102, 102, 102, 104, 104, 106, 107, 107, 105, 105,
	108, 111, 111, 111, 111, 112, 112, 82, 82, 82,
	82, 82, 82, 82, 178, 178, 114, 114, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 130, 130,
	130, 130, 130, 130, 116, 116, 116, 116, 116, 116,
	116, 76, 76, 131, 131, 131, 94, 93, 93, 79,
	79, 78, 78, 132, 132, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	125, 125, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 296, 296,
	127, 126, 126, 126, 126, 126, 126, 73, 73, 73,
	73, 73, 211, 211, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 142, 142, 74,
	74, 140, 140, 141, 143, 143, 139, 139, 139, 118,
	118, 118, 118, 118, 118, 118, 118, 120, 120, 120,
	144, 144, 133, 133, 84, 145, 145, 146, 147, 147,
	148, 148, 151, 156, 156, 156, 157, 157, 157, 157,
	122, 122, 158, 158, 158, 117, 117, 117, 117, 117,
	117, 117, 159, 159, 159, 159, 164, 164, 134, 134,
	137, 137, 136, 138, 165, 165, 169, 169, 166, 166,
	170, 170, 170, 170, 173, 173, 174, 174, 174, 171,
	171, 171, 168, 168, 168, 207, 207, 207, 176, 176,
	186, 186, 183, 183, 184, 184, 177, 177, 224, 224,
	189, 189, 189, 189, 189, 189, 189, 189, 191, 191,
	190, 190, 190, 187, 187, 187, 188, 188, 205, 205,
	201, 201, 206, 206, 202, 202, 208, 208, 209, 209,
	273, 273, 234, 234, 283, 283, 235, 235, 284, 284,
	286, 286, 281, 281, 282, 282, 285, 285, 31, 287,
	287, 288, 288, 289, 289, 289, 289, 32, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 291, 292, 196, 197, 197, 197,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 11, 4, 7, 5, 1, 13,
	3, 10, 12, 2, 1, 3, 3, 6, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 2, 3, 3, 11, 7,
	9, 5, 5, 15, 11, 4, 0, 1, 1, 3,
	2, 3, 3, 3, 0, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 3, 3, 3, 3, 4, 0,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 4, 1, 1, 2, 3,
	4, 3, 3, 3, 3, 3, 3, 0, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 3, 3, 2, 4, 5,
	2, 3, 4, 2, 2, 3, 3, 3, 3, 3,
	4, 1, 1, 1, 1, 1, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 2, 1,
	2, 1, 2, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 2, 4, 3, 4, 3, 2,
	2, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 3, 3, 3, 3, 3, 1, 10, 11, 11,
	12, 12, 3, 3, 2, 1, 5, 1, 1, 0,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 0, 2, 0, 2, 1, 1, 5, 1, 3,
	2, 5, 4, 3, 3, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	4, 0, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 5, 6, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 3, 5,
	4, 2, 4, 3, 6, 6, 3, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	2, 2, 2, 2, 2, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 4, 7, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 0, 4, 0, 1, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 3, 3, 1,
	3, 2, 4, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -290, -1, -3, -8, -9, -10, -11, -12, -14,
	-47, -15, -16, -17, -54, -55, -56, -61, -62, -63,
	-59, -58, -57, -18, -24, -27, -19, -65, -28, -29,
	-30, -31, -32, -4, 6, 7, -69, 9, 10, 30,
	-50, 130, -48, -49, 133, 132, 169, 134, 162, 64,
	226, -64, 229, 230, -294, -194, 167, 168, 136, 213,
	214, 20, 37, 231, 233, 31, 32, -5, -86, -6,
	8, 323, 131, 227, 164, 163, 26, 372, -291, 68,
	442, -147, 15, -66, -295, -66, -66, -66, -66, -66,
	-250, -192, 105, 68, 23, -188, 143, 86, 314, 139,
	-195, -186, -187, 190, 200, 44, 150, 149, 140, 140,
	141, 143, 314, 139, 177, 176, 140, -105, -208, 71,
	-199, 369, 153, 384, 385, 131, 187, 226, 240, 234,
	268, 256, 370, 386, 154, 208, 138, 254, 257, 301,
	152, 201, 387, 290, 296, 211, 80, 229, 310, 388,
	155, 205, 207, 206, 195, 212, 36, 165, 252, 245,
	216, 190, 389, 377, 243, 28, 185, 390, 298, 273,
	391, 374, 297, 248, 244, 136, 392, 156, 150, 179,
	393, 274, 278, 394, 302, 395, 396, 397, 142, 238,
	239, 398, 191, 304, 272, 33, 151, 371, 48, 174,
	305, 38, 276, 37, 282, 399, 271, 266, 283, 400,
	401, 402, 403, 270, 237, 265, 203, 53, 137, 280,
	279, 281, 204, 300, 261, 259, 404, 405, 157, 406,
	407, 246, 18, 408, 409, 308, 168, 410, 42, 411,
	412, 413, 172, 414, 415, 416, 299, 275, 277, 189,
	417, 249, 147, 418, 176, 419, 373, 420, 306, 242,
	421, 158, 233, 173, 167, 309, 422, 214, 423, 424,
	425, 159, 426, 427, 428, 230, 231, 292, 209, 429,
	430, 431, 432, 199, 184, 312, 303, 52, 213, 287,
	433, 236, 149, 215, 434, 227, 43, 7, 202, 293,
	210, 200, 263, 175, 435, 436, 250, 251, 269, 235,
	264, 228, 177, 178, 169, 437, 311, 288, 375, 258,
	255, 181, 262, 438, 143, 439, 182, 232, 307, 253,
	289, 140, 123, 257, 301, 130, 291, 292, 298, -244,
	299, 176, 179, -212, 140, -181, 290, 344, 182, 183,
	71, 141, 142, 33, 303, 302, 294, -208, 144, 232,
	-75, 134, 170, -105, -196, -196, -196, -196, -44, 71,
	215, -44, 30, 71, 71, 36, 71, 231, 293, 293,
	6, -68, 5, -177, 143, 145, 228, -87, -91, -210,
	-208, -200, 73, 340, 341, 342, 343, 344, 357, 358,
	359, 345, 346, 360, 361, 362, 347, 348, 363, 364,
	366, 367, 365, 180, 351, 350, 349, 352, 353, 51,
	355, 354, 356, -3, -157, 17, 16, -72, 54, 55,
	-67, -80, 114, -82, -208, -113, 88, -119, 29, 71,
	-199, 24, -118, -200, -114, -139, -138, -94, 123, 124,
	125, 112, 113, 120, 89, 126, -125, -123, -124, -126,
	-128, -129, 73, 72, 81, 74, 75, 76, 77, 82,
	340, 341, 342, 343, 344, 357, 358, 359, 345, 346,
	360, 361, 362, 347, 348, 363, 364, 366, 367, 365,
	351, 350, 349, 352, 353, 355, 354, 356, 83, 84,
	-201, -136, -291, 58, 59, 170, 139, 324, 325, 326,
	327, 328, 368, 160, 332, 91, 47, 313, 322, 321,
	320, 318, 319, 315, 317, 316, 334, 335, 146, 314,
	118, 323, -177, -177, 11, -98, -99, -105, -108, -208,
	-166, 228, -173, -170, 302, 303, -171, -174, -168, -139,
	282, 415, 416, 301, 257, 300, -201, -208, -2, -5,
	6, -105, -251, -239, -242, -202, 155, -262, -201, -198,
	152, 71, -199, 135, 161, 87, 376, 23, 25, 285,
	340, 90, 123, 341, 342, 343, 16, 20, 91, 122,
	324, 344, 130, 62, 315, 317, 313, 314, 291, 29,
	10, 26, 163, 194, 22, 116, 132, 94, 95, 96,
	166, 24, 164, 84, 160, 19, 65, 11, 13, 338,
	339, 14, 146, 145, 107, 192, 141, 60, 8, 126,
	27, 104, 56, 345, 346, 380, 45, 381, 58, 105,
	17, 318, 319, 31, 368, 347, 171, 382, 348, 118,
	197, 63, 50, 88, 82, 34, 85, 66, 86, 15,
	193, 61, 336, 196, 383, 106, 133, 323, 59, 139,
	6, 333, 30, 162, 351, 350, 349, 352, 198, 57,
	326, 327, 353, 440, 140, 93, 334, 335, 144, 83,
	5, 44, 32, 9, 64, 67, 320, 321, 322, 47,
	51, 355, 354, 356, 92, 12, 337, 372, 180, 141,
	-105, 323, -184, 146, -184, 177, 176, 140, 97, -51,
	-105, -183, 146, -201, -183, -183, -183, -183, -183, -105,
	127, -105, 71, 30, -182, 105, 12, 314, 139, 71,
	176, 179, 140, 177, 143, -197, -291, -202, -197, -246,
	11, 107, 180, 180, 180, 181, 180, -180, 293, 295,
	178, 296, 297, 12, -83, 105, -291, -157, -157, -197,
	71, 231, 144, -60, -3, -11, -9, -10, -3, 97,
	30, 30, 73, 51, 30, -39, -38, -40, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	30, -274, 68, -234, 282, 71, -287, -288, -105, -66,
	-7, -5, -291, 21, 22, 140, -105, 306, 69, 23,
	-291, -292, 70, -158, 19, 31, -122, 74, 77, -148,
	-151, -82, -208, 50, -70, 21, 22, 79, 11, -204,
	87, 86, 104, -203, 23, 71, -199, -200, 73, 127,
	-82, -116, 107, 88, 105, 106, 90, 109, 108, 119,
	112, 113, 114, 115, 116, 117, 118, 110, 111, 122,
	97, 98, 99, 100, 101, 102, 103, -178, -291, -94,
	-291, 128, 129, -119, -119, -119, -119, -119, -119, -119,
	-119, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-3, -132, -82, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -142, -82, -291, -296,
	-127, -291, -296, -127, -296, -127, -296, -291, -296, -127,
	-296, -127, -296, -296, -127, -296, -291, -291, -291, -291,
	-291, -291, -107, 27, -105, -85, -88, -89, -90, -109,
	-93, -291, -105, -94, -105, -98, -293, 69, 11, 67,
	-293, 69, 127, 69, -167, -172, 304, 306, 228, -171,
	-171, -207, -201, 73, 29, 97, 30, 127, -147, -66,
	70, 69, -242, 155, 152, -214, -218, -220, -219, -221,
	-216, -217, 254, 257, 261, 259, 255, 260, 123, 258,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	273, 30, 165, 250, 251, 252, 253, 274, 275, 276,
	277, 278, 279, 280, 281, 234, 256, 370, 235, 236,
	237, 238, 239, 240, 242, 243, 244, 245, 246, 247,
	248, 71, -200, -262, 68, -201, 23, 143, 71, 88,
	71, 71, 71, -184, 71, 69, 144, -98, 24, 66,
	-100, -105, 71, 71, 71, 71, -209, -208, -198, -197,
	-182, 73, -82, -184, -184, -197, -197, -197, -105, -105,
	-105, -105, -182, -182, -197, -182, -179, 11, 107, 11,
	-179, -179, -82, -119, 114, 71, 71, 231, 71, -39,
	-39, 73, -39, 69, 97, -39, 70, -132, -273, 441,
	69, -289, 23, 306, 307, 283, -72, -3, -105, -197,
	307, 308, -91, -93, -291, -159, -202, 9, 107, 69,
	18, 69, -156, 25, 26, 127, -120, 51, 74, 77,
	-185, 49, -105, -82, -82, -130, 82, 88, 83, 84,
	-203, 114, -209, -202, -198, -119, -131, -136, -94, 78,
	107, 105, 106, 90, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -211,
	71, 73, 71, -118, -118, -201, -70, -78, -81, 114,
	-82, -208, -78, -78, -70, -292, -292, -81, -78, -78,
	-78, -81, -78, -70, -70, -78, -292, -292, -292, -292,
	-78, -78, -78, -78, -70, -78, -78, -78, -70, -292,
	69, -292, -3, -78, -78, -78, -292, -82, -82, -139,
	73, -78, -139, 73, -78, -119, 329, 330, 331, -78,
	-78, -70, -140, -141, 92, -139, -292, -119, -201, -201,
	-78, -79, -78, -78, -78, -162, 172, -105, 30, 69,
	-101, -103, -102, -104, 56, 60, 62, 57, 58, 59,
	63, -192, -85, -92, 47, -291, -110, 172, -111, 23,
	-210, 64, 145, 65, -162, 67, -85, -105, -85, -108,
	-208, 114, -170, -173, 69, 305, 307, 308, -167, -228,
	122, 66, 85, -82, -202, -209, -157, -72, -252, -253,
	-254, -202, 73, 74, -239, -240, -241, -242, -255, 155,
	-261, 147, 149, 44, -243, 156, 141, 45, -215, -229,
	288, -222, 68, -222, -222, 262, 254, 257, 255, -222,
	-222, -222, -222, -222, -227, 257, -227, -227, -227, -227,
	255, 68, 68, -222, -222, -222, -231, 68, -231, 249,
	-232, 68, -232, -232, -232, -232, -262, -262, -82, -205,
	67, -154, -105, -197, 24, -197, -45, 187, 161, 68,
	-105, -105, -105, -270, 159, 154, -105, 69, 71, 71,
	-247, 11, 107, -182, -208, -208, -105, -121, 23, -182,
	-76, 166, -292, 71, -38, -118, 70, -106, 27, 73,
	-288, -210, 282, 307, -70, -292, -53, -52, -189, 135,
	132, 133, 137, 138, -265, 285, 131, 257, 80, 29,
	15, 324, 172, 375, 71, 173, -292, 69, 127, 52,
	-122, -122, -151, -176, 19, 11, 47, 47, -71, 57,
	82, 83, 84, 127, -291, -131, -119, -119, -119, -76,
	87, -292, -78, 69, -292, 127, -292, -292, -78, -152,
	336, -152, -292, -292, -292, -292, -292, -292, -78, -78,
	-292, -152, -152, -152, -152, -292, -292, -292, -292, -78,
	-292, -292, -292, -79, -82, -292, -292, -292, -292, 69,
	67, 23, 11, 11, -292, 11, 11, -292, -292, 11,
	-119, -119, -119, -292, -292, -78, -143, -141, 94, -82,
	-292, -292, 69, 69, -292, -292, -292, -292, -117, 30,
	47, -291, -3, -291, -165, -169, -139, -198, -88, -89,
	-89, -88, -89, 56, 56, 56, 61, 56, 61, 56,
	-102, -210, -292, -292, -135, 186, -291, 34, -210, -111,
	141, 141, 141, -112, 12, -85, -112, -112, 127, -172,
	-175, 309, 306, 312, 71, 73, 127, -158, 69, -254,
	97, -242, 68, 71, 44, -200, 45, -243, 141, 45,
	-243, -248, 71, -248, 45, 82, 88, -225, -226, -233,
	-236, -223, 29, 66, 285, 147, 45, 44, 80, -230,
	289, 74, -227, -227, -222, -222, -222, 262, -222, -227,
	-228, 30, -228, -228, -228, -228, -227, -237, 73, -237,
	74, -231, 74, 70, 66, -201, -3, 23, -46, 8,
	9, 10, -275, -276, -277, 71, 107, 192, 193, 144,
	-197, -105, -197, -197, -112, 71, 71, -179, -182, 34,
	-119, 182, 183, -162, 140, -289, -185, 69, -196, -193,
	-266, -243, -272, -241, -242, -271, 148, 156, 172, 155,
	-193, -266, 155, 152, -243, 156, 147, 148, -190, -243,
	144, 23, -193, -193, -249, 97, -193, 172, 23, -202,
	-202, 53, -105, -77, -155, 114, -202, -79, -76, 87,
	-119, -292, -81, -153, -152, 114, -209, -153, -153, -292,
	-201, -291, -152, -153, -153, -152, -152, -152, -292, -292,
	-152, -153, -153, -153, -153, -292, -153, -153, -153, -292,
	-213, 123, 254, 165, 252, 245, 272, 259, 287, 250,
	288, -211, -213, -119, -119, -119, -119, -119, 11, 11,
	11, 369, -147, 96, -82, 93, -119, -119, -164, 66,
	-165, -134, -137, -136, -291, -3, -292, -159, 6, 372,
	-163, -201, -112, 69, 97, 97, -96, -95, 66, 67,
	-97, 66, -95, 56, 56, -161, 68, 69, -136, -291,
	-163, -119, -111, -291, -291, -291, -147, -82, -112, 306,
	310, 311, -253, -254, -257, -256, -201, -200, 147, -261,
	156, -243, -261, -248, -248, 68, 82, -119, 9, 45,
	45, 73, 70, -228, -228, -227, -222, -228, 71, 123,
	-228, 70, 69, 70, 69, 70, 69, -115, 390, 88,
	-105, -154, -154, 66, 70, 69, -214, 71, 71, 71,
	-105, -182, -119, -227, -105, -71, -52, 68, -238, 71,
	-200, -196, -248, -187, 147, 71, 71, -196, 71, -200,
	71, -200, -201, 45, 45, 71, -105, -201, -238, 71,
	-82, -201, -201, -93, 127, -112, 11, 69, -80, -292,
	-119, -153, 127, -153, -147, 172, -153, -153, -153, -292,
	-222, -222, -222, -232, -222, 239, -222, 239, -292, -292,
	19, 19, 19, 19, -292, -119, -119, -119, -291, -74,
	333, -82, 69, 69, 28, -164, 69, -292, -292, 47,
	-292, -292, 69, -147, -169, -82, -82, -82, 68, -82,
	-160, -201, 186, -292, -111, -192, -160, -160, -160, -157,
	70, 69, -222, -222, 45, -248, -160, -124, -228, -227,
	73, -227, 74, 74, 390, 68, -3, -105, -278, -279,
	-280, 80, 371, 88, 194, 195, 157, 196, 197, 198,
	-277, -214, -214, -214, -281, -180, -77, -238, -149, 160,
	161, -214, -214, -205, -245, -243, 45, 71, -191, 144,
	23, 144, -149, -238, 30, 132, 27, -202, -144, 13,
	-85, -155, -155, 114, -292, 16, -227, 71, -119, -119,
	-119, -119, -292, -292, -292, -119, -292, 73, -119, -119,
	45, -137, -134, 47, -3, -291, -201, -157, -160, 70,
	69, -136, -110, -210, -292, -292, -292, -259, -258, 67,
	151, 80, -256, -156, -156, 70, -228, -228, 70, 70,
	-257, -154, 19, -154, -280, 73, 198, 194, 198, 198,
	198, 198, 199, -282, 38, -284, 39, 11, 70, 71,
	-215, -215, 68, -248, 68, 71, -201, -149, 29, 29,
	-291, -145, 14, 16, -112, -80, -132, -292, -292, -292,
	-292, -73, 107, 372, -292, -292, 9, -134, -3, 70,
	-201, -111, -258, 71, -249, 73, 158, 70, 185, -21,
	-3, -9, -10, -11, -12, -14, -47, -15, -16, -22,
	-23, -17, -54, -55, -64, -62, -63, -59, -58, -26,
	-24, -27, -19, -28, -29, -30, -25, 91, 146, 216,
	226, 36, 36, 190, 191, -224, 145, -285, 43, -283,
	-235, 42, 16, -85, -257, -205, -257, -119, -263, -264,
	172, -146, -82, -133, -84, -82, -144, -155, -147, -292,
	370, 63, 373, -165, -292, 74, -105, -260, -259, 186,
	-154, -82, -82, 71, -43, -206, 219, 220, 221, -202,
	-33, -21, -161, 74, -284, 16, -286, 40, 41, 73,
	-112, 70, 68, 70, -292, 69, -201, 69, -145, -292,
	53, 371, 374, 68, -150, 188, 189, -34, -35, 92,
	93, 217, 218, 222, -214, 69, 442, 38, 73, 16,
	16, -144, -260, -257, -260, -264, 47, -84, 53, -160,
	-154, 71, 71, 96, 94, -35, -82, -33, 19, 19,
	19, 29, -202, 96, -21, 73, 73, -145, 70, 174,
	372, 70, -13, -20, -12, -9, -10, -11, 226, 91,
	-33, 93, 442, -44, 74, -3, -42, -41, 74, -44,
	224, 88, 225, 71, -119, -260, 175, 373, -268, -269,
	66, -154, -33, 442, -33, 96, 94, -36, -37, 95,
	-21, 69, 223, -291, 374, -269, 66, -268, 66, 10,
	9, 442, 96, 442, 146, -33, 96, 94, -37, -82,
	-41, -119, 171, -267, 159, 154, 157, 30, -267, 96,
	91, 442, 146, -33, 93, -292, -292, 153, 29, 82,
	96, 442, -33, 146, 96, 442, 146,
}
var yyDef = [...]int{

	33, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, -2, 545, 545, 545, 545, 545, 545,
	620, -2, 405, 406, 0, 0, 0, 0, -2, 514,
	515, 516, 520, 521, 536, -2, 1366, 1366, 1366, 0,
	185, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	54, 55, 926, 0, 539, 528, 529, 0, 0, 1364,
	2, 866, 0, 554, 547, 0, 926, 926, 0, 0,
	85, 0, 0, 0, 621, 0, 0, 0, 924, 924,
	0, 0, 947, 0, 921, 943, 944, 945, 0, 922,
	0, 922, 922, 922, 922, 922, 0, 464, 638, 956,
	957, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 0, 0, 0, 507, 0, 1367, 1367, 479, 0,
	481, 0, 0, 0, 0, 0, 491, 0, 866, 866,
	1367, 351, 352, 353, 511, 512, 501, 513, 0, 0,
	0, 0, 0, 540, 541, 542, 543, 544, 164, 166,
	0, 186, 0, 189, 192, 962, 522, 0, 0, 987,
	545, 0, 549, 0, 0, 927, 517, 43, 44, 0,
	622, 623, 624, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 0, 872, 0, 0, 557, 555, 556,
	546, 0, 568, 577, 0, 647, 0, 652, 654, -2,
	-2, 0, 695, 696, 697, 698, 699, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 725, 726, 727,
	728, 729, 839, 840, 841, 842, 843, 844, 845, 846,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1355, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 656, 657,
	836, 893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 798, 798, 798,
	798, 798, 798, 798, 798, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 67, 638,
	71, 1314, 0, 898, -2, -2, 900, 0, 0, 0,
	-2, -2, -2, -2, 1141, -2, 836, 0, 86, 858,
	545, 87, 0, 226, 227, 0, 1153, 375, 954, 955,
	1143, 950, 951, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 924, 0, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	0, 465, 1367, 507, 468, 0, 0, 924, 924, 1367,
	1367, 1367, 0, 0, 0, 477, 1368, 1369, 478, 0,
	377, 378, 507, 507, 1367, 507, 504, 0, 504, 488,
	504, 502, 503, 0, 493, 0, 0, 496, 497, 498,
	523, 0, 0, 530, 532, 533, 534, 535, 531, 0,
	0, 0, 168, 0, 0, 188, 170, 0, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	0, 191, 0, 960, 963, 527, 978, 979, 0, 554,
	40, 50, 0, 550, 551, 0, 1367, 0, 0, 0,
	0, 49, 1365, 35, 0, 0, 867, 870, 871, 859,
	860, 863, 0, 0, 552, 558, 559, 548, 0, 569,
	0, 0, 0, 578, 0, 580, 581, 582, 583, 0,
	650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 675, 676, 677, 678, 679, 680, 653, 0, 667,
	0, 0, 0, 716, 717, 718, 719, 720, 721, 722,
	0, 557, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 557,
	0, 0, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 0, 828, 0, 781,
	790, 0, 782, 791, 783, 792, 784, 0, 785, 793,
	786, 794, 787, 788, 795, 789, 0, 0, 0, 689,
	0, 0, 69, 0, 637, 0, 584, 586, 587, 588,
	-2, 0, 641, 687, -2, 0, 0, 0, 61, 62,
	0, 0, 0, 0, 72, 74, 0, 0, 1314, 901,
	902, 325, 915, 916, 917, 0, 913, 0, 866, 554,
	392, 0, 228, 0, 0, 237, 315, 246, 247, 248,
	308, 250, 308, 308, 0, 308, 308, 308, 308, 308,
	322, 322, 322, 322, 322, 291, 292, 293, 294, 295,
	0, 0, 268, 308, 308, 308, 272, 298, 299, 300,
	301, 302, 303, 304, 305, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 310, 310, 312, 312, 312, 312,
	312, 0, 0, 374, 0, 948, 83, 0, 1367, 0,
	1367, 0, 0, 0, 120, 0, 0, 460, 923, 0,
	455, 63, 456, 457, 458, 459, 639, 958, 959, 466,
	467, 508, 509, 0, 0, 471, 472, 473, 474, 475,
	476, 379, 482, 483, 484, 490, 507, 0, 0, 0,
	602, 507, 492, 681, 0, 525, 524, 0, 537, 165,
	167, 169, 187, 0, 0, 190, 193, 0, 0, 0,
	0, 981, 0, 983, 985, 0, 557, 0, 0, 440,
	518, 519, 45, 46, 0, 0, 882, 873, 0, 0,
	0, 0, 862, 864, 865, 0, 0, 847, 0, 0,
	560, 553, 37, 648, 649, 651, 668, 0, 670, 672,
	579, 570, 0, 837, -2, 658, 659, 683, 684, 685,
	0, 0, 0, 0, 681, 663, 0, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 715,
	812, 813, 0, 713, 714, 723, 0, 0, 691, 564,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 689, 686,
	0, 892, 0, 0, 0, 0, 763, 0, 0, 698,
	839, 0, 698, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 834, 831, 0, 0, 799, 0, 0, 0,
	0, 0, 690, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 1245, 597, 0,
	641, 0, 0, 0, 645, 0, 645, 66, 645, 68,
	0, 640, 899, 0, 0, 0, 77, 78, 73, 903,
	0, 909, 910, 911, 837, 0, 872, 557, 225, 393,
	395, 398, 399, 400, 229, 231, 232, 233, 0, 1153,
	366, 1255, 1295, -2, 358, 1180, -2, -2, 236, 317,
	316, 249, 0, 322, 322, 308, 308, 308, 308, 277,
	322, 280, 283, 284, 325, 0, 325, 325, 325, 325,
	322, 0, 0, 269, 270, 271, 260, 0, 261, 310,
	263, 0, 264, 265, 266, 267, 372, 373, 0, 0,
	0, 0, 0, 91, 925, 92, 0, 121, 122, 96,
	224, 0, 451, 453, 461, 462, 1367, 0, 1367, 1367,
	645, 0, 0, 485, 505, 506, 504, 507, 0, 489,
	499, 0, 0, 526, 171, 172, 194, 69, 0, 961,
	980, 0, 984, 986, 552, 51, 407, 408, 1366, -2,
	441, 940, 441, 441, 428, 342, 441, 930, 931, 932,
	933, 934, 935, 936, 937, 0, 0, 0, 0, 0,
	868, 869, 861, 0, 918, 919, 848, 849, 84, 561,
	669, 671, 673, 0, 689, 660, 681, 664, 0, 661,
	0, 655, 0, 0, 575, 0, 575, 575, 0, 749,
	0, 750, 0, 575, 575, 0, 0, 0, 0, 0,
	0, 756, 757, 758, 759, 575, 575, 575, 575, 0,
	575, 575, 575, 0, 694, -2, 760, 761, 762, 0,
	0, 0, 0, 0, 805, 0, 0, 806, 771, 0,
	0, 0, 0, 0, 777, 858, 0, 832, 0, 0,
	780, 800, 0, 0, 801, 802, 803, 804, 886, 0,
	0, 0, 877, 0, 645, 894, 0, 0, 585, 616,
	618, 0, 613, 626, 627, 629, 0, 631, 0, 633,
	634, 604, 591, 688, 592, 0, 0, 0, 641, 601,
	0, 0, 0, 858, 0, 645, 59, 60, 0, 75,
	76, 0, 0, 82, 326, 327, 0, 95, 0, 396,
	0, 230, 0, 0, 0, 0, 344, 358, 354, 355,
	358, 349, 359, 350, 0, 238, 0, 240, 241, 242,
	243, 244, 0, 0, 321, 0, 329, 331, 0, 245,
	318, 0, 325, 325, 322, 275, 276, 308, 281, 325,
	285, 0, 286, 287, 288, 289, 325, 0, 306, 0,
	0, 262, 0, 389, 0, 949, 83, 83, 0, 123,
	124, 125, 0, 97, 98, 0, 0, 0, 0, 0,
	454, 64, 469, 470, 480, 380, 381, 507, 487, 0,
	682, 494, 495, 322, 0, 982, 560, 0, 410, 0,
	1366, 358, 0, 429, 430, 0, 442, 443, 444, 0,
	0, 1366, 0, 0, 0, 443, 0, 0, 0, 0,
	941, 942, 0, 0, 0, 343, 0, 0, 0, 884,
	883, 874, 36, 645, 0, 571, 838, 0, 662, 0,
	665, 575, 692, 734, 576, 566, 0, 735, 736, 575,
	572, 858, 751, 738, 739, 752, 753, 754, 575, 575,
	755, 743, 742, 741, 744, 575, 747, 746, 748, 730,
	0, 308, 308, 817, 308, 312, 820, 308, 822, 308,
	825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 829, 779, 835, 0, 0, 0, 52, 0,
	886, 875, 888, 890, 0, 0, 0, 0, -2, 1122,
	0, 608, 858, 0, 0, 0, 610, 617, 0, 0,
	611, 0, 612, 630, 632, 589, 0, 0, 593, 0,
	0, -2, 600, 0, 0, 0, 866, 646, 58, 79,
	80, 81, 394, 397, 0, 360, 308, 308, 0, 364,
	0, 358, 365, 346, 348, 0, 239, 319, 0, 328,
	330, 332, 309, 273, 274, 325, 282, 278, 323, 324,
	290, 322, 0, 322, 0, 313, 0, 376, 390, 0,
	0, 89, 0, 0, 104, 0, 100, 0, 0, 0,
	452, 486, 603, 972, 635, 84, 409, 0, 437, 0,
	0, 413, 948, 356, 0, -2, 414, 415, 420, 421,
	422, 423, 424, 0, 435, 0, 417, 0, 437, 0,
	432, 0, 0, 47, 0, 850, 0, 84, 84, 731,
	666, 733, 0, 737, 0, 0, 732, 740, 745, 764,
	814, 322, 818, 819, 821, 823, 824, 826, 766, 765,
	0, 0, 0, 0, 772, 0, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 53, 0, 891, -2, 0,
	0, 70, 0, 866, 895, 896, 897, 614, 0, 619,
	0, 606, 0, 641, 598, 0, 0, 0, 0, 57,
	334, 0, 863, 863, 345, 347, 0, 320, 279, 325,
	307, 325, 0, 0, 391, 0, 83, 0, 83, 105,
	106, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	99, 101, 102, 103, 974, 968, 0, 0, 412, 438,
	0, 237, 237, 0, 358, 357, 0, 431, 0, 938,
	939, 0, 426, 437, 0, 0, 0, 885, 855, 0,
	645, 0, 562, 567, 573, 0, 815, 816, 0, 0,
	0, 0, 773, 774, 775, 807, 778, 830, 0, 0,
	0, 889, 876, 0, 880, 0, 609, 56, 0, 605,
	0, 594, 596, 641, 642, 643, 644, 333, 337, 0,
	342, 0, 361, 362, 363, 0, 296, 297, 311, 314,
	0, 90, 0, 0, 107, 108, 109, 110, 112, 113,
	0, 0, 0, 928, 976, -2, 0, 0, 411, 439,
	234, 235, 0, 948, 0, 416, 425, 427, 0, 434,
	0, 41, 0, 0, 850, 84, 858, 767, 769, 768,
	770, 0, 0, 0, 796, 797, 0, 879, 0, 615,
	607, 599, 338, 339, 0, 341, 0, 335, 0, 83,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 0, 0, 0,
	0, 114, 115, 116, 117, 604, 0, 968, 0, 970,
	0, 967, 0, 645, 0, 0, 0, 433, 0, 446,
	0, 856, 857, 851, 852, 854, 855, 563, 0, 776,
	0, 0, 0, 887, -2, 340, 0, 88, 336, 126,
	94, 0, 0, 950, 0, 0, 153, 154, 155, 952,
	0, 195, 34, 0, 975, 0, 973, 0, 0, 969,
	850, 335, 0, 335, 445, 0, 0, 0, 42, 574,
	808, 0, 811, 0, 83, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 151, 0, 0, 929, 977, 0,
	0, 855, 418, 0, 436, 447, 0, 853, 809, 0,
	0, 127, 128, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 953, 118, 196, 971, 965, 39, 335, 0,
	0, 367, 83, 129, 130, 131, 132, 133, 0, 135,
	0, 0, 0, 147, 148, 149, 0, 156, 158, 159,
	160, 0, 162, 163, 152, 419, 0, 0, 368, 369,
	0, 93, 0, 0, 0, 0, 0, 0, 144, 0,
	150, 0, 161, 0, 810, 370, 0, 371, 0, 0,
	0, 0, 0, 139, 140, 0, 0, 0, 145, 0,
	157, 0, 0, 382, 384, 385, 0, 0, 383, 134,
	136, 0, 142, 0, 0, 448, 449, 386, 387, 388,
	0, 0, 0, 141, 0, 146, 143,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 442,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:429
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:433
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:440
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:473
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:479
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:485
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:492
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:498
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:516
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:522
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:529
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:538
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:554
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:558
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:578
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:584
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:596
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:608
		{
			yyVAL.str = InsertStr
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.str = ReplaceStr
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:618
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:624
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:628
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:632
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:656
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:660
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:670
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:675
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:679
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:689
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:696
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:733
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:737
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:746
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:751
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:766
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:771
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:776
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:780
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:784
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:788
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:796
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:804
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:815
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:823
		{
			yyVAL.procedureParams = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:843
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:860
		{
			yyVAL.characteristics = nil
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:880
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:888
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:896
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:900
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:908
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:912
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:916
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:922
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:927
		{
			yyVAL.str = ""
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:931
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
			yyVAL.str = BeforeStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
			yyVAL.str = AfterStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:947
		{
			yyVAL.str = InsertStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:951
		{
			yyVAL.str = UpdateStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.str = DeleteStr
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:960
		{
			yyVAL.triggerOrder = nil
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:964
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:984
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:990
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:994
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 140:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1016
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 141:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1021
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1026
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 143:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1032
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1040
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1050
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1056
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1060
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1064
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1068
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1076
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1111
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1197
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1201
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1205
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1209
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1213
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1217
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1221
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.statement = &Resignal{}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1235
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1258
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.exprs = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1266
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1314
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1331
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1338
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1371
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1377
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1404
		{
			yyVAL.columnType = ColumnType{}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1426
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1444
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1462
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1484
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1747
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1752
		{
			yyVAL.sqlVal = nil
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1761
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1773
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1791
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1800
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1816
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.colKeyOpt = colKey
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1878
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1882
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1887
		{
			yyVAL.indexOptions = nil
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1916
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1940
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1944
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = yyDollar[1].str
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1994
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2008
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2014
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2018
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2024
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2028
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 367:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2038
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 368:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2042
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 369:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2046
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 370:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2050
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 371:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2054
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2064
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2078
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2140
		{
			yyVAL.boolean = true
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.boolean = true
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.boolean = false
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = yyDollar[1].str
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string("")
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2219
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2246
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2272
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2281
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 419:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2285
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2313
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2317
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2324
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2346
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2355
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2359
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2367
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2374
		{
			yyVAL.columnOrder = nil
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2388
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2394
		{
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
		}
	case 445:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2404
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2414
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 448:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2420
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2424
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2440
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2448
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2460
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2476
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2484
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2501
		{

		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2515
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2519
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2530
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2535
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2547
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2552
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2556
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2560
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2568
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2572
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2588
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2592
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2596
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2600
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2604
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2608
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 486:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2612
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2617
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2622
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2630
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2638
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2652
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2656
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2674
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2686
		{
			yyVAL.boolean = false
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.boolean = true
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2720
		{
			yyVAL.showFilter = nil
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = SessionStr
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = GlobalStr
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2748
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.statement = &Begin{}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.statement = &Begin{}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2772
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2776
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.statement = &Commit{}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.statement = &Rollback{}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2804
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2808
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2812
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2818
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2832
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.statement = &OtherRead{}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2885
		{
			setAllowComments(yylex, true)
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2895
		{
			yyVAL.bytes2 = nil
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = UnionStr
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = UnionAllStr
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = UnionDistinctStr
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.byt = 0
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.byt = 1
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = SQLCacheStr
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2940
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2944
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.str = DistinctStr
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = StraightJoinHint
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2971
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2994
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3008
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3012
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3027
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3032
		{
			yyVAL.over = nil
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.over = yyDollar[1].over
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3041
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3049
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3067
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3091
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3134
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3149
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3153
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3157
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3161
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3172
		{
			yyVAL.expr = nil
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3181
		{
			yyVAL.columns = nil
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3195
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3218
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3222
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3226
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3236
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3238
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3242
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3248
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3250
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3253
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3260
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.str = JoinStr
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{
			yyVAL.str = JoinStr
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.str = JoinStr
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = StraightJoinStr
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3290
		{
			yyVAL.str = LeftJoinStr
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3294
		{
			yyVAL.str = LeftJoinStr
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.str = RightJoinStr
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.str = RightJoinStr
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = NaturalJoinStr
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3312
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3328
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3348
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3353
		{
			yyVAL.indexHints = nil
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3357
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3361
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3365
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.expr = nil
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3384
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3404
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3410
		{
			yyVAL.str = ""
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3414
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3434
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3438
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3442
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3446
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3458
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 666:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3462
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3466
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3472
		{
			yyVAL.str = IsNullStr
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3476
		{
			yyVAL.str = IsNotNullStr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = IsTrueStr
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = IsNotTrueStr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = IsFalseStr
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = IsNotFalseStr
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.str = EqualStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = LessThanStr
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = GreaterThanStr
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = LessEqualStr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = GreaterEqualStr
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = NotEqualStr
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = nil
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3567
		{
			yyVAL.selectExprs = nil
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3626
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3766
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3770
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3778
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3798
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3802
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3810
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3814
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3851
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3855
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3859
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3867
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3894
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 765:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3898
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 766:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3902
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 767:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3906
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 768:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3910
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 769:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3914
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 770:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3918
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3922
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3926
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 773:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3930
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 774:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3934
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 775:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3938
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 776:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3946
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 778:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3950
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3954
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3958
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3972
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3981
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4019
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 796:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4038
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 797:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4042
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4053
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = BooleanModeStr
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 810:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4101
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yyVAL.str = QueryExpansionStr
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4121
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4125
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4129
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4171
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.expr = nil
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = string("")
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4205
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.expr = nil
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4224
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4228
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.expr = &NullVal{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4281
		{
			yyVAL.exprs = nil
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4285
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4306
		{
			yyVAL.expr = nil
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4310
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4321
		{
			yyVAL.orderBy = nil
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = AscScr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = AscScr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = DescScr
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.limit = nil
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4363
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4367
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4371
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4390
		{
			yyVAL.str = ForUpdateStr
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4394
		{
			yyVAL.str = ShareModeStr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4411
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4424
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4428
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4432
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4451
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4456
		{
			yyVAL.assignExprs = nil
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4460
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4512
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4542
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4555
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4568
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.setScope = SetScope_Global
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.setScope = SetScope_Session
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.setScope = SetScope_Session
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4606
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			yyVAL.bytes = []byte("charset")
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &Default{}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.byt = 0
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.byt = 1
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.byt = 0
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.byt = 1
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.byt = 0
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yyVAL.byt = 1
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = IgnoreStr
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4657
		{
			yyVAL.sqlVal = nil
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.empty = struct{}{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.empty = struct{}{}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.empty = struct{}{}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.empty = struct{}{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.empty = struct{}{}
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4686
		{
			yyVAL.empty = struct{}{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.empty = struct{}{}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.empty = struct{}{}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = UniqueStr
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = FulltextStr
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = SpatialStr
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = ""
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = yyDollar[1].str
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4706
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4743
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4755
		{
			yyVAL.str = string("")
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4760
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4765
		{
			yyVAL.EnclosedBy = nil
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4769
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4774
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.sqlVal = nil
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{
			yyVAL.sqlVal = nil
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4801
		{
			yyVAL.Fields = nil
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4805
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.Lines = nil
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4819
		{
			yyVAL.sqlVal = nil
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4845
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4849
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.lockType = LockRead
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.lockType = LockReadLocal
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.lockType = LockWrite
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4867
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4873
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5288
		{
			decNesting(yylex)
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5293
		{
			skipToEnd(yylex)
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5298
		{
			skipToEnd(yylex)
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			skipToEnd(yylex)
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
