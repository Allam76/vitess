// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const NULLX = 57606
const AUTO_INCREMENT = 57607
const APPROXNUM = 57608
const SIGNED = 57609
const UNSIGNED = 57610
const ZEROFILL = 57611
const LOCAL = 57612
const COLLATION = 57613
const DATABASES = 57614
const SCHEMAS = 57615
const TABLES = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const NAMES = 57623
const CHARSET = 57624
const GLOBAL = 57625
const SESSION = 57626
const ISOLATION = 57627
const LEVEL = 57628
const READ = 57629
const WRITE = 57630
const ONLY = 57631
const REPEATABLE = 57632
const COMMITTED = 57633
const UNCOMMITTED = 57634
const SERIALIZABLE = 57635
const CURRENT_TIMESTAMP = 57636
const DATABASE = 57637
const CURRENT_DATE = 57638
const CURRENT_USER = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const UTC_DATE = 57643
const UTC_TIME = 57644
const UTC_TIMESTAMP = 57645
const REPLACE = 57646
const CONVERT = 57647
const CAST = 57648
const SUBSTR = 57649
const SUBSTRING = 57650
const GROUP_CONCAT = 57651
const SEPARATOR = 57652
const TIMESTAMPADD = 57653
const TIMESTAMPDIFF = 57654
const OVER = 57655
const WINDOW = 57656
const GROUPING = 57657
const GROUPS = 57658
const AVG = 57659
const BIT_AND = 57660
const BIT_OR = 57661
const BIT_XOR = 57662
const COUNT = 57663
const JSON_ARRAYAGG = 57664
const JSON_OBJECTAGG = 57665
const MAX = 57666
const MIN = 57667
const STDDEV_POP = 57668
const STDDEV = 57669
const STD = 57670
const STDDEV_SAMP = 57671
const SUM = 57672
const VAR_POP = 57673
const VARIANCE = 57674
const VAR_SAMP = 57675
const CUME_DIST = 57676
const DENSE_RANK = 57677
const FIRST_VALUE = 57678
const LAG = 57679
const LAST_VALUE = 57680
const LEAD = 57681
const NTH_VALUE = 57682
const NTILE = 57683
const ROW_NUMBER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const MATCH = 57687
const AGAINST = 57688
const BOOLEAN = 57689
const LANGUAGE = 57690
const WITH = 57691
const QUERY = 57692
const EXPANSION = 57693
const UNUSED = 57694
const ARRAY = 57695
const DESCRIPTION = 57696
const EMPTY = 57697
const EXCEPT = 57698
const JSON_TABLE = 57699
const LATERAL = 57700
const MEMBER = 57701
const RECURSIVE = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const SYSTEM = 57759
const INFILE = 57760

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 31,
	5, 47,
	-2, 838,
	-1, 39,
	140, 899,
	141, 925,
	-2, 117,
	-1, 46,
	180, 493,
	181, 493,
	-2, 483,
	-1, 53,
	1, 1332,
	436, 1332,
	-2, 519,
	-1, 435,
	127, 935,
	-2, 929,
	-1, 436,
	127, 936,
	-2, 930,
	-1, 537,
	97, 1154,
	127, 1154,
	-2, 883,
	-1, 538,
	97, 1255,
	127, 1255,
	-2, 884,
	-1, 543,
	97, 1174,
	127, 1174,
	-2, 885,
	-1, 544,
	97, 1213,
	127, 1213,
	-2, 886,
	-1, 545,
	97, 1214,
	127, 1214,
	-2, 887,
	-1, 546,
	97, 1109,
	127, 1109,
	-2, 891,
	-1, 548,
	97, 1192,
	127, 1192,
	-2, 893,
	-1, 983,
	1, 573,
	5, 573,
	12, 573,
	13, 573,
	14, 573,
	15, 573,
	17, 573,
	19, 573,
	30, 573,
	31, 573,
	56, 573,
	57, 573,
	58, 573,
	59, 573,
	60, 573,
	62, 573,
	63, 573,
	66, 573,
	67, 573,
	69, 573,
	70, 573,
	436, 573,
	-2, 603,
	-1, 987,
	67, 64,
	69, 64,
	-2, 68,
	-1, 1177,
	127, 938,
	-2, 934,
	-1, 1341,
	68, 354,
	-2, 1075,
	-1, 1344,
	68, 350,
	71, 350,
	-2, 1010,
	-1, 1345,
	68, 351,
	71, 351,
	-2, 1020,
	-1, 1428,
	68, 428,
	71, 428,
	-2, 394,
	-1, 1473,
	5, 48,
	-2, 671,
	-1, 1789,
	1, 626,
	5, 626,
	12, 626,
	13, 626,
	14, 626,
	15, 626,
	17, 626,
	19, 626,
	30, 626,
	31, 626,
	56, 626,
	57, 626,
	58, 626,
	59, 626,
	60, 626,
	62, 626,
	63, 626,
	66, 626,
	67, 626,
	69, 626,
	70, 626,
	436, 626,
	-2, 603,
	-1, 1913,
	5, 48,
	-2, 858,
	-1, 2048,
	41, 945,
	-2, 943,
	-1, 2156,
	5, 48,
	-2, 861,
}

const yyPrivate = 57344

const yyLast = 25480

var yyAct = [...]int{

	469, 76, 2303, 2257, 2278, 2173, 2268, 1388, 2159, 2269,
	2259, 2094, 7, 2093, 6, 2092, 5, 2095, 8, 2139,
	2145, 737, 2062, 1017, 2199, 389, 1783, 1802, 2022, 1537,
	2048, 2172, 1386, 1986, 1690, 1763, 1923, 427, 1968, 1700,
	468, 1154, 440, 1346, 1565, 1803, 1950, 1590, 80, 985,
	2160, 1295, 1764, 1291, 1297, 908, 420, 1699, 1644, 453,
	747, 1852, 1338, 1289, 1342, 983, 101, 1328, 1538, 1318,
	368, 371, 1760, 1378, 559, 1426, 1327, 76, 1457, 1775,
	1769, 1147, 561, 1097, 1241, 1711, 1215, 362, 1414, 1202,
	556, 1667, 1163, 1334, 116, 998, 1666, 1273, 433, 979,
	1374, 387, 1627, 361, 1280, 1233, 539, 1179, 816, 1117,
	438, 555, 776, 812, 557, 1236, 997, 980, 1362, 423,
	535, 386, 775, 536, 858, 724, 531, 989, 924, 2325,
	2321, 542, 2311, 2293, 2291, 2273, 925, 530, 528, 2252,
	2207, 553, 363, 364, 79, 700, 367, 849, 442, 702,
	82, 1139, 1944, 1833, 65, 2284, 2192, 710, 2267, 2153,
	2240, 2191, 1728, 2152, 1503, 719, 2072, 873, 872, 882,
	883, 875, 876, 877, 878, 879, 880, 881, 874, 1898,
	701, 884, 1798, 1799, 84, 85, 86, 87, 88, 1797,
	32, 1574, 32, 32, 1573, 32, 1951, 1575, 1315, 1316,
	729, 2091, 3, 999, 1953, 1000, 1314, 749, 750, 751,
	366, 1745, 365, 32, 1532, 68, 35, 36, 482, 794,
	488, 490, 489, 486, 487, 485, 484, 483, 1610, 1348,
	1350, 1533, 1363, 2007, 1293, 491, 492, 1350, 1889, 32,
	33, 68, 35, 36, 1993, 551, 1375, 1887, 704, 68,
	35, 36, 77, 61, 77, 77, 1712, 77, 1368, 74,
	1363, 356, 1126, 37, 56, 57, 377, 384, 728, 732,
	62, 37, 734, 1956, 2282, 77, 2204, 758, 419, 112,
	108, 109, 2254, 110, 1354, 1356, 2045, 1355, 104, 2202,
	2203, 369, 2044, 2043, 2042, 2041, 2039, 47, 1714, 2040,
	1395, 77, 2124, 2125, 2161, 730, 733, 1645, 731, 1954,
	1955, 1957, 1958, 1959, 2196, 2197, 114, 113, 746, 1925,
	752, 1557, 753, 750, 751, 1394, 2089, 744, 745, 743,
	96, 742, 706, 705, 2266, 2239, 2140, 736, 736, 1602,
	1693, 2087, 1274, 1646, 1016, 1969, 1970, 1016, 357, 736,
	2317, 1806, 1672, 359, 1607, 1606, 1857, 2326, 1584, 76,
	76, 2323, 2127, 39, 70, 43, 42, 45, 1016, 58,
	763, 1015, 765, 81, 764, 2312, 1603, 1716, 2294, 372,
	799, 721, 1720, 98, 1715, 703, 1713, 95, 806, 360,
	1608, 1718, 1600, 106, 105, 46, 73, 72, 1601, 712,
	54, 55, 44, 383, 1717, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 1719, 1721, 1979,
	373, 1127, 370, 1617, 1649, 2073, 1377, 1647, 1648, 1363,
	1353, 104, 803, 102, 370, 893, 759, 1016, 895, 1016,
	1087, 727, 2307, 103, 1978, 59, 60, 760, 818, 1832,
	1073, 1078, 111, 768, 769, 862, 2023, 1605, 48, 71,
	735, 50, 51, 63, 2151, 64, 2248, 1564, 906, 2025,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 1952, 923, 926, 926, 926, 932, 926, 926, 932,
	926, 932, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 1588, 984, 69, 796,
	1903, 1016, 1563, 1588, 798, 807, 106, 105, 1562, 382,
	2024, 383, 898, 899, 900, 901, 902, 903, 904, 905,
	75, 699, 75, 75, 69, 75, 97, 1662, 1300, 1302,
	762, 766, 69, 370, 2263, 1977, 2305, 2258, 1588, 2306,
	802, 2304, 707, 75, 331, 977, 107, 987, 542, 1484,
	978, 2261, 1880, 542, 896, 897, 894, 1982, 1873, 1578,
	1570, 1476, 1604, 1481, 1591, 1462, 1447, 1158, 1588, 75,
	1010, 995, 864, 1687, 720, 874, 1822, 1319, 884, 884,
	1310, 1633, 927, 929, 931, 933, 935, 937, 938, 940,
	928, 930, 1587, 934, 936, 1588, 939, 856, 855, 1587,
	857, 1118, 1150, 1074, 1439, 1674, 1672, 1405, 740, 1301,
	1680, 1691, 1002, 1679, 1682, 857, 1014, 1003, 1438, 875,
	876, 877, 878, 879, 880, 881, 874, 993, 1823, 884,
	1675, 2297, 2279, 2296, 1587, 1234, 988, 1773, 351, 726,
	754, 907, 1134, 1008, 767, 986, 708, 873, 872, 882,
	883, 875, 876, 877, 878, 879, 880, 881, 874, 1983,
	1443, 884, 1730, 1217, 1587, 2310, 896, 897, 1186, 1437,
	1674, 1672, 1234, 1011, 1492, 1016, 348, 370, 1676, 1673,
	896, 897, 855, 1184, 1185, 1183, 2260, 2262, 1155, 1156,
	2249, 1587, 1080, 736, 1686, 1675, 93, 1119, 1683, 857,
	736, 736, 736, 1406, 741, 1415, 877, 878, 879, 880,
	881, 874, 856, 855, 884, 736, 736, 1810, 2318, 2314,
	1435, 1429, 1430, 1479, 1428, 1478, 1431, 1432, 332, 77,
	857, 530, 725, 756, 1092, 335, 852, 381, 711, 1182,
	2175, 92, 856, 855, 2157, 344, 349, 350, 429, 856,
	855, 1943, 1109, 1110, 1111, 1942, 1632, 856, 855, 1112,
	857, 1441, 1444, 1160, 2251, 856, 855, 857, 738, 1630,
	76, 2319, 2201, 1099, 736, 857, 1146, 813, 91, 757,
	814, 341, 1611, 857, 342, 2222, 1161, 347, 2236, 1162,
	959, 960, 961, 962, 963, 947, 948, 949, 964, 965,
	950, 951, 952, 958, 966, 953, 954, 955, 956, 957,
	969, 968, 967, 970, 971, 973, 972, 974, 1137, 1101,
	1088, 773, 1142, 525, 526, 1124, 1480, 1084, 1121, 1122,
	1157, 2200, 1203, 2224, 1204, 2223, 856, 855, 1113, 1114,
	2235, 1145, 2200, 772, 1576, 1436, 1577, 1104, 1105, 714,
	715, 716, 717, 718, 857, 862, 1176, 2209, 856, 855,
	2181, 333, 2086, 1129, 1130, 1732, 76, 1132, 2038, 856,
	855, 1434, 2000, 1165, 1940, 1815, 857, 1628, 1180, 1422,
	1131, 910, 1102, 1135, 2221, 1851, 1140, 857, 1853, 856,
	855, 2014, 2241, 346, 336, 337, 1144, 354, 1459, 1460,
	1461, 338, 340, 2084, 334, 353, 352, 857, 1169, 1171,
	1172, 1440, 1934, 2238, 1170, 2186, 808, 1177, 1175, 1934,
	2183, 1934, 2088, 808, 986, 2014, 2080, 1772, 2056, 1223,
	1226, 1591, 2052, 2014, 2028, 1178, 1235, 1853, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1975, 1173, 1294, 2014, 808, 1442, 1744,
	984, 2014, 2013, 2188, 984, 458, 457, 460, 461, 462,
	463, 1141, 1934, 1933, 459, 464, 1868, 1206, 1207, 1916,
	808, 1282, 1285, 1286, 1287, 1283, 1181, 1284, 1288, 1446,
	808, 1776, 1777, 1210, 1212, 1237, 1275, 1864, 1861, 1220,
	1875, 1566, 1323, 1860, 1329, 557, 1247, 1858, 1249, 542,
	1306, 1843, 1842, 1305, 1841, 1830, 1829, 1307, 1826, 1827,
	1826, 1825, 1474, 808, 1209, 1656, 1655, 1277, 808, 1211,
	1419, 81, 1416, 1245, 1246, 1403, 1402, 1205, 1231, 1128,
	1252, 1253, 1254, 1255, 1211, 808, 1911, 1125, 1099, 1096,
	736, 1095, 736, 1094, 1093, 1303, 1085, 1299, 1876, 1083,
	1074, 1082, 1081, 1177, 1324, 1079, 795, 907, 1013, 1012,
	991, 991, 722, 376, 1335, 374, 1256, 1257, 1290, 1566,
	2051, 1261, 1213, 2032, 1264, 1211, 817, 1312, 1317, 1269,
	1311, 1308, 2031, 2050, 1761, 1332, 865, 1772, 1389, 1838,
	1816, 1325, 1566, 986, 1397, 1839, 1398, 1399, 986, 1304,
	1400, 990, 986, 1380, 1381, 1382, 1383, 76, 1384, 1300,
	1302, 1828, 1364, 1365, 1366, 1367, 992, 992, 994, 990,
	1785, 1664, 1579, 909, 1313, 1474, 1277, 81, 1376, 1276,
	1410, 808, 1497, 1496, 922, 1152, 1133, 1463, 1401, 818,
	1176, 1876, 990, 1100, 1153, 1086, 907, 996, 804, 1772,
	1106, 1107, 1108, 873, 872, 882, 883, 875, 876, 877,
	878, 879, 880, 881, 874, 1115, 1116, 884, 1277, 873,
	872, 882, 883, 875, 876, 877, 878, 879, 880, 881,
	874, 1474, 77, 884, 1180, 805, 1151, 552, 2194, 2184,
	1301, 1282, 1285, 1286, 1287, 1283, 1784, 1284, 1288, 2054,
	1945, 1177, 1324, 1407, 1350, 1418, 1417, 1921, 1413, 1379,
	1809, 1776, 1777, 1458, 1375, 1583, 1396, 1424, 1370, 1369,
	1075, 792, 1451, 1445, 1143, 1449, 1450, 1901, 1387, 2288,
	77, 2286, 2270, 1837, 1535, 1536, 1468, 1779, 984, 984,
	984, 984, 984, 1465, 1466, 1467, 1761, 1782, 1423, 77,
	1634, 1464, 1090, 1549, 1471, 1294, 1547, 1558, 1550, 1781,
	1551, 1548, 1286, 1287, 1546, 984, 873, 872, 882, 883,
	875, 876, 877, 878, 879, 880, 881, 874, 1545, 1539,
	884, 1470, 424, 425, 2218, 2190, 1697, 1448, 1164, 1473,
	1475, 2216, 1181, 850, 851, 1477, 1456, 1455, 1491, 2005,
	1593, 1483, 1863, 1814, 1486, 1487, 1488, 1813, 907, 1329,
	1568, 1494, 1569, 1495, 1561, 542, 1498, 1499, 1567, 1500,
	1501, 1585, 848, 1505, 1506, 1507, 1508, 1509, 2129, 2132,
	2180, 2179, 2049, 2208, 1516, 1517, 1518, 1540, 1520, 1521,
	1543, 1523, 1524, 1525, 1526, 2047, 1528, 1529, 1530, 76,
	1592, 1553, 2123, 1552, 2122, 1580, 1541, 1542, 375, 1544,
	1560, 736, 1659, 736, 736, 1586, 1589, 1554, 1555, 1571,
	810, 1621, 1074, 1009, 790, 436, 774, 1349, 771, 1002,
	1103, 2231, 811, 1582, 770, 723, 986, 986, 986, 986,
	986, 2060, 1620, 2059, 1622, 1623, 1624, 1625, 1909, 1155,
	1156, 1694, 1984, 986, 1421, 1391, 1089, 1637, 1123, 1654,
	1412, 1651, 1290, 986, 850, 851, 2230, 1502, 1504, 1077,
	119, 800, 801, 119, 1510, 1511, 1512, 1513, 1454, 119,
	1612, 1613, 2229, 1629, 2228, 1534, 1453, 1619, 1631, 2035,
	421, 2211, 2210, 2177, 1702, 2133, 909, 1626, 2064, 2004,
	422, 119, 81, 1668, 1681, 1685, 1213, 2063, 1176, 1987,
	1566, 1485, 1698, 119, 1736, 2290, 2289, 119, 564, 1482,
	1120, 119, 853, 2289, 1660, 1665, 1663, 2290, 1661, 1671,
	1657, 1678, 1670, 119, 2077, 564, 1677, 1812, 1688, 1689,
	1149, 119, 1692, 552, 1766, 378, 76, 1658, 1729, 380,
	1390, 83, 1392, 1639, 1640, 1641, 2105, 49, 1703, 1166,
	1167, 2107, 19, 52, 1704, 2106, 18, 78, 1787, 1177,
	1710, 1708, 1762, 1791, 1792, 1793, 1723, 1, 1706, 1722,
	2108, 20, 2109, 21, 1765, 1539, 2104, 15, 2103, 14,
	1724, 1725, 1771, 1726, 1727, 2097, 10, 1707, 2116, 30,
	1636, 2115, 29, 2114, 28, 1733, 1734, 2178, 1786, 2128,
	1702, 1329, 2130, 1329, 909, 2112, 25, 2046, 1221, 1222,
	2111, 24, 1796, 1964, 1794, 1790, 1949, 1768, 2113, 26,
	2102, 13, 1948, 1780, 2099, 12, 2098, 11, 2096, 9,
	1742, 1743, 1643, 467, 1807, 1748, 1642, 1808, 1751, 1788,
	791, 1242, 1138, 1756, 1835, 1836, 1669, 1805, 1433, 1801,
	2138, 1336, 1326, 554, 89, 1404, 1800, 739, 1789, 1384,
	1973, 339, 1333, 1598, 2131, 793, 1597, 1594, 1609, 1840,
	1347, 1596, 1595, 2126, 1599, 1021, 1019, 1020, 1018, 1023,
	1022, 343, 1817, 1818, 1834, 1004, 2167, 854, 99, 1821,
	53, 1976, 1684, 1427, 94, 1146, 1824, 90, 100, 1844,
	748, 1811, 1322, 345, 892, 1452, 1572, 540, 541, 533,
	809, 2195, 1848, 815, 2141, 1490, 1855, 1737, 1738, 1739,
	1740, 1741, 549, 921, 1232, 441, 560, 1556, 2144, 1896,
	1168, 456, 455, 1819, 1865, 454, 1856, 1767, 1877, 451,
	1850, 452, 1849, 713, 1874, 1411, 1159, 119, 1531, 866,
	1867, 1074, 564, 564, 1831, 1854, 439, 431, 1846, 982,
	1872, 975, 1420, 1281, 564, 1279, 1859, 1278, 1091, 1385,
	882, 883, 875, 876, 877, 878, 879, 880, 881, 874,
	1847, 529, 884, 1845, 1778, 1902, 1774, 1292, 981, 385,
	1885, 66, 755, 358, 1897, 2071, 34, 379, 119, 426,
	27, 17, 761, 22, 1879, 16, 1425, 709, 38, 41,
	40, 1638, 1393, 2166, 2256, 1539, 777, 2277, 2198, 1878,
	1917, 2110, 1329, 2117, 2101, 2100, 2243, 1881, 1929, 1930,
	1931, 23, 2242, 4, 797, 1910, 67, 76, 1890, 1891,
	31, 1918, 2, 986, 1927, 861, 1936, 817, 0, 0,
	0, 1932, 0, 1928, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 1652, 1653, 1961, 1962, 1963, 1580, 0,
	0, 0, 1937, 0, 0, 0, 984, 1971, 0, 0,
	0, 0, 1912, 1913, 1914, 1915, 0, 1947, 1972, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 1960, 0,
	0, 0, 1702, 0, 1926, 1472, 1980, 1966, 1965, 0,
	0, 0, 1766, 1967, 0, 2009, 1989, 1990, 0, 0,
	1805, 1974, 0, 0, 0, 0, 1787, 0, 1493, 1988,
	1981, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 119, 119, 1939, 0, 1941, 0, 0, 0,
	0, 0, 1765, 0, 2034, 0, 2036, 564, 2012, 0,
	0, 0, 0, 0, 2006, 0, 2015, 0, 0, 0,
	560, 560, 0, 2033, 2011, 0, 0, 2027, 2016, 0,
	2026, 0, 560, 0, 2021, 2061, 0, 0, 0, 0,
	0, 1994, 1995, 1996, 1997, 1998, 2037, 0, 0, 2001,
	2002, 0, 1992, 0, 0, 0, 0, 0, 1766, 2029,
	76, 2030, 0, 1999, 0, 2053, 0, 0, 2003, 0,
	2058, 2055, 0, 0, 986, 0, 0, 2066, 1299, 0,
	2017, 0, 0, 2065, 0, 0, 0, 76, 1946, 0,
	0, 0, 2090, 2078, 0, 2018, 2019, 2020, 1765, 0,
	2083, 984, 0, 0, 0, 0, 0, 0, 0, 2085,
	2076, 872, 882, 883, 875, 876, 877, 878, 879, 880,
	881, 874, 2082, 0, 884, 0, 0, 0, 0, 0,
	0, 0, 2135, 0, 0, 0, 0, 0, 2136, 2143,
	2147, 0, 0, 0, 0, 0, 0, 0, 2162, 2148,
	0, 0, 0, 0, 2134, 0, 2149, 2155, 0, 0,
	2067, 2068, 2069, 2070, 0, 564, 2008, 2074, 2075, 0,
	1539, 0, 76, 0, 0, 2154, 0, 119, 0, 0,
	119, 0, 0, 0, 0, 0, 119, 2158, 564, 0,
	0, 0, 2171, 0, 0, 564, 564, 564, 119, 119,
	119, 0, 0, 2174, 0, 119, 0, 0, 2137, 2176,
	564, 564, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 2189, 0, 0, 549, 1005, 0, 0, 0, 2182,
	0, 0, 0, 0, 0, 0, 1731, 2150, 0, 2083,
	0, 2205, 2213, 0, 0, 2156, 0, 0, 0, 986,
	0, 0, 76, 2220, 0, 0, 2215, 0, 76, 2217,
	0, 2079, 2214, 2234, 2147, 0, 2212, 0, 119, 564,
	119, 0, 564, 2225, 0, 76, 0, 0, 2232, 0,
	76, 2219, 2247, 2227, 2246, 2237, 2245, 0, 2244, 2253,
	0, 0, 0, 0, 0, 0, 0, 2265, 0, 76,
	2271, 0, 76, 76, 2185, 0, 2250, 76, 2234, 0,
	1795, 0, 2280, 0, 0, 0, 0, 2283, 0, 119,
	2193, 0, 0, 0, 76, 861, 2287, 76, 2285, 2234,
	2272, 0, 2298, 2274, 0, 2300, 0, 0, 0, 0,
	0, 0, 76, 2308, 76, 1900, 0, 2234, 76, 2234,
	0, 0, 0, 0, 0, 0, 0, 0, 2295, 0,
	0, 0, 76, 0, 0, 76, 0, 2234, 0, 0,
	0, 564, 76, 0, 0, 0, 76, 2234, 0, 2313,
	2264, 2234, 0, 1076, 873, 872, 882, 883, 875, 876,
	877, 878, 879, 880, 881, 874, 2322, 0, 884, 0,
	0, 0, 0, 0, 0, 0, 560, 564, 564, 0,
	0, 0, 0, 560, 560, 560, 873, 872, 882, 883,
	875, 876, 877, 878, 879, 880, 881, 874, 560, 560,
	884, 0, 2301, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 119, 1895, 429, 0, 0, 0, 0, 0,
	119, 119, 0, 0, 0, 119, 119, 0, 0, 119,
	119, 119, 0, 0, 0, 0, 0, 2315, 2316, 0,
	0, 0, 0, 0, 0, 0, 1899, 0, 564, 564,
	0, 2255, 0, 0, 0, 0, 0, 560, 0, 0,
	1148, 0, 1351, 1352, 0, 1357, 1358, 1359, 1360, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	909, 0, 0, 1371, 1372, 1373, 0, 1919, 0, 0,
	1920, 0, 0, 1922, 1894, 0, 0, 0, 0, 0,
	0, 909, 873, 872, 882, 883, 875, 876, 877, 878,
	879, 880, 881, 874, 119, 564, 884, 564, 560, 0,
	119, 0, 119, 119, 0, 0, 119, 1746, 1747, 0,
	1749, 1750, 0, 1752, 1753, 1754, 1755, 0, 1757, 1758,
	1759, 0, 0, 0, 0, 0, 0, 0, 32, 0,
	68, 35, 36, 0, 119, 119, 119, 0, 0, 1208,
	0, 0, 61, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 37, 1214, 1219, 0, 0, 549, 1225, 1228,
	1229, 1230, 0, 873, 872, 882, 883, 875, 876, 877,
	878, 879, 880, 881, 874, 1238, 1239, 884, 0, 0,
	0, 0, 0, 0, 0, 1240, 0, 1243, 1244, 0,
	77, 0, 1248, 0, 1250, 1251, 0, 0, 0, 0,
	0, 0, 1258, 1259, 1260, 0, 1262, 1263, 0, 1265,
	1266, 1267, 1268, 2118, 1270, 1271, 1272, 0, 2324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 560, 560, 0, 0,
	0, 0, 39, 70, 43, 42, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 429, 46, 73, 72, 1893, 0, 0,
	0, 44, 0, 119, 119, 119, 119, 119, 909, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	119, 0, 0, 560, 119, 560, 0, 0, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1904, 1905, 59, 60, 0, 2120, 1906, 0,
	0, 1907, 0, 564, 0, 0, 1908, 2121, 71, 0,
	50, 51, 63, 0, 64, 0, 0, 2142, 2146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 1615, 1616, 1618, 0, 873, 872, 882, 883,
	875, 876, 877, 878, 879, 880, 881, 874, 0, 0,
	884, 0, 560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 2163, 2164, 0, 0, 564, 119, 564, 564,
	0, 0, 0, 0, 0, 0, 0, 868, 0, 871,
	0, 0, 0, 0, 0, 0, 885, 886, 887, 888,
	889, 890, 891, 69, 869, 870, 867, 873, 872, 882,
	883, 875, 876, 877, 878, 879, 880, 881, 874, 0,
	0, 884, 564, 564, 0, 0, 0, 0, 119, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 564, 0,
	0, 0, 2146, 0, 0, 0, 0, 0, 75, 0,
	1892, 0, 0, 0, 2226, 0, 0, 0, 1514, 1515,
	0, 0, 0, 1519, 1705, 0, 1522, 0, 0, 0,
	549, 1527, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 847, 873, 872, 882, 883, 875,
	876, 877, 878, 879, 880, 881, 874, 0, 0, 884,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 564, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 355, 2299, 564, 0, 0, 0, 117, 873,
	872, 882, 883, 875, 876, 877, 878, 879, 880, 881,
	874, 0, 0, 884, 564, 564, 0, 564, 0, 564,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 0, 532, 550, 0, 0, 117, 0, 0, 0,
	117, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 117, 0, 560, 1820, 560, 560, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 873, 872, 882, 883, 875, 876, 877, 878,
	879, 880, 881, 874, 0, 119, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 0,
	1695, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 564, 0, 0,
	119, 564, 0, 0, 0, 0, 0, 0, 564, 564,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 1883, 0, 1884, 0, 0, 1886, 1735, 1888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 32, 0,
	68, 35, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 0, 0, 0, 549, 0, 74, 1148,
	1770, 0, 37, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 564, 564, 564,
	77, 0, 560, 560, 0, 560, 564, 1804, 0, 0,
	0, 0, 1935, 0, 0, 564, 0, 0, 0, 0,
	0, 0, 0, 2118, 0, 0, 2276, 2279, 2275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 70, 43, 42, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2119, 564,
	0, 119, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 46, 73, 72, 117, 0, 0,
	0, 44, 0, 0, 0, 1862, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 1870, 1871, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 564, 0, 0,
	0, 0, 119, 0, 119, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 59, 60, 0, 2120, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 2121, 71, 0,
	50, 51, 63, 0, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	0, 0, 0, 0, 0, 1924, 1924, 1924, 0, 0,
	564, 0, 0, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 0, 0,
	117, 117, 117, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 69, 0, 550, 119, 0, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 0, 1985, 75, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 32, 0, 68, 35, 36, 0, 0,
	2010, 0, 0, 0, 0, 1924, 564, 61, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 37, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	564, 0, 0, 2057, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 2118, 0,
	0, 0, 0, 2320, 0, 0, 117, 0, 0, 117,
	0, 0, 0, 0, 0, 1098, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 117, 117,
	0, 0, 0, 0, 117, 0, 0, 39, 70, 43,
	42, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2119, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	73, 72, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 1043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	60, 0, 2120, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 2121, 71, 0, 50, 51, 63, 0, 64,
	0, 0, 0, 0, 2187, 0, 2206, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1924, 0,
	1030, 0, 0, 0, 0, 0, 1218, 1218, 0, 0,
	560, 1218, 1218, 1218, 1218, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 1218,
	1218, 1218, 1044, 0, 1218, 1218, 1218, 1218, 1218, 0,
	0, 0, 0, 0, 0, 1218, 1218, 1218, 0, 1218,
	1218, 0, 1218, 1218, 1218, 1218, 0, 1218, 1218, 1218,
	0, 117, 0, 75, 0, 0, 0, 0, 0, 117,
	388, 0, 0, 0, 117, 117, 0, 0, 117, 1309,
	1098, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1098, 0, 0, 0, 0,
	1057, 1060, 1061, 1062, 1063, 1064, 1065, 0, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 0, 1045, 1046, 1047, 1048,
	1024, 1028, 1058, 1025, 1031, 1027, 1029, 1026, 0, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 32, 117, 68, 35, 36, 0, 0, 117,
	0, 117, 117, 0, 0, 117, 61, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 37, 1043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 1409, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1098, 0, 0, 0, 2118, 0, 0,
	0, 0, 2309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 39, 70, 43, 42,
	45, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1218, 0, 46, 73,
	72, 0, 1044, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1218, 1218, 0, 0, 0, 1218, 0, 0, 1218,
	0, 0, 0, 0, 1218, 0, 32, 0, 68, 35,
	36, 550, 117, 117, 117, 117, 117, 0, 59, 60,
	61, 2120, 0, 0, 388, 0, 74, 0, 0, 117,
	37, 2121, 71, 388, 50, 51, 63, 0, 64, 117,
	1057, 1060, 1061, 1062, 1063, 1064, 1065, 550, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 0, 1045, 1046, 1047, 1048,
	1024, 1028, 1058, 1025, 1031, 1027, 1029, 1026, 77, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 0, 0,
	0, 2118, 0, 0, 0, 0, 2292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 32, 0, 68, 35, 36, 0, 69, 0, 0,
	39, 70, 43, 42, 45, 61, 117, 0, 0, 0,
	0, 74, 0, 0, 0, 37, 2119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 46, 73, 72, 0, 0, 0, 0, 44,
	0, 1059, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 2281, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 1218,
	0, 1098, 59, 60, 0, 2120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2121, 71, 0, 50, 51,
	63, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 70, 43, 42, 45,
	0, 0, 32, 0, 68, 35, 36, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 61, 550, 0, 0,
	0, 0, 74, 0, 0, 0, 37, 46, 73, 72,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 69, 0, 0, 0, 0, 0, 59, 60, 0,
	2120, 0, 0, 0, 0, 0, 0, 2118, 0, 0,
	2121, 71, 2233, 50, 51, 63, 0, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 117,
	0, 32, 0, 68, 35, 36, 39, 70, 43, 42,
	45, 0, 0, 0, 117, 61, 0, 0, 0, 0,
	0, 74, 2119, 0, 0, 37, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 73,
	72, 0, 0, 0, 0, 44, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 430, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 59, 60,
	0, 2120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2121, 71, 0, 50, 51, 63, 0, 64, 0,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 70, 43, 42, 45,
	0, 0, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 2119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 73, 72,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 59, 60, 0,
	2120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2121, 71, 0, 50, 51, 63, 0, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 117, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 550, 0, 0, 2165, 0, 0, 0, 0,
	0, 0, 117, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 2168, 2169, 2170, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 1330, 1331, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 1581, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 1330, 1331, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 1991, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 1709, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 1701, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 77, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 1310, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 1174, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 1341, 1345,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 1344, 187, 324, 680, 615,
	614, 1339, 0, 1340, 177, 195, 562, 121, 133, 1337,
	1343, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 682,
	662, 296, 620, 685, 592, 609, 696, 610, 613, 651,
	578, 632, 230, 607, 579, 0, 596, 569, 603, 570,
	593, 622, 164, 591, 664, 635, 684, 194, 647, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 683, 628,
	0, 691, 197, 0, 644, 318, 285, 215, 0, 0,
	624, 671, 630, 660, 619, 653, 585, 643, 686, 608,
	649, 687, 0, 0, 0, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 646, 681, 605, 648,
	650, 567, 645, 0, 573, 580, 695, 677, 599, 600,
	601, 0, 0, 0, 0, 0, 0, 0, 623, 631,
	657, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	597, 0, 641, 0, 0, 0, 581, 574, 0, 0,
	621, 0, 0, 0, 584, 124, 598, 658, 0, 565,
	174, 216, 135, 661, 676, 618, 187, 324, 680, 615,
	614, 250, 0, 290, 177, 195, 562, 121, 133, 558,
	176, 226, 259, 269, 606, 566, 665, 594, 604, 156,
	602, 262, 234, 313, 0, 638, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 617, 652, 595, 153, 655,
	642, 670, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 571, 0, 287, 316,
	330, 203, 142, 590, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 588, 589, 586, 0, 587,
	633, 634, 688, 689, 690, 659, 582, 0, 672, 673,
	0, 663, 678, 679, 654, 697, 611, 612, 572, 575,
	576, 577, 583, 625, 626, 637, 640, 668, 667, 666,
	669, 674, 693, 692, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 636, 120, 131, 196,
	698, 254, 170, 317, 568, 162, 0, 0, 627, 629,
	639, 656, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 675, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	164, 434, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 481,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	470, 471, 0, 0, 0, 0, 0, 0, 1320, 0,
	77, 0, 0, 435, 458, 457, 460, 461, 462, 463,
	0, 0, 145, 459, 464, 465, 466, 1321, 0, 0,
	432, 449, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	495, 0, 448, 0, 0, 443, 444, 445, 450, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 472, 0, 0, 187, 324, 0, 0, 493, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 478, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 482, 494, 488, 490, 489, 486, 487,
	485, 484, 483, 496, 473, 474, 475, 476, 479, 0,
	491, 492, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 508, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 497, 498, 499, 500, 501, 502, 503,
	504, 507, 505, 506, 477, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 32, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 164, 434,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 481, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 435, 458, 457, 460, 461, 462, 463, 0, 0,
	145, 459, 464, 465, 466, 0, 0, 0, 432, 449,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 495, 0,
	448, 0, 0, 443, 444, 445, 450, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 472,
	0, 0, 187, 324, 0, 0, 493, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	478, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 482, 494, 488, 490, 489, 486, 487, 485, 484,
	483, 496, 473, 474, 475, 476, 479, 0, 491, 492,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 508, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 497, 498, 499, 500, 501, 502, 503, 504, 507,
	505, 506, 477, 120, 131, 196, 75, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 164, 434, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 481, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 435, 458,
	457, 460, 461, 462, 463, 0, 0, 145, 459, 464,
	465, 466, 0, 0, 0, 432, 449, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	447, 428, 0, 0, 0, 495, 0, 448, 0, 0,
	443, 444, 445, 450, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 472, 0, 0, 187,
	324, 0, 0, 493, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 478, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 482, 494,
	488, 490, 489, 486, 487, 485, 484, 483, 496, 473,
	474, 475, 476, 479, 0, 491, 492, 0, 0, 0,
	0, 509, 510, 511, 512, 513, 514, 515, 508, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 497, 498,
	499, 500, 501, 502, 503, 504, 507, 505, 506, 477,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 164, 434, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 481, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 808, 435, 458, 457, 460, 461,
	462, 463, 0, 0, 145, 459, 464, 465, 466, 0,
	0, 0, 432, 449, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 447, 0, 0,
	0, 0, 495, 0, 448, 0, 0, 443, 444, 445,
	450, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 472, 0, 0, 187, 324, 0, 0,
	493, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 478, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 482, 494, 488, 490, 489,
	486, 487, 485, 484, 483, 496, 473, 474, 475, 476,
	479, 0, 491, 492, 0, 0, 0, 0, 509, 510,
	511, 512, 513, 514, 515, 508, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 497, 498, 499, 500, 501,
	502, 503, 504, 507, 505, 506, 477, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 164,
	434, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 481, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 470,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 435, 458, 457, 460, 461, 462, 463, 0,
	0, 145, 459, 464, 465, 466, 0, 0, 0, 432,
	449, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 446, 447, 1216, 0, 0, 0, 495,
	0, 448, 0, 0, 443, 444, 445, 450, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	472, 0, 0, 187, 324, 0, 0, 493, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 478, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 482, 494, 488, 490, 489, 486, 487, 485,
	484, 483, 496, 473, 474, 475, 476, 479, 0, 491,
	492, 0, 0, 0, 0, 509, 510, 511, 512, 513,
	514, 515, 508, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 497, 498, 499, 500, 501, 502, 503, 504,
	507, 505, 506, 477, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 164, 434, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 481, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 435,
	458, 1227, 460, 461, 462, 463, 0, 0, 145, 459,
	464, 465, 466, 0, 0, 0, 432, 449, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 447, 1216, 0, 0, 0, 495, 0, 448, 0,
	0, 443, 444, 445, 450, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 472, 0, 0,
	187, 324, 0, 0, 493, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 478, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 482,
	494, 488, 490, 489, 486, 487, 485, 484, 483, 496,
	473, 474, 475, 476, 479, 0, 491, 492, 0, 0,
	0, 0, 509, 510, 511, 512, 513, 514, 515, 508,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 497,
	498, 499, 500, 501, 502, 503, 504, 507, 505, 506,
	477, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 164, 434, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 481, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 470, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 435, 458, 1224, 460,
	461, 462, 463, 0, 0, 145, 459, 464, 465, 466,
	0, 0, 0, 432, 449, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 447, 1216,
	0, 0, 0, 495, 0, 448, 0, 0, 443, 444,
	445, 450, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 472, 0, 0, 187, 324, 0,
	0, 493, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 478, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 482, 494, 488, 490,
	489, 486, 487, 485, 484, 483, 496, 473, 474, 475,
	476, 479, 0, 491, 492, 0, 0, 0, 0, 509,
	510, 511, 512, 513, 514, 515, 508, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 497, 498, 499, 500,
	501, 502, 503, 504, 507, 505, 506, 477, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	164, 434, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 481,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 1136, 435, 458, 457, 460, 461, 462, 463,
	0, 0, 145, 459, 464, 465, 466, 0, 0, 0,
	432, 449, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 447, 0, 0, 0, 0,
	495, 0, 448, 0, 0, 443, 444, 445, 450, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 472, 0, 0, 187, 324, 0, 0, 493, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 478, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 482, 494, 488, 490, 489, 486, 487,
	485, 484, 483, 496, 473, 474, 475, 476, 479, 0,
	491, 492, 0, 0, 0, 0, 509, 510, 511, 512,
	513, 514, 515, 508, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 497, 498, 499, 500, 501, 502, 503,
	504, 507, 505, 506, 477, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 164, 434, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 481, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 470, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	435, 458, 457, 460, 461, 462, 463, 0, 0, 145,
	459, 464, 465, 466, 0, 0, 0, 432, 449, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 447, 0, 0, 0, 0, 495, 0, 448,
	0, 0, 443, 444, 445, 450, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 472, 0,
	0, 187, 324, 0, 0, 493, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 478,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	482, 494, 488, 490, 489, 486, 487, 485, 484, 483,
	496, 473, 474, 475, 476, 479, 0, 491, 492, 0,
	0, 0, 0, 509, 510, 511, 512, 513, 514, 515,
	508, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	497, 498, 499, 500, 501, 502, 503, 504, 507, 505,
	506, 477, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 164, 434, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 481, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 435, 458, 457,
	460, 461, 462, 463, 0, 0, 145, 459, 464, 465,
	466, 0, 0, 0, 432, 449, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 447,
	0, 0, 0, 0, 495, 0, 448, 0, 0, 443,
	444, 445, 450, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 472, 0, 0, 187, 324,
	0, 0, 493, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 478, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 482, 494, 488,
	490, 489, 486, 487, 485, 484, 483, 496, 473, 474,
	475, 476, 479, 0, 491, 492, 0, 0, 0, 0,
	819, 820, 821, 822, 823, 827, 828, 832, 833, 841,
	840, 839, 842, 843, 845, 844, 846, 824, 825, 826,
	829, 830, 831, 834, 835, 838, 836, 837, 477, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	481, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 470, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 435, 458, 457, 460, 461, 462,
	463, 0, 0, 145, 459, 464, 465, 466, 0, 0,
	0, 0, 449, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 447, 0, 0, 0,
	0, 495, 0, 448, 0, 0, 443, 444, 445, 450,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 472, 0, 0, 187, 324, 0, 0, 493,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 478, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 2302, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 482, 494, 488, 490, 489, 486,
	487, 485, 484, 483, 496, 473, 474, 475, 476, 479,
	0, 491, 492, 0, 0, 0, 0, 509, 510, 511,
	512, 513, 514, 515, 508, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 497, 498, 499, 500, 501, 502,
	503, 504, 507, 505, 506, 477, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 481, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	808, 435, 458, 457, 460, 461, 462, 463, 0, 0,
	145, 459, 464, 465, 466, 0, 0, 0, 0, 449,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 446, 447, 0, 0, 0, 0, 495, 0,
	448, 0, 0, 443, 444, 445, 450, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 472,
	0, 0, 187, 324, 0, 0, 493, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	478, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 482, 494, 488, 490, 489, 486, 487, 485, 484,
	483, 496, 473, 474, 475, 476, 479, 0, 491, 492,
	0, 0, 0, 0, 509, 510, 511, 512, 513, 514,
	515, 508, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 497, 498, 499, 500, 501, 502, 503, 504, 507,
	505, 506, 477, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 481, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 470, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 435, 458,
	457, 460, 461, 462, 463, 0, 0, 145, 459, 464,
	465, 466, 0, 0, 0, 0, 449, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 446,
	447, 0, 0, 0, 0, 495, 0, 448, 0, 0,
	443, 444, 445, 450, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 472, 0, 0, 187,
	324, 0, 0, 493, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 478, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 482, 494,
	488, 490, 489, 486, 487, 485, 484, 483, 496, 473,
	474, 475, 476, 479, 0, 491, 492, 0, 0, 0,
	0, 509, 510, 511, 512, 513, 514, 515, 508, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 497, 498,
	499, 500, 501, 502, 503, 504, 507, 505, 506, 477,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 1298, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 0, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 1302,
	0, 0, 0, 0, 0, 118, 0, 390, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 0, 0, 187, 324, 0, 1301,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 392,
	393, 394, 395, 399, 400, 404, 405, 413, 412, 411,
	414, 415, 417, 416, 418, 396, 397, 398, 401, 402,
	403, 406, 407, 410, 408, 409, 0, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 1298, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 0, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 1302, 0, 0, 0,
	0, 0, 118, 0, 390, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	0, 0, 0, 187, 324, 0, 1301, 0, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 0, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 1296, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 393, 394, 395,
	399, 400, 404, 405, 413, 412, 411, 414, 415, 417,
	416, 418, 396, 397, 398, 401, 402, 403, 406, 407,
	410, 408, 409, 0, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 859, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 0, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 860,
	0, 863, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 856, 855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 0, 0, 0,
	187, 324, 0, 0, 0, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 0, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 393, 394, 395, 399, 400, 404,
	405, 413, 412, 411, 414, 415, 417, 416, 418, 396,
	397, 398, 401, 402, 403, 406, 407, 410, 408, 409,
	0, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 1559,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 0, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 390, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 0, 0, 0, 187, 324, 0,
	0, 0, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 0, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	392, 393, 394, 395, 399, 400, 404, 405, 413, 412,
	411, 414, 415, 417, 416, 418, 396, 397, 398, 401,
	402, 403, 406, 407, 410, 408, 409, 0, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 390, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 392, 393, 394,
	395, 399, 400, 404, 405, 413, 412, 411, 414, 415,
	417, 416, 418, 396, 397, 398, 401, 402, 403, 406,
	407, 410, 408, 409, 0, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 863, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 392, 393, 394, 395, 399, 400,
	404, 405, 413, 412, 411, 414, 415, 417, 416, 418,
	396, 397, 398, 401, 402, 403, 406, 407, 410, 408,
	409, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 873, 872, 882, 883, 875, 876,
	877, 878, 879, 880, 881, 874, 0, 0, 884, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	32, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 1293, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 0, 0, 187, 324, 0, 0,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	75, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 32, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 137, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 203,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	221, 138, 183, 284, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 75, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 242, 243, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 1007, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 1006, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 310, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 310, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 137, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 203, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 221, 138, 183, 284, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 242, 243, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 236, 294, 0, 0, 0,
	0, 197, 0, 0, 318, 285, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	216, 135, 0, 0, 0, 187, 324, 0, 0, 0,
	250, 0, 290, 177, 195, 139, 121, 133, 149, 176,
	226, 259, 269, 0, 0, 0, 0, 0, 156, 0,
	262, 234, 313, 0, 0, 240, 261, 198, 302, 252,
	311, 312, 178, 295, 321, 326, 282, 165, 0, 125,
	0, 247, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 281, 300, 140, 297, 214, 220, 150, 152, 151,
	134, 276, 299, 144, 154, 286, 265, 291, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 293,
	310, 146, 273, 274, 327, 260, 128, 308, 289, 212,
	188, 189, 127, 0, 257, 163, 173, 158, 229, 0,
	172, 249, 305, 306, 157, 329, 136, 320, 130, 137,
	319, 223, 0, 222, 322, 301, 309, 213, 206, 0,
	129, 307, 211, 205, 193, 168, 180, 245, 201, 246,
	181, 218, 217, 219, 0, 0, 0, 287, 316, 330,
	203, 142, 0, 275, 298, 0, 0, 143, 171, 167,
	244, 221, 138, 183, 284, 192, 199, 256, 328, 233,
	263, 147, 315, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	254, 170, 317, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 207, 208, 209,
	210, 224, 225, 227, 228, 231, 232, 235, 237, 238,
	239, 241, 242, 243, 248, 251, 253, 255, 258, 264,
	266, 267, 268, 270, 271, 272, 277, 278, 279, 280,
	288, 292, 303, 304, 314, 323, 325, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 976, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 236, 294, 0, 0, 0, 0, 197, 0,
	0, 318, 285, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 216, 135, 0,
	0, 0, 187, 324, 0, 0, 0, 250, 0, 290,
	177, 195, 139, 121, 133, 149, 176, 226, 259, 269,
	0, 0, 0, 0, 0, 156, 0, 262, 234, 313,
	0, 0, 240, 261, 198, 302, 252, 311, 312, 178,
	295, 321, 326, 282, 165, 0, 125, 0, 247, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 281, 300,
	140, 297, 214, 220, 150, 152, 151, 134, 276, 299,
	144, 154, 286, 265, 291, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 293, 310, 146, 273,
	274, 327, 260, 128, 308, 289, 212, 188, 189, 127,
	0, 257, 163, 173, 158, 229, 0, 172, 249, 305,
	306, 157, 329, 136, 320, 130, 137, 319, 223, 0,
	222, 322, 301, 309, 213, 206, 0, 129, 307, 211,
	205, 193, 168, 180, 245, 201, 246, 181, 218, 217,
	219, 0, 0, 0, 287, 316, 330, 203, 142, 0,
	275, 298, 0, 0, 143, 171, 167, 244, 221, 138,
	183, 284, 192, 199, 256, 328, 233, 263, 147, 315,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 0, 254, 170, 317,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 207, 208, 209, 210, 224, 225,
	227, 228, 231, 232, 235, 237, 238, 239, 241, 242,
	243, 248, 251, 253, 255, 258, 264, 266, 267, 268,
	270, 271, 272, 277, 278, 279, 280, 288, 292, 303,
	304, 314, 323, 325, 296, 0, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 236,
	294, 0, 0, 0, 0, 197, 0, 0, 318, 285,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 216, 135, 0, 0, 0, 187,
	324, 0, 0, 0, 250, 0, 290, 177, 195, 139,
	121, 133, 149, 176, 226, 259, 269, 0, 0, 0,
	0, 0, 156, 0, 262, 234, 313, 0, 0, 240,
	261, 198, 302, 252, 311, 312, 178, 295, 321, 326,
	282, 165, 0, 125, 0, 247, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 281, 300, 140, 297, 214,
	220, 150, 152, 151, 134, 276, 299, 144, 154, 286,
	265, 291, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 293, 310, 146, 273, 274, 327, 260,
	128, 308, 289, 212, 188, 189, 127, 0, 257, 163,
	173, 158, 229, 0, 172, 249, 305, 306, 157, 329,
	136, 320, 130, 137, 319, 223, 0, 222, 322, 301,
	309, 213, 206, 0, 129, 307, 211, 205, 193, 168,
	180, 245, 201, 246, 181, 218, 217, 219, 0, 0,
	0, 287, 316, 330, 203, 142, 0, 275, 298, 0,
	0, 143, 171, 167, 244, 221, 138, 183, 284, 192,
	199, 256, 328, 233, 263, 147, 315, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 254, 170, 317, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 207, 208, 209, 210, 224, 225, 227, 228, 231,
	232, 235, 237, 238, 239, 241, 242, 243, 248, 251,
	253, 255, 258, 264, 266, 267, 268, 270, 271, 272,
	277, 278, 279, 280, 288, 292, 303, 304, 314, 323,
	325, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 236, 294, 0, 0,
	0, 0, 197, 0, 0, 318, 285, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 216, 135, 0, 115, 0, 187, 324, 0, 0,
	0, 250, 0, 290, 177, 195, 139, 121, 133, 149,
	176, 226, 259, 269, 0, 0, 0, 0, 0, 156,
	0, 262, 234, 313, 0, 0, 240, 261, 198, 302,
	252, 311, 312, 178, 295, 321, 326, 282, 165, 0,
	125, 0, 247, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 281, 300, 140, 297, 214, 220, 150, 152,
	151, 134, 276, 299, 144, 154, 286, 265, 291, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	293, 310, 146, 273, 274, 327, 260, 128, 308, 289,
	212, 188, 189, 127, 0, 257, 163, 173, 158, 229,
	0, 172, 249, 305, 306, 157, 329, 136, 320, 130,
	137, 319, 223, 0, 222, 322, 301, 309, 213, 206,
	0, 129, 307, 211, 205, 193, 168, 180, 245, 201,
	246, 181, 218, 217, 219, 0, 0, 0, 287, 316,
	330, 203, 142, 0, 275, 298, 0, 0, 143, 171,
	167, 244, 221, 138, 183, 284, 192, 199, 256, 328,
	233, 263, 147, 315, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 254, 170, 317, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 207, 208,
	209, 210, 224, 225, 227, 228, 231, 232, 235, 237,
	238, 239, 241, 242, 243, 248, 251, 253, 255, 258,
	264, 266, 267, 268, 270, 271, 272, 277, 278, 279,
	280, 288, 292, 303, 304, 314, 323, 325, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 236, 294, 0, 0, 0, 0, 197,
	0, 0, 318, 285, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 216, 135,
	0, 0, 0, 187, 324, 0, 0, 0, 250, 0,
	290, 177, 195, 139, 121, 133, 149, 176, 226, 259,
	269, 0, 0, 0, 0, 0, 156, 0, 262, 234,
	313, 0, 0, 240, 261, 198, 302, 252, 311, 312,
	178, 295, 321, 326, 282, 165, 0, 125, 0, 247,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 281,
	300, 140, 297, 214, 220, 150, 152, 151, 134, 276,
	299, 144, 154, 286, 265, 291, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 293, 310, 146,
	273, 274, 327, 260, 128, 308, 289, 212, 188, 189,
	127, 0, 257, 163, 173, 158, 229, 0, 172, 249,
	305, 306, 157, 329, 136, 320, 130, 137, 319, 223,
	0, 222, 322, 301, 309, 213, 206, 0, 129, 307,
	211, 205, 193, 168, 180, 245, 201, 246, 181, 218,
	217, 219, 0, 0, 0, 287, 316, 330, 203, 142,
	0, 275, 298, 0, 0, 143, 171, 167, 244, 221,
	138, 183, 284, 192, 199, 256, 328, 233, 263, 147,
	315, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 0, 254, 170,
	317, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 207, 208, 209, 210, 224,
	225, 227, 228, 231, 232, 235, 237, 238, 239, 241,
	242, 243, 248, 251, 253, 255, 258, 264, 266, 267,
	268, 270, 271, 272, 277, 278, 279, 280, 288, 292,
	303, 304, 314, 323, 325, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	236, 294, 0, 0, 0, 0, 197, 0, 0, 318,
	285, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 216, 135, 0, 0, 0,
	187, 324, 0, 0, 0, 250, 0, 290, 177, 195,
	139, 121, 133, 149, 176, 226, 259, 269, 0, 0,
	0, 0, 0, 156, 0, 262, 234, 313, 0, 0,
	240, 261, 198, 302, 252, 311, 312, 178, 295, 321,
	326, 282, 165, 0, 125, 0, 247, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 281, 300, 140, 297,
	214, 220, 150, 152, 151, 134, 276, 299, 144, 154,
	286, 265, 291, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 293, 310, 146, 273, 274, 327,
	260, 128, 308, 289, 212, 188, 189, 127, 0, 257,
	163, 173, 158, 229, 0, 172, 249, 305, 306, 157,
	329, 136, 320, 130, 137, 319, 223, 0, 222, 322,
	301, 309, 213, 206, 0, 129, 307, 211, 205, 193,
	168, 180, 245, 201, 246, 181, 218, 217, 219, 0,
	0, 0, 287, 316, 330, 203, 142, 0, 275, 298,
	0, 0, 143, 171, 167, 244, 221, 138, 183, 284,
	192, 199, 256, 328, 233, 263, 147, 315, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 131, 196, 0, 254, 170, 317, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 207, 208, 209, 210, 224, 225, 227, 228,
	231, 232, 235, 237, 238, 239, 241, 242, 243, 248,
	251, 253, 255, 258, 264, 266, 267, 268, 270, 271,
	272, 277, 278, 279, 280, 288, 292, 303, 304, 314,
	323, 325, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 236, 294, 0,
	0, 0, 0, 197, 0, 0, 318, 285, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 216, 135, 0, 0, 0, 187, 324, 0,
	0, 0, 250, 0, 290, 177, 195, 139, 121, 133,
	149, 176, 226, 259, 269, 0, 0, 0, 0, 0,
	156, 0, 262, 234, 313, 0, 0, 240, 261, 198,
	302, 252, 311, 312, 178, 295, 321, 326, 282, 165,
	0, 125, 0, 247, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 281, 300, 140, 297, 214, 220, 150,
	152, 151, 134, 276, 299, 144, 154, 286, 265, 291,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 293, 310, 146, 273, 274, 327, 260, 128, 308,
	289, 212, 188, 189, 127, 0, 257, 163, 173, 158,
	229, 0, 172, 249, 305, 306, 157, 329, 136, 320,
	130, 137, 319, 223, 0, 222, 322, 301, 309, 213,
	206, 0, 129, 307, 211, 205, 193, 168, 180, 245,
	201, 246, 181, 218, 217, 219, 0, 0, 0, 287,
	316, 330, 203, 142, 0, 275, 298, 0, 0, 143,
	171, 167, 244, 221, 138, 183, 284, 192, 199, 256,
	328, 233, 263, 147, 315, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 131,
	196, 0, 254, 170, 317, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 207,
	208, 209, 210, 224, 225, 227, 228, 231, 232, 235,
	237, 238, 239, 241, 242, 243, 248, 251, 253, 255,
	258, 264, 266, 267, 268, 270, 271, 272, 277, 278,
	279, 280, 288, 292, 303, 304, 314, 323, 325, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 236, 294, 0, 0, 0, 0,
	197, 0, 0, 318, 285, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 216,
	135, 0, 0, 0, 187, 324, 0, 0, 0, 250,
	0, 290, 177, 195, 139, 121, 133, 149, 176, 226,
	259, 269, 0, 0, 0, 0, 0, 156, 0, 262,
	234, 313, 0, 0, 240, 261, 198, 302, 252, 311,
	312, 178, 295, 321, 326, 282, 165, 0, 125, 0,
	247, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	281, 300, 140, 297, 214, 220, 150, 152, 151, 134,
	276, 299, 144, 154, 286, 265, 291, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 293, 310,
	146, 273, 274, 327, 260, 128, 308, 289, 212, 188,
	189, 127, 0, 257, 163, 173, 158, 229, 0, 172,
	249, 305, 306, 157, 329, 136, 320, 130, 547, 319,
	223, 0, 222, 322, 301, 309, 213, 206, 0, 129,
	307, 211, 205, 193, 168, 180, 245, 201, 246, 181,
	218, 217, 219, 0, 0, 0, 287, 316, 330, 543,
	142, 0, 275, 298, 0, 0, 143, 171, 167, 244,
	548, 546, 537, 538, 192, 199, 256, 328, 233, 263,
	147, 315, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 0, 254,
	170, 317, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 207, 208, 209, 210,
	224, 225, 227, 228, 231, 232, 235, 237, 238, 239,
	241, 544, 545, 248, 251, 253, 255, 258, 264, 266,
	267, 268, 270, 271, 272, 277, 278, 279, 280, 288,
	292, 303, 304, 314, 323, 325, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 236, 294, 0, 0, 0, 0, 197, 0, 0,
	318, 285, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 216, 135, 0, 0,
	0, 187, 324, 0, 0, 0, 250, 0, 290, 177,
	195, 139, 121, 133, 149, 176, 226, 259, 269, 0,
	0, 0, 0, 0, 156, 0, 262, 234, 313, 0,
	0, 240, 261, 198, 302, 252, 311, 312, 178, 295,
	321, 326, 282, 165, 0, 125, 0, 247, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 281, 300, 140,
	297, 214, 220, 150, 152, 151, 134, 276, 299, 144,
	154, 286, 265, 291, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 293, 1001, 146, 273, 274,
	327, 260, 128, 308, 289, 212, 188, 189, 127, 0,
	257, 163, 173, 158, 229, 0, 172, 249, 305, 306,
	157, 329, 136, 320, 130, 137, 319, 223, 0, 222,
	322, 301, 309, 213, 206, 0, 129, 307, 211, 205,
	193, 168, 180, 245, 201, 246, 181, 218, 217, 219,
	0, 0, 0, 287, 316, 330, 203, 142, 0, 275,
	298, 0, 0, 143, 171, 167, 244, 221, 138, 183,
	284, 192, 199, 256, 328, 233, 263, 147, 315, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 0, 254, 170, 317, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 207, 208, 209, 210, 224, 225, 227,
	228, 231, 232, 235, 237, 238, 239, 241, 242, 243,
	248, 251, 253, 255, 258, 264, 266, 267, 268, 270,
	271, 272, 277, 278, 279, 280, 288, 292, 303, 304,
	314, 323, 325, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 236, 294,
	0, 0, 0, 0, 197, 0, 0, 318, 285, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 216, 135, 0, 0, 0, 187, 324,
	0, 0, 0, 250, 0, 290, 177, 195, 139, 121,
	133, 149, 176, 226, 259, 269, 0, 0, 0, 0,
	0, 156, 0, 262, 234, 313, 0, 0, 240, 261,
	198, 302, 252, 311, 312, 178, 295, 321, 326, 282,
	165, 0, 125, 0, 247, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 281, 300, 140, 297, 214, 220,
	150, 152, 151, 134, 276, 299, 144, 154, 286, 265,
	291, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 293, 534, 146, 273, 274, 327, 260, 128,
	308, 289, 212, 188, 189, 127, 0, 257, 163, 173,
	158, 229, 0, 172, 249, 305, 306, 157, 329, 136,
	320, 130, 547, 319, 223, 0, 222, 322, 301, 309,
	213, 206, 0, 129, 307, 211, 205, 193, 168, 180,
	245, 201, 246, 181, 218, 217, 219, 0, 0, 0,
	287, 316, 330, 543, 142, 0, 275, 298, 0, 0,
	143, 171, 167, 244, 548, 546, 537, 538, 192, 199,
	256, 328, 233, 263, 147, 315, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 254, 170, 317, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	207, 208, 209, 210, 224, 225, 227, 228, 231, 232,
	235, 237, 238, 239, 241, 544, 545, 248, 251, 253,
	255, 258, 264, 266, 267, 268, 270, 271, 272, 277,
	278, 279, 280, 288, 292, 303, 304, 314, 323, 325,
}
var yyPact = [...]int{

	233, -1000, -292, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1477, -1000, -1000, -1000, -1000, -1000, -1000, 703, 244,
	-1000, -1000, 436, 140, 22484, 434, 635, 23338, -1000, -1000,
	-1000, 117, 219, 23338, -1000, -1000, -79, -81, -1000, 220,
	349, 1034, 1362, 1032, 36, -1000, 1529, 1534, -1000, -1000,
	396, 40, -1000, -1000, -1000, 18212, 189, -1000, -1000, -1000,
	1463, 1474, 1268, -1000, 11807, 258, 258, 22057, 25046, -1000,
	1527, 23338, 10524, -1000, 410, 23338, -141, 239, 239, 156,
	432, -1000, 579, -1000, -1000, -1000, -1000, 23338, 253, 22911,
	253, 253, 253, 253, 253, 23338, -1000, 477, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23338, 1031, 1395, 657, 129, 7514, 7514, -1000, 627,
	-1000, 151, 149, 147, 138, 29, 658, -1000, 7514, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 206, 303, 207, 189,
	577, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1394, 1388,
	800, 1386, 205, 1384, 1193, -68, -1000, 1025, -1000, 1221,
	1440, 430, 23338, -1000, -1000, 1119, -1000, 1202, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 883,
	1391, 733, 14796, 1312, -1000, -1000, 687, 1501, -1000, 17358,
	475, -1000, 14369, 2739, 1154, -1000, -1000, 1154, -1000, -1000,
	456, -1000, -1000, 16077, 16077, 16077, 16077, 16077, 16077, 16077,
	16077, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1154, -1000, 11380,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	14369, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 21630, 20776, 23338, 1090, 1089,
	-1000, -1000, 474, 1118, -99, 24619, -1000, -1000, -1000, -1000,
	23765, 20349, 576, -1000, -1000, -1000, -1000, 1383, -1000, -1000,
	473, -1000, -1000, -1000, 1029, 216, -1000, 3997, 379, -1000,
	-1000, -1000, 1192, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22911,
	1436, 308, 1024, 634, 1021, 1020, 1018, 239, 1015, 1116,
	296, 23338, 1422, 1226, 23338, 1013, 1012, 1010, 1008, -1000,
	10094, -1000, 7514, 657, -1000, 839, 14369, 239, 239, 7514,
	7514, 7514, 23338, 23338, 23338, -1000, -1000, -1000, -1000, 23338,
	-1000, -1000, 657, 657, 7514, 7514, 620, 1499, 620, 620,
	-1000, -1000, -1000, -1000, 14369, -1000, 16077, -1000, -1000, 1006,
	191, -1000, -1000, -1000, -1000, -1000, -1000, 998, -1000, -1000,
	205, 205, -1000, 837, 205, 1107, -1000, 575, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	205, -1000, 13942, -284, -1000, -1000, 1268, -1000, -1000, 189,
	-1000, -1000, 23338, 7514, 18212, 1154, 22911, -1000, -1000, -1000,
	1521, 525, 1157, -1000, -1000, 1115, -1000, 693, 1414, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 470, 742, 1279,
	-1000, -1000, -1000, 23338, -1000, 14369, 14369, 856, -1000, 18639,
	-1000, -1000, -1000, -1000, 8374, 526, 16077, 691, 608, 16077,
	16077, 16077, 16077, 16077, 16077, 16077, 16077, 16077, 16077, 16077,
	16077, 16077, 16077, 16077, 791, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 996, -1000, 189, 923, 923, 487, 487,
	487, 487, 487, 487, 487, 19066, 1433, 883, 1005, 813,
	11380, 12661, 12661, 883, 14369, 14369, 13515, 13088, 12661, 12661,
	1433, 573, 813, 23765, -1000, -1000, 15650, -1000, -1000, -1000,
	-1000, -1000, 883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22911, 22911, 12661, 12661, 12661, 12661, 883, 883, 12661,
	12661, 12661, 12661, 12661, 883, 883, 883, 883, 1433, 1433,
	12661, 12661, 12661, 1433, 12661, 12661, 1433, 12661, 12661, 12661,
	12661, 1433, 12661, 12661, 12661, 170, 23338, -1000, 1139, 1175,
	-1000, -1000, -1000, 1429, 19494, 16931, -1000, 170, 1072, 20776,
	23338, -1000, -1000, 20776, 23338, 7944, 24192, 1095, -1000, -97,
	-107, -99, -1000, -1000, 485, -1000, -1000, -1000, 10952, -1000,
	9234, 1268, 5794, 9664, -1000, 379, 1192, -1000, -56, -1000,
	-1000, -1000, 1176, -1000, 1176, 169, 31, 1176, 1176, 1176,
	1176, 1176, -24, -24, -24, -24, 4, -1000, -1000, -1000,
	-1000, -1000, 1191, 1190, -1000, 1176, 1176, 1176, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1186, 178, 1181, 1181,
	1181, 1181, 1181, 192, -1000, 14369, 1201, -1000, 23338, 7514,
	1421, 7514, 139, 1188, 23338, -1000, 23338, 23338, 1113, -1000,
	23338, 1109, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 813, 995, 994, -1000, -1000, -1000, -1000,
	-1000, -1000, 626, -1000, -1000, -1000, -1000, 657, 23338, 23338,
	23338, 1427, 657, 813, 569, -1000, -1000, 991, -1000, 1107,
	1107, -1000, 1107, 205, 923, 1107, -1000, 990, 1417, 836,
	1433, 883, 619, -1000, -1000, -1000, 187, 950, 469, -1000,
	1275, 733, 733, 14796, -1000, -1000, -1000, -1000, 9234, 1457,
	-1000, 1290, 1289, 1196, -1000, -1000, 526, 625, -1000, -1000,
	846, -1000, -1000, -1000, -1000, 468, 1154, -1000, 2258, -1000,
	-1000, -1000, -1000, 691, 16077, 16077, 16077, 569, 2258, 2944,
	1660, 1952, 487, 622, 622, 486, 486, 486, 486, 486,
	537, 537, -1000, -1000, -1000, 883, -1000, -1000, -1000, 12661,
	-1000, 14369, -1000, 883, 983, -1000, -1000, 813, 464, 983,
	-1000, 686, 833, 582, 1498, 983, 568, 1490, 983, 983,
	983, 12661, 610, -1000, 14369, 883, -1000, 1101, 1104, 1103,
	983, 883, 1096, 983, 983, -166, -166, 883, 983, 883,
	983, 983, -166, -166, -166, -166, 12661, 12661, 983, 983,
	983, 12661, 983, 983, 12661, 983, 983, 983, 983, 12661,
	983, 983, 983, 184, 1154, -1000, 23765, 20776, 20776, 20776,
	20776, 20776, -1000, 1262, 1248, -1000, 1240, 1237, 1244, 18212,
	-1000, 988, 883, 136, 19494, -1000, 1154, -1000, 17785, 494,
	397, 391, 326, 1488, 20776, 1097, -1000, 1097, -1000, 463,
	-1000, -1000, 23765, -99, -113, -1000, -1000, 1095, -1000, 803,
	-1000, -1000, 813, -1000, 462, 1433, 1093, 5364, -1000, -1000,
	-1000, -1000, 216, -1000, -1000, -1000, 1187, 287, -1000, 1316,
	481, 523, 890, 1295, -1000, -1000, 310, -58, -1000, -1000,
	738, -24, -24, 1176, 1176, 162, 1176, -1000, -24, -1000,
	-1000, -1000, 485, 1381, 485, 485, 485, 485, -24, 834,
	834, -1000, -1000, -1000, -1000, 725, -1000, 1186, -1000, 712,
	-1000, -1000, -1000, -1000, -1000, 541, 1224, 22911, 189, 1424,
	-1000, -1000, -1000, 1535, -1000, -1000, 236, -1000, 280, -1000,
	7514, 23338, 7514, 7514, 1488, 985, 984, -1000, -1000, -1000,
	620, 657, 1368, -1000, -1000, 16077, -1000, -1000, -1000, -1000,
	170, 417, -1000, 1279, -1000, 1092, -1000, -1000, 553, 488,
	580, 204, 204, -1000, 544, 204, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 168, 1418, 22911, 22911, 1273, -1000,
	-1000, -1000, 23338, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 7084, 12661, -1000, 569, 2258, 2817, -1000, 16077,
	-1000, 883, 813, -1000, 12661, -1000, 6654, -1000, 133, 791,
	133, 16077, 16077, -1000, 16077, 16077, -1000, -201, -1000, 1152,
	596, -1000, 14369, 802, -1000, -1000, 16077, 16077, -1000, -1000,
	-1000, -1000, -1000, 21203, -1000, -166, -166, -166, -166, -166,
	-1000, -1000, -1000, -1000, 983, 983, -166, -166, -166, 983,
	-166, -166, 983, -166, -166, -166, -166, 983, -166, -166,
	-166, 1220, 23765, 1154, -1000, 19922, 22911, 1120, -1000, 570,
	1175, 1185, 1211, 955, -1000, -1000, -1000, -1000, 1243, -1000,
	1231, -1000, -1000, 1168, -1000, -1000, 1091, 1154, 22911, 16077,
	494, -1000, 1154, 1154, 1154, 1477, 14369, 1097, -1000, -1000,
	496, -1000, -1000, -115, -126, -1000, -1000, -1000, 8804, 5794,
	-1000, 5794, -1000, 22911, 195, -1000, 890, -1000, -1000, 890,
	-1000, -1000, -1000, 1182, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 665, 16077, 1518, -1000, 1302, -1000, 1298, 832, -1000,
	-1000, 1060, 485, 485, -24, -1000, -1000, 1176, -1000, 485,
	-1000, 535, -1000, -1000, -1000, -1000, 485, 981, -1000, 979,
	1082, -1000, 976, 65, 23338, -1000, -1000, -1000, 1207, -1000,
	-1000, -1000, 1059, 1066, -1000, 3997, 973, 971, 970, 23338,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 657, -1000, 16077,
	2258, -24, 23338, 1196, 619, -1000, 847, -1000, 890, 387,
	-1000, -1000, -1000, 1295, -1000, -1000, 285, 966, -1000, 962,
	957, 22911, 1297, 956, 23338, 22911, -1000, -1000, 896, 935,
	14369, -1000, 22911, 22911, 1154, 461, -1000, -1000, -1000, 1019,
	11807, -1000, -1000, 883, -1000, 16077, 2258, -1000, -1000, -1000,
	455, 883, 1176, 1176, -1000, 1176, 1181, -1000, 1176, 9,
	1176, 0, 883, 883, 2871, 2668, 2455, 2374, 1154, -148,
	-1000, 813, 14369, 2226, 1198, -1000, 358, -1000, -1000, -1000,
	-1000, -1000, -166, -166, -1000, -1000, -1000, -1000, -166, -1000,
	-1000, -166, -1000, -1000, -1000, -1000, -166, -1000, -1000, -1000,
	-1000, 1410, 1058, 1007, -1000, -1000, 12234, 883, 950, 940,
	-1000, 1477, 23765, 14369, -1000, -1000, 14369, 1179, -1000, 14369,
	-1000, -1000, -1000, -1000, 22911, 134, -1000, 14369, 940, 1085,
	-1000, 22911, 22911, 22911, 1463, 813, -1000, -1000, -1000, -1000,
	5364, -1000, 933, -1000, 1176, -1000, 1295, -1000, -1000, 22911,
	-1000, 2258, -93, -1000, -1000, -1000, -1000, -1000, -1000, 485,
	-1000, -1000, -1000, -1000, -1000, -24, 831, -24, 711, -1000,
	707, -1000, -1000, -232, 1172, -1000, 189, 23338, 116, 236,
	-1000, 3997, 3997, 3997, -1000, -1000, 2258, -86, -1000, -1000,
	-1000, 896, 185, 3997, -1000, 1201, 481, 195, -1000, -1000,
	-1000, -1000, -1000, 912, 421, -1000, 275, 185, 896, 813,
	557, 1415, -1000, 22911, 1486, 20776, -1000, -1000, -1000, 2258,
	6224, -1000, -1000, 173, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16077, 16077, 16077, 16077, 16077, 883, 829, 813,
	16077, 16077, 883, 1473, -1000, -1000, -1000, -1000, -1000, 1294,
	-1000, 1154, -1000, -1000, 186, -1000, 22911, 1463, -1000, 813,
	813, 22911, 813, 922, -1000, 1154, 16504, -1000, 18212, 917,
	917, 917, -1000, 389, 22911, 1414, 894, -1000, -1000, 485,
	-1000, 485, 1052, 1043, -1000, 22911, -1000, 1460, -1000, 116,
	-1000, 825, 99, 106, -1000, 98, 97, 96, 95, 88,
	-1000, -1000, -1000, -1000, 1347, 1333, 1112, 1040, -1000, -1000,
	891, -1000, 1171, 890, -1000, -1000, 887, -1000, -1000, 22911,
	-1000, 185, 1404, 1402, 1154, -1000, 1483, 1472, 1097, 11807,
	-1000, -1000, -1000, -1000, 1101, 1101, 1101, 1101, 59, -1000,
	-1000, 1101, 1101, -1000, 14369, 1515, -1000, 1154, -1000, 189,
	-1000, -1000, 886, -1000, 22911, -1000, -1000, 494, -1000, -1000,
	-1000, 389, -1000, 862, 544, 819, -1000, -1000, 183, -1000,
	-1000, -1000, -1000, 882, -1000, 142, 4555, -1000, -1000, -1000,
	-1000, -1000, -1000, 1358, 1356, 113, 217, 1325, 1327, 1469,
	20776, -1000, -1000, 310, 22911, 1201, -1000, -1000, -1000, 16077,
	-1000, 164, -1000, 14796, 14796, 1486, -1000, -1000, -1000, -1000,
	-1000, 883, 100, -208, -1000, -1000, 1046, 23765, 1007, 883,
	-1000, -1000, -1000, -1000, -1000, 700, -1000, 23338, 389, 119,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14369, 14369,
	4934, 4555, -1000, -1000, -1000, -1000, 1168, 696, 1333, 1467,
	1331, 1329, -1000, 817, 1097, 880, 1161, 2258, 876, -1000,
	22911, -1000, 813, -1000, 924, -1000, 813, -1000, 1483, -1000,
	-1000, 1272, -204, -212, 883, 888, -1000, -1000, 1160, -1000,
	389, 127, -1000, 780, 709, 73, 55, 3707, -1000, -1000,
	-1000, -1000, -296, -1000, -1000, 1335, -1000, 814, -1000, 1466,
	1465, -1000, 1486, 389, 22911, -1000, 164, 1284, 14796, -1000,
	-1000, 1271, -1000, -1000, 22911, -1000, 843, 744, 769, -1000,
	14369, 4555, 1455, 1453, 1437, 1392, 8804, 4436, -1000, -1000,
	797, 745, 1483, -1000, 873, -1000, 161, -1000, -206, 852,
	241, -1000, -1000, 629, 4555, -1000, 701, -297, 208, 189,
	493, 16077, -1000, -1000, -1000, -1000, -1000, -1000, 389, 159,
	-209, 1206, -1000, -1000, -1000, -1000, -1000, -1000, 4555, -1000,
	-301, 4555, 3142, -1000, -1000, -1000, 4305, -1000, -1000, -1000,
	-1000, 52, -1000, -1000, 2258, -1000, 1154, -213, 1205, 1203,
	1496, -1000, -302, 4190, -303, 232, 4555, 567, -1000, 14369,
	-1000, 493, -1000, 15223, -1000, -1000, 1508, -1000, 1503, 412,
	412, 3996, 604, 4555, -1000, -304, 229, 4555, -1000, 656,
	-1000, 1101, 883, -1000, -1000, -1000, 197, 719, -1000, -1000,
	-1000, 3537, -1000, -306, 4555, -1000, -1000, -1000, -1000, -1000,
	215, 2522, -307, -1000, 211, 4555, -1000,
}
var yyPgo = [...]int{

	0, 1842, 201, 1840, 154, 1836, 1834, 1833, 15, 13,
	11, 17, 1832, 1628, 1626, 1624, 1620, 1831, 1618, 1826,
	5, 1825, 1824, 1610, 1823, 1821, 1605, 1593, 1591, 1588,
	31, 1818, 24, 1817, 4, 112, 122, 1816, 3, 1814,
	1813, 10, 1812, 1811, 1585, 1810, 1809, 1808, 1807, 75,
	1806, 1578, 1576, 1805, 1803, 1572, 1570, 1802, 1801, 1555,
	1551, 1546, 1800, 150, 1799, 1797, 1796, 147, 78, 119,
	1795, 1794, 1793, 88, 57, 1641, 84, 37, 86, 693,
	1792, 20, 53, 1791, 1789, 99, 117, 1788, 121, 1787,
	65, 148, 79, 1786, 1784, 138, 1781, 1768, 1767, 104,
	1765, 1763, 49, 1762, 1761, 126, 1759, 51, 54, 44,
	1757, 1756, 1754, 1749, 1748, 110, 98, 1746, 1745, 113,
	1741, 59, 1739, 1735, 136, 1732, 1731, 1730, 107, 55,
	1728, 35, 1727, 40, 52, 1725, 42, 1724, 105, 1723,
	1715, 33, 22, 1714, 48, 1713, 38, 1711, 108, 211,
	989, 7, 39, 41, 56, 1710, 81, 36, 26, 97,
	80, 72, 29, 1709, 116, 1708, 68, 123, 106, 95,
	120, 1707, 1706, 1705, 767, 1704, 1703, 109, 1700, 60,
	125, 768, 149, 92, 1698, 1697, 66, 1694, 1693, 1692,
	1691, 63, 96, 1690, 1688, 87, 460, 82, 1415, 25,
	1633, 21, 124, 1687, 32, 1686, 1685, 2924, 83, 101,
	89, 1681, 85, 23, 43, 1680, 1679, 1678, 1677, 1676,
	1675, 1417, 1674, 1673, 1672, 1671, 118, 69, 1670, 1668,
	100, 73, 1667, 1666, 1665, 1664, 1663, 102, 61, 111,
	1662, 93, 90, 64, 1661, 1660, 1657, 1655, 47, 34,
	1654, 1653, 1652, 76, 67, 1651, 45, 27, 28, 50,
	8, 62, 74, 1650, 19, 1648, 91, 2, 6, 9,
	1646, 1642, 1640, 1636, 1632, 58, 1622, 1616, 46, 1613,
	1607, 1602, 30, 1599, 1597, 1567, 1557, 0, 115, 127,
	1553, 1541, 128,
}
var yyR1 = [...]int{

	0, 285, 286, 286, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 62, 2, 2, 7, 3, 3, 3,
	4, 4, 83, 84, 84, 88, 88, 5, 5, 6,
	6, 8, 8, 66, 66, 9, 10, 10, 10, 10,
	289, 289, 97, 97, 95, 95, 96, 96, 159, 159,
	11, 11, 11, 164, 164, 169, 169, 169, 172, 172,
	172, 172, 151, 152, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 273, 273, 274, 274, 275, 275,
	275, 275, 276, 276, 277, 277, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 24, 194, 194, 42,
	42, 43, 43, 43, 147, 147, 147, 12, 12, 12,
	12, 12, 19, 21, 21, 31, 31, 32, 22, 22,
	22, 22, 33, 33, 34, 25, 25, 25, 25, 25,
	25, 40, 40, 40, 39, 39, 38, 38, 38, 38,
	38, 38, 23, 23, 23, 23, 41, 41, 36, 36,
	35, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 26, 26, 26, 26, 26, 26, 18,
	272, 272, 272, 30, 30, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 47, 250, 251, 251, 251, 251, 251, 251,
	251, 251, 238, 239, 214, 214, 214, 214, 214, 214,
	214, 213, 213, 213, 213, 217, 217, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 216, 216, 216, 216,
	216, 216, 216, 216, 218, 218, 218, 218, 218, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 220, 220, 220, 220, 220, 220,
	220, 220, 237, 237, 221, 221, 230, 230, 231, 231,
	231, 228, 228, 229, 229, 232, 232, 224, 225, 233,
	226, 226, 226, 227, 227, 227, 236, 236, 236, 236,
	222, 240, 240, 260, 260, 259, 259, 258, 258, 258,
	249, 249, 255, 255, 255, 255, 255, 244, 244, 244,
	243, 243, 245, 245, 248, 248, 257, 257, 256, 241,
	241, 261, 261, 261, 261, 261, 242, 242, 242, 262,
	246, 246, 247, 247, 247, 268, 269, 267, 267, 267,
	267, 267, 112, 112, 112, 252, 252, 252, 253, 253,
	253, 254, 254, 254, 270, 270, 44, 44, 45, 50,
	50, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 146, 146, 146, 46, 192, 192,
	266, 266, 266, 265, 263, 263, 264, 264, 14, 48,
	48, 15, 15, 15, 15, 15, 15, 15, 16, 16,
	51, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	80, 178, 178, 176, 176, 179, 179, 177, 177, 177,
	180, 180, 180, 211, 211, 211, 53, 53, 58, 58,
	61, 59, 60, 27, 28, 28, 28, 28, 29, 193,
	193, 56, 56, 57, 57, 57, 57, 72, 72, 290,
	290, 55, 55, 54, 54, 54, 54, 17, 291, 63,
	64, 64, 65, 65, 65, 183, 183, 69, 69, 69,
	67, 67, 67, 68, 68, 74, 74, 78, 78, 78,
	78, 77, 77, 77, 77, 149, 149, 149, 150, 150,
	203, 203, 203, 202, 202, 202, 202, 82, 82, 85,
	85, 86, 86, 86, 86, 89, 132, 132, 106, 106,
	107, 107, 107, 107, 107, 118, 118, 158, 158, 157,
	157, 160, 160, 87, 87, 87, 87, 92, 92, 93,
	93, 94, 94, 191, 191, 185, 185, 209, 209, 209,
	98, 98, 98, 100, 99, 99, 99, 99, 101, 101,
	103, 104, 104, 102, 102, 105, 108, 108, 108, 108,
	109, 109, 79, 79, 79, 79, 79, 79, 79, 175,
	175, 111, 111, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 127, 127, 127, 127, 127, 127, 113,
	113, 113, 113, 113, 113, 113, 73, 73, 128, 128,
	128, 91, 90, 90, 76, 76, 75, 75, 129, 129,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 122, 122, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 292, 292, 124, 123,
	123, 123, 123, 123, 123, 70, 70, 70, 70, 70,
	210, 210, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 139, 139, 71, 71, 137,
	137, 138, 140, 140, 136, 136, 136, 115, 115, 115,
	115, 115, 115, 115, 115, 117, 117, 117, 141, 141,
	130, 130, 81, 81, 142, 142, 143, 143, 144, 144,
	145, 145, 148, 148, 153, 153, 153, 154, 154, 154,
	154, 119, 119, 155, 155, 155, 114, 114, 114, 114,
	114, 114, 156, 156, 156, 156, 161, 161, 131, 131,
	134, 134, 133, 135, 162, 162, 166, 163, 163, 167,
	167, 167, 167, 170, 170, 171, 171, 171, 168, 168,
	168, 165, 165, 165, 206, 206, 206, 173, 173, 184,
	184, 181, 181, 182, 182, 174, 174, 223, 223, 188,
	188, 188, 188, 188, 188, 188, 188, 190, 190, 189,
	189, 189, 186, 186, 186, 187, 187, 204, 204, 200,
	200, 205, 205, 201, 201, 207, 207, 208, 208, 271,
	271, 234, 234, 281, 281, 235, 235, 282, 282, 284,
	284, 279, 279, 280, 280, 283, 283, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	287, 288, 195, 196, 196, 196,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 11, 4, 7, 5, 1, 13, 3,
	10, 12, 2, 1, 3, 3, 6, 1, 3, 1,
	3, 7, 8, 1, 1, 9, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 0, 0, 2, 3, 3, 11, 7, 9,
	5, 5, 15, 11, 0, 1, 1, 3, 2, 3,
	3, 3, 0, 1, 1, 2, 2, 2, 2, 1,
	2, 2, 3, 3, 3, 3, 4, 0, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 4, 1, 1, 2, 3, 4, 3,
	3, 3, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 3, 3, 2, 4, 5, 2, 3, 4, 2,
	2, 3, 3, 3, 3, 3, 4, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 1, 2, 2, 3, 1,
	0, 3, 3, 0, 2, 2, 2, 1, 2, 1,
	2, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 2, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 2, 1, 5,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 0, 1, 3, 1, 2,
	3, 1, 1, 1, 0, 2, 1, 1, 5, 1,
	3, 2, 5, 4, 3, 3, 3, 5, 3, 8,
	10, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 0, 1, 2, 4, 0, 1,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	5, 4, 6, 4, 4, 4, 4, 4, 3, 2,
	3, 4, 4, 3, 6, 6, 4, 4, 4, 4,
	4, 4, 3, 3, 2, 6, 2, 4, 4, 4,
	5, 7, 6, 5, 4, 2, 4, 3, 2, 3,
	3, 1, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 2, 2, 2, 2, 3, 3, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 4, 7, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 4, 1, 3, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	3, 2, 1, 1, 3, 3, 0, 5, 5, 5,
	0, 2, 1, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 6,
	8, 8, 8, 8, 9, 4, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 1, 0, 2, 1, 1, 0, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -285, -1, -2, -7, -8, -9, -10, -11, -13,
	-44, -14, -15, -16, -51, -52, -53, -58, -59, -60,
	-56, -55, -54, -17, -23, -26, -18, -62, -27, -28,
	-29, -3, 6, 7, -66, 9, 10, 30, -47, 130,
	-45, -46, 133, 132, 169, 134, 162, 64, 225, -61,
	228, 229, -290, -193, 167, 168, 31, 32, 136, 212,
	213, 20, 37, 230, 232, -4, -83, -5, 8, 321,
	131, 226, 164, 163, 26, 366, -287, 68, -286, 436,
	-144, 15, -63, -291, -63, -63, -63, -63, -63, -250,
	-185, 105, 68, 23, -187, 143, 86, 312, 139, -194,
	-184, -186, 189, 199, 44, 150, 149, 140, 140, 141,
	143, 312, 139, 177, 176, 140, -102, -207, 71, -198,
	363, 153, 378, 379, 131, 186, 225, 239, 233, 267,
	255, 364, 380, 154, 207, 138, 253, 256, 299, 152,
	200, 381, 288, 294, 210, 80, 228, 308, 382, 155,
	204, 206, 205, 194, 211, 36, 165, 251, 244, 215,
	189, 383, 371, 242, 28, 184, 384, 296, 272, 385,
	368, 295, 247, 243, 136, 386, 156, 150, 179, 387,
	273, 277, 388, 300, 389, 390, 391, 142, 237, 238,
	392, 190, 302, 271, 33, 151, 365, 48, 174, 303,
	38, 275, 37, 287, 393, 270, 265, 394, 395, 396,
	397, 269, 236, 264, 202, 53, 137, 279, 278, 280,
	203, 298, 260, 258, 398, 399, 157, 400, 401, 245,
	18, 402, 403, 306, 168, 404, 42, 405, 406, 407,
	172, 408, 409, 410, 297, 274, 276, 188, 411, 248,
	147, 412, 176, 413, 367, 414, 304, 241, 415, 158,
	232, 173, 167, 307, 416, 213, 417, 418, 419, 159,
	420, 421, 422, 229, 230, 290, 208, 423, 424, 425,
	426, 198, 183, 310, 301, 52, 212, 284, 427, 235,
	149, 214, 428, 226, 43, 180, 7, 201, 291, 209,
	199, 262, 175, 429, 430, 249, 250, 268, 234, 263,
	227, 177, 178, 169, 431, 309, 285, 369, 51, 257,
	254, 181, 261, 432, 143, 433, 182, 231, 305, 252,
	286, 140, 123, 256, 299, 130, 289, 290, 296, -244,
	297, 176, 179, -211, 140, -176, 288, 182, 71, 141,
	142, 33, 301, 300, 292, -207, 144, 231, -72, 134,
	170, -102, -195, -195, -195, 291, 291, -195, -41, 71,
	214, -41, 30, 71, 71, 36, 71, 230, 6, -65,
	5, -174, 143, 145, 227, -84, -88, -209, -207, -199,
	73, 334, 335, 336, 337, 338, 351, 352, 353, 339,
	340, 354, 355, 356, 341, 342, 357, 358, 360, 361,
	359, 345, 344, 343, 346, 347, 349, 348, 350, -2,
	-154, 17, 16, -69, 54, 55, -64, -77, 114, -79,
	-207, -110, 88, -116, 29, 71, -198, 24, -115, -111,
	-136, -135, -91, 123, 124, 125, 112, 113, 120, 89,
	126, -122, -120, -121, -123, -125, -126, 73, 72, 81,
	74, 75, 76, 77, 82, 83, 84, -200, -133, -287,
	58, 59, 139, 322, 323, 324, 325, 362, 160, 326,
	91, 47, 311, 320, 319, 318, 316, 317, 313, 315,
	314, 328, 329, 146, 312, 118, 321, 351, 352, 353,
	354, 355, 356, 357, 358, 360, 361, 359, 341, 334,
	335, 336, 337, 338, 339, 340, 342, 343, 344, 345,
	346, 347, 348, 349, 350, -174, -174, 11, -95, -96,
	-102, -105, -207, -163, 227, -170, -167, 300, 301, -168,
	-171, -165, -136, 287, 409, 410, 299, 256, 298, -200,
	-207, -4, 6, -102, -251, -239, -242, -201, 155, -262,
	-200, -197, 152, 71, -198, 135, 161, 87, 370, 23,
	25, 282, 334, 90, 123, 335, 336, 337, 16, 20,
	91, 122, 322, 338, 130, 62, 313, 315, 311, 312,
	289, 29, 10, 26, 163, 193, 22, 116, 132, 94,
	95, 96, 166, 24, 164, 84, 160, 19, 65, 11,
	13, 332, 333, 14, 146, 145, 107, 191, 141, 60,
	8, 126, 27, 104, 56, 339, 340, 374, 45, 375,
	58, 105, 17, 316, 317, 31, 362, 341, 171, 376,
	342, 118, 196, 63, 50, 88, 82, 34, 85, 66,
	86, 15, 192, 61, 330, 195, 377, 106, 133, 321,
	59, 139, 6, 327, 30, 162, 345, 344, 343, 346,
	197, 57, 324, 325, 347, 434, 140, 93, 328, 329,
	144, 83, 5, 44, 32, 9, 64, 67, 318, 319,
	320, 47, 349, 348, 350, 92, 12, 331, 366, 141,
	-102, 321, -182, 146, -182, 177, 176, 140, 97, -48,
	-102, -181, 146, -200, -181, -181, -181, -181, -181, -102,
	127, -102, 71, 30, -180, 105, 12, 312, 139, 71,
	176, 179, 140, 177, 143, -196, -287, -201, -196, -246,
	11, 107, 180, 180, 180, 181, 180, -179, -178, 178,
	294, 295, 291, 293, 12, -80, 105, -196, 71, 230,
	144, -57, -2, -10, -8, -9, -2, 97, -195, -195,
	30, 30, 73, 51, 30, -36, -35, -37, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	30, -272, 68, -234, 287, 71, -63, -6, -4, -287,
	21, 22, 140, -102, 69, 23, -287, -288, 70, -155,
	19, 31, -119, 74, 77, -145, -148, -79, -199, 334,
	335, 336, 337, 338, 351, 352, 353, 339, 340, 354,
	355, 356, 341, 342, 357, 358, 360, 361, 359, 345,
	344, 343, 346, 347, 349, 348, 350, -207, 50, -67,
	21, 22, 79, 11, -203, 87, 86, 104, -202, 23,
	71, -198, -199, 73, 127, -79, -113, 107, 88, 105,
	106, 90, 109, 108, 119, 112, 113, 114, 115, 116,
	117, 118, 110, 111, 122, 97, 98, 99, 100, 101,
	102, 103, -175, -287, -91, -287, 128, 129, -116, -116,
	-116, -116, -116, -116, -116, -116, -287, -2, -129, -79,
	-287, -287, -287, -287, -287, -287, -287, -287, -287, -287,
	-287, -139, -79, -287, -292, -124, -287, -292, -124, -292,
	-124, -292, -287, -292, -124, -292, -124, -292, -292, -124,
	-292, -287, -287, -287, -287, -287, -287, -287, -287, -287,
	-287, -287, -287, -287, -287, -287, -287, -287, -287, -287,
	-287, -287, -287, -287, -287, -287, -287, -287, -287, -287,
	-287, -287, -287, -287, -287, -104, 27, -102, -82, -85,
	-86, -87, -106, -90, -287, -102, -91, -102, -95, -289,
	69, 11, 67, -289, 69, 127, 69, -164, -169, 302,
	304, 227, -168, -168, -206, -200, 73, 29, 97, 30,
	127, -63, 70, 69, -242, 155, 152, -213, -217, -219,
	-218, -220, -215, -216, 253, 256, 260, 258, 254, 259,
	123, 257, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 30, 165, 249, 250, 251, 252, 273,
	274, 275, 276, 277, 278, 279, 280, 233, 255, 364,
	234, 235, 236, 237, 238, 239, 241, 242, 243, 244,
	245, 246, 247, 71, -262, 68, -200, 23, 143, 71,
	88, 71, 71, 71, -182, 71, 69, 144, -95, 24,
	66, -97, -102, 71, 71, 71, 71, -208, -207, -197,
	-196, -180, 73, -79, -182, -182, -196, -196, -196, -102,
	-102, -102, -102, -180, -180, -196, -196, -177, 11, 107,
	11, -177, -177, -79, -116, 71, 71, 230, 71, -36,
	-36, 73, -36, 69, 97, -36, 70, -129, -271, 435,
	-69, -2, -102, -196, -88, -90, -287, -156, -200, 9,
	107, 69, 18, 69, -153, 25, 26, -153, 127, -117,
	51, 74, 77, -183, 49, -102, -79, -79, -127, 82,
	88, 83, 84, -202, 114, -208, -201, -197, -116, -128,
	-133, -91, 78, 107, 105, 106, 90, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -210, 71, 73, 71, -115, -115, -200, -67,
	-288, 69, -288, -2, -75, -78, 114, -79, -207, -75,
	-288, -79, -79, -136, 73, -75, -136, 73, -75, -75,
	-75, -67, -137, -138, 92, -136, -288, -116, -200, -200,
	-75, -76, -75, -75, -75, -288, -288, -78, -75, -78,
	-75, -75, -288, -288, -288, -288, -67, -67, -75, -75,
	-75, -67, -75, -75, -67, -75, -75, -75, -75, -67,
	-75, -75, -75, -159, 172, -102, 30, 69, -98, -100,
	-99, -101, 56, 60, 62, 57, 58, 59, 63, -191,
	23, -82, -89, 47, -287, -107, 172, -108, 23, -209,
	64, 145, 65, -159, 67, -82, -102, -82, -105, -207,
	114, -167, -170, 69, 303, 305, 306, -164, -227, 122,
	66, 85, -79, -201, -208, -69, -252, -253, -254, -201,
	73, 74, -239, -240, -241, -242, -255, 155, -261, 147,
	149, 44, -243, 156, 141, 45, -214, -228, 285, -221,
	68, -221, -221, 261, 253, 256, 254, -221, -221, -221,
	-221, -221, -226, 256, -226, -226, -226, -226, 254, 68,
	68, -221, -221, -221, -230, 68, -230, 248, -231, 68,
	-231, -231, -231, -231, -262, -79, -204, 67, -151, -102,
	-196, 24, -196, -42, 186, 161, 68, -102, -102, -102,
	-102, 69, 71, 71, -247, 11, 107, -180, -207, -207,
	-102, -118, 23, -180, -73, 166, 71, -35, -115, 70,
	-103, 27, 73, -67, -288, -50, -49, -188, 135, 132,
	133, 137, 138, -265, 282, 131, 256, 80, 29, 15,
	322, 172, 369, 71, 173, -288, 69, 127, 52, -119,
	-119, -148, -173, 19, 11, 47, 47, -68, 57, 82,
	83, 84, 127, -287, -128, -116, -116, -116, -73, 87,
	-288, -76, -79, -288, 69, -288, 127, -288, 69, 67,
	23, 11, 11, -288, 11, 11, -288, -288, -288, -75,
	-140, -138, 94, -79, -288, -288, 69, 69, -288, -288,
	-288, -288, -149, 330, -149, -288, -288, -288, -288, -288,
	-149, -149, -149, -149, -75, -75, -288, -288, -288, -75,
	-288, -288, -75, -288, -288, -288, -288, -75, -288, -288,
	-288, -114, 30, 47, -2, -287, -287, -162, -166, -136,
	-85, -86, -86, -85, -86, 56, 56, 56, 61, 56,
	61, 56, -99, -209, -288, -288, -132, 185, -287, 34,
	-209, -108, 141, 141, 141, -109, 12, -82, -109, -109,
	127, -169, -172, 307, 304, 310, 71, 73, 127, 69,
	-254, 97, -242, 68, 71, 45, -243, 141, 45, -243,
	-248, 71, -248, 45, -232, -224, -225, -233, -236, -222,
	82, 88, 29, 66, 282, 147, 45, 44, 80, -229,
	286, 74, -226, -226, -221, -221, -221, 261, -221, -226,
	-227, 30, -227, -227, -227, -227, -226, -237, 73, -237,
	74, -230, 74, 70, 66, -200, -2, 23, -43, 8,
	9, 10, -273, -274, -275, 71, 107, 191, 192, 144,
	-196, -102, -196, -196, -109, 71, 71, -177, -180, 34,
	-116, -159, 140, -183, 69, -195, -192, -266, -243, -270,
	-241, -242, 148, 156, 147, 172, 155, -192, -266, 155,
	152, -243, 156, 148, -189, -243, 144, 23, -192, -192,
	-249, 97, -192, 172, 23, -200, -200, 53, -102, -74,
	-152, 114, -201, -76, -73, 87, -116, -288, -78, 114,
	-208, -212, 123, 253, 165, 251, 244, 271, 258, 284,
	249, 285, -210, -212, -116, -116, -116, -116, 363, -144,
	96, -79, 93, -116, -116, -200, -287, -149, -149, -149,
	-149, -149, -288, -288, -150, -149, -150, -150, -288, -150,
	-150, -288, -150, -150, -150, -150, -288, -150, -150, -150,
	-161, 66, -162, -131, -134, -133, -287, -2, -156, -160,
	-200, -109, 69, 97, -93, -92, 66, 67, -94, 66,
	-92, 56, 56, -158, 68, 69, -133, -287, -160, -116,
	-108, -287, -287, -287, -144, -79, -109, 304, 308, 309,
	-253, -254, -257, -256, -200, -261, 156, -248, -248, 68,
	82, -116, 9, 45, 45, 73, 70, -227, -227, -226,
	-221, -227, 71, 123, -227, 70, 69, 70, 69, 70,
	69, -112, 384, 88, -102, -151, -151, 66, 70, 69,
	-213, 71, 71, 71, -102, -180, -116, -226, -102, -68,
	-49, 68, -238, 71, -195, -248, -186, 71, 71, -195,
	71, 71, -200, 45, 71, -102, -200, -238, 71, -79,
	-200, -200, -90, 127, -109, 11, 69, -77, -288, -116,
	127, -288, -221, -221, -221, -231, -221, 238, -221, 238,
	-288, -288, 19, 19, 19, 19, -287, -71, 327, -79,
	69, 69, -144, 172, -150, -150, -150, -150, -150, 28,
	-161, 69, -288, -288, -288, -288, 69, -144, -166, -79,
	-79, 68, -79, -157, -200, 185, -288, -108, -191, -157,
	-157, -157, -154, 70, 69, -221, -157, -121, -227, -226,
	73, -226, 74, 74, 384, 68, -2, -102, -276, -277,
	-278, 80, 365, 88, 193, 194, 157, 195, 196, 197,
	-275, -213, -213, -213, -279, -179, -74, -238, -146, 160,
	161, -213, -204, -245, -243, 71, -190, 144, 23, 144,
	-146, -238, 30, 132, 27, -200, -141, 13, -82, -152,
	-152, 114, -226, 71, -116, -116, -116, -116, -116, -288,
	73, -116, -116, -288, 16, 45, -134, 47, -2, -287,
	-200, -154, -157, 70, 69, -133, -107, -209, -288, -288,
	-288, -259, -258, 67, 151, 80, -256, -153, 70, -227,
	-227, 70, 70, -257, -151, 19, -151, -278, 73, 197,
	193, 197, 197, 197, 197, 198, -280, 38, -282, 39,
	11, 70, 71, -214, 68, -248, 71, -200, -146, 29,
	29, -287, -142, 14, 16, -109, -77, -288, -288, -288,
	-288, -70, 107, 366, -288, -288, -129, 9, -131, -2,
	70, -200, -108, -258, 71, -249, 73, 158, 70, 184,
	-20, -2, -8, -9, -10, -11, -13, -44, -14, -15,
	-21, -22, -16, -51, -52, -61, -59, -60, -56, -55,
	-25, -23, -26, -18, -27, -28, -29, -24, 91, 146,
	215, 225, 36, 36, 189, 190, -223, 145, -283, 43,
	-281, -235, 42, 16, -82, -257, -204, -116, -263, -264,
	172, -143, -79, -199, -130, -81, -79, -199, -141, -152,
	-288, 364, 63, 367, -144, -162, -288, 74, -102, -260,
	-259, 185, -151, -79, -79, 71, -40, -205, 218, 219,
	220, -201, -30, -20, -158, 74, -282, 16, -284, 40,
	41, 73, -109, 70, 68, -288, 69, -200, 69, -142,
	53, 365, 368, -288, 68, -147, 187, 188, -31, -32,
	92, 93, 216, 217, 221, -213, 69, 436, 38, 73,
	16, 16, -141, -260, -257, -264, 47, -81, 53, -157,
	-151, 71, 71, 96, 94, -32, -79, -30, 19, 19,
	19, 29, -201, 96, -20, 73, 73, -142, 70, 174,
	366, 70, -12, -19, -11, -8, -9, -10, 225, 91,
	-30, 93, 436, -41, 74, -2, -39, -38, 74, -41,
	223, 88, 224, 71, -116, -260, 175, 367, -268, -269,
	66, -151, -30, 436, -30, 96, 94, -33, -34, 95,
	-20, 69, 222, -287, 368, -269, 66, -268, 66, 10,
	9, 436, 96, 436, 146, -30, 96, 94, -34, -79,
	-38, -116, 171, -267, 159, 154, 157, 30, -267, 96,
	91, 436, 146, -30, 93, -288, -288, 153, 29, 82,
	96, 436, -30, 146, 96, 436, 146,
}
var yyDef = [...]int{

	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, -2, 528, 528, 528, 528, 528, 528, 605, -2,
	396, 397, 0, 0, 0, 0, -2, 497, 498, 499,
	501, 502, 517, -2, 1332, 1332, 0, 0, 1332, 0,
	183, 0, 0, 0, 0, 37, 0, 0, 53, 54,
	905, 0, 520, 509, 510, 0, 0, 1330, 1, 3,
	847, 0, 537, 530, 0, 905, 905, 0, 0, 84,
	0, 0, 0, 606, 0, 0, 0, 903, 903, 0,
	0, 926, 0, 900, 922, 923, 924, 0, 901, 0,
	901, 901, 901, 901, 901, 0, 449, 623, 935, 936,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 0, 0, 0, 490, 0, 1333, 1333, 464, 0,
	466, 0, 0, 0, 0, 0, 475, 478, 1333, 347,
	348, 349, 494, 495, 484, 496, 0, 0, 0, 0,
	0, 521, 522, 523, 524, 1332, 1332, 527, 162, 164,
	0, 184, 0, 187, 190, 941, 503, 0, 528, 0,
	532, 0, 0, 906, 500, 42, 43, 0, 607, 608,
	609, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 0,
	853, 0, 0, 540, 538, 539, 529, 0, 551, 560,
	0, 632, 0, 637, 639, -2, -2, 0, 680, 681,
	682, 683, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 709, 710, 711, 712, 713, 817, 818, 819,
	820, 821, 822, 823, 824, 641, 642, 814, 873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 776, 776, 776, 776, 776, 776, 776, 776,
	776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 66, 623, 70, 1281, 0, 877, -2, -2, 879,
	0, 0, 0, -2, -2, -2, -2, 1108, -2, 814,
	0, 85, 528, 86, 0, 224, 225, 0, 1120, 368,
	933, 934, 1110, 929, 930, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 448,
	0, 450, 1333, 490, 453, 0, 0, 903, 903, 1333,
	1333, 1333, 0, 0, 0, 462, 1334, 1335, 463, 0,
	370, 371, 490, 490, 1333, 1333, 487, 0, 487, 487,
	485, 486, 481, 482, 0, 477, 0, 479, 504, 0,
	0, 511, 513, 514, 515, 516, 512, 0, 525, 526,
	0, 0, 166, 0, 0, 186, 168, 0, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	0, 189, 0, 939, 942, 508, 537, 39, 49, 0,
	533, 534, 0, 1333, 0, 0, 0, 48, 1331, 34,
	0, 0, 848, 851, 852, 839, 840, 844, 844, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 0, 0, 535,
	541, 542, 531, 0, 552, 0, 0, 0, 561, 0,
	563, 564, 565, 566, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 660, 661, 662, 663,
	664, 665, 638, 0, 652, 0, 0, 0, 700, 701,
	702, 703, 704, 705, 706, 0, 540, 0, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 806, 0, 759, 768, 0, 760, 769, 761,
	770, 762, 0, 763, 771, 764, 772, 765, 766, 773,
	767, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 540,
	0, 0, 0, 540, 0, 0, 540, 0, 0, 0,
	0, 540, 0, 0, 0, 68, 0, 622, 0, 567,
	569, 570, 571, -2, 0, 626, 672, -2, 0, 0,
	0, 60, 61, 0, 0, 0, 0, 71, 73, 0,
	0, 1281, 880, 881, 323, 894, 895, 896, 0, 892,
	0, 537, 385, 0, 226, 0, 0, 234, 311, 242,
	243, 244, 304, 246, 304, 304, 0, 304, 304, 304,
	304, 304, 320, 320, 320, 320, 320, 287, 288, 289,
	290, 291, 0, 0, 264, 304, 304, 304, 268, 294,
	295, 296, 297, 298, 299, 300, 301, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 306, 306, 308, 308,
	308, 308, 308, 0, 367, 0, 927, 82, 0, 1333,
	0, 1333, 0, 0, 0, 118, 0, 0, 441, 902,
	0, 443, 62, 444, 445, 446, 447, 624, 937, 938,
	451, 452, 491, 492, 0, 0, 456, 457, 458, 459,
	460, 461, 372, 467, 468, 469, 474, 490, 0, 0,
	0, 585, 490, 476, 666, 506, 505, 0, 518, 163,
	165, 167, 185, 0, 0, 188, 191, 0, 0, 0,
	540, 0, 0, 427, 44, 45, 0, 0, 862, 854,
	0, 0, 0, 0, 842, 845, 846, 843, 0, 0,
	825, 0, 0, 543, 536, 36, 633, 634, 636, 653,
	0, 655, 657, 562, 553, 0, 815, -2, 643, 644,
	668, 669, 670, 0, 0, 0, 0, 666, 648, 0,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 699, 790, 791, 0, 697, 698, 707, 674,
	671, 0, 872, 0, 0, 676, 547, 548, 0, 0,
	746, 0, 0, 682, 817, 0, 682, 817, 0, 0,
	0, 0, 812, 809, 0, 0, 777, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 613, 0, 0, 0, 0,
	604, 0, 0, 0, 0, 578, 1211, 580, 0, 626,
	0, 0, 0, 630, 0, 630, 65, 630, 67, 0,
	625, 878, 0, 0, 0, 76, 77, 72, 882, 0,
	888, 889, 890, 815, 0, 540, 223, 386, 388, 391,
	392, 393, 227, 229, 230, 231, 0, 1120, 360, 1221,
	1261, -2, 354, 1147, -2, -2, 233, 313, 312, 245,
	0, 320, 320, 304, 304, 304, 304, 273, 320, 276,
	279, 280, 323, 0, 323, 323, 323, 323, 320, 0,
	0, 265, 266, 267, 256, 0, 257, 306, 259, 0,
	260, 261, 262, 263, 366, 0, 0, 0, 0, 0,
	90, 904, 91, 0, 119, 120, 94, 222, 0, 439,
	1333, 0, 1333, 1333, 630, 0, 0, 470, 488, 489,
	487, 490, 0, 473, 480, 0, 507, 169, 170, 192,
	68, 0, 940, 535, 50, 398, 399, 1332, -2, 428,
	919, 428, 428, 417, 340, 428, 909, 910, 911, 912,
	913, 914, 915, 916, 0, 0, 0, 0, 0, 849,
	850, 841, 0, 897, 898, 826, 827, 83, 544, 654,
	656, 658, 0, 674, 645, 666, 649, 0, 646, 0,
	640, 0, 679, -2, 0, 744, 0, 745, 0, 0,
	0, 0, 0, 783, 0, 0, 784, 0, 755, 838,
	0, 810, 0, 0, 758, 778, 0, 0, 779, 780,
	781, 782, 733, 0, 734, 0, 0, 0, 0, 0,
	740, 741, 742, 743, 0, 0, 558, 558, 558, 0,
	558, 558, 0, 558, 558, 558, 558, 0, 558, 558,
	558, 866, 0, 0, 857, 0, 0, 630, 874, 0,
	568, 599, 601, 0, 596, 611, 612, 614, 0, 616,
	0, 618, 619, 587, 574, 673, 575, 0, 0, 0,
	626, 584, 0, 0, 0, 838, 0, 630, 58, 59,
	0, 74, 75, 0, 0, 81, 324, 325, 0, 0,
	389, 0, 228, 0, 0, 342, 354, 350, 351, 354,
	345, 355, 346, 0, 235, 236, 237, 238, 239, 240,
	315, 0, 0, 0, 319, 0, 327, 329, 0, 241,
	314, 0, 323, 323, 320, 271, 272, 304, 277, 323,
	281, 0, 282, 283, 284, 285, 323, 0, 302, 0,
	0, 258, 0, 382, 0, 928, 82, 82, 0, 121,
	122, 123, 0, 95, 96, 0, 0, 0, 0, 0,
	442, 63, 454, 455, 465, 373, 374, 490, 472, 0,
	667, 320, 0, 543, 0, 401, 0, 1332, 354, 0,
	418, 419, 429, 430, 431, 432, 0, 0, 1332, 0,
	0, 0, 430, 0, 0, 0, 920, 921, 0, 0,
	0, 341, 0, 0, 0, 864, 863, 855, 35, 630,
	0, 554, 816, 0, 647, 0, 650, 714, 677, 549,
	0, 0, 304, 304, 795, 304, 308, 798, 304, 800,
	304, 803, 0, 0, 0, 0, 0, 0, 0, 807,
	757, 813, 0, 0, 0, 555, 838, 735, 736, 737,
	738, 739, 558, 558, 718, 559, 719, 720, 558, 722,
	723, 558, 725, 726, 727, 728, 558, 730, 731, 732,
	51, 0, 866, 856, 868, 870, 0, 0, 0, 0,
	591, 838, 0, 0, 593, 600, 0, 0, 594, 0,
	595, 615, 617, 572, 0, 0, 576, 0, 0, -2,
	583, 0, 0, 0, 847, 631, 57, 78, 79, 80,
	387, 390, 0, 356, 304, 359, 0, 343, 344, 0,
	316, 317, 0, 326, 328, 330, 305, 269, 270, 323,
	278, 274, 321, 322, 286, 320, 0, 320, 0, 309,
	0, 369, 383, 0, 0, 88, 0, 0, 102, 0,
	98, 0, 0, 0, 440, 471, 586, 951, 620, 83,
	400, 0, 424, 0, 404, 927, 352, 395, 405, 406,
	411, 412, 413, 0, 0, 408, 0, 424, 0, 421,
	0, 0, 46, 0, 828, 0, 83, 83, 715, 651,
	0, 747, 792, 320, 796, 797, 799, 801, 802, 804,
	749, 748, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 0, 716, 717, 721, 724, 729, 0,
	52, 0, 871, -2, 0, 69, 0, 847, 875, 876,
	597, 0, 602, 0, 589, 0, 626, 581, 0, 0,
	0, 0, 56, 332, 0, 844, 0, 318, 275, 323,
	303, 323, 0, 0, 384, 0, 82, 0, 82, 103,
	104, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	97, 99, 100, 101, 953, 947, 0, 0, 403, 425,
	0, 234, 0, 354, 353, 420, 0, 917, 918, 0,
	415, 424, 0, 0, 0, 865, 834, 0, 630, 0,
	545, 550, 793, 794, 0, 0, 0, 0, 785, 756,
	808, 0, 0, 556, 0, 0, 869, 0, 860, 0,
	592, 55, 0, 588, 0, 577, 579, 626, 627, 628,
	629, 331, 335, 0, 340, 0, 357, 358, 0, 292,
	293, 307, 310, 0, 89, 0, 0, 105, 106, 107,
	108, 110, 111, 0, 0, 0, 907, 955, -2, 0,
	0, 402, 426, 232, 0, 927, 407, 414, 416, 0,
	423, 0, 40, 0, 0, 828, 83, 750, 752, 751,
	753, 0, 0, 0, 774, 775, 838, 0, 859, 0,
	598, 590, 582, 336, 337, 0, 339, 0, 333, 0,
	82, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 0,
	0, 0, 112, 113, 114, 115, 587, 0, 947, 0,
	949, 0, 946, 0, 630, 0, 0, 422, 0, 434,
	0, 835, 836, 837, 829, 830, 832, 833, 834, 546,
	754, 0, 0, 0, 0, 867, -2, 338, 0, 87,
	334, 124, 93, 0, 0, 929, 0, 0, 151, 152,
	153, 931, 0, 193, 33, 0, 954, 0, 952, 0,
	0, 948, 828, 333, 0, 433, 0, 0, 0, 41,
	786, 0, 789, 557, 0, 82, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 149, 0, 0, 908, 956,
	0, 0, 834, 409, 0, 435, 0, 831, 787, 0,
	0, 125, 126, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 932, 116, 194, 950, 944, 38, 333, 0,
	0, 361, 82, 127, 128, 129, 130, 131, 0, 133,
	0, 0, 0, 145, 146, 147, 0, 154, 156, 157,
	158, 0, 160, 161, 150, 410, 0, 0, 362, 363,
	0, 92, 0, 0, 0, 0, 0, 0, 142, 0,
	148, 0, 159, 0, 788, 364, 0, 365, 0, 0,
	0, 0, 0, 137, 138, 0, 0, 0, 143, 0,
	155, 0, 0, 375, 377, 378, 0, 0, 376, 132,
	134, 0, 140, 0, 0, 436, 437, 379, 380, 381,
	0, 0, 0, 139, 0, 144, 141,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 436,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:416
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:452
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:464
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:495
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:533
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:563
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:575
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:629
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:675
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:725
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{As: false, Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:754
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:758
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:762
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:766
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:774
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:782
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:786
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:791
		{
			yyVAL.procedureParams = nil
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:801
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:811
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:828
		{
			yyVAL.characteristics = nil
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:838
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:842
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:848
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:856
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:864
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:876
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:890
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.str = ""
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.str = BeforeStr
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:909
		{
			yyVAL.str = AfterStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:915
		{
			yyVAL.str = InsertStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.str = UpdateStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.str = DeleteStr
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:928
		{
			yyVAL.triggerOrder = nil
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:942
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:952
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:958
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:962
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:978
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:984
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 139:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:989
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:994
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 141:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1000
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1012
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1018
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1024
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1028
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1032
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1036
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1044
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1065
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1069
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1075
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1123
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.statement = &Resignal{}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1226
		{
			yyVAL.exprs = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.exprs = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1240
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1250
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 222:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1282
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1299
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1326
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.columnType = ColumnType{}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1395
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1413
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1703
		{
			yyVAL.sqlVal = nil
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1712
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1716
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1724
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1728
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1734
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1742
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1751
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1778
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = ""
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = ""
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.colKeyOpt = colKey
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1840
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1844
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1849
		{
			yyVAL.indexOptions = nil
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = yyDollar[1].str
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1968
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 361:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1984
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 362:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1988
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 363:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1992
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1996
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2000
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2020
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2049
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
			yyVAL.boolean = true
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.boolean = true
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2090
		{
			yyVAL.boolean = false
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = yyDollar[1].str
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2152
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2169
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2186
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2205
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2214
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 410:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2218
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2236
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2240
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2247
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2253
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2257
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2269
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2278
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2282
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2287
		{
			yyVAL.columnOrder = nil
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2301
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2307
		{
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
		}
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2318
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2334
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2338
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2354
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2370
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2374
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2382
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2390
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2398
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2406
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2431
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2453
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2457
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2465
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2469
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2473
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2481
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2485
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2489
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2497
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2501
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2505
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 471:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2513
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2518
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2532
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2540
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2586
		{
			yyVAL.str = ""
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.str = "full "
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2606
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.showFilter = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.str = SessionStr
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2642
		{
			yyVAL.str = GlobalStr
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2648
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.statement = &Begin{}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2668
		{
			yyVAL.statement = &Begin{}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.statement = &Commit{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.statement = &Rollback{}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2696
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2700
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2704
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2753
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.statement = &OtherRead{}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2763
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2767
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2775
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			setAllowComments(yylex, true)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.bytes2 = nil
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.str = UnionStr
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = UnionAllStr
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.str = UnionDistinctStr
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.byt = 0
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.byt = 1
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2827
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = SQLCacheStr
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = ""
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = DistinctStr
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = StraightJoinHint
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2871
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2890
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2894
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2912
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2923
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2927
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2932
		{
			yyVAL.over = nil
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.over = yyDollar[1].over
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2941
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2945
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2973
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2991
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3034
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3049
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3053
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3072
		{
			yyVAL.expr = nil
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3081
		{
			yyVAL.columns = nil
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3118
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3122
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3126
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3130
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3138
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3148
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3153
		{
			yyVAL.empty = struct{}{}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3158
		{
			yyVAL.byt = 0
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.byt = 1
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = JoinStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = JoinStr
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = JoinStr
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = StraightJoinStr
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = LeftJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = LeftJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = RightJoinStr
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = RightJoinStr
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = NaturalJoinStr
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3217
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3258
		{
			yyVAL.indexHints = nil
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3262
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3266
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3270
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = nil
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3301
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3315
		{
			yyVAL.str = ""
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = IsNullStr
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = IsNotNullStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = IsTrueStr
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = IsNotTrueStr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = IsFalseStr
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = IsNotFalseStr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = EqualStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = LessThanStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = GreaterThanStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = LessEqualStr
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = GreaterEqualStr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = NotEqualStr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = nil
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3472
		{
			yyVAL.selectExprs = nil
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3493
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3641
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3707
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3764
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 748:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3795
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3799
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3803
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3807
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 752:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 753:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3815
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 754:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3819
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3823
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 756:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3827
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3831
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3835
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 774:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 775:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3930
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3960
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = BooleanModeStr
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 788:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = QueryExpansionStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.expr = nil
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.str = string("")
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4082
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.expr = nil
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4101
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4105
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.expr = &NullVal{}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			yyVAL.exprs = nil
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.expr = nil
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.orderBy = nil
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4220
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4226
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = AscScr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = AscScr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = DescScr
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.limit = nil
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4256
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4260
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = ForUpdateStr
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = ShareModeStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4309
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4313
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4317
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4336
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.assignExprs = nil
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4345
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4371
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4450
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.setScope = SetScope_Global
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.setScope = SetScope_Session
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.setScope = SetScope_Session
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4495
		{
			yyVAL.bytes = []byte("charset")
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.expr = &Default{}
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.byt = 0
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.byt = 1
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.byt = 0
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.byt = 1
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4529
		{
			yyVAL.byt = 0
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.byt = 1
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = ""
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = IgnoreStr
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4539
		{
			yyVAL.sqlVal = nil
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.empty = struct{}{}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4568
		{
			yyVAL.empty = struct{}{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.empty = struct{}{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.empty = struct{}{}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.str = UniqueStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = FulltextStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = SpatialStr
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = ""
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = yyDollar[1].str
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4588
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4608
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string("")
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.EnclosedBy = nil
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4651
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4665
		{
			yyVAL.sqlVal = nil
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4674
		{
			yyVAL.sqlVal = nil
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.Fields = nil
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4687
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4692
		{
			yyVAL.Lines = nil
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4696
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4701
		{
			yyVAL.sqlVal = nil
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			decNesting(yylex)
		}
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5122
		{
			skipToEnd(yylex)
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5127
		{
			skipToEnd(yylex)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			skipToEnd(yylex)
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
