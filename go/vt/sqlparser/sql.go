// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const FLUSH = 57468
const MODIFY = 57469
const CHANGE = 57470
const SCHEMA = 57471
const TABLE = 57472
const INDEX = 57473
const INDEXES = 57474
const VIEW = 57475
const TO = 57476
const IGNORE = 57477
const IF = 57478
const PRIMARY = 57479
const COLUMN = 57480
const SPATIAL = 57481
const FULLTEXT = 57482
const KEY_BLOCK_SIZE = 57483
const CHECK = 57484
const ACTION = 57485
const CASCADE = 57486
const CONSTRAINT = 57487
const FOREIGN = 57488
const NO = 57489
const REFERENCES = 57490
const RESTRICT = 57491
const FIRST = 57492
const AFTER = 57493
const SHOW = 57494
const DESCRIBE = 57495
const EXPLAIN = 57496
const DATE = 57497
const ESCAPE = 57498
const REPAIR = 57499
const OPTIMIZE = 57500
const TRUNCATE = 57501
const FORMAT = 57502
const MAXVALUE = 57503
const REORGANIZE = 57504
const LESS = 57505
const THAN = 57506
const PROCEDURE = 57507
const TRIGGER = 57508
const TRIGGERS = 57509
const FUNCTION = 57510
const STATUS = 57511
const VARIABLES = 57512
const WARNINGS = 57513
const ERRORS = 57514
const KILL = 57515
const CONNECTION = 57516
const SEQUENCE = 57517
const EACH = 57518
const ROW = 57519
const BEFORE = 57520
const FOLLOWS = 57521
const PRECEDES = 57522
const DEFINER = 57523
const INVOKER = 57524
const INOUT = 57525
const OUT = 57526
const DETERMINISTIC = 57527
const CONTAINS = 57528
const READS = 57529
const MODIFIES = 57530
const SQL = 57531
const SECURITY = 57532
const TEMPORARY = 57533
const CLASS_ORIGIN = 57534
const SUBCLASS_ORIGIN = 57535
const MESSAGE_TEXT = 57536
const MYSQL_ERRNO = 57537
const CONSTRAINT_CATALOG = 57538
const CONSTRAINT_SCHEMA = 57539
const CONSTRAINT_NAME = 57540
const CATALOG_NAME = 57541
const SCHEMA_NAME = 57542
const TABLE_NAME = 57543
const COLUMN_NAME = 57544
const CURSOR_NAME = 57545
const SIGNAL = 57546
const RESIGNAL = 57547
const SQLSTATE = 57548
const DECLARE = 57549
const CONDITION = 57550
const CURSOR = 57551
const CONTINUE = 57552
const EXIT = 57553
const UNDO = 57554
const HANDLER = 57555
const FOUND = 57556
const SQLWARNING = 57557
const SQLEXCEPTION = 57558
const USER = 57559
const IDENTIFIED = 57560
const ROLE = 57561
const REUSE = 57562
const GRANT = 57563
const GRANTS = 57564
const REVOKE = 57565
const NONE = 57566
const ATTRIBUTE = 57567
const RANDOM = 57568
const PASSWORD = 57569
const INITIAL = 57570
const AUTHENTICATION = 57571
const SSL = 57572
const X509 = 57573
const CIPHER = 57574
const ISSUER = 57575
const SUBJECT = 57576
const ACCOUNT = 57577
const EXPIRE = 57578
const NEVER = 57579
const DAY = 57580
const OPTION = 57581
const OPTIONAL = 57582
const EXCEPT = 57583
const ADMIN = 57584
const PRIVILEGES = 57585
const MAX_QUERIES_PER_HOUR = 57586
const MAX_UPDATES_PER_HOUR = 57587
const MAX_CONNECTIONS_PER_HOUR = 57588
const MAX_USER_CONNECTIONS = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const WORK = 57612
const RELEASE = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const SERIAL = 57622
const REAL = 57623
const DOUBLE = 57624
const FLOAT_TYPE = 57625
const DECIMAL = 57626
const NUMERIC = 57627
const DEC = 57628
const FIXED = 57629
const PRECISION = 57630
const TIME = 57631
const TIMESTAMP = 57632
const DATETIME = 57633
const YEAR = 57634
const CHAR = 57635
const VARCHAR = 57636
const BOOL = 57637
const CHARACTER = 57638
const VARBINARY = 57639
const NCHAR = 57640
const NVARCHAR = 57641
const NATIONAL = 57642
const VARYING = 57643
const TEXT = 57644
const TINYTEXT = 57645
const MEDIUMTEXT = 57646
const LONGTEXT = 57647
const LONG = 57648
const BLOB = 57649
const TINYBLOB = 57650
const MEDIUMBLOB = 57651
const LONGBLOB = 57652
const JSON = 57653
const ENUM = 57654
const GEOMETRY = 57655
const POINT = 57656
const LINESTRING = 57657
const POLYGON = 57658
const GEOMETRYCOLLECTION = 57659
const MULTIPOINT = 57660
const MULTILINESTRING = 57661
const MULTIPOLYGON = 57662
const LOCAL = 57663
const LOW_PRIORITY = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const COLLATION = 57671
const DATABASES = 57672
const SCHEMAS = 57673
const TABLES = 57674
const FULL = 57675
const PROCESSLIST = 57676
const COLUMNS = 57677
const FIELDS = 57678
const ENGINES = 57679
const PLUGINS = 57680
const NAMES = 57681
const CHARSET = 57682
const GLOBAL = 57683
const SESSION = 57684
const ISOLATION = 57685
const LEVEL = 57686
const READ = 57687
const WRITE = 57688
const ONLY = 57689
const REPEATABLE = 57690
const COMMITTED = 57691
const UNCOMMITTED = 57692
const SERIALIZABLE = 57693
const CURRENT_TIMESTAMP = 57694
const DATABASE = 57695
const CURRENT_DATE = 57696
const CURRENT_USER = 57697
const CURRENT_TIME = 57698
const LOCALTIME = 57699
const LOCALTIMESTAMP = 57700
const UTC_DATE = 57701
const UTC_TIME = 57702
const UTC_TIMESTAMP = 57703
const REPLACE = 57704
const CONVERT = 57705
const CAST = 57706
const SUBSTR = 57707
const SUBSTRING = 57708
const TRIM = 57709
const LEADING = 57710
const TRAILING = 57711
const BOTH = 57712
const GROUP_CONCAT = 57713
const SEPARATOR = 57714
const TIMESTAMPADD = 57715
const TIMESTAMPDIFF = 57716
const OVER = 57717
const WINDOW = 57718
const GROUPING = 57719
const CURRENT = 57720
const AVG = 57721
const BIT_AND = 57722
const BIT_OR = 57723
const BIT_XOR = 57724
const COUNT = 57725
const JSON_ARRAYAGG = 57726
const JSON_OBJECTAGG = 57727
const MAX = 57728
const MIN = 57729
const STDDEV_POP = 57730
const STDDEV = 57731
const STD = 57732
const STDDEV_SAMP = 57733
const SUM = 57734
const VAR_POP = 57735
const VARIANCE = 57736
const VAR_SAMP = 57737
const CUME_DIST = 57738
const DENSE_RANK = 57739
const FIRST_VALUE = 57740
const LAG = 57741
const LAST_VALUE = 57742
const LEAD = 57743
const NTH_VALUE = 57744
const NTILE = 57745
const ROW_NUMBER = 57746
const PERCENT_RANK = 57747
const RANK = 57748
const MATCH = 57749
const AGAINST = 57750
const BOOLEAN = 57751
const LANGUAGE = 57752
const WITH = 57753
const QUERY = 57754
const EXPANSION = 57755
const UNUSED = 57756
const ARRAY = 57757
const DESCRIPTION = 57758
const EMPTY = 57759
const JSON_TABLE = 57760
const LATERAL = 57761
const MEMBER = 57762
const RECURSIVE = 57763
const ACTIVE = 57764
const BUCKETS = 57765
const CLONE = 57766
const COMPONENT = 57767
const DEFINITION = 57768
const ENFORCED = 57769
const EXCLUDE = 57770
const GEOMCOLLECTION = 57771
const GET_MASTER_PUBLIC_KEY = 57772
const HISTOGRAM = 57773
const HISTORY = 57774
const INACTIVE = 57775
const INVISIBLE = 57776
const LOCKED = 57777
const MASTER_COMPRESSION_ALGORITHMS = 57778
const MASTER_PUBLIC_KEY_PATH = 57779
const MASTER_TLS_CIPHERSUITES = 57780
const MASTER_ZSTD_COMPRESSION_LEVEL = 57781
const NESTED = 57782
const NETWORK_NAMESPACE = 57783
const NOWAIT = 57784
const NULLS = 57785
const OJ = 57786
const OLD = 57787
const ORDINALITY = 57788
const ORGANIZATION = 57789
const OTHERS = 57790
const PATH = 57791
const PERSIST = 57792
const PERSIST_ONLY = 57793
const PRIVILEGE_CHECKS_USER = 57794
const PROCESS = 57795
const REFERENCE = 57796
const REQUIRE_ROW_FORMAT = 57797
const RESOURCE = 57798
const RESPECT = 57799
const RESTART = 57800
const RETAIN = 57801
const SECONDARY = 57802
const SECONDARY_ENGINE = 57803
const SECONDARY_LOAD = 57804
const SECONDARY_UNLOAD = 57805
const SKIP = 57806
const SRID = 57807
const THREAD_PRIORITY = 57808
const TIES = 57809
const VCPU = 57810
const VISIBLE = 57811
const SYSTEM = 57812
const INFILE = 57813

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1020,
	-1, 43,
	148, 1084,
	149, 1102,
	-2, 231,
	-1, 49,
	187, 655,
	188, 655,
	-2, 645,
	-1, 503,
	135, 1112,
	-2, 1106,
	-1, 504,
	135, 1113,
	-2, 1107,
	-1, 608,
	98, 1377,
	135, 1377,
	-2, 1068,
	-1, 609,
	98, 1491,
	135, 1491,
	-2, 1069,
	-1, 614,
	98, 1400,
	135, 1400,
	-2, 1070,
	-1, 615,
	98, 1446,
	135, 1446,
	-2, 1071,
	-1, 616,
	98, 1447,
	135, 1447,
	-2, 1072,
	-1, 617,
	98, 1330,
	135, 1330,
	-2, 1076,
	-1, 619,
	98, 1423,
	135, 1423,
	-2, 1078,
	-1, 1109,
	1, 752,
	5, 752,
	12, 752,
	13, 752,
	14, 752,
	15, 752,
	17, 752,
	19, 752,
	30, 752,
	31, 752,
	56, 752,
	57, 752,
	58, 752,
	59, 752,
	60, 752,
	62, 752,
	63, 752,
	66, 752,
	67, 752,
	69, 752,
	70, 752,
	394, 752,
	490, 752,
	-2, 782,
	-1, 1113,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1352,
	135, 1115,
	-2, 1111,
	-1, 1517,
	44, 503,
	-2, 1342,
	-1, 1521,
	68, 503,
	-2, 1292,
	-1, 1524,
	68, 499,
	72, 499,
	-2, 1214,
	-1, 1525,
	68, 500,
	72, 500,
	-2, 1224,
	-1, 1640,
	44, 546,
	155, 548,
	157, 546,
	158, 546,
	-2, 581,
	-1, 1710,
	5, 51,
	-2, 848,
	-1, 2009,
	69, 1268,
	70, 1268,
	135, 1268,
	-2, 686,
	-1, 2032,
	1, 803,
	5, 803,
	12, 803,
	13, 803,
	14, 803,
	15, 803,
	17, 803,
	19, 803,
	30, 803,
	31, 803,
	56, 803,
	57, 803,
	58, 803,
	59, 803,
	60, 803,
	62, 803,
	63, 803,
	66, 803,
	67, 803,
	69, 803,
	70, 803,
	394, 803,
	490, 803,
	-2, 782,
	-1, 2133,
	155, 549,
	-2, 547,
	-1, 2194,
	5, 51,
	-2, 1040,
	-1, 2394,
	41, 1122,
	-2, 1120,
	-1, 2530,
	5, 51,
	-2, 1043,
}

const yyPrivate = 57344

const yyLast = 32334

var yyAct = [...]int{
	566, 80, 2725, 2675, 2699, 2547, 2689, 2579, 2533, 817,
	2414, 2512, 2690, 1569, 2677, 2546, 2572, 409, 1951, 2594,
	2447, 7, 2510, 2446, 6, 506, 2445, 5, 2448, 8,
	2517, 2045, 2577, 2341, 2301, 1144, 1778, 2394, 2026, 1749,
	1060, 1925, 1567, 495, 1934, 2396, 2259, 1330, 565, 2206,
	1234, 2253, 2094, 633, 1470, 2002, 2282, 1579, 1476, 1526,
	1497, 2237, 2046, 1474, 83, 2534, 504, 2127, 2221, 1518,
	488, 1859, 392, 395, 2118, 2003, 434, 434, 522, 1933,
	1750, 80, 452, 93, 849, 440, 1508, 1639, 1999, 1509,
	1663, 1799, 1507, 106, 509, 833, 2018, 2011, 1323, 1971,
	631, 1236, 1377, 1449, 1386, 1279, 1453, 511, 1605, 1903,
	1252, 1214, 1338, 1554, 127, 1558, 962, 127, 628, 1842,
	2222, 1105, 1124, 127, 1354, 1514, 1460, 610, 965, 1621,
	1441, 899, 878, 437, 437, 969, 1078, 1106, 627, 491,
	1109, 1123, 606, 607, 982, 451, 127, 602, 1284, 412,
	411, 599, 804, 501, 1115, 877, 85, 127, 1079, 2747,
	2743, 127, 636, 2733, 816, 127, 2715, 2713, 2694, 973,
	2670, 2602, 82, 1277, 449, 2373, 2079, 2231, 404, 127,
	437, 69, 636, 36, 36, 629, 613, 2706, 36, 36,
	127, 2371, 2588, 2688, 87, 88, 89, 90, 91, 2528,
	2658, 2386, 1870, 1592, 2563, 2374, 36, 1744, 72, 39,
	40, 2091, 2587, 1992, 2490, 427, 2513, 421, 432, 415,
	1685, 2186, 803, 2040, 1745, 2326, 2041, 2042, 1620, 1472,
	72, 39, 40, 2444, 3, 36, 955, 72, 39, 40,
	422, 1592, 1283, 1493, 2527, 81, 81, 1494, 1495, 59,
	81, 81, 41, 1300, 806, 78, 809, 810, 1787, 41,
	927, 1786, 1319, 1320, 1788, 1281, 1282, 1125, 81, 1126,
	853, 854, 2238, 837, 838, 623, 935, 840, 403, 402,
	2240, 1825, 1619, 1528, 1233, 896, 1534, 1536, 1542, 1535,
	852, 1548, 2310, 1543, 1543, 406, 581, 81, 587, 589,
	588, 585, 586, 584, 583, 582, 2583, 109, 2173, 1944,
	839, 2171, 1264, 1280, 487, 1530, 862, 590, 591, 2426,
	386, 2474, 2578, 2583, 2697, 2700, 2696, 997, 996, 1006,
	1007, 999, 1000, 1001, 1002, 1003, 1004, 1005, 998, 401,
	2580, 1008, 448, 931, 932, 1865, 442, 414, 413, 416,
	99, 1893, 1530, 1388, 2683, 2399, 2243, 2580, 420, 2117,
	2604, 1555, 2101, 1898, 2254, 2584, 1632, 43, 74, 46,
	45, 48, 2257, 68, 2603, 424, 1817, 859, 2553, 428,
	2494, 2551, 2584, 2475, 2271, 2255, 2256, 2372, 2278, 80,
	80, 1822, 1821, 431, 2241, 2242, 2244, 2245, 2246, 49,
	77, 76, 911, 1633, 1311, 2484, 47, 2610, 1867, 867,
	101, 1580, 869, 1818, 98, 868, 2260, 2261, 2262, 2263,
	111, 110, 112, 942, 2269, 127, 943, 2703, 1823, 2599,
	1810, 2597, 2598, 2366, 2365, 2364, 1811, 2363, 118, 114,
	115, 497, 116, 2362, 2360, 951, 2492, 1869, 860, 861,
	1574, 57, 58, 959, 2476, 850, 387, 851, 853, 854,
	2361, 2624, 107, 2095, 2096, 2097, 2098, 2099, 66, 127,
	67, 2390, 108, 934, 120, 119, 2104, 1573, 911, 2672,
	2368, 393, 396, 417, 418, 419, 425, 1290, 429, 430,
	433, 2480, 2481, 2591, 2592, 2535, 2208, 836, 103, 1770,
	104, 2442, 1820, 1017, 2666, 2686, 1019, 1884, 1885, 113,
	2486, 2477, 75, 2092, 53, 54, 61, 127, 62, 2095,
	2096, 2097, 2098, 2099, 397, 848, 121, 1265, 122, 846,
	847, 863, 2078, 405, 1543, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 2119, 985, 1058, 1832, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	73, 1077, 1080, 1080, 1080, 1086, 1080, 1080, 1086, 1080,
	1086, 1095, 1096, 1097, 1098, 1099, 1100, 1972, 1110, 1557,
	948, 1626, 73, 1533, 910, 1868, 79, 79, 2526, 73,
	2552, 79, 79, 1018, 2387, 1871, 2491, 1444, 944, 2239,
	911, 1285, 866, 870, 845, 957, 950, 2581, 394, 79,
	1283, 2485, 2681, 394, 100, 2676, 507, 844, 2653, 1974,
	2427, 2389, 2369, 2739, 2581, 389, 2103, 921, 1804, 2679,
	1860, 2729, 1104, 1281, 1282, 1116, 1287, 2440, 79, 1286,
	808, 807, 117, 127, 127, 127, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 2283, 2284, 394, 2342, 1143, 636,
	423, 390, 1911, 109, 1143, 1909, 1861, 1804, 1137, 1819,
	2132, 2344, 1647, 1641, 1642, 2049, 1640, 2748, 1643, 1644,
	1143, 613, 2745, 918, 1911, 1112, 613, 1143, 2734, 2716,
	1142, 805, 819, 1922, 1479, 1481, 454, 2496, 2293, 1081,
	1083, 1085, 1087, 1089, 1091, 1092, 1094, 447, 2294, 907,
	1804, 1203, 1892, 1648, 1128, 1804, 1889, 1873, 1207, 1129,
	1872, 1082, 1084, 1627, 1088, 1090, 1141, 1093, 1589, 1222,
	1114, 1220, 1803, 1588, 864, 1119, 1777, 1807, 1917, 1909,
	1804, 916, 1776, 1914, 1775, 801, 1913, 1916, 1976, 2343,
	1887, 954, 811, 1980, 358, 1975, 2297, 1973, 1720, 1862,
	1863, 1138, 1978, 2727, 394, 1717, 2728, 917, 2726, 913,
	2158, 1803, 2150, 2678, 2680, 1977, 111, 110, 1909, 1891,
	1059, 1890, 1143, 1480, 1791, 1910, 1911, 1020, 1021, 1783,
	1979, 1981, 906, 1001, 1002, 1003, 1004, 1005, 998, 1680,
	434, 1008, 914, 915, 1668, 2068, 2113, 1653, 1216, 1333,
	1489, 1136, 1121, 988, 1803, 829, 2489, 434, 998, 1803,
	1498, 1008, 1921, 1008, 970, 1235, 1918, 2292, 1262, 2625,
	2626, 2622, 2623, 2511, 989, 2523, 2522, 1361, 2376, 2308,
	1215, 1928, 1454, 1253, 1803, 1326, 981, 1926, 636, 1596,
	842, 2016, 1359, 1360, 1358, 835, 437, 437, 855, 96,
	1715, 979, 1714, 1238, 2069, 127, 2298, 2015, 127, 2719,
	2700, 2718, 2377, 437, 437, 1646, 127, 1272, 981, 1134,
	980, 979, 871, 1020, 1021, 127, 127, 127, 127, 1260,
	1020, 1021, 980, 979, 1331, 1332, 818, 434, 981, 2736,
	1061, 980, 979, 1994, 95, 437, 812, 2595, 1239, 1442,
	981, 980, 979, 1076, 1442, 1275, 1733, 2732, 2669, 981,
	1248, 1249, 1250, 1251, 1209, 2667, 2556, 980, 979, 981,
	2656, 1309, 80, 2270, 2596, 2264, 1665, 1666, 1667, 1293,
	1254, 1256, 94, 1257, 1217, 981, 1597, 843, 2740, 834,
	1224, 446, 857, 437, 437, 437, 980, 979, 636, 1006,
	1007, 999, 1000, 1001, 1002, 1003, 1004, 1005, 998, 1242,
	1243, 1008, 980, 979, 981, 2056, 81, 976, 1315, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 998, 1357, 437, 1008,
	981, 1259, 2548, 437, 437, 2595, 2549, 2634, 1716, 2633,
	80, 127, 2741, 127, 2531, 2384, 636, 1335, 1267, 1268,
	2383, 2487, 1270, 821, 822, 823, 824, 825, 826, 827,
	1355, 1848, 1352, 2382, 127, 2381, 1381, 1382, 1273, 1324,
	985, 1336, 966, 1288, 1337, 967, 1289, 1292, 980, 979,
	596, 597, 2550, 1062, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 981, 2488, 1351, 980,
	979, 2375, 980, 979, 2230, 2229, 1996, 454, 1316, 1847,
	1350, 1310, 1845, 1378, 1313, 1379, 636, 981, 2646, 1356,
	981, 1826, 1321, 902, 901, 960, 1344, 1346, 1347, 875,
	2645, 1473, 1345, 2607, 2605, 1943, 1110, 1789, 2562, 1790,
	1110, 527, 526, 529, 530, 531, 532, 2483, 1348, 2482,
	528, 533, 874, 2439, 986, 2391, 2359, 2320, 2267, 2266,
	2265, 2227, 1395, 2061, 1353, 1843, 1399, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 636, 636, 1427, 1430, 1616, 1269, 1240, 127,
	1484, 2632, 1443, 2631, 1486, 1238, 2493, 127, 127, 2437,
	2408, 1807, 127, 127, 2402, 1317, 127, 127, 127, 1241,
	1352, 1291, 2290, 1469, 1478, 2161, 2146, 2142, 2134, 2105,
	1384, 2089, 2088, 2087, 1392, 1878, 636, 636, 1504, 1258,
	1877, 1610, 1594, 1401, 1402, 1593, 1380, 613, 1112, 1266,
	1482, 1263, 1232, 1112, 1412, 1433, 1502, 1112, 1416, 1231,
	629, 1314, 1230, 1586, 1445, 1229, 1218, 1212, 1503, 1211,
	1210, 1208, 897, 1203, 1439, 831, 400, 398, 1061, 2333,
	2659, 2217, 2652, 1059, 2569, 961, 2217, 2567, 961, 1515,
	1724, 1522, 1086, 2217, 2565, 1491, 1490, 1202, 1487, 1496,
	2217, 2441, 1584, 1585, 127, 2333, 2433, 2401, 1505, 1512,
	2333, 2349, 2333, 961, 127, 1223, 127, 127, 437, 437,
	437, 2333, 2332, 127, 2217, 2216, 1420, 941, 1612, 2198,
	961, 2353, 1564, 1565, 1652, 961, 2152, 1779, 2352, 1556,
	2076, 2075, 2084, 1560, 1561, 1562, 1563, 2072, 2073, 961,
	127, 127, 127, 1650, 1779, 1462, 1465, 1466, 1467, 1463,
	1117, 1464, 1468, 1341, 1342, 2019, 2020, 2072, 2071, 1678,
	961, 1529, 1457, 961, 1059, 127, 2062, 127, 1598, 1629,
	1628, 636, 1669, 1604, 2400, 636, 1418, 1613, 1418, 961,
	1140, 1139, 1779, 1618, 2153, 997, 996, 1006, 1007, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 998, 636, 1117, 1008,
	636, 1457, 2000, 84, 1578, 2014, 1118, 1352, 1120, 1483,
	1456, 1116, 907, 1328, 945, 946, 904, 905, 1608, 905,
	2617, 2014, 1418, 2574, 1611, 2192, 1592, 1355, 2085, 2074,
	1617, 2028, 2153, 1902, 1793, 1492, 1061, 1678, 1624, 2014,
	1738, 1425, 1426, 1351, 1577, 1737, 1271, 1591, 1329, 1457,
	1112, 956, 1312, 1278, 1118, 1503, 1116, 1678, 1221, 1219,
	1631, 1122, 624, 1634, 1327, 81, 2589, 2566, 2027, 1544,
	1545, 1546, 1547, 907, 1746, 1748, 1655, 1656, 1110, 1110,
	1110, 1110, 1110, 1649, 2407, 1657, 1356, 2405, 2232, 1530,
	2204, 1674, 1559, 2055, 1473, 1555, 1771, 2019, 2020, 1664,
	1797, 911, 1575, 1670, 1110, 1550, 1636, 1549, 1501, 997,
	996, 1006, 1007, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	998, 1204, 894, 1008, 81, 1462, 1465, 1466, 1467, 1463,
	1752, 1464, 1468, 1671, 1672, 1673, 408, 1568, 1607, 2710,
	1708, 1781, 2708, 1782, 127, 127, 127, 127, 127, 2691,
	2083, 2022, 2000, 1849, 1226, 947, 127, 1774, 1780, 908,
	127, 903, 2025, 1762, 127, 2024, 1759, 1606, 1763, 1760,
	127, 1751, 1766, 1764, 1761, 1466, 1467, 1758, 1566, 2628,
	1773, 492, 493, 2586, 1931, 1112, 1112, 1112, 1112, 1112,
	80, 1732, 1654, 1339, 636, 974, 975, 2616, 2195, 1753,
	1662, 1112, 1756, 1661, 439, 2323, 613, 2289, 1725, 1726,
	1727, 1112, 2220, 454, 1794, 1765, 1754, 1755, 2141, 1757,
	2140, 1809, 2060, 1835, 972, 1837, 1838, 1839, 1840, 2059,
	1801, 2051, 2498, 1806, 1808, 1784, 2501, 434, 1203, 1128,
	986, 1792, 2561, 2560, 2395, 1883, 2606, 2393, 1215, 2479,
	2478, 1796, 1876, 399, 1881, 636, 2378, 2379, 963, 1836,
	1135, 1802, 1805, 1875, 437, 892, 876, 873, 872, 564,
	964, 80, 832, 1393, 1394, 2641, 2412, 2411, 127, 437,
	2190, 1331, 1332, 1571, 1404, 1405, 1406, 1407, 2299, 1615,
	1844, 1846, 2272, 1225, 437, 2618, 2554, 1417, 1419, 2273,
	2397, 1852, 1603, 970, 1424, 96, 1952, 1747, 1322, 1866,
	974, 975, 2640, 1206, 437, 2639, 636, 1660, 1880, 952,
	953, 2638, 437, 1684, 1686, 1659, 2356, 1420, 858, 489,
	2609, 2608, 1879, 2558, 1696, 1697, 1698, 1699, 2502, 636,
	636, 1886, 2420, 2416, 1888, 127, 490, 84, 2415, 2302,
	1779, 1854, 1855, 1856, 1352, 636, 2712, 2711, 624, 2122,
	1899, 620, 1929, 1930, 1897, 632, 2005, 80, 454, 1901,
	1896, 1912, 636, 1923, 1924, 1721, 1718, 1927, 1936, 1907,
	1882, 1904, 1915, 1920, 1635, 820, 1906, 1255, 977, 2711,
	1351, 2030, 1709, 1937, 2712, 2430, 2034, 2035, 2036, 1202,
	1938, 2058, 1946, 1942, 2001, 1325, 2013, 443, 445, 2458,
	52, 2460, 19, 86, 2004, 1993, 1734, 55, 1752, 2459,
	18, 2461, 20, 1851, 2462, 21, 2457, 15, 2456, 14,
	2450, 10, 1, 636, 1625, 636, 1983, 2039, 1982, 2029,
	1827, 1828, 2473, 34, 2471, 33, 1295, 1834, 2252, 1940,
	2470, 32, 2033, 2469, 28, 2251, 1324, 1841, 636, 1751,
	2468, 27, 2258, 2037, 2090, 2008, 2467, 26, 2465, 23,
	2464, 22, 2093, 2023, 2466, 24, 2455, 13, 636, 1864,
	636, 2268, 636, 1213, 636, 2081, 2082, 2367, 2050, 2031,
	2052, 1984, 1985, 815, 1986, 1987, 1576, 434, 1988, 898,
	1609, 1936, 2044, 2559, 1059, 2100, 2043, 2497, 2063, 2064,
	2499, 1997, 1998, 2392, 2053, 2067, 2086, 2054, 2274, 1564,
	2236, 1565, 2070, 2452, 12, 2451, 11, 2449, 9, 2235,
	1858, 1857, 1894, 893, 1276, 1905, 127, 454, 1908, 1587,
	1900, 1645, 2509, 1516, 2107, 1506, 2032, 2102, 626, 92,
	1595, 841, 366, 1513, 437, 1637, 1815, 2500, 895, 127,
	437, 1651, 996, 1006, 1007, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 998, 1814, 127, 1008, 437, 1824, 636, 437,
	1527, 1813, 1812, 437, 437, 2495, 437, 1816, 1148, 1146,
	2151, 2057, 1147, 1145, 1150, 2108, 1149, 370, 2154, 1130,
	2006, 2541, 636, 2160, 978, 102, 127, 636, 56, 2291,
	2125, 2145, 2124, 2184, 636, 636, 2130, 1953, 1676, 2131,
	1956, 1957, 1958, 1679, 1919, 1961, 97, 105, 1681, 1682,
	372, 1203, 1016, 1687, 1688, 1689, 1690, 1691, 1692, 1658,
	1785, 1695, 611, 612, 604, 958, 1700, 1701, 1702, 1703,
	2521, 1705, 1706, 1707, 2571, 2109, 2590, 968, 1710, 1711,
	1712, 1713, 2514, 1731, 1075, 1440, 1450, 1719, 510, 1769,
	1722, 1723, 2307, 2516, 1343, 1728, 1729, 525, 524, 523,
	520, 1735, 521, 1736, 2582, 1602, 1739, 1740, 1752, 1741,
	1742, 1334, 1743, 990, 2077, 508, 499, 127, 2199, 1108,
	1101, 1614, 1461, 80, 2212, 2213, 2214, 1995, 1767, 1768,
	2191, 2210, 2169, 2156, 636, 2200, 1459, 1458, 1227, 600,
	2021, 636, 636, 636, 2017, 2223, 454, 1471, 2215, 1751,
	636, 1107, 70, 856, 454, 388, 2211, 2185, 2065, 2425,
	38, 444, 636, 2248, 2249, 2250, 2225, 494, 25, 17,
	1794, 865, 16, 2038, 1638, 813, 42, 2224, 44, 1853,
	1572, 2540, 2674, 2181, 2182, 2183, 879, 2698, 2593, 31,
	127, 30, 29, 1110, 1800, 2463, 2472, 2247, 2454, 2453,
	2661, 2660, 4, 949, 2285, 2286, 71, 35, 622, 2,
	0, 0, 0, 2287, 2112, 2110, 0, 2116, 0, 0,
	0, 2120, 2121, 0, 2123, 0, 0, 2276, 0, 437,
	0, 2277, 0, 2005, 2281, 2275, 2005, 2328, 2304, 2305,
	2288, 0, 2295, 2050, 2280, 0, 0, 2303, 0, 2030,
	0, 0, 0, 0, 2296, 0, 0, 636, 0, 127,
	0, 0, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 1564, 0, 0, 0, 0, 0,
	2300, 2004, 0, 0, 2004, 0, 0, 2355, 1936, 2357,
	0, 2325, 0, 0, 2331, 0, 620, 2334, 0, 0,
	1112, 620, 1131, 0, 2354, 636, 2346, 2347, 2324, 0,
	2330, 636, 0, 2335, 0, 0, 127, 0, 127, 2147,
	2345, 0, 2340, 0, 636, 0, 0, 2350, 497, 2351,
	0, 0, 1478, 0, 2336, 1941, 0, 0, 2358, 636,
	2413, 1949, 0, 0, 2370, 2380, 0, 0, 0, 0,
	0, 1959, 1960, 2348, 0, 96, 2233, 2385, 0, 0,
	0, 0, 1966, 2398, 0, 0, 1970, 2005, 2388, 80,
	2311, 2312, 2313, 2314, 0, 0, 0, 0, 2318, 0,
	2417, 0, 2321, 2322, 0, 2403, 2404, 0, 2418, 0,
	2187, 0, 0, 2410, 0, 0, 1479, 1481, 80, 1061,
	2226, 636, 2228, 2443, 2007, 0, 0, 0, 0, 2201,
	2202, 0, 2419, 2203, 2436, 2004, 2205, 0, 0, 0,
	2406, 0, 2431, 0, 1061, 2438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2435, 0, 0, 0, 0,
	636, 1110, 0, 0, 0, 0, 0, 2279, 997, 996,
	1006, 1007, 999, 1000, 1001, 1002, 1003, 1004, 1005, 998,
	0, 0, 1008, 0, 0, 0, 0, 0, 0, 0,
	2327, 0, 0, 0, 2048, 0, 0, 2505, 0, 2507,
	0, 0, 0, 0, 0, 1480, 0, 0, 2503, 2506,
	0, 1205, 2519, 0, 0, 2504, 2309, 2536, 0, 0,
	0, 2524, 0, 2520, 437, 0, 0, 127, 0, 0,
	2529, 0, 636, 0, 636, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 1531, 1532, 0, 1537, 1538, 1539, 1540,
	1541, 0, 0, 0, 0, 0, 0, 127, 1112, 0,
	0, 0, 0, 0, 1551, 1552, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	2575, 0, 0, 0, 2555, 2557, 0, 0, 0, 0,
	2129, 2564, 0, 636, 0, 0, 0, 1800, 0, 0,
	2136, 2138, 0, 0, 0, 2155, 2585, 0, 0, 0,
	2129, 1296, 2432, 0, 0, 2508, 2545, 0, 2436, 0,
	0, 0, 0, 0, 2612, 0, 2614, 2600, 636, 0,
	636, 0, 0, 0, 0, 0, 2621, 2620, 0, 2165,
	0, 0, 2615, 0, 0, 0, 0, 80, 2613, 2611,
	2174, 2175, 0, 80, 2630, 2619, 2180, 0, 2644, 632,
	2627, 0, 2637, 2635, 0, 0, 0, 0, 0, 1952,
	434, 0, 2651, 2193, 2194, 0, 2196, 0, 2650, 2197,
	0, 0, 0, 636, 2654, 80, 0, 2655, 632, 2629,
	80, 0, 0, 0, 0, 0, 0, 454, 0, 2209,
	2668, 2665, 0, 2671, 2664, 0, 636, 2663, 497, 2662,
	0, 2685, 0, 2684, 2687, 0, 0, 80, 636, 0,
	80, 80, 0, 0, 2692, 80, 2644, 437, 0, 1383,
	2701, 0, 2693, 0, 636, 2695, 0, 2705, 0, 0,
	0, 2642, 0, 434, 636, 80, 0, 2709, 80, 0,
	2644, 2704, 2707, 2720, 0, 0, 2722, 0, 0, 0,
	0, 0, 0, 2717, 80, 2730, 80, 0, 0, 2644,
	80, 2644, 0, 0, 0, 0, 0, 620, 0, 0,
	0, 0, 0, 0, 80, 2735, 0, 80, 0, 2644,
	0, 0, 0, 0, 80, 1446, 1447, 909, 80, 2644,
	437, 0, 2744, 2644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2129, 0, 0, 0, 0, 0, 2515,
	2518, 0, 620, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 2179, 2129, 0, 0, 632, 961, 0, 632,
	632, 0, 0, 0, 0, 2682, 0, 1947, 1948, 2315,
	2316, 2317, 0, 2319, 1954, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 1963, 1964, 1965,
	0, 1967, 1968, 1969, 0, 0, 0, 0, 2537, 2538,
	2337, 2338, 2339, 997, 996, 1006, 1007, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 998, 0, 454, 1008, 454, 0,
	0, 0, 0, 0, 2048, 0, 0, 0, 0, 2723,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 2048,
	0, 0, 0, 2673, 482, 1829, 1830, 1831, 1833, 997,
	996, 1006, 1007, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	998, 2126, 0, 1008, 971, 2128, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, 0,
	1111, 997, 996, 1006, 1007, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 998, 0, 0, 1008, 0, 0, 2518, 2421,
	2422, 2423, 2424, 0, 1623, 0, 0, 0, 1623, 2428,
	2429, 0, 125, 0, 0, 385, 0, 0, 0, 2636,
	0, 125, 0, 0, 0, 0, 0, 0, 124, 0,
	1623, 0, 0, 1623, 0, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 498, 632, 0, 603, 621, 0, 0, 125,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 601, 0, 0, 0, 625, 0, 125, 0, 802,
	476, 0, 0, 0, 0, 482, 0, 0, 125, 0,
	0, 0, 0, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 828, 0, 2133, 0, 0, 0,
	0, 0, 2048, 2525, 2048, 486, 0, 0, 0, 0,
	2530, 0, 0, 0, 2721, 0, 0, 2157, 0, 0,
	0, 0, 0, 0, 0, 2159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2162, 2163, 0, 1385, 1390,
	1391, 0, 2164, 0, 0, 1396, 1397, 1398, 0, 1400,
	0, 0, 1403, 0, 0, 0, 0, 1408, 1409, 1410,
	1411, 0, 1413, 1414, 1415, 0, 620, 0, 2178, 0,
	1421, 1422, 1423, 0, 0, 0, 1429, 1432, 0, 1437,
	1438, 0, 0, 0, 1143, 0, 0, 2568, 0, 0,
	0, 0, 0, 0, 0, 2188, 0, 0, 0, 2576,
	0, 620, 0, 0, 1448, 0, 1451, 1452, 0, 0,
	0, 476, 0, 0, 0, 0, 0, 632, 0, 2177,
	0, 0, 912, 919, 920, 922, 923, 924, 925, 926,
	0, 928, 929, 930, 2066, 933, 0, 936, 937, 938,
	939, 940, 997, 996, 1006, 1007, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 998, 0, 0, 1008, 0, 0, 0,
	0, 0, 0, 2048, 0, 997, 996, 1006, 1007, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 998, 0, 1850, 1008,
	456, 457, 458, 459, 460, 464, 465, 469, 470, 479,
	478, 477, 480, 481, 484, 483, 485, 461, 462, 463,
	466, 467, 468, 471, 472, 475, 473, 474, 0, 0,
	0, 0, 1170, 125, 0, 0, 997, 996, 1006, 1007,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 998, 0, 830,
	1008, 0, 0, 0, 0, 0, 0, 0, 0, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 632, 632, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 900, 2166, 2167, 0, 2168, 632, 0,
	2170, 1170, 2172, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 1950, 0, 0, 0, 0,
	0, 2737, 2738, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 456, 457, 458, 459, 460, 464, 465, 469, 470,
	479, 478, 477, 480, 481, 484, 483, 485, 461, 462,
	463, 466, 467, 468, 471, 472, 475, 473, 474, 2218,
	2219, 0, 0, 0, 620, 1171, 632, 0, 2012, 0,
	0, 997, 996, 1006, 1007, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 998, 0, 0, 1008, 0, 0, 0, 0,
	0, 2012, 1157, 0, 0, 482, 0, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 1683,
	0, 632, 0, 632, 0, 632, 2128, 2047, 1693, 1694,
	0, 0, 0, 0, 0, 486, 0, 0, 0, 1704,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 125, 125, 125, 0, 2137, 0, 0, 0, 0,
	0, 621, 0, 0, 486, 0, 621, 1103, 0, 1113,
	0, 0, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 0,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1991, 1172,
	1173, 1174, 1175, 1151, 1155, 1185, 1152, 1158, 1154, 1156,
	1153, 2115, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 476, 0, 0, 0, 2139, 0, 0, 0, 0,
	2144, 0, 0, 0, 0, 0, 0, 2148, 2149, 0,
	0, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 0, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 0, 1172, 1173,
	1174, 1175, 1151, 1155, 1185, 1152, 1158, 1154, 1156, 1153,
	476, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	0, 0, 0, 997, 996, 1006, 1007, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 998, 0, 0, 1008, 0, 1186,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 1297, 1298, 1299, 620, 1301, 1302, 0, 0, 1303,
	0, 0, 0, 0, 0, 1304, 0, 2207, 0, 1305,
	1306, 0, 1307, 1308, 2207, 2207, 2207, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2207, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 125, 0, 1186, 0,
	0, 0, 0, 0, 1237, 0, 0, 0, 992, 601,
	995, 0, 1228, 125, 125, 125, 125, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 0, 993, 994, 991, 0, 1244,
	1245, 1246, 1247, 0, 0, 997, 996, 1006, 1007, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 998, 0, 0, 1008,
	0, 456, 457, 458, 459, 460, 464, 465, 469, 470,
	479, 478, 477, 480, 481, 484, 483, 485, 461, 462,
	463, 466, 467, 468, 471, 472, 475, 473, 474, 1990,
	632, 0, 0, 0, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 457, 458, 459, 460, 464, 465, 469, 470, 479,
	478, 477, 480, 481, 484, 483, 485, 461, 462, 463,
	466, 467, 468, 471, 472, 475, 473, 474, 2329, 125,
	0, 453, 0, 0, 2207, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 1318, 0, 2047, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2047, 1237, 0, 0, 0, 0, 1340, 997,
	996, 1006, 1007, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	998, 0, 0, 1008, 997, 996, 1006, 1007, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 998, 0, 0, 1008, 0,
	0, 0, 0, 0, 0, 0, 1389, 1389, 1389, 0,
	0, 0, 1389, 1389, 1389, 1389, 1389, 1389, 0, 0,
	1389, 0, 0, 0, 2409, 1389, 1389, 1389, 1389, 0,
	1389, 1389, 1389, 0, 0, 0, 0, 0, 1389, 1389,
	1389, 0, 0, 0, 1389, 1389, 0, 1389, 1389, 0,
	0, 0, 621, 0, 0, 0, 1989, 0, 0, 0,
	0, 0, 0, 2434, 0, 0, 0, 0, 0, 0,
	0, 0, 1389, 1389, 1389, 1389, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 125, 453, 0, 0, 0,
	125, 125, 0, 1455, 125, 1488, 1237, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 1237, 0, 0, 0, 0, 36, 37, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 1630, 36,
	59, 72, 39, 40, 0, 2047, 78, 2047, 0, 0,
	41, 63, 64, 59, 0, 0, 0, 60, 0, 78,
	0, 0, 0, 41, 0, 0, 0, 0, 0, 0,
	620, 997, 996, 1006, 1007, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 998, 381, 50, 1008, 0, 0, 81, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 125, 0, 125, 125, 0, 0, 1570, 0,
	0, 125, 0, 0, 0, 0, 632, 0, 1581, 0,
	1582, 1583, 0, 0, 0, 2474, 0, 1590, 0, 0,
	2746, 0, 0, 0, 0, 0, 0, 0, 1599, 1600,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2570, 0, 2573, 0, 0, 1601, 0, 43, 74,
	46, 45, 48, 125, 68, 453, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 0, 68, 0, 900,
	0, 359, 0, 0, 0, 0, 0, 2475, 362, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 371, 379,
	380, 0, 0, 49, 77, 76, 2047, 0, 0, 0,
	47, 65, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2207,
	0, 0, 0, 368, 0, 0, 369, 0, 0, 377,
	378, 632, 57, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 2573, 2476, 66,
	0, 67, 0, 0, 0, 0, 0, 2657, 0, 1389,
	0, 0, 66, 0, 67, 0, 0, 1389, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 1389, 0, 0,
	374, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	0, 1389, 51, 75, 0, 53, 54, 61, 0, 62,
	0, 375, 0, 0, 0, 2477, 75, 0, 53, 54,
	61, 0, 62, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	0, 621, 125, 125, 125, 125, 125, 59, 0, 1675,
	0, 0, 0, 78, 453, 0, 0, 41, 125, 0,
	0, 0, 453, 0, 360, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 621, 997, 996, 1006,
	1007, 999, 1000, 1001, 1002, 1003, 1004, 1005, 998, 0,
	0, 1008, 0, 0, 0, 81, 0, 373, 363, 364,
	73, 384, 0, 0, 0, 365, 367, 0, 361, 383,
	382, 0, 0, 73, 0, 0, 0, 0, 0, 2474,
	0, 0, 0, 0, 2742, 997, 996, 1006, 1007, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 998, 0, 0, 1008,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 79,
	0, 376, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 79, 0, 41, 43, 74, 46, 45, 48,
	0, 68, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 2475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 81, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2474, 0, 0, 0,
	0, 2731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 57,
	58, 0, 2476, 0, 1389, 0, 0, 0, 0, 1932,
	0, 0, 0, 1389, 0, 1237, 66, 0, 67, 0,
	0, 0, 43, 74, 46, 45, 48, 36, 68, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 2475, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 41, 0, 0, 49, 77, 76, 0, 0, 2477,
	75, 47, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2476,
	0, 0, 482, 2474, 0, 0, 0, 36, 2714, 72,
	39, 40, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 59, 0, 1798, 0, 0, 0, 78, 0, 0,
	0, 41, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 43,
	74, 46, 45, 48, 0, 68, 2477, 75, 0, 53,
	54, 61, 0, 62, 0, 2475, 0, 0, 0, 81,
	2702, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	2080, 0, 0, 2474, 0, 0, 79, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1143, 125, 2106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2111, 0,
	0, 0, 0, 57, 58, 0, 2476, 0, 476, 43,
	74, 46, 45, 48, 125, 68, 0, 0, 0, 482,
	66, 0, 67, 0, 73, 2475, 0, 0, 0, 498,
	2143, 0, 0, 36, 0, 72, 39, 40, 0, 0,
	2135, 49, 77, 76, 0, 0, 0, 59, 47, 486,
	0, 0, 0, 78, 0, 0, 0, 41, 0, 0,
	0, 0, 0, 2477, 75, 0, 53, 54, 61, 0,
	62, 482, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1201, 57, 58, 81, 2476, 0, 0, 0,
	0, 486, 0, 0, 0, 453, 0, 0, 0, 621,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 2474,
	0, 0, 0, 0, 2643, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 41,
	0, 0, 0, 2477, 75, 476, 53, 54, 61, 0,
	62, 73, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 68, 0, 0, 0, 0, 0, 0, 125, 0,
	1143, 2475, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 2234, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 476, 0, 0,
	79, 2474, 0, 0, 0, 0, 0, 0, 456, 457,
	458, 459, 460, 464, 465, 469, 470, 479, 478, 477,
	480, 481, 484, 483, 485, 461, 462, 463, 466, 467,
	468, 471, 472, 475, 473, 474, 0, 125, 0, 57,
	58, 73, 2476, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 68, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 2475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	79, 0, 0, 0, 453, 0, 453, 0, 0, 2477,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	464, 465, 469, 470, 479, 478, 477, 480, 481, 484,
	483, 485, 461, 462, 463, 466, 467, 468, 471, 472,
	475, 473, 474, 0, 0, 0, 0, 0, 0, 498,
	0, 2477, 75, 0, 53, 54, 61, 73, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 464, 465, 469, 470, 479, 478, 477, 480,
	481, 484, 483, 485, 461, 462, 463, 466, 467, 468,
	471, 472, 475, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 2532, 781, 758, 321, 706, 784, 670, 692, 797,
	695, 698, 739, 653, 719, 250, 690, 654, 0, 674,
	643, 683, 644, 671, 708, 175, 669, 760, 722, 783,
	208, 735, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 782, 714, 0, 791, 211, 0, 731, 792, 309,
	234, 0, 0, 710, 768, 717, 756, 705, 741, 662,
	730, 786, 691, 737, 787, 0, 0, 0, 0, 2539,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	734, 780, 686, 736, 738, 641, 733, 0, 648, 655,
	796, 775, 677, 678, 679, 0, 0, 0, 0, 0,
	0, 0, 709, 718, 750, 702, 340, 261, 277, 297,
	697, 269, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 728, 0, 0, 0, 656, 649, 0,
	0, 707, 0, 0, 0, 661, 640, 676, 752, 0,
	638, 187, 235, 144, 757, 774, 704, 199, 350, 778,
	701, 700, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 749, 291, 688, 639, 761, 672, 684,
	166, 680, 283, 254, 339, 0, 725, 282, 212, 329,
	745, 779, 338, 693, 800, 347, 352, 0, 715, 659,
	306, 176, 0, 133, 0, 268, 171, 204, 703, 740,
	673, 163, 747, 729, 767, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 2542, 2543, 2544, 0, 0,
	0, 0, 344, 699, 294, 293, 694, 195, 755, 732,
	645, 276, 743, 200, 132, 318, 355, 149, 206, 323,
	637, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 685, 744, 754, 274, 296, 325, 151,
	313, 681, 682, 687, 751, 285, 762, 772, 785, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 646,
	0, 311, 342, 357, 153, 668, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 666, 667, 664,
	0, 665, 720, 721, 788, 789, 790, 753, 658, 0,
	769, 770, 0, 0, 0, 0, 0, 759, 776, 777,
	742, 798, 696, 663, 647, 650, 651, 652, 660, 711,
	712, 724, 727, 765, 764, 763, 766, 771, 794, 793,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 131, 140, 210, 799, 275, 182, 343,
	642, 173, 0, 713, 716, 726, 748, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 746, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 773, 781, 758, 321, 706,
	784, 670, 692, 797, 695, 698, 739, 653, 719, 250,
	690, 654, 0, 674, 643, 683, 644, 671, 708, 175,
	669, 760, 722, 783, 208, 735, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 782, 714, 0, 791, 211,
	0, 731, 792, 309, 234, 0, 0, 710, 768, 717,
	756, 705, 741, 662, 730, 786, 691, 737, 787, 0,
	0, 0, 0, 635, 0, 1510, 1511, 0, 0, 0,
	0, 0, 657, 0, 734, 780, 686, 736, 738, 641,
	733, 0, 648, 655, 796, 775, 677, 678, 679, 1795,
	0, 0, 0, 0, 0, 0, 709, 718, 750, 702,
	340, 261, 277, 297, 697, 269, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 675, 0, 728, 0, 0,
	0, 656, 649, 0, 0, 707, 0, 0, 0, 661,
	640, 676, 752, 0, 638, 187, 235, 144, 757, 774,
	704, 199, 350, 778, 701, 700, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 749, 291, 688,
	639, 761, 672, 684, 166, 680, 283, 254, 339, 0,
	725, 282, 212, 329, 745, 779, 338, 693, 800, 347,
	352, 0, 715, 659, 306, 176, 0, 133, 0, 268,
	171, 204, 703, 740, 673, 163, 747, 729, 767, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 699, 294, 293,
	694, 195, 755, 732, 645, 276, 743, 200, 132, 318,
	355, 149, 206, 323, 637, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 685, 744, 754,
	274, 296, 325, 151, 313, 681, 682, 687, 751, 285,
	762, 772, 785, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 646, 0, 311, 342, 357, 153, 668,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 666, 667, 664, 0, 665, 720, 721, 788, 789,
	790, 753, 658, 0, 769, 770, 0, 0, 0, 0,
	0, 759, 776, 777, 742, 798, 696, 663, 647, 650,
	651, 652, 660, 711, 712, 724, 727, 765, 764, 763,
	766, 771, 794, 793, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 131, 140, 210,
	799, 275, 182, 343, 642, 173, 0, 713, 716, 726,
	748, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 746, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 773,
	781, 758, 321, 706, 784, 670, 692, 797, 695, 698,
	739, 653, 719, 250, 690, 654, 0, 674, 643, 683,
	644, 671, 708, 175, 669, 760, 722, 783, 208, 735,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 782,
	714, 0, 791, 211, 0, 731, 792, 309, 234, 0,
	0, 710, 768, 717, 756, 705, 741, 662, 730, 786,
	691, 737, 787, 0, 0, 0, 0, 635, 0, 1510,
	1511, 0, 0, 0, 0, 0, 657, 0, 734, 780,
	686, 736, 738, 641, 733, 0, 648, 655, 796, 775,
	677, 678, 679, 0, 0, 0, 0, 0, 0, 0,
	709, 718, 750, 702, 340, 261, 277, 297, 697, 269,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 675,
	0, 728, 0, 0, 0, 656, 649, 0, 0, 707,
	0, 0, 0, 661, 640, 676, 752, 0, 638, 187,
	235, 144, 757, 774, 704, 199, 350, 778, 701, 700,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 749, 291, 688, 639, 761, 672, 684, 166, 680,
	283, 254, 339, 0, 725, 282, 212, 329, 745, 779,
	338, 693, 800, 347, 352, 0, 715, 659, 306, 176,
	0, 133, 0, 268, 171, 204, 703, 740, 673, 163,
	747, 729, 767, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 699, 294, 293, 694, 195, 755, 732, 645, 276,
	743, 200, 132, 318, 355, 149, 206, 323, 637, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 685, 744, 754, 274, 296, 325, 151, 313, 681,
	682, 687, 751, 285, 762, 772, 785, 134, 319, 337,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 646, 0, 311,
	342, 357, 153, 668, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 666, 667, 664, 0, 665,
	720, 721, 788, 789, 790, 753, 658, 0, 769, 770,
	0, 0, 0, 0, 0, 759, 776, 777, 742, 798,
	696, 663, 647, 650, 651, 652, 660, 711, 712, 724,
	727, 765, 764, 763, 766, 771, 794, 793, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 131, 140, 210, 799, 275, 182, 343, 642, 173,
	0, 713, 716, 726, 748, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 746, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 773, 781, 2009, 321, 706, 784, 670,
	692, 797, 695, 698, 739, 653, 719, 250, 690, 654,
	0, 674, 643, 683, 644, 671, 708, 175, 669, 760,
	722, 783, 208, 735, 0, 165, 216, 214, 0, 0,
	0, 257, 320, 782, 714, 0, 791, 211, 0, 731,
	792, 309, 234, 0, 0, 710, 768, 717, 756, 705,
	741, 662, 730, 786, 691, 737, 787, 81, 0, 961,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 734, 780, 686, 736, 738, 641, 733, 0,
	648, 655, 796, 775, 677, 678, 679, 0, 0, 0,
	0, 0, 0, 0, 709, 718, 750, 702, 340, 261,
	277, 297, 697, 269, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 728, 0, 0, 0, 656,
	649, 0, 0, 707, 0, 0, 0, 661, 640, 676,
	752, 0, 638, 187, 235, 144, 757, 774, 704, 199,
	350, 778, 701, 700, 271, 0, 315, 189, 209, 148,
	128, 142, 159, 188, 246, 749, 291, 688, 639, 761,
	672, 684, 166, 680, 283, 254, 339, 0, 725, 282,
	212, 329, 745, 779, 338, 693, 800, 347, 352, 0,
	715, 659, 306, 176, 0, 133, 0, 268, 171, 204,
	703, 740, 673, 163, 747, 729, 767, 305, 327, 150,
	322, 233, 239, 160, 162, 161, 143, 300, 326, 155,
	164, 310, 287, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 699, 294, 293, 694, 195,
	755, 732, 645, 276, 743, 200, 132, 318, 355, 149,
	206, 323, 637, 183, 245, 168, 255, 256, 180, 130,
	273, 227, 228, 226, 229, 685, 744, 754, 274, 296,
	325, 151, 313, 681, 682, 687, 751, 285, 762, 772,
	785, 134, 319, 337, 156, 295, 298, 353, 281, 137,
	335, 314, 231, 201, 202, 135, 0, 136, 279, 174,
	186, 169, 249, 0, 185, 270, 332, 333, 167, 356,
	145, 346, 139, 146, 345, 242, 0, 241, 348, 328,
	336, 232, 220, 0, 138, 334, 230, 219, 207, 179,
	191, 266, 215, 267, 192, 237, 236, 238, 217, 221,
	0, 646, 0, 311, 342, 357, 153, 668, 299, 324,
	0, 0, 154, 184, 178, 265, 240, 147, 194, 308,
	205, 213, 278, 354, 253, 284, 157, 341, 307, 666,
	667, 664, 0, 665, 720, 721, 788, 789, 790, 753,
	658, 0, 769, 770, 0, 0, 0, 0, 0, 759,
	776, 777, 742, 798, 696, 663, 647, 650, 651, 652,
	660, 711, 712, 724, 727, 765, 764, 763, 766, 771,
	794, 793, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 131, 140, 210, 2010, 275,
	182, 343, 642, 173, 0, 713, 716, 726, 748, 129,
	141, 152, 158, 172, 177, 181, 190, 193, 196, 197,
	198, 203, 218, 222, 223, 224, 225, 243, 244, 247,
	248, 251, 252, 258, 259, 260, 262, 263, 264, 272,
	746, 280, 286, 288, 289, 290, 292, 301, 302, 303,
	304, 312, 317, 330, 331, 349, 351, 773, 781, 758,
	321, 706, 784, 670, 692, 797, 695, 698, 739, 653,
	719, 250, 690, 654, 0, 674, 643, 683, 644, 671,
	708, 175, 669, 760, 722, 783, 208, 735, 0, 165,
	216, 214, 0, 0, 0, 257, 320, 782, 714, 0,
	791, 211, 0, 731, 792, 309, 234, 0, 0, 710,
	768, 717, 756, 705, 741, 662, 730, 786, 691, 737,
	787, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 734, 780, 686, 736,
	738, 641, 733, 0, 648, 655, 796, 775, 677, 678,
	679, 0, 0, 0, 0, 0, 0, 0, 709, 718,
	750, 702, 340, 261, 277, 297, 697, 269, 689, 0,
	0, 0, 0, 0, 0, 2306, 0, 675, 0, 728,
	0, 0, 0, 656, 649, 0, 0, 707, 0, 0,
	0, 661, 640, 676, 752, 0, 638, 187, 235, 144,
	757, 774, 704, 199, 350, 778, 701, 700, 271, 0,
	315, 189, 209, 148, 128, 142, 159, 188, 246, 749,
	291, 688, 639, 761, 672, 684, 166, 680, 283, 254,
	339, 0, 725, 282, 212, 329, 745, 779, 338, 693,
	800, 347, 352, 0, 715, 659, 306, 176, 0, 133,
	0, 268, 171, 204, 703, 740, 673, 163, 747, 729,
	767, 305, 327, 150, 322, 233, 239, 160, 162, 161,
	143, 300, 326, 155, 164, 310, 287, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 699,
	294, 293, 694, 195, 755, 732, 645, 276, 743, 200,
	132, 318, 355, 149, 206, 323, 637, 183, 245, 168,
	255, 256, 180, 130, 273, 227, 228, 226, 229, 685,
	744, 754, 274, 296, 325, 151, 313, 681, 682, 687,
	751, 285, 762, 772, 785, 134, 319, 337, 156, 295,
	298, 353, 281, 137, 335, 314, 231, 201, 202, 135,
	0, 136, 279, 174, 186, 169, 249, 0, 185, 270,
	332, 333, 167, 356, 145, 346, 139, 146, 345, 242,
	0, 241, 348, 328, 336, 232, 220, 0, 138, 334,
	230, 219, 207, 179, 191, 266, 215, 267, 192, 237,
	236, 238, 217, 221, 0, 646, 0, 311, 342, 357,
	153, 668, 299, 324, 0, 0, 154, 184, 178, 265,
	240, 147, 194, 308, 205, 213, 278, 354, 253, 284,
	157, 341, 307, 666, 667, 664, 0, 665, 720, 721,
	788, 789, 790, 753, 658, 0, 769, 770, 0, 0,
	0, 0, 0, 759, 776, 777, 742, 798, 696, 663,
	647, 650, 651, 652, 660, 711, 712, 724, 727, 765,
	764, 763, 766, 771, 794, 793, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 131,
	140, 210, 799, 275, 182, 343, 642, 173, 0, 713,
	716, 726, 748, 129, 141, 152, 158, 172, 177, 181,
	190, 193, 196, 197, 198, 203, 218, 222, 223, 224,
	225, 243, 244, 247, 248, 251, 252, 258, 259, 260,
	262, 263, 264, 272, 746, 280, 286, 288, 289, 290,
	292, 301, 302, 303, 304, 312, 317, 330, 331, 349,
	351, 773, 781, 758, 321, 706, 784, 670, 692, 797,
	695, 698, 739, 653, 719, 250, 690, 654, 0, 674,
	643, 683, 644, 671, 708, 175, 669, 760, 722, 783,
	208, 735, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 782, 714, 0, 791, 211, 0, 731, 792, 309,
	234, 0, 0, 710, 768, 717, 756, 705, 741, 662,
	730, 786, 691, 737, 787, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	734, 780, 686, 736, 738, 641, 733, 0, 648, 655,
	796, 775, 677, 678, 679, 0, 0, 0, 0, 0,
	0, 0, 709, 718, 750, 702, 340, 261, 277, 297,
	697, 269, 689, 0, 0, 0, 0, 0, 0, 1945,
	0, 675, 0, 728, 0, 0, 0, 656, 649, 0,
	0, 707, 0, 0, 0, 661, 640, 676, 752, 0,
	638, 187, 235, 144, 757, 774, 704, 199, 350, 778,
	701, 700, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 749, 291, 688, 639, 761, 672, 684,
	166, 680, 283, 254, 339, 0, 725, 282, 212, 329,
	745, 779, 338, 693, 800, 347, 352, 0, 715, 659,
	306, 176, 0, 133, 0, 268, 171, 204, 703, 740,
	673, 163, 747, 729, 767, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 699, 294, 293, 694, 195, 755, 732,
	645, 276, 743, 200, 132, 318, 355, 149, 206, 323,
	637, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 685, 744, 754, 274, 296, 325, 151,
	313, 681, 682, 687, 751, 285, 762, 772, 785, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 646,
	0, 311, 342, 357, 153, 668, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 666, 667, 664,
	0, 665, 720, 721, 788, 789, 790, 753, 658, 0,
	769, 770, 0, 0, 0, 0, 0, 759, 776, 777,
	742, 798, 696, 663, 647, 650, 651, 652, 660, 711,
	712, 724, 727, 765, 764, 763, 766, 771, 794, 793,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 131, 140, 210, 799, 275, 182, 343,
	642, 173, 0, 713, 716, 726, 748, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 746, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 773, 781, 758, 321, 706,
	784, 670, 692, 797, 695, 698, 739, 653, 719, 250,
	690, 654, 0, 674, 643, 683, 644, 671, 708, 175,
	669, 760, 722, 783, 208, 735, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 782, 714, 0, 791, 211,
	0, 731, 792, 309, 234, 0, 0, 710, 768, 717,
	756, 705, 741, 662, 730, 786, 691, 737, 787, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 734, 780, 686, 736, 738, 641,
	733, 0, 648, 655, 796, 775, 677, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 709, 718, 750, 702,
	340, 261, 277, 297, 697, 269, 689, 0, 0, 0,
	0, 0, 0, 1935, 0, 675, 0, 728, 0, 0,
	0, 656, 649, 0, 0, 707, 0, 0, 0, 661,
	640, 676, 752, 0, 638, 187, 235, 144, 757, 774,
	704, 199, 350, 778, 701, 700, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 749, 291, 688,
	639, 761, 672, 684, 166, 680, 283, 254, 339, 0,
	725, 282, 212, 329, 745, 779, 338, 693, 800, 347,
	352, 0, 715, 659, 306, 176, 0, 133, 0, 268,
	171, 204, 703, 740, 673, 163, 747, 729, 767, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 699, 294, 293,
	694, 195, 755, 732, 645, 276, 743, 200, 132, 318,
	355, 149, 206, 323, 637, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 685, 744, 754,
	274, 296, 325, 151, 313, 681, 682, 687, 751, 285,
	762, 772, 785, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 646, 0, 311, 342, 357, 153, 668,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 666, 667, 664, 0, 665, 720, 721, 788, 789,
	790, 753, 658, 0, 769, 770, 0, 0, 0, 0,
	0, 759, 776, 777, 742, 798, 696, 663, 647, 650,
	651, 652, 660, 711, 712, 724, 727, 765, 764, 763,
	766, 771, 794, 793, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 131, 140, 210,
	799, 275, 182, 343, 642, 173, 0, 713, 716, 726,
	748, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 746, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 773,
	781, 758, 321, 706, 784, 670, 692, 797, 695, 698,
	739, 653, 719, 250, 690, 654, 0, 674, 643, 683,
	644, 671, 708, 175, 669, 760, 722, 783, 208, 735,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 782,
	714, 0, 791, 211, 0, 731, 792, 309, 234, 0,
	0, 710, 768, 717, 756, 705, 741, 662, 730, 786,
	691, 737, 787, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 734, 780,
	686, 736, 738, 641, 733, 0, 648, 655, 796, 775,
	677, 678, 679, 0, 0, 0, 0, 0, 0, 0,
	709, 718, 750, 702, 340, 261, 277, 297, 697, 269,
	689, 0, 0, 0, 0, 0, 0, 1489, 0, 675,
	0, 728, 0, 0, 0, 656, 649, 0, 0, 707,
	0, 0, 0, 661, 640, 676, 752, 0, 638, 187,
	235, 144, 757, 774, 704, 199, 350, 778, 701, 700,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 749, 291, 688, 639, 761, 672, 684, 166, 680,
	283, 254, 339, 0, 725, 282, 212, 329, 745, 779,
	338, 693, 800, 347, 352, 0, 715, 659, 306, 176,
	0, 133, 0, 268, 171, 204, 703, 740, 673, 163,
	747, 729, 767, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 699, 294, 293, 694, 195, 755, 732, 645, 276,
	743, 200, 132, 318, 355, 149, 206, 323, 637, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 685, 744, 754, 274, 296, 325, 151, 313, 681,
	682, 687, 751, 285, 762, 772, 785, 134, 319, 337,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 646, 0, 311,
	342, 357, 153, 668, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 666, 667, 664, 0, 665,
	720, 721, 788, 789, 790, 753, 658, 0, 769, 770,
	0, 0, 0, 0, 0, 759, 776, 777, 742, 798,
	696, 663, 647, 650, 651, 652, 660, 711, 712, 724,
	727, 765, 764, 763, 766, 771, 794, 793, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 131, 140, 210, 799, 275, 182, 343, 642, 173,
	0, 713, 716, 726, 748, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 746, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 773, 781, 758, 321, 706, 784, 670,
	692, 797, 695, 698, 739, 653, 719, 250, 690, 654,
	0, 674, 643, 683, 644, 671, 708, 175, 669, 760,
	722, 783, 208, 735, 0, 165, 216, 214, 0, 0,
	0, 257, 320, 782, 714, 0, 791, 211, 0, 731,
	792, 309, 234, 0, 0, 710, 768, 717, 756, 705,
	741, 662, 730, 786, 691, 737, 787, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 734, 780, 686, 736, 738, 641, 733, 0,
	648, 655, 796, 775, 677, 678, 679, 0, 0, 0,
	0, 0, 0, 0, 709, 718, 750, 702, 340, 261,
	277, 297, 697, 269, 689, 0, 0, 0, 0, 0,
	0, 1349, 0, 675, 0, 728, 0, 0, 0, 656,
	649, 0, 0, 707, 0, 0, 0, 661, 640, 676,
	752, 0, 638, 187, 235, 144, 757, 774, 704, 199,
	350, 778, 701, 700, 271, 0, 315, 189, 209, 148,
	128, 142, 159, 188, 246, 749, 291, 688, 639, 761,
	672, 684, 166, 680, 283, 254, 339, 0, 725, 282,
	212, 329, 745, 779, 338, 693, 800, 347, 352, 0,
	715, 659, 306, 176, 0, 133, 0, 268, 171, 204,
	703, 740, 673, 163, 747, 729, 767, 305, 327, 150,
	322, 233, 239, 160, 162, 161, 143, 300, 326, 155,
	164, 310, 287, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 699, 294, 293, 694, 195,
	755, 732, 645, 276, 743, 200, 132, 318, 355, 149,
	206, 323, 637, 183, 245, 168, 255, 256, 180, 130,
	273, 227, 228, 226, 229, 685, 744, 754, 274, 296,
	325, 151, 313, 681, 682, 687, 751, 285, 762, 772,
	785, 134, 319, 337, 156, 295, 298, 353, 281, 137,
	335, 314, 231, 201, 202, 135, 0, 136, 279, 174,
	186, 169, 249, 0, 185, 270, 332, 333, 167, 356,
	145, 346, 139, 146, 345, 242, 0, 241, 348, 328,
	336, 232, 220, 0, 138, 334, 230, 219, 207, 179,
	191, 266, 215, 267, 192, 237, 236, 238, 217, 221,
	0, 646, 0, 311, 342, 357, 153, 668, 299, 324,
	0, 0, 154, 184, 178, 265, 240, 147, 194, 308,
	205, 213, 278, 354, 253, 284, 157, 341, 307, 666,
	667, 664, 0, 665, 720, 721, 788, 789, 790, 753,
	658, 0, 769, 770, 0, 0, 0, 0, 0, 759,
	776, 777, 742, 798, 696, 663, 647, 650, 651, 652,
	660, 711, 712, 724, 727, 765, 764, 763, 766, 771,
	794, 793, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 131, 140, 210, 799, 275,
	182, 343, 642, 173, 0, 713, 716, 726, 748, 129,
	141, 152, 158, 172, 177, 181, 190, 193, 196, 197,
	198, 203, 218, 222, 223, 224, 225, 243, 244, 247,
	248, 251, 252, 258, 259, 260, 262, 263, 264, 272,
	746, 280, 286, 288, 289, 290, 292, 301, 302, 303,
	304, 312, 317, 330, 331, 349, 351, 773, 781, 758,
	321, 706, 784, 670, 692, 797, 695, 698, 739, 653,
	719, 250, 690, 654, 0, 674, 643, 683, 644, 671,
	708, 175, 669, 760, 722, 783, 208, 735, 0, 165,
	216, 214, 0, 0, 0, 257, 320, 782, 714, 0,
	791, 211, 0, 731, 792, 309, 234, 0, 0, 710,
	768, 717, 756, 705, 741, 662, 730, 786, 691, 737,
	787, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 734, 780, 686, 736,
	738, 641, 733, 0, 648, 655, 796, 775, 677, 678,
	679, 0, 0, 0, 0, 0, 0, 0, 709, 718,
	750, 702, 340, 261, 277, 297, 697, 269, 689, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 728,
	0, 0, 0, 656, 649, 0, 0, 707, 0, 0,
	0, 661, 640, 676, 752, 0, 638, 187, 235, 144,
	757, 774, 704, 199, 350, 778, 701, 700, 271, 0,
	315, 189, 209, 148, 128, 142, 159, 188, 246, 749,
	291, 688, 639, 761, 672, 684, 166, 680, 283, 254,
	339, 0, 725, 282, 212, 329, 745, 779, 338, 693,
	800, 347, 352, 0, 715, 659, 306, 176, 0, 133,
	0, 268, 171, 204, 703, 740, 673, 163, 747, 729,
	767, 305, 327, 150, 322, 233, 239, 160, 162, 161,
	143, 300, 326, 155, 164, 310, 287, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 699,
	294, 293, 694, 195, 755, 732, 645, 276, 743, 200,
	132, 318, 355, 149, 206, 323, 637, 183, 245, 168,
	255, 256, 180, 130, 273, 227, 228, 226, 229, 685,
	744, 754, 274, 296, 325, 151, 313, 681, 682, 687,
	751, 285, 762, 772, 785, 134, 319, 337, 156, 295,
	298, 353, 281, 137, 335, 314, 231, 201, 202, 135,
	0, 136, 279, 174, 186, 169, 249, 0, 185, 270,
	332, 333, 167, 356, 145, 346, 139, 146, 345, 242,
	0, 241, 348, 328, 336, 232, 220, 0, 138, 334,
	230, 219, 207, 179, 191, 266, 215, 267, 192, 237,
	236, 238, 217, 221, 0, 646, 0, 311, 342, 357,
	153, 668, 299, 324, 0, 0, 154, 184, 178, 265,
	240, 147, 194, 308, 205, 213, 278, 354, 253, 284,
	157, 341, 307, 666, 667, 664, 0, 665, 720, 721,
	788, 789, 790, 753, 658, 0, 769, 770, 0, 0,
	0, 0, 0, 759, 776, 777, 742, 798, 696, 663,
	647, 650, 651, 652, 660, 711, 712, 724, 727, 765,
	764, 763, 766, 771, 794, 793, 795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 131,
	140, 210, 799, 275, 182, 343, 642, 173, 0, 713,
	716, 726, 748, 129, 141, 152, 158, 172, 177, 181,
	190, 193, 196, 197, 198, 203, 218, 222, 223, 224,
	225, 243, 244, 247, 248, 251, 252, 258, 259, 260,
	262, 263, 264, 272, 746, 280, 286, 288, 289, 290,
	292, 301, 302, 303, 304, 312, 317, 330, 331, 349,
	351, 773, 781, 758, 321, 706, 784, 670, 692, 797,
	695, 698, 739, 653, 719, 250, 690, 654, 0, 674,
	643, 683, 644, 671, 708, 175, 669, 760, 722, 783,
	208, 735, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 782, 714, 0, 791, 211, 0, 731, 792, 309,
	234, 0, 0, 710, 768, 717, 756, 705, 741, 662,
	730, 786, 691, 737, 787, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	734, 780, 686, 736, 738, 641, 733, 0, 648, 655,
	796, 775, 677, 678, 679, 0, 0, 0, 0, 0,
	0, 0, 709, 718, 750, 702, 340, 261, 277, 297,
	697, 269, 689, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 728, 0, 0, 0, 656, 649, 0,
	0, 707, 0, 0, 0, 661, 640, 676, 752, 0,
	638, 187, 235, 144, 757, 774, 704, 199, 350, 778,
	701, 700, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 749, 291, 688, 639, 761, 672, 684,
	166, 680, 283, 254, 339, 0, 725, 282, 212, 329,
	745, 779, 338, 693, 800, 347, 352, 0, 715, 659,
	306, 176, 0, 133, 0, 268, 171, 204, 703, 740,
	673, 163, 747, 729, 767, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 699, 294, 293, 694, 195, 755, 732,
	645, 276, 743, 200, 132, 318, 355, 149, 206, 323,
	637, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 685, 744, 754, 274, 296, 325, 151,
	313, 681, 682, 687, 751, 285, 762, 772, 785, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 646,
	0, 311, 342, 357, 153, 668, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 666, 667, 664,
	0, 665, 720, 721, 788, 789, 790, 753, 658, 0,
	769, 770, 0, 0, 0, 0, 0, 759, 776, 777,
	742, 798, 696, 663, 647, 650, 651, 652, 660, 711,
	712, 724, 727, 765, 764, 763, 766, 771, 794, 793,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 131, 140, 210, 799, 275, 182, 343,
	642, 173, 0, 713, 716, 726, 748, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 746, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 773, 781, 758, 321, 706,
	784, 670, 692, 797, 695, 698, 739, 653, 719, 250,
	690, 654, 0, 674, 643, 683, 644, 671, 708, 175,
	669, 760, 722, 783, 208, 735, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 1521, 1525, 0, 791, 211,
	0, 731, 792, 309, 234, 0, 0, 710, 768, 717,
	756, 705, 741, 662, 730, 786, 691, 737, 787, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 734, 780, 686, 736, 738, 641,
	733, 0, 648, 655, 796, 775, 677, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 709, 718, 750, 702,
	340, 261, 277, 297, 697, 269, 689, 0, 0, 0,
	0, 0, 0, 0, 0, 675, 0, 728, 0, 0,
	0, 656, 649, 0, 0, 707, 0, 0, 0, 661,
	640, 676, 752, 0, 638, 187, 235, 144, 757, 774,
	1524, 199, 350, 778, 701, 700, 1519, 0, 1520, 189,
	209, 634, 128, 142, 1517, 1523, 246, 749, 291, 688,
	639, 761, 672, 684, 166, 680, 283, 254, 339, 0,
	725, 282, 212, 329, 745, 779, 338, 693, 800, 347,
	352, 0, 715, 659, 306, 176, 0, 133, 0, 268,
	171, 204, 703, 740, 673, 163, 747, 729, 767, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 699, 294, 293,
	694, 195, 755, 732, 645, 276, 743, 200, 132, 318,
	355, 149, 206, 323, 637, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 685, 744, 754,
	274, 296, 325, 151, 313, 681, 682, 687, 751, 285,
	762, 772, 785, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 646, 0, 311, 342, 357, 153, 668,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 666, 667, 664, 0, 665, 720, 721, 788, 789,
	790, 753, 658, 0, 769, 770, 0, 0, 0, 0,
	0, 759, 776, 777, 742, 798, 696, 663, 647, 650,
	651, 652, 660, 711, 712, 724, 727, 765, 764, 763,
	766, 771, 794, 793, 795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 131, 140, 210,
	799, 275, 182, 343, 642, 173, 0, 713, 716, 726,
	748, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 746, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 773,
	781, 758, 321, 706, 784, 670, 692, 797, 695, 698,
	739, 653, 719, 250, 690, 654, 0, 674, 643, 683,
	644, 671, 708, 175, 669, 760, 722, 783, 208, 735,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 782,
	714, 0, 791, 211, 0, 731, 792, 309, 234, 0,
	0, 710, 768, 717, 756, 705, 741, 662, 730, 786,
	691, 737, 787, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 734, 780,
	686, 736, 738, 641, 733, 0, 648, 655, 796, 775,
	677, 678, 679, 0, 0, 0, 0, 0, 0, 0,
	709, 718, 750, 702, 340, 261, 277, 297, 697, 269,
	689, 0, 0, 0, 0, 0, 0, 0, 0, 675,
	0, 728, 0, 0, 0, 656, 649, 0, 0, 707,
	0, 0, 0, 661, 640, 676, 752, 0, 638, 187,
	235, 144, 757, 774, 704, 199, 350, 778, 701, 700,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 749, 291, 688, 639, 761, 672, 684, 166, 680,
	283, 254, 339, 0, 725, 282, 212, 329, 745, 779,
	338, 693, 800, 347, 352, 0, 715, 659, 306, 176,
	0, 133, 0, 268, 171, 204, 703, 740, 673, 163,
	747, 729, 767, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 699, 294, 293, 694, 195, 755, 732, 645, 276,
	743, 200, 132, 318, 355, 149, 206, 323, 637, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 685, 744, 754, 274, 296, 325, 151, 313, 681,
	682, 687, 751, 285, 762, 772, 785, 134, 319, 337,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 646, 0, 311,
	342, 357, 153, 668, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 666, 667, 664, 0, 665,
	720, 721, 788, 789, 790, 753, 658, 0, 769, 770,
	0, 0, 0, 0, 0, 759, 776, 777, 742, 798,
	696, 663, 647, 650, 651, 652, 660, 711, 712, 724,
	727, 765, 764, 763, 766, 771, 794, 793, 795, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 131, 140, 210, 799, 275, 182, 343, 642, 173,
	0, 713, 716, 726, 748, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 746, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 773, 781, 758, 321, 706, 784, 670,
	692, 797, 695, 698, 739, 653, 719, 250, 690, 654,
	0, 674, 643, 683, 644, 671, 708, 175, 669, 760,
	722, 783, 208, 735, 0, 165, 216, 214, 0, 0,
	0, 257, 320, 782, 714, 0, 791, 211, 0, 731,
	792, 309, 234, 0, 0, 710, 768, 717, 756, 705,
	741, 662, 730, 786, 691, 737, 787, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 734, 780, 686, 736, 738, 641, 733, 0,
	648, 655, 796, 775, 677, 678, 679, 0, 0, 0,
	0, 0, 0, 0, 709, 718, 750, 702, 340, 261,
	277, 297, 697, 269, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 675, 0, 728, 0, 0, 0, 656,
	649, 0, 0, 707, 0, 0, 0, 661, 640, 676,
	752, 0, 638, 187, 235, 144, 757, 774, 704, 199,
	350, 778, 701, 700, 271, 0, 315, 189, 209, 634,
	128, 142, 630, 188, 246, 749, 291, 688, 639, 761,
	672, 684, 166, 680, 283, 254, 339, 0, 725, 282,
	212, 329, 745, 779, 338, 693, 800, 347, 352, 0,
	715, 659, 306, 176, 0, 133, 0, 268, 171, 204,
	703, 740, 673, 163, 747, 729, 767, 305, 327, 150,
	322, 233, 239, 160, 162, 161, 143, 300, 326, 155,
	164, 310, 287, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 699, 294, 293, 694, 195,
	755, 732, 645, 276, 743, 200, 132, 318, 355, 149,
	206, 323, 637, 183, 245, 168, 255, 256, 180, 130,
	273, 227, 228, 226, 229, 685, 744, 754, 274, 296,
	325, 151, 313, 681, 682, 687, 751, 285, 762, 772,
	785, 134, 319, 337, 156, 295, 298, 353, 281, 137,
	335, 314, 231, 201, 202, 135, 0, 136, 279, 174,
	186, 169, 249, 0, 185, 270, 332, 333, 167, 356,
	145, 346, 139, 146, 345, 242, 0, 241, 348, 328,
	336, 232, 220, 0, 138, 334, 230, 219, 207, 179,
	191, 266, 215, 267, 192, 237, 236, 238, 217, 221,
	0, 646, 0, 311, 342, 357, 153, 668, 299, 324,
	0, 0, 154, 184, 178, 265, 240, 147, 194, 308,
	205, 213, 278, 354, 253, 284, 157, 341, 307, 666,
	667, 664, 0, 665, 720, 721, 788, 789, 790, 753,
	658, 0, 769, 770, 0, 0, 0, 0, 0, 759,
	776, 777, 742, 798, 696, 663, 647, 650, 651, 652,
	660, 711, 712, 724, 727, 765, 764, 763, 766, 771,
	794, 793, 795, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 131, 140, 210, 799, 275,
	182, 343, 642, 173, 0, 713, 716, 726, 748, 129,
	141, 152, 158, 172, 177, 181, 190, 193, 196, 197,
	198, 203, 218, 222, 223, 224, 225, 243, 244, 247,
	248, 251, 252, 258, 259, 260, 262, 263, 264, 272,
	746, 280, 286, 288, 289, 290, 292, 301, 302, 303,
	304, 312, 317, 330, 331, 349, 351, 773, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 505, 0, 0, 0, 175,
	502, 0, 0, 0, 208, 0, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 0, 0, 0, 580, 211,
	0, 0, 482, 309, 234, 0, 0, 0, 0, 567,
	568, 0, 0, 0, 0, 0, 0, 1499, 0, 81,
	0, 0, 0, 503, 527, 526, 529, 530, 531, 532,
	0, 0, 486, 528, 533, 562, 563, 1500, 0, 0,
	500, 518, 0, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 261, 277, 297, 0, 269, 0, 0, 0, 0,
	0, 515, 516, 0, 0, 0, 0, 594, 0, 517,
	0, 0, 512, 513, 514, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 235, 144, 570, 0,
	0, 199, 350, 0, 0, 592, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 0, 291, 577,
	0, 0, 0, 0, 166, 0, 283, 254, 339, 569,
	0, 282, 212, 329, 0, 0, 338, 0, 476, 347,
	352, 0, 0, 0, 306, 176, 0, 133, 0, 268,
	171, 204, 0, 0, 0, 163, 0, 0, 0, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 294, 293,
	0, 195, 0, 0, 0, 276, 0, 200, 132, 318,
	355, 149, 206, 323, 0, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 0, 0, 0,
	274, 296, 325, 151, 313, 0, 0, 0, 0, 285,
	0, 0, 0, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 0, 0, 311, 342, 357, 153, 0,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 581, 593, 587, 589, 588, 585, 586, 584, 583,
	582, 595, 571, 572, 573, 574, 575, 0, 0, 0,
	578, 0, 590, 591, 0, 0, 0, 0, 534, 535,
	536, 537, 538, 542, 543, 547, 548, 556, 555, 554,
	557, 558, 560, 559, 561, 539, 540, 541, 544, 545,
	546, 549, 550, 553, 551, 552, 576, 131, 140, 210,
	0, 275, 182, 343, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 0, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 36,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 505, 0, 0,
	0, 175, 502, 0, 0, 0, 208, 0, 0, 165,
	216, 214, 0, 0, 0, 257, 320, 0, 0, 0,
	580, 211, 0, 0, 482, 309, 234, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 503, 527, 526, 529, 530,
	531, 532, 0, 0, 486, 528, 533, 562, 563, 0,
	0, 0, 500, 518, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 261, 277, 297, 0, 269, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 594,
	0, 517, 0, 0, 512, 513, 514, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 235, 144,
	570, 0, 0, 199, 350, 0, 0, 592, 271, 0,
	315, 189, 209, 148, 128, 142, 159, 188, 246, 0,
	291, 577, 0, 0, 0, 0, 166, 0, 283, 254,
	339, 569, 0, 282, 212, 329, 0, 0, 338, 0,
	476, 347, 352, 0, 0, 0, 306, 176, 0, 133,
	0, 268, 171, 204, 0, 0, 0, 163, 0, 0,
	0, 305, 327, 150, 322, 233, 239, 160, 162, 161,
	143, 300, 326, 155, 164, 310, 287, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	294, 293, 0, 195, 0, 0, 0, 276, 0, 200,
	132, 318, 355, 149, 206, 323, 0, 183, 245, 168,
	255, 256, 180, 130, 273, 227, 228, 226, 229, 0,
	0, 0, 274, 296, 325, 151, 313, 0, 0, 0,
	0, 285, 0, 0, 0, 134, 319, 337, 156, 295,
	298, 353, 281, 137, 335, 314, 231, 201, 202, 135,
	0, 136, 279, 174, 186, 169, 249, 0, 185, 270,
	332, 333, 167, 356, 145, 346, 139, 146, 345, 242,
	0, 241, 348, 328, 336, 232, 220, 0, 138, 334,
	230, 219, 207, 179, 191, 266, 215, 267, 192, 237,
	236, 238, 217, 221, 0, 0, 0, 311, 342, 357,
	153, 0, 299, 324, 0, 0, 154, 184, 178, 265,
	240, 147, 194, 308, 205, 213, 278, 354, 253, 284,
	157, 341, 307, 581, 593, 587, 589, 588, 585, 586,
	584, 583, 582, 595, 571, 572, 573, 574, 575, 0,
	0, 0, 578, 0, 590, 591, 0, 0, 0, 0,
	534, 535, 536, 537, 538, 542, 543, 547, 548, 556,
	555, 554, 557, 558, 560, 559, 561, 539, 540, 541,
	544, 545, 546, 549, 550, 553, 551, 552, 576, 131,
	140, 210, 79, 275, 182, 343, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 181,
	190, 193, 196, 197, 198, 203, 218, 222, 223, 224,
	225, 243, 244, 247, 248, 251, 252, 258, 259, 260,
	262, 263, 264, 272, 0, 280, 286, 288, 289, 290,
	292, 301, 302, 303, 304, 312, 317, 330, 331, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 505, 0,
	0, 0, 175, 502, 0, 0, 0, 208, 0, 0,
	165, 216, 214, 0, 0, 0, 257, 320, 0, 0,
	0, 580, 211, 0, 0, 482, 309, 234, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 503, 527, 526, 529,
	530, 531, 532, 0, 0, 486, 528, 533, 562, 563,
	0, 0, 0, 500, 518, 0, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 261, 277, 297, 0, 269, 0,
	0, 0, 0, 0, 515, 516, 496, 0, 0, 0,
	594, 0, 517, 0, 0, 512, 513, 514, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 235,
	144, 570, 0, 0, 199, 350, 0, 0, 592, 271,
	0, 315, 189, 209, 148, 128, 142, 159, 188, 246,
	0, 291, 577, 0, 0, 0, 0, 166, 0, 283,
	254, 339, 569, 0, 282, 212, 329, 0, 0, 338,
	0, 476, 347, 352, 0, 0, 0, 306, 176, 0,
	133, 0, 268, 171, 204, 0, 0, 0, 163, 0,
	0, 0, 305, 327, 150, 322, 233, 239, 160, 162,
	161, 143, 300, 326, 155, 164, 310, 287, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 294, 293, 0, 195, 0, 0, 0, 276, 0,
	200, 132, 318, 355, 149, 206, 323, 0, 183, 245,
	168, 255, 256, 180, 130, 273, 227, 228, 226, 229,
	0, 0, 0, 274, 296, 325, 151, 313, 0, 0,
	0, 0, 285, 0, 0, 0, 134, 319, 337, 156,
	295, 298, 353, 281, 137, 335, 314, 231, 201, 202,
	135, 0, 136, 279, 174, 186, 169, 249, 0, 185,
	270, 332, 333, 167, 356, 145, 346, 139, 146, 345,
	242, 0, 241, 348, 328, 336, 232, 220, 0, 138,
	334, 230, 219, 207, 179, 191, 266, 215, 267, 192,
	237, 236, 238, 217, 221, 0, 0, 0, 311, 342,
	357, 153, 0, 299, 324, 0, 0, 154, 184, 178,
	265, 240, 147, 194, 308, 205, 213, 278, 354, 253,
	284, 157, 341, 307, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 571, 572, 573, 574, 575,
	0, 0, 0, 578, 0, 590, 591, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 542, 543, 547, 548,
	556, 555, 554, 557, 558, 560, 559, 561, 539, 540,
	541, 544, 545, 546, 549, 550, 553, 551, 552, 576,
	131, 140, 210, 0, 275, 182, 343, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	181, 190, 193, 196, 197, 198, 203, 218, 222, 223,
	224, 225, 243, 244, 247, 248, 251, 252, 258, 259,
	260, 262, 263, 264, 272, 0, 280, 286, 288, 289,
	290, 292, 301, 302, 303, 304, 312, 317, 330, 331,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 175, 502, 0, 0, 0, 208, 0,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 0,
	0, 0, 580, 211, 0, 0, 482, 309, 234, 0,
	0, 0, 0, 567, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 961, 0, 503, 527, 526,
	529, 530, 531, 532, 0, 0, 486, 528, 533, 562,
	563, 0, 0, 0, 500, 518, 0, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 261, 277, 297, 0, 269,
	0, 0, 0, 0, 0, 515, 516, 0, 0, 0,
	0, 594, 0, 517, 0, 0, 512, 513, 514, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	235, 144, 570, 0, 0, 199, 350, 0, 0, 592,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 0, 291, 577, 0, 0, 0, 0, 166, 0,
	283, 254, 339, 569, 0, 282, 212, 329, 0, 0,
	338, 0, 476, 347, 352, 0, 0, 0, 306, 176,
	0, 133, 0, 268, 171, 204, 0, 0, 0, 163,
	0, 0, 0, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 294, 293, 0, 195, 0, 0, 0, 276,
	0, 200, 132, 318, 355, 149, 206, 323, 0, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 0, 0, 0, 274, 296, 325, 151, 313, 0,
	0, 0, 0, 285, 0, 0, 0, 134, 319, 337,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 0, 0, 311,
	342, 357, 153, 0, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 581, 593, 587, 589, 588,
	585, 586, 584, 583, 582, 595, 571, 572, 573, 574,
	575, 0, 0, 0, 578, 0, 590, 591, 0, 0,
	0, 0, 534, 535, 536, 537, 538, 542, 543, 547,
	548, 556, 555, 554, 557, 558, 560, 559, 561, 539,
	540, 541, 544, 545, 546, 549, 550, 553, 551, 552,
	576, 131, 140, 210, 0, 275, 182, 343, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 0, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	505, 0, 0, 0, 175, 502, 0, 0, 0, 208,
	0, 0, 165, 216, 214, 0, 0, 0, 257, 320,
	0, 0, 0, 580, 211, 0, 0, 482, 309, 234,
	0, 0, 0, 0, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 503, 527,
	526, 529, 530, 531, 532, 0, 0, 486, 528, 533,
	562, 563, 0, 0, 0, 500, 518, 0, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 261, 277, 297, 0,
	269, 0, 0, 0, 0, 0, 515, 516, 1387, 0,
	0, 0, 594, 0, 517, 0, 0, 512, 513, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 235, 144, 570, 0, 0, 199, 350, 0, 0,
	592, 271, 0, 315, 189, 209, 148, 128, 142, 159,
	188, 246, 0, 291, 577, 0, 0, 0, 0, 166,
	0, 283, 254, 339, 569, 0, 282, 212, 329, 0,
	0, 338, 0, 476, 347, 352, 0, 0, 0, 306,
	176, 0, 133, 0, 268, 171, 204, 0, 0, 0,
	163, 0, 0, 0, 305, 327, 150, 322, 233, 239,
	160, 162, 161, 143, 300, 326, 155, 164, 310, 287,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 294, 293, 0, 195, 0, 0, 0,
	276, 0, 200, 132, 318, 355, 149, 206, 323, 0,
	183, 245, 168, 255, 256, 180, 130, 273, 227, 228,
	226, 229, 0, 0, 0, 274, 296, 325, 151, 313,
	0, 0, 0, 0, 285, 0, 0, 0, 134, 319,
	337, 156, 295, 298, 353, 281, 137, 335, 314, 231,
	201, 202, 135, 0, 136, 279, 174, 186, 169, 249,
	0, 185, 270, 332, 333, 167, 356, 145, 346, 139,
	146, 345, 242, 0, 241, 348, 328, 336, 232, 220,
	0, 138, 334, 230, 219, 207, 179, 191, 266, 215,
	267, 192, 237, 236, 238, 217, 221, 0, 0, 0,
	311, 342, 357, 153, 0, 299, 324, 0, 0, 154,
	184, 178, 265, 240, 147, 194, 308, 205, 213, 278,
	354, 253, 284, 157, 341, 307, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 571, 572, 573,
	574, 575, 0, 0, 0, 578, 0, 590, 591, 0,
	0, 0, 0, 534, 535, 536, 537, 538, 542, 543,
	547, 548, 556, 555, 554, 557, 558, 560, 559, 561,
	539, 540, 541, 544, 545, 546, 549, 550, 553, 551,
	552, 576, 131, 140, 210, 0, 275, 182, 343, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 181, 190, 193, 196, 197, 198, 203, 218,
	222, 223, 224, 225, 243, 244, 247, 248, 251, 252,
	258, 259, 260, 262, 263, 264, 272, 0, 280, 286,
	288, 289, 290, 292, 301, 302, 303, 304, 312, 317,
	330, 331, 349, 351, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 505, 0, 0, 0, 175, 502, 0, 0, 0,
	208, 0, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 0, 0, 0, 580, 211, 0, 0, 482, 309,
	234, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 503,
	527, 1431, 529, 530, 531, 532, 0, 0, 486, 528,
	533, 562, 563, 0, 0, 0, 500, 518, 0, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 261, 277, 297,
	0, 269, 0, 0, 0, 0, 0, 515, 516, 1387,
	0, 0, 0, 594, 0, 517, 0, 0, 512, 513,
	514, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 235, 144, 570, 0, 0, 199, 350, 0,
	0, 592, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 0, 291, 577, 0, 0, 0, 0,
	166, 0, 283, 254, 339, 569, 0, 282, 212, 329,
	0, 0, 338, 0, 476, 347, 352, 0, 0, 0,
	306, 176, 0, 133, 0, 268, 171, 204, 0, 0,
	0, 163, 0, 0, 0, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 294, 293, 0, 195, 0, 0,
	0, 276, 0, 200, 132, 318, 355, 149, 206, 323,
	0, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 0, 0, 0, 274, 296, 325, 151,
	313, 0, 0, 0, 0, 285, 0, 0, 0, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 0,
	0, 311, 342, 357, 153, 0, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 581, 593, 587,
	589, 588, 585, 586, 584, 583, 582, 595, 571, 572,
	573, 574, 575, 0, 0, 0, 578, 0, 590, 591,
	0, 0, 0, 0, 534, 535, 536, 537, 538, 542,
	543, 547, 548, 556, 555, 554, 557, 558, 560, 559,
	561, 539, 540, 541, 544, 545, 546, 549, 550, 553,
	551, 552, 576, 131, 140, 210, 0, 275, 182, 343,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 0, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 175, 502, 0, 0,
	0, 208, 0, 0, 165, 216, 214, 0, 0, 0,
	257, 320, 0, 0, 0, 580, 211, 0, 0, 482,
	309, 234, 0, 0, 0, 0, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	503, 527, 1428, 529, 530, 531, 532, 0, 0, 486,
	528, 533, 562, 563, 0, 0, 0, 500, 518, 0,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 261, 277,
	297, 0, 269, 0, 0, 0, 0, 0, 515, 516,
	1387, 0, 0, 0, 594, 0, 517, 0, 0, 512,
	513, 514, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 235, 144, 570, 0, 0, 199, 350,
	0, 0, 592, 271, 0, 315, 189, 209, 148, 128,
	142, 159, 188, 246, 0, 291, 577, 0, 0, 0,
	0, 166, 0, 283, 254, 339, 569, 0, 282, 212,
	329, 0, 0, 338, 0, 476, 347, 352, 0, 0,
	0, 306, 176, 0, 133, 0, 268, 171, 204, 0,
	0, 0, 163, 0, 0, 0, 305, 327, 150, 322,
	233, 239, 160, 162, 161, 143, 300, 326, 155, 164,
	310, 287, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 294, 293, 0, 195, 0,
	0, 0, 276, 0, 200, 132, 318, 355, 149, 206,
	323, 0, 183, 245, 168, 255, 256, 180, 130, 273,
	227, 228, 226, 229, 0, 0, 0, 274, 296, 325,
	151, 313, 0, 0, 0, 0, 285, 0, 0, 0,
	134, 319, 337, 156, 295, 298, 353, 281, 137, 335,
	314, 231, 201, 202, 135, 0, 136, 279, 174, 186,
	169, 249, 0, 185, 270, 332, 333, 167, 356, 145,
	346, 139, 146, 345, 242, 0, 241, 348, 328, 336,
	232, 220, 0, 138, 334, 230, 219, 207, 179, 191,
	266, 215, 267, 192, 237, 236, 238, 217, 221, 0,
	0, 0, 311, 342, 357, 153, 0, 299, 324, 0,
	0, 154, 184, 178, 265, 240, 147, 194, 308, 205,
	213, 278, 354, 253, 284, 157, 341, 307, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 571,
	572, 573, 574, 575, 0, 0, 0, 578, 0, 590,
	591, 0, 0, 0, 0, 534, 535, 536, 537, 538,
	542, 543, 547, 548, 556, 555, 554, 557, 558, 560,
	559, 561, 539, 540, 541, 544, 545, 546, 549, 550,
	553, 551, 552, 576, 131, 140, 210, 0, 275, 182,
	343, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 181, 190, 193, 196, 197, 198,
	203, 218, 222, 223, 224, 225, 243, 244, 247, 248,
	251, 252, 258, 259, 260, 262, 263, 264, 272, 0,
	280, 286, 288, 289, 290, 292, 301, 302, 303, 304,
	312, 317, 330, 331, 349, 351, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 505, 0, 0, 0, 175, 502, 0,
	0, 0, 208, 0, 0, 165, 216, 214, 0, 0,
	0, 257, 320, 0, 0, 0, 580, 211, 0, 0,
	482, 309, 234, 0, 0, 0, 0, 567, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 1274,
	0, 503, 527, 526, 529, 530, 531, 532, 0, 0,
	486, 528, 533, 562, 563, 0, 0, 0, 500, 518,
	0, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 261,
	277, 297, 0, 269, 0, 0, 0, 0, 0, 515,
	516, 0, 0, 0, 0, 594, 0, 517, 0, 0,
	512, 513, 514, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 235, 144, 570, 0, 0, 199,
	350, 0, 0, 592, 271, 0, 315, 189, 209, 148,
	128, 142, 159, 188, 246, 0, 291, 577, 0, 0,
	0, 0, 166, 0, 283, 254, 339, 569, 0, 282,
	212, 329, 0, 0, 338, 0, 476, 347, 352, 0,
	0, 0, 306, 176, 0, 133, 0, 268, 171, 204,
	0, 0, 0, 163, 0, 0, 0, 305, 327, 150,
	322, 233, 239, 160, 162, 161, 143, 300, 326, 155,
	164, 310, 287, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 294, 293, 0, 195,
	0, 0, 0, 276, 0, 200, 132, 318, 355, 149,
	206, 323, 0, 183, 245, 168, 255, 256, 180, 130,
	273, 227, 228, 226, 229, 0, 0, 0, 274, 296,
	325, 151, 313, 0, 0, 0, 0, 285, 0, 0,
	0, 134, 319, 337, 156, 295, 298, 353, 281, 137,
	335, 314, 231, 201, 202, 135, 0, 136, 279, 174,
	186, 169, 249, 0, 185, 270, 332, 333, 167, 356,
	145, 346, 139, 146, 345, 242, 0, 241, 348, 328,
	336, 232, 220, 0, 138, 334, 230, 219, 207, 179,
	191, 266, 215, 267, 192, 237, 236, 238, 217, 221,
	0, 0, 0, 311, 342, 357, 153, 0, 299, 324,
	0, 0, 154, 184, 178, 265, 240, 147, 194, 308,
	205, 213, 278, 354, 253, 284, 157, 341, 307, 581,
	593, 587, 589, 588, 585, 586, 584, 583, 582, 595,
	571, 572, 573, 574, 575, 0, 0, 0, 578, 0,
	590, 591, 0, 0, 0, 0, 534, 535, 536, 537,
	538, 542, 543, 547, 548, 556, 555, 554, 557, 558,
	560, 559, 561, 539, 540, 541, 544, 545, 546, 549,
	550, 553, 551, 552, 576, 131, 140, 210, 0, 275,
	182, 343, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 181, 190, 193, 196, 197,
	198, 203, 218, 222, 223, 224, 225, 243, 244, 247,
	248, 251, 252, 258, 259, 260, 262, 263, 264, 272,
	0, 280, 286, 288, 289, 290, 292, 301, 302, 303,
	304, 312, 317, 330, 331, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 505, 0, 0, 0, 175, 502,
	0, 0, 0, 208, 0, 0, 165, 216, 214, 0,
	0, 0, 257, 320, 0, 0, 0, 580, 211, 0,
	0, 482, 309, 234, 0, 0, 0, 0, 567, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 503, 527, 526, 529, 530, 531, 532, 0,
	0, 486, 528, 533, 562, 563, 0, 0, 0, 500,
	518, 0, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	261, 277, 297, 0, 269, 0, 0, 0, 0, 0,
	515, 516, 0, 0, 0, 0, 594, 0, 517, 0,
	0, 512, 513, 514, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 235, 144, 570, 0, 0,
	199, 350, 0, 0, 592, 271, 0, 315, 189, 209,
	148, 128, 142, 159, 188, 246, 0, 291, 577, 0,
	0, 0, 0, 166, 0, 283, 254, 339, 569, 0,
	282, 212, 329, 0, 0, 338, 0, 476, 347, 352,
	0, 0, 0, 306, 176, 0, 133, 0, 268, 171,
	204, 0, 0, 0, 163, 0, 0, 0, 305, 327,
	150, 322, 233, 239, 160, 162, 161, 143, 300, 326,
	155, 164, 310, 287, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 294, 293, 0,
	195, 0, 0, 0, 276, 0, 200, 132, 318, 355,
	149, 206, 323, 0, 183, 245, 168, 255, 256, 180,
	130, 273, 227, 228, 226, 229, 0, 0, 0, 274,
	296, 325, 151, 313, 0, 0, 0, 0, 285, 0,
	0, 0, 134, 319, 337, 156, 295, 298, 353, 281,
	137, 335, 314, 231, 201, 202, 135, 0, 136, 279,
	174, 186, 169, 249, 0, 185, 270, 332, 333, 167,
	356, 145, 346, 139, 146, 345, 242, 0, 241, 348,
	328, 336, 232, 220, 0, 138, 334, 230, 219, 207,
	179, 191, 266, 215, 267, 192, 237, 236, 238, 217,
	221, 0, 0, 0, 311, 342, 357, 153, 0, 299,
	324, 0, 0, 154, 184, 178, 265, 240, 147, 194,
	308, 205, 213, 278, 354, 253, 284, 157, 341, 307,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 571, 572, 573, 574, 575, 0, 0, 0, 578,
	0, 590, 591, 0, 0, 0, 0, 534, 535, 536,
	537, 538, 542, 543, 547, 548, 556, 555, 554, 557,
	558, 560, 559, 561, 539, 540, 541, 544, 545, 546,
	549, 550, 553, 551, 552, 576, 131, 140, 210, 0,
	275, 182, 343, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 181, 190, 193, 196,
	197, 198, 203, 218, 222, 223, 224, 225, 243, 244,
	247, 248, 251, 252, 258, 259, 260, 262, 263, 264,
	272, 0, 280, 286, 288, 289, 290, 292, 301, 302,
	303, 304, 312, 317, 330, 331, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 208, 0, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 0, 0, 0, 580, 211,
	0, 0, 482, 309, 234, 0, 0, 0, 0, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 503, 527, 526, 529, 530, 531, 532,
	0, 0, 486, 528, 533, 562, 563, 0, 0, 0,
	0, 518, 0, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 261, 277, 297, 0, 269, 0, 0, 0, 0,
	0, 515, 516, 0, 0, 0, 0, 594, 0, 517,
	0, 0, 512, 513, 514, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 235, 144, 570, 0,
	0, 199, 350, 0, 0, 592, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 0, 291, 577,
	0, 0, 0, 0, 166, 0, 283, 254, 339, 569,
	0, 282, 212, 329, 0, 0, 338, 0, 476, 347,
	352, 0, 0, 0, 306, 176, 0, 133, 0, 268,
	171, 204, 0, 0, 0, 163, 0, 0, 0, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 294, 293,
	0, 195, 0, 0, 0, 276, 0, 200, 132, 318,
	355, 149, 206, 323, 0, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 0, 0, 0,
	274, 296, 325, 151, 313, 0, 0, 0, 0, 285,
	0, 0, 0, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 0, 0, 311, 342, 357, 153, 0,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 581, 593, 587, 589, 588, 585, 586, 584, 583,
	582, 595, 571, 572, 573, 574, 575, 1434, 1435, 1436,
	578, 0, 590, 591, 0, 0, 0, 0, 534, 535,
	536, 537, 538, 542, 543, 547, 548, 556, 555, 554,
	557, 558, 560, 559, 561, 539, 540, 541, 544, 545,
	546, 549, 550, 553, 551, 552, 576, 131, 140, 210,
	0, 275, 182, 343, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 0, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 208, 0, 0, 165, 216,
	214, 0, 0, 0, 257, 320, 0, 0, 0, 580,
	211, 0, 0, 482, 309, 234, 0, 0, 0, 0,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 503, 527, 526, 529, 530, 531,
	532, 0, 0, 486, 528, 533, 562, 563, 0, 0,
	0, 0, 518, 0, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 261, 277, 297, 0, 269, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 594, 0,
	517, 0, 0, 512, 513, 514, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 235, 144, 570,
	0, 0, 199, 350, 0, 0, 592, 271, 0, 315,
	189, 209, 148, 128, 142, 159, 188, 246, 0, 291,
	577, 0, 0, 0, 0, 166, 0, 283, 254, 339,
	569, 2724, 282, 212, 329, 0, 0, 338, 0, 476,
	347, 352, 0, 0, 0, 306, 176, 0, 133, 0,
	268, 171, 204, 0, 0, 0, 163, 0, 0, 0,
	305, 327, 150, 322, 233, 239, 160, 162, 161, 143,
	300, 326, 155, 164, 310, 287, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 294,
	293, 0, 195, 0, 0, 0, 276, 0, 200, 132,
	318, 355, 149, 206, 323, 0, 183, 245, 168, 255,
	256, 180, 130, 273, 227, 228, 226, 229, 0, 0,
	0, 274, 296, 325, 151, 313, 0, 0, 0, 0,
	285, 0, 0, 0, 134, 319, 337, 156, 295, 298,
	353, 281, 137, 335, 314, 231, 201, 202, 135, 0,
	136, 279, 174, 186, 169, 249, 0, 185, 270, 332,
	333, 167, 356, 145, 346, 139, 146, 345, 242, 0,
	241, 348, 328, 336, 232, 220, 0, 138, 334, 230,
	219, 207, 179, 191, 266, 215, 267, 192, 237, 236,
	238, 217, 221, 0, 0, 0, 311, 342, 357, 153,
	0, 299, 324, 0, 0, 154, 184, 178, 265, 240,
	147, 194, 308, 205, 213, 278, 354, 253, 284, 157,
	341, 307, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 571, 572, 573, 574, 575, 0, 0,
	0, 578, 0, 590, 591, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 542, 543, 547, 548, 556, 555,
	554, 557, 558, 560, 559, 561, 539, 540, 541, 544,
	545, 546, 549, 550, 553, 551, 552, 576, 131, 140,
	210, 0, 275, 182, 343, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 181, 190,
	193, 196, 197, 198, 203, 218, 222, 223, 224, 225,
	243, 244, 247, 248, 251, 252, 258, 259, 260, 262,
	263, 264, 272, 0, 280, 286, 288, 289, 290, 292,
	301, 302, 303, 304, 312, 317, 330, 331, 349, 351,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 208, 0, 0, 165,
	216, 214, 0, 0, 0, 257, 320, 0, 0, 0,
	580, 211, 0, 0, 482, 309, 234, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 961, 0, 503, 527, 526, 529, 530,
	531, 532, 0, 0, 486, 528, 533, 562, 563, 0,
	0, 0, 0, 518, 0, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 261, 277, 297, 0, 269, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 594,
	0, 517, 0, 0, 512, 513, 514, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 235, 144,
	570, 0, 0, 199, 350, 0, 0, 592, 271, 0,
	315, 189, 209, 148, 128, 142, 159, 188, 246, 0,
	291, 577, 0, 0, 0, 0, 166, 0, 283, 254,
	339, 569, 0, 282, 212, 329, 0, 0, 338, 0,
	476, 347, 352, 0, 0, 0, 306, 176, 0, 133,
	0, 268, 171, 204, 0, 0, 0, 163, 0, 0,
	0, 305, 327, 150, 322, 233, 239, 160, 162, 161,
	143, 300, 326, 155, 164, 310, 287, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	294, 293, 0, 195, 0, 0, 0, 276, 0, 200,
	132, 318, 355, 149, 206, 323, 0, 183, 245, 168,
	255, 256, 180, 130, 273, 227, 228, 226, 229, 0,
	0, 0, 274, 296, 325, 151, 313, 0, 0, 0,
	0, 285, 0, 0, 0, 134, 319, 337, 156, 295,
	298, 353, 281, 137, 335, 314, 231, 201, 202, 135,
	0, 136, 279, 174, 186, 169, 249, 0, 185, 270,
	332, 333, 167, 356, 145, 346, 139, 146, 345, 242,
	0, 241, 348, 328, 336, 232, 220, 0, 138, 334,
	230, 219, 207, 179, 191, 266, 215, 267, 192, 237,
	236, 238, 217, 221, 0, 0, 0, 311, 342, 357,
	153, 0, 299, 324, 0, 0, 154, 184, 178, 265,
	240, 147, 194, 308, 205, 213, 278, 354, 253, 284,
	157, 341, 307, 581, 593, 587, 589, 588, 585, 586,
	584, 583, 582, 595, 571, 572, 573, 574, 575, 0,
	0, 0, 578, 0, 590, 591, 0, 0, 0, 0,
	534, 535, 536, 537, 538, 542, 543, 547, 548, 556,
	555, 554, 557, 558, 560, 559, 561, 539, 540, 541,
	544, 545, 546, 549, 550, 553, 551, 552, 576, 131,
	140, 210, 0, 275, 182, 343, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 181,
	190, 193, 196, 197, 198, 203, 218, 222, 223, 224,
	225, 243, 244, 247, 248, 251, 252, 258, 259, 260,
	262, 263, 264, 272, 0, 280, 286, 288, 289, 290,
	292, 301, 302, 303, 304, 312, 317, 330, 331, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 208, 0, 0,
	165, 216, 214, 0, 0, 0, 257, 320, 0, 0,
	0, 580, 211, 0, 0, 482, 309, 234, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 503, 527, 526, 529,
	530, 531, 532, 0, 0, 486, 528, 533, 562, 563,
	0, 0, 0, 0, 518, 0, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 261, 277, 297, 0, 269, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	594, 0, 517, 0, 0, 512, 513, 514, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 235,
	144, 570, 0, 0, 199, 350, 0, 0, 592, 271,
	0, 315, 189, 209, 148, 128, 142, 159, 188, 246,
	0, 291, 577, 0, 0, 0, 0, 166, 0, 283,
	254, 339, 569, 0, 282, 212, 329, 0, 0, 338,
	0, 476, 347, 352, 0, 0, 0, 306, 176, 0,
	133, 0, 268, 171, 204, 0, 0, 0, 163, 0,
	0, 0, 305, 327, 150, 322, 233, 239, 160, 162,
	161, 143, 300, 326, 155, 164, 310, 287, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 294, 293, 0, 195, 0, 0, 0, 276, 0,
	200, 132, 318, 355, 149, 206, 323, 0, 183, 245,
	168, 255, 256, 180, 130, 273, 227, 228, 226, 229,
	0, 0, 0, 274, 296, 325, 151, 313, 0, 0,
	0, 0, 285, 0, 0, 0, 134, 319, 337, 156,
	295, 298, 353, 281, 137, 335, 314, 231, 201, 202,
	135, 0, 136, 279, 174, 186, 169, 249, 0, 185,
	270, 332, 333, 167, 356, 145, 346, 139, 146, 345,
	242, 0, 241, 348, 328, 336, 232, 220, 0, 138,
	334, 230, 219, 207, 179, 191, 266, 215, 267, 192,
	237, 236, 238, 217, 221, 0, 0, 0, 311, 342,
	357, 153, 0, 299, 324, 0, 0, 154, 184, 178,
	265, 240, 147, 194, 308, 205, 213, 278, 354, 253,
	284, 157, 341, 307, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 571, 572, 573, 574, 575,
	0, 0, 0, 578, 0, 590, 591, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 542, 543, 547, 548,
	556, 555, 554, 557, 558, 560, 559, 561, 539, 540,
	541, 544, 545, 546, 549, 550, 553, 551, 552, 576,
	131, 140, 210, 0, 275, 182, 343, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	181, 190, 193, 196, 197, 198, 203, 218, 222, 223,
	224, 225, 243, 244, 247, 248, 251, 252, 258, 259,
	260, 262, 263, 264, 272, 0, 280, 286, 288, 289,
	290, 292, 301, 302, 303, 304, 312, 317, 330, 331,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 1477, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 208, 0,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 0,
	0, 0, 0, 211, 0, 0, 482, 309, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1479,
	1481, 0, 0, 0, 0, 0, 0, 126, 0, 455,
	0, 0, 0, 0, 0, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 261, 277, 297, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	235, 144, 0, 0, 0, 199, 350, 0, 1480, 0,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 0, 291, 0, 0, 0, 0, 0, 166, 0,
	283, 254, 339, 0, 0, 282, 212, 329, 0, 0,
	338, 0, 476, 347, 352, 0, 0, 0, 306, 176,
	0, 133, 0, 268, 171, 204, 0, 0, 0, 163,
	0, 0, 0, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 294, 293, 0, 195, 0, 0, 0, 276,
	0, 200, 132, 318, 355, 149, 206, 323, 0, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 0, 0, 0, 274, 296, 325, 151, 313, 0,
	0, 0, 0, 285, 0, 0, 0, 134, 319, 337,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 0, 0, 311,
	342, 357, 153, 0, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 456, 457, 458, 459, 460, 464, 465, 469,
	470, 479, 478, 477, 480, 481, 484, 483, 485, 461,
	462, 463, 466, 467, 468, 471, 472, 475, 473, 474,
	0, 131, 140, 210, 0, 275, 182, 343, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 0, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 208,
	0, 0, 165, 216, 214, 0, 0, 0, 257, 320,
	0, 0, 0, 0, 211, 0, 0, 482, 309, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1479, 1481, 0, 0, 0, 0, 0, 0, 126, 0,
	455, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 1475, 277, 297, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 235, 144, 0, 0, 0, 199, 350, 0, 1480,
	0, 271, 0, 315, 189, 209, 148, 128, 142, 159,
	188, 246, 0, 291, 0, 0, 0, 0, 0, 166,
	0, 283, 254, 339, 0, 0, 282, 212, 329, 0,
	0, 338, 0, 476, 347, 352, 0, 0, 0, 306,
	176, 0, 133, 0, 268, 171, 204, 0, 0, 0,
	163, 0, 0, 0, 305, 327, 150, 322, 233, 239,
	160, 162, 161, 143, 300, 326, 155, 164, 310, 287,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 294, 293, 0, 195, 0, 0, 0,
	276, 0, 200, 132, 318, 355, 149, 206, 323, 0,
	183, 245, 168, 255, 256, 180, 130, 273, 227, 228,
	226, 229, 0, 0, 0, 274, 296, 325, 151, 313,
	0, 0, 0, 0, 285, 0, 0, 0, 134, 319,
	337, 156, 295, 298, 353, 281, 137, 335, 314, 231,
	201, 202, 135, 0, 136, 279, 174, 186, 169, 249,
	0, 185, 270, 332, 333, 167, 356, 145, 346, 139,
	146, 345, 242, 0, 241, 348, 328, 336, 232, 220,
	0, 138, 334, 230, 219, 207, 179, 191, 266, 215,
	267, 192, 237, 236, 238, 217, 221, 0, 0, 0,
	311, 342, 357, 153, 0, 299, 324, 0, 0, 154,
	184, 178, 265, 240, 147, 194, 308, 205, 213, 278,
	354, 253, 284, 157, 341, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 464, 465,
	469, 470, 479, 478, 477, 480, 481, 484, 483, 485,
	461, 462, 463, 466, 467, 468, 471, 472, 475, 473,
	474, 0, 131, 140, 210, 0, 275, 182, 343, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 181, 190, 193, 196, 197, 198, 203, 218,
	222, 223, 224, 225, 243, 244, 247, 248, 251, 252,
	258, 259, 260, 262, 263, 264, 272, 0, 280, 286,
	288, 289, 290, 292, 301, 302, 303, 304, 312, 317,
	330, 331, 349, 351, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	983, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	208, 0, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 0, 0, 0, 0, 211, 0, 0, 482, 309,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	0, 987, 0, 0, 0, 0, 0, 0, 486, 0,
	0, 0, 0, 0, 980, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 981, 0, 0, 0, 340, 261, 277, 297,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 235, 144, 0, 0, 0, 199, 350, 0,
	0, 0, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 0, 291, 0, 0, 0, 0, 0,
	166, 0, 283, 254, 339, 0, 0, 282, 212, 329,
	0, 0, 338, 0, 476, 347, 352, 0, 0, 0,
	306, 176, 0, 133, 0, 268, 171, 204, 0, 0,
	0, 163, 0, 0, 0, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 294, 293, 0, 195, 0, 0,
	0, 276, 0, 200, 132, 318, 355, 149, 206, 323,
	0, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 0, 0, 0, 274, 296, 325, 151,
	313, 0, 0, 0, 0, 285, 0, 0, 0, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 0,
	0, 311, 342, 357, 153, 0, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 456, 457, 458, 459, 460, 464,
	465, 469, 470, 479, 478, 477, 480, 481, 484, 483,
	485, 461, 462, 463, 466, 467, 468, 471, 472, 475,
	473, 474, 0, 131, 140, 210, 0, 275, 182, 343,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 0, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 208, 0, 0, 165, 216, 214, 0, 0, 0,
	257, 320, 0, 0, 0, 0, 211, 0, 0, 482,
	309, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 455, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 261, 277,
	297, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 235, 144, 0, 0, 0, 199, 350,
	0, 0, 0, 271, 0, 315, 189, 209, 148, 128,
	142, 159, 188, 246, 0, 291, 0, 0, 0, 0,
	0, 166, 0, 283, 254, 339, 0, 0, 282, 212,
	329, 0, 0, 338, 0, 476, 347, 352, 0, 0,
	0, 306, 176, 0, 133, 0, 268, 171, 204, 0,
	0, 0, 163, 0, 0, 0, 305, 327, 150, 322,
	233, 239, 160, 162, 161, 143, 300, 326, 155, 164,
	310, 287, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 294, 293, 0, 195, 0,
	0, 0, 276, 0, 200, 132, 318, 355, 149, 206,
	323, 0, 183, 245, 168, 255, 256, 180, 130, 273,
	227, 228, 226, 229, 0, 0, 0, 274, 296, 325,
	151, 313, 0, 0, 0, 0, 285, 0, 0, 0,
	134, 319, 337, 156, 295, 298, 353, 281, 137, 335,
	314, 231, 201, 202, 135, 0, 136, 279, 174, 186,
	169, 249, 0, 185, 270, 332, 333, 167, 356, 145,
	346, 139, 146, 345, 242, 0, 241, 348, 328, 336,
	232, 220, 0, 138, 334, 230, 219, 207, 179, 191,
	266, 215, 267, 192, 237, 236, 238, 217, 221, 0,
	0, 0, 311, 342, 357, 153, 0, 299, 324, 0,
	0, 154, 184, 178, 265, 240, 147, 194, 308, 205,
	213, 278, 354, 253, 284, 157, 341, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 457, 458, 459, 460,
	464, 465, 469, 470, 479, 478, 477, 480, 481, 484,
	483, 485, 461, 462, 463, 466, 467, 468, 471, 472,
	475, 473, 474, 0, 131, 140, 210, 0, 275, 182,
	343, 0, 173, 0, 0, 0, 0, 450, 129, 141,
	152, 158, 172, 177, 181, 190, 193, 196, 197, 198,
	203, 218, 222, 223, 224, 225, 243, 244, 247, 248,
	251, 252, 258, 259, 260, 262, 263, 264, 272, 0,
	280, 286, 288, 289, 290, 292, 301, 302, 303, 304,
	312, 317, 330, 331, 349, 351, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 208, 1772, 0, 165, 216, 214, 0, 0,
	0, 257, 320, 0, 0, 0, 0, 211, 0, 0,
	482, 309, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 455, 0, 0, 0, 0, 0, 0,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 261,
	277, 297, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 235, 144, 0, 0, 0, 199,
	350, 0, 0, 0, 271, 0, 315, 189, 209, 148,
	128, 142, 159, 188, 246, 0, 291, 0, 0, 0,
	0, 0, 166, 0, 283, 254, 339, 0, 0, 282,
	212, 329, 0, 0, 338, 0, 476, 347, 352, 0,
	0, 0, 306, 176, 0, 133, 0, 268, 171, 204,
	0, 0, 0, 163, 0, 0, 0, 305, 327, 150,
	322, 233, 239, 160, 162, 161, 143, 300, 326, 155,
	164, 310, 287, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 294, 293, 0, 195,
	0, 0, 0, 276, 0, 200, 132, 318, 355, 149,
	206, 323, 0, 183, 245, 168, 255, 256, 180, 130,
	273, 227, 228, 226, 229, 0, 0, 0, 274, 296,
	325, 151, 313, 0, 0, 0, 0, 285, 0, 0,
	0, 134, 319, 337, 156, 295, 298, 353, 281, 137,
	335, 314, 231, 201, 202, 135, 0, 136, 279, 174,
	186, 169, 249, 0, 185, 270, 332, 333, 167, 356,
	145, 346, 139, 146, 345, 242, 0, 241, 348, 328,
	336, 232, 220, 0, 138, 334, 230, 219, 207, 179,
	191, 266, 215, 267, 192, 237, 236, 238, 217, 221,
	0, 0, 0, 311, 342, 357, 153, 0, 299, 324,
	0, 0, 154, 184, 178, 265, 240, 147, 194, 308,
	205, 213, 278, 354, 253, 284, 157, 341, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 456, 457, 458, 459,
	460, 464, 465, 469, 470, 479, 478, 477, 480, 481,
	484, 483, 485, 461, 462, 463, 466, 467, 468, 471,
	472, 475, 473, 474, 0, 131, 140, 210, 0, 275,
	182, 343, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 181, 190, 193, 196, 197,
	198, 203, 218, 222, 223, 224, 225, 243, 244, 247,
	248, 251, 252, 258, 259, 260, 262, 263, 264, 272,
	0, 280, 286, 288, 289, 290, 292, 301, 302, 303,
	304, 312, 317, 330, 331, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 208, 0, 0, 165, 216, 214, 0,
	0, 0, 257, 320, 0, 0, 0, 0, 211, 0,
	0, 482, 309, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 455, 0, 0, 0, 0, 0,
	0, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	261, 277, 297, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 235, 144, 0, 0, 0,
	199, 350, 0, 0, 0, 271, 0, 315, 189, 209,
	148, 128, 142, 159, 188, 246, 0, 291, 0, 0,
	0, 0, 0, 166, 0, 283, 254, 339, 0, 0,
	282, 212, 329, 0, 0, 338, 0, 476, 347, 352,
	0, 0, 0, 306, 176, 0, 133, 0, 268, 171,
	204, 0, 0, 0, 163, 0, 0, 0, 305, 327,
	150, 322, 233, 239, 160, 162, 161, 143, 300, 326,
	155, 164, 310, 287, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 294, 293, 0,
	195, 0, 0, 0, 276, 0, 200, 132, 318, 355,
	149, 206, 323, 0, 183, 245, 168, 255, 256, 180,
	130, 273, 227, 228, 226, 229, 0, 0, 0, 274,
	296, 325, 151, 313, 0, 0, 0, 0, 285, 0,
	0, 0, 134, 319, 337, 156, 295, 298, 353, 281,
	137, 335, 314, 231, 201, 202, 135, 0, 136, 279,
	174, 186, 169, 249, 0, 185, 270, 332, 333, 167,
	356, 145, 346, 139, 146, 345, 242, 0, 241, 348,
	328, 336, 232, 220, 0, 138, 334, 230, 219, 207,
	179, 191, 266, 215, 267, 192, 237, 236, 238, 217,
	221, 0, 0, 0, 311, 342, 357, 153, 0, 299,
	324, 0, 0, 154, 184, 178, 265, 240, 147, 194,
	308, 205, 213, 278, 354, 253, 284, 157, 341, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 457, 458,
	459, 460, 464, 465, 469, 470, 479, 478, 477, 480,
	481, 484, 483, 485, 461, 462, 463, 466, 467, 468,
	471, 472, 475, 473, 474, 0, 131, 140, 210, 0,
	275, 182, 343, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 181, 190, 193, 196,
	197, 198, 203, 218, 222, 223, 224, 225, 243, 244,
	247, 248, 251, 252, 258, 259, 260, 262, 263, 264,
	272, 0, 280, 286, 288, 289, 290, 292, 301, 302,
	303, 304, 312, 317, 330, 331, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 208, 0, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 0, 0, 0, 0, 211,
	0, 0, 482, 309, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 987, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 261, 277, 297, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 235, 144, 0, 0,
	0, 199, 350, 0, 0, 0, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 0, 291, 0,
	0, 0, 0, 0, 166, 0, 283, 254, 339, 0,
	0, 282, 212, 329, 0, 0, 338, 0, 476, 347,
	352, 0, 0, 0, 306, 176, 0, 133, 0, 268,
	171, 204, 0, 0, 0, 163, 0, 0, 0, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 294, 293,
	0, 195, 0, 0, 0, 276, 0, 200, 132, 318,
	355, 149, 206, 323, 0, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 0, 0, 0,
	274, 296, 325, 151, 313, 0, 0, 0, 0, 285,
	0, 0, 0, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 0, 0, 311, 342, 357, 153, 0,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 457,
	458, 459, 460, 464, 465, 469, 470, 479, 478, 477,
	480, 481, 484, 483, 485, 461, 462, 463, 466, 467,
	468, 471, 472, 475, 473, 474, 0, 131, 140, 210,
	0, 275, 182, 343, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 0, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 208, 0, 0, 165, 216,
	214, 0, 0, 0, 257, 320, 0, 0, 0, 0,
	211, 0, 0, 482, 309, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 261, 277, 297, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 235, 144, 0,
	0, 0, 199, 350, 0, 0, 0, 271, 0, 315,
	189, 209, 148, 128, 142, 159, 188, 246, 0, 291,
	0, 0, 0, 0, 0, 166, 0, 283, 254, 339,
	0, 0, 282, 212, 329, 0, 0, 338, 0, 476,
	347, 352, 0, 0, 0, 306, 176, 0, 133, 0,
	268, 171, 204, 0, 0, 0, 163, 0, 0, 0,
	305, 327, 150, 322, 233, 239, 160, 162, 161, 143,
	300, 326, 155, 164, 310, 287, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 294,
	293, 0, 195, 0, 0, 0, 276, 0, 200, 132,
	318, 355, 149, 206, 323, 0, 183, 245, 168, 255,
	256, 180, 130, 273, 227, 228, 226, 229, 0, 0,
	0, 274, 296, 325, 151, 313, 0, 0, 0, 0,
	285, 0, 0, 0, 134, 319, 337, 156, 295, 298,
	353, 281, 137, 335, 314, 231, 201, 202, 135, 0,
	136, 279, 174, 186, 169, 249, 0, 185, 270, 332,
	333, 167, 356, 145, 346, 139, 146, 345, 242, 0,
	241, 348, 328, 336, 232, 220, 0, 138, 334, 230,
	219, 207, 179, 191, 266, 215, 267, 192, 237, 236,
	238, 217, 221, 0, 0, 0, 311, 342, 357, 153,
	0, 299, 324, 0, 0, 154, 184, 178, 265, 240,
	147, 194, 308, 205, 213, 278, 354, 253, 284, 157,
	341, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 464, 465, 469, 470, 479, 478,
	477, 480, 481, 484, 483, 485, 461, 462, 463, 466,
	467, 468, 471, 472, 475, 473, 474, 0, 131, 140,
	210, 0, 275, 182, 343, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 181, 190,
	193, 196, 197, 198, 203, 218, 222, 223, 224, 225,
	243, 244, 247, 248, 251, 252, 258, 259, 260, 262,
	263, 264, 272, 0, 280, 286, 288, 289, 290, 292,
	301, 302, 303, 304, 312, 317, 330, 331, 349, 351,
	427, 321, 421, 432, 415, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 422, 0, 208, 0, 0,
	165, 216, 214, 0, 0, 0, 257, 320, 0, 0,
	0, 0, 211, 0, 0, 0, 309, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 261, 277, 297, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 413, 416, 0, 0, 0, 187, 235,
	144, 0, 0, 420, 199, 350, 0, 0, 0, 271,
	0, 315, 189, 209, 148, 128, 142, 159, 188, 246,
	424, 291, 0, 0, 428, 0, 0, 166, 0, 283,
	254, 339, 0, 0, 282, 212, 329, 0, 431, 338,
	0, 0, 347, 352, 0, 0, 0, 306, 176, 0,
	133, 0, 268, 171, 204, 0, 0, 0, 163, 0,
	0, 0, 305, 327, 150, 322, 233, 239, 160, 162,
	161, 143, 300, 326, 155, 164, 310, 287, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 294, 293, 0, 195, 0, 0, 0, 276, 0,
	200, 132, 318, 355, 149, 206, 323, 0, 183, 245,
	168, 255, 256, 180, 130, 273, 227, 228, 226, 229,
	0, 0, 0, 441, 296, 325, 151, 313, 417, 418,
	419, 425, 426, 429, 430, 433, 134, 319, 337, 156,
	295, 298, 353, 281, 137, 335, 314, 231, 201, 202,
	135, 0, 136, 279, 174, 186, 169, 249, 0, 185,
	270, 332, 333, 167, 356, 145, 346, 139, 146, 345,
	242, 0, 241, 348, 328, 336, 232, 220, 0, 138,
	334, 230, 219, 207, 179, 191, 266, 215, 267, 192,
	237, 236, 238, 217, 221, 0, 0, 0, 311, 342,
	357, 153, 0, 299, 324, 0, 0, 154, 184, 178,
	265, 240, 147, 194, 308, 205, 213, 278, 354, 253,
	284, 157, 341, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 210, 0, 275, 182, 343, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	181, 190, 193, 196, 197, 198, 203, 218, 222, 223,
	224, 225, 243, 244, 247, 248, 251, 252, 258, 259,
	260, 262, 263, 264, 272, 423, 280, 286, 288, 289,
	290, 292, 301, 302, 303, 304, 312, 317, 330, 331,
	349, 351, 427, 321, 421, 432, 415, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 407, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 422, 0, 208,
	0, 0, 165, 216, 214, 0, 0, 0, 257, 320,
	0, 0, 0, 0, 211, 0, 0, 0, 309, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 436, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 261, 277, 297, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 413, 416, 0, 0, 0,
	187, 235, 144, 0, 0, 420, 199, 350, 0, 0,
	0, 271, 0, 315, 189, 209, 148, 128, 142, 159,
	188, 246, 424, 291, 0, 0, 428, 0, 0, 166,
	0, 283, 254, 339, 0, 0, 282, 212, 329, 0,
	431, 338, 0, 0, 347, 352, 0, 0, 0, 306,
	176, 0, 133, 0, 268, 171, 204, 0, 0, 0,
	163, 0, 0, 0, 305, 327, 150, 322, 233, 239,
	160, 162, 161, 143, 300, 326, 155, 164, 310, 287,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 294, 293, 0, 195, 0, 0, 0,
	276, 0, 200, 132, 318, 355, 149, 206, 323, 0,
	183, 245, 168, 255, 256, 180, 130, 273, 227, 228,
	226, 229, 0, 0, 0, 410, 296, 325, 151, 313,
	417, 418, 419, 425, 426, 429, 430, 433, 134, 319,
	337, 156, 295, 298, 353, 281, 137, 335, 314, 231,
	201, 202, 135, 0, 136, 279, 174, 186, 169, 249,
	0, 185, 270, 332, 333, 167, 356, 145, 346, 139,
	146, 345, 242, 0, 241, 348, 328, 336, 232, 220,
	0, 138, 334, 230, 219, 207, 179, 191, 266, 215,
	267, 192, 237, 236, 238, 217, 221, 0, 0, 0,
	311, 342, 357, 153, 0, 299, 324, 0, 0, 154,
	184, 178, 265, 240, 147, 194, 308, 205, 213, 278,
	354, 253, 284, 157, 341, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 210, 0, 275, 182, 343, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 181, 190, 193, 196, 197, 198, 203, 218,
	222, 223, 224, 225, 243, 244, 247, 248, 251, 252,
	258, 259, 260, 262, 263, 264, 272, 423, 280, 286,
	288, 289, 290, 292, 301, 302, 303, 304, 312, 317,
	330, 331, 349, 351, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	208, 0, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 0, 0, 0, 0, 211, 0, 0, 0, 309,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 261, 277, 297,
	0, 269, 0, 997, 996, 1006, 1007, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 998, 0, 0, 1008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 235, 144, 0, 0, 0, 199, 350, 0,
	0, 0, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 0, 291, 0, 0, 0, 0, 0,
	166, 0, 283, 254, 339, 0, 0, 282, 212, 329,
	0, 0, 338, 0, 0, 347, 352, 0, 0, 0,
	306, 176, 0, 133, 0, 268, 171, 204, 0, 0,
	0, 163, 0, 0, 0, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 294, 293, 0, 195, 0, 0,
	0, 276, 0, 200, 132, 318, 355, 149, 206, 323,
	0, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 0, 0, 0, 274, 296, 325, 151,
	313, 0, 0, 0, 0, 285, 0, 0, 0, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 0,
	0, 311, 342, 357, 153, 0, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 210, 0, 275, 182, 343,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 0, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 2649,
	0, 0, 0, 0, 0, 0, 175, 2647, 0, 0,
	0, 208, 0, 0, 165, 216, 214, 0, 0, 0,
	257, 320, 0, 0, 0, 0, 211, 0, 0, 0,
	309, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 261, 277,
	297, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 235, 144, 0, 0, 0, 199, 350,
	0, 0, 0, 271, 0, 315, 189, 209, 148, 128,
	142, 159, 188, 246, 0, 291, 0, 0, 0, 0,
	0, 166, 0, 283, 254, 339, 0, 0, 282, 212,
	329, 0, 0, 338, 0, 0, 347, 352, 0, 0,
	0, 306, 176, 0, 133, 0, 268, 171, 204, 0,
	0, 0, 163, 0, 0, 0, 305, 327, 150, 322,
	233, 239, 160, 162, 161, 143, 300, 326, 155, 164,
	310, 287, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 294, 293, 0, 195, 0,
	2648, 0, 276, 0, 200, 132, 318, 355, 149, 206,
	323, 0, 183, 245, 168, 255, 256, 180, 130, 273,
	227, 228, 226, 229, 0, 0, 0, 274, 296, 325,
	151, 313, 0, 0, 0, 0, 285, 0, 0, 0,
	134, 319, 337, 156, 295, 298, 353, 281, 137, 335,
	314, 231, 201, 202, 135, 0, 136, 279, 174, 186,
	169, 249, 0, 185, 270, 332, 333, 167, 356, 145,
	346, 139, 146, 345, 242, 0, 241, 348, 328, 336,
	232, 220, 0, 138, 334, 230, 219, 207, 179, 191,
	266, 215, 267, 192, 237, 236, 238, 217, 221, 0,
	0, 0, 311, 342, 357, 153, 0, 299, 324, 0,
	0, 154, 184, 178, 265, 240, 147, 194, 308, 205,
	213, 278, 354, 253, 284, 157, 341, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 210, 0, 275, 182,
	343, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 181, 190, 193, 196, 197, 198,
	203, 218, 222, 223, 224, 225, 243, 244, 247, 248,
	251, 252, 258, 259, 260, 262, 263, 264, 272, 0,
	280, 286, 288, 289, 290, 292, 301, 302, 303, 304,
	312, 317, 330, 331, 349, 351, 36, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 208, 0, 0, 165, 216, 214, 0,
	0, 0, 257, 320, 0, 0, 0, 1472, 211, 0,
	0, 0, 309, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	261, 277, 297, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 235, 144, 0, 0, 0,
	199, 350, 0, 0, 0, 271, 0, 315, 189, 209,
	148, 128, 142, 159, 188, 246, 0, 291, 0, 0,
	0, 0, 0, 166, 0, 283, 254, 339, 0, 0,
	282, 212, 329, 0, 0, 338, 0, 0, 347, 352,
	0, 0, 0, 306, 176, 0, 133, 0, 268, 171,
	204, 0, 0, 0, 163, 0, 0, 0, 305, 327,
	150, 322, 233, 239, 160, 162, 161, 143, 300, 326,
	155, 164, 310, 287, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 294, 293, 0,
	195, 0, 0, 0, 276, 0, 200, 132, 318, 355,
	149, 206, 323, 0, 183, 245, 168, 255, 256, 180,
	130, 273, 227, 228, 226, 229, 0, 0, 0, 274,
	296, 325, 151, 313, 0, 0, 0, 0, 285, 0,
	0, 0, 134, 319, 337, 156, 295, 298, 353, 281,
	137, 335, 314, 231, 201, 202, 135, 0, 136, 279,
	174, 186, 169, 249, 0, 185, 270, 332, 333, 167,
	356, 145, 346, 139, 146, 345, 242, 0, 241, 348,
	328, 336, 232, 220, 0, 138, 334, 230, 219, 207,
	179, 191, 266, 215, 267, 192, 237, 236, 238, 217,
	221, 0, 0, 0, 311, 342, 357, 153, 0, 299,
	324, 0, 0, 154, 184, 178, 265, 240, 147, 194,
	308, 205, 213, 278, 354, 253, 284, 157, 341, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 210, 79,
	275, 182, 343, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 181, 190, 193, 196,
	197, 198, 203, 218, 222, 223, 224, 225, 243, 244,
	247, 248, 251, 252, 258, 259, 260, 262, 263, 264,
	272, 0, 280, 286, 288, 289, 290, 292, 301, 302,
	303, 304, 312, 317, 330, 331, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 208, 0, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 0, 0, 0, 0, 211,
	0, 0, 0, 309, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 261, 277, 297, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 235, 144, 0, 0,
	0, 199, 350, 0, 0, 0, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 0, 291, 0,
	0, 0, 0, 0, 166, 0, 283, 254, 339, 0,
	0, 282, 212, 329, 0, 0, 338, 0, 0, 347,
	352, 0, 0, 0, 306, 176, 0, 133, 0, 268,
	171, 204, 0, 0, 0, 163, 0, 0, 0, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 294, 293,
	0, 195, 0, 0, 0, 276, 0, 200, 132, 318,
	355, 149, 206, 323, 0, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 0, 0, 0,
	274, 296, 325, 151, 313, 0, 0, 0, 0, 285,
	0, 0, 0, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 0, 0, 311, 342, 357, 153, 0,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 0, 0, 0, 1261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 210,
	0, 275, 182, 343, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 0, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 1133, 0, 0, 0, 208, 0, 0, 165, 216,
	214, 0, 0, 0, 257, 320, 0, 0, 0, 0,
	211, 0, 0, 0, 309, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 261, 277, 297, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 235, 144, 0,
	0, 0, 199, 350, 0, 0, 0, 271, 0, 315,
	189, 209, 148, 128, 142, 159, 188, 246, 0, 291,
	0, 0, 0, 0, 0, 166, 0, 283, 254, 339,
	0, 0, 282, 212, 329, 0, 0, 338, 0, 0,
	347, 352, 0, 0, 0, 306, 176, 0, 133, 0,
	268, 171, 204, 0, 0, 0, 163, 0, 0, 0,
	305, 327, 150, 322, 233, 239, 160, 162, 161, 143,
	300, 326, 155, 164, 310, 287, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 294,
	293, 0, 195, 0, 0, 0, 276, 0, 200, 132,
	318, 355, 149, 206, 323, 0, 183, 245, 168, 255,
	256, 180, 130, 273, 227, 228, 226, 229, 0, 0,
	0, 274, 296, 325, 151, 313, 0, 0, 0, 0,
	285, 0, 0, 0, 134, 319, 337, 156, 295, 298,
	353, 281, 137, 335, 314, 231, 201, 202, 135, 0,
	136, 279, 174, 186, 169, 249, 0, 185, 270, 332,
	333, 167, 356, 145, 346, 139, 146, 345, 242, 0,
	241, 348, 328, 336, 232, 220, 0, 138, 334, 230,
	219, 207, 179, 191, 266, 215, 267, 192, 237, 236,
	238, 217, 221, 0, 0, 0, 311, 342, 357, 153,
	0, 299, 324, 0, 0, 154, 184, 178, 265, 240,
	147, 194, 308, 205, 213, 278, 354, 253, 284, 157,
	341, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	210, 0, 275, 182, 343, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 181, 190,
	193, 196, 197, 198, 203, 218, 222, 223, 224, 225,
	243, 244, 247, 248, 251, 252, 258, 259, 260, 262,
	263, 264, 272, 0, 280, 286, 288, 289, 290, 292,
	301, 302, 303, 304, 312, 317, 330, 331, 349, 351,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 208, 0, 0, 165,
	216, 214, 0, 0, 0, 257, 320, 0, 0, 0,
	0, 211, 0, 0, 0, 309, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 261, 277, 297, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 235, 144,
	0, 0, 0, 199, 350, 0, 0, 0, 271, 0,
	315, 189, 209, 148, 128, 142, 159, 188, 246, 0,
	291, 0, 0, 0, 0, 0, 166, 0, 283, 254,
	339, 0, 0, 282, 212, 329, 0, 0, 338, 0,
	0, 347, 352, 0, 0, 0, 306, 176, 0, 133,
	0, 268, 171, 204, 0, 0, 0, 163, 0, 0,
	0, 305, 327, 150, 322, 233, 239, 160, 162, 161,
	143, 300, 326, 155, 164, 310, 287, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	294, 293, 0, 195, 0, 0, 0, 276, 0, 200,
	132, 318, 355, 149, 206, 323, 0, 183, 245, 168,
	255, 256, 180, 130, 273, 227, 228, 226, 229, 0,
	0, 0, 274, 296, 325, 151, 313, 0, 0, 0,
	0, 285, 0, 0, 0, 134, 319, 337, 156, 295,
	298, 353, 281, 137, 335, 314, 231, 201, 202, 135,
	0, 136, 279, 174, 186, 169, 249, 0, 185, 270,
	332, 333, 167, 356, 145, 346, 139, 146, 345, 242,
	0, 241, 348, 328, 336, 232, 220, 0, 138, 334,
	230, 219, 207, 179, 191, 266, 215, 267, 192, 237,
	236, 238, 217, 221, 0, 0, 0, 311, 342, 357,
	153, 0, 299, 324, 0, 0, 154, 184, 178, 265,
	240, 147, 194, 308, 205, 213, 278, 354, 253, 284,
	157, 341, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 210, 0, 275, 182, 343, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 181,
	190, 193, 196, 197, 198, 203, 218, 222, 223, 224,
	225, 243, 244, 247, 248, 251, 252, 258, 259, 260,
	262, 263, 264, 272, 0, 280, 286, 288, 289, 290,
	292, 301, 302, 303, 304, 312, 317, 330, 331, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 208, 0, 0,
	165, 216, 214, 0, 0, 0, 257, 320, 0, 0,
	0, 0, 211, 0, 0, 0, 309, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 261, 277, 297, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 235,
	144, 0, 0, 0, 199, 350, 0, 0, 0, 271,
	0, 315, 189, 209, 148, 128, 142, 159, 188, 246,
	0, 291, 0, 0, 0, 0, 0, 166, 0, 283,
	254, 339, 0, 0, 282, 212, 329, 0, 0, 338,
	0, 0, 347, 352, 0, 0, 0, 306, 176, 0,
	133, 0, 268, 171, 204, 0, 0, 0, 163, 0,
	0, 0, 305, 327, 150, 322, 233, 239, 160, 162,
	161, 143, 300, 326, 155, 164, 310, 287, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 294, 293, 0, 195, 0, 0, 0, 276, 0,
	200, 132, 318, 355, 149, 206, 323, 0, 183, 245,
	168, 255, 256, 180, 130, 273, 227, 228, 226, 229,
	0, 0, 0, 274, 296, 325, 151, 313, 0, 0,
	0, 0, 285, 0, 0, 0, 134, 319, 337, 156,
	295, 298, 353, 281, 137, 335, 314, 231, 201, 202,
	135, 0, 136, 279, 174, 186, 169, 249, 0, 185,
	270, 332, 333, 167, 356, 145, 346, 139, 146, 345,
	242, 0, 241, 348, 328, 336, 232, 220, 0, 138,
	334, 230, 219, 207, 179, 191, 266, 215, 267, 192,
	237, 236, 238, 217, 221, 0, 0, 0, 311, 342,
	357, 153, 0, 299, 324, 0, 0, 154, 184, 178,
	265, 240, 147, 194, 308, 205, 213, 278, 354, 253,
	284, 157, 341, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 210, 0, 275, 182, 343, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	181, 190, 193, 196, 197, 198, 203, 218, 222, 223,
	224, 225, 243, 244, 247, 248, 251, 252, 258, 259,
	260, 262, 263, 264, 272, 0, 280, 286, 288, 289,
	290, 292, 301, 302, 303, 304, 312, 317, 330, 331,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 208, 0,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 0,
	0, 0, 0, 211, 0, 0, 0, 309, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 261, 277, 297, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 2114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	235, 144, 0, 0, 0, 199, 350, 0, 0, 0,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 0, 291, 0, 0, 0, 0, 0, 166, 0,
	283, 254, 339, 0, 0, 282, 212, 329, 0, 0,
	338, 0, 0, 347, 352, 0, 0, 0, 306, 176,
	0, 133, 0, 268, 171, 204, 0, 0, 0, 163,
	0, 0, 0, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 294, 293, 0, 195, 0, 0, 0, 276,
	0, 200, 132, 318, 355, 149, 206, 323, 0, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 0, 0, 0, 274, 296, 325, 151, 313, 0,
	0, 0, 0, 285, 0, 0, 0, 134, 319, 337,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 0, 0, 311,
	342, 357, 153, 0, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 210, 0, 275, 182, 343, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 0, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 208,
	0, 0, 165, 216, 214, 0, 0, 0, 257, 320,
	0, 0, 0, 0, 211, 0, 0, 0, 309, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 261, 277, 297, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 235, 144, 0, 0, 0, 199, 350, 0, 0,
	0, 271, 0, 315, 189, 209, 148, 128, 142, 159,
	188, 246, 0, 291, 0, 0, 0, 0, 0, 166,
	0, 283, 254, 339, 0, 0, 282, 212, 329, 0,
	0, 338, 0, 0, 347, 352, 0, 0, 0, 306,
	176, 0, 133, 0, 268, 171, 204, 0, 0, 0,
	163, 0, 0, 0, 305, 327, 150, 322, 233, 239,
	160, 162, 161, 143, 300, 326, 155, 164, 310, 287,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 294, 293, 0, 195, 0, 0, 0,
	276, 0, 200, 132, 318, 355, 149, 206, 323, 0,
	183, 245, 168, 255, 256, 180, 130, 273, 227, 228,
	226, 229, 0, 0, 0, 274, 296, 325, 151, 313,
	0, 0, 0, 0, 285, 0, 0, 0, 134, 319,
	337, 156, 295, 298, 353, 281, 137, 335, 314, 231,
	201, 202, 135, 0, 136, 279, 174, 186, 169, 249,
	0, 185, 270, 332, 333, 167, 356, 145, 346, 139,
	146, 345, 242, 0, 241, 348, 328, 336, 232, 220,
	0, 138, 334, 230, 219, 207, 179, 191, 266, 215,
	267, 192, 237, 236, 238, 217, 221, 0, 0, 0,
	311, 342, 357, 153, 0, 299, 324, 0, 0, 154,
	184, 178, 265, 240, 147, 194, 308, 205, 213, 278,
	354, 253, 284, 157, 341, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 210, 0, 275, 182, 343, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 181, 190, 193, 196, 197, 198, 203, 218,
	222, 223, 224, 225, 243, 244, 247, 248, 251, 252,
	258, 259, 260, 262, 263, 264, 272, 0, 280, 286,
	288, 289, 290, 292, 301, 302, 303, 304, 312, 317,
	330, 331, 349, 351, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	208, 0, 0, 165, 216, 214, 0, 0, 0, 257,
	320, 0, 0, 0, 0, 211, 0, 0, 0, 309,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 261, 277, 297,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 235, 144, 0, 0, 0, 199, 350, 0,
	0, 0, 271, 0, 315, 189, 209, 148, 128, 142,
	159, 188, 246, 0, 291, 0, 0, 0, 0, 0,
	166, 0, 283, 254, 339, 0, 0, 282, 212, 329,
	0, 0, 338, 0, 0, 347, 352, 0, 0, 0,
	306, 176, 0, 133, 0, 268, 171, 204, 0, 0,
	0, 163, 0, 0, 0, 305, 327, 150, 322, 233,
	239, 160, 162, 161, 143, 300, 326, 155, 164, 310,
	287, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 294, 293, 0, 195, 0, 0,
	0, 276, 0, 200, 132, 318, 355, 149, 206, 323,
	0, 183, 245, 168, 255, 256, 180, 130, 273, 227,
	228, 226, 229, 0, 0, 0, 274, 296, 325, 151,
	313, 0, 0, 0, 0, 285, 0, 0, 0, 134,
	319, 337, 156, 295, 298, 353, 281, 137, 335, 314,
	231, 201, 202, 135, 0, 136, 279, 174, 186, 169,
	249, 0, 185, 270, 332, 333, 167, 356, 145, 346,
	139, 146, 345, 242, 0, 241, 348, 328, 336, 232,
	220, 0, 138, 334, 230, 219, 207, 179, 191, 266,
	215, 267, 192, 237, 236, 238, 217, 221, 0, 0,
	0, 311, 342, 357, 153, 0, 299, 324, 0, 0,
	154, 184, 178, 265, 240, 147, 194, 308, 205, 213,
	278, 354, 253, 284, 157, 341, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 210, 0, 275, 182, 343,
	0, 173, 0, 0, 0, 0, 0, 129, 141, 152,
	158, 172, 177, 181, 190, 193, 196, 197, 198, 203,
	218, 222, 223, 224, 225, 243, 244, 247, 248, 251,
	252, 258, 259, 260, 262, 263, 264, 272, 0, 280,
	286, 288, 289, 290, 292, 301, 302, 303, 304, 312,
	317, 330, 331, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 175, 0, 0, 0,
	0, 208, 0, 0, 165, 216, 214, 0, 0, 0,
	257, 320, 0, 0, 0, 0, 211, 0, 0, 0,
	309, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 261, 277,
	297, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 235, 144, 0, 0, 0, 199, 350,
	0, 0, 0, 271, 0, 315, 189, 209, 148, 128,
	142, 159, 188, 246, 0, 291, 0, 0, 0, 0,
	0, 166, 0, 283, 254, 339, 0, 0, 282, 212,
	329, 0, 0, 338, 0, 0, 347, 352, 0, 0,
	0, 306, 176, 0, 133, 0, 268, 171, 204, 0,
	0, 0, 163, 0, 0, 0, 305, 327, 150, 322,
	233, 239, 160, 162, 161, 143, 300, 326, 155, 164,
	310, 287, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 294, 293, 0, 195, 0,
	0, 0, 276, 0, 200, 132, 318, 355, 149, 206,
	323, 0, 183, 245, 168, 255, 256, 180, 130, 273,
	227, 228, 226, 229, 0, 0, 0, 274, 296, 325,
	151, 313, 0, 0, 0, 0, 285, 0, 0, 0,
	134, 319, 337, 156, 295, 298, 353, 281, 137, 335,
	314, 231, 201, 202, 135, 0, 136, 279, 174, 186,
	169, 249, 0, 185, 270, 332, 333, 167, 356, 145,
	346, 139, 146, 345, 242, 0, 241, 348, 328, 336,
	232, 220, 0, 138, 334, 230, 219, 207, 179, 191,
	266, 215, 267, 192, 237, 236, 238, 217, 221, 0,
	0, 0, 311, 342, 357, 153, 0, 299, 324, 0,
	0, 154, 184, 178, 265, 240, 147, 194, 308, 205,
	213, 278, 354, 253, 284, 157, 341, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 210, 0, 275, 182,
	343, 0, 173, 0, 0, 0, 0, 0, 129, 141,
	152, 158, 172, 177, 181, 190, 193, 196, 197, 198,
	203, 218, 222, 223, 224, 225, 243, 244, 247, 248,
	251, 252, 258, 259, 260, 262, 263, 264, 272, 0,
	280, 286, 288, 289, 290, 292, 301, 302, 303, 304,
	312, 317, 330, 331, 349, 351, 321, 0, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 208, 0, 0, 165, 216, 214, 0, 0,
	0, 257, 320, 0, 0, 0, 0, 211, 0, 0,
	0, 309, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 261,
	277, 297, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 235, 144, 0, 0, 0, 199,
	350, 0, 0, 0, 271, 0, 315, 189, 209, 148,
	128, 142, 159, 188, 246, 0, 291, 0, 0, 0,
	0, 0, 166, 0, 283, 254, 339, 0, 0, 282,
	212, 329, 0, 0, 338, 0, 0, 347, 352, 0,
	0, 0, 306, 176, 0, 133, 0, 268, 171, 204,
	0, 0, 0, 163, 0, 0, 0, 305, 327, 150,
	322, 233, 239, 160, 162, 161, 143, 300, 326, 155,
	164, 310, 287, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 294, 293, 0, 195,
	0, 0, 0, 276, 0, 200, 132, 318, 355, 149,
	206, 323, 0, 183, 245, 168, 255, 256, 180, 130,
	273, 227, 228, 226, 229, 0, 0, 0, 274, 296,
	325, 151, 313, 0, 0, 0, 0, 285, 0, 0,
	0, 134, 319, 337, 156, 295, 298, 353, 281, 137,
	335, 314, 231, 201, 202, 135, 0, 136, 279, 174,
	186, 169, 249, 0, 185, 270, 332, 333, 167, 356,
	145, 346, 139, 146, 345, 242, 0, 241, 348, 328,
	336, 232, 220, 0, 138, 334, 230, 219, 207, 179,
	191, 266, 215, 267, 192, 237, 236, 238, 217, 221,
	0, 0, 0, 311, 342, 357, 153, 0, 299, 324,
	0, 0, 154, 184, 178, 265, 240, 147, 194, 308,
	205, 213, 278, 354, 253, 284, 157, 341, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 210, 0, 275,
	182, 343, 0, 173, 0, 0, 0, 0, 0, 129,
	141, 152, 158, 172, 177, 181, 190, 193, 196, 197,
	198, 203, 218, 222, 223, 224, 225, 243, 244, 247,
	248, 251, 252, 258, 259, 260, 262, 263, 264, 272,
	0, 280, 286, 288, 289, 290, 292, 301, 302, 303,
	304, 312, 317, 330, 331, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 208, 0, 0, 165, 216, 214, 0,
	0, 0, 257, 320, 0, 0, 0, 0, 211, 0,
	0, 0, 309, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	261, 277, 297, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 235, 144, 0, 123, 0,
	199, 350, 0, 0, 0, 271, 0, 315, 189, 209,
	148, 128, 142, 159, 188, 246, 0, 291, 0, 0,
	0, 0, 0, 166, 0, 283, 254, 339, 0, 0,
	282, 212, 329, 0, 0, 338, 0, 0, 347, 352,
	0, 0, 0, 306, 176, 0, 133, 0, 268, 171,
	204, 0, 0, 0, 163, 0, 0, 0, 305, 327,
	150, 322, 233, 239, 160, 162, 161, 143, 300, 326,
	155, 164, 310, 287, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 294, 293, 0,
	195, 0, 0, 0, 276, 0, 200, 132, 318, 355,
	149, 206, 323, 0, 183, 245, 168, 255, 256, 180,
	130, 273, 227, 228, 226, 229, 0, 0, 0, 274,
	296, 325, 151, 313, 0, 0, 0, 0, 285, 0,
	0, 0, 134, 319, 337, 156, 295, 298, 353, 281,
	137, 335, 314, 231, 201, 202, 135, 0, 136, 279,
	174, 186, 169, 249, 0, 185, 270, 332, 333, 167,
	356, 145, 346, 139, 146, 345, 242, 0, 241, 348,
	328, 336, 232, 220, 0, 138, 334, 230, 219, 207,
	179, 191, 266, 215, 267, 192, 237, 236, 238, 217,
	221, 0, 0, 0, 311, 342, 357, 153, 0, 299,
	324, 0, 0, 154, 184, 178, 265, 240, 147, 194,
	308, 205, 213, 278, 354, 253, 284, 157, 341, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 210, 0,
	275, 182, 343, 0, 173, 0, 0, 0, 0, 0,
	129, 141, 152, 158, 172, 177, 181, 190, 193, 196,
	197, 198, 203, 218, 222, 223, 224, 225, 243, 244,
	247, 248, 251, 252, 258, 259, 260, 262, 263, 264,
	272, 0, 280, 286, 288, 289, 290, 292, 301, 302,
	303, 304, 312, 317, 330, 331, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 208, 0, 0, 165, 216, 214,
	0, 0, 0, 257, 320, 0, 0, 0, 0, 211,
	0, 0, 0, 309, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 261, 277, 297, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 235, 144, 0, 0,
	0, 199, 350, 0, 0, 0, 271, 0, 315, 189,
	209, 148, 128, 142, 159, 188, 246, 0, 291, 0,
	0, 0, 0, 0, 166, 0, 283, 254, 339, 0,
	0, 282, 212, 329, 0, 0, 338, 0, 0, 347,
	352, 0, 0, 0, 306, 176, 0, 133, 0, 268,
	171, 204, 0, 0, 0, 163, 0, 0, 0, 305,
	327, 150, 322, 233, 239, 160, 162, 161, 143, 300,
	326, 155, 164, 310, 287, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 294, 293,
	0, 195, 0, 0, 0, 276, 0, 200, 132, 318,
	355, 149, 206, 323, 0, 183, 245, 168, 255, 256,
	180, 130, 273, 227, 228, 226, 229, 0, 0, 0,
	274, 296, 325, 151, 313, 0, 0, 0, 0, 285,
	0, 0, 0, 134, 319, 337, 156, 295, 298, 353,
	281, 137, 335, 314, 231, 201, 202, 135, 0, 136,
	279, 174, 186, 169, 249, 0, 185, 270, 332, 333,
	167, 356, 145, 346, 139, 146, 345, 242, 0, 241,
	348, 328, 336, 232, 220, 0, 138, 334, 230, 219,
	207, 179, 191, 266, 215, 267, 192, 237, 236, 238,
	217, 221, 0, 0, 0, 311, 342, 357, 153, 0,
	299, 324, 0, 0, 154, 184, 178, 265, 240, 147,
	194, 308, 205, 213, 278, 354, 253, 284, 157, 341,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 210,
	0, 275, 182, 343, 0, 173, 0, 0, 0, 0,
	0, 129, 141, 152, 158, 172, 177, 181, 190, 193,
	196, 197, 198, 203, 218, 222, 223, 224, 225, 243,
	244, 247, 248, 251, 252, 258, 259, 260, 262, 263,
	264, 272, 0, 280, 286, 288, 289, 290, 292, 301,
	302, 303, 304, 312, 317, 330, 331, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 208, 0, 0, 165, 216,
	214, 0, 0, 0, 257, 320, 0, 0, 0, 0,
	211, 0, 0, 0, 309, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 261, 277, 297, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 235, 144, 0,
	0, 0, 199, 350, 0, 0, 0, 271, 0, 315,
	189, 209, 148, 128, 142, 159, 188, 246, 0, 291,
	0, 0, 0, 0, 0, 166, 0, 283, 254, 339,
	0, 0, 282, 212, 329, 0, 0, 338, 0, 0,
	347, 352, 0, 0, 0, 306, 176, 0, 133, 0,
	268, 171, 204, 0, 0, 0, 163, 0, 0, 0,
	305, 327, 150, 322, 233, 239, 160, 162, 161, 143,
	300, 326, 155, 164, 310, 287, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 294,
	293, 0, 195, 0, 0, 0, 276, 0, 200, 132,
	318, 355, 149, 206, 323, 0, 183, 245, 168, 255,
	256, 180, 130, 273, 227, 228, 226, 229, 0, 0,
	0, 274, 296, 325, 151, 313, 0, 0, 0, 0,
	285, 0, 0, 0, 134, 319, 337, 156, 295, 298,
	353, 281, 137, 335, 314, 231, 201, 202, 135, 0,
	136, 279, 174, 186, 169, 249, 0, 185, 270, 332,
	333, 167, 356, 145, 346, 139, 146, 345, 242, 0,
	241, 348, 328, 336, 232, 220, 0, 138, 334, 230,
	219, 207, 179, 191, 266, 215, 267, 192, 237, 236,
	238, 217, 221, 0, 0, 0, 311, 342, 357, 153,
	0, 299, 324, 0, 0, 154, 184, 178, 265, 240,
	147, 194, 308, 205, 213, 278, 354, 253, 284, 157,
	341, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	210, 0, 275, 182, 343, 0, 173, 0, 0, 0,
	0, 0, 129, 141, 152, 158, 172, 177, 181, 190,
	193, 196, 197, 198, 203, 218, 222, 223, 224, 225,
	243, 244, 247, 248, 251, 252, 258, 259, 260, 262,
	263, 264, 272, 0, 280, 286, 288, 289, 290, 292,
	301, 302, 303, 304, 312, 317, 330, 331, 349, 351,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 208, 0, 0, 165,
	216, 214, 0, 0, 0, 257, 320, 0, 0, 0,
	0, 211, 0, 0, 0, 309, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 261, 277, 297, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 235, 144,
	0, 0, 0, 199, 350, 0, 0, 0, 271, 0,
	315, 189, 209, 148, 128, 142, 159, 188, 246, 0,
	291, 0, 0, 0, 0, 0, 166, 0, 283, 254,
	339, 0, 0, 282, 212, 329, 0, 0, 338, 0,
	0, 347, 352, 0, 0, 0, 306, 176, 0, 133,
	0, 268, 171, 204, 0, 0, 0, 163, 0, 0,
	0, 305, 327, 150, 322, 233, 239, 160, 162, 161,
	143, 300, 326, 155, 164, 310, 287, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	294, 293, 0, 195, 0, 0, 0, 276, 0, 200,
	132, 318, 355, 149, 206, 323, 0, 183, 245, 168,
	255, 256, 180, 130, 273, 227, 228, 226, 229, 0,
	0, 0, 274, 296, 325, 151, 313, 0, 0, 0,
	0, 285, 0, 0, 0, 134, 319, 337, 156, 295,
	298, 353, 281, 137, 335, 314, 231, 201, 202, 135,
	0, 136, 279, 174, 186, 169, 249, 0, 185, 270,
	332, 333, 167, 356, 145, 346, 139, 146, 345, 242,
	0, 241, 348, 328, 336, 232, 220, 0, 138, 334,
	230, 219, 207, 179, 191, 266, 215, 267, 192, 237,
	236, 238, 217, 221, 0, 0, 0, 311, 342, 357,
	153, 0, 299, 324, 0, 0, 154, 184, 178, 265,
	240, 147, 194, 308, 205, 213, 278, 354, 253, 284,
	157, 341, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 210, 0, 275, 182, 343, 0, 173, 0, 0,
	0, 0, 0, 129, 141, 152, 158, 172, 177, 181,
	190, 193, 196, 197, 198, 203, 218, 222, 223, 224,
	225, 243, 244, 247, 248, 251, 252, 258, 259, 260,
	262, 263, 264, 272, 0, 280, 286, 288, 289, 290,
	292, 301, 302, 303, 304, 312, 317, 330, 331, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 208, 0, 0,
	165, 216, 214, 0, 0, 0, 257, 320, 0, 0,
	0, 0, 211, 0, 0, 0, 309, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 261, 277, 297, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 235,
	144, 0, 0, 0, 199, 350, 0, 0, 0, 271,
	0, 315, 189, 209, 148, 128, 142, 159, 188, 246,
	0, 291, 0, 0, 0, 0, 0, 166, 0, 283,
	254, 339, 0, 0, 282, 212, 329, 0, 0, 338,
	0, 0, 347, 352, 0, 0, 0, 306, 176, 0,
	133, 0, 268, 171, 204, 0, 0, 0, 163, 0,
	0, 0, 305, 327, 150, 322, 233, 239, 160, 162,
	161, 143, 300, 326, 155, 164, 310, 287, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 294, 293, 0, 195, 0, 0, 0, 276, 0,
	200, 132, 318, 355, 149, 206, 323, 0, 183, 245,
	168, 255, 256, 180, 130, 273, 227, 228, 226, 229,
	0, 0, 0, 274, 296, 325, 151, 313, 0, 0,
	0, 0, 285, 0, 0, 0, 134, 319, 337, 156,
	295, 298, 353, 281, 137, 335, 314, 231, 201, 202,
	135, 0, 136, 279, 174, 186, 169, 249, 0, 185,
	270, 332, 333, 167, 356, 145, 346, 139, 618, 345,
	242, 0, 241, 348, 328, 336, 232, 220, 0, 138,
	334, 230, 219, 207, 179, 191, 266, 215, 267, 192,
	237, 236, 238, 614, 221, 0, 0, 0, 311, 342,
	357, 153, 0, 299, 324, 0, 0, 154, 184, 178,
	265, 619, 617, 608, 609, 205, 213, 278, 354, 253,
	284, 157, 341, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 210, 0, 275, 182, 343, 0, 173, 0,
	0, 0, 0, 0, 129, 141, 152, 158, 172, 177,
	181, 190, 193, 196, 197, 198, 203, 218, 222, 223,
	224, 225, 243, 244, 247, 248, 251, 252, 258, 259,
	260, 262, 615, 616, 272, 0, 280, 286, 288, 289,
	290, 292, 301, 302, 303, 304, 312, 317, 330, 331,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 208, 0,
	0, 165, 216, 214, 0, 0, 0, 257, 320, 0,
	0, 0, 0, 211, 0, 0, 0, 309, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 261, 277, 297, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	235, 144, 0, 0, 0, 199, 350, 0, 0, 0,
	271, 0, 315, 189, 209, 148, 128, 142, 159, 188,
	246, 0, 291, 0, 0, 0, 0, 0, 166, 0,
	283, 254, 339, 0, 0, 282, 212, 329, 0, 0,
	338, 0, 0, 347, 352, 0, 0, 0, 306, 176,
	0, 133, 0, 268, 171, 204, 0, 0, 0, 163,
	0, 0, 0, 305, 327, 150, 322, 233, 239, 160,
	162, 161, 143, 300, 326, 155, 164, 310, 287, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 294, 293, 0, 195, 0, 0, 0, 276,
	0, 200, 132, 318, 355, 149, 206, 323, 0, 183,
	245, 168, 255, 256, 180, 130, 273, 227, 228, 226,
	229, 0, 0, 0, 274, 296, 325, 151, 313, 0,
	0, 0, 0, 285, 0, 0, 0, 134, 319, 1127,
	156, 295, 298, 353, 281, 137, 335, 314, 231, 201,
	202, 135, 0, 136, 279, 174, 186, 169, 249, 0,
	185, 270, 332, 333, 167, 356, 145, 346, 139, 146,
	345, 242, 0, 241, 348, 328, 336, 232, 220, 0,
	138, 334, 230, 219, 207, 179, 191, 266, 215, 267,
	192, 237, 236, 238, 217, 221, 0, 0, 0, 311,
	342, 357, 153, 0, 299, 324, 0, 0, 154, 184,
	178, 265, 240, 147, 194, 308, 205, 213, 278, 354,
	253, 284, 157, 341, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 210, 0, 275, 182, 343, 0, 173,
	0, 0, 0, 0, 0, 129, 141, 152, 158, 172,
	177, 181, 190, 193, 196, 197, 198, 203, 218, 222,
	223, 224, 225, 243, 244, 247, 248, 251, 252, 258,
	259, 260, 262, 263, 264, 272, 0, 280, 286, 288,
	289, 290, 292, 301, 302, 303, 304, 312, 317, 330,
	331, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 208,
	0, 0, 165, 216, 214, 0, 0, 0, 257, 320,
	0, 0, 0, 0, 211, 0, 0, 0, 309, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 261, 277, 297, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 235, 144, 0, 0, 0, 199, 350, 0, 0,
	0, 271, 0, 315, 189, 209, 148, 128, 142, 159,
	188, 246, 0, 291, 0, 0, 0, 0, 0, 166,
	0, 283, 254, 339, 0, 0, 282, 212, 329, 0,
	0, 338, 0, 0, 347, 352, 0, 0, 0, 306,
	176, 0, 133, 0, 268, 171, 204, 0, 0, 0,
	163, 0, 0, 0, 305, 327, 150, 322, 233, 239,
	160, 162, 161, 143, 300, 326, 155, 164, 310, 287,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 294, 293, 0, 195, 0, 0, 0,
	276, 0, 200, 132, 318, 355, 149, 206, 323, 0,
	183, 245, 168, 255, 256, 180, 130, 273, 227, 228,
	226, 229, 0, 0, 0, 274, 296, 325, 151, 313,
	0, 0, 0, 0, 285, 0, 0, 0, 134, 319,
	605, 156, 295, 298, 353, 281, 137, 335, 314, 231,
	201, 202, 135, 0, 136, 279, 174, 186, 169, 249,
	0, 185, 270, 332, 333, 167, 356, 145, 346, 139,
	618, 345, 242, 0, 241, 348, 328, 336, 232, 220,
	0, 138, 334, 230, 219, 207, 179, 191, 266, 215,
	267, 192, 237, 236, 238, 614, 221, 0, 0, 0,
	311, 342, 357, 153, 0, 299, 324, 0, 0, 154,
	184, 178, 265, 619, 617, 608, 609, 205, 213, 278,
	354, 253, 284, 157, 341, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 210, 0, 275, 182, 343, 0,
	173, 0, 0, 0, 0, 0, 129, 141, 152, 158,
	172, 177, 181, 190, 193, 196, 197, 198, 203, 218,
	222, 223, 224, 225, 243, 244, 247, 248, 251, 252,
	258, 259, 260, 262, 615, 616, 272, 0, 280, 286,
	288, 289, 290, 292, 301, 302, 303, 304, 312, 317,
	330, 331, 349, 351,
}

var yyPact = [...]int{
	4030, -1000, -318, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1712, -1000, -1000, -1000, -1000,
	-1000, -1000, 856, 263, -1000, 274, 291, 28960, 626, 4060,
	29922, -1000, -1000, -1000, 168, 503, 29922, 409, 452, 1175,
	1597, 1174, 52, -71, -72, 103, 22706, 22224, 85, -1000,
	1781, 1783, -1000, -1000, 574, 58, -1000, -1000, -1000, 19818,
	183, -1000, -1000, 1692, 1710, 1507, -1000, 13084, 574, 574,
	28479, 31846, -1000, 1732, 29922, 11639, -1000, 616, 29922, -158,
	557, 557, 477, 557, 557, 624, -1000, 828, -1000, -1000,
	-1000, -1000, 29922, 25593, 558, 29441, 558, 558, 558, 558,
	558, 558, 558, 29922, -1000, 700, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29922, 1173,
	1622, 863, 126, -1000, -1000, -1000, 859, -1000, 450, 437,
	342, 338, 105, 866, 1689, -1000, 1377, 1692, 1692, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 244, 602, 200, 183,
	804, -1000, 1618, 1617, 1058, 1616, 854, 1615, 1434, -54,
	-1000, 1170, 29922, -1000, -1000, 1029, 1028, 1475, 1330, 660,
	1473, -1000, -1000, 334, 552, 1413, 410, 1413, 1413, 1413,
	1413, 1413, -90, 1413, 1413, 1413, 71, 1413, 125, 1413,
	1413, 1413, 1413, 1413, 1226, -1000, -1000, -1000, 357, 1328,
	1384, 1469, -1000, -1000, 1436, 1678, 623, -1000, -127, 1362,
	20780, -1000, 1377, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1188, 1619, 977,
	15970, 1554, -1000, -1000, 917, 1757, -1000, 19337, 698, -1000,
	15970, 3639, 1377, -1000, -1000, 1377, -1000, -1000, -1000, 671,
	-1000, -1000, 17894, 17894, 17894, 17894, 17894, 17894, 17894, 17894,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1377, 1377, 1377, 1377, 1377, 1377,
	1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377,
	1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377,
	1377, 1377, -1000, -1000, 1377, -1000, 12603, 1377, 1377, 1377,
	1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 15970,
	1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377,
	1377, 1377, 1377, 1377, 1377, 1377, 27998, 26074, 29922, 1367,
	1319, -1000, -1000, 697, 1372, -94, 31365, -1000, -1000, -1000,
	-1000, 30403, 25112, 801, -1000, -1000, -1000, -1000, 1610, -1000,
	-1000, 696, -1000, 1712, -1000, -1000, 1291, 547, -1000, 3291,
	4820, -1000, -1000, -1000, 1433, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 29441, 1670, 587, 1169, 855, 1168, 1167, 1165, 25593,
	25593, 557, 1164, 1370, 599, 1369, 597, 1214, 29922, 1649,
	1468, 29922, 1163, 1160, 1157, 1150, 25593, 25593, -1000, 11155,
	-1000, -1000, 863, -1000, 1094, 15970, 557, 557, 29922, 29922,
	29922, 29922, -1000, -1000, 863, 863, 863, 863, 852, 1756,
	852, -1000, 852, -1000, -1000, 15970, -1000, 17894, 24631, 726,
	-1000, -1000, -1000, 1149, 240, -1000, -1000, -1000, -1000, -1000,
	-1000, 1147, 854, 854, -1000, 1093, 854, 1357, -1000, 799,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 854, -1000, 15489, -316, -1000, -1000, 1364, -1000,
	290, -1000, -1000, 473, 473, 209, 25593, 25593, 25593, -1000,
	1413, 29441, -1000, 1413, 1413, 1413, -97, 1413, 1413, -1000,
	-1000, 1413, -1000, -1000, -1000, -1000, -1000, 1413, -1000, -1000,
	-1000, 1413, 1413, -1000, 1413, 1413, -1000, -1000, -1000, -1000,
	-1000, 25593, 473, 165, 1363, 473, 25593, 25593, 1507, -1000,
	-1000, 183, -1000, -1000, 29922, -102, 20780, 1362, 1665, 9703,
	-1000, -1000, -1000, 1776, 757, 1375, -1000, -1000, 1359, -1000,
	889, 694, 976, 1524, -1000, -1000, -1000, 29922, -1000, 15970,
	15970, 1023, -1000, 21261, -1000, -1000, -1000, -1000, 9219, 761,
	17894, 928, 766, 17894, 17894, 17894, 17894, 17894, 17894, 17894,
	17894, 17894, 17894, 17894, 17894, 17894, 17894, 17894, 1021, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1144, -1000, 183,
	1048, 1048, 713, 713, 713, 713, 713, 713, 713, 23187,
	1669, 14046, 14046, 14046, 1669, 1188, 1188, 14046, 14046, 14046,
	14046, 14046, 14046, 1669, 1669, 14046, 1188, 1188, 1188, 1188,
	14046, 14046, 14046, 14046, 1669, 14046, 14046, 14046, 1669, 1188,
	1289, 905, 12603, 14046, 14046, 14046, 1188, 15970, 15970, 15008,
	14527, 16451, 14046, 14046, 1669, 836, 905, 30403, -1000, -1000,
	17413, -1000, -1000, -1000, -1000, -1000, 1188, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 29441, 29441, 14046, 14046, 14046,
	14046, 752, 29922, -1000, 1360, 1449, -1000, -1000, -1000, 1662,
	24150, 18856, -1000, 752, 1322, 26074, 29922, -1000, -1000, 26074,
	29922, 8735, 30884, 1346, -1000, -119, -117, -94, -1000, -1000,
	710, -1000, -1000, -1000, 12121, -1000, 10187, 1692, 1507, 6315,
	10671, -1000, 4820, 1433, -1000, -62, -1000, -1000, -1000, 1401,
	-1000, 1401, 284, -25, 1401, 1401, 1401, 1401, 1401, -20,
	-20, -20, -20, -21, -1000, -1000, -1000, -1000, -1000, 1419,
	1417, -1000, 1401, 1401, 1401, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1407, 293, 1404, 1404, 1404, 1404,
	1404, 524, 524, -1000, 15970, 1450, -1000, 29922, -1000, 1639,
	-1000, 281, 1414, 1355, -1000, 175, 1323, 29922, -1000, 29922,
	29922, 25593, 25593, 25593, 586, -1000, 29922, 1358, -1000, -1000,
	-1000, -1000, -1000, 1337, -1000, 1323, -1000, -1000, -1000, -1000,
	-1000, 905, 1143, 1140, -1000, -1000, -1000, 858, -1000, -1000,
	-1000, -1000, 863, 29922, 29922, 29922, 1659, 863, 905, 1373,
	1451, 1377, 1188, -1000, -1000, 1139, -1000, 1357, 1357, -1000,
	1357, 854, 1048, 1357, -1000, 1287, 1642, 1092, 29922, -1000,
	20780, -57, -1000, -136, 27517, -1000, -1000, -1000, 27517, -1000,
	71, 172, -1000, 591, -1000, 1280, -1000, -1000, -1000, -1000,
	1413, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27517, 109, 164, 27517, 1337, 1753, 1669, 1188, 553, -1000,
	-1000, -1000, 1377, 1235, 692, -1000, 1520, 977, 977, 15970,
	-1000, -1000, -1000, 10187, 1686, -1000, 1536, 1533, 1422, -1000,
	-1000, 761, 793, -1000, -1000, 873, -1000, -1000, -1000, -1000,
	689, 1377, -1000, 4319, -1000, -1000, -1000, -1000, 928, 17894,
	17894, 17894, 1373, 4319, 4271, 861, 1825, 713, 691, 691,
	711, 711, 711, 711, 711, 879, 879, -1000, -1000, -1000,
	1188, -1000, -1000, -1000, 14046, 1270, -1000, -1000, 905, 684,
	1270, 1270, 14046, -173, -173, 1188, 1270, 1270, 1270, 1188,
	1270, 14046, 14046, 1270, -173, -173, -173, -173, 1270, 1270,
	1270, 1270, 14046, 1270, 1270, 1270, 14046, -1000, 15970, -1000,
	1188, 1270, 1270, 1270, -1000, 813, 995, 774, 1745, 1270,
	767, 1744, 1270, 1249, 17894, 17894, 17894, 1270, 1270, 14046,
	841, -1000, 15970, 1188, -1000, 2717, 1356, 1351, 1270, 1188,
	1348, 1270, 1270, 177, 1377, -1000, 10187, 26074, 26074, 26074,
	26074, 26074, -1000, 1501, 1490, -1000, 1493, 1487, 1497, 20780,
	1273, 1188, 304, 24150, -1000, 1377, -1000, 20299, 650, 615,
	613, 607, 1718, 26074, 1312, -1000, 1312, -1000, 674, -1000,
	-1000, 30403, -94, -105, -1000, -1000, 1346, -1000, 1045, -1000,
	-1000, 905, -1000, 669, 1619, 1669, 1345, 5831, -1000, -1000,
	-1000, -1000, 547, -1000, -1000, -1000, 1412, 4621, -1000, 1565,
	715, 685, 1109, 1556, -1000, -1000, 347, -65, -1000, -1000,
	1026, -20, -20, 1401, 1401, 247, 1401, -1000, -20, -1000,
	-1000, -1000, 710, 1609, 710, 710, 710, 710, -20, 1071,
	1071, -1000, -1000, -1000, -1000, 1017, -1000, 1407, -1000, 1014,
	-1000, -1000, -1000, -1000, -1000, -1000, 971, 1467, 29441, 183,
	1658, -1000, 1723, -1000, -1000, 578, 77, 25593, 171, 359,
	186, -1000, 588, -1000, 585, -1000, -1000, -1000, -1000, -1000,
	-1000, 29922, 25593, -1000, -1000, 1718, 1138, 1133, -1000, -1000,
	-1000, 852, 863, 1600, -1000, -1000, 17894, 25593, -1000, 318,
	-1000, -1000, -1000, -1000, 752, 622, -1000, -1000, -98, -1000,
	-1000, 584, 666, 664, 580, -1000, 91, 25593, -1000, 29441,
	-1000, 1739, 1733, 106, 1729, 25593, 1524, -1000, 1344, -1000,
	642, 603, 690, 529, 529, -1000, 769, 529, 751, -1000,
	182, -1000, 9703, 9703, 1511, -1000, -1000, -1000, 29922, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8251, 14046,
	-1000, 1373, 4319, 3773, -1000, 17894, -1000, 1270, 14046, -173,
	7767, -173, -173, 1270, -1000, 27036, -1000, -173, -173, -173,
	-173, -173, -173, 1270, 1270, -173, -1000, -1000, -1000, -1000,
	-173, -173, -173, -173, 1270, -173, -173, -173, 1188, 905,
	-1000, -1000, -1000, -1000, 466, 1021, 466, 17894, 17894, -1000,
	17894, 17894, -1000, -1000, 17894, 3965, 3788, 3517, -213, -1000,
	1368, 826, -1000, 15970, 992, -1000, -1000, 17894, 17894, -1000,
	-1000, -1000, -1000, 1466, 10187, 1377, 6799, -1000, 29441, 1350,
	-1000, 789, 773, 1449, 1411, 1465, 1269, -1000, -1000, -1000,
	-1000, 1489, -1000, 1486, -1000, -1000, 1380, -1000, -1000, 1342,
	1377, 29441, 17894, 650, -1000, 1377, 1377, 1377, 1712, 15970,
	1312, -1000, -1000, 708, -1000, -1000, -140, -141, -1000, -1000,
	-1000, 9703, -1000, 6315, -1000, 6315, -1000, 21742, 540, 1567,
	518, -1000, 1109, -1000, -1000, 1109, -1000, -1000, -1000, 1405,
	-1000, 912, -1000, -1000, -1000, -1000, -1000, 17894, 1772, -1000,
	1564, -1000, 1557, 1069, -1000, -1000, 1276, 710, 710, -20,
	-1000, -1000, 1401, -1000, 710, -1000, 753, -1000, -1000, -1000,
	-1000, 710, 1268, -1000, 1248, 1340, -1000, 1241, 87, 29922,
	-1000, -1000, -1000, 1464, -1000, -1000, -1000, 1242, 1339, -1000,
	3291, 1131, 1130, 1129, -218, 271, -1000, 25593, 115, 175,
	402, 1127, 29922, 25593, -1000, -1000, -1000, -1000, -1000, 863,
	-1000, 17894, 4319, 1323, -1000, -1000, -20, 29922, -1000, 25593,
	704, 26555, 25593, 102, 134, -1000, 25593, 25593, 1728, 25593,
	1337, 1422, 553, 2823, 1109, 639, -1000, -1000, 535, -1000,
	2964, 1556, 1126, 4768, 3423, 29441, 1555, 1553, 1125, 29922,
	29441, -1000, -1000, 3374, 1124, 15970, -1000, 29441, 29441, 657,
	-1000, -1000, -1000, 1295, 13084, -1000, -1000, 1188, -1000, 17894,
	4319, -173, -1000, -1000, -1000, -1000, 655, -1000, -1000, -173,
	-1000, -1000, 1123, -1000, -1000, -1000, -1000, -1000, -1000, -173,
	-173, -1000, -1000, -1000, -1000, -1000, -173, -1000, -1000, -1000,
	-1000, 1188, 1401, 1401, -1000, 1401, 1404, -1000, 1401, 16,
	1401, 13, 1188, 1188, 3285, 3140, 3089, 2763, 2717, 17894,
	17894, 17894, 1377, -169, -1000, 905, 15970, 3066, 2795, -1000,
	1632, 1316, 1336, -1000, -1000, 13565, 1188, 1531, 1235, -1000,
	19818, 1230, -1000, 1712, 10187, 15970, 15970, -1000, -1000, 15970,
	1402, -1000, 15970, -1000, -1000, -1000, -1000, 29441, 301, -1000,
	15970, 1230, 2292, -1000, 29441, 29441, 29441, 1692, 905, -1000,
	-1000, -1000, -1000, 5831, -1000, 1225, -1000, 1401, 1401, 1547,
	-1000, 715, -1000, -1000, -1000, 29441, -1000, 4319, -74, -1000,
	-1000, -1000, -1000, -1000, -1000, 710, -1000, -1000, -1000, -1000,
	-1000, -20, 1067, -20, 1010, -1000, 1009, -1000, -1000, -268,
	1400, -1000, 183, 29922, 191, 578, -1000, 3291, 3291, 3291,
	119, 154, -1000, 867, -1000, -1000, -1000, 1066, 1065, 1064,
	1323, 188, 865, 139, -1000, 1656, -1000, -1000, -1000, 4319,
	-83, -1000, 134, -1000, -1000, -1000, 134, -1000, -1000, 149,
	1337, 1337, 25593, 1337, -1000, -1000, 3374, 506, 3291, 3291,
	1450, 715, 1542, 518, -1000, -1000, -1000, -1000, -1000, -1000,
	1120, -1000, 695, -1000, 576, 506, 3374, 905, 746, 1641,
	9703, 1716, 26074, -1000, -1000, -1000, 4319, -1000, 7283, -1000,
	749, -1000, -1000, -1000, -1000, -1000, -1000, 220, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 17894, 17894, 17894, 17894,
	-1000, 2717, 2717, 2717, 17894, 1188, 1063, 905, 17894, 17894,
	1540, -1000, 1377, -1000, -1000, 1377, 178, -1000, 29441, 1692,
	-1000, 905, 905, 905, 29441, 905, 1222, -1000, 1377, 18375,
	-1000, 20780, 1213, 1213, 1213, -1000, 610, 21742, 1636, 1636,
	-1000, 1109, -1000, 1211, -1000, -1000, 710, -1000, 710, 1238,
	1231, -1000, 21742, -1000, 1687, -1000, 191, -1000, 1062, 237,
	257, -1000, 236, 230, 228, 227, 225, -1000, -1000, -1000,
	-1000, 399, 119, -1000, -63, 1006, 783, 1605, 154, -1000,
	970, 968, 955, 950, 215, -1000, -1000, -1000, -1000, 185,
	175, -1000, 397, 1061, 1589, 1585, 1657, 1657, 98, 1337,
	1343, 1207, -1000, -1000, 1112, -1000, -1000, 1399, 1109, 1396,
	-1000, 1108, -1000, -1000, 29441, -1000, 506, 1628, 1627, 1377,
	-1000, 1714, 1707, 1312, 13084, -1000, -1000, 1712, 1706, -1000,
	-1000, 2717, 2717, 2717, 2717, -1000, -1000, -1000, 211, -1000,
	-1000, 2717, 2717, 1766, -1000, 1336, 1377, -1000, 183, -1000,
	-1000, 1206, -1000, 29441, -1000, -1000, 650, -1000, -1000, -1000,
	610, -1000, 1107, 769, 1059, -1000, -1000, -1000, -1000, 491,
	-1000, -1000, -1000, -1000, 1201, -1000, 307, 4919, -1000, -1000,
	-1000, -1000, -1000, -1000, 1594, 1593, 292, -1000, 1055, 1053,
	-1000, 376, 1002, 702, -182, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 372, 1104, -1000, 135,
	-1000, -1000, 564, 1569, 1574, 1702, -1000, 25593, -1000, -1000,
	26074, -1000, -1000, 347, 347, 21742, 1450, 21742, -1000, -1000,
	-1000, 17894, -1000, 743, -178, 15970, 15970, 1716, -1000, 744,
	15970, -1000, -1000, -1000, -1000, 1188, 181, -231, -1000, -1000,
	10187, 1336, 1188, -1000, -1000, -1000, -1000, -1000, 949, -1000,
	29922, 610, 300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15970, 15970, 5347, 4919, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 937, -1000, -1000, 987,
	352, 133, -1000, 1653, -1000, 1380, 871, 1585, 1697, 1583,
	1581, -1000, 1044, -225, 1312, 1194, 1379, 1187, 4319, 1185,
	-1000, 29441, -1000, 29441, -1000, 905, 1334, -1000, 905, 1714,
	-1000, 1188, 231, 231, 1333, -1000, 1510, -216, -239, 1332,
	-1000, -1000, 1378, -1000, 610, 296, -1000, 834, 860, 205,
	198, 3222, -1000, -1000, -1000, -1000, -319, -1000, 118, -1000,
	104, -1000, -1000, -1000, 1040, -1000, 1588, -1000, 1039, -1000,
	1695, 1694, -1000, 170, 1716, 610, 21742, 610, -1000, 743,
	1530, 1331, -1000, 1652, 15970, -178, -1000, -1000, 248, -1000,
	737, 266, 735, -1000, 1048, -1000, -1000, 1506, -1000, 29441,
	-1000, 1101, 1099, 922, -1000, 15970, 4919, 1682, 1676, 1673,
	1626, 9703, 4827, -1000, -1000, -1000, -1000, -1000, 1036, 1024,
	23668, 1714, -1000, 1182, -1000, -1000, 457, 29441, 1377, -1000,
	-1000, 862, -1000, -1000, -1000, -1000, -1000, 29441, -229, 1180,
	222, -1000, -1000, 853, 4919, -1000, 844, -320, 404, 183,
	560, 17894, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 95,
	1323, -178, 610, 323, -1000, -1000, 248, -1000, -237, 1463,
	-1000, -1000, -1000, -1000, -1000, -1000, 4919, -1000, -322, 4919,
	229, -1000, -1000, -1000, 4671, -1000, -1000, -1000, -1000, 195,
	-1000, -1000, 4319, 25593, -1000, -1000, 1377, -1000, -244, 1456,
	1453, 1727, -1000, -323, 4581, -324, 555, 4919, 794, -1000,
	15970, -1000, 560, -1000, 1323, 16932, -1000, -1000, 1765, -1000,
	1759, 621, 621, 4444, 845, 4919, -1000, -327, 554, 4919,
	-1000, 825, -1000, 2717, 1188, -1000, -1000, -1000, 482, 939,
	-1000, -1000, -1000, 4337, -1000, -330, 4919, -1000, -1000, -1000,
	-1000, -1000, 548, 4043, -331, -1000, 543, 4919, -1000,
}

var yyPgo = [...]int{
	0, 2169, 2168, 233, 2167, 181, 2166, 2163, 2162, 26,
	23, 20, 28, 2161, 1907, 1905, 1903, 1856, 1854, 2160,
	5, 2159, 2158, 1850, 2156, 2155, 1848, 1846, 1840, 1833,
	2152, 2151, 2149, 1830, 1824, 1822, 15, 2148, 19, 2147,
	4, 132, 155, 2146, 3, 2142, 2141, 14, 2140, 2139,
	1810, 2138, 2136, 2135, 87, 2134, 1808, 1806, 2132, 1804,
	1801, 2131, 2129, 1799, 1791, 1789, 2128, 156, 2127, 2121,
	2120, 169, 90, 139, 2119, 2117, 2115, 108, 79, 2046,
	103, 43, 104, 353, 2113, 30, 54, 174, 2112, 121,
	137, 2111, 145, 2107, 140, 107, 96, 2104, 2100, 151,
	2099, 2098, 2097, 126, 2096, 2082, 2910, 2081, 2080, 147,
	2079, 63, 58, 36, 2076, 2075, 2074, 2073, 2072, 25,
	153, 2071, 2065, 128, 2064, 2062, 78, 2060, 2059, 158,
	2058, 2057, 2054, 124, 40, 2053, 2052, 55, 2049, 48,
	75, 2048, 94, 2045, 130, 2044, 2043, 34, 10, 2042,
	64, 2037, 56, 2036, 135, 309, 1115, 2034, 11, 16,
	18, 2030, 32, 7, 13, 44, 47, 70, 116, 98,
	2025, 49, 38, 106, 97, 88, 39, 2024, 141, 2023,
	80, 143, 127, 122, 142, 2022, 2020, 2019, 971, 2012,
	110, 84, 2010, 95, 916, 152, 112, 2007, 93, 2006,
	2004, 1989, 83, 109, 1988, 1985, 53, 66, 636, 1649,
	89, 144, 1984, 42, 1983, 1981, 1979, 2894, 101, 82,
	102, 1977, 99, 35, 59, 1976, 1974, 1973, 1972, 1969,
	1968, 1341, 1967, 1965, 1962, 1961, 288, 60, 1960, 1957,
	113, 115, 1953, 1938, 1937, 1936, 119, 67, 138, 1933,
	125, 118, 120, 1932, 68, 1931, 1930, 91, 41, 1929,
	1928, 1925, 92, 86, 1923, 62, 31, 33, 65, 8,
	69, 100, 1922, 22, 1921, 2, 6, 12, 1919, 1918,
	1915, 1914, 1913, 1911, 1910, 71, 1909, 1900, 61, 1898,
	1893, 1890, 37, 1887, 1883, 1879, 131, 105, 50, 149,
	284, 17, 1876, 1873, 9, 1867, 111, 1863, 57, 1861,
	52, 1859, 1852, 46, 1844, 1842, 51, 1835, 1828, 150,
	1516, 2747, 1826, 148, 129, 45, 74, 1814, 1812, 0,
	617, 154, 136, 1797, 1793,
}

var yyR1 = [...]int{
	0, 328, 328, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 92,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 331, 331, 101, 101, 99, 99, 100,
	100, 173, 173, 12, 12, 12, 178, 178, 183, 183,
	183, 186, 186, 186, 186, 164, 165, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 302,
	302, 311, 311, 311, 312, 312, 310, 310, 310, 310,
	310, 314, 314, 315, 315, 313, 313, 313, 313, 317,
	317, 318, 318, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 305, 305, 305,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 320, 320, 321, 321, 322, 322, 323, 323, 323,
	323, 324, 324, 324, 324, 324, 325, 325, 325, 325,
	325, 325, 325, 326, 326, 327, 327, 2, 283, 283,
	284, 284, 285, 285, 285, 285, 286, 286, 287, 287,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	24, 205, 205, 304, 304, 304, 298, 298, 298, 300,
	300, 299, 299, 299, 301, 301, 306, 306, 306, 306,
	306, 308, 308, 308, 308, 308, 308, 309, 309, 309,
	307, 307, 48, 48, 49, 49, 49, 153, 153, 153,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 282, 282, 282, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 259,
	260, 260, 260, 260, 260, 260, 260, 260, 247, 247,
	248, 224, 224, 224, 224, 224, 224, 224, 224, 223,
	223, 223, 223, 227, 227, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 226, 226, 226, 226, 226,
	226, 226, 226, 228, 228, 228, 228, 228, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 230, 230, 230, 230, 230, 230, 230,
	230, 246, 246, 231, 231, 240, 240, 241, 241, 241,
	238, 238, 239, 239, 234, 235, 242, 236, 236, 236,
	237, 237, 237, 245, 245, 245, 245, 232, 249, 249,
	269, 269, 268, 268, 267, 267, 267, 258, 258, 264,
	264, 264, 264, 264, 264, 264, 253, 253, 253, 252,
	252, 254, 254, 257, 257, 266, 266, 265, 265, 250,
	250, 250, 270, 270, 270, 270, 270, 251, 251, 251,
	251, 271, 255, 255, 256, 256, 256, 276, 277, 275,
	275, 275, 275, 275, 116, 116, 116, 261, 261, 261,
	262, 262, 262, 263, 263, 263, 280, 280, 279, 279,
	50, 51, 55, 55, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 152, 152,
	152, 203, 203, 274, 272, 272, 273, 273, 15, 15,
	53, 53, 303, 303, 35, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 278, 278, 278, 17, 17, 56,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 84, 192, 192, 191, 191, 190,
	190, 190, 193, 193, 193, 221, 221, 221, 58, 58,
	62, 62, 65, 65, 65, 63, 64, 27, 28, 28,
	28, 28, 29, 204, 204, 60, 60, 61, 61, 61,
	61, 76, 76, 333, 333, 59, 334, 67, 68, 68,
	69, 69, 69, 196, 196, 73, 73, 73, 71, 71,
	71, 72, 72, 78, 78, 82, 82, 82, 82, 81,
	81, 81, 81, 155, 155, 160, 214, 214, 136, 136,
	156, 156, 161, 161, 161, 162, 162, 163, 163, 163,
	163, 163, 158, 158, 157, 157, 159, 124, 124, 212,
	212, 212, 211, 211, 211, 211, 86, 86, 89, 89,
	90, 90, 90, 90, 93, 138, 138, 110, 110, 111,
	111, 111, 111, 111, 122, 122, 172, 172, 171, 171,
	174, 174, 91, 91, 91, 91, 96, 96, 97, 97,
	98, 98, 202, 202, 219, 219, 219, 102, 102, 102,
	104, 103, 103, 103, 103, 105, 105, 107, 108, 108,
	106, 106, 109, 112, 112, 112, 112, 113, 113, 83,
	83, 83, 83, 83, 83, 83, 189, 189, 115, 115,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	132, 132, 132, 132, 132, 132, 117, 117, 117, 117,
	117, 117, 117, 77, 77, 133, 133, 133, 95, 94,
	94, 80, 80, 79, 79, 134, 134, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 127, 127, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	332, 332, 129, 128, 128, 128, 128, 128, 128, 74,
	74, 74, 74, 74, 220, 220, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 145,
	145, 75, 75, 143, 143, 144, 146, 146, 142, 142,
	142, 119, 119, 119, 119, 119, 119, 119, 119, 121,
	121, 121, 147, 147, 135, 135, 85, 148, 148, 149,
	150, 150, 151, 151, 154, 166, 166, 166, 167, 167,
	167, 167, 123, 123, 168, 168, 168, 118, 118, 118,
	118, 118, 118, 118, 170, 170, 169, 169, 169, 169,
	175, 175, 137, 137, 140, 140, 139, 141, 176, 176,
	180, 180, 177, 177, 181, 181, 181, 181, 184, 184,
	185, 185, 185, 182, 182, 182, 179, 179, 179, 216,
	216, 216, 187, 187, 197, 197, 194, 194, 195, 195,
	188, 188, 233, 233, 201, 201, 200, 200, 200, 198,
	198, 198, 199, 199, 213, 213, 209, 209, 215, 215,
	210, 210, 217, 217, 218, 218, 281, 281, 243, 243,
	291, 291, 244, 244, 292, 292, 294, 294, 289, 289,
	290, 290, 293, 293, 30, 295, 295, 296, 296, 297,
	297, 297, 297, 31, 32, 32, 32, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 329, 330,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	4, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 0, 1, 3,
	1, 2, 3, 1, 1, 1, 0, 2, 0, 2,
	1, 5, 1, 3, 5, 4, 3, 5, 3, 8,
	10, 3, 3, 3, 3, 3, 5, 4, 5, 1,
	2, 2, 4, 3, 6, 5, 3, 8, 0, 1,
	2, 0, 1, 7, 1, 3, 8, 8, 3, 3,
	3, 5, 3, 5, 2, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 4, 4, 4, 2, 2,
	2, 6, 2, 4, 4, 4, 5, 7, 6, 3,
	5, 4, 2, 4, 3, 2, 4, 5, 6, 2,
	6, 6, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 1, 1, 2, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 3, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -328, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 177, 142, 170,
	64, 282, -65, 285, 286, -333, -204, 222, 223, 20,
	37, 287, 289, 31, 32, 191, 239, 241, 144, -5,
	-88, -6, 8, 380, 139, 283, 172, 171, 26, 429,
	-329, 68, 490, -150, 15, -67, -334, -67, -67, -67,
	-67, -67, -259, -202, 106, 68, 23, -199, 151, 87,
	371, 147, -205, 235, 237, -197, -198, 199, 209, 44,
	158, 157, 148, 235, 148, 149, 151, 371, 147, 184,
	183, 235, 237, 148, -106, -217, 72, -207, 161, 440,
	260, 426, 247, 196, 282, 296, 298, 290, 325, 313,
	427, 441, 162, 217, 146, 311, 314, 358, 160, 250,
	210, 272, 442, 347, 353, 220, 285, 367, 443, 163,
	214, 216, 215, 204, 221, 36, 173, 309, 256, 302,
	225, 199, 444, 434, 300, 28, 194, 445, 355, 330,
	259, 446, 431, 254, 354, 305, 301, 144, 164, 158,
	447, 331, 335, 448, 359, 240, 449, 450, 451, 150,
	246, 294, 295, 452, 200, 361, 251, 329, 33, 159,
	428, 48, 181, 362, 38, 333, 37, 339, 453, 328,
	323, 340, 454, 455, 456, 457, 264, 262, 263, 265,
	327, 293, 322, 212, 53, 145, 337, 336, 338, 213,
	357, 318, 316, 458, 459, 255, 165, 460, 461, 303,
	18, 462, 463, 365, 176, 257, 258, 42, 464, 465,
	466, 110, 467, 468, 469, 356, 332, 334, 198, 114,
	306, 155, 470, 261, 269, 430, 244, 111, 363, 299,
	472, 289, 180, 175, 366, 278, 473, 223, 474, 475,
	476, 167, 477, 238, 237, 286, 270, 112, 287, 349,
	218, 478, 479, 480, 481, 208, 193, 369, 360, 52,
	222, 344, 482, 273, 292, 157, 224, 483, 248, 283,
	43, 7, 211, 252, 350, 271, 219, 209, 320, 182,
	484, 485, 307, 308, 326, 291, 321, 284, 185, 177,
	109, 368, 345, 432, 235, 315, 312, 188, 319, 486,
	151, 487, 189, 288, 364, 249, 310, 346, 148, 131,
	314, 358, 138, 348, 349, 355, -253, 356, 183, 186,
	-221, 148, -192, 347, 240, 261, 401, 189, 190, 149,
	150, 33, 360, 359, 351, -217, 152, 288, -76, 142,
	178, -106, -47, 72, 224, -47, 30, 72, 72, 36,
	72, 287, 350, 350, 75, 430, 192, 21, -320, -301,
	269, -319, -299, 139, 138, 10, 140, 274, 275, 276,
	149, 8, 31, 471, 166, 277, 278, 6, 170, 279,
	280, 184, 9, 281, -304, 74, 72, -207, 21, -320,
	-301, 269, 261, 6, -69, 5, -188, 153, 284, -87,
	439, -92, -219, -217, -208, 74, 397, 398, 399, 400,
	401, 414, 415, 416, 402, 403, 417, 418, 419, 404,
	405, 420, 421, 423, 424, 422, 187, 408, 407, 406,
	409, 410, 51, 412, 411, 413, 81, -3, -167, 17,
	16, -73, 54, 55, -68, -81, 122, -83, -217, -114,
	89, -120, 29, 72, -207, 24, -119, -208, -115, -142,
	-141, -95, 131, 132, 133, 120, 121, 128, 90, 134,
	-127, -125, -126, -128, -130, -131, 74, 73, 82, 75,
	76, 77, 78, 83, 397, 398, 399, 400, 401, 414,
	415, 416, 402, 403, 417, 418, 419, 404, 405, 420,
	421, 423, 424, 422, 408, 407, 406, 409, 410, 412,
	411, 413, 84, 85, -209, -139, -329, 58, 59, 178,
	147, 381, 382, 383, 384, 385, 425, 168, 389, 92,
	47, 370, 379, 378, 377, 375, 376, 372, 374, 373,
	391, 392, 154, 371, 126, 380, -188, -188, 11, -99,
	-100, -106, -109, -217, -177, 284, -184, -181, 359, 360,
	-182, -185, -179, -142, 339, 468, 469, 358, 314, 357,
	-209, -217, -2, -5, 6, -106, -260, -248, -251, -210,
	163, -271, -209, -206, 160, 72, -207, 253, 143, 169,
	139, 88, 433, 23, 25, 243, 342, 397, 91, 131,
	398, 399, 400, 16, 20, 92, 130, 81, 381, 192,
	401, 138, 62, 396, 372, 374, 370, 371, 348, 29,
	10, 26, 171, 203, 22, 124, 140, 95, 96, 97,
	174, 274, 275, 24, 172, 266, 85, 276, 168, 115,
	19, 65, 11, 186, 239, 13, 395, 113, 14, 236,
	154, 153, 108, 201, 149, 60, 8, 134, 27, 105,
	56, 402, 403, 436, 45, 191, 437, 58, 106, 17,
	375, 376, 31, 425, 404, 179, 438, 405, 126, 206,
	63, 50, 242, 89, 83, 34, 86, 66, 87, 15,
	202, 61, 393, 245, 267, 183, 471, 205, 439, 166,
	107, 277, 141, 380, 268, 241, 59, 147, 6, 390,
	30, 170, 279, 408, 407, 406, 409, 207, 57, 383,
	384, 410, 280, 488, 148, 94, 391, 392, 152, 184,
	84, 5, 44, 32, 9, 281, 64, 67, 377, 378,
	379, 47, 51, 412, 411, 413, 93, 12, 394, 429,
	187, 149, -106, 380, -195, 154, -195, 184, 183, -195,
	-195, 148, 98, -53, -106, -303, -298, -304, -194, 154,
	-209, -194, -194, -194, -194, -194, -194, -194, -106, 135,
	-106, 72, 30, -193, 106, 12, 371, 147, 148, 184,
	151, -255, 11, 108, 187, 187, 187, 188, 187, -191,
	350, 352, 185, 353, 354, 12, -84, 106, 19, -329,
	-167, -167, 72, 287, 152, -61, -3, -11, -9, -10,
	-3, 98, 30, 30, 74, 51, 30, -42, -41, -43,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 30, -282, 68, -243, 339, 72, -295, -296,
	-106, 75, 75, 66, 66, 69, 152, 69, 66, -321,
	270, 68, -321, 237, 270, 271, 209, 235, 151, -321,
	-321, 237, -321, -321, -321, -321, -321, 350, -321, -321,
	-321, 272, 273, -321, 348, 151, -321, -321, -321, -321,
	-321, 71, 66, 69, 261, 66, 11, 66, -67, -7,
	-5, -329, 21, 22, 148, 363, 69, -87, -170, -329,
	-330, 70, -168, 19, 31, -123, 75, 78, -151, -154,
	-83, -217, 50, -71, 21, 22, 80, 11, -212, 88,
	87, 105, -211, 23, 72, -207, -208, 74, 135, -83,
	-117, 108, 89, 106, 107, 91, 117, 116, 127, 120,
	121, 122, 123, 124, 125, 126, 118, 119, 130, 98,
	99, 100, 101, 102, 103, 104, -189, -329, -95, -329,
	136, 137, -120, -120, -120, -120, -120, -120, -120, -120,
	-329, -329, -329, -329, -329, -329, -329, -329, -329, -329,
	-329, -329, -329, -329, -329, -329, -329, -329, -329, -329,
	-329, -329, -329, -329, -329, -329, -329, -329, -329, -3,
	-134, -83, -329, -329, -329, -329, -329, -329, -329, -329,
	-329, -329, -329, -329, -329, -145, -83, -329, -332, -129,
	-329, -332, -129, -332, -129, -332, -329, -332, -129, -332,
	-129, -332, -332, -129, -332, -329, -329, -329, -329, -329,
	-329, -108, 27, -106, -86, -89, -90, -91, -110, -94,
	-329, -106, -95, -106, -99, -331, 69, 11, 67, -331,
	69, 135, 69, -178, -183, 361, 363, 284, -182, -182,
	-216, -209, 74, 29, 98, 30, 135, -150, -67, 70,
	69, -251, 163, 160, -223, -227, -229, -228, -230, -225,
	-226, 311, 314, 318, 316, 312, 317, 131, 315, 320,
	321, 322, 323, 324, 325, 326, 327, 328, 329, 330,
	30, 173, 307, 308, 309, 310, 331, 332, 333, 334,
	335, 336, 337, 338, 290, 313, 427, 291, 292, 293,
	294, 295, 296, 298, 299, 300, 301, 302, 303, 304,
	305, 72, -208, -271, 68, -209, 23, 151, 72, 89,
	72, 72, 72, -307, -306, -298, -301, -195, 72, 69,
	152, 69, 152, 71, -99, 24, 66, -101, -106, 72,
	72, 72, 72, -300, -298, -301, -218, -217, -206, -193,
	74, -83, -195, -195, -106, -106, -106, -106, -193, -193,
	-193, -193, -190, 11, 108, 11, -190, -190, -83, -120,
	-298, 373, 122, 72, 72, 287, 72, -42, -42, 74,
	-42, 69, 98, -42, 70, -134, -281, 489, 69, -297,
	23, 363, 364, 340, -323, 148, 186, 183, -323, -319,
	278, -300, -299, -298, -321, -322, -209, -321, -321, -321,
	350, -321, -321, -321, -321, -321, -321, -321, -321, -304,
	-323, 239, 69, -323, -300, -298, -73, -3, -106, 364,
	365, -92, 23, -169, -210, 9, 108, 69, 18, 69,
	-166, 25, 26, 135, -121, 51, 75, 78, -196, 49,
	-106, -83, -83, -132, 83, 89, 84, 85, -211, 122,
	-218, -210, -206, -120, -133, -139, -95, 79, 108, 106,
	107, 91, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -220, 72, 74,
	72, -119, -119, -209, -71, -79, -82, 122, -83, -217,
	-79, -79, -71, -330, -330, -82, -79, -79, -79, -82,
	-79, -71, -71, -79, -330, -330, -330, -330, -79, -79,
	-79, -79, -71, -79, -79, -79, -71, -330, 69, -330,
	-3, -79, -79, -79, -330, -83, -83, -142, 74, -79,
	-142, 74, -79, -120, 386, 387, 388, -79, -79, -71,
	-143, -144, 93, -142, -330, -120, -209, -209, -79, -80,
	-79, -79, -79, -173, 110, -106, 30, 69, -102, -104,
	-103, -105, 56, 60, 62, 57, 58, 59, 63, -202,
	-86, -93, 47, -329, -111, 110, -112, 23, -219, 64,
	153, 65, -173, 67, -86, -106, -86, -109, -217, 122,
	-181, -184, 69, 362, 364, 365, -178, -237, 130, 66,
	86, -83, -210, -218, -167, -73, -261, -262, -263, -210,
	74, 75, -248, -249, -250, -251, -264, 163, -270, 155,
	157, 44, -252, 164, 149, 45, -224, -238, 345, -231,
	68, -231, -231, 319, 311, 314, 312, -231, -231, -231,
	-231, -231, -236, 314, -236, -236, -236, -236, 312, 68,
	68, -231, -231, -231, -240, 68, -240, 306, -241, 68,
	-241, -241, -241, -241, -271, -271, -83, -213, 67, -164,
	-106, 24, -48, 196, 169, 68, -302, 69, 29, -308,
	236, -106, -106, -106, -298, -298, -304, -278, 167, 162,
	-106, 69, 69, 72, 72, -256, 11, 108, -193, -217,
	-217, -106, -122, 23, -193, -77, 174, 67, -332, -330,
	72, -41, -119, 70, -107, 27, 74, -296, -219, 339,
	364, -324, 122, -209, -324, -327, 429, 152, 70, 69,
	-321, -324, 257, 239, -324, 11, -71, -330, -55, -54,
	143, 140, 141, 145, 146, -274, 342, 139, 180, -94,
	-329, -330, 69, 135, 52, -123, -123, -154, -187, 19,
	11, 47, 47, -72, 57, 83, 84, 85, 135, -329,
	-133, -120, -120, -120, -77, 88, -330, -79, 69, -330,
	135, -330, -330, -79, -155, 393, -155, -330, -330, -330,
	-330, -330, -330, -79, -79, -330, -155, -155, -155, -155,
	-330, -330, -330, -330, -79, -330, -330, -330, -80, -83,
	-330, -330, -330, -330, 69, 67, 23, 11, 11, -330,
	11, 11, -330, -330, 11, -120, -120, -120, -330, -330,
	-79, -146, -144, 95, -83, -330, -330, 69, 69, -330,
	-330, -330, -330, -118, 30, 47, -329, -3, -329, -176,
	-180, -142, -206, -89, -90, -90, -89, -90, 56, 56,
	56, 61, 56, 61, 56, -103, -219, -330, -330, -138,
	195, -329, 34, -219, -112, 149, 149, 149, -113, 12,
	-86, -113, -113, 135, -183, -186, 366, 363, 369, 72,
	74, 135, -168, 69, -263, 98, -251, 68, 72, -257,
	-208, 45, -252, 149, 45, -252, -257, 72, -257, 45,
	83, 89, -234, -235, -242, -245, -232, 29, 66, 342,
	155, 45, 44, 81, -239, 346, 75, -236, -236, -231,
	-231, -231, 319, -231, -236, -237, 30, -237, -237, -237,
	-237, -236, -246, 74, -246, 75, -240, 75, 70, 66,
	-209, -3, 23, -49, 8, 9, 10, -283, -284, -285,
	72, 108, 201, 202, -311, 268, -306, 237, 246, 88,
	16, 429, 152, 152, -106, -298, -113, 72, 72, -190,
	-193, 34, -120, -301, 189, 190, -173, 148, -297, 152,
	135, 135, 152, 260, -300, -209, 11, 11, 257, 11,
	-300, -196, 69, -203, -252, -280, -250, -251, -279, 156,
	163, 164, -203, 163, 160, -252, 164, 155, 156, -200,
	-252, 152, 23, -203, -203, -258, 98, -203, 110, -210,
	-210, 53, -106, -78, -165, 122, -210, -80, -77, 88,
	-120, -330, -82, -156, -155, 122, -218, -156, -156, -330,
	-209, -160, -329, -155, -156, -156, -155, -155, -155, -330,
	-330, -155, -156, -156, -156, -156, -330, -156, -156, -156,
	-330, -222, 131, 311, 173, 309, 302, 329, 316, 344,
	307, 345, -220, -222, -120, -120, -120, -120, -120, 11,
	11, 11, 426, -150, 97, -83, 94, -120, -120, -175,
	66, -176, -137, -140, -139, -329, -3, -330, -169, 6,
	429, -174, -209, -113, 69, 98, 98, -97, -96, 66,
	67, -98, 66, -96, 56, 56, -172, 68, 69, -139,
	-329, -174, -120, -112, -329, -329, -329, -150, -83, -113,
	363, 367, 368, -262, -263, -266, -265, -209, -208, 155,
	-270, 44, -270, -257, -257, 68, 83, -120, 9, 45,
	45, 74, 70, -237, -237, -236, -231, -237, 72, 131,
	-237, 70, 69, 70, 69, 70, 69, -116, 445, 89,
	-106, -164, -164, 66, 70, 69, -223, 72, 72, 72,
	-314, 429, 242, -312, -310, 248, 249, 250, 251, 252,
	-301, 247, -308, 244, 74, 72, -106, -298, -193, -120,
	-236, -106, -300, 122, 122, -209, -300, 257, -326, 429,
	-300, -300, 11, -300, -72, -54, 68, -247, 72, -208,
	-257, -198, 155, 72, 72, 72, -208, 72, -208, -209,
	45, 45, 72, -106, -209, -247, 72, -83, -209, -209,
	135, -113, 11, 69, -81, -330, -120, -156, 135, -156,
	-214, 72, -156, -156, -156, -330, -231, -231, -231, -241,
	-231, 295, -231, 295, -330, -330, 19, 19, 19, 19,
	-330, -120, -120, -120, -329, -75, 390, -83, 69, 69,
	28, -175, 69, -330, -330, 47, -330, -330, 69, -150,
	-180, -83, -83, -83, 68, -83, -171, -209, 195, -330,
	-112, -202, -171, -171, -171, -167, 70, 69, -231, -231,
	45, -254, -252, -171, -126, -237, -236, 74, -236, 75,
	75, 445, 68, -3, -106, -286, -287, -288, 81, 428,
	89, 203, 204, 165, 205, 206, 207, -285, -223, -223,
	-223, -317, -318, -316, 245, 266, 267, 253, -315, -313,
	262, 263, 264, 265, 88, 74, 74, 74, -309, 236,
	88, 245, 16, 23, -289, -191, -326, -326, 239, -300,
	-78, -247, -152, 168, 169, -223, -223, -213, -254, 45,
	72, -201, 152, 23, 152, -152, -247, 30, 140, 27,
	-210, -147, 13, -86, -165, -165, 122, -136, 110, -236,
	72, -120, -120, -120, -120, -330, -330, -330, -120, -330,
	74, -120, -120, 45, -140, -137, 47, -3, -329, -209,
	-167, -171, 70, 69, -139, -111, -219, -330, -330, -330,
	-268, -267, 67, 159, 81, -265, -166, -166, -257, 70,
	-237, -237, 70, 70, -266, -164, 19, -164, -288, 74,
	207, 203, 207, 207, 207, 207, 208, -305, 81, 243,
	-316, 254, 450, 238, 268, 75, 75, 109, 31, 32,
	-313, 75, 75, 75, 75, -310, 16, 429, -308, 244,
	74, 74, -290, 38, -292, 39, -325, 23, -325, 257,
	11, 70, 72, -224, -224, 68, -257, 68, 72, -209,
	-152, 29, 29, -329, -148, 14, 16, -113, -81, -150,
	16, -330, -330, -330, -330, -74, 108, 429, -330, -330,
	9, -137, -3, 70, -209, -112, -267, 72, -258, 74,
	166, 70, 194, -20, -3, -9, -10, -11, -12, -14,
	-50, -15, -16, -21, -22, -17, -56, -57, -65, -63,
	-64, -60, -59, -25, -23, -26, -18, -27, -28, -29,
	-33, -34, -24, -35, 92, 154, 225, 282, 36, 36,
	199, 200, 74, 74, 29, 255, 134, 29, 75, 134,
	396, 244, 74, 72, 245, -233, 153, -293, 43, -291,
	-244, 42, 16, -298, -86, -266, -213, -266, -120, -272,
	-273, 110, -158, 394, -149, -83, -135, -85, -83, -147,
	-165, -161, 112, 111, -134, -330, 427, 63, 430, -176,
	-330, 75, -106, -269, -268, 195, -164, -83, -83, 72,
	-46, -215, 228, 229, 230, -210, -36, -20, 75, 29,
	75, 29, 258, 245, 23, -172, 75, -292, 16, -294,
	40, 41, 74, 429, -113, 70, 68, 70, -330, 69,
	-209, -157, -159, -209, 69, -148, -330, -162, 91, -163,
	109, 396, -124, 75, 134, -162, 53, 428, 431, 68,
	-153, 197, 198, -37, -38, 93, 94, 226, 227, 231,
	-223, 69, 490, 256, 256, 74, 38, 74, 16, 16,
	237, -147, -269, -266, -269, -273, 47, 69, 23, -85,
	-158, -163, 114, 115, 195, 114, 115, -119, 53, -171,
	-164, 72, 72, 97, 95, -38, -83, -36, 19, 19,
	19, 29, -210, 97, -20, 74, 74, 29, 242, 21,
	-301, -148, 70, 181, -159, -160, 88, -209, 429, 70,
	-13, -19, -12, -9, -10, -11, 282, 92, -36, 94,
	490, -47, 75, -3, -45, -44, 75, -47, 233, 89,
	234, 72, -120, 259, -158, -269, 182, -163, 430, -276,
	-277, 66, -164, -36, 490, -36, 97, 95, -39, -40,
	96, -20, 69, 232, -301, -329, 431, -277, 66, -276,
	66, 10, 9, 490, 97, 490, 154, -36, 97, 95,
	-40, -83, -44, -120, 179, -275, 167, 162, 165, 30,
	-275, 97, 92, 490, 154, -36, 94, -330, -330, 161,
	29, 83, 97, 490, -36, 154, 97, 490, 154,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 686, 686, 686, 686,
	686, 686, 782, -2, 550, 0, 0, 0, 0, -2,
	659, 660, 661, 665, 666, 681, 683, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 40,
	0, 0, 56, 57, 1090, 0, 684, 673, 674, 0,
	0, 1572, 2, 1028, 0, 695, 688, 0, 1090, 1090,
	0, 0, 87, 0, 0, 0, 783, 0, 0, 0,
	1088, 1088, 0, 1088, 1088, 0, 1103, 0, 1085, 1099,
	1100, 1101, 0, 0, 1086, 0, 1086, 1086, 1086, 1086,
	1086, 1086, 1086, 0, 608, 800, 1112, 1113, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 0, 0,
	0, 652, 0, 618, 619, 620, 0, 622, 0, 0,
	0, 0, 0, 632, 635, 639, 0, 1028, 1028, 496,
	497, 498, 656, 657, 646, 658, 0, 0, 0, 0,
	0, 685, 305, 307, 0, 327, 0, 330, 333, 1118,
	667, 0, 0, 1143, 1144, 0, 0, 0, 0, 0,
	1457, 181, 244, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 0, 183, 183, 183, 1468, 183, 0, 183,
	183, 183, 183, 183, 243, 233, 234, 235, 0, 0,
	0, 1457, 594, 686, 0, 690, 0, 1091, 662, 45,
	0, 47, 1044, 784, 785, 786, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 0, 1034, 0,
	0, 698, 696, 697, 687, 0, 709, 739, 0, 809,
	0, 814, 816, -2, -2, 0, 857, 858, 859, 860,
	861, 862, 0, 0, 0, 0, 0, 0, 0, 0,
	886, 887, 888, 889, 890, 891, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1566, 1568,
	1569, 1570, 818, 819, 998, 1057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 989,
	0, 960, 960, 960, 960, 960, 960, 960, 960, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 69, 800, 73, 1520, 0, 1062, -2, -2,
	1064, 0, 0, 0, -2, -2, -2, -2, 1329, -2,
	998, 0, 88, 1020, 686, 89, 0, 370, 371, 0,
	1342, 520, 1110, 1111, 1331, 1106, 1107, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 588, 0, 589, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	609, 610, 652, 612, 0, 0, 1088, 1088, 0, 0,
	0, 0, 522, 523, 652, 652, 652, 652, 649, 0,
	649, 629, 649, 647, 648, 0, 634, 0, 0, 0,
	642, 643, 668, 0, 0, 675, 677, 678, 679, 680,
	676, 0, 0, 0, 309, 0, 0, 329, 311, 0,
	314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	324, 325, 0, 332, 0, 1116, 1119, 672, 1134, 1135,
	0, 1145, 1146, 187, 187, 0, 0, 0, 0, 150,
	183, 0, 152, 183, 183, 183, 0, 183, 183, 159,
	160, 183, 162, 163, 164, 165, 166, 183, 168, 169,
	170, 183, 183, 173, 183, 183, 176, 177, 178, 179,
	180, 242, 187, 0, 0, 187, 0, 0, 695, 42,
	52, 0, 691, 692, 0, 0, 0, 46, 0, 0,
	51, 1573, 37, 0, 0, 1029, 1032, 1033, 1021, 1022,
	1025, 0, 0, 693, 699, 700, 689, 0, 710, 0,
	0, 0, 740, 0, 742, 743, 744, 745, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	837, 838, 839, 840, 841, 842, 815, 0, 829, 0,
	0, 0, 878, 879, 880, 881, 882, 883, 884, 0,
	698, 0, 0, 0, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 698, 698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 698, 0, 0, 0, 698, 0,
	0, 855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 698, 0, 990, 0, 943, 952,
	0, 944, 953, 945, 954, 946, 0, 947, 955, 948,
	956, 949, 950, 957, 951, 0, 0, 0, 851, 0,
	0, 71, 0, 799, 0, 746, 748, 749, 750, -2,
	0, 803, 849, -2, 0, 0, 0, 63, 64, 0,
	0, 0, 0, 74, 76, 0, 0, 1520, 1065, 1066,
	470, 1079, 1080, 1081, 0, 1077, 0, 1028, 695, 537,
	0, 372, 0, 0, 381, 460, 390, 391, 392, 453,
	394, 453, 453, 0, 453, 453, 453, 453, 453, 467,
	467, 467, 467, 467, 436, 437, 438, 439, 440, 0,
	0, 413, 453, 453, 453, 417, 443, 444, 445, 446,
	447, 448, 449, 450, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 455, 455, 457, 457, 457, 457,
	457, 0, 0, 519, 0, 1104, 85, 0, 93, 0,
	94, 0, 0, 99, 260, 246, 98, 0, 232, 0,
	0, 0, 0, 237, 604, 1087, 0, 597, 65, 598,
	599, 600, 601, 602, 239, 603, 801, 1114, 1115, 611,
	653, 654, 0, 0, 615, 616, 617, 524, 623, 624,
	625, 631, 652, 0, 0, 0, 764, 652, 633, 843,
	636, 960, 0, 670, 669, 0, 682, 306, 308, 310,
	328, 0, 0, 331, 334, 0, 0, 0, 0, 1137,
	0, 1139, 1141, 0, 0, 188, 189, 190, 0, 182,
	0, 205, 245, 0, 151, 0, 185, 153, 154, 155,
	183, 157, 158, 161, 167, 171, 172, 174, 175, 241,
	0, 0, 0, 0, 148, 0, 698, 0, 0, 663,
	664, 48, 0, 0, 1046, 1035, 0, 0, 0, 0,
	1024, 1026, 1027, 0, 0, 1009, 0, 0, 701, 694,
	39, 810, 811, 813, 830, 0, 832, 834, 741, 711,
	0, 999, -2, 820, 821, 845, 846, 847, 0, 0,
	0, 0, 843, 825, 0, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 877, 974, 975,
	0, 875, 876, 885, 0, 0, 853, 705, 706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 851, 848, 0, 1056,
	0, 0, 0, 0, 925, 0, 0, 860, 1001, 0,
	860, 1001, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 993, 0, 0, 961, 0, 0, 0, 0, 0,
	852, 0, 0, 0, 0, 798, 0, 0, 0, 0,
	0, 0, 787, 0, 0, 790, 0, 0, 0, 0,
	0, 0, 0, 0, 757, 1444, 759, 0, 803, 0,
	0, 0, 807, 0, 807, 68, 807, 70, 0, 802,
	1063, 0, 0, 0, 79, 80, 75, 1067, 0, 1073,
	1074, 1075, 999, 0, 1034, 698, 369, 538, 540, 543,
	544, 545, 373, 375, 376, 377, 0, -2, 511, 1454,
	1498, -2, 503, 1371, -2, -2, 380, 462, 461, 393,
	0, 467, 467, 453, 453, 453, 453, 422, 467, 425,
	428, 429, 470, 0, 470, 470, 470, 470, 467, 0,
	0, 414, 415, 416, 405, 0, 406, 455, 408, 0,
	409, 410, 411, 412, 517, 518, 0, 0, 0, 0,
	0, 1089, 0, 262, 263, 208, 101, 0, 0, 247,
	0, 368, 0, 590, 0, 592, 236, 595, 605, 606,
	596, 0, 0, 613, 614, 807, 0, 0, 626, 650,
	651, 649, 652, 0, 630, 644, 0, 0, 637, 0,
	671, 312, 313, 335, 71, 0, 1117, 1136, 0, 1140,
	1142, 0, 191, 193, 0, 142, 0, 0, 184, 0,
	156, 0, 0, 0, 0, 0, 693, 53, 551, 552,
	-2, 581, 1096, 581, 581, 569, 487, 581, 0, 49,
	0, 1045, 0, 0, 0, 1030, 1031, 1023, 0, 1082,
	1083, 1010, 1011, 86, 702, 831, 833, 835, 0, 851,
	822, 843, 826, 0, 823, 0, 817, 0, 0, 720,
	0, 720, 720, 0, 911, 0, 912, 0, 720, 720,
	0, 0, 0, 0, 0, 0, 918, 919, 920, 921,
	720, 720, 720, 720, 0, 720, 720, 720, 0, 856,
	-2, 922, 923, 924, 0, 0, 0, 0, 0, 967,
	0, 0, 968, 933, 0, 0, 0, 0, 0, 939,
	1020, 0, 994, 0, 0, 942, 962, 0, 0, 963,
	964, 965, 966, 1050, 0, 0, 0, 1039, 0, 807,
	1058, 0, 0, 747, 778, 780, 0, 775, 788, 789,
	791, 0, 793, 0, 795, 796, 766, 753, 850, 754,
	0, 0, 0, 803, 763, 0, 0, 0, 1020, 0,
	807, 61, 62, 0, 77, 78, 0, 0, 84, 471,
	472, 0, 207, 0, 541, 0, 374, 0, 504, 0,
	0, 489, 503, 499, 500, 503, 494, 504, 495, 0,
	382, 0, 384, 385, 386, 387, 388, 0, 0, 466,
	0, 474, 476, 0, 389, 463, 0, 470, 470, 467,
	420, 421, 453, 426, 470, 430, 0, 431, 432, 433,
	434, 470, 0, 451, 0, 0, 407, 0, 534, 0,
	1105, 85, 85, 0, 264, 265, 266, 0, 209, 210,
	0, 0, 0, 0, 111, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 66, 240, 621, 525, 526, 652,
	628, 0, 844, 638, 640, 641, 467, 0, 1138, 0,
	0, 0, 0, 0, 203, 186, 0, 0, 0, 0,
	149, 701, 0, 0, 503, 0, 570, 571, 0, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 1098, 0, 0, 0, 488, 0, 0, 1048,
	1047, 1036, 38, 807, 0, 712, 1000, 0, 824, 0,
	827, 720, 854, 896, 721, 707, 0, 897, 898, 720,
	713, 714, 716, 913, 900, 901, 914, 915, 916, 720,
	720, 917, 905, 904, 903, 906, 720, 909, 908, 910,
	892, 0, 453, 453, 979, 453, 457, 982, 453, 984,
	453, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 991, 941, 997, 0, 0, 0, 54,
	0, 1050, 1037, 1052, 1054, 0, 0, 0, 0, -2,
	1309, 0, 770, 1020, 0, 0, 0, 772, 779, 0,
	0, 773, 0, 774, 792, 794, 751, 0, 0, 755,
	0, 0, -2, 762, 0, 0, 0, 1028, 808, 60,
	81, 82, 83, 539, 542, 0, 505, 453, 453, 0,
	509, 501, 510, 491, 493, 0, 383, 464, 0, 473,
	475, 477, 454, 418, 419, 470, 427, 423, 468, 469,
	435, 467, 0, 467, 0, 458, 0, 521, 535, 0,
	0, 91, 0, 0, 216, 0, 212, 0, 0, 0,
	119, 0, 102, 103, 104, 106, 107, 0, 0, 0,
	100, 0, 249, 0, 252, 253, 591, 593, 627, 765,
	1128, 797, 203, 192, 194, 195, 203, 206, 143, 0,
	144, 146, 0, 145, 86, 553, 0, 578, 0, 0,
	1104, 501, 0, -2, 556, 561, 562, 563, 564, 565,
	0, 576, 0, 558, 0, 578, 0, 573, 0, 0,
	0, 1012, 0, 86, 86, 893, 828, 895, 0, 899,
	718, 717, 894, 902, 907, 926, 976, 467, 980, 981,
	983, 985, 986, 988, 928, 927, 0, 0, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 55, 0, 1055, -2, 0, 0, 72, 0, 1028,
	1059, 1060, 1061, 776, 0, 781, 0, 768, 0, 803,
	760, 0, 0, 0, 0, 59, 479, 0, 1025, 1025,
	490, 503, 502, 0, 465, 424, 470, 452, 470, 0,
	0, 536, 0, 85, 0, 85, 217, 218, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 211, 213, 214,
	215, 137, 120, 121, 0, 0, 0, 0, 112, 113,
	0, 0, 0, 0, 0, 108, 109, 110, 248, 0,
	0, 251, 0, 0, 1130, 1124, 196, 196, 0, 147,
	0, 0, 555, 579, 0, 381, 381, 0, 503, 0,
	572, 0, 1094, 1095, 0, 567, 578, 0, 0, 0,
	1049, 1017, 0, 807, 0, 703, 708, 1020, 0, 977,
	978, 0, 0, 0, 0, 935, 936, 937, 969, 940,
	992, 0, 0, 0, 1053, 1038, 0, 1042, 0, 771,
	58, 0, 767, 0, 756, 758, 803, 804, 805, 806,
	478, 482, 0, 487, 0, 506, 507, 508, 492, 0,
	441, 442, 456, 459, 0, 92, 0, 0, 219, 220,
	221, 222, 224, 225, 0, 0, 0, 97, 0, 0,
	122, 0, 0, 0, 0, 132, 133, 134, 135, 136,
	114, 115, 116, 117, 118, 105, 0, 0, 250, 0,
	255, 256, 1092, 1132, -2, 0, 140, 0, 141, 204,
	0, 554, 580, 378, 379, 0, 1104, 0, 557, 566,
	568, 0, 575, 0, 732, 0, 0, 1012, 86, 722,
	0, 929, 931, 930, 932, 0, 0, 0, 958, 959,
	0, 1041, 0, 777, 769, 761, 483, 484, 0, 486,
	0, 480, 0, 85, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 0, 0, 0, 0, 226, 227,
	228, 229, 138, 139, 123, 124, 0, 126, 127, 0,
	0, 0, 258, 0, 254, 766, 0, 1124, 0, 1126,
	0, 1123, 0, 197, 807, 0, 0, 0, 574, 0,
	584, 0, 43, 0, 1018, 1019, 1013, 1014, 1016, 1017,
	704, 0, 0, 0, 719, 938, 0, 0, 0, 1051,
	-2, 485, 0, 90, 481, 267, 96, 0, 0, 1106,
	0, 0, 294, 295, 296, 1108, 0, 336, 0, 128,
	0, 130, 131, 257, 0, 36, 0, 1131, 0, 1129,
	0, 0, 1125, 0, 1012, 480, 0, 480, 583, 0,
	0, 733, 734, 0, 0, 732, 715, 723, 0, 726,
	0, 0, 0, 737, 0, 724, 970, 0, 973, 0,
	85, 0, 0, 0, 278, 0, 0, 0, 0, 0,
	292, 0, 0, 125, 129, 259, 1093, 1133, 0, 0,
	0, 1017, 559, 0, 577, 585, 0, 0, 0, 1015,
	44, 0, 727, 728, 729, 730, 731, 0, 971, 0,
	0, 268, 269, 0, 0, 279, 0, 0, 0, 0,
	0, 0, 1109, 230, 337, 1127, 1121, 198, 199, 200,
	202, 732, 480, 0, 735, 736, 0, 738, 0, 512,
	85, 270, 271, 272, 273, 274, 0, 276, 0, 0,
	0, 288, 289, 290, 0, 297, 299, 300, 301, 0,
	303, 304, 293, 0, 41, 560, 0, 725, 0, 513,
	514, 0, 95, 0, 0, 0, 0, 0, 0, 285,
	0, 291, 0, 302, 201, 0, 972, 515, 0, 516,
	0, 0, 0, 0, 0, 280, 281, 0, 0, 0,
	286, 0, 298, 0, 0, 527, 529, 530, 0, 0,
	528, 275, 277, 0, 283, 0, 0, 586, 587, 531,
	532, 533, 0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 490,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:478
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:526
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:532
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:545
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:556
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:576
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:585
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:589
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:605
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:625
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:631
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:643
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:655
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:675
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:679
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:717
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:722
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:726
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:736
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:743
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:770
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:793
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:798
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:804
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:827
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:831
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:835
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:843
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:851
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:855
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:859
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:878
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:887
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:896
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:900
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:904
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:941
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:951
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:955
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:961
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:965
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:978
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1006
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1030
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1055
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1070
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1075
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1079
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1083
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1089
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1094
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1098
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1102
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1251
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1338
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1347
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1366
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1390
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1403
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1413
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1417
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1427
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1494
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1502
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1530
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1552
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1566
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1570
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1574
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1592
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1596
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1600
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1606
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1624
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1653
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1677
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1683
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1687
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1697
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1703
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1709
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1714
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1719
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1725
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1743
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1749
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1769
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1794
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1848
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1951
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2010
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2049
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2053
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2072
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2090
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2157
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2451
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2460
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2464
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2482
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2499
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2515
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2571
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2577
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2581
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2586
		{
			yyVAL.indexOptions = nil
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2606
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2631
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2635
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2643
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2660
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = yyDollar[1].str
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = ""
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 512:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2742
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 513:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2746
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 514:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2750
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 515:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2754
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 516:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2758
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2782
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2805
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2811
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.boolean = true
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.boolean = true
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.boolean = false
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].str
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string("")
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2922
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2939
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2945
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2952
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2963
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2967
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2972
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 560:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2976
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2985
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3000
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3004
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3008
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3015
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3037
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3042
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3058
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3065
		{
			yyVAL.columnOrder = nil
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3073
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3078
		{
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
		}
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3084
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3094
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3100
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3104
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3124
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3132
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3136
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.statement = &FlushPrivileges{}
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3148
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3156
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3160
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3168
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3176
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3192
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3200
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3208
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3217
		{

		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3240
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3251
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3259
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3263
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3267
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3271
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3275
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3283
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3291
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3299
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3303
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3307
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3311
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3315
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 628:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3320
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3333
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3337
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3359
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3364
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3368
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 640:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 641:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3401
		{
			yyVAL.boolean = false
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.boolean = true
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3421
		{
			yyVAL.str = ""
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3435
		{
			yyVAL.showFilter = nil
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3439
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.str = SessionStr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = GlobalStr
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.statement = &Begin{}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			yyVAL.statement = &Begin{}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3487
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3491
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.statement = &Commit{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3503
		{
			yyVAL.statement = &Rollback{}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3519
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3527
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3576
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3581
		{
			setAllowComments(yylex, true)
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3591
		{
			yyVAL.bytes2 = nil
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3601
		{
			yyVAL.str = UnionStr
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = UnionAllStr
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3609
		{
			yyVAL.str = UnionDistinctStr
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3614
		{
			yyVAL.byt = 0
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.byt = 1
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = SQLCacheStr
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = DistinctStr
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.str = StraightJoinHint
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3686
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3690
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3704
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3708
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3724
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3729
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3732
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3737
		{
			yyVAL.exprs = nil
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.over = nil
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3750
		{
			yyVAL.over = yyDollar[1].over
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.frame = nil
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3759
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3770
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3820
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3835
		{
			yyVAL.window = nil
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.window = yyDollar[2].window
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3871
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3897
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3921
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3943
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3949
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3953
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 758:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3964
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3975
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3979
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 761:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3983
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.expr = nil
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4011
		{
			yyVAL.columns = nil
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4025
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4048
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4052
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4056
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4068
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.empty = struct{}{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = JoinStr
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.str = JoinStr
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = JoinStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.str = StraightJoinStr
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = LeftJoinStr
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.str = LeftJoinStr
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4128
		{
			yyVAL.str = RightJoinStr
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.str = RightJoinStr
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = NaturalJoinStr
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4178
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.indexHints = nil
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4191
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4195
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.expr = nil
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4204
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4226
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4234
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = IsNullStr
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = IsNotNullStr
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = IsTrueStr
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = IsNotTrueStr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = IsFalseStr
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = IsNotFalseStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = EqualStr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = LessThanStr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = GreaterThanStr
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = LessEqualStr
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = GreaterEqualStr
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = NotEqualStr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = nil
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.selectExprs = nil
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4504
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4508
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4512
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4570
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4574
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4728
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 930:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 931:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 932:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4752
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 934:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4760
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 937:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 938:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 940:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4784
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4788
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4836
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4845
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4849
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 959:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4883
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4893
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = ""
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = BooleanModeStr
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 972:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.str = QueryExpansionStr
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4951
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4967
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4971
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4981
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4993
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5001
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = nil
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = string("")
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5029
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5035
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = nil
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5058
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.expr = &NullVal{}
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5106
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5111
		{
			yyVAL.exprs = nil
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5115
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5121
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5125
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = nil
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5151
		{
			yyVAL.orderBy = nil
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5165
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = AscScr
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = AscScr
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = DescScr
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.limit = nil
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5193
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5197
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5201
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = ""
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = ForUpdateStr
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5224
		{
			yyVAL.str = ShareModeStr
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5241
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5245
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5249
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5254
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5258
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5262
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5268
		{
			yyVAL.columns = nil
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5272
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5290
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5295
		{
			yyVAL.assignExprs = nil
		}
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5299
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5309
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5319
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5341
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5345
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5351
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5364
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5370
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5381
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5394
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5407
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5417
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5437
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5441
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5452
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &Default{}
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5476
		{
			yyVAL.byt = 0
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.byt = 1
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5481
		{
			yyVAL.byt = 0
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5483
		{
			yyVAL.byt = 1
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5486
		{
			yyVAL.byt = 0
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yyVAL.byt = 1
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5491
		{
			yyVAL.str = ""
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = IgnoreStr
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5496
		{
			yyVAL.sqlVal = nil
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.empty = struct{}{}
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5504
		{
			yyVAL.empty = struct{}{}
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5507
		{
			yyVAL.empty = struct{}{}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.empty = struct{}{}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.empty = struct{}{}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = UniqueStr
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = FulltextStr
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = SpatialStr
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = ""
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5527
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5529
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5543
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = string("")
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5586
		{
			yyVAL.EnclosedBy = nil
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5590
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5595
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5604
		{
			yyVAL.sqlVal = nil
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5608
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5613
		{
			yyVAL.sqlVal = nil
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5617
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5622
		{
			yyVAL.Fields = nil
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5626
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5631
		{
			yyVAL.Lines = nil
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5635
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5640
		{
			yyVAL.sqlVal = nil
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5644
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5660
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5666
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5670
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
			yyVAL.lockType = LockRead
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5680
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5684
		{
			yyVAL.lockType = LockWrite
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5688
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5694
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5700
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5704
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
