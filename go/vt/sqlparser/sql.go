// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const FLUSH = 57468
const MODIFY = 57469
const CHANGE = 57470
const SCHEMA = 57471
const TABLE = 57472
const INDEX = 57473
const INDEXES = 57474
const VIEW = 57475
const TO = 57476
const IGNORE = 57477
const IF = 57478
const PRIMARY = 57479
const COLUMN = 57480
const SPATIAL = 57481
const FULLTEXT = 57482
const KEY_BLOCK_SIZE = 57483
const CHECK = 57484
const ACTION = 57485
const CASCADE = 57486
const CONSTRAINT = 57487
const FOREIGN = 57488
const NO = 57489
const REFERENCES = 57490
const RESTRICT = 57491
const FIRST = 57492
const AFTER = 57493
const SHOW = 57494
const DESCRIBE = 57495
const EXPLAIN = 57496
const DATE = 57497
const ESCAPE = 57498
const REPAIR = 57499
const OPTIMIZE = 57500
const TRUNCATE = 57501
const FORMAT = 57502
const MAXVALUE = 57503
const REORGANIZE = 57504
const LESS = 57505
const THAN = 57506
const PROCEDURE = 57507
const TRIGGER = 57508
const TRIGGERS = 57509
const FUNCTION = 57510
const STATUS = 57511
const VARIABLES = 57512
const WARNINGS = 57513
const ERRORS = 57514
const KILL = 57515
const CONNECTION = 57516
const SEQUENCE = 57517
const EACH = 57518
const ROW = 57519
const BEFORE = 57520
const FOLLOWS = 57521
const PRECEDES = 57522
const DEFINER = 57523
const INVOKER = 57524
const INOUT = 57525
const OUT = 57526
const DETERMINISTIC = 57527
const CONTAINS = 57528
const READS = 57529
const MODIFIES = 57530
const SQL = 57531
const SECURITY = 57532
const TEMPORARY = 57533
const CLASS_ORIGIN = 57534
const SUBCLASS_ORIGIN = 57535
const MESSAGE_TEXT = 57536
const MYSQL_ERRNO = 57537
const CONSTRAINT_CATALOG = 57538
const CONSTRAINT_SCHEMA = 57539
const CONSTRAINT_NAME = 57540
const CATALOG_NAME = 57541
const SCHEMA_NAME = 57542
const TABLE_NAME = 57543
const COLUMN_NAME = 57544
const CURSOR_NAME = 57545
const SIGNAL = 57546
const RESIGNAL = 57547
const SQLSTATE = 57548
const DECLARE = 57549
const CONDITION = 57550
const CURSOR = 57551
const CONTINUE = 57552
const EXIT = 57553
const UNDO = 57554
const HANDLER = 57555
const FOUND = 57556
const SQLWARNING = 57557
const SQLEXCEPTION = 57558
const USER = 57559
const IDENTIFIED = 57560
const ROLE = 57561
const REUSE = 57562
const GRANT = 57563
const GRANTS = 57564
const REVOKE = 57565
const NONE = 57566
const ATTRIBUTE = 57567
const RANDOM = 57568
const PASSWORD = 57569
const INITIAL = 57570
const AUTHENTICATION = 57571
const SSL = 57572
const X509 = 57573
const CIPHER = 57574
const ISSUER = 57575
const SUBJECT = 57576
const ACCOUNT = 57577
const EXPIRE = 57578
const NEVER = 57579
const DAY = 57580
const OPTION = 57581
const OPTIONAL = 57582
const EXCEPT = 57583
const ADMIN = 57584
const PRIVILEGES = 57585
const MAX_QUERIES_PER_HOUR = 57586
const MAX_UPDATES_PER_HOUR = 57587
const MAX_CONNECTIONS_PER_HOUR = 57588
const MAX_USER_CONNECTIONS = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const WORK = 57612
const RELEASE = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const SERIAL = 57622
const REAL = 57623
const DOUBLE = 57624
const FLOAT_TYPE = 57625
const DECIMAL = 57626
const NUMERIC = 57627
const DEC = 57628
const FIXED = 57629
const PRECISION = 57630
const TIME = 57631
const TIMESTAMP = 57632
const DATETIME = 57633
const YEAR = 57634
const CHAR = 57635
const VARCHAR = 57636
const BOOL = 57637
const CHARACTER = 57638
const VARBINARY = 57639
const NCHAR = 57640
const NVARCHAR = 57641
const NATIONAL = 57642
const VARYING = 57643
const TEXT = 57644
const TINYTEXT = 57645
const MEDIUMTEXT = 57646
const LONGTEXT = 57647
const LONG = 57648
const BLOB = 57649
const TINYBLOB = 57650
const MEDIUMBLOB = 57651
const LONGBLOB = 57652
const JSON = 57653
const ENUM = 57654
const GEOMETRY = 57655
const POINT = 57656
const LINESTRING = 57657
const POLYGON = 57658
const GEOMETRYCOLLECTION = 57659
const MULTIPOINT = 57660
const MULTILINESTRING = 57661
const MULTIPOLYGON = 57662
const LOCAL = 57663
const LOW_PRIORITY = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const COLLATION = 57671
const DATABASES = 57672
const SCHEMAS = 57673
const TABLES = 57674
const FULL = 57675
const PROCESSLIST = 57676
const COLUMNS = 57677
const FIELDS = 57678
const ENGINES = 57679
const PLUGINS = 57680
const NAMES = 57681
const CHARSET = 57682
const GLOBAL = 57683
const SESSION = 57684
const ISOLATION = 57685
const LEVEL = 57686
const READ = 57687
const WRITE = 57688
const ONLY = 57689
const REPEATABLE = 57690
const COMMITTED = 57691
const UNCOMMITTED = 57692
const SERIALIZABLE = 57693
const CURRENT_TIMESTAMP = 57694
const DATABASE = 57695
const CURRENT_DATE = 57696
const CURRENT_USER = 57697
const CURRENT_TIME = 57698
const LOCALTIME = 57699
const LOCALTIMESTAMP = 57700
const UTC_DATE = 57701
const UTC_TIME = 57702
const UTC_TIMESTAMP = 57703
const REPLACE = 57704
const CONVERT = 57705
const CAST = 57706
const SUBSTR = 57707
const SUBSTRING = 57708
const TRIM = 57709
const LEADING = 57710
const TRAILING = 57711
const BOTH = 57712
const GROUP_CONCAT = 57713
const SEPARATOR = 57714
const TIMESTAMPADD = 57715
const TIMESTAMPDIFF = 57716
const OVER = 57717
const WINDOW = 57718
const GROUPING = 57719
const CURRENT = 57720
const AVG = 57721
const BIT_AND = 57722
const BIT_OR = 57723
const BIT_XOR = 57724
const COUNT = 57725
const JSON_ARRAYAGG = 57726
const JSON_OBJECTAGG = 57727
const MAX = 57728
const MIN = 57729
const STDDEV_POP = 57730
const STDDEV = 57731
const STD = 57732
const STDDEV_SAMP = 57733
const SUM = 57734
const VAR_POP = 57735
const VARIANCE = 57736
const VAR_SAMP = 57737
const CUME_DIST = 57738
const DENSE_RANK = 57739
const FIRST_VALUE = 57740
const LAG = 57741
const LAST_VALUE = 57742
const LEAD = 57743
const NTH_VALUE = 57744
const NTILE = 57745
const ROW_NUMBER = 57746
const PERCENT_RANK = 57747
const RANK = 57748
const MATCH = 57749
const AGAINST = 57750
const BOOLEAN = 57751
const LANGUAGE = 57752
const WITH = 57753
const QUERY = 57754
const EXPANSION = 57755
const UNUSED = 57756
const ARRAY = 57757
const DESCRIPTION = 57758
const EMPTY = 57759
const JSON_TABLE = 57760
const LATERAL = 57761
const MEMBER = 57762
const RECURSIVE = 57763
const ACTIVE = 57764
const BUCKETS = 57765
const CLONE = 57766
const COMPONENT = 57767
const DEFINITION = 57768
const ENFORCED = 57769
const EXCLUDE = 57770
const GEOMCOLLECTION = 57771
const GET_MASTER_PUBLIC_KEY = 57772
const HISTOGRAM = 57773
const HISTORY = 57774
const INACTIVE = 57775
const INVISIBLE = 57776
const LOCKED = 57777
const MASTER_COMPRESSION_ALGORITHMS = 57778
const MASTER_PUBLIC_KEY_PATH = 57779
const MASTER_TLS_CIPHERSUITES = 57780
const MASTER_ZSTD_COMPRESSION_LEVEL = 57781
const NESTED = 57782
const NETWORK_NAMESPACE = 57783
const NOWAIT = 57784
const NULLS = 57785
const OJ = 57786
const OLD = 57787
const ORDINALITY = 57788
const ORGANIZATION = 57789
const OTHERS = 57790
const PATH = 57791
const PERSIST = 57792
const PERSIST_ONLY = 57793
const PRIVILEGE_CHECKS_USER = 57794
const PROCESS = 57795
const REFERENCE = 57796
const REQUIRE_ROW_FORMAT = 57797
const RESOURCE = 57798
const RESPECT = 57799
const RESTART = 57800
const RETAIN = 57801
const SECONDARY = 57802
const SECONDARY_ENGINE = 57803
const SECONDARY_LOAD = 57804
const SECONDARY_UNLOAD = 57805
const SKIP = 57806
const SRID = 57807
const THREAD_PRIORITY = 57808
const TIES = 57809
const VCPU = 57810
const VISIBLE = 57811
const SYSTEM = 57812
const INFILE = 57813

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 1017,
	-1, 42,
	148, 1081,
	149, 1099,
	-2, 230,
	-1, 48,
	187, 652,
	188, 652,
	-2, 642,
	-1, 500,
	135, 1109,
	-2, 1103,
	-1, 501,
	135, 1110,
	-2, 1104,
	-1, 605,
	98, 1374,
	135, 1374,
	-2, 1065,
	-1, 606,
	98, 1488,
	135, 1488,
	-2, 1066,
	-1, 611,
	98, 1397,
	135, 1397,
	-2, 1067,
	-1, 612,
	98, 1443,
	135, 1443,
	-2, 1068,
	-1, 613,
	98, 1444,
	135, 1444,
	-2, 1069,
	-1, 614,
	98, 1327,
	135, 1327,
	-2, 1073,
	-1, 616,
	98, 1420,
	135, 1420,
	-2, 1075,
	-1, 1106,
	1, 749,
	5, 749,
	12, 749,
	13, 749,
	14, 749,
	15, 749,
	17, 749,
	19, 749,
	30, 749,
	31, 749,
	56, 749,
	57, 749,
	58, 749,
	59, 749,
	60, 749,
	62, 749,
	63, 749,
	66, 749,
	67, 749,
	69, 749,
	70, 749,
	394, 749,
	490, 749,
	-2, 779,
	-1, 1110,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1348,
	135, 1112,
	-2, 1108,
	-1, 1513,
	44, 501,
	-2, 1339,
	-1, 1517,
	68, 501,
	-2, 1289,
	-1, 1520,
	68, 497,
	72, 497,
	-2, 1211,
	-1, 1521,
	68, 498,
	72, 498,
	-2, 1221,
	-1, 1636,
	44, 544,
	155, 546,
	157, 544,
	158, 544,
	-2, 579,
	-1, 1706,
	5, 50,
	-2, 845,
	-1, 2005,
	69, 1265,
	70, 1265,
	135, 1265,
	-2, 683,
	-1, 2028,
	1, 800,
	5, 800,
	12, 800,
	13, 800,
	14, 800,
	15, 800,
	17, 800,
	19, 800,
	30, 800,
	31, 800,
	56, 800,
	57, 800,
	58, 800,
	59, 800,
	60, 800,
	62, 800,
	63, 800,
	66, 800,
	67, 800,
	69, 800,
	70, 800,
	394, 800,
	490, 800,
	-2, 779,
	-1, 2129,
	155, 547,
	-2, 545,
	-1, 2190,
	5, 50,
	-2, 1037,
	-1, 2390,
	41, 1119,
	-2, 1117,
	-1, 2525,
	5, 50,
	-2, 1040,
}

const yyPrivate = 57344

const yyLast = 32647

var yyAct = [...]int{
	563, 78, 2720, 2670, 2694, 2684, 814, 407, 1565, 2574,
	2685, 2528, 2672, 2541, 2443, 7, 2507, 1947, 2589, 2442,
	6, 2441, 5, 2444, 8, 2567, 1505, 2572, 2505, 503,
	2410, 2202, 2440, 3, 2512, 501, 2337, 2390, 2041, 1057,
	1774, 2297, 2022, 506, 1745, 1141, 1930, 1998, 1563, 1466,
	630, 1472, 492, 2278, 2392, 1921, 1522, 2090, 2255, 2249,
	1575, 2233, 1795, 562, 2042, 1470, 1326, 449, 81, 390,
	393, 2529, 432, 432, 438, 2217, 1493, 1999, 485, 78,
	1231, 2123, 125, 628, 846, 125, 1929, 1514, 519, 1108,
	1855, 125, 91, 2114, 1746, 1504, 2542, 1995, 508, 1230,
	104, 435, 435, 1503, 2007, 1635, 2014, 1319, 1538, 1659,
	1373, 484, 1382, 125, 1601, 1967, 1899, 1233, 1510, 1334,
	626, 830, 1445, 1449, 125, 1275, 1554, 2218, 125, 633,
	1211, 1838, 125, 610, 1248, 1550, 122, 959, 607, 625,
	1121, 1456, 1437, 966, 1350, 389, 125, 435, 1102, 633,
	896, 962, 1106, 970, 875, 1617, 488, 125, 1103, 624,
	1940, 603, 599, 1120, 604, 979, 448, 410, 1075, 1280,
	409, 1112, 2742, 2738, 596, 83, 1076, 2728, 598, 801,
	874, 2710, 622, 1525, 2708, 2689, 799, 2665, 2597, 80,
	1273, 2369, 813, 425, 446, 419, 430, 413, 2227, 67,
	811, 35, 35, 2701, 2075, 35, 2583, 2367, 2683, 35,
	2523, 825, 85, 86, 87, 88, 89, 2653, 420, 2558,
	2382, 2370, 402, 35, 1866, 70, 38, 39, 2087, 1740,
	2582, 1988, 2485, 2508, 1588, 2522, 1681, 2182, 1588, 800,
	2422, 1783, 2322, 1468, 1782, 1616, 1741, 1784, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	2234, 1489, 1005, 79, 79, 2037, 2038, 79, 2236, 1490,
	1491, 79, 116, 112, 113, 2036, 114, 1315, 1316, 803,
	1279, 806, 807, 1296, 2578, 79, 1276, 2578, 952, 924,
	578, 620, 584, 586, 585, 582, 583, 581, 580, 579,
	2573, 834, 835, 1277, 1278, 837, 849, 401, 118, 117,
	400, 587, 588, 1122, 932, 1123, 850, 851, 2575, 1821,
	1524, 2575, 1615, 893, 107, 412, 411, 414, 70, 38,
	39, 1530, 1532, 1544, 1531, 1539, 418, 1539, 836, 404,
	2169, 2167, 384, 2579, 2239, 399, 2579, 445, 1861, 1939,
	40, 928, 929, 422, 1889, 2250, 2678, 426, 1813, 1526,
	119, 1526, 120, 2253, 2395, 2113, 1551, 97, 1894, 2306,
	1628, 429, 2548, 1818, 1817, 856, 2251, 2252, 2256, 2257,
	2258, 2259, 2237, 2238, 2240, 2241, 2242, 78, 78, 2546,
	2599, 2598, 125, 2479, 1260, 1814, 2097, 2489, 859, 2274,
	2267, 864, 1576, 2368, 2605, 498, 866, 1629, 865, 1307,
	1819, 1863, 1806, 908, 2265, 110, 2698, 2594, 1807, 863,
	867, 2362, 939, 2592, 2593, 940, 2361, 99, 2360, 2359,
	2358, 96, 2356, 2357, 2475, 2476, 125, 109, 108, 2586,
	2587, 2619, 948, 1570, 2530, 394, 827, 2204, 391, 1766,
	956, 2487, 2386, 2100, 857, 858, 1865, 2681, 2438, 1880,
	1881, 415, 416, 417, 423, 1286, 427, 428, 431, 908,
	1569, 847, 2364, 848, 850, 851, 845, 1968, 385, 105,
	2648, 843, 844, 125, 1816, 2088, 2667, 395, 842, 106,
	897, 2091, 2092, 2093, 2094, 2095, 115, 841, 2481, 2436,
	1014, 2734, 111, 1016, 2091, 2092, 2093, 2094, 2095, 2279,
	2280, 931, 1140, 805, 804, 101, 1907, 102, 1140, 1970,
	2128, 1139, 1643, 1637, 1638, 833, 1636, 1140, 1639, 1640,
	982, 2724, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	2074, 2423, 1055, 1644, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 403, 1074, 1077,
	1077, 1077, 1083, 1077, 1077, 1083, 1077, 1083, 1092, 1093,
	1094, 1095, 1096, 1097, 2115, 1107, 1056, 71, 1622, 2521,
	392, 1015, 2661, 1279, 1553, 2576, 1384, 2235, 2576, 1261,
	1828, 1539, 1529, 860, 1864, 907, 945, 941, 2547, 2480,
	908, 2486, 2385, 2099, 77, 77, 1277, 1278, 77, 125,
	125, 125, 77, 2383, 2365, 392, 1856, 1867, 918, 392,
	387, 947, 954, 1281, 1101, 633, 77, 610, 1972, 1905,
	504, 98, 610, 1976, 2743, 1971, 2676, 1969, 421, 2671,
	2740, 2729, 1974, 2722, 1800, 1113, 2723, 107, 2721, 2711,
	802, 1815, 1857, 2674, 1918, 1973, 388, 2045, 1283, 816,
	2338, 1282, 1140, 1100, 2491, 1110, 1907, 1800, 444, 1134,
	1975, 1977, 494, 1109, 2340, 2289, 1800, 1475, 1477, 2290,
	71, 904, 1888, 915, 1716, 1885, 1869, 1868, 1623, 1219,
	1217, 1200, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 861, 1642, 1204, 1773, 451, 1800,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 1125, 1772, 1005, 1883, 1800, 1126, 1078, 1080,
	1082, 1084, 1086, 1088, 1089, 1091, 1079, 1081, 1585, 1085,
	1087, 913, 1090, 1584, 1138, 1858, 1859, 1771, 1799, 1116,
	1111, 798, 2339, 1803, 1913, 1905, 951, 808, 356, 1910,
	109, 108, 1909, 1912, 903, 2154, 1476, 914, 1602, 910,
	2146, 1799, 1017, 1018, 2293, 1887, 1886, 1135, 1905, 94,
	1799, 1787, 1140, 1917, 1779, 1906, 1907, 1914, 392, 1713,
	1676, 1664, 1649, 1329, 432, 1213, 1133, 2673, 2675, 1494,
	1118, 985, 911, 912, 2288, 826, 2484, 2064, 1005, 1017,
	1018, 432, 1232, 1799, 633, 995, 2109, 1485, 1005, 1258,
	1475, 1477, 435, 435, 998, 999, 1000, 1001, 1002, 995,
	1799, 125, 1005, 1357, 125, 2620, 2621, 2617, 2618, 435,
	435, 2506, 125, 2518, 2517, 978, 2304, 1924, 1355, 1356,
	1354, 125, 125, 125, 125, 2372, 1450, 1235, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 2065, 1212, 1005, 1322,
	1922, 435, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 2294, 598, 1005, 1249, 1225, 2373,
	1592, 432, 839, 2012, 815, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 2011, 832, 1241, 1242, 1243, 1244, 1476,
	852, 1271, 977, 976, 1017, 1018, 1256, 1268, 2590, 435,
	435, 435, 1131, 1990, 633, 1305, 2714, 2695, 2713, 78,
	978, 1236, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 1245, 1246, 1005, 1247, 977, 976, 1720,
	94, 868, 809, 2727, 435, 1327, 1328, 1438, 2662, 435,
	435, 1313, 1252, 1320, 1253, 978, 1289, 125, 1214, 125,
	1221, 1206, 633, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 1287, 1250, 1005, 1711, 1593, 1710, 840,
	125, 2651, 1347, 1239, 1240, 93, 982, 78, 831, 2590,
	1438, 2629, 1729, 2628, 854, 1311, 977, 976, 958, 818,
	819, 820, 821, 822, 823, 824, 1348, 977, 976, 977,
	976, 1314, 976, 1310, 978, 2266, 2731, 1377, 1378, 1056,
	1263, 1264, 1351, 92, 1266, 978, 2260, 978, 2052, 978,
	1059, 973, 633, 2551, 1336, 1661, 1662, 1663, 2543, 2526,
	1269, 1284, 1288, 1285, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 79, 1352, 1005, 977,
	976, 443, 1416, 2641, 967, 2380, 2664, 1353, 451, 1340,
	1342, 1343, 1312, 1346, 986, 1341, 2379, 978, 1469, 1306,
	1423, 1426, 1309, 1107, 977, 976, 963, 1107, 1439, 964,
	1317, 2591, 1712, 977, 976, 2544, 2735, 2378, 633, 633,
	1992, 1331, 978, 2377, 2371, 125, 2482, 2226, 2225, 1844,
	1056, 978, 1843, 125, 125, 983, 1344, 1391, 125, 125,
	1841, 1395, 125, 125, 125, 1332, 977, 976, 1333, 1374,
	1498, 1375, 1480, 610, 626, 1822, 1482, 899, 898, 1235,
	1058, 2545, 633, 633, 978, 1785, 1474, 1786, 593, 594,
	2736, 1380, 2483, 1073, 1348, 1388, 977, 976, 2640, 1451,
	2602, 872, 2600, 2557, 1397, 1398, 2478, 2477, 2435, 1465,
	2387, 2355, 2316, 1481, 978, 1408, 1109, 2263, 2262, 1412,
	2261, 1109, 2223, 1500, 871, 1109, 2057, 1839, 1612, 1265,
	1237, 2627, 2626, 1200, 2488, 1435, 2433, 1582, 524, 523,
	526, 527, 528, 529, 1478, 2404, 1803, 525, 530, 2398,
	125, 2286, 2157, 2142, 2138, 2130, 2101, 2085, 2084, 2083,
	125, 1499, 125, 125, 435, 435, 435, 1874, 1083, 125,
	1255, 1873, 1606, 1590, 1589, 1518, 1540, 1541, 1542, 1543,
	1376, 1262, 1259, 1229, 1228, 1227, 1226, 1511, 1199, 1215,
	1483, 1487, 1560, 1561, 1486, 125, 125, 125, 1492, 1209,
	1208, 1207, 1501, 1205, 1566, 894, 828, 1508, 1608, 1580,
	1581, 398, 396, 1220, 1577, 938, 1578, 1579, 2329, 2654,
	125, 958, 125, 1586, 2213, 2647, 633, 2564, 958, 1646,
	633, 1556, 1557, 1558, 1559, 2213, 2562, 2397, 1552, 2349,
	1440, 2348, 1527, 1528, 2396, 1533, 1534, 1535, 1536, 1537,
	1996, 1597, 633, 2010, 1614, 633, 2213, 2560, 1665, 2213,
	2437, 2329, 2429, 1547, 1548, 1549, 1347, 2329, 2345, 2329,
	958, 2329, 2328, 2080, 897, 2213, 2212, 2194, 958, 2058,
	1594, 1648, 958, 2072, 2071, 1600, 2068, 2069, 2068, 2067,
	1348, 958, 1674, 958, 1458, 1461, 1462, 1463, 1459, 1775,
	1460, 1464, 2149, 1349, 2015, 2016, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1453, 958, 1625, 1624, 1414, 1609, 1109, 1351, 2148,
	1775, 1775, 1607, 1414, 958, 1613, 1604, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 1238,
	1620, 1005, 1137, 1136, 1574, 904, 1453, 1499, 1114, 1452,
	1742, 1744, 1114, 1352, 1107, 1107, 1107, 1107, 1107, 1254,
	82, 1479, 1627, 1113, 943, 1630, 1632, 1324, 2612, 1653,
	1469, 1645, 1767, 1670, 1429, 1651, 1652, 2149, 2010, 2010,
	1107, 1414, 1743, 1441, 1573, 2569, 2188, 1588, 1453, 125,
	125, 125, 125, 125, 942, 2081, 1747, 902, 1058, 1666,
	2070, 125, 1416, 1748, 1115, 125, 1117, 2024, 1115, 125,
	1113, 1898, 1789, 901, 1674, 125, 902, 1488, 1323, 1674,
	1734, 1777, 904, 1778, 1733, 1267, 1770, 1587, 1325, 1776,
	953, 610, 1308, 1762, 1274, 1704, 1218, 1216, 1119, 633,
	79, 1769, 1458, 1461, 1462, 1463, 1459, 2584, 1460, 1464,
	1680, 1682, 1109, 1109, 1109, 1109, 1109, 2561, 2023, 621,
	2403, 1692, 1693, 1694, 1695, 2401, 78, 2228, 1109, 1526,
	2200, 1555, 2051, 2015, 2016, 406, 1551, 1793, 1109, 1728,
	1802, 1804, 908, 1337, 1338, 1571, 1546, 1545, 1201, 891,
	1564, 1603, 2705, 2703, 2686, 2079, 2018, 1200, 1847, 1790,
	633, 1996, 1749, 1845, 451, 1752, 1761, 1223, 944, 435,
	432, 1879, 905, 1750, 1751, 1831, 1753, 1833, 1834, 1835,
	1836, 79, 900, 125, 435, 1758, 1125, 1660, 1756, 1780,
	1759, 983, 1872, 1757, 2021, 2020, 1823, 1824, 1788, 435,
	1755, 1754, 437, 1830, 1798, 1801, 1650, 78, 1792, 1760,
	2623, 1462, 1463, 1837, 1212, 489, 490, 2581, 1927, 435,
	1335, 633, 2611, 971, 972, 2191, 1058, 435, 1658, 1871,
	1657, 1421, 1422, 2319, 2285, 1925, 1926, 1870, 1840, 1056,
	2216, 2137, 1948, 2136, 633, 633, 1805, 2493, 2056, 1842,
	125, 1932, 969, 2055, 1797, 2047, 2496, 2556, 2555, 2391,
	633, 2601, 2389, 1347, 1862, 2474, 2473, 397, 1877, 2374,
	2375, 1832, 960, 1825, 1826, 1827, 1829, 633, 1132, 889,
	1876, 873, 870, 1890, 961, 869, 829, 1348, 2636, 2408,
	2407, 1896, 1875, 2186, 1882, 1327, 1328, 1567, 1497, 2295,
	1884, 1611, 2001, 78, 1928, 1222, 2268, 2613, 2549, 2393,
	1848, 1599, 1897, 2269, 1908, 1902, 1919, 1920, 94, 451,
	1923, 1667, 1668, 1669, 1900, 1911, 1916, 2026, 1318, 1320,
	971, 972, 2030, 2031, 2032, 2002, 1903, 1203, 633, 1446,
	633, 1656, 1934, 2635, 1747, 1997, 2009, 1938, 1933, 1655,
	1199, 1748, 949, 950, 1942, 1989, 2634, 2633, 2352, 855,
	486, 2604, 2603, 633, 2553, 2000, 2497, 2416, 1562, 2412,
	487, 82, 2411, 2298, 1932, 957, 1775, 2035, 1850, 1851,
	1852, 2029, 1978, 633, 2118, 633, 1895, 633, 1979, 633,
	2025, 2707, 2706, 621, 1893, 1892, 1721, 1722, 1723, 1717,
	1714, 1631, 1251, 2033, 1949, 974, 2706, 1952, 1953, 1954,
	2004, 2707, 1957, 2426, 2054, 1321, 2077, 2078, 440, 2019,
	442, 2049, 2454, 51, 2050, 2456, 19, 2455, 18, 84,
	432, 2096, 2027, 2457, 20, 2458, 21, 54, 1560, 1,
	1561, 125, 2046, 1621, 2048, 2453, 15, 2040, 2452, 14,
	2446, 10, 1291, 2039, 2467, 33, 2466, 32, 2248, 435,
	2059, 2060, 2082, 2247, 125, 435, 2254, 2063, 2086, 561,
	2465, 28, 2464, 27, 2066, 2463, 26, 2461, 23, 125,
	2089, 435, 1860, 633, 435, 2264, 2098, 451, 435, 435,
	1210, 435, 967, 2363, 2061, 2076, 2460, 22, 2462, 24,
	2451, 13, 2448, 12, 2447, 11, 812, 633, 2445, 9,
	2103, 125, 633, 1572, 895, 2554, 2492, 2494, 2102, 633,
	633, 2388, 2270, 2126, 2232, 2231, 1854, 1853, 890, 1272,
	2147, 1901, 1904, 2107, 1583, 1641, 2504, 1512, 1502, 623,
	90, 1591, 838, 2150, 364, 2108, 1509, 1811, 2112, 2180,
	1200, 2106, 2116, 2117, 2495, 2119, 892, 2104, 1810, 617,
	1820, 2141, 2127, 629, 2121, 2139, 1523, 2120, 1878, 1809,
	1808, 2490, 2062, 1812, 1145, 1143, 1144, 1142, 1147, 1146,
	368, 1705, 1127, 817, 2536, 2156, 975, 1943, 1944, 100,
	55, 2287, 1915, 95, 1950, 1951, 103, 370, 1013, 1654,
	1781, 608, 125, 609, 601, 1730, 1958, 1959, 1960, 1961,
	955, 1963, 1964, 1965, 1747, 2516, 2566, 2585, 965, 633,
	2509, 1748, 2208, 2209, 2210, 1727, 633, 633, 633, 1072,
	1436, 507, 1765, 2303, 2511, 633, 1339, 1936, 2195, 78,
	2206, 522, 521, 2219, 520, 517, 518, 633, 2577, 1598,
	1330, 1739, 987, 2073, 505, 2187, 496, 1105, 1098, 2165,
	1610, 1457, 1455, 1454, 1224, 2196, 597, 2017, 2013, 1467,
	1104, 2229, 2211, 68, 853, 125, 451, 386, 2181, 1980,
	1981, 2207, 1982, 1983, 451, 2421, 1984, 37, 441, 2244,
	2245, 2246, 491, 25, 17, 1790, 862, 16, 2221, 1993,
	1994, 1634, 810, 2220, 41, 43, 1849, 1568, 2535, 1107,
	2669, 876, 2162, 2163, 435, 2164, 2693, 2588, 2166, 31,
	2168, 30, 29, 2459, 1796, 2468, 2450, 2449, 2656, 2230,
	2281, 2282, 2243, 2296, 2028, 2283, 2222, 2655, 2224, 4,
	946, 1932, 633, 69, 125, 34, 619, 2, 0, 2001,
	633, 2271, 2001, 2324, 0, 2291, 2300, 2301, 2299, 0,
	0, 0, 2272, 2284, 2277, 2026, 2273, 2276, 0, 0,
	0, 0, 0, 1560, 0, 0, 0, 2046, 2275, 2053,
	0, 0, 0, 0, 2292, 2323, 0, 2214, 2215, 0,
	633, 0, 2327, 0, 0, 0, 633, 0, 2351, 2321,
	2353, 125, 0, 125, 0, 0, 0, 1109, 0, 633,
	0, 0, 2000, 0, 0, 2000, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 2320, 2350, 2330, 0,
	0, 2331, 2305, 1474, 2326, 2332, 0, 0, 2341, 0,
	2344, 2342, 2343, 2105, 2336, 0, 0, 2153, 0, 0,
	0, 0, 0, 0, 2354, 2155, 2409, 0, 0, 2346,
	0, 2347, 0, 0, 0, 2158, 2159, 0, 2366, 0,
	0, 0, 2160, 2376, 0, 0, 0, 0, 2381, 0,
	0, 0, 0, 2001, 0, 78, 633, 2384, 2394, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 2399, 2400,
	2413, 2152, 0, 0, 0, 0, 2406, 2402, 0, 0,
	0, 2185, 0, 2414, 78, 0, 0, 2428, 0, 0,
	0, 0, 0, 1389, 1390, 633, 2184, 0, 0, 0,
	2427, 0, 2415, 2432, 1400, 1401, 1402, 1403, 0, 0,
	0, 2175, 2034, 0, 2431, 0, 2000, 1413, 1415, 0,
	0, 2177, 2178, 2179, 1420, 2434, 0, 1107, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	0, 0, 1005, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 0, 0, 1005, 0, 435,
	0, 0, 125, 0, 0, 0, 0, 633, 0, 633,
	2500, 0, 2502, 0, 2044, 0, 2499, 0, 2531, 0,
	2439, 2501, 0, 0, 0, 2514, 2519, 0, 0, 0,
	0, 2515, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 2524, 125, 78, 2498, 0, 0, 1748, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	0, 0, 1005, 0, 0, 1109, 0, 0, 2540, 0,
	0, 0, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 0, 617, 0, 0, 0, 0, 617, 1128,
	0, 0, 0, 0, 0, 0, 2527, 0, 2143, 0,
	2552, 0, 0, 2550, 0, 0, 0, 494, 0, 0,
	2559, 0, 633, 0, 633, 2570, 2580, 0, 0, 0,
	2125, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	2132, 2134, 0, 0, 0, 0, 2432, 0, 0, 0,
	2125, 0, 2607, 0, 2609, 0, 0, 0, 2307, 2308,
	2309, 2310, 2595, 2616, 0, 0, 2314, 2615, 0, 1605,
	2317, 2318, 78, 2610, 2625, 0, 0, 633, 78, 2183,
	2608, 2606, 0, 0, 2614, 2632, 0, 2630, 1058, 2622,
	0, 0, 432, 2645, 1948, 0, 2624, 0, 2197, 2198,
	633, 0, 2199, 2637, 0, 2201, 0, 0, 0, 0,
	78, 2650, 633, 1058, 0, 78, 0, 2646, 2649, 0,
	2660, 435, 0, 2663, 1633, 2659, 2666, 2658, 633, 2657,
	1647, 0, 0, 0, 0, 0, 0, 451, 633, 2680,
	0, 2682, 78, 2679, 2687, 78, 78, 2668, 0, 0,
	78, 0, 0, 0, 0, 2688, 0, 0, 2690, 0,
	0, 906, 2700, 0, 0, 432, 2699, 0, 0, 0,
	78, 2704, 0, 78, 2639, 2702, 0, 0, 2715, 0,
	0, 2717, 0, 0, 0, 0, 2712, 1672, 1202, 78,
	2725, 78, 1675, 0, 435, 78, 0, 1677, 1678, 0,
	0, 0, 1683, 1684, 1685, 1686, 1687, 1688, 2730, 78,
	1691, 0, 78, 0, 0, 1696, 1697, 1698, 1699, 78,
	1701, 1702, 1703, 78, 0, 2739, 0, 1706, 1707, 1708,
	1709, 0, 0, 0, 0, 0, 1715, 0, 0, 1718,
	1719, 0, 2639, 0, 1724, 1725, 2696, 0, 0, 479,
	1731, 0, 1732, 2125, 0, 1735, 1736, 0, 1737, 1738,
	0, 0, 0, 2174, 0, 0, 2639, 0, 0, 0,
	2129, 0, 0, 2125, 0, 0, 0, 1763, 1764, 483,
	0, 0, 0, 0, 0, 2639, 0, 2639, 1381, 1386,
	1387, 0, 0, 2503, 0, 1392, 1393, 1394, 1292, 1396,
	0, 0, 1399, 0, 0, 2639, 0, 1404, 1405, 1406,
	1407, 0, 1409, 1410, 1411, 2639, 0, 0, 0, 2639,
	1417, 1418, 1419, 0, 0, 0, 1425, 1428, 0, 1433,
	1434, 0, 0, 0, 0, 0, 451, 0, 451, 0,
	0, 0, 0, 0, 2044, 0, 629, 0, 968, 2173,
	0, 0, 0, 0, 1444, 0, 1447, 1448, 1140, 2044,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 0, 0, 1005, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 383, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 600, 618, 0,
	0, 123, 0, 0, 0, 123, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 123,
	1005, 0, 0, 0, 617, 0, 0, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1442, 1443, 1937, 0, 0, 0, 0, 0,
	1945, 0, 0, 0, 0, 0, 0, 0, 2510, 2513,
	1955, 1956, 0, 1058, 0, 0, 0, 0, 0, 617,
	0, 1962, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 2677, 629, 0, 0, 629, 629, 0, 0,
	2172, 989, 2044, 992, 2044, 0, 0, 0, 0, 0,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 379, 990, 991,
	988, 0, 0, 2003, 0, 0, 2532, 2533, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	0, 0, 1005, 0, 909, 916, 917, 919, 920, 921,
	922, 923, 0, 925, 926, 927, 2718, 930, 0, 933,
	934, 935, 936, 937, 0, 453, 454, 455, 456, 457,
	461, 462, 466, 467, 476, 475, 474, 477, 478, 481,
	480, 482, 458, 459, 460, 463, 464, 465, 468, 469,
	472, 470, 471, 1987, 0, 0, 1167, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 0,
	1673, 1005, 0, 0, 0, 357, 0, 0, 1679, 0,
	0, 1986, 360, 0, 0, 0, 2513, 1689, 1690, 0,
	0, 0, 369, 377, 378, 2596, 0, 0, 1700, 0,
	1619, 0, 0, 0, 1619, 0, 0, 2631, 1935, 994,
	993, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 0, 2044, 1005, 0, 1726, 1619, 366, 0, 1619,
	367, 0, 0, 375, 376, 123, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 629,
	1005, 0, 0, 0, 0, 0, 0, 1154, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	1985, 0, 1005, 0, 2151, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 372, 0, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 1168,
	1005, 0, 1671, 0, 0, 373, 0, 0, 2161, 0,
	0, 0, 2716, 0, 0, 0, 0, 0, 0, 2170,
	2171, 0, 0, 0, 0, 2176, 450, 0, 0, 0,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 2189, 2190, 1005, 2192, 0, 0, 2193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2205, 0,
	0, 0, 617, 0, 0, 994, 993, 1003, 1004, 996,
	997, 998, 999, 1000, 1001, 1002, 995, 0, 0, 1005,
	0, 371, 361, 362, 0, 382, 0, 0, 0, 363,
	365, 0, 359, 381, 380, 0, 0, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 1184, 1185, 1186,
	1187, 1188, 1189, 629, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 0, 1169, 1170, 1171, 1172, 1148, 1152, 1182,
	1149, 1155, 1151, 1153, 1150, 374, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 0, 0, 0, 0, 0,
	0, 0, 123, 123, 123, 0, 0, 0, 0, 0,
	0, 0, 618, 0, 1846, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2311, 2312,
	2313, 0, 2315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 2333,
	2334, 2335, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 629, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 629, 0, 0, 1290,
	0, 1946, 1293, 1294, 1295, 0, 1297, 1298, 0, 0,
	1299, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	1301, 1302, 0, 1303, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2417, 2418,
	2419, 2420, 0, 0, 0, 0, 0, 0, 2424, 2425,
	617, 0, 629, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 629, 0, 629,
	0, 629, 0, 2043, 123, 123, 123, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2520, 0, 0, 0, 0, 0, 0, 2525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 2135, 450, 0, 0, 2122, 2140, 0, 0, 2124,
	0, 0, 0, 2144, 2145, 2563, 1154, 0, 483, 0,
	0, 0, 0, 123, 0, 0, 0, 2571, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 1385, 1385,
	0, 0, 0, 1385, 1385, 1385, 1385, 1385, 1385, 0,
	0, 1385, 0, 0, 0, 0, 1385, 1385, 1385, 1385,
	617, 1385, 1385, 1385, 0, 0, 0, 0, 0, 1385,
	1385, 1385, 0, 2203, 0, 1385, 1385, 0, 1385, 1385,
	2203, 2203, 2203, 618, 473, 0, 0, 0, 0, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2203, 0, 1385, 1385, 1385, 1385, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 123, 450, 1626, 0,
	0, 123, 123, 0, 0, 123, 1484, 1234, 618, 0,
	0, 0, 0, 0, 0, 1181, 1184, 1185, 1186, 1187,
	1188, 1189, 1234, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 0, 1169, 1170, 1171, 1172, 1148, 1152, 1182, 1149,
	1155, 1151, 1153, 1150, 0, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 0, 0, 0, 0, 0, 2732,
	2733, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 123, 123, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2325, 0, 0, 0, 0, 0,
	2203, 0, 0, 0, 0, 0, 0, 0, 1595, 1596,
	123, 0, 0, 2043, 0, 0, 0, 35, 0, 70,
	38, 39, 1183, 0, 0, 0, 0, 0, 2043, 0,
	0, 58, 0, 123, 0, 450, 0, 76, 0, 0,
	0, 40, 0, 0, 453, 454, 455, 456, 457, 461,
	462, 466, 467, 476, 475, 474, 477, 478, 481, 480,
	482, 458, 459, 460, 463, 464, 465, 468, 469, 472,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	2405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2469, 0, 0, 2692, 2695, 2691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1385,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 42,
	72, 45, 44, 47, 0, 0, 1385, 1385, 0, 0,
	0, 0, 0, 0, 0, 2470, 0, 1385, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 0, 0,
	0, 2043, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 618, 123, 123, 123, 123, 123, 0, 0, 0,
	0, 0, 0, 0, 450, 0, 617, 0, 123, 0,
	0, 0, 450, 56, 57, 0, 2471, 0, 123, 0,
	0, 0, 0, 0, 0, 35, 618, 70, 38, 39,
	65, 0, 66, 0, 35, 36, 70, 38, 39, 58,
	0, 0, 0, 0, 0, 76, 0, 0, 58, 40,
	0, 629, 0, 0, 76, 0, 0, 0, 40, 62,
	63, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 0, 0, 2472, 73, 0, 52, 53, 60, 0,
	61, 0, 0, 0, 0, 0, 2565, 79, 2568, 0,
	0, 0, 49, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2469, 0, 0, 0, 0, 2741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2043, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 72, 45,
	44, 47, 0, 0, 2203, 0, 42, 72, 45, 44,
	47, 71, 0, 2470, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	75, 74, 2568, 123, 0, 0, 46, 0, 48, 75,
	74, 0, 2652, 0, 1385, 46, 0, 0, 35, 0,
	70, 38, 39, 1385, 0, 1234, 0, 0, 0, 64,
	77, 0, 58, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 57, 0, 2471, 0, 0, 0, 0, 0,
	56, 57, 0, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 65, 0, 66,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2469, 0, 0, 0, 0, 2737,
	0, 2472, 73, 0, 52, 53, 60, 0, 61, 0,
	50, 73, 0, 52, 53, 60, 0, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 72, 45, 44, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2470, 0, 0, 0,
	0, 35, 0, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 48, 75, 74, 58, 0, 0, 0, 46,
	0, 76, 0, 0, 123, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 123, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 79, 56, 57, 0, 2471, 0, 0,
	0, 0, 0, 0, 0, 0, 35, 0, 70, 38,
	39, 65, 0, 66, 0, 0, 0, 2469, 77, 0,
	58, 0, 2726, 0, 123, 0, 76, 77, 0, 0,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2472, 73, 0, 52, 53, 60,
	0, 61, 0, 42, 72, 45, 44, 47, 79, 2697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2469, 0, 0, 48, 75, 74, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 72,
	45, 44, 47, 0, 0, 0, 0, 56, 57, 0,
	2471, 0, 71, 0, 2470, 0, 0, 0, 0, 35,
	0, 70, 38, 39, 65, 0, 66, 0, 0, 0,
	48, 75, 74, 58, 0, 0, 0, 46, 0, 76,
	0, 0, 0, 40, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 2472, 73, 0,
	52, 53, 60, 0, 61, 0, 0, 0, 0, 0,
	0, 79, 56, 57, 0, 2471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 65,
	0, 66, 0, 0, 0, 2469, 0, 0, 0, 0,
	2709, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2472, 73, 0, 52, 53, 60, 0, 61,
	0, 42, 72, 45, 44, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 2470, 0, 0,
	0, 0, 0, 0, 450, 0, 450, 0, 0, 0,
	0, 0, 0, 48, 75, 74, 0, 0, 0, 0,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 57, 0, 2471, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 65, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 2472, 73, 0, 52, 53,
	60, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 123, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 71, 0, 618, 0, 2534, 0, 0,
	0, 0, 0, 0, 0, 123, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 338, 259, 275, 295, 694, 267,
	686, 0, 77, 0, 0, 0, 0, 0, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 2537, 2538, 2539, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 660, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 632, 0, 1506, 1507, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 1791, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 338, 259,
	275, 295, 694, 267, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 660, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 632, 0, 1506, 1507, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 338, 259, 275, 295, 694, 267, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 660,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 2005, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 79, 0, 958, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 338, 259, 275, 295,
	694, 267, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 660, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 2006, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	338, 259, 275, 295, 694, 267, 686, 0, 0, 0,
	0, 0, 0, 2302, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 660, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 338, 259, 275, 295, 694, 267,
	686, 0, 0, 0, 0, 0, 0, 1941, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 660, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 779, 711, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 338, 259,
	275, 295, 694, 267, 686, 0, 0, 0, 0, 0,
	0, 1931, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 660, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 338, 259, 275, 295, 694, 267, 686, 0,
	0, 0, 0, 0, 0, 1485, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 660,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 338, 259, 275, 295,
	694, 267, 686, 0, 0, 0, 0, 0, 0, 1345,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 660, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 778, 755, 319, 703,
	781, 667, 689, 794, 692, 695, 736, 650, 716, 248,
	687, 651, 0, 671, 640, 680, 641, 668, 705, 173,
	666, 757, 719, 780, 206, 732, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 779, 711, 0, 788, 209,
	0, 728, 789, 307, 232, 0, 0, 707, 765, 714,
	753, 702, 738, 659, 727, 783, 688, 734, 784, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 731, 777, 683, 733, 735, 638,
	730, 0, 645, 652, 793, 772, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 706, 715, 747, 699,
	338, 259, 275, 295, 694, 267, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 280, 210, 327, 742, 776, 336, 690, 797, 345,
	350, 0, 712, 656, 304, 174, 0, 131, 0, 266,
	169, 202, 700, 737, 670, 161, 744, 726, 764, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 696, 292, 291,
	691, 193, 752, 729, 642, 274, 740, 198, 130, 316,
	353, 147, 204, 321, 634, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 682, 741, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 660, 644, 647,
	648, 649, 657, 708, 709, 721, 724, 762, 761, 760,
	763, 768, 791, 790, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 129, 138, 208,
	796, 273, 180, 341, 639, 171, 0, 710, 713, 723,
	745, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 743, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 770,
	778, 755, 319, 703, 781, 667, 689, 794, 692, 695,
	736, 650, 716, 248, 687, 651, 0, 671, 640, 680,
	641, 668, 705, 173, 666, 757, 719, 780, 206, 732,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 779,
	711, 0, 788, 209, 0, 728, 789, 307, 232, 0,
	0, 707, 765, 714, 753, 702, 738, 659, 727, 783,
	688, 734, 784, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 731, 777,
	683, 733, 735, 638, 730, 0, 645, 652, 793, 772,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	706, 715, 747, 699, 338, 259, 275, 295, 694, 267,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 280, 210, 327, 742, 776,
	336, 690, 797, 345, 350, 0, 712, 656, 304, 174,
	0, 131, 0, 266, 169, 202, 700, 737, 670, 161,
	744, 726, 764, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 696, 292, 291, 691, 193, 752, 729, 642, 274,
	740, 198, 130, 316, 353, 147, 204, 321, 634, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 682, 741, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 660, 644, 647, 648, 649, 657, 708, 709, 721,
	724, 762, 761, 760, 763, 768, 791, 790, 792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 129, 138, 208, 796, 273, 180, 341, 639, 171,
	0, 710, 713, 723, 745, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 743, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 770, 778, 755, 319, 703, 781, 667,
	689, 794, 692, 695, 736, 650, 716, 248, 687, 651,
	0, 671, 640, 680, 641, 668, 705, 173, 666, 757,
	719, 780, 206, 732, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 1517, 1521, 0, 788, 209, 0, 728,
	789, 307, 232, 0, 0, 707, 765, 714, 753, 702,
	738, 659, 727, 783, 688, 734, 784, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 731, 777, 683, 733, 735, 638, 730, 0,
	645, 652, 793, 772, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 706, 715, 747, 699, 338, 259,
	275, 295, 694, 267, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 1520, 197,
	348, 775, 698, 697, 1515, 0, 1516, 187, 207, 631,
	126, 140, 1513, 1519, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 280,
	210, 327, 742, 776, 336, 690, 797, 345, 350, 0,
	712, 656, 304, 174, 0, 131, 0, 266, 169, 202,
	700, 737, 670, 161, 744, 726, 764, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 696, 292, 291, 691, 193,
	752, 729, 642, 274, 740, 198, 130, 316, 353, 147,
	204, 321, 634, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 682, 741, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 660, 644, 647, 648, 649,
	657, 708, 709, 721, 724, 762, 761, 760, 763, 768,
	791, 790, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 129, 138, 208, 796, 273,
	180, 341, 639, 171, 0, 710, 713, 723, 745, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	743, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 770, 778, 755,
	319, 703, 781, 667, 689, 794, 692, 695, 736, 650,
	716, 248, 687, 651, 0, 671, 640, 680, 641, 668,
	705, 173, 666, 757, 719, 780, 206, 732, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 779, 711, 0,
	788, 209, 0, 728, 789, 307, 232, 0, 0, 707,
	765, 714, 753, 702, 738, 659, 727, 783, 688, 734,
	784, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 731, 777, 683, 733,
	735, 638, 730, 0, 645, 652, 793, 772, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 706, 715,
	747, 699, 338, 259, 275, 295, 694, 267, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 280, 210, 327, 742, 776, 336, 690,
	797, 345, 350, 0, 712, 656, 304, 174, 0, 131,
	0, 266, 169, 202, 700, 737, 670, 161, 744, 726,
	764, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 696,
	292, 291, 691, 193, 752, 729, 642, 274, 740, 198,
	130, 316, 353, 147, 204, 321, 634, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 682,
	741, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 660,
	644, 647, 648, 649, 657, 708, 709, 721, 724, 762,
	761, 760, 763, 768, 791, 790, 792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 129,
	138, 208, 796, 273, 180, 341, 639, 171, 0, 710,
	713, 723, 745, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 743, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 770, 778, 755, 319, 703, 781, 667, 689, 794,
	692, 695, 736, 650, 716, 248, 687, 651, 0, 671,
	640, 680, 641, 668, 705, 173, 666, 757, 719, 780,
	206, 732, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 779, 711, 0, 788, 209, 0, 728, 789, 307,
	232, 0, 0, 707, 765, 714, 753, 702, 738, 659,
	727, 783, 688, 734, 784, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	731, 777, 683, 733, 735, 638, 730, 0, 645, 652,
	793, 772, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 706, 715, 747, 699, 338, 259, 275, 295,
	694, 267, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 631, 126, 140,
	627, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 280, 210, 327,
	742, 776, 336, 690, 797, 345, 350, 0, 712, 656,
	304, 174, 0, 131, 0, 266, 169, 202, 700, 737,
	670, 161, 744, 726, 764, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 696, 292, 291, 691, 193, 752, 729,
	642, 274, 740, 198, 130, 316, 353, 147, 204, 321,
	634, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 682, 741, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 660, 644, 647, 648, 649, 657, 708,
	709, 721, 724, 762, 761, 760, 763, 768, 791, 790,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 129, 138, 208, 796, 273, 180, 341,
	639, 171, 0, 710, 713, 723, 745, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 743, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 770, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 173, 499, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 577, 209, 0, 0,
	479, 307, 232, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 0, 0, 1495, 0, 79, 0, 0,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	483, 525, 530, 559, 560, 1496, 0, 0, 497, 515,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 280,
	210, 327, 0, 0, 336, 0, 473, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 578,
	590, 584, 586, 585, 582, 583, 581, 580, 579, 592,
	568, 569, 570, 571, 572, 0, 0, 0, 575, 0,
	587, 588, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 539, 540, 544, 545, 553, 552, 551, 554, 555,
	557, 556, 558, 536, 537, 538, 541, 542, 543, 546,
	547, 550, 548, 549, 573, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 35, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 173,
	499, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 577, 209,
	0, 0, 479, 307, 232, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 483, 525, 530, 559, 560, 0, 0, 0,
	497, 515, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 280, 210, 327, 0, 0, 336, 0, 473, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 0, 0, 0,
	575, 0, 587, 588, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	77, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	173, 499, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 577,
	209, 0, 0, 479, 307, 232, 0, 0, 0, 0,
	564, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 500, 524, 523, 526, 527, 528,
	529, 0, 0, 483, 525, 530, 559, 560, 0, 0,
	0, 497, 515, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 512, 513, 493, 0, 0, 0, 591, 0,
	514, 0, 0, 509, 510, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 567,
	0, 0, 197, 348, 0, 0, 589, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	574, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	566, 0, 280, 210, 327, 0, 0, 336, 0, 473,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 568, 569, 570, 571, 572, 0, 0,
	0, 575, 0, 587, 588, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 539, 540, 544, 545, 553, 552,
	551, 554, 555, 557, 556, 558, 536, 537, 538, 541,
	542, 543, 546, 547, 550, 548, 549, 573, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 173, 499, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	577, 209, 0, 0, 479, 307, 232, 0, 0, 0,
	0, 564, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 958, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 483, 525, 530, 559, 560, 0,
	0, 0, 497, 515, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	567, 0, 0, 197, 348, 0, 0, 589, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 574, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 566, 0, 280, 210, 327, 0, 0, 336, 0,
	473, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 578, 590, 584, 586, 585, 582, 583,
	581, 580, 579, 592, 568, 569, 570, 571, 572, 0,
	0, 0, 575, 0, 587, 588, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 539, 540, 544, 545, 553,
	552, 551, 554, 555, 557, 556, 558, 536, 537, 538,
	541, 542, 543, 546, 547, 550, 548, 549, 573, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 173, 499, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 577, 209, 0, 0, 479, 307, 232, 0, 0,
	0, 0, 564, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 500, 524, 523, 526,
	527, 528, 529, 0, 0, 483, 525, 530, 559, 560,
	0, 0, 0, 497, 515, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 512, 513, 1383, 0, 0, 0,
	591, 0, 514, 0, 0, 509, 510, 511, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 567, 0, 0, 197, 348, 0, 0, 589, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 574, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 566, 0, 280, 210, 327, 0, 0, 336,
	0, 473, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 568, 569, 570, 571, 572,
	0, 0, 0, 575, 0, 587, 588, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 173, 499, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 577, 209, 0, 0, 479, 307, 232, 0,
	0, 0, 0, 564, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 500, 524, 1427,
	526, 527, 528, 529, 0, 0, 483, 525, 530, 559,
	560, 0, 0, 0, 497, 515, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 512, 513, 1383, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 567, 0, 0, 197, 348, 0, 0, 589,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 574, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 566, 0, 280, 210, 327, 0, 0,
	336, 0, 473, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 578, 590, 584, 586, 585,
	582, 583, 581, 580, 579, 592, 568, 569, 570, 571,
	572, 0, 0, 0, 575, 0, 587, 588, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 539, 540, 544,
	545, 553, 552, 551, 554, 555, 557, 556, 558, 536,
	537, 538, 541, 542, 543, 546, 547, 550, 548, 549,
	573, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 173, 499, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 577, 209, 0, 0, 479, 307, 232,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 500, 524,
	1424, 526, 527, 528, 529, 0, 0, 483, 525, 530,
	559, 560, 0, 0, 0, 497, 515, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 512, 513, 1383, 0,
	0, 0, 591, 0, 514, 0, 0, 509, 510, 511,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 567, 0, 0, 197, 348, 0, 0,
	589, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 574, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 566, 0, 280, 210, 327, 0,
	0, 336, 0, 473, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 568, 569, 570,
	571, 572, 0, 0, 0, 575, 0, 587, 588, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 539, 540,
	544, 545, 553, 552, 551, 554, 555, 557, 556, 558,
	536, 537, 538, 541, 542, 543, 546, 547, 550, 548,
	549, 573, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 173, 499, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 577, 209, 0, 0, 479, 307,
	232, 0, 0, 0, 0, 564, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 1270, 0, 500,
	524, 523, 526, 527, 528, 529, 0, 0, 483, 525,
	530, 559, 560, 0, 0, 0, 497, 515, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 259, 275, 295,
	0, 267, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 0, 591, 0, 514, 0, 0, 509, 510,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 567, 0, 0, 197, 348, 0,
	0, 589, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 574, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 566, 0, 280, 210, 327,
	0, 0, 336, 0, 473, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 578, 590, 584,
	586, 585, 582, 583, 581, 580, 579, 592, 568, 569,
	570, 571, 572, 0, 0, 0, 575, 0, 587, 588,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 539,
	540, 544, 545, 553, 552, 551, 554, 555, 557, 556,
	558, 536, 537, 538, 541, 542, 543, 546, 547, 550,
	548, 549, 573, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 173, 499, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 577, 209, 0, 0, 479,
	307, 232, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	500, 524, 523, 526, 527, 528, 529, 0, 0, 483,
	525, 530, 559, 560, 0, 0, 0, 497, 515, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 0, 591, 0, 514, 0, 0, 509,
	510, 511, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 567, 0, 0, 197, 348,
	0, 0, 589, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 574, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 566, 0, 280, 210,
	327, 0, 0, 336, 0, 473, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 568,
	569, 570, 571, 572, 0, 0, 0, 575, 0, 587,
	588, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	539, 540, 544, 545, 553, 552, 551, 554, 555, 557,
	556, 558, 536, 537, 538, 541, 542, 543, 546, 547,
	550, 548, 549, 573, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 577, 209, 0, 0,
	479, 307, 232, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	483, 525, 530, 559, 560, 0, 0, 0, 0, 515,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 280,
	210, 327, 0, 0, 336, 0, 473, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 578,
	590, 584, 586, 585, 582, 583, 581, 580, 579, 592,
	568, 569, 570, 571, 572, 1430, 1431, 1432, 575, 0,
	587, 588, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 539, 540, 544, 545, 553, 552, 551, 554, 555,
	557, 556, 558, 536, 537, 538, 541, 542, 543, 546,
	547, 550, 548, 549, 573, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 577, 209, 0,
	0, 479, 307, 232, 0, 0, 0, 0, 564, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 500, 524, 523, 526, 527, 528, 529, 0,
	0, 483, 525, 530, 559, 560, 0, 0, 0, 0,
	515, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	512, 513, 0, 0, 0, 0, 591, 0, 514, 0,
	0, 509, 510, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 567, 0, 0,
	197, 348, 0, 0, 589, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 574, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 566, 2719,
	280, 210, 327, 0, 0, 336, 0, 473, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 568, 569, 570, 571, 572, 0, 0, 0, 575,
	0, 587, 588, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 539, 540, 544, 545, 553, 552, 551, 554,
	555, 557, 556, 558, 536, 537, 538, 541, 542, 543,
	546, 547, 550, 548, 549, 573, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 577, 209,
	0, 0, 479, 307, 232, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 958, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 483, 525, 530, 559, 560, 0, 0, 0,
	0, 515, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 280, 210, 327, 0, 0, 336, 0, 473, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 0, 0, 0,
	575, 0, 587, 588, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 577,
	209, 0, 0, 479, 307, 232, 0, 0, 0, 0,
	564, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 500, 524, 523, 526, 527, 528,
	529, 0, 0, 483, 525, 530, 559, 560, 0, 0,
	0, 0, 515, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 512, 513, 0, 0, 0, 0, 591, 0,
	514, 0, 0, 509, 510, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 567,
	0, 0, 197, 348, 0, 0, 589, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	574, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	566, 0, 280, 210, 327, 0, 0, 336, 0, 473,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 568, 569, 570, 571, 572, 0, 0,
	0, 575, 0, 587, 588, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 539, 540, 544, 545, 553, 552,
	551, 554, 555, 557, 556, 558, 536, 537, 538, 541,
	542, 543, 546, 547, 550, 548, 549, 573, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 479, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1475, 1477, 0,
	0, 0, 0, 0, 0, 124, 0, 452, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 1476, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 280, 210, 327, 0, 0, 336, 0,
	473, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 454, 455, 456, 457, 461, 462, 466, 467, 476,
	475, 474, 477, 478, 481, 480, 482, 458, 459, 460,
	463, 464, 465, 468, 469, 472, 470, 471, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 1473, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 479, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1475, 1477,
	0, 0, 0, 0, 0, 0, 124, 0, 452, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 1471, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 1476, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 0, 0, 336,
	0, 473, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 454, 455, 456, 457, 461, 462, 466, 467,
	476, 475, 474, 477, 478, 481, 480, 482, 458, 459,
	460, 463, 464, 465, 468, 469, 472, 470, 471, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 980, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 479, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 984,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 0, 977, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	978, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 280, 210, 327, 0, 0,
	336, 0, 473, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 461, 462, 466,
	467, 476, 475, 474, 477, 478, 481, 480, 482, 458,
	459, 460, 463, 464, 465, 468, 469, 472, 470, 471,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 479, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	452, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	0, 336, 0, 473, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 454, 455, 456, 457, 461, 462,
	466, 467, 476, 475, 474, 477, 478, 481, 480, 482,
	458, 459, 460, 463, 464, 465, 468, 469, 472, 470,
	471, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 447, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 1768, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 479, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 452, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 259, 275, 295,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 280, 210, 327,
	0, 0, 336, 0, 473, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 453, 454, 455, 456, 457, 461,
	462, 466, 467, 476, 475, 474, 477, 478, 481, 480,
	482, 458, 459, 460, 463, 464, 465, 468, 469, 472,
	470, 471, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 479,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 452, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 280, 210,
	327, 0, 0, 336, 0, 473, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 454, 455, 456, 457,
	461, 462, 466, 467, 476, 475, 474, 477, 478, 481,
	480, 482, 458, 459, 460, 463, 464, 465, 468, 469,
	472, 470, 471, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	479, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 981, 0, 984, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 280,
	210, 327, 0, 0, 336, 0, 473, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 454, 455, 456,
	457, 461, 462, 466, 467, 476, 475, 474, 477, 478,
	481, 480, 482, 458, 459, 460, 463, 464, 465, 468,
	469, 472, 470, 471, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 479, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	280, 210, 327, 0, 0, 336, 0, 473, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 454, 455,
	456, 457, 461, 462, 466, 467, 476, 475, 474, 477,
	478, 481, 480, 482, 458, 459, 460, 463, 464, 465,
	468, 469, 472, 470, 471, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 425, 319,
	419, 430, 413, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 420, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 479,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 0, 0, 434, 0, 433, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 411, 414, 0, 0, 0, 185, 233, 142, 0,
	0, 418, 197, 348, 0, 0, 0, 269, 1140, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 422, 289,
	0, 0, 426, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 280, 210, 327, 473, 429, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 439, 294, 323, 149, 311, 415, 416, 417, 423,
	424, 427, 428, 431, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 454, 455, 456, 457,
	461, 462, 466, 467, 476, 475, 474, 477, 478, 481,
	480, 482, 458, 459, 460, 463, 464, 465, 468, 469,
	472, 470, 471, 0, 0, 0, 0, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 421, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	425, 319, 419, 430, 413, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 405, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 420, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 479, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1198, 0, 0, 0, 434, 0, 433, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 411, 414, 0, 0, 0, 185, 233,
	142, 0, 0, 418, 197, 348, 0, 0, 0, 269,
	1140, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	422, 289, 0, 0, 426, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 473, 429, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 408, 294, 323, 149, 311, 415, 416,
	417, 423, 424, 427, 428, 431, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 454, 455,
	456, 457, 461, 462, 466, 467, 476, 475, 474, 477,
	478, 481, 480, 482, 458, 459, 460, 463, 464, 465,
	468, 469, 472, 470, 471, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 421, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 479, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 2124, 307, 232, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 473, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 453, 454, 455, 456, 457, 461, 462, 466, 467,
	476, 475, 474, 477, 478, 481, 480, 482, 458, 459,
	460, 463, 464, 465, 468, 469, 472, 470, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 2644, 0, 0,
	0, 0, 0, 0, 173, 2642, 479, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 2133, 307, 232,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 473, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 2643, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 461, 462, 466,
	467, 476, 475, 474, 477, 478, 481, 480, 482, 458,
	459, 460, 463, 464, 465, 468, 469, 472, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 35, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 479, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 1468, 209, 0, 0, 2131,
	307, 232, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 473, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 453, 454, 455, 456, 457, 461,
	462, 466, 467, 476, 475, 474, 477, 478, 481, 480,
	482, 458, 459, 460, 463, 464, 465, 468, 469, 472,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 77, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 434, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 1130,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 280, 210, 327, 0, 0, 336, 0, 0, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 2110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 259, 275, 295, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 1099, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 338, 259, 275, 295, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 595, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 0, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 338, 259, 275, 295,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 0,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 338, 259, 275,
	295, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 121, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 338, 259,
	275, 295, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 338,
	259, 275, 295, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 259, 275, 295, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 280, 210, 327, 0, 0, 336, 0, 0, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 338, 259, 275, 295, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 615, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 611, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 616,
	614, 605, 606, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	612, 613, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 338, 259, 275, 295, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 1124, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 338, 259, 275, 295, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 602, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 615, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 611, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 616, 614, 605, 606, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 35, 0, 70, 38, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	129, 138, 208, 76, 273, 180, 341, 40, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 612, 613, 270, 79, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 0, 0, 0, 0, 0, 2469,
	0, 0, 0, 35, 2638, 70, 38, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 72, 45, 44, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2470, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 0, 0, 0, 0, 2469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	57, 0, 2471, 0, 0, 42, 72, 45, 44, 47,
	0, 0, 0, 0, 0, 0, 65, 0, 66, 0,
	0, 2470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2472,
	73, 0, 52, 53, 60, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	57, 0, 2471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 65, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2472,
	73, 0, 52, 53, 60, 0, 61, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77,
}

var yyPact = [...]int{
	4358, -1000, -301, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1796, -1000, -1000, -1000, -1000, -1000,
	-1000, 947, 280, -1000, 267, 125, 28838, 630, 3034, 29800,
	-1000, -1000, -1000, 190, 498, 29800, 376, 415, 1230, 1671,
	1229, 58, -40, -43, 147, 22584, 22102, -1000, 1852, 1855,
	-1000, -1000, 535, 63, -1000, -1000, -1000, 19696, 203, -1000,
	-1000, 1783, 1794, 1601, -1000, 12962, 535, 535, 28357, 31724,
	-1000, 1827, 29800, 11517, -1000, 622, 29800, -141, 516, 516,
	330, 516, 516, 629, -1000, 874, -1000, -1000, -1000, -1000,
	29800, 25471, 525, 29319, 525, 525, 525, 525, 525, 525,
	525, 29800, -1000, 690, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 29800, 1224, 1696, 912,
	154, -1000, -1000, -1000, 901, -1000, 310, 301, 294, 289,
	121, 918, 1780, -1000, 1472, 1783, 1783, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 326, 572, 217, 203, 873, -1000,
	1695, 1692, 1140, 1691, 502, 1689, 1521, -16, -1000, 1223,
	29800, -1000, -1000, 1093, 1092, 1556, 1447, 632, 1546, -1000,
	-1000, 345, 552, 1514, 401, 1514, 1514, 1514, 1514, 1514,
	-61, 1514, 1514, 1514, 79, 1514, 163, 1514, 1514, 1514,
	1514, 1514, 1234, -1000, -1000, -1000, 356, 1428, 1453, 1542,
	-1000, 1553, 1771, 628, -1000, -75, 1461, 20658, -1000, 1472,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1241, 1693, 1041, 15848, 1642, -1000,
	-1000, 981, 1834, -1000, 19215, 686, -1000, 15848, 2962, 1472,
	-1000, -1000, 1472, -1000, -1000, -1000, 656, -1000, -1000, 17772,
	17772, 17772, 17772, 17772, 17772, 17772, 17772, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, -1000,
	-1000, 1472, -1000, 12481, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 15848, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 27876, 25952, 29800, 1441, 1437, -1000, -1000,
	685, 1469, -48, 31243, -1000, -1000, -1000, -1000, 30281, 24990,
	844, -1000, -1000, -1000, -1000, 1688, -1000, -1000, 681, -1000,
	1796, -1000, -1000, 1373, 358, -1000, 3705, 22580, -1000, -1000,
	-1000, 1520, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29319, 1754,
	575, 1221, 902, 1219, 1218, 1217, 25471, 25471, 516, 1207,
	1468, 558, 1467, 557, 1232, 29800, 1721, 1541, 29800, 1204,
	1203, 1202, 1201, 25471, 25471, -1000, 11033, -1000, -1000, 912,
	-1000, 1146, 15848, 516, 516, 29800, 29800, 29800, 29800, -1000,
	-1000, 912, 912, -1000, 912, 896, 1831, 896, -1000, 896,
	-1000, -1000, 15848, -1000, 17772, 24509, 717, -1000, -1000, -1000,
	1200, 322, -1000, -1000, -1000, -1000, -1000, -1000, 1199, 502,
	502, -1000, 1145, 502, 1456, -1000, 839, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 502,
	-1000, 15367, -299, -1000, -1000, 1465, -1000, 263, -1000, -1000,
	495, 495, 187, 25471, 25471, 25471, -1000, 1514, 29319, -1000,
	1514, 1514, 1514, -67, 1514, 1514, -1000, -1000, 1514, -1000,
	-1000, -1000, -1000, -1000, 1514, -1000, -1000, -1000, 1514, 1514,
	-1000, 1514, 1514, -1000, -1000, -1000, -1000, -1000, 25471, 495,
	170, 1463, 495, 25471, 25471, 1601, -1000, -1000, 203, -1000,
	-1000, 29800, -87, 20658, 1461, 1745, 9581, -1000, -1000, -1000,
	1846, 781, 1449, -1000, -1000, 1459, -1000, 950, 678, 1080,
	1611, -1000, -1000, -1000, 29800, -1000, 15848, 15848, 1016, -1000,
	21139, -1000, -1000, -1000, -1000, 9097, 760, 17772, 1018, 762,
	17772, 17772, 17772, 17772, 17772, 17772, 17772, 17772, 17772, 17772,
	17772, 17772, 17772, 17772, 17772, 1087, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1198, -1000, 203, 1155, 1155, 698,
	698, 698, 698, 698, 698, 698, 23065, 1749, 13924, 13924,
	13924, 1749, 1241, 1241, 13924, 13924, 13924, 13924, 13924, 13924,
	1749, 1749, 13924, 1241, 1241, 1241, 1241, 13924, 13924, 13924,
	13924, 1749, 13924, 13924, 13924, 1749, 1241, 1354, 880, 12481,
	13924, 13924, 13924, 1241, 15848, 15848, 14886, 14405, 16329, 13924,
	13924, 1749, 884, 880, 30281, -1000, -1000, 17291, -1000, -1000,
	-1000, -1000, -1000, 1241, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29319, 29319, 13924, 13924, 13924, 13924, 766, 29800,
	-1000, 1419, 1486, -1000, -1000, -1000, 1735, 24028, 18734, -1000,
	766, 1394, 25952, 29800, -1000, -1000, 25952, 29800, 8613, 30762,
	1448, -1000, -101, -95, -48, -1000, -1000, 689, -1000, -1000,
	-1000, 11999, -1000, 10065, 1783, 1601, 6193, 10549, -1000, 22580,
	1520, -1000, -25, -1000, -1000, -1000, 1501, -1000, 1501, 293,
	20, 1501, 1501, 1501, 1501, 1501, 23, 23, 23, 23,
	21, -1000, -1000, -1000, -1000, -1000, 1519, 1518, -1000, 1501,
	1501, 1501, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1508, 298, 1503, 1503, 1503, 1503, 1503, 367, 367,
	-1000, 15848, 1523, -1000, 29800, -1000, 1713, -1000, 274, 1517,
	1415, -1000, 166, 1376, 29800, -1000, 29800, 29800, 25471, 25471,
	25471, 596, -1000, 29800, 1458, -1000, -1000, -1000, -1000, -1000,
	1418, -1000, 1376, -1000, -1000, -1000, -1000, -1000, 880, 1192,
	1191, -1000, -1000, -1000, 899, -1000, -1000, -1000, 912, 29800,
	29800, 29800, 1728, 912, 880, 614, 1524, 1472, 1241, -1000,
	-1000, 1190, -1000, 1456, 1456, -1000, 1456, 502, 1155, 1456,
	-1000, 1346, 1714, 1144, 29800, -1000, 20658, -17, -1000, -119,
	27395, -1000, -1000, -1000, 27395, -1000, 79, 169, -1000, 556,
	-1000, 1344, -1000, -1000, -1000, -1000, 1514, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27395, 113, 168, 27395,
	1418, 1830, 1749, 1241, 383, -1000, -1000, -1000, 1472, 1302,
	677, -1000, 1594, 1041, 1041, 15848, -1000, -1000, -1000, 10065,
	1770, -1000, 1623, 1621, 1570, -1000, -1000, 760, 954, -1000,
	-1000, 982, -1000, -1000, -1000, -1000, 676, 1472, -1000, 3083,
	-1000, -1000, -1000, -1000, 1018, 17772, 17772, 17772, 614, 3083,
	3204, 875, 835, 698, 722, 722, 708, 708, 708, 708,
	708, 758, 758, -1000, -1000, -1000, 1241, -1000, -1000, -1000,
	13924, 1313, -1000, -1000, 880, 675, 1313, 1313, 13924, -157,
	-157, 1241, 1313, 1313, 1313, 1241, 1313, 13924, 13924, 1313,
	-157, -157, -157, -157, 1313, 1313, 1313, 1313, 13924, 1313,
	1313, 1313, 13924, -1000, 15848, -1000, 1241, 1313, 1313, 1313,
	-1000, 939, 1099, 798, 1829, 1313, 693, 1828, 1313, 958,
	17772, 17772, 17772, 1313, 1313, 13924, 927, -1000, 15848, 1241,
	-1000, 1311, 1455, 1451, 1313, 1241, 1450, 1313, 1313, 199,
	1472, -1000, 10065, 25952, 25952, 25952, 25952, 25952, -1000, 1585,
	1584, -1000, 1572, 1569, 1593, 20658, 1342, 1241, 254, 24028,
	-1000, 1472, -1000, 20177, 633, 618, 594, 578, 1804, 25952,
	1377, -1000, 1377, -1000, 669, -1000, -1000, 30281, -48, -122,
	-1000, -1000, 1448, -1000, 1103, -1000, -1000, 880, -1000, 666,
	1693, 1749, 1443, 5709, -1000, -1000, -1000, -1000, 358, -1000,
	-1000, -1000, 1509, 22098, -1000, 1649, 684, 701, 1164, 1641,
	-1000, -1000, 329, -27, -1000, -1000, 1090, 23, 23, 1501,
	1501, 291, 1501, -1000, 23, -1000, -1000, -1000, 689, 1681,
	689, 689, 689, 689, 23, 1143, 1143, -1000, -1000, -1000,
	-1000, 1075, -1000, 1508, -1000, 1067, -1000, -1000, -1000, -1000,
	-1000, -1000, 1069, 1537, 29319, 203, 1727, -1000, 1810, -1000,
	-1000, 564, 80, 25471, 174, 368, 208, -1000, 555, -1000,
	554, -1000, -1000, -1000, -1000, -1000, -1000, 29800, 25471, -1000,
	-1000, 1804, 1189, 1185, -1000, -1000, -1000, 896, 912, 1674,
	-1000, -1000, 17772, 25471, -1000, 270, -1000, -1000, -1000, -1000,
	766, 597, -1000, -1000, -60, -1000, -1000, 553, 661, 660,
	550, -1000, 94, 25471, -1000, 29319, -1000, 1824, 1823, 111,
	1815, 25471, 1611, -1000, 1442, -1000, 642, 619, 651, 493,
	493, -1000, 792, 493, 757, -1000, 196, -1000, 9581, 9581,
	1605, -1000, -1000, -1000, 29800, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8129, 13924, -1000, 614, 3083, 3110,
	-1000, 17772, -1000, 1313, 13924, -157, 7645, -157, -157, 1313,
	-1000, 26914, -1000, -157, -157, -157, -157, -157, -157, 1313,
	1313, -157, -1000, -1000, -1000, -1000, -157, -157, -157, -157,
	1313, -157, -157, -157, 1241, 880, -1000, -1000, -1000, -1000,
	346, 1087, 346, 17772, 17772, -1000, 17772, 17772, -1000, -1000,
	17772, 3249, 3160, 3132, -195, -1000, 1445, 846, -1000, 15848,
	1036, -1000, -1000, 17772, 17772, -1000, -1000, -1000, -1000, 1535,
	10065, 1472, 6677, -1000, 29319, 1409, -1000, 825, 815, 1486,
	1507, 1530, 1328, -1000, -1000, -1000, -1000, 1579, -1000, 1578,
	-1000, -1000, 1490, -1000, -1000, 1438, 1472, 29319, 17772, 633,
	-1000, 1472, 1472, 1472, 1796, 15848, 1377, -1000, -1000, 715,
	-1000, -1000, -88, -102, -1000, -1000, -1000, 9581, -1000, 6193,
	-1000, 6193, -1000, 21620, 522, 1651, 352, -1000, 1164, -1000,
	-1000, 1164, -1000, -1000, -1000, 1504, -1000, 975, -1000, -1000,
	-1000, -1000, -1000, 17772, 1845, -1000, 1648, -1000, 1643, 1142,
	-1000, -1000, 1299, 689, 689, 23, -1000, -1000, 1501, -1000,
	689, -1000, 755, -1000, -1000, -1000, -1000, 689, 1309, -1000,
	1307, 1431, -1000, 1304, 115, 29800, -1000, -1000, -1000, 1529,
	-1000, -1000, -1000, 1293, 1426, -1000, 3705, 1177, 1176, 1175,
	-201, 243, -1000, 25471, 149, 166, 379, 1174, 29800, 25471,
	-1000, -1000, -1000, -1000, -1000, 912, -1000, 17772, 3083, 1376,
	-1000, -1000, 23, 29800, -1000, 25471, 714, 26433, 25471, 108,
	165, -1000, 25471, 25471, 1813, 25471, 1418, 1570, 383, 3757,
	1164, 623, -1000, -1000, 365, -1000, 2718, 1641, 1173, 24007,
	23525, 29319, 1638, 1636, 1172, 29800, 29319, -1000, -1000, 23044,
	1171, 15848, -1000, 29319, 29319, 655, -1000, -1000, -1000, 1408,
	12962, -1000, -1000, 1241, -1000, 17772, 3083, -157, -1000, -1000,
	-1000, -1000, 650, -1000, -1000, -157, -1000, -1000, 1170, -1000,
	-1000, -1000, -1000, -1000, -1000, -157, -157, -1000, -1000, -1000,
	-1000, -1000, -157, -1000, -1000, -1000, -1000, 1241, 1501, 1501,
	-1000, 1501, 1503, -1000, 1501, 46, 1501, 45, 1241, 1241,
	3031, 2850, 2764, 2362, 1311, 17772, 17772, 17772, 1472, -153,
	-1000, 880, 15848, 2297, 2282, -1000, 1705, 1274, 1417, -1000,
	-1000, 13443, 1241, 1618, 1302, -1000, 19696, 1298, -1000, 1796,
	10065, 15848, 15848, -1000, -1000, 15848, 1502, -1000, 15848, -1000,
	-1000, -1000, -1000, 29319, 252, -1000, 15848, 1298, 776, -1000,
	29319, 29319, 29319, 1783, 880, -1000, -1000, -1000, -1000, 5709,
	-1000, 1296, -1000, 1501, 1501, 1635, -1000, 684, -1000, -1000,
	-1000, 29319, -1000, 3083, -80, -1000, -1000, -1000, -1000, -1000,
	-1000, 689, -1000, -1000, -1000, -1000, -1000, 23, 1138, 23,
	1063, -1000, 1062, -1000, -1000, -247, 1499, -1000, 203, 29800,
	179, 564, -1000, 3705, 3705, 3705, 110, 116, -1000, 968,
	-1000, -1000, -1000, 1136, 1134, 1133, 1376, 178, 957, 155,
	-1000, 1730, -1000, -1000, -1000, 3083, -37, -1000, 165, -1000,
	-1000, -1000, 165, -1000, -1000, 160, 1418, 1418, 25471, 1418,
	-1000, -1000, 23044, 341, 3705, 3705, 1523, 684, 1629, 352,
	-1000, -1000, -1000, -1000, -1000, -1000, 1169, -1000, 672, -1000,
	547, 341, 23044, 880, 764, 1712, 9581, 1800, 25952, -1000,
	-1000, -1000, 3083, -1000, 7161, -1000, 756, -1000, -1000, -1000,
	-1000, -1000, -1000, 297, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17772, 17772, 17772, 17772, -1000, 1311, 1311, 1311,
	17772, 1241, 1128, 880, 17772, 17772, 1628, -1000, 1472, -1000,
	-1000, 1472, 195, -1000, 29319, 1783, -1000, 880, 880, 880,
	29319, 880, 1292, -1000, 1472, 18253, -1000, 20658, 1290, 1290,
	1290, -1000, 613, 21620, 1710, 1710, -1000, 1164, -1000, 1288,
	-1000, -1000, 689, -1000, 689, 1261, 1259, -1000, 21620, -1000,
	1779, -1000, 179, -1000, 1127, 225, 230, -1000, 223, 222,
	221, 219, 213, -1000, -1000, -1000, -1000, 391, 110, -1000,
	-47, 1059, 800, 1678, 116, -1000, 1058, 1052, 1031, 1020,
	256, -1000, -1000, -1000, -1000, 204, 166, -1000, 378, 1126,
	1664, 1660, 1726, 1726, 107, 1418, 1323, 1257, -1000, -1000,
	1167, -1000, -1000, 1497, 1164, 1492, -1000, 1163, -1000, -1000,
	29319, -1000, 341, 1701, 1700, 1472, -1000, 1798, 1793, 1377,
	12962, -1000, -1000, 1796, 1791, -1000, -1000, 1311, 1311, 1311,
	1311, -1000, -1000, -1000, 132, -1000, -1000, 1311, 1311, 1844,
	-1000, 1417, 1472, -1000, 203, -1000, -1000, 1282, -1000, 29319,
	-1000, -1000, 633, -1000, -1000, -1000, 613, -1000, 1154, 792,
	1124, -1000, -1000, -1000, -1000, 333, -1000, -1000, -1000, -1000,
	1280, -1000, 264, 32217, -1000, -1000, -1000, -1000, -1000, -1000,
	1670, 1669, 235, -1000, 1123, 1122, -1000, 364, 1107, 692,
	-164, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 377, 1152, -1000, 152, -1000, -1000, 531, 1644,
	1654, 1790, -1000, 25471, -1000, -1000, 25952, -1000, -1000, 329,
	329, 21620, 1523, 21620, -1000, -1000, -1000, 17772, -1000, 751,
	-161, 15848, 15848, 1800, -1000, 752, 15848, -1000, -1000, -1000,
	-1000, 1241, 172, -220, -1000, -1000, 10065, 1417, 1241, -1000,
	-1000, -1000, -1000, -1000, 994, -1000, 29800, 613, 249, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15848,
	15848, 5225, 32217, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 993, -1000, -1000, 1096, 360, 127, -1000, 1725, -1000,
	1490, 988, 1660, 1788, 1658, 1656, -1000, 1119, -210, 1377,
	1277, 1489, 1256, 3083, 1248, -1000, 29319, -1000, 29319, -1000,
	880, 1416, -1000, 880, 1798, -1000, 1241, 209, 209, 1412,
	-1000, 1604, -198, -225, 1410, -1000, -1000, 1479, -1000, 613,
	242, -1000, 845, 1027, 197, 186, 3116, -1000, -1000, -1000,
	-1000, -302, -1000, 135, -1000, 134, -1000, -1000, -1000, 1118,
	-1000, 1663, -1000, 1116, -1000, 1786, 1785, -1000, 167, 1800,
	613, 21620, 613, -1000, 751, 1615, 1399, -1000, 1724, 15848,
	-161, -1000, -1000, 212, -1000, 743, 246, 741, -1000, 1155,
	-1000, -1000, 1597, -1000, 29319, -1000, 1150, 1149, 926, -1000,
	15848, 32217, 1778, 1777, 1764, 1699, 9581, 32127, -1000, -1000,
	-1000, -1000, -1000, 1114, 1019, 23546, 1798, -1000, 1245, -1000,
	-1000, 299, 29319, 1472, -1000, -1000, 923, -1000, -1000, -1000,
	-1000, -1000, 29319, -212, 1239, 320, -1000, -1000, 886, 32217,
	-1000, 1002, -303, 411, 203, 584, 17772, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 97, 1376, -161, 613, 275, -1000,
	-1000, 212, -1000, -222, 1528, -1000, -1000, -1000, -1000, -1000,
	-1000, 32217, -1000, -305, 32217, 4121, -1000, -1000, -1000, 4760,
	-1000, -1000, -1000, -1000, 184, -1000, -1000, 3083, 25471, -1000,
	-1000, 1472, -1000, -228, 1527, 1526, 1822, -1000, -306, 4913,
	-309, 515, 32217, 851, -1000, 15848, -1000, 584, -1000, 1376,
	16810, -1000, -1000, 1842, -1000, 1836, 501, 501, 4685, 881,
	32217, -1000, -313, 507, 32217, -1000, 952, -1000, 1311, 1241,
	-1000, -1000, -1000, 340, 1097, -1000, -1000, -1000, 4532, -1000,
	-317, 32217, -1000, -1000, -1000, -1000, -1000, 506, 4349, -318,
	-1000, 500, 32217, -1000,
}

var yyPgo = [...]int{
	0, 2187, 2186, 32, 2185, 199, 2183, 2180, 2179, 21,
	19, 14, 23, 2177, 1948, 1944, 1942, 1940, 1938, 2168,
	96, 2167, 2166, 1936, 2165, 2163, 1917, 1915, 1912, 1910,
	2162, 2161, 2159, 1896, 1894, 13, 2157, 18, 2156, 4,
	154, 180, 2151, 3, 2150, 2148, 12, 2147, 2146, 1890,
	2145, 2144, 2142, 105, 2141, 1888, 1885, 2137, 1875, 1873,
	2136, 2134, 1867, 1865, 1862, 2133, 175, 2132, 2128, 2127,
	153, 109, 156, 2125, 2118, 2117, 114, 86, 1779, 122,
	52, 112, 606, 2114, 34, 49, 194, 2113, 148, 158,
	2110, 166, 2109, 152, 98, 106, 2108, 2107, 174, 2106,
	2104, 2103, 141, 2102, 2101, 89, 2100, 2098, 162, 2097,
	65, 51, 40, 2096, 2094, 2093, 2092, 2091, 29, 405,
	2090, 2089, 151, 2088, 2086, 88, 2085, 2084, 176, 2082,
	2081, 2076, 144, 39, 2074, 2073, 47, 2072, 63, 77,
	2071, 43, 2070, 142, 2069, 2065, 41, 30, 2060, 68,
	2058, 53, 2057, 143, 160, 349, 2056, 16, 25, 17,
	2055, 27, 9, 8, 46, 66, 78, 137, 107, 2050,
	31, 42, 123, 104, 97, 44, 2044, 163, 2043, 94,
	164, 138, 140, 161, 2041, 2040, 2039, 1091, 2038, 134,
	84, 2037, 121, 914, 179, 119, 2036, 100, 2033, 2032,
	2031, 92, 116, 2030, 2029, 50, 35, 650, 1909, 26,
	165, 2026, 48, 2025, 2024, 2022, 2868, 117, 67, 110,
	2020, 115, 45, 56, 2019, 2018, 2017, 2016, 2015, 2014,
	183, 2013, 2011, 2010, 2009, 108, 76, 2006, 2000, 135,
	126, 1998, 1996, 1994, 1987, 131, 81, 159, 1986, 118,
	139, 127, 1984, 75, 1982, 1981, 62, 55, 1980, 1979,
	1978, 103, 95, 1977, 64, 38, 36, 71, 11, 87,
	83, 1976, 28, 1975, 2, 5, 10, 1974, 1972, 1971,
	1969, 1968, 1967, 1966, 90, 1965, 1964, 61, 1962, 1961,
	1957, 37, 1956, 1955, 1954, 150, 125, 80, 167, 99,
	7, 1953, 1946, 6, 1933, 130, 1930, 60, 1925, 57,
	1922, 1920, 58, 1908, 1906, 59, 1903, 1898, 170, 1575,
	2681, 1892, 169, 155, 54, 93, 1883, 1879, 0, 1330,
	171, 168, 1877, 1869,
}

var yyR1 = [...]int{
	0, 327, 327, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 87, 86, 86, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 330, 330, 100, 100, 98, 98, 99, 99,
	172, 172, 12, 12, 12, 177, 177, 182, 182, 182,
	185, 185, 185, 185, 163, 164, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 301, 301,
	310, 310, 310, 311, 311, 309, 309, 309, 309, 309,
	313, 313, 314, 314, 312, 312, 312, 312, 316, 316,
	317, 317, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 304, 304, 304, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	319, 319, 320, 320, 321, 321, 322, 322, 322, 322,
	323, 323, 323, 323, 323, 324, 324, 324, 324, 324,
	324, 324, 325, 325, 326, 326, 2, 282, 282, 283,
	283, 284, 284, 284, 284, 285, 285, 286, 286, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 24,
	204, 204, 303, 303, 303, 297, 297, 297, 299, 299,
	298, 298, 298, 300, 300, 305, 305, 305, 305, 305,
	307, 307, 307, 307, 307, 307, 308, 308, 308, 306,
	306, 47, 47, 48, 48, 48, 152, 152, 152, 13,
	13, 13, 13, 13, 19, 21, 21, 36, 36, 37,
	22, 22, 22, 22, 38, 38, 39, 25, 25, 25,
	25, 25, 25, 45, 45, 45, 44, 44, 43, 43,
	43, 43, 43, 43, 23, 23, 23, 23, 46, 46,
	41, 41, 40, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 26, 26, 26, 26, 26,
	26, 18, 281, 281, 281, 35, 35, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 51, 258, 259, 259,
	259, 259, 259, 259, 259, 259, 246, 246, 247, 223,
	223, 223, 223, 223, 223, 223, 223, 222, 222, 222,
	222, 226, 226, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 225, 225, 225, 225, 225, 225, 225,
	225, 227, 227, 227, 227, 227, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 229, 229, 229, 229, 229, 229, 229, 229, 245,
	245, 230, 230, 239, 239, 240, 240, 240, 237, 237,
	238, 238, 233, 234, 241, 235, 235, 235, 236, 236,
	236, 244, 244, 244, 244, 231, 248, 248, 268, 268,
	267, 267, 266, 266, 266, 257, 257, 263, 263, 263,
	263, 263, 263, 263, 252, 252, 252, 251, 251, 253,
	253, 256, 256, 265, 265, 264, 264, 249, 249, 249,
	269, 269, 269, 269, 269, 250, 250, 250, 250, 270,
	254, 254, 255, 255, 255, 275, 276, 274, 274, 274,
	274, 274, 115, 115, 115, 260, 260, 260, 261, 261,
	261, 262, 262, 262, 279, 279, 278, 278, 49, 50,
	54, 54, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 151, 151, 151, 202,
	202, 273, 271, 271, 272, 272, 15, 15, 52, 52,
	302, 302, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 277, 277, 277, 17, 17, 55, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 83, 191, 191, 190, 190, 189, 189, 189, 192,
	192, 192, 220, 220, 220, 57, 57, 61, 61, 64,
	64, 64, 62, 63, 27, 28, 28, 28, 28, 29,
	203, 203, 59, 59, 60, 60, 60, 60, 75, 75,
	332, 332, 58, 333, 66, 67, 67, 68, 68, 68,
	195, 195, 72, 72, 72, 70, 70, 70, 71, 71,
	77, 77, 81, 81, 81, 81, 80, 80, 80, 80,
	154, 154, 159, 213, 213, 135, 135, 155, 155, 160,
	160, 160, 161, 161, 162, 162, 162, 162, 162, 157,
	157, 156, 156, 158, 123, 123, 211, 211, 211, 210,
	210, 210, 210, 85, 85, 88, 88, 89, 89, 89,
	89, 92, 137, 137, 109, 109, 110, 110, 110, 110,
	110, 121, 121, 171, 171, 170, 170, 173, 173, 90,
	90, 90, 90, 95, 95, 96, 96, 97, 97, 201,
	201, 218, 218, 218, 101, 101, 101, 103, 102, 102,
	102, 102, 104, 104, 106, 107, 107, 105, 105, 108,
	111, 111, 111, 111, 112, 112, 82, 82, 82, 82,
	82, 82, 82, 188, 188, 114, 114, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 131, 131, 131,
	131, 131, 131, 116, 116, 116, 116, 116, 116, 116,
	76, 76, 132, 132, 132, 94, 93, 93, 79, 79,
	78, 78, 133, 133, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 126,
	126, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 331, 331, 128,
	127, 127, 127, 127, 127, 127, 73, 73, 73, 73,
	73, 219, 219, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 144, 144, 74, 74,
	142, 142, 143, 145, 145, 141, 141, 141, 118, 118,
	118, 118, 118, 118, 118, 118, 120, 120, 120, 146,
	146, 134, 134, 84, 147, 147, 148, 149, 149, 150,
	150, 153, 165, 165, 165, 166, 166, 166, 166, 122,
	122, 167, 167, 167, 117, 117, 117, 117, 117, 117,
	117, 169, 169, 168, 168, 168, 168, 174, 174, 136,
	136, 139, 139, 138, 140, 175, 175, 179, 179, 176,
	176, 180, 180, 180, 180, 183, 183, 184, 184, 184,
	181, 181, 181, 178, 178, 178, 215, 215, 215, 186,
	186, 196, 196, 193, 193, 194, 194, 187, 187, 232,
	232, 200, 200, 199, 199, 199, 197, 197, 197, 198,
	198, 212, 212, 208, 208, 214, 214, 209, 209, 216,
	216, 217, 217, 280, 280, 242, 242, 290, 290, 243,
	243, 291, 291, 293, 293, 288, 288, 289, 289, 292,
	292, 30, 294, 294, 295, 295, 296, 296, 296, 296,
	31, 32, 32, 32, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 328,
	329,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	14, 3, 11, 13, 2, 3, 1, 3, 4, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	0, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 4, 1, 1,
	2, 3, 4, 3, 3, 3, 3, 3, 3, 0,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 3, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 1, 4, 4, 3, 3,
	2, 4, 5, 2, 3, 4, 2, 2, 3, 3,
	3, 3, 3, 4, 1, 1, 1, 1, 1, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 2, 1, 2, 1, 2, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 4, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 1,
	10, 11, 11, 12, 12, 3, 3, 2, 1, 5,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 0, 1, 3, 1, 2,
	3, 1, 1, 1, 0, 2, 0, 2, 1, 5,
	1, 3, 5, 4, 3, 5, 3, 8, 10, 3,
	3, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 3, 8, 0, 1, 2, 0,
	1, 7, 1, 3, 8, 8, 3, 3, 3, 5,
	3, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 3, 4, 3,
	5, 5, 4, 4, 4, 2, 2, 2, 6, 2,
	4, 4, 3, 5, 7, 6, 3, 5, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 3, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 1, 1, 2, 1, 1, 1, 2,
	4, 4, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 3, 0, 1, 2, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 4, 1,
	3, 2, 2, 4, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 3, 2, 1, 1, 3, 3,
	0, 5, 5, 5, 0, 2, 1, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 1, 1, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 6, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 0, 2, 1, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 1,
	1, 0, 2, 4, 2, 4, 1, 3, 5, 4,
	6, 0, 3, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -327, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 138, -50, 141, 140, 177, 142, 170, 64,
	282, -64, 285, 286, -332, -203, 222, 223, 20, 37,
	287, 289, 31, 32, 191, 239, 241, -5, -87, -6,
	8, 380, 139, 283, 172, 171, 26, 429, -328, 68,
	490, -149, 15, -66, -333, -66, -66, -66, -66, -66,
	-258, -201, 106, 68, 23, -198, 151, 87, 371, 147,
	-204, 235, 237, -196, -197, 199, 209, 44, 158, 157,
	148, 235, 148, 149, 151, 371, 147, 184, 183, 235,
	237, 148, -105, -216, 72, -206, 161, 440, 260, 426,
	247, 196, 282, 296, 298, 290, 325, 313, 427, 441,
	162, 217, 146, 311, 314, 358, 160, 250, 210, 272,
	442, 347, 353, 220, 285, 367, 443, 163, 214, 216,
	215, 204, 221, 36, 173, 309, 256, 302, 225, 199,
	444, 434, 300, 28, 194, 445, 355, 330, 259, 446,
	431, 254, 354, 305, 301, 144, 164, 158, 447, 331,
	335, 448, 359, 240, 449, 450, 451, 150, 246, 294,
	295, 452, 200, 361, 251, 329, 33, 159, 428, 48,
	181, 362, 38, 333, 37, 339, 453, 328, 323, 340,
	454, 455, 456, 457, 264, 262, 263, 265, 327, 293,
	322, 212, 53, 145, 337, 336, 338, 213, 357, 318,
	316, 458, 459, 255, 165, 460, 461, 303, 18, 462,
	463, 365, 176, 257, 258, 42, 464, 465, 466, 110,
	467, 468, 469, 356, 332, 334, 198, 114, 306, 155,
	470, 261, 269, 430, 244, 111, 363, 299, 472, 289,
	180, 175, 366, 278, 473, 223, 474, 475, 476, 167,
	477, 238, 237, 286, 270, 112, 287, 349, 218, 478,
	479, 480, 481, 208, 193, 369, 360, 52, 222, 344,
	482, 273, 292, 157, 224, 483, 248, 283, 43, 7,
	211, 252, 350, 271, 219, 209, 320, 182, 484, 485,
	307, 308, 326, 291, 321, 284, 185, 177, 109, 368,
	345, 432, 235, 315, 312, 188, 319, 486, 151, 487,
	189, 288, 364, 249, 310, 346, 148, 131, 314, 358,
	138, 348, 349, 355, -252, 356, 183, 186, -220, 148,
	-191, 347, 240, 261, 401, 189, 190, 149, 150, 33,
	360, 359, 351, -216, 152, 288, -75, 142, 178, -105,
	-46, 72, 224, -46, 30, 72, 72, 36, 72, 287,
	350, 350, 75, 430, 192, 21, -319, -300, 269, -318,
	-298, 139, 138, 10, 140, 274, 275, 276, 149, 8,
	31, 471, 166, 277, 278, 6, 170, 279, 280, 184,
	9, 281, -303, 74, 72, -206, 21, -319, -300, 269,
	6, -68, 5, -187, 153, 284, -86, 439, -91, -218,
	-216, -207, 74, 397, 398, 399, 400, 401, 414, 415,
	416, 402, 403, 417, 418, 419, 404, 405, 420, 421,
	423, 424, 422, 187, 408, 407, 406, 409, 410, 51,
	412, 411, 413, 81, -3, -166, 17, 16, -72, 54,
	55, -67, -80, 122, -82, -216, -113, 89, -119, 29,
	72, -206, 24, -118, -207, -114, -141, -140, -94, 131,
	132, 133, 120, 121, 128, 90, 134, -126, -124, -125,
	-127, -129, -130, 74, 73, 82, 75, 76, 77, 78,
	83, 397, 398, 399, 400, 401, 414, 415, 416, 402,
	403, 417, 418, 419, 404, 405, 420, 421, 423, 424,
	422, 408, 407, 406, 409, 410, 412, 411, 413, 84,
	85, -208, -138, -328, 58, 59, 178, 147, 381, 382,
	383, 384, 385, 425, 168, 389, 92, 47, 370, 379,
	378, 377, 375, 376, 372, 374, 373, 391, 392, 154,
	371, 126, 380, -187, -187, 11, -98, -99, -105, -108,
	-216, -176, 284, -183, -180, 359, 360, -181, -184, -178,
	-141, 339, 468, 469, 358, 314, 357, -208, -216, -2,
	-5, 6, -105, -259, -247, -250, -209, 163, -270, -208,
	-205, 160, 72, -206, 253, 143, 169, 139, 88, 433,
	23, 25, 243, 342, 397, 91, 131, 398, 399, 400,
	16, 20, 92, 130, 81, 381, 192, 401, 138, 62,
	396, 372, 374, 370, 371, 348, 29, 10, 26, 171,
	203, 22, 124, 140, 95, 96, 97, 174, 274, 275,
	24, 172, 266, 85, 276, 168, 115, 19, 65, 11,
	186, 239, 13, 395, 113, 14, 236, 154, 153, 108,
	201, 149, 60, 8, 134, 27, 105, 56, 402, 403,
	436, 45, 191, 437, 58, 106, 17, 375, 376, 31,
	425, 404, 179, 438, 405, 126, 206, 63, 50, 242,
	89, 83, 34, 86, 66, 87, 15, 202, 61, 393,
	245, 267, 183, 471, 205, 439, 166, 107, 277, 141,
	380, 268, 241, 59, 147, 6, 390, 30, 170, 279,
	408, 407, 406, 409, 207, 57, 383, 384, 410, 280,
	488, 148, 94, 391, 392, 152, 184, 84, 5, 44,
	32, 9, 281, 64, 67, 377, 378, 379, 47, 51,
	412, 411, 413, 93, 12, 394, 429, 187, 149, -105,
	380, -194, 154, -194, 184, 183, -194, -194, 148, 98,
	-52, -105, -302, -297, -303, -193, 154, -208, -193, -193,
	-193, -193, -193, -193, -193, -105, 135, -105, 72, 30,
	-192, 106, 12, 371, 147, 148, 184, 151, -254, 11,
	108, 187, 187, 187, 188, 187, -190, 350, 352, 185,
	353, 354, 12, -83, 106, 19, -328, -166, -166, 72,
	287, 152, -60, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -41, -40, -42, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 30,
	-281, 68, -242, 339, 72, -294, -295, -105, 75, 75,
	66, 66, 69, 152, 69, 66, -320, 270, 68, -320,
	237, 270, 271, 209, 235, 151, -320, -320, 237, -320,
	-320, -320, -320, -320, 350, -320, -320, -320, 272, 273,
	-320, 348, 151, -320, -320, -320, -320, -320, 71, 66,
	69, 261, 66, 11, 66, -66, -7, -5, -328, 21,
	22, 148, 363, 69, -86, -169, -328, -329, 70, -167,
	19, 31, -122, 75, 78, -150, -153, -82, -216, 50,
	-70, 21, 22, 80, 11, -211, 88, 87, 105, -210,
	23, 72, -206, -207, 74, 135, -82, -116, 108, 89,
	106, 107, 91, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 130, 98, 99, 100, 101,
	102, 103, 104, -188, -328, -94, -328, 136, 137, -119,
	-119, -119, -119, -119, -119, -119, -119, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -3, -133, -82, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -144, -82, -328, -331, -128, -328, -331, -128,
	-331, -128, -331, -328, -331, -128, -331, -128, -331, -331,
	-128, -331, -328, -328, -328, -328, -328, -328, -107, 27,
	-105, -85, -88, -89, -90, -109, -93, -328, -105, -94,
	-105, -98, -330, 69, 11, 67, -330, 69, 135, 69,
	-177, -182, 361, 363, 284, -181, -181, -215, -208, 74,
	29, 98, 30, 135, -149, -66, 70, 69, -250, 163,
	160, -222, -226, -228, -227, -229, -224, -225, 311, 314,
	318, 316, 312, 317, 131, 315, 320, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 30, 173, 307,
	308, 309, 310, 331, 332, 333, 334, 335, 336, 337,
	338, 290, 313, 427, 291, 292, 293, 294, 295, 296,
	298, 299, 300, 301, 302, 303, 304, 305, 72, -207,
	-270, 68, -208, 23, 151, 72, 89, 72, 72, 72,
	-306, -305, -297, -300, -194, 72, 69, 152, 69, 152,
	71, -98, 24, 66, -100, -105, 72, 72, 72, 72,
	-299, -297, -300, -217, -216, -205, -192, 74, -82, -194,
	-194, -105, -105, -105, -105, -192, -192, -192, -189, 11,
	108, 11, -189, -189, -82, -119, -297, 373, 122, 72,
	72, 287, 72, -41, -41, 74, -41, 69, 98, -41,
	70, -133, -280, 489, 69, -296, 23, 363, 364, 340,
	-322, 148, 186, 183, -322, -318, 278, -299, -298, -297,
	-320, -321, -208, -320, -320, -320, 350, -320, -320, -320,
	-320, -320, -320, -320, -320, -303, -322, 239, 69, -322,
	-299, -297, -72, -3, -105, 364, 365, -91, 23, -168,
	-209, 9, 108, 69, 18, 69, -165, 25, 26, 135,
	-120, 51, 75, 78, -195, 49, -105, -82, -82, -131,
	83, 89, 84, 85, -210, 122, -217, -209, -205, -119,
	-132, -138, -94, 79, 108, 106, 107, 91, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -219, 72, 74, 72, -118, -118, -208,
	-70, -78, -81, 122, -82, -216, -78, -78, -70, -329,
	-329, -81, -78, -78, -78, -81, -78, -70, -70, -78,
	-329, -329, -329, -329, -78, -78, -78, -78, -70, -78,
	-78, -78, -70, -329, 69, -329, -3, -78, -78, -78,
	-329, -82, -82, -141, 74, -78, -141, 74, -78, -119,
	386, 387, 388, -78, -78, -70, -142, -143, 93, -141,
	-329, -119, -208, -208, -78, -79, -78, -78, -78, -172,
	110, -105, 30, 69, -101, -103, -102, -104, 56, 60,
	62, 57, 58, 59, 63, -201, -85, -92, 47, -328,
	-110, 110, -111, 23, -218, 64, 153, 65, -172, 67,
	-85, -105, -85, -108, -216, 122, -180, -183, 69, 362,
	364, 365, -177, -236, 130, 66, 86, -82, -209, -217,
	-166, -72, -260, -261, -262, -209, 74, 75, -247, -248,
	-249, -250, -263, 163, -269, 155, 157, 44, -251, 164,
	149, 45, -223, -237, 345, -230, 68, -230, -230, 319,
	311, 314, 312, -230, -230, -230, -230, -230, -235, 314,
	-235, -235, -235, -235, 312, 68, 68, -230, -230, -230,
	-239, 68, -239, 306, -240, 68, -240, -240, -240, -240,
	-270, -270, -82, -212, 67, -163, -105, 24, -47, 196,
	169, 68, -301, 69, 29, -307, 236, -105, -105, -105,
	-297, -297, -303, -277, 167, 162, -105, 69, 69, 72,
	72, -255, 11, 108, -192, -216, -216, -105, -121, 23,
	-192, -76, 174, 67, -331, -329, 72, -40, -118, 70,
	-106, 27, 74, -295, -218, 339, 364, -323, 122, -208,
	-323, -326, 429, 152, 70, 69, -320, -323, 257, 239,
	-323, 11, -70, -329, -54, -53, 143, 140, 141, 145,
	146, -273, 342, 139, 180, -93, -328, -329, 69, 135,
	52, -122, -122, -153, -186, 19, 11, 47, 47, -71,
	57, 83, 84, 85, 135, -328, -132, -119, -119, -119,
	-76, 88, -329, -78, 69, -329, 135, -329, -329, -78,
	-154, 393, -154, -329, -329, -329, -329, -329, -329, -78,
	-78, -329, -154, -154, -154, -154, -329, -329, -329, -329,
	-78, -329, -329, -329, -79, -82, -329, -329, -329, -329,
	69, 67, 23, 11, 11, -329, 11, 11, -329, -329,
	11, -119, -119, -119, -329, -329, -78, -145, -143, 95,
	-82, -329, -329, 69, 69, -329, -329, -329, -329, -117,
	30, 47, -328, -3, -328, -175, -179, -141, -205, -88,
	-89, -89, -88, -89, 56, 56, 56, 61, 56, 61,
	56, -102, -218, -329, -329, -137, 195, -328, 34, -218,
	-111, 149, 149, 149, -112, 12, -85, -112, -112, 135,
	-182, -185, 366, 363, 369, 72, 74, 135, -167, 69,
	-262, 98, -250, 68, 72, -256, -207, 45, -251, 149,
	45, -251, -256, 72, -256, 45, 83, 89, -233, -234,
	-241, -244, -231, 29, 66, 342, 155, 45, 44, 81,
	-238, 346, 75, -235, -235, -230, -230, -230, 319, -230,
	-235, -236, 30, -236, -236, -236, -236, -235, -245, 74,
	-245, 75, -239, 75, 70, 66, -208, -3, 23, -48,
	8, 9, 10, -282, -283, -284, 72, 108, 201, 202,
	-310, 268, -305, 237, 246, 88, 16, 429, 152, 152,
	-105, -297, -112, 72, 72, -189, -192, 34, -119, -300,
	189, 190, -172, 148, -296, 152, 135, 135, 152, 260,
	-299, -208, 11, 11, 257, 11, -299, -195, 69, -202,
	-251, -279, -249, -250, -278, 156, 163, 164, -202, 163,
	160, -251, 164, 155, 156, -199, -251, 152, 23, -202,
	-202, -257, 98, -202, 110, -209, -209, 53, -105, -77,
	-164, 122, -209, -79, -76, 88, -119, -329, -81, -155,
	-154, 122, -217, -155, -155, -329, -208, -159, -328, -154,
	-155, -155, -154, -154, -154, -329, -329, -154, -155, -155,
	-155, -155, -329, -155, -155, -155, -329, -221, 131, 311,
	173, 309, 302, 329, 316, 344, 307, 345, -219, -221,
	-119, -119, -119, -119, -119, 11, 11, 11, 426, -149,
	97, -82, 94, -119, -119, -174, 66, -175, -136, -139,
	-138, -328, -3, -329, -168, 6, 429, -173, -208, -112,
	69, 98, 98, -96, -95, 66, 67, -97, 66, -95,
	56, 56, -171, 68, 69, -138, -328, -173, -119, -111,
	-328, -328, -328, -149, -82, -112, 363, 367, 368, -261,
	-262, -265, -264, -208, -207, 155, -269, 44, -269, -256,
	-256, 68, 83, -119, 9, 45, 45, 74, 70, -236,
	-236, -235, -230, -236, 72, 131, -236, 70, 69, 70,
	69, 70, 69, -115, 445, 89, -105, -163, -163, 66,
	70, 69, -222, 72, 72, 72, -313, 429, 242, -311,
	-309, 248, 249, 250, 251, 252, -300, 247, -307, 244,
	74, 72, -105, -297, -192, -119, -235, -105, -299, 122,
	122, -208, -299, 257, -325, 429, -299, -299, 11, -299,
	-71, -53, 68, -246, 72, -207, -256, -197, 155, 72,
	72, 72, -207, 72, -207, -208, 45, 45, 72, -105,
	-208, -246, 72, -82, -208, -208, 135, -112, 11, 69,
	-80, -329, -119, -155, 135, -155, -213, 72, -155, -155,
	-155, -329, -230, -230, -230, -240, -230, 295, -230, 295,
	-329, -329, 19, 19, 19, 19, -329, -119, -119, -119,
	-328, -74, 390, -82, 69, 69, 28, -174, 69, -329,
	-329, 47, -329, -329, 69, -149, -179, -82, -82, -82,
	68, -82, -170, -208, 195, -329, -111, -201, -170, -170,
	-170, -166, 70, 69, -230, -230, 45, -253, -251, -170,
	-125, -236, -235, 74, -235, 75, 75, 445, 68, -3,
	-105, -285, -286, -287, 81, 428, 89, 203, 204, 165,
	205, 206, 207, -284, -222, -222, -222, -316, -317, -315,
	245, 266, 267, 253, -314, -312, 262, 263, 264, 265,
	88, 74, 74, 74, -308, 236, 88, 245, 16, 23,
	-288, -190, -325, -325, 239, -299, -77, -246, -151, 168,
	169, -222, -222, -212, -253, 45, 72, -200, 152, 23,
	152, -151, -246, 30, 140, 27, -209, -146, 13, -85,
	-164, -164, 122, -135, 110, -235, 72, -119, -119, -119,
	-119, -329, -329, -329, -119, -329, 74, -119, -119, 45,
	-139, -136, 47, -3, -328, -208, -166, -170, 70, 69,
	-138, -110, -218, -329, -329, -329, -267, -266, 67, 159,
	81, -264, -165, -165, -256, 70, -236, -236, 70, 70,
	-265, -163, 19, -163, -287, 74, 207, 203, 207, 207,
	207, 207, 208, -304, 81, 243, -315, 254, 450, 238,
	268, 75, 75, 109, 31, 32, -312, 75, 75, 75,
	75, -309, 16, 429, -307, 244, 74, 74, -289, 38,
	-291, 39, -324, 23, -324, 257, 11, 70, 72, -223,
	-223, 68, -256, 68, 72, -208, -151, 29, 29, -328,
	-147, 14, 16, -112, -80, -149, 16, -329, -329, -329,
	-329, -73, 108, 429, -329, -329, 9, -136, -3, 70,
	-208, -111, -266, 72, -257, 74, 166, 70, 194, -20,
	-3, -9, -10, -11, -12, -14, -49, -15, -16, -21,
	-22, -17, -55, -56, -64, -62, -63, -59, -58, -25,
	-23, -26, -18, -27, -28, -29, -33, -34, -24, 92,
	154, 225, 282, 36, 36, 199, 200, 74, 74, 29,
	255, 134, 29, 75, 134, 396, 244, 74, 72, 245,
	-232, 153, -292, 43, -290, -243, 42, 16, -297, -85,
	-265, -212, -265, -119, -271, -272, 110, -157, 394, -148,
	-82, -134, -84, -82, -146, -164, -160, 112, 111, -133,
	-329, 427, 63, 430, -175, -329, 75, -105, -268, -267,
	195, -163, -82, -82, 72, -45, -214, 228, 229, 230,
	-209, -35, -20, 75, 29, 75, 29, 258, 245, 23,
	-171, 75, -291, 16, -293, 40, 41, 74, 429, -112,
	70, 68, 70, -329, 69, -208, -156, -158, -208, 69,
	-147, -329, -161, 91, -162, 109, 396, -123, 75, 134,
	-161, 53, 428, 431, 68, -152, 197, 198, -36, -37,
	93, 94, 226, 227, 231, -222, 69, 490, 256, 256,
	74, 38, 74, 16, 16, 237, -146, -268, -265, -268,
	-272, 47, 69, 23, -84, -157, -162, 114, 115, 195,
	114, 115, -118, 53, -170, -163, 72, 72, 97, 95,
	-37, -82, -35, 19, 19, 19, 29, -209, 97, -20,
	74, 74, 29, 242, 21, -300, -147, 70, 181, -158,
	-159, 88, -208, 429, 70, -13, -19, -12, -9, -10,
	-11, 282, 92, -35, 94, 490, -46, 75, -3, -44,
	-43, 75, -46, 233, 89, 234, 72, -119, 259, -157,
	-268, 182, -162, 430, -275, -276, 66, -163, -35, 490,
	-35, 97, 95, -38, -39, 96, -20, 69, 232, -300,
	-328, 431, -276, 66, -275, 66, 10, 9, 490, 97,
	490, 154, -35, 97, 95, -39, -82, -43, -119, 179,
	-274, 167, 162, 165, 30, -274, 97, 92, 490, 154,
	-35, 94, -329, -329, 161, 29, 83, 97, 490, -35,
	154, 97, 490, 154,
}

var yyDef = [...]int{
	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 683, 683, 683, 683, 683,
	683, 779, -2, 548, 0, 0, 0, 0, -2, 656,
	657, 658, 662, 663, 678, 680, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1087, 0, 681, 670, 671, 0, 0, 1569,
	2, 1025, 0, 692, 685, 0, 1087, 1087, 0, 0,
	86, 0, 0, 0, 780, 0, 0, 0, 1085, 1085,
	0, 1085, 1085, 0, 1100, 0, 1082, 1096, 1097, 1098,
	0, 0, 1083, 0, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 0, 605, 797, 1109, 1110, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 0, 0, 0, 649,
	0, 615, 616, 617, 0, 619, 0, 0, 0, 0,
	0, 629, 632, 636, 0, 1025, 1025, 494, 495, 496,
	653, 654, 643, 655, 0, 0, 0, 0, 0, 682,
	304, 306, 0, 326, 0, 329, 332, 1115, 664, 0,
	0, 1140, 1141, 0, 0, 0, 0, 0, 1454, 180,
	243, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	0, 182, 182, 182, 1465, 182, 0, 182, 182, 182,
	182, 182, 242, 232, 233, 234, 0, 0, 0, 1454,
	683, 0, 687, 0, 1088, 659, 44, 0, 46, 1041,
	781, 782, 783, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 0, 1031, 0, 0, 695, 693,
	694, 684, 0, 706, 736, 0, 806, 0, 811, 813,
	-2, -2, 0, 854, 855, 856, 857, 858, 859, 0,
	0, 0, 0, 0, 0, 0, 0, 883, 884, 885,
	886, 887, 888, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 815,
	816, 995, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 986, 0, 957, 957,
	957, 957, 957, 957, 957, 957, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 68,
	797, 72, 1517, 0, 1059, -2, -2, 1061, 0, 0,
	0, -2, -2, -2, -2, 1326, -2, 995, 0, 87,
	1017, 683, 88, 0, 368, 369, 0, 1339, 518, 1107,
	1108, 1328, 1103, 1104, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1085, 0,
	586, 0, 587, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 606, 607, 649,
	609, 0, 0, 1085, 1085, 0, 0, 0, 0, 520,
	521, 649, 649, 622, 649, 646, 0, 646, 626, 646,
	644, 645, 0, 631, 0, 0, 0, 639, 640, 665,
	0, 0, 672, 674, 675, 676, 677, 673, 0, 0,
	0, 308, 0, 0, 328, 310, 0, 313, 314, 315,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 0,
	331, 0, 1113, 1116, 669, 1131, 1132, 0, 1142, 1143,
	186, 186, 0, 0, 0, 0, 149, 182, 0, 151,
	182, 182, 182, 0, 182, 182, 158, 159, 182, 161,
	162, 163, 164, 165, 182, 167, 168, 169, 182, 182,
	172, 182, 182, 175, 176, 177, 178, 179, 241, 186,
	0, 0, 186, 0, 0, 692, 41, 51, 0, 688,
	689, 0, 0, 0, 45, 0, 0, 50, 1570, 36,
	0, 0, 1026, 1029, 1030, 1018, 1019, 1022, 0, 0,
	690, 696, 697, 686, 0, 707, 0, 0, 0, 737,
	0, 739, 740, 741, 742, 0, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 834, 835, 836,
	837, 838, 839, 812, 0, 826, 0, 0, 0, 875,
	876, 877, 878, 879, 880, 881, 0, 695, 0, 0,
	0, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	695, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 0, 0, 0, 695, 0, 0, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 0, 987, 0, 940, 949, 0, 941, 950,
	942, 951, 943, 0, 944, 952, 945, 953, 946, 947,
	954, 948, 0, 0, 0, 848, 0, 0, 70, 0,
	796, 0, 743, 745, 746, 747, -2, 0, 800, 846,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 0,
	73, 75, 0, 0, 1517, 1062, 1063, 468, 1076, 1077,
	1078, 0, 1074, 0, 1025, 692, 535, 0, 370, 0,
	0, 379, 458, 388, 389, 390, 451, 392, 451, 451,
	0, 451, 451, 451, 451, 451, 465, 465, 465, 465,
	465, 434, 435, 436, 437, 438, 0, 0, 411, 451,
	451, 451, 415, 441, 442, 443, 444, 445, 446, 447,
	448, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 453, 453, 455, 455, 455, 455, 455, 0, 0,
	517, 0, 1101, 84, 0, 92, 0, 93, 0, 0,
	98, 259, 245, 97, 0, 231, 0, 0, 0, 0,
	236, 601, 1084, 0, 594, 64, 595, 596, 597, 598,
	599, 238, 600, 798, 1111, 1112, 608, 650, 651, 0,
	0, 612, 613, 614, 522, 620, 621, 628, 649, 0,
	0, 0, 761, 649, 630, 840, 633, 957, 0, 667,
	666, 0, 679, 305, 307, 309, 327, 0, 0, 330,
	333, 0, 0, 0, 0, 1134, 0, 1136, 1138, 0,
	0, 187, 188, 189, 0, 181, 0, 204, 244, 0,
	150, 0, 184, 152, 153, 154, 182, 156, 157, 160,
	166, 170, 171, 173, 174, 240, 0, 0, 0, 0,
	147, 0, 695, 0, 0, 660, 661, 47, 0, 0,
	1043, 1032, 0, 0, 0, 0, 1021, 1023, 1024, 0,
	0, 1006, 0, 0, 698, 691, 38, 807, 808, 810,
	827, 0, 829, 831, 738, 708, 0, 996, -2, 817,
	818, 842, 843, 844, 0, 0, 0, 0, 840, 822,
	0, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 874, 971, 972, 0, 872, 873, 882,
	0, 0, 850, 702, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 845, 0, 1053, 0, 0, 0, 0,
	922, 0, 0, 857, 998, 0, 857, 998, 0, 0,
	0, 0, 0, 0, 0, 0, 993, 990, 0, 0,
	958, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 795, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 1441, 756, 0, 800, 0, 0, 0, 804, 0,
	804, 67, 804, 69, 0, 799, 1060, 0, 0, 0,
	78, 79, 74, 1064, 0, 1070, 1071, 1072, 996, 0,
	1031, 695, 367, 536, 538, 541, 542, 543, 371, 373,
	374, 375, 0, -2, 509, 1451, 1495, -2, 501, 1368,
	-2, -2, 378, 460, 459, 391, 0, 465, 465, 451,
	451, 451, 451, 420, 465, 423, 426, 427, 468, 0,
	468, 468, 468, 468, 465, 0, 0, 412, 413, 414,
	403, 0, 404, 453, 406, 0, 407, 408, 409, 410,
	515, 516, 0, 0, 0, 0, 0, 1086, 0, 261,
	262, 207, 100, 0, 0, 246, 0, 366, 0, 588,
	0, 590, 235, 592, 602, 603, 593, 0, 0, 610,
	611, 804, 0, 0, 623, 647, 648, 646, 649, 0,
	627, 641, 0, 0, 634, 0, 668, 311, 312, 334,
	70, 0, 1114, 1133, 0, 1137, 1139, 0, 190, 192,
	0, 141, 0, 0, 183, 0, 155, 0, 0, 0,
	0, 0, 690, 52, 549, 550, -2, 579, 1093, 579,
	579, 567, 485, 579, 0, 48, 0, 1042, 0, 0,
	0, 1027, 1028, 1020, 0, 1079, 1080, 1007, 1008, 85,
	699, 828, 830, 832, 0, 848, 819, 840, 823, 0,
	820, 0, 814, 0, 0, 717, 0, 717, 717, 0,
	908, 0, 909, 0, 717, 717, 0, 0, 0, 0,
	0, 0, 915, 916, 917, 918, 717, 717, 717, 717,
	0, 717, 717, 717, 0, 853, -2, 919, 920, 921,
	0, 0, 0, 0, 0, 964, 0, 0, 965, 930,
	0, 0, 0, 0, 0, 936, 1017, 0, 991, 0,
	0, 939, 959, 0, 0, 960, 961, 962, 963, 1047,
	0, 0, 0, 1036, 0, 804, 1055, 0, 0, 744,
	775, 777, 0, 772, 785, 786, 788, 0, 790, 0,
	792, 793, 763, 750, 847, 751, 0, 0, 0, 800,
	760, 0, 0, 0, 1017, 0, 804, 60, 61, 0,
	76, 77, 0, 0, 83, 469, 470, 0, 206, 0,
	539, 0, 372, 0, 502, 0, 0, 487, 501, 497,
	498, 501, 492, 502, 493, 0, 380, 0, 382, 383,
	384, 385, 386, 0, 0, 464, 0, 472, 474, 0,
	387, 461, 0, 468, 468, 465, 418, 419, 451, 424,
	468, 428, 0, 429, 430, 431, 432, 468, 0, 449,
	0, 0, 405, 0, 532, 0, 1102, 84, 84, 0,
	263, 264, 265, 0, 208, 209, 0, 0, 0, 0,
	110, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	65, 239, 618, 523, 524, 649, 625, 0, 841, 635,
	637, 638, 465, 0, 1135, 0, 0, 0, 0, 0,
	202, 185, 0, 0, 0, 0, 148, 698, 0, 0,
	501, 0, 568, 569, 0, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1094, 1095, 0,
	0, 0, 486, 0, 0, 1045, 1044, 1033, 37, 804,
	0, 709, 997, 0, 821, 0, 824, 717, 851, 893,
	718, 704, 0, 894, 895, 717, 710, 711, 713, 910,
	897, 898, 911, 912, 913, 717, 717, 914, 902, 901,
	900, 903, 717, 906, 905, 907, 889, 0, 451, 451,
	976, 451, 455, 979, 451, 981, 451, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 988,
	938, 994, 0, 0, 0, 53, 0, 1047, 1034, 1049,
	1051, 0, 0, 0, 0, -2, 1306, 0, 767, 1017,
	0, 0, 0, 769, 776, 0, 0, 770, 0, 771,
	789, 791, 748, 0, 0, 752, 0, 0, -2, 759,
	0, 0, 0, 1025, 805, 59, 80, 81, 82, 537,
	540, 0, 503, 451, 451, 0, 507, 499, 508, 489,
	491, 0, 381, 462, 0, 471, 473, 475, 452, 416,
	417, 468, 425, 421, 466, 467, 433, 465, 0, 465,
	0, 456, 0, 519, 533, 0, 0, 90, 0, 0,
	215, 0, 211, 0, 0, 0, 118, 0, 101, 102,
	103, 105, 106, 0, 0, 0, 99, 0, 248, 0,
	251, 252, 589, 591, 624, 762, 1125, 794, 202, 191,
	193, 194, 202, 205, 142, 0, 143, 145, 0, 144,
	85, 551, 0, 576, 0, 0, 1101, 499, 0, -2,
	554, 559, 560, 561, 562, 563, 0, 574, 0, 556,
	0, 576, 0, 571, 0, 0, 0, 1009, 0, 85,
	85, 890, 825, 892, 0, 896, 715, 714, 891, 899,
	904, 923, 973, 465, 977, 978, 980, 982, 983, 985,
	925, 924, 0, 0, 0, 0, 931, 0, 0, 0,
	0, 0, 0, 992, 0, 0, 0, 54, 0, 1052,
	-2, 0, 0, 71, 0, 1025, 1056, 1057, 1058, 773,
	0, 778, 0, 765, 0, 800, 757, 0, 0, 0,
	0, 58, 477, 0, 1022, 1022, 488, 501, 500, 0,
	463, 422, 468, 450, 468, 0, 0, 534, 0, 84,
	0, 84, 216, 217, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 210, 212, 213, 214, 136, 119, 120,
	0, 0, 0, 0, 111, 112, 0, 0, 0, 0,
	0, 107, 108, 109, 247, 0, 0, 250, 0, 0,
	1127, 1121, 195, 195, 0, 146, 0, 0, 553, 577,
	0, 379, 379, 0, 501, 0, 570, 0, 1091, 1092,
	0, 565, 576, 0, 0, 0, 1046, 1014, 0, 804,
	0, 700, 705, 1017, 0, 974, 975, 0, 0, 0,
	0, 932, 933, 934, 966, 937, 989, 0, 0, 0,
	1050, 1035, 0, 1039, 0, 768, 57, 0, 764, 0,
	753, 755, 800, 801, 802, 803, 476, 480, 0, 485,
	0, 504, 505, 506, 490, 0, 439, 440, 454, 457,
	0, 91, 0, 0, 218, 219, 220, 221, 223, 224,
	0, 0, 0, 96, 0, 0, 121, 0, 0, 0,
	0, 131, 132, 133, 134, 135, 113, 114, 115, 116,
	117, 104, 0, 0, 249, 0, 254, 255, 1089, 1129,
	-2, 0, 139, 0, 140, 203, 0, 552, 578, 376,
	377, 0, 1101, 0, 555, 564, 566, 0, 573, 0,
	729, 0, 0, 1009, 85, 719, 0, 926, 928, 927,
	929, 0, 0, 0, 955, 956, 0, 1038, 0, 774,
	766, 758, 481, 482, 0, 484, 0, 478, 0, 84,
	337, 338, 339, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 0, 0, 225, 226, 227, 228, 137, 138, 122,
	123, 0, 125, 126, 0, 0, 0, 257, 0, 253,
	763, 0, 1121, 0, 1123, 0, 1120, 0, 196, 804,
	0, 0, 0, 572, 0, 582, 0, 42, 0, 1015,
	1016, 1010, 1011, 1013, 1014, 701, 0, 0, 0, 716,
	935, 0, 0, 0, 1048, -2, 483, 0, 89, 479,
	266, 95, 0, 0, 1103, 0, 0, 293, 294, 295,
	1105, 0, 335, 0, 127, 0, 129, 130, 256, 0,
	35, 0, 1128, 0, 1126, 0, 0, 1122, 0, 1009,
	478, 0, 478, 581, 0, 0, 730, 731, 0, 0,
	729, 712, 720, 0, 723, 0, 0, 0, 734, 0,
	721, 967, 0, 970, 0, 84, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 291, 0, 0, 124, 128,
	258, 1090, 1130, 0, 0, 0, 1014, 557, 0, 575,
	583, 0, 0, 0, 1012, 43, 0, 724, 725, 726,
	727, 728, 0, 968, 0, 0, 267, 268, 0, 0,
	278, 0, 0, 0, 0, 0, 0, 1106, 229, 336,
	1124, 1118, 197, 198, 199, 201, 729, 478, 0, 732,
	733, 0, 735, 0, 510, 84, 269, 270, 271, 272,
	273, 0, 275, 0, 0, 0, 287, 288, 289, 0,
	296, 298, 299, 300, 0, 302, 303, 292, 0, 40,
	558, 0, 722, 0, 511, 512, 0, 94, 0, 0,
	0, 0, 0, 0, 284, 0, 290, 0, 301, 200,
	0, 969, 513, 0, 514, 0, 0, 0, 0, 0,
	279, 280, 0, 0, 0, 285, 0, 297, 0, 0,
	525, 527, 528, 0, 0, 526, 274, 276, 0, 282,
	0, 0, 584, 585, 529, 530, 531, 0, 0, 0,
	281, 0, 286, 283,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 490,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:478
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:531
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:544
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:568
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:584
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:588
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:598
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:630
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:642
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:692
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:716
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:721
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:725
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:735
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:742
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:792
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:797
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:817
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:834
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:842
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:854
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:858
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:877
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:886
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:909
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:940
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:960
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:964
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:977
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:991
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1005
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1017
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1021
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1037
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1069
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1074
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1078
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1082
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1088
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1093
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1097
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1131
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1139
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1245
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1250
		{
			yyVAL.strs = nil
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1260
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantAssumption = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1337
		{
			yyVAL.boolean = false
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.boolean = true
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1365
		{
			yyVAL.procedureParams = nil
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1402
		{
			yyVAL.characteristics = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1422
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1426
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1438
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1442
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1464
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1493
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1501
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1561
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1565
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1569
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1573
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1579
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1591
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1595
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1599
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1605
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1613
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = BeforeStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = AfterStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = InsertStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = UpdateStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = DeleteStr
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1652
		{
			yyVAL.triggerOrder = nil
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1676
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1682
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 276:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1686
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1696
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1702
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1708
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 281:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1713
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 282:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1718
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 283:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1724
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1742
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1752
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 290:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1768
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1793
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1829
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1857
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &Resignal{}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1927
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1939
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1950
		{
			yyVAL.exprs = nil
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1968
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2008
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2024
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2047
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2051
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2064
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = ColumnType{}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2216
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2444
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.sqlVal = nil
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2458
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2462
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2470
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2497
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2507
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.colKeyOpt = colKey
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2575
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2579
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.indexOptions = nil
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = ""
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2633
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2641
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2654
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = ""
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.str = yyDollar[1].str
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 510:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2740
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 511:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2744
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 512:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2748
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 513:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2752
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 514:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2756
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2766
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2815
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.boolean = true
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.boolean = true
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.boolean = false
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = ""
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = yyDollar[1].str
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string("")
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2920
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2937
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2943
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2950
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2961
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2970
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 558:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2974
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3002
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3006
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3013
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3035
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3044
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3048
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3056
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3063
		{
			yyVAL.columnOrder = nil
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3067
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3076
		{
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
		}
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3082
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3098
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3102
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3118
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3122
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3130
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3134
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3140
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3148
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3152
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3160
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3168
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3176
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3192
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3200
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3209
		{

		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3227
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3243
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3251
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3255
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3259
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3263
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3267
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3275
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3283
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3291
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3295
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3303
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3307
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3312
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3321
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3333
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3347
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3351
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3356
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 635:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3360
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.boolean = false
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.boolean = true
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = ""
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3427
		{
			yyVAL.showFilter = nil
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3441
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = SessionStr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = GlobalStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3459
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.statement = &Begin{}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.statement = &Begin{}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3479
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3483
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.statement = &Commit{}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3495
		{
			yyVAL.statement = &Rollback{}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3511
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3515
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3519
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3525
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = ""
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3568
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3573
		{
			setAllowComments(yylex, true)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3577
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3583
		{
			yyVAL.bytes2 = nil
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = UnionStr
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = UnionAllStr
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3601
		{
			yyVAL.str = UnionDistinctStr
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3606
		{
			yyVAL.byt = 0
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.byt = 1
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = SQLCacheStr
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = DistinctStr
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = StraightJoinHint
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3651
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3659
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3696
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3700
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3706
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3716
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3721
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3729
		{
			yyVAL.exprs = nil
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3738
		{
			yyVAL.over = nil
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3742
		{
			yyVAL.over = yyDollar[1].over
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3747
		{
			yyVAL.frame = nil
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3751
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3762
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3800
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3819
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3827
		{
			yyVAL.window = nil
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3830
		{
			yyVAL.window = yyDollar[2].window
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3839
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3845
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3863
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3871
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3913
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3935
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3941
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3945
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3951
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 755:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3956
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3971
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 758:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3975
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3979
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.expr = nil
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3998
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.columns = nil
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4007
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4040
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4044
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4048
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4052
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4058
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4060
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4075
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.str = JoinStr
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = JoinStr
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = JoinStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.str = StraightJoinStr
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.str = LeftJoinStr
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.str = LeftJoinStr
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = RightJoinStr
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.str = RightJoinStr
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4130
		{
			yyVAL.str = NaturalJoinStr
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4134
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4144
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4170
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.indexHints = nil
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4179
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4183
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4187
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4192
		{
			yyVAL.expr = nil
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4226
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = IsNullStr
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = IsNotNullStr
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = IsTrueStr
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = IsNotTrueStr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = IsFalseStr
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = IsNotFalseStr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = EqualStr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = LessThanStr
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = GreaterThanStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = LessEqualStr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = GreaterEqualStr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = NotEqualStr
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4349
		{
			yyVAL.expr = nil
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4353
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.selectExprs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4420
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4504
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4508
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4512
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4562
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4566
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4649
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4704
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4716
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4728
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 932:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4752
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4760
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 935:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 937:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4776
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4819
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4833
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4837
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4851
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4860
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 956:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4885
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4889
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4893
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4911
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yyVAL.str = BooleanModeStr
		}
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = QueryExpansionStr
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4943
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4963
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4973
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4981
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4985
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4993
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = nil
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5007
		{
			yyVAL.str = string("")
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5011
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5021
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5027
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = nil
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5050
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = &NullVal{}
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5103
		{
			yyVAL.exprs = nil
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5107
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5113
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5117
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = nil
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5143
		{
			yyVAL.orderBy = nil
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5163
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5168
		{
			yyVAL.str = AscScr
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
			yyVAL.str = AscScr
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = DescScr
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5181
		{
			yyVAL.limit = nil
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5185
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5189
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5193
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = ""
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = ForUpdateStr
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = ShareModeStr
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5233
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5246
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5250
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5254
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5260
		{
			yyVAL.columns = nil
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5264
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5270
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5274
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5278
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5282
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5287
		{
			yyVAL.assignExprs = nil
		}
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5291
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5307
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5311
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5317
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5333
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5337
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5343
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5346
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5352
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5356
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5373
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5386
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5399
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5433
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5437
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5444
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = &Default{}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5468
		{
			yyVAL.byt = 0
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.byt = 1
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5473
		{
			yyVAL.byt = 0
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5475
		{
			yyVAL.byt = 1
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5478
		{
			yyVAL.byt = 0
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.byt = 1
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = IgnoreStr
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5488
		{
			yyVAL.sqlVal = nil
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5490
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.empty = struct{}{}
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.empty = struct{}{}
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5499
		{
			yyVAL.empty = struct{}{}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.empty = struct{}{}
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.empty = struct{}{}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = UniqueStr
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.str = FulltextStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = SpatialStr
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = ""
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5519
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5525
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5529
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5539
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5568
		{
			yyVAL.str = string("")
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5573
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5575
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5578
		{
			yyVAL.EnclosedBy = nil
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5582
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5587
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5596
		{
			yyVAL.sqlVal = nil
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5600
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5605
		{
			yyVAL.sqlVal = nil
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5609
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5614
		{
			yyVAL.Fields = nil
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5618
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5623
		{
			yyVAL.Lines = nil
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5627
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5632
		{
			yyVAL.sqlVal = nil
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5636
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5642
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5652
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5658
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5662
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
			yyVAL.lockType = LockRead
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5672
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
			yyVAL.lockType = LockWrite
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5680
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5686
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5692
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5696
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5700
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6155
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6164
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
