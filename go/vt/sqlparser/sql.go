// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:61
type yySymType struct {
	yys                   int
	empty                 struct{}
	statement             Statement
	selStmt               SelectStatement
	ddl                   *DDL
	ins                   *Insert
	byt                   byte
	bytes                 []byte
	bytes2                [][]byte
	str                   string
	int                   int
	strs                  []string
	selectExprs           SelectExprs
	selectExpr            SelectExpr
	columns               Columns
	statements            Statements
	partitions            Partitions
	colName               *ColName
	tableExprs            TableExprs
	tableExpr             TableExpr
	joinCondition         JoinCondition
	tableName             TableName
	tableNames            TableNames
	indexHints            *IndexHints
	asOf                  *AsOf
	expr                  Expr
	exprs                 Exprs
	boolVal               BoolVal
	sqlVal                *SQLVal
	colTuple              ColTuple
	values                Values
	valTuple              ValTuple
	subquery              *Subquery
	whens                 []*When
	when                  *When
	orderBy               OrderBy
	order                 *Order
	limit                 *Limit
	setExprs              SetExprs
	setExpr               *SetExpr
	colIdent              ColIdent
	tableIdent            TableIdent
	convertType           *ConvertType
	aliasedTableName      *AliasedTableExpr
	TableSpec             *TableSpec
	columnType            ColumnType
	columnOrder           *ColumnOrder
	triggerOrder          *TriggerOrder
	colKeyOpt             ColumnKeyOption
	optVal                Expr
	LengthScaleOption     LengthScaleOption
	columnDefinition      *ColumnDefinition
	indexDefinition       *IndexDefinition
	indexInfo             *IndexInfo
	indexOption           *IndexOption
	indexOptions          []*IndexOption
	indexColumn           *IndexColumn
	indexColumns          []*IndexColumn
	constraintDefinition  *ConstraintDefinition
	constraintInfo        ConstraintInfo
	ReferenceAction       ReferenceAction
	partDefs              []*PartitionDefinition
	partDef               *PartitionDefinition
	partSpec              *PartitionSpec
	vindexParam           VindexParam
	vindexParams          []VindexParam
	showFilter            *ShowFilter
	over                  *Over
	caseStatementCases    []CaseStatementCase
	caseStatementCase     CaseStatementCase
	ifStatementConditions []IfStatementCondition
	ifStatementCondition  IfStatementCondition
	signalInfo            SignalInfo
	signalInfos           []SignalInfo
	procedureParam        ProcedureParam
	procedureParams       []ProcedureParam
	characteristic        Characteristic
	characteristics       []Characteristic
	Fields                *Fields
	Lines                 *Lines
	EnclosedBy            *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const NEXT = 57391
const VALUE = 57392
const SHARE = 57393
const MODE = 57394
const SQL_NO_CACHE = 57395
const SQL_CACHE = 57396
const JOIN = 57397
const STRAIGHT_JOIN = 57398
const LEFT = 57399
const RIGHT = 57400
const INNER = 57401
const OUTER = 57402
const CROSS = 57403
const NATURAL = 57404
const USE = 57405
const FORCE = 57406
const ON = 57407
const USING = 57408
const ID = 57409
const HEX = 57410
const STRING = 57411
const INTEGRAL = 57412
const FLOAT = 57413
const HEXNUM = 57414
const VALUE_ARG = 57415
const LIST_ARG = 57416
const COMMENT = 57417
const COMMENT_KEYWORD = 57418
const BIT_LITERAL = 57419
const NULL = 57420
const TRUE = 57421
const FALSE = 57422
const OFF = 57423
const OR = 57424
const AND = 57425
const NOT = 57426
const BETWEEN = 57427
const CASE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const ELSEIF = 57432
const END = 57433
const LE = 57434
const GE = 57435
const NE = 57436
const NULL_SAFE_EQUAL = 57437
const IS = 57438
const LIKE = 57439
const REGEXP = 57440
const IN = 57441
const SHIFT_LEFT = 57442
const SHIFT_RIGHT = 57443
const DIV = 57444
const MOD = 57445
const UNARY = 57446
const COLLATE = 57447
const BINARY = 57448
const UNDERSCORE_BINARY = 57449
const UNDERSCORE_UTF8MB4 = 57450
const INTERVAL = 57451
const JSON_EXTRACT_OP = 57452
const JSON_UNQUOTE_EXTRACT_OP = 57453
const CREATE = 57454
const ALTER = 57455
const DROP = 57456
const RENAME = 57457
const ANALYZE = 57458
const ADD = 57459
const FLUSH = 57460
const MODIFY = 57461
const CHANGE = 57462
const SCHEMA = 57463
const TABLE = 57464
const INDEX = 57465
const INDEXES = 57466
const VIEW = 57467
const TO = 57468
const IGNORE = 57469
const IF = 57470
const PRIMARY = 57471
const COLUMN = 57472
const SPATIAL = 57473
const FULLTEXT = 57474
const KEY_BLOCK_SIZE = 57475
const CHECK = 57476
const ACTION = 57477
const CASCADE = 57478
const CONSTRAINT = 57479
const FOREIGN = 57480
const NO = 57481
const REFERENCES = 57482
const RESTRICT = 57483
const FIRST = 57484
const AFTER = 57485
const SHOW = 57486
const DESCRIBE = 57487
const EXPLAIN = 57488
const DATE = 57489
const ESCAPE = 57490
const REPAIR = 57491
const OPTIMIZE = 57492
const TRUNCATE = 57493
const FORMAT = 57494
const MAXVALUE = 57495
const PARTITION = 57496
const REORGANIZE = 57497
const LESS = 57498
const THAN = 57499
const PROCEDURE = 57500
const TRIGGER = 57501
const TRIGGERS = 57502
const FUNCTION = 57503
const VINDEX = 57504
const VINDEXES = 57505
const STATUS = 57506
const VARIABLES = 57507
const WARNINGS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const SQLSTATE = 57538
const BEGIN = 57539
const START = 57540
const TRANSACTION = 57541
const COMMIT = 57542
const ROLLBACK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const DEC = 57557
const FIXED = 57558
const PRECISION = 57559
const TIME = 57560
const TIMESTAMP = 57561
const DATETIME = 57562
const YEAR = 57563
const CHAR = 57564
const VARCHAR = 57565
const BOOL = 57566
const CHARACTER = 57567
const VARBINARY = 57568
const NCHAR = 57569
const NVARCHAR = 57570
const NATIONAL = 57571
const VARYING = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const LONG = 57577
const BLOB = 57578
const TINYBLOB = 57579
const MEDIUMBLOB = 57580
const LONGBLOB = 57581
const JSON = 57582
const ENUM = 57583
const GEOMETRY = 57584
const POINT = 57585
const LINESTRING = 57586
const POLYGON = 57587
const GEOMETRYCOLLECTION = 57588
const MULTIPOINT = 57589
const MULTILINESTRING = 57590
const MULTIPOLYGON = 57591
const NULLX = 57592
const AUTO_INCREMENT = 57593
const APPROXNUM = 57594
const SIGNED = 57595
const UNSIGNED = 57596
const ZEROFILL = 57597
const LOCAL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_USER = 57627
const CURRENT_TIME = 57628
const LOCALTIME = 57629
const LOCALTIMESTAMP = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const OVER = 57643
const WINDOW = 57644
const GROUPING = 57645
const GROUPS = 57646
const AVG = 57647
const BIT_AND = 57648
const BIT_OR = 57649
const BIT_XOR = 57650
const COUNT = 57651
const JSON_ARRAYAGG = 57652
const JSON_OBJECTAGG = 57653
const MAX = 57654
const MIN = 57655
const STDDEV_POP = 57656
const STDDEV = 57657
const STD = 57658
const STDDEV_SAMP = 57659
const SUM = 57660
const VAR_POP = 57661
const VARIANCE = 57662
const VAR_SAMP = 57663
const CUME_DIST = 57664
const DENSE_RANK = 57665
const FIRST_VALUE = 57666
const LAG = 57667
const LAST_VALUE = 57668
const LEAD = 57669
const NTH_VALUE = 57670
const NTILE = 57671
const ROW_NUMBER = 57672
const PERCENT_RANK = 57673
const RANK = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const UNUSED = 57682
const ARRAY = 57683
const DESCRIPTION = 57684
const EMPTY = 57685
const EXCEPT = 57686
const JSON_TABLE = 57687
const LATERAL = 57688
const MEMBER = 57689
const RECURSIVE = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const SYSTEM = 57747
const INFILE = 57748

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"SQLSTATE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 36,
	-2, 4,
	-1, 36,
	140, 864,
	-2, 108,
	-1, 44,
	181, 461,
	182, 461,
	-2, 449,
	-1, 51,
	1, 1267,
	424, 1267,
	-2, 481,
	-1, 388,
	126, 872,
	-2, 868,
	-1, 389,
	126, 873,
	-2, 869,
	-1, 490,
	96, 1187,
	126, 1187,
	-2, 72,
	-1, 491,
	96, 1089,
	126, 1089,
	-2, 73,
	-1, 496,
	96, 1045,
	126, 1045,
	-2, 831,
	-1, 498,
	96, 1127,
	126, 1127,
	-2, 833,
	-1, 701,
	5, 36,
	-2, 475,
	-1, 705,
	5, 36,
	-2, 474,
	-1, 927,
	1, 533,
	5, 533,
	12, 533,
	13, 533,
	14, 533,
	15, 533,
	17, 533,
	19, 533,
	30, 533,
	31, 533,
	55, 533,
	56, 533,
	57, 533,
	58, 533,
	59, 533,
	61, 533,
	62, 533,
	65, 533,
	66, 533,
	68, 533,
	69, 533,
	424, 533,
	-2, 560,
	-1, 930,
	66, 53,
	68, 53,
	-2, 57,
	-1, 1122,
	126, 875,
	-2, 871,
	-1, 1284,
	67, 319,
	-2, 1012,
	-1, 1287,
	67, 315,
	70, 315,
	-2, 947,
	-1, 1288,
	67, 316,
	70, 316,
	-2, 957,
	-1, 1366,
	67, 388,
	70, 388,
	-2, 352,
	-1, 1416,
	5, 37,
	-2, 626,
	-1, 1477,
	5, 36,
	-2, 808,
	-1, 1572,
	5, 36,
	-2, 74,
	-1, 1721,
	1, 581,
	5, 581,
	12, 581,
	13, 581,
	14, 581,
	15, 581,
	17, 581,
	19, 581,
	30, 581,
	31, 581,
	55, 581,
	56, 581,
	57, 581,
	58, 581,
	59, 581,
	61, 581,
	62, 581,
	65, 581,
	66, 581,
	68, 581,
	69, 581,
	424, 581,
	-2, 560,
	-1, 1844,
	5, 37,
	-2, 809,
	-1, 1874,
	5, 36,
	-2, 74,
	-1, 1937,
	5, 36,
	-2, 811,
	-1, 1977,
	41, 882,
	-2, 880,
	-1, 2028,
	5, 36,
	-2, 161,
	-1, 2083,
	5, 37,
	-2, 812,
}

const yyPrivate = 57344

const yyLast = 23769

var yyAct = [...]int{

	422, 60, 2177, 2167, 2198, 2087, 2031, 7, 2093, 1857,
	2168, 1329, 2120, 2070, 2030, 6, 2094, 2029, 5, 2032,
	8, 1734, 1951, 1797, 1247, 1998, 1977, 1628, 393, 1915,
	1911, 71, 1272, 1625, 1327, 1240, 1804, 1701, 667, 1401,
	421, 1878, 486, 1097, 1289, 1735, 1242, 1238, 351, 852,
	2088, 1702, 380, 367, 1580, 1281, 1234, 406, 1895, 1527,
	1698, 60, 1779, 92, 1321, 686, 1708, 1503, 1649, 1271,
	1683, 1236, 1602, 1147, 372, 1712, 1355, 1032, 1603, 1564,
	1160, 1285, 1046, 1317, 1186, 1278, 1225, 924, 1218, 943,
	724, 1053, 1124, 1064, 1178, 501, 1305, 955, 730, 489,
	484, 352, 353, 774, 942, 356, 504, 376, 932, 1266,
	492, 481, 643, 391, 2220, 868, 2216, 2206, 2189, 2187,
	765, 2172, 2163, 502, 869, 386, 2123, 70, 1082, 75,
	2180, 2113, 1879, 2166, 2080, 2151, 1798, 2112, 923, 1292,
	1881, 1666, 1181, 1446, 2079, 1829, 642, 944, 395, 945,
	435, 670, 441, 443, 442, 439, 440, 438, 437, 436,
	77, 78, 79, 80, 81, 2028, 3, 444, 445, 102,
	98, 99, 665, 100, 2008, 817, 816, 826, 827, 819,
	820, 821, 822, 823, 824, 825, 818, 1730, 1731, 828,
	1729, 61, 32, 33, 688, 1512, 1260, 355, 1511, 698,
	1162, 1513, 645, 354, 648, 715, 104, 103, 1547, 1884,
	1261, 1262, 29, 34, 61, 32, 33, 689, 690, 669,
	673, 1291, 363, 675, 365, 1630, 361, 1922, 1293, 1293,
	1297, 1299, 1311, 1298, 1306, 1306, 1820, 1818, 94, 366,
	358, 1974, 1973, 1318, 1581, 1972, 1971, 1882, 1883, 1885,
	1886, 1887, 1970, 1968, 1969, 1377, 671, 674, 1336, 672,
	2055, 2056, 2117, 2118, 2089, 682, 1088, 696, 2026, 1376,
	1650, 683, 684, 68, 681, 1087, 1632, 2165, 382, 87,
	1582, 1085, 647, 646, 2150, 1335, 2071, 1627, 1219, 348,
	1896, 1897, 2024, 1738, 691, 2212, 697, 1607, 692, 689,
	690, 1243, 1245, 2221, 2218, 1952, 1525, 1906, 2207, 94,
	1381, 1089, 1652, 2190, 1631, 1086, 644, 653, 1954, 1375,
	1525, 2058, 365, 72, 666, 349, 666, 666, 1585, 1022,
	1013, 101, 89, 91, 666, 1502, 86, 1501, 1500, 640,
	666, 1600, 96, 95, 718, 1528, 320, 97, 60, 60,
	1389, 840, 841, 1388, 702, 2016, 1847, 1811, 2202, 364,
	1516, 1508, 704, 1419, 1754, 703, 1583, 1584, 1905, 1405,
	1373, 1367, 1368, 60, 1366, 1095, 1369, 1370, 1654, 1427,
	951, 668, 1244, 1658, 93, 1653, 938, 1651, 837, 1953,
	808, 839, 1656, 1424, 732, 661, 1256, 2159, 1267, 1306,
	828, 1524, 761, 707, 708, 1655, 1880, 778, 1554, 1296,
	1320, 1379, 1382, 96, 95, 1524, 1755, 818, 1657, 1659,
	828, 850, 2009, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 2078, 867, 870, 870, 870, 876,
	870, 870, 876, 870, 876, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 1834,
	928, 2200, 1374, 1622, 2201, 1054, 2199, 29, 1904, 61,
	32, 33, 62, 1092, 88, 840, 841, 1048, 676, 677,
	1345, 58, 1131, 763, 716, 1525, 685, 67, 1372, 840,
	841, 34, 699, 701, 705, 62, 492, 1129, 1130, 1128,
	679, 723, 842, 843, 844, 845, 846, 847, 848, 849,
	940, 1060, 821, 822, 823, 824, 825, 818, 762, 838,
	828, 693, 772, 771, 1098, 1099, 84, 773, 68, 2209,
	1378, 922, 871, 873, 875, 877, 879, 881, 882, 884,
	773, 872, 874, 1626, 878, 880, 1539, 883, 1525, 727,
	731, 2050, 1991, 1360, 2175, 2178, 2174, 771, 772, 771,
	1055, 1544, 1543, 83, 2121, 720, 809, 721, 851, 1047,
	722, 936, 931, 946, 773, 1346, 773, 1380, 706, 649,
	1524, 1668, 1540, 1621, 772, 771, 1179, 1618, 1435, 1179,
	36, 63, 41, 40, 43, 680, 1545, 2205, 1537, 1015,
	772, 771, 773, 853, 1538, 768, 2051, 2162, 927, 772,
	771, 2160, 1742, 695, 866, 2213, 2122, 362, 773, 1423,
	2097, 2085, 44, 66, 65, 1872, 1871, 773, 1569, 42,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1567, 1524, 666, 666, 68, 717, 652, 1611,
	1607, 666, 666, 666, 1608, 1548, 1127, 1615, 1617, 772,
	771, 711, 1525, 1542, 666, 666, 1670, 2214, 2193, 2178,
	2192, 2148, 27, 57, 1612, 2052, 64, 773, 48, 49,
	2147, 772, 771, 710, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 478, 479, 828, 773,
	666, 826, 827, 819, 820, 821, 822, 823, 824, 825,
	818, 2126, 2103, 828, 903, 904, 905, 906, 907, 891,
	892, 893, 908, 909, 894, 895, 896, 902, 910, 897,
	898, 899, 900, 901, 913, 912, 911, 914, 915, 917,
	916, 918, 1356, 1080, 1023, 1049, 371, 2023, 1034, 655,
	656, 657, 658, 659, 1967, 1929, 1100, 1524, 772, 771,
	1056, 1037, 1038, 1611, 1607, 2121, 1869, 2140, 1608, 2139,
	62, 1609, 1610, 1114, 1116, 1117, 773, 1747, 1565, 1115,
	778, 1402, 1403, 1404, 1148, 1541, 1149, 1364, 1612, 411,
	410, 413, 414, 415, 416, 1101, 1105, 1357, 412, 417,
	717, 1058, 1347, 2138, 1682, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 1035, 1036, 828, 1106,
	60, 1078, 1107, 1039, 1040, 1041, 1514, 1121, 1515, 2137,
	1778, 2021, 1125, 1780, 1985, 854, 1050, 1051, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	1528, 1103, 828, 1946, 2152, 1863, 2149, 1832, 1981, 1118,
	1946, 2146, 2107, 717, 1863, 2104, 1120, 1946, 2074, 1168,
	1171, 1422, 1084, 1421, 1057, 1979, 1180, 819, 820, 821,
	822, 823, 824, 825, 818, 1102, 1780, 828, 1863, 2025,
	772, 771, 1094, 1902, 853, 1122, 817, 816, 826, 827,
	819, 820, 821, 822, 823, 824, 825, 818, 773, 1237,
	828, 1946, 2017, 928, 1946, 1957, 1123, 928, 1800, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1151, 1152, 1946, 717, 1863, 1862,
	1126, 1794, 1093, 1849, 717, 1846, 717, 1961, 492, 1790,
	1787, 1154, 1111, 1112, 1192, 1785, 1194, 1784, 1772, 772,
	771, 1771, 1770, 1762, 1761, 1176, 1758, 1759, 1758, 1757,
	1268, 1592, 1273, 502, 1155, 1157, 1182, 773, 1417, 717,
	1165, 1591, 1521, 1343, 1251, 851, 1636, 1504, 1253, 1222,
	717, 1156, 1361, 939, 1342, 666, 1150, 666, 1062, 1249,
	1158, 1156, 717, 1201, 1202, 29, 1031, 1030, 1206, 1269,
	1029, 1209, 1028, 1020, 1190, 1191, 1214, 1018, 1254, 1257,
	1017, 1197, 1198, 1199, 1200, 1034, 1258, 1016, 1014, 1475,
	1276, 954, 953, 1842, 663, 853, 934, 934, 1122, 1166,
	1167, 359, 72, 1637, 1504, 1960, 1476, 1767, 1307, 1308,
	1309, 1310, 1323, 1324, 1325, 1326, 29, 927, 1748, 1699,
	1504, 927, 939, 2075, 29, 927, 68, 72, 1221, 1319,
	1235, 1250, 1990, 933, 851, 1768, 1760, 1517, 1259, 1417,
	1440, 1439, 1294, 1295, 1359, 1300, 1301, 1302, 1303, 1304,
	1341, 935, 935, 937, 933, 1156, 933, 1936, 1096, 1021,
	1222, 732, 1406, 1314, 1315, 1316, 1222, 1643, 68, 373,
	1243, 1245, 2115, 2105, 1121, 1629, 939, 68, 2096, 1354,
	1417, 1983, 1913, 1873, 1293, 68, 1852, 1265, 817, 816,
	826, 827, 819, 820, 821, 822, 823, 824, 825, 818,
	389, 1322, 828, 1741, 1227, 1230, 1231, 1232, 1228, 1125,
	1229, 1233, 1318, 1269, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 1520, 1331, 828, 1333,
	68, 1337, 1394, 1713, 1714, 1393, 1313, 1312, 713, 1328,
	1914, 2184, 1122, 109, 2182, 2169, 109, 1766, 1716, 1411,
	1699, 1244, 109, 1570, 1061, 1025, 1109, 1490, 1719, 1478,
	1479, 1407, 1491, 928, 928, 928, 928, 928, 1488, 1492,
	1718, 1231, 1232, 1489, 1487, 1486, 377, 378, 1237, 1414,
	1496, 109, 2134, 2111, 109, 506, 1633, 109, 1390, 1348,
	492, 928, 766, 767, 2132, 1408, 1409, 1410, 109, 1399,
	506, 1445, 1447, 1398, 1480, 1934, 109, 1530, 1453, 1454,
	1455, 1456, 1434, 1789, 1746, 1745, 2060, 1126, 1499, 1522,
	764, 1494, 2063, 2102, 2101, 1978, 2125, 1976, 1498, 2054,
	2053, 360, 1595, 1413, 1391, 1392, 725, 731, 1558, 952,
	709, 1416, 1418, 664, 1518, 1332, 1840, 1420, 726, 1909,
	1273, 1482, 1483, 1426, 1485, 1363, 1429, 1430, 1431, 1506,
	1493, 1507, 1505, 1437, 1024, 1438, 1098, 1099, 1441, 1442,
	60, 1443, 1444, 1573, 1351, 1448, 1449, 1450, 1451, 1452,
	1235, 666, 1012, 666, 666, 1529, 1459, 1460, 1461, 1509,
	1463, 1464, 1964, 1466, 1467, 1468, 1469, 1415, 1471, 1472,
	1473, 1481, 766, 767, 1484, 1523, 1526, 374, 375, 1397,
	368, 927, 927, 927, 927, 927, 2128, 1396, 2127, 1495,
	1436, 2099, 1831, 2064, 1477, 1933, 927, 1917, 369, 72,
	1916, 1549, 1550, 1566, 1805, 1504, 2186, 2185, 1556, 927,
	1575, 1576, 1577, 1158, 1568, 1428, 1425, 1052, 1563, 769,
	2185, 2186, 1590, 74, 1601, 1557, 2013, 1559, 1560, 1561,
	1562, 817, 816, 826, 827, 819, 820, 821, 822, 823,
	824, 825, 818, 1594, 1744, 828, 1551, 1552, 1553, 1555,
	1613, 1593, 1623, 1624, 1640, 1091, 1614, 1674, 1604, 1616,
	1620, 1599, 1606, 1597, 1638, 2042, 47, 76, 1121, 1227,
	1230, 1231, 1232, 1228, 1667, 1229, 1233, 50, 1635, 1713,
	1714, 2044, 19, 69, 1598, 2043, 18, 1704, 1, 60,
	2100, 109, 1596, 2059, 506, 1642, 506, 506, 2045, 20,
	2061, 1641, 1661, 1975, 506, 1572, 1660, 1648, 1646, 1892,
	506, 1723, 1724, 1725, 492, 2046, 21, 2041, 15, 2040,
	14, 2034, 10, 1586, 1877, 1588, 1589, 1703, 1700, 1675,
	1676, 1677, 1678, 1679, 109, 1876, 1122, 2047, 24, 2048,
	25, 2039, 13, 1579, 1722, 1726, 1826, 1578, 1644, 2036,
	12, 2035, 11, 777, 2033, 9, 712, 1081, 1710, 1605,
	1662, 1663, 1733, 1664, 1665, 1640, 1273, 1645, 1273, 1799,
	1717, 1187, 1910, 1720, 1371, 1671, 1672, 2069, 1279, 1270,
	500, 82, 1344, 1728, 678, 1900, 328, 1737, 1277, 1535,
	2062, 714, 1534, 1739, 1764, 1765, 1740, 1732, 1531, 1546,
	1290, 1533, 1532, 2057, 1536, 959, 957, 958, 956, 961,
	1680, 1681, 382, 960, 332, 1686, 487, 947, 1689, 770,
	90, 51, 1903, 1694, 1619, 1365, 85, 1059, 687, 334,
	836, 1395, 1510, 1721, 817, 816, 826, 827, 819, 820,
	821, 822, 823, 824, 825, 818, 1669, 928, 828, 109,
	109, 109, 493, 2095, 1705, 1706, 2116, 729, 1751, 1994,
	1433, 865, 1781, 1177, 506, 394, 1997, 1113, 409, 1749,
	1750, 408, 407, 1786, 1782, 1743, 1753, 1827, 404, 1783,
	405, 1350, 1104, 1756, 1474, 810, 1774, 1807, 1808, 1769,
	392, 384, 926, 919, 1362, 1226, 1793, 1224, 1223, 1026,
	482, 1715, 1711, 925, 1752, 694, 1776, 1400, 347, 1828,
	2007, 1412, 1108, 31, 73, 1727, 1833, 379, 1806, 26,
	17, 700, 22, 16, 650, 35, 39, 38, 37, 1816,
	1574, 1775, 817, 816, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 1859, 1860, 828, 1334, 357, 1065,
	1063, 2176, 1850, 2119, 2049, 2038, 2037, 2154, 23, 2153,
	4, 1865, 370, 28, 2, 0, 0, 1855, 0, 0,
	0, 1841, 0, 0, 0, 1518, 60, 0, 0, 1810,
	0, 1273, 0, 0, 0, 0, 0, 0, 1856, 0,
	1861, 0, 0, 0, 1809, 927, 0, 0, 0, 0,
	1813, 1814, 1812, 1815, 0, 0, 1817, 0, 1819, 0,
	0, 506, 1866, 1821, 1822, 0, 0, 0, 0, 109,
	0, 0, 0, 109, 0, 0, 109, 1899, 0, 0,
	0, 0, 109, 1888, 506, 506, 1795, 0, 0, 0,
	0, 506, 506, 506, 109, 109, 109, 1912, 0, 109,
	1737, 1894, 1893, 1704, 506, 506, 1938, 1843, 1844, 1845,
	1640, 1848, 1907, 0, 1868, 0, 1870, 1908, 0, 0,
	1919, 1867, 1943, 1854, 0, 1901, 0, 0, 1889, 1890,
	1891, 1830, 0, 0, 1918, 0, 1864, 0, 1898, 109,
	506, 0, 0, 1703, 109, 0, 1963, 0, 1965, 0,
	0, 0, 0, 0, 1935, 1962, 0, 0, 0, 0,
	0, 0, 1944, 1945, 1942, 853, 0, 0, 1956, 1955,
	1989, 1921, 0, 1950, 1851, 0, 0, 1853, 0, 1966,
	0, 0, 0, 1992, 0, 0, 0, 0, 0, 0,
	109, 1874, 0, 0, 0, 0, 777, 1704, 0, 60,
	420, 1996, 2000, 1982, 1980, 0, 0, 0, 0, 1923,
	1924, 1925, 1926, 1927, 0, 2001, 1987, 1930, 1931, 2002,
	1984, 0, 0, 0, 0, 0, 60, 1988, 0, 0,
	0, 1928, 0, 2020, 2014, 0, 1932, 1703, 1958, 0,
	1959, 2018, 2027, 2012, 0, 0, 0, 2022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 1948, 1949, 0, 2066, 0, 0, 382, 0,
	506, 1937, 0, 0, 0, 0, 0, 0, 0, 2067,
	0, 2072, 494, 0, 2073, 503, 0, 0, 2065, 1912,
	1273, 2076, 0, 0, 0, 0, 0, 2068, 0, 2090,
	654, 0, 492, 0, 2081, 0, 506, 506, 0, 0,
	0, 0, 0, 60, 0, 0, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2003, 2004, 2005, 2006,
	0, 0, 0, 2010, 2011, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 2098, 0, 0, 109,
	109, 0, 0, 109, 109, 0, 0, 109, 109, 109,
	2000, 2110, 2109, 0, 2015, 0, 2124, 0, 0, 0,
	2129, 2020, 0, 0, 506, 506, 0, 1995, 1999, 0,
	0, 2131, 0, 60, 60, 2135, 0, 2130, 2136, 0,
	0, 2143, 2141, 2133, 853, 0, 0, 0, 0, 0,
	2145, 60, 0, 2158, 0, 0, 0, 0, 0, 2161,
	2077, 2157, 0, 0, 2156, 2164, 2155, 0, 2083, 0,
	60, 0, 0, 60, 60, 2170, 2179, 0, 2171, 0,
	0, 2173, 2183, 60, 109, 506, 60, 506, 2181, 2194,
	2145, 0, 109, 109, 2191, 0, 109, 0, 60, 2145,
	60, 2203, 0, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 2208, 0, 2145, 0, 2145, 60, 0, 0,
	60, 0, 2106, 109, 0, 109, 109, 60, 2217, 0,
	0, 60, 109, 2145, 2114, 0, 0, 0, 0, 0,
	0, 0, 0, 2145, 0, 1825, 0, 2145, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 109, 109, 109,
	109, 2091, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 929, 503, 0, 503, 503, 0, 0,
	0, 0, 0, 0, 503, 0, 1999, 0, 0, 0,
	503, 0, 0, 0, 0, 1684, 1685, 0, 1687, 1688,
	0, 1690, 1691, 1692, 1693, 0, 1695, 1696, 1697, 0,
	0, 0, 0, 0, 0, 2196, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 0, 0, 0, 0,
	0, 0, 2142, 817, 816, 826, 827, 819, 820, 821,
	822, 823, 824, 825, 818, 0, 0, 828, 0, 2210,
	2211, 0, 0, 0, 483, 0, 0, 499, 1824, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 0, 0, 0, 0, 0, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2195,
	0, 0, 0, 109, 109, 109, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 109, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 1159, 1164, 0,
	0, 0, 1170, 1173, 1174, 1175, 0, 0, 494, 0,
	0, 0, 506, 1823, 948, 0, 817, 816, 826, 827,
	819, 820, 821, 822, 823, 824, 825, 818, 0, 1185,
	828, 1188, 1189, 0, 0, 0, 1193, 0, 1195, 1196,
	0, 0, 0, 0, 0, 0, 1203, 1204, 1205, 0,
	1207, 1208, 0, 1210, 1211, 1212, 1213, 0, 1215, 1216,
	1217, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 29, 0, 61, 32,
	33, 506, 109, 506, 506, 1835, 1836, 0, 0, 0,
	58, 1837, 0, 0, 1838, 0, 67, 0, 0, 1839,
	34, 817, 816, 826, 827, 819, 820, 821, 822, 823,
	824, 825, 818, 0, 0, 828, 0, 0, 0, 29,
	30, 61, 32, 33, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 0, 0, 109, 68, 0, 67,
	0, 0, 0, 34, 54, 55, 506, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 1011, 0, 0, 662, 2219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 45, 0, 0, 0,
	68, 0, 0, 0, 503, 503, 0, 506, 0, 0,
	0, 503, 503, 503, 0, 0, 0, 0, 0, 36,
	63, 41, 40, 43, 503, 503, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 506,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 66, 65, 0, 0, 0, 506, 42, 0,
	503, 0, 36, 63, 41, 40, 43, 0, 56, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 506, 0,
	506, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 66, 65, 0, 0, 52,
	53, 42, 57, 0, 2052, 64, 0, 48, 49, 0,
	817, 816, 826, 827, 819, 820, 821, 822, 823, 824,
	825, 818, 0, 728, 828, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 1432, 0,
	0, 0, 921, 0, 930, 57, 109, 46, 64, 503,
	48, 49, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 1457, 1458, 0, 107, 0, 1462, 346,
	0, 1465, 0, 0, 0, 107, 1470, 506, 0, 0,
	109, 506, 0, 0, 0, 0, 0, 0, 506, 0,
	1153, 506, 506, 506, 0, 0, 0, 109, 0, 62,
	0, 383, 0, 0, 485, 495, 0, 107, 494, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 1183, 1184, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 29, 0, 61,
	32, 33, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 506, 506, 506, 0, 0, 0,
	0, 0, 503, 506, 503, 503, 0, 0, 68, 0,
	0, 0, 506, 981, 0, 0, 0, 0, 0, 0,
	0, 0, 1019, 0, 0, 0, 483, 0, 0, 1027,
	0, 2050, 0, 0, 0, 0, 2215, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1042, 1043, 1044,
	0, 0, 1045, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 503, 0, 506,
	36, 63, 41, 40, 43, 0, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 2051, 0, 0, 0,
	0, 0, 1083, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 44, 66, 65, 968, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 506, 506, 0,
	506, 0, 0, 506, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 506, 0, 503, 982, 0, 0,
	0, 0, 0, 57, 107, 2052, 64, 0, 48, 49,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 506, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 107, 0, 0,
	0, 0, 995, 998, 999, 1000, 1001, 1002, 1003, 0,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 506, 983, 984,
	985, 986, 962, 966, 996, 963, 969, 965, 967, 964,
	0, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 987, 988, 989, 990, 991, 992, 993, 994,
	62, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 506, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 29, 0, 61, 32, 33, 506, 0, 0,
	0, 0, 0, 0, 1220, 109, 58, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 34, 1252, 0, 0,
	0, 0, 107, 107, 107, 0, 0, 0, 0, 0,
	0, 495, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 506, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 506, 0, 0,
	0, 2204, 0, 0, 0, 0, 506, 0, 0, 1571,
	0, 0, 0, 0, 0, 0, 506, 1330, 0, 0,
	0, 503, 0, 503, 503, 1338, 1339, 0, 0, 1340,
	0, 0, 0, 0, 0, 36, 63, 41, 40, 43,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 44, 66, 65,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 1383,
	1384, 1385, 1386, 1387, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 107, 0, 57, 107,
	2052, 64, 0, 48, 49, 1033, 0, 1673, 0, 29,
	0, 61, 32, 33, 0, 0, 0, 107, 107, 107,
	0, 0, 107, 58, 0, 0, 0, 0, 0, 67,
	0, 0, 0, 34, 0, 0, 494, 0, 0, 1707,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 107, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 503, 503, 0,
	503, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2050, 0, 62, 0, 812, 2188, 815,
	0, 0, 0, 0, 0, 0, 829, 830, 831, 832,
	833, 834, 835, 107, 813, 814, 811, 817, 816, 826,
	827, 819, 820, 821, 822, 823, 824, 825, 818, 0,
	0, 828, 36, 63, 41, 40, 43, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2051, 0,
	0, 0, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 66, 65, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 1788, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 1801, 1802, 1803, 0, 0, 0, 0, 0, 1163,
	1163, 0, 0, 0, 1163, 1163, 1163, 1163, 0, 0,
	342, 495, 0, 0, 0, 57, 0, 2052, 64, 0,
	48, 49, 0, 0, 0, 1587, 0, 0, 0, 0,
	0, 1163, 1163, 1163, 1163, 0, 0, 1163, 1163, 1163,
	1163, 1163, 0, 0, 0, 0, 0, 339, 1163, 1163,
	1163, 0, 1163, 1163, 0, 1163, 1163, 1163, 1163, 0,
	1163, 1163, 1163, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 107, 1246, 0, 0, 107, 107, 0, 1634,
	107, 1255, 1033, 495, 1858, 1858, 1858, 0, 0, 0,
	0, 0, 0, 503, 0, 1033, 0, 0, 0, 321,
	0, 0, 1858, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 333, 340, 341, 0,
	29, 0, 61, 32, 33, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 0,
	67, 0, 0, 0, 34, 0, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 331, 0, 107, 0, 503,
	338, 0, 0, 0, 0, 107, 107, 0, 0, 107,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 107, 0, 1352, 1353,
	0, 0, 0, 0, 2050, 107, 0, 1939, 1940, 2144,
	1941, 0, 0, 1858, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 107,
	107, 107, 107, 107, 1736, 0, 0, 0, 0, 1033,
	0, 0, 0, 36, 63, 41, 40, 43, 0, 0,
	0, 335, 325, 326, 1763, 336, 337, 345, 0, 2051,
	0, 327, 329, 0, 323, 344, 343, 1986, 0, 1773,
	0, 0, 0, 0, 1858, 44, 66, 65, 0, 0,
	0, 0, 42, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 1791, 0, 0, 0, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 57, 0, 2052, 64,
	0, 48, 49, 0, 0, 29, 0, 61, 32, 33,
	0, 0, 0, 0, 1736, 1163, 1163, 0, 0, 58,
	1163, 503, 503, 1163, 0, 67, 0, 0, 1163, 34,
	0, 0, 0, 0, 0, 495, 107, 107, 107, 107,
	107, 0, 0, 0, 494, 0, 0, 2084, 1246, 0,
	0, 107, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2050,
	0, 0, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 1858, 36, 63,
	41, 40, 43, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 2051, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 107, 0, 0, 0, 0,
	44, 66, 65, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 57, 0, 2052, 64, 383, 48, 49, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1993, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2086, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1246, 0,
	1246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	624, 604, 282, 562, 627, 534, 551, 638, 552, 555,
	593, 520, 574, 219, 549, 521, 0, 538, 511, 545,
	512, 535, 564, 153, 533, 606, 577, 626, 183, 589,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 625,
	570, 0, 633, 186, 586, 303, 271, 204, 0, 0,
	566, 613, 572, 602, 561, 595, 527, 585, 628, 550,
	591, 629, 0, 0, 0, 505, 0, 1274, 1275, 0,
	0, 0, 0, 0, 135, 0, 588, 623, 547, 590,
	592, 509, 587, 0, 515, 522, 637, 619, 541, 542,
	543, 1519, 0, 0, 0, 0, 0, 495, 565, 573,
	599, 558, 0, 0, 0, 0, 0, 0, 107, 0,
	539, 0, 583, 0, 0, 0, 523, 516, 0, 0,
	563, 0, 0, 0, 526, 114, 540, 600, 0, 507,
	163, 205, 125, 603, 618, 560, 176, 309, 622, 557,
	556, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 548, 508, 607, 536, 546, 146,
	544, 250, 223, 298, 0, 580, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 559, 594, 537,
	143, 597, 584, 612, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 513, 0, 273, 301, 319, 192, 132,
	532, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 530, 531, 528, 0, 529, 575,
	576, 630, 631, 632, 601, 524, 0, 614, 615, 0,
	605, 620, 621, 596, 639, 553, 554, 514, 517, 518,
	519, 525, 567, 568, 579, 582, 610, 609, 608, 611,
	616, 635, 634, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 110, 121, 185, 316,
	243, 159, 302, 510, 151, 0, 0, 569, 571, 581,
	598, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 617, 624, 604,
	282, 562, 627, 534, 551, 638, 552, 555, 593, 520,
	574, 219, 549, 521, 0, 538, 511, 545, 512, 535,
	564, 153, 533, 606, 577, 626, 183, 589, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 625, 570, 0,
	633, 186, 586, 303, 271, 204, 0, 0, 566, 613,
	572, 602, 561, 595, 527, 585, 628, 550, 591, 629,
	0, 0, 0, 505, 0, 1274, 1275, 0, 0, 0,
	0, 0, 135, 0, 588, 623, 547, 590, 592, 509,
	587, 0, 515, 522, 637, 619, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 565, 573, 599, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	583, 0, 0, 0, 523, 516, 0, 0, 563, 0,
	0, 0, 526, 114, 540, 600, 0, 507, 163, 205,
	125, 603, 618, 560, 176, 309, 622, 557, 556, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 548, 508, 607, 536, 546, 146, 544, 250,
	223, 298, 0, 580, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 559, 594, 537, 143, 597,
	584, 612, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 513, 0, 273, 301, 319, 192, 132, 532, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 530, 531, 528, 0, 529, 575, 576, 630,
	631, 632, 601, 524, 0, 614, 615, 0, 605, 620,
	621, 596, 639, 553, 554, 514, 517, 518, 519, 525,
	567, 568, 579, 582, 610, 609, 608, 611, 616, 635,
	634, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 110, 121, 185, 316, 243, 159,
	302, 510, 151, 0, 0, 569, 571, 581, 598, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 617, 624, 604, 282, 562,
	627, 534, 551, 638, 552, 555, 593, 520, 574, 219,
	549, 521, 0, 538, 511, 545, 512, 535, 564, 153,
	533, 606, 577, 626, 183, 589, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 625, 570, 0, 633, 186,
	586, 303, 271, 204, 0, 0, 566, 613, 572, 602,
	561, 595, 527, 585, 628, 550, 591, 629, 0, 0,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 588, 623, 547, 590, 592, 509, 587, 0,
	515, 522, 637, 619, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 565, 573, 599, 558, 0, 0,
	0, 0, 0, 0, 1920, 0, 539, 0, 583, 0,
	0, 0, 523, 516, 0, 0, 563, 0, 0, 0,
	526, 114, 540, 600, 0, 507, 163, 205, 125, 603,
	618, 560, 176, 309, 622, 557, 556, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	548, 508, 607, 536, 546, 146, 544, 250, 223, 298,
	0, 580, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 559, 594, 537, 143, 597, 584, 612,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 513,
	0, 273, 301, 319, 192, 132, 532, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	530, 531, 528, 0, 529, 575, 576, 630, 631, 632,
	601, 524, 0, 614, 615, 0, 605, 620, 621, 596,
	639, 553, 554, 514, 517, 518, 519, 525, 567, 568,
	579, 582, 610, 609, 608, 611, 616, 635, 634, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 110, 121, 185, 316, 243, 159, 302, 510,
	151, 0, 0, 569, 571, 581, 598, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 617, 624, 604, 282, 562, 627, 534,
	551, 638, 552, 555, 593, 520, 574, 219, 549, 521,
	0, 538, 511, 545, 512, 535, 564, 153, 533, 606,
	577, 626, 183, 589, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 625, 570, 0, 633, 186, 586, 303,
	271, 204, 0, 0, 566, 613, 572, 602, 561, 595,
	527, 585, 628, 550, 591, 629, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	588, 623, 547, 590, 592, 509, 587, 0, 515, 522,
	637, 619, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 565, 573, 599, 558, 0, 0, 0, 0,
	0, 0, 1647, 0, 539, 0, 583, 0, 0, 0,
	523, 516, 0, 0, 563, 0, 0, 0, 526, 114,
	540, 600, 0, 507, 163, 205, 125, 603, 618, 560,
	176, 309, 622, 557, 556, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 548, 508,
	607, 536, 546, 146, 544, 250, 223, 298, 0, 580,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 559, 594, 537, 143, 597, 584, 612, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 513, 0, 273,
	301, 319, 192, 132, 532, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 530, 531,
	528, 0, 529, 575, 576, 630, 631, 632, 601, 524,
	0, 614, 615, 0, 605, 620, 621, 596, 639, 553,
	554, 514, 517, 518, 519, 525, 567, 568, 579, 582,
	610, 609, 608, 611, 616, 635, 634, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	110, 121, 185, 316, 243, 159, 302, 510, 151, 0,
	0, 569, 571, 581, 598, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 617, 624, 604, 282, 562, 627, 534, 551, 638,
	552, 555, 593, 520, 574, 219, 549, 521, 0, 538,
	511, 545, 512, 535, 564, 153, 533, 606, 577, 626,
	183, 589, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 625, 570, 0, 633, 186, 586, 303, 271, 204,
	0, 0, 566, 613, 572, 602, 561, 595, 527, 585,
	628, 550, 591, 629, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 588, 623,
	547, 590, 592, 509, 587, 0, 515, 522, 637, 619,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	565, 573, 599, 558, 0, 0, 0, 0, 0, 0,
	1639, 0, 539, 0, 583, 0, 0, 0, 523, 516,
	0, 0, 563, 0, 0, 0, 526, 114, 540, 600,
	0, 507, 163, 205, 125, 603, 618, 560, 176, 309,
	622, 557, 556, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 548, 508, 607, 536,
	546, 146, 544, 250, 223, 298, 0, 580, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 559,
	594, 537, 143, 597, 584, 612, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 513, 0, 273, 301, 319,
	192, 132, 532, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 530, 531, 528, 0,
	529, 575, 576, 630, 631, 632, 601, 524, 0, 614,
	615, 0, 605, 620, 621, 596, 639, 553, 554, 514,
	517, 518, 519, 525, 567, 568, 579, 582, 610, 609,
	608, 611, 616, 635, 634, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 110, 121,
	185, 316, 243, 159, 302, 510, 151, 0, 0, 569,
	571, 581, 598, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 617,
	624, 604, 282, 562, 627, 534, 551, 638, 552, 555,
	593, 520, 574, 219, 549, 521, 0, 538, 511, 545,
	512, 535, 564, 153, 533, 606, 577, 626, 183, 589,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 625,
	570, 0, 633, 186, 586, 303, 271, 204, 0, 0,
	566, 613, 572, 602, 561, 595, 527, 585, 628, 550,
	591, 629, 68, 0, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 588, 623, 547, 590,
	592, 509, 587, 0, 515, 522, 637, 619, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 565, 573,
	599, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 583, 0, 0, 0, 523, 516, 0, 0,
	563, 0, 0, 0, 526, 114, 540, 600, 0, 507,
	163, 205, 125, 603, 618, 560, 176, 309, 622, 557,
	556, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 548, 508, 607, 536, 546, 146,
	544, 250, 223, 298, 0, 580, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 559, 594, 537,
	143, 597, 584, 612, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 513, 0, 273, 301, 319, 192, 132,
	532, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 530, 531, 528, 0, 529, 575,
	576, 630, 631, 632, 601, 524, 0, 614, 615, 0,
	605, 620, 621, 596, 639, 553, 554, 514, 517, 518,
	519, 525, 567, 568, 579, 582, 610, 609, 608, 611,
	616, 635, 634, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 110, 121, 185, 316,
	243, 159, 302, 510, 151, 0, 0, 569, 571, 581,
	598, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 617, 624, 604,
	282, 562, 627, 534, 551, 638, 552, 555, 593, 520,
	574, 219, 549, 521, 0, 538, 511, 545, 512, 535,
	564, 153, 533, 606, 577, 626, 183, 589, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 625, 570, 0,
	633, 186, 586, 303, 271, 204, 0, 0, 566, 613,
	572, 602, 561, 595, 527, 585, 628, 550, 591, 629,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 588, 623, 547, 590, 592, 509,
	587, 0, 515, 522, 637, 619, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 565, 573, 599, 558,
	0, 0, 0, 0, 0, 0, 1256, 0, 539, 0,
	583, 0, 0, 0, 523, 516, 0, 0, 563, 0,
	0, 0, 526, 114, 540, 600, 0, 507, 163, 205,
	125, 603, 618, 560, 176, 309, 622, 557, 556, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 548, 508, 607, 536, 546, 146, 544, 250,
	223, 298, 0, 580, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 559, 594, 537, 143, 597,
	584, 612, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 513, 0, 273, 301, 319, 192, 132, 532, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 530, 531, 528, 0, 529, 575, 576, 630,
	631, 632, 601, 524, 0, 614, 615, 0, 605, 620,
	621, 596, 639, 553, 554, 514, 517, 518, 519, 525,
	567, 568, 579, 582, 610, 609, 608, 611, 616, 635,
	634, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 110, 121, 185, 316, 243, 159,
	302, 510, 151, 0, 0, 569, 571, 581, 598, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 617, 624, 604, 282, 562,
	627, 534, 551, 638, 552, 555, 593, 520, 574, 219,
	549, 521, 0, 538, 511, 545, 512, 535, 564, 153,
	533, 606, 577, 626, 183, 589, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 625, 570, 0, 633, 186,
	586, 303, 271, 204, 0, 0, 566, 613, 572, 602,
	561, 595, 527, 585, 628, 550, 591, 629, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 588, 623, 547, 590, 592, 509, 587, 0,
	515, 522, 637, 619, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 565, 573, 599, 558, 0, 0,
	0, 0, 0, 0, 1119, 0, 539, 0, 583, 0,
	0, 0, 523, 516, 0, 0, 563, 0, 0, 0,
	526, 114, 540, 600, 0, 507, 163, 205, 125, 603,
	618, 560, 176, 309, 622, 557, 556, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	548, 508, 607, 536, 546, 146, 544, 250, 223, 298,
	0, 580, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 559, 594, 537, 143, 597, 584, 612,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 513,
	0, 273, 301, 319, 192, 132, 532, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	530, 531, 528, 0, 529, 575, 576, 630, 631, 632,
	601, 524, 0, 614, 615, 0, 605, 620, 621, 596,
	639, 553, 554, 514, 517, 518, 519, 525, 567, 568,
	579, 582, 610, 609, 608, 611, 616, 635, 634, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 110, 121, 185, 316, 243, 159, 302, 510,
	151, 0, 0, 569, 571, 581, 598, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 617, 624, 604, 282, 562, 627, 534,
	551, 638, 552, 555, 593, 520, 574, 219, 549, 521,
	0, 538, 511, 545, 512, 535, 564, 153, 533, 606,
	577, 626, 183, 589, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 625, 570, 0, 633, 186, 586, 303,
	271, 204, 0, 0, 566, 613, 572, 602, 561, 595,
	527, 585, 628, 550, 591, 629, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	588, 623, 547, 590, 592, 509, 587, 0, 515, 522,
	637, 619, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 565, 573, 599, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 583, 0, 0, 0,
	523, 516, 0, 0, 563, 0, 0, 0, 526, 114,
	540, 600, 0, 507, 163, 205, 125, 603, 618, 560,
	176, 309, 622, 557, 556, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 548, 508,
	607, 536, 546, 146, 544, 250, 223, 298, 0, 580,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 559, 594, 537, 143, 597, 584, 612, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 513, 0, 273,
	301, 319, 192, 132, 532, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 530, 531,
	528, 0, 529, 575, 576, 630, 631, 632, 601, 524,
	0, 614, 615, 0, 605, 620, 621, 596, 639, 553,
	554, 514, 517, 518, 519, 525, 567, 568, 579, 582,
	610, 609, 608, 611, 616, 635, 634, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	110, 121, 185, 316, 243, 159, 302, 510, 151, 0,
	0, 569, 571, 581, 598, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 617, 624, 604, 282, 562, 627, 534, 551, 638,
	552, 555, 593, 520, 574, 219, 549, 521, 0, 538,
	511, 545, 512, 535, 564, 153, 533, 606, 577, 626,
	183, 589, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 625, 570, 0, 633, 186, 586, 303, 271, 204,
	0, 0, 566, 613, 572, 602, 561, 595, 527, 585,
	628, 550, 591, 629, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 588, 623,
	547, 590, 592, 509, 587, 0, 515, 522, 637, 619,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	565, 573, 599, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 583, 0, 0, 0, 523, 516,
	0, 0, 563, 0, 0, 0, 526, 114, 540, 600,
	0, 507, 163, 205, 125, 603, 618, 560, 176, 309,
	622, 557, 556, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 548, 508, 607, 536,
	546, 146, 544, 250, 223, 298, 0, 580, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 559,
	594, 537, 143, 597, 584, 612, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 513, 0, 273, 301, 319,
	192, 132, 532, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 530, 531, 528, 0,
	529, 575, 576, 630, 631, 632, 601, 524, 0, 614,
	615, 0, 605, 620, 621, 596, 639, 553, 554, 514,
	517, 518, 519, 525, 567, 568, 579, 582, 610, 609,
	608, 611, 616, 635, 634, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 110, 121,
	185, 316, 243, 159, 302, 510, 151, 0, 0, 569,
	571, 581, 598, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 617,
	624, 604, 282, 562, 627, 534, 551, 638, 552, 555,
	593, 520, 574, 219, 549, 521, 0, 538, 511, 545,
	512, 535, 564, 153, 533, 606, 577, 626, 183, 589,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 1284,
	1288, 0, 633, 186, 586, 303, 271, 204, 0, 0,
	566, 613, 572, 602, 561, 595, 527, 585, 628, 550,
	591, 629, 0, 0, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 588, 623, 547, 590,
	592, 509, 587, 0, 515, 522, 637, 619, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 565, 573,
	599, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 583, 0, 0, 0, 523, 516, 0, 0,
	563, 0, 0, 0, 526, 114, 540, 600, 0, 507,
	163, 205, 125, 603, 618, 1287, 176, 309, 622, 557,
	556, 1282, 0, 1283, 166, 184, 129, 111, 123, 1280,
	1286, 215, 248, 256, 548, 508, 607, 536, 546, 146,
	544, 250, 223, 298, 0, 580, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 559, 594, 537,
	143, 597, 584, 612, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 513, 0, 273, 301, 319, 192, 132,
	532, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 530, 531, 528, 0, 529, 575,
	576, 630, 631, 632, 601, 524, 0, 614, 615, 0,
	605, 620, 621, 596, 639, 553, 554, 514, 517, 518,
	519, 525, 567, 568, 579, 582, 610, 609, 608, 611,
	616, 635, 634, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 110, 121, 185, 316,
	243, 159, 302, 510, 151, 0, 0, 569, 571, 581,
	598, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 617, 624, 604,
	282, 562, 627, 534, 551, 638, 552, 555, 593, 520,
	574, 219, 549, 521, 0, 538, 511, 545, 512, 535,
	564, 153, 533, 606, 577, 626, 183, 589, 0, 145,
	191, 189, 0, 0, 0, 225, 280, 625, 570, 0,
	633, 186, 586, 303, 271, 204, 0, 0, 566, 613,
	572, 602, 561, 595, 527, 585, 628, 550, 591, 629,
	0, 0, 0, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 588, 623, 547, 590, 592, 509,
	587, 0, 515, 522, 637, 619, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 565, 573, 599, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	583, 0, 0, 0, 523, 516, 0, 0, 563, 0,
	0, 0, 526, 114, 540, 600, 0, 507, 163, 205,
	125, 603, 618, 560, 176, 309, 622, 557, 556, 239,
	0, 276, 166, 184, 129, 111, 123, 139, 165, 215,
	248, 256, 548, 508, 607, 536, 546, 146, 544, 250,
	223, 298, 0, 580, 229, 249, 187, 287, 241, 296,
	297, 167, 310, 311, 281, 306, 315, 268, 154, 0,
	115, 0, 236, 149, 180, 559, 594, 537, 143, 597,
	584, 612, 267, 130, 283, 203, 209, 140, 142, 141,
	124, 262, 285, 134, 144, 272, 277, 116, 279, 295,
	136, 260, 118, 293, 275, 201, 177, 178, 117, 0,
	246, 152, 162, 148, 218, 0, 161, 238, 290, 291,
	147, 318, 126, 305, 120, 127, 304, 212, 0, 211,
	307, 286, 294, 202, 195, 0, 119, 292, 200, 194,
	182, 157, 169, 234, 190, 235, 170, 207, 206, 208,
	0, 513, 0, 273, 301, 319, 192, 132, 532, 261,
	284, 313, 314, 0, 0, 133, 160, 156, 233, 210,
	128, 172, 270, 181, 188, 245, 317, 222, 251, 137,
	300, 269, 530, 531, 528, 0, 529, 575, 576, 630,
	631, 632, 601, 524, 0, 614, 615, 0, 605, 620,
	621, 596, 639, 553, 554, 514, 517, 518, 519, 525,
	567, 568, 579, 582, 610, 609, 608, 611, 616, 635,
	634, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 110, 121, 185, 316, 243, 159,
	302, 510, 151, 0, 0, 569, 571, 581, 598, 112,
	113, 122, 131, 138, 150, 155, 158, 164, 168, 171,
	173, 174, 175, 179, 193, 196, 197, 198, 199, 213,
	214, 216, 217, 220, 221, 224, 226, 227, 228, 230,
	231, 232, 237, 240, 242, 244, 247, 252, 253, 254,
	255, 257, 258, 259, 263, 264, 265, 266, 274, 278,
	288, 289, 299, 308, 312, 617, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 1263, 0, 68, 0, 0, 388,
	411, 410, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 1264, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 0, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 381, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 717, 388,
	411, 410, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 0, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 0, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 411, 410, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 1161, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 153, 387, 0,
	0, 0, 183, 0, 0, 145, 191, 189, 0, 0,
	0, 225, 280, 0, 0, 0, 434, 186, 0, 303,
	271, 204, 0, 0, 0, 0, 423, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 388,
	411, 1172, 413, 414, 415, 416, 0, 0, 135, 412,
	417, 418, 419, 0, 0, 0, 385, 402, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 400, 1161, 0, 0, 0, 448, 0, 401, 0,
	0, 396, 397, 398, 403, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 163, 205, 125, 425, 0, 0,
	176, 309, 0, 0, 446, 239, 0, 276, 166, 184,
	129, 111, 123, 139, 165, 215, 248, 256, 431, 0,
	0, 0, 0, 146, 0, 250, 223, 298, 0, 0,
	229, 249, 187, 287, 241, 296, 297, 167, 310, 311,
	281, 306, 315, 268, 154, 0, 115, 0, 236, 149,
	180, 0, 0, 0, 143, 0, 0, 0, 267, 130,
	283, 203, 209, 140, 142, 141, 124, 262, 285, 134,
	144, 272, 277, 116, 279, 295, 136, 260, 118, 293,
	275, 201, 177, 178, 117, 0, 246, 152, 162, 148,
	218, 0, 161, 238, 290, 291, 147, 318, 126, 305,
	120, 127, 304, 212, 0, 211, 307, 286, 294, 202,
	195, 0, 119, 292, 200, 194, 182, 157, 169, 234,
	190, 235, 170, 207, 206, 208, 0, 0, 0, 273,
	301, 319, 192, 132, 0, 261, 284, 313, 314, 0,
	0, 133, 160, 156, 233, 210, 128, 172, 270, 181,
	188, 245, 317, 222, 251, 137, 300, 269, 435, 447,
	441, 443, 442, 439, 440, 438, 437, 436, 449, 426,
	427, 428, 429, 432, 0, 444, 445, 0, 0, 0,
	0, 462, 463, 464, 465, 466, 467, 468, 461, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 458, 459, 430,
	110, 121, 185, 316, 243, 159, 302, 0, 151, 0,
	0, 0, 0, 0, 0, 112, 113, 122, 131, 138,
	150, 155, 158, 164, 168, 171, 173, 174, 175, 179,
	193, 196, 197, 198, 199, 213, 214, 216, 217, 220,
	221, 224, 226, 227, 228, 230, 231, 232, 237, 240,
	242, 244, 247, 252, 253, 254, 255, 257, 258, 259,
	263, 264, 265, 266, 274, 278, 288, 289, 299, 308,
	312, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 153, 387, 0, 0, 0, 183, 0, 0,
	145, 191, 189, 0, 0, 0, 225, 280, 0, 0,
	0, 434, 186, 0, 303, 271, 204, 0, 0, 0,
	0, 423, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 388, 411, 1169, 413, 414, 415,
	416, 0, 0, 135, 412, 417, 418, 419, 0, 0,
	0, 385, 402, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 400, 1161, 0, 0,
	0, 448, 0, 401, 0, 0, 396, 397, 398, 403,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 163,
	205, 125, 425, 0, 0, 176, 309, 0, 0, 446,
	239, 0, 276, 166, 184, 129, 111, 123, 139, 165,
	215, 248, 256, 431, 0, 0, 0, 0, 146, 0,
	250, 223, 298, 0, 0, 229, 249, 187, 287, 241,
	296, 297, 167, 310, 311, 281, 306, 315, 268, 154,
	0, 115, 0, 236, 149, 180, 0, 0, 0, 143,
	0, 0, 0, 267, 130, 283, 203, 209, 140, 142,
	141, 124, 262, 285, 134, 144, 272, 277, 116, 279,
	295, 136, 260, 118, 293, 275, 201, 177, 178, 117,
	0, 246, 152, 162, 148, 218, 0, 161, 238, 290,
	291, 147, 318, 126, 305, 120, 127, 304, 212, 0,
	211, 307, 286, 294, 202, 195, 0, 119, 292, 200,
	194, 182, 157, 169, 234, 190, 235, 170, 207, 206,
	208, 0, 0, 0, 273, 301, 319, 192, 132, 0,
	261, 284, 313, 314, 0, 0, 133, 160, 156, 233,
	210, 128, 172, 270, 181, 188, 245, 317, 222, 251,
	137, 300, 269, 435, 447, 441, 443, 442, 439, 440,
	438, 437, 436, 449, 426, 427, 428, 429, 432, 0,
	444, 445, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 467, 468, 461, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 458, 459, 430, 110, 121, 185, 316, 243,
	159, 302, 0, 151, 0, 0, 0, 0, 0, 0,
	112, 113, 122, 131, 138, 150, 155, 158, 164, 168,
	171, 173, 174, 175, 179, 193, 196, 197, 198, 199,
	213, 214, 216, 217, 220, 221, 224, 226, 227, 228,
	230, 231, 232, 237, 240, 242, 244, 247, 252, 253,
	254, 255, 257, 258, 259, 263, 264, 265, 266, 274,
	278, 288, 289, 299, 308, 312, 29, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 1079, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 153, 387,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 385, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 153, 387, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 385, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 733, 734, 735,
	736, 737, 741, 742, 746, 747, 755, 754, 753, 756,
	757, 759, 758, 760, 738, 739, 740, 743, 744, 745,
	748, 749, 752, 750, 751, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 0, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	2197, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 434, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 423, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 717, 388, 411, 410, 413, 414,
	415, 416, 0, 0, 135, 412, 417, 418, 419, 0,
	0, 0, 0, 402, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 400, 0, 0,
	0, 0, 448, 0, 401, 0, 0, 396, 397, 398,
	403, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 425, 0, 0, 176, 309, 0, 0,
	446, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 431, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 435, 447, 441, 443, 442, 439,
	440, 438, 437, 436, 449, 426, 427, 428, 429, 432,
	0, 444, 445, 0, 0, 0, 0, 462, 463, 464,
	465, 466, 467, 468, 461, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 458, 459, 430, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 434, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 423, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	388, 411, 410, 413, 414, 415, 416, 0, 0, 135,
	412, 417, 418, 419, 0, 0, 0, 0, 402, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 400, 0, 0, 0, 0, 448, 0, 401,
	0, 0, 396, 397, 398, 403, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 425, 0,
	0, 176, 309, 0, 0, 446, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 431,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 435,
	447, 441, 443, 442, 439, 440, 438, 437, 436, 449,
	426, 427, 428, 429, 432, 0, 444, 445, 0, 0,
	0, 0, 462, 463, 464, 465, 466, 467, 468, 461,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 458, 459,
	430, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1243, 1245,
	0, 0, 0, 0, 0, 108, 0, 1248, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 1244,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 781, 782,
	783, 784, 788, 789, 793, 794, 802, 801, 800, 803,
	804, 806, 805, 807, 785, 786, 787, 790, 791, 792,
	795, 796, 799, 797, 798, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1243, 1245, 0, 0, 0, 0, 0,
	108, 0, 1248, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 1244, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 1239, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 781, 782, 783, 784, 788, 789, 793,
	794, 802, 801, 800, 803, 804, 806, 805, 807, 785,
	786, 787, 790, 791, 792, 795, 796, 799, 797, 798,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 775, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 779, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	772, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 781, 782,
	783, 784, 788, 789, 793, 794, 802, 801, 800, 803,
	804, 806, 805, 807, 785, 786, 787, 790, 791, 792,
	795, 796, 799, 797, 798, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 1497, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 1248, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 781, 782, 783, 784, 788, 789, 793,
	794, 802, 801, 800, 803, 804, 806, 805, 807, 785,
	786, 787, 790, 791, 792, 795, 796, 799, 797, 798,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 1248, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 780, 781, 782,
	783, 784, 788, 789, 793, 794, 802, 801, 800, 803,
	804, 806, 805, 807, 785, 786, 787, 790, 791, 792,
	795, 796, 799, 797, 798, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 183, 0, 0, 145, 191, 189, 0,
	0, 0, 225, 280, 0, 0, 0, 0, 186, 0,
	303, 271, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 779, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 163, 205, 125, 0, 0,
	0, 176, 309, 0, 0, 0, 239, 0, 276, 166,
	184, 129, 111, 123, 139, 165, 215, 248, 256, 0,
	0, 0, 0, 0, 146, 0, 250, 223, 298, 0,
	0, 229, 249, 187, 287, 241, 296, 297, 167, 310,
	311, 281, 306, 315, 268, 154, 0, 115, 0, 236,
	149, 180, 0, 0, 0, 143, 0, 0, 0, 267,
	130, 283, 203, 209, 140, 142, 141, 124, 262, 285,
	134, 144, 272, 277, 116, 279, 295, 136, 260, 118,
	293, 275, 201, 177, 178, 117, 0, 246, 152, 162,
	148, 218, 0, 161, 238, 290, 291, 147, 318, 126,
	305, 120, 127, 304, 212, 0, 211, 307, 286, 294,
	202, 195, 0, 119, 292, 200, 194, 182, 157, 169,
	234, 190, 235, 170, 207, 206, 208, 0, 0, 0,
	273, 301, 319, 192, 132, 0, 261, 284, 313, 314,
	0, 0, 133, 160, 156, 233, 210, 128, 172, 270,
	181, 188, 245, 317, 222, 251, 137, 300, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 781, 782, 783, 784, 788, 789, 793,
	794, 802, 801, 800, 803, 804, 806, 805, 807, 785,
	786, 787, 790, 791, 792, 795, 796, 799, 797, 798,
	0, 110, 121, 185, 316, 243, 159, 302, 0, 151,
	0, 0, 0, 0, 0, 0, 112, 113, 122, 131,
	138, 150, 155, 158, 164, 168, 171, 173, 174, 175,
	179, 193, 196, 197, 198, 199, 213, 214, 216, 217,
	220, 221, 224, 226, 227, 228, 230, 231, 232, 237,
	240, 242, 244, 247, 252, 253, 254, 255, 257, 258,
	259, 263, 264, 265, 266, 274, 278, 288, 289, 299,
	308, 312, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 183, 0,
	0, 145, 191, 189, 0, 0, 0, 225, 280, 0,
	0, 0, 0, 186, 0, 303, 271, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 817, 816, 826, 827, 819, 820, 821, 822,
	823, 824, 825, 818, 0, 0, 828, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 0, 0,
	163, 205, 125, 0, 0, 0, 176, 309, 0, 0,
	0, 239, 0, 276, 166, 184, 129, 111, 123, 139,
	165, 215, 248, 256, 0, 0, 0, 0, 0, 146,
	0, 250, 223, 298, 0, 0, 229, 249, 187, 287,
	241, 296, 297, 167, 310, 311, 281, 306, 315, 268,
	154, 0, 115, 0, 236, 149, 180, 0, 0, 0,
	143, 0, 0, 0, 267, 130, 283, 203, 209, 140,
	142, 141, 124, 262, 285, 134, 144, 272, 277, 116,
	279, 295, 136, 260, 118, 293, 275, 201, 177, 178,
	117, 0, 246, 152, 162, 148, 218, 0, 161, 238,
	290, 291, 147, 318, 126, 305, 120, 127, 304, 212,
	0, 211, 307, 286, 294, 202, 195, 0, 119, 292,
	200, 194, 182, 157, 169, 234, 190, 235, 170, 207,
	206, 208, 0, 0, 0, 273, 301, 319, 192, 132,
	0, 261, 284, 313, 314, 0, 0, 133, 160, 156,
	233, 210, 128, 172, 270, 181, 188, 245, 317, 222,
	251, 137, 300, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 121, 185, 316,
	243, 159, 302, 0, 151, 0, 0, 0, 0, 0,
	0, 112, 113, 122, 131, 138, 150, 155, 158, 164,
	168, 171, 173, 174, 175, 179, 193, 196, 197, 198,
	199, 213, 214, 216, 217, 220, 221, 224, 226, 227,
	228, 230, 231, 232, 237, 240, 242, 244, 247, 252,
	253, 254, 255, 257, 258, 259, 263, 264, 265, 266,
	274, 278, 288, 289, 299, 308, 312, 29, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 183, 0, 0, 145, 191, 189,
	0, 0, 0, 225, 280, 0, 0, 0, 0, 186,
	0, 303, 271, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 0, 0, 0, 0, 163, 205, 125, 0,
	0, 0, 176, 309, 0, 0, 0, 239, 0, 276,
	166, 184, 129, 111, 123, 139, 165, 215, 248, 256,
	0, 0, 0, 0, 0, 146, 0, 250, 223, 298,
	0, 0, 229, 249, 187, 287, 241, 296, 297, 167,
	310, 311, 281, 306, 315, 268, 154, 0, 115, 0,
	236, 149, 180, 0, 0, 0, 143, 0, 0, 0,
	267, 130, 283, 203, 209, 140, 142, 141, 124, 262,
	285, 134, 144, 272, 277, 116, 279, 295, 136, 260,
	118, 293, 275, 201, 177, 178, 117, 0, 246, 152,
	162, 148, 218, 0, 161, 238, 290, 291, 147, 318,
	126, 305, 120, 127, 304, 212, 0, 211, 307, 286,
	294, 202, 195, 0, 119, 292, 200, 194, 182, 157,
	169, 234, 190, 235, 170, 207, 206, 208, 0, 0,
	0, 273, 301, 319, 192, 132, 0, 261, 284, 313,
	314, 0, 0, 133, 160, 156, 233, 210, 128, 172,
	270, 181, 188, 245, 317, 222, 251, 137, 300, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 121, 185, 316, 243, 159, 302, 0,
	151, 0, 0, 0, 0, 0, 0, 112, 113, 122,
	131, 138, 150, 155, 158, 164, 168, 171, 173, 174,
	175, 179, 193, 196, 197, 198, 199, 213, 214, 216,
	217, 220, 221, 224, 226, 227, 228, 230, 231, 232,
	237, 240, 242, 244, 247, 252, 253, 254, 255, 257,
	258, 259, 263, 264, 265, 266, 274, 278, 288, 289,
	299, 308, 312, 29, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 950, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 949, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 105, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 127, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 210, 128,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 295, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 497, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 498, 496,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 295, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 127,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 210, 128, 172, 270, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 183, 0, 0, 145, 191,
	189, 0, 0, 0, 225, 280, 0, 0, 0, 0,
	186, 0, 303, 271, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 0, 0, 0, 163, 205, 125,
	0, 0, 0, 176, 309, 0, 0, 0, 239, 0,
	276, 166, 184, 129, 111, 123, 139, 165, 215, 248,
	256, 0, 0, 0, 0, 0, 146, 0, 250, 223,
	298, 0, 0, 229, 249, 187, 287, 241, 296, 297,
	167, 310, 311, 281, 306, 315, 268, 154, 0, 115,
	0, 236, 149, 180, 0, 0, 0, 143, 0, 0,
	0, 267, 130, 283, 203, 209, 140, 142, 141, 124,
	262, 285, 134, 144, 272, 277, 116, 279, 941, 136,
	260, 118, 293, 275, 201, 177, 178, 117, 0, 246,
	152, 162, 148, 218, 0, 161, 238, 290, 291, 147,
	318, 126, 305, 120, 497, 304, 212, 0, 211, 307,
	286, 294, 202, 195, 0, 119, 292, 200, 194, 182,
	157, 169, 234, 190, 235, 170, 207, 206, 208, 0,
	0, 0, 273, 301, 319, 192, 132, 0, 261, 284,
	313, 314, 0, 0, 133, 160, 156, 233, 498, 496,
	172, 270, 181, 188, 245, 317, 222, 251, 137, 300,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 121, 185, 316, 243, 159, 302,
	0, 151, 0, 0, 0, 0, 0, 0, 112, 113,
	122, 131, 138, 150, 155, 158, 164, 168, 171, 173,
	174, 175, 179, 193, 196, 197, 198, 199, 213, 214,
	216, 217, 220, 221, 224, 226, 227, 228, 230, 231,
	232, 237, 240, 242, 244, 247, 252, 253, 254, 255,
	257, 258, 259, 263, 264, 265, 266, 274, 278, 288,
	289, 299, 308, 312, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	183, 0, 0, 145, 191, 189, 0, 0, 0, 225,
	280, 0, 0, 0, 0, 186, 0, 303, 271, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 163, 205, 125, 0, 0, 0, 176, 309,
	0, 0, 0, 239, 0, 276, 166, 184, 129, 111,
	123, 139, 165, 215, 248, 256, 0, 0, 0, 0,
	0, 146, 0, 250, 223, 298, 0, 0, 229, 249,
	187, 287, 241, 296, 297, 167, 310, 311, 281, 306,
	315, 268, 154, 0, 115, 0, 236, 149, 180, 0,
	0, 0, 143, 0, 0, 0, 267, 130, 283, 203,
	209, 140, 142, 141, 124, 262, 285, 134, 144, 272,
	277, 116, 279, 488, 136, 260, 118, 293, 275, 201,
	177, 178, 117, 0, 246, 152, 162, 148, 218, 0,
	161, 238, 290, 291, 147, 318, 126, 305, 120, 497,
	304, 212, 0, 211, 307, 286, 294, 202, 195, 0,
	119, 292, 200, 194, 182, 157, 169, 234, 190, 235,
	170, 207, 206, 208, 0, 0, 0, 273, 301, 319,
	192, 132, 0, 261, 284, 313, 314, 0, 0, 133,
	160, 156, 233, 498, 496, 491, 490, 181, 188, 245,
	317, 222, 251, 137, 300, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 121,
	185, 316, 243, 159, 302, 0, 151, 0, 0, 0,
	0, 0, 0, 112, 113, 122, 131, 138, 150, 155,
	158, 164, 168, 171, 173, 174, 175, 179, 193, 196,
	197, 198, 199, 213, 214, 216, 217, 220, 221, 224,
	226, 227, 228, 230, 231, 232, 237, 240, 242, 244,
	247, 252, 253, 254, 255, 257, 258, 259, 263, 264,
	265, 266, 274, 278, 288, 289, 299, 308, 312,
}
var yyPact = [...]int{

	2533, -1000, -297, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1374, 1408, -1000,
	-1000, -1000, -1000, -1000, -1000, 479, 194, -1000, -1000, -1000,
	208, 31, 20857, 207, 3557, 21687, -1000, -1000, -1000, -1000,
	156, 21687, -1000, -1000, -74, -80, -1000, 27, 991, 1255,
	1078, -1000, -1000, 80, 23, -1000, -1000, -1000, -1000, -1000,
	-1000, 1353, 1372, 1123, 1346, 1183, -1000, 10064, 178, 178,
	20442, 23347, -1000, 21687, 7979, 199, 21687, -163, 171, 171,
	107, 171, -1000, 503, -1000, -1000, -1000, 21687, 172, 21272,
	172, 172, 172, 172, 172, 21687, -1000, 269, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21687, 984, 1273, 6725, 81, 6725, 6725, -1000, 509, -1000,
	93, 84, 90, 6725, 17, 529, 85, 19, -1000, 6725,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 206, 1078, 502,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1270, 631, 1131,
	-68, 598, 205, 21687, 456, -1000, -1000, 1277, 12970, 13385,
	1374, -1000, 1078, -1000, -1000, -1000, 1231, -1000, -1000, 547,
	1398, -1000, 15875, 264, -1000, 12970, 3390, 1061, -1000, -1000,
	1061, -1000, -1000, 224, -1000, -1000, 14630, 14630, 14630, 14630,
	14630, 14630, 14630, 14630, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1061, -1000, 12140, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 12970, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 20027, 19197,
	21687, 1046, 1045, -1000, -1000, 260, 945, 22932, -143, -1000,
	-1000, -1000, 497, 18782, -1000, 254, -1000, 1269, -1000, -1000,
	983, -1000, 2873, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21272, 1319, 188, 978, 532, 977, 970, 967, 21687, 963,
	1051, 186, 21687, 1300, 1150, 21687, 962, 960, 957, 956,
	-1000, 9233, -1000, 6725, 6725, -1000, -1000, -1000, 171, 171,
	6725, 6725, 6725, 21687, 21687, 21687, -1000, -1000, 21687, -1000,
	-1000, 485, 485, 6725, 6725, -1000, 1396, 474, 474, -1000,
	-1000, -1000, -1000, 12970, -1000, 14630, 427, -1000, 1149, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 948, -1000, -1000, 450,
	-1000, 769, -1000, 12555, -295, -1000, -1000, -1000, 21687, 6725,
	102, 136, 127, 21687, -1000, 1436, 387, 894, 249, 1050,
	-1000, 519, 1301, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
	1061, 1353, 598, 1183, 766, 1160, -1000, -1000, -1000, 21687,
	-1000, 12970, 12970, 712, -1000, 17120, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7561, 444,
	14630, 599, 413, 14630, 14630, 14630, 14630, 14630, 14630, 14630,
	14630, 14630, 14630, 14630, 14630, 14630, 14630, 14630, 734, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 946, -1000, 1078,
	738, 738, 279, 279, 279, 279, 279, 279, 279, 17535,
	1341, 598, 953, 693, 12140, 10894, 10894, 598, 12970, 12970,
	11724, 11309, 10894, 10894, 1341, 518, 693, 22517, -1000, -1000,
	14215, -1000, -1000, -1000, -1000, -1000, 598, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 21272, 21272, 10894, 10894, 10894,
	10894, 598, 598, 10894, 10894, 10894, 10894, 10894, 598, 598,
	598, 598, 1341, 1341, 10894, 10894, 10894, 1341, 10894, 10894,
	1341, 10894, 10894, 10894, 10894, 1341, 10894, 10894, 10894, 117,
	21687, -1000, 1058, 1109, -1000, -1000, -1000, 1317, 18367, 15460,
	117, 1025, 19197, 21687, -1000, -1000, 19197, 21687, 7143, 22102,
	945, -143, 1030, -1000, -95, -83, 9649, 277, -1000, -1000,
	-1000, 8397, -1000, 5053, 8815, -1000, -50, -1000, -1000, -1000,
	1077, -1000, 1077, 162, -9, 1077, 1077, 1077, 1077, 1077,
	-7, -7, -7, -7, -8, -1000, -1000, -1000, -1000, -1000,
	1130, 1129, -1000, 1077, 1077, 1077, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1105, 176, 1094, 1094, 1094, 1094,
	1094, 1133, -1000, 21687, 6725, 1281, 6725, 98, 1124, -1000,
	-1000, 21687, 21687, 1048, -1000, 21687, 1042, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 944, 933, -1000,
	-1000, -1000, -1000, -1000, -1000, 489, -1000, 750, 12970, -1000,
	-1000, -1000, 21687, 1311, 21687, 21687, 485, 693, 597, -1000,
	745, 21687, -1000, 1036, -1000, 477, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	943, 1288, 735, 240, -1000, 21687, 21687, 21687, 21687, 21687,
	219, -1000, 1197, 12970, 12970, 8397, 13385, -1000, -1000, -1000,
	-1000, 1277, -1000, 1341, 1358, -1000, 1216, 1212, -1000, -1000,
	-1000, 444, 491, -1000, -1000, 720, -1000, -1000, -1000, -1000,
	243, 1061, -1000, 2603, -1000, -1000, -1000, -1000, 599, 14630,
	14630, 14630, 597, 2603, 1615, 612, 717, 279, 419, 419,
	299, 299, 299, 299, 299, 786, 786, -1000, -1000, -1000,
	598, -1000, -1000, -1000, 10894, -1000, 12970, -1000, 598, 930,
	-1000, -1000, 693, 237, 930, -1000, 825, 616, 382, 1395,
	930, 368, 1394, 930, 930, 930, 10894, 515, -1000, 12970,
	598, -1000, 751, 1033, 1032, 930, 598, 1031, 930, 930,
	-175, -175, 598, 930, 598, 930, 930, -175, -175, -175,
	-175, 10894, 10894, 930, 930, 930, 10894, 930, 930, 10894,
	930, 930, 930, 930, 10894, 930, 930, 930, 1019, 1061,
	-1000, 22102, 19197, 19197, 19197, 19197, 19197, -1000, 1180, 1179,
	-1000, 1173, 1162, 1174, 16705, -1000, 941, 18367, -1000, 1061,
	-1000, 16290, 238, 198, 197, 195, -1000, -1000, -1000, 1383,
	19197, 1052, -1000, 1052, -1000, 235, -1000, -1000, 1030, -143,
	-97, -1000, -1000, -1000, -1000, 693, -1000, 776, -1000, 234,
	1029, 4635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1119,
	932, -1000, 1234, 261, 275, 800, 1222, -1000, -1000, 537,
	-64, -1000, -1000, 602, -7, -7, 1077, 1077, 161, 1077,
	-1000, -7, -1000, -1000, -1000, 277, 1268, 277, 277, 277,
	277, -7, 726, 726, -1000, -1000, -1000, -1000, 589, -1000,
	1105, -1000, 575, -1000, -1000, -1000, -1000, 1148, 21272, 1078,
	1310, -1000, -1000, -1000, 1392, -1000, -1000, 174, 185, -1000,
	6725, 21687, 6725, 6725, 1383, 931, 921, -1000, 693, 474,
	485, 1258, -1000, -1000, -1000, -1000, 14630, -1000, -1000, 450,
	738, -1000, 117, 202, -1000, -1000, 637, 523, 460, 150,
	150, -1000, 467, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 116, 1069, -1000, -1000, -1000, -1000, 46, 97,
	1194, 693, 693, -1000, -1000, 21687, -1000, -1000, -1000, -1000,
	995, 10064, -1000, -1000, -1000, 6307, 10894, -1000, 597, 2603,
	1041, -1000, 14630, -1000, 598, 693, -1000, 10894, -1000, 5889,
	-1000, 148, 734, 148, 14630, 14630, -1000, 14630, 14630, -1000,
	-210, -1000, 1072, 506, -1000, 12970, 594, -1000, -1000, 14630,
	14630, -1000, -1000, -1000, -1000, -1000, 19612, -1000, -175, -175,
	-175, -175, -175, -1000, -1000, -1000, -1000, 930, 930, -175,
	-175, -175, 930, -175, -175, 930, -175, -175, -175, -175,
	930, -175, -175, -175, 1145, 22102, 1061, -1000, 17951, 21272,
	1068, 1109, 1128, 1143, 1404, -1000, -1000, -1000, -1000, 1175,
	-1000, 1163, -1000, -1000, -1000, -1000, 21272, 14630, 238, -1000,
	1061, 1061, 1061, 1374, 12970, 1052, -1000, -1000, 283, -1000,
	-1000, -102, -109, -1000, -1000, -1000, 7979, 5053, -1000, 5053,
	21272, 138, -1000, 800, -1000, -1000, 800, -1000, -1000, -1000,
	1096, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 551, 14630,
	1425, -1000, 1230, -1000, 1229, 725, -1000, -1000, 1009, 277,
	277, -7, -1000, -1000, 1077, -1000, 277, -1000, 294, -1000,
	-1000, -1000, -1000, 277, 920, -1000, 918, 1028, -1000, 915,
	21687, -1000, -1000, -1000, 1142, -1000, -1000, -1000, 998, 1027,
	-1000, 2873, 912, 911, 908, 21687, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 485, -1000, 14630, 2603, -1000, -1000, -7,
	21687, -1000, 783, -1000, 800, 265, -1000, -1000, -1000, 907,
	1222, -1000, -1000, 905, -1000, 900, 21272, 1228, 899, 21687,
	21272, -1000, -1000, 836, 891, 12970, -1000, 21272, -218, 868,
	21272, 21272, 21272, -1000, -1000, 1381, 19197, -1000, -1000, -1000,
	-1000, 598, -1000, 14630, 2603, -1000, -1000, -1000, 231, 598,
	1077, 1077, -1000, 1077, 1094, -1000, 1077, 13, 1077, 12,
	598, 598, 2414, 2329, 2216, 1517, 1061, -170, -1000, 693,
	12970, 1314, 809, -1000, 308, -1000, -1000, -1000, -1000, -1000,
	-175, -175, -1000, -1000, -1000, -1000, -175, -1000, -1000, -175,
	-1000, -1000, -1000, -1000, -175, -1000, -1000, -1000, -1000, 1278,
	1014, 985, -1000, -1000, 10479, 598, 897, 230, 895, -1000,
	1374, -1000, -1000, 12970, 1079, -1000, 12970, -1000, -1000, -1000,
	895, 1067, -1000, 21272, 21272, 21272, 1353, 693, -1000, -1000,
	-1000, -1000, 4635, -1000, 890, -1000, 1077, -1000, 1222, -1000,
	-1000, 21272, -1000, 2603, -149, -1000, -1000, -1000, -1000, -1000,
	-1000, 277, -1000, -1000, -1000, -1000, -1000, -7, 714, -7,
	573, -1000, 572, 1076, -1000, 1078, 21687, 53, 174, -1000,
	2873, 2873, 2873, -1000, -1000, 2603, -65, -1000, 836, 131,
	2873, -1000, 1133, 261, 138, -1000, -1000, -1000, -1000, 843,
	345, -1000, 164, 131, 836, 693, 1282, -1000, 7979, -1000,
	-1000, 1075, 1134, -1000, 1376, 1371, 1052, 10064, -1000, -1000,
	2603, 5471, -1000, -1000, 157, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14630, 14630, 14630, 14630, 14630, 598, 703,
	693, 14630, 14630, 598, 1369, -1000, -1000, -1000, -1000, -1000,
	1220, -1000, 1061, -1000, -1000, 1070, 21272, 21272, -1000, 21272,
	1353, 693, 21272, 693, 15045, -1000, 16705, 888, -1000, 888,
	888, -1000, 239, 21272, 1301, 866, -1000, -1000, 277, -1000,
	277, 996, 898, 21272, -1000, 1333, -1000, 53, -1000, 702,
	55, 60, -1000, 54, 48, 47, 44, 42, -1000, -1000,
	-1000, -1000, 1249, 1246, 826, -1000, -1000, 808, -1000, 1074,
	800, -1000, -1000, 784, -1000, -1000, 21272, -1000, 131, 1061,
	1024, -1000, 476, 21272, 21687, -1000, 13385, 13385, 1381, -1000,
	-1000, -1000, -1000, 751, 751, 751, 751, 68, -1000, -1000,
	751, 751, -1000, 12970, 1407, -1000, 1061, -1000, 1078, 229,
	-1000, -1000, -1000, 863, -1000, 238, 21272, -1000, -1000, -1000,
	239, -1000, 781, 467, 695, -1000, -1000, 135, -1000, -1000,
	-1000, -1000, 840, -1000, 83, 3909, -1000, -1000, -1000, -1000,
	-1000, -1000, 1254, 1253, 70, 177, 1233, 1240, 1367, -1000,
	-1000, -1000, 537, 21272, 1133, -1000, -1000, -1000, -1000, 115,
	7979, 5053, 819, -1000, -1000, 693, -1000, 1015, -1000, 693,
	-1000, 1376, -1000, -1000, -1000, -1000, -1000, 598, 82, -221,
	-1000, -1000, 1047, 22102, 985, 598, 21272, -1000, -1000, -1000,
	-1000, -1000, 568, -1000, 21687, 239, 78, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12970, 12970, 3909, -1000, -1000, -1000, -1000, 1071, 567, 1246,
	1365, 1244, 1242, -1000, 660, -1000, 816, 1066, -1000, 814,
	-1000, 21272, -1000, -1000, 1069, 13385, -1000, -1000, 1191, -216,
	-225, 598, 945, -1000, -1000, -1000, 1065, -1000, 239, 74,
	-1000, 493, 544, -298, -1000, -1000, 21272, 1248, -1000, 659,
	-1000, 1362, 1360, -1000, 239, 21272, -1000, 115, 1207, -218,
	-1000, -1000, 1190, -1000, -1000, 21272, -1000, 779, 753, 694,
	-1000, 12970, 3909, 3694, 812, -1000, -1000, 628, 619, -1000,
	807, -1000, 111, -1000, -219, 805, 183, -1000, -1000, 541,
	3909, -1000, 535, -302, -1000, -1000, -1000, -1000, -1000, 239,
	103, -222, 1140, -1000, -1000, -1000, -1000, -1000, -1000, 3909,
	-1000, -303, 3909, 481, -1000, 1061, -226, 1139, 1136, 1387,
	-1000, -305, 3383, -306, 168, 3909, 595, -1000, 12970, 13800,
	-1000, -1000, 1402, -1000, 1400, 328, 328, 3166, 527, 3909,
	-1000, -307, 163, 3909, -1000, 457, 751, 598, -1000, -1000,
	-1000, 143, 606, -1000, -1000, -1000, 2831, -1000, -308, 3909,
	-1000, -1000, -1000, -1000, -1000, 159, 2490, -310, -1000, 158,
	3909, -1000,
}
var yyPgo = [...]int{

	0, 1754, 165, 692, 1753, 1752, 1750, 17, 14, 6,
	19, 1749, 1544, 1541, 1539, 1531, 1748, 1529, 1747, 16,
	1746, 1745, 1527, 1744, 8, 1743, 12, 1741, 2, 93,
	1740, 1739, 1738, 1737, 1720, 1511, 1718, 1717, 1716, 1715,
	1714, 1509, 1507, 1713, 1712, 1505, 1488, 1711, 1710, 1475,
	1471, 1455, 1709, 129, 1707, 1704, 1703, 120, 1702, 107,
	1700, 1699, 1698, 76, 1697, 1561, 84, 52, 80, 200,
	1695, 25, 71, 138, 87, 1693, 75, 1692, 1691, 111,
	1690, 1689, 1688, 86, 1687, 1685, 2263, 1684, 1683, 100,
	1682, 47, 35, 67, 1681, 1680, 1675, 1674, 113, 125,
	1672, 1671, 1670, 57, 1668, 1662, 124, 1661, 1658, 1657,
	92, 49, 1656, 37, 40, 51, 1655, 148, 28, 1653,
	94, 1651, 1650, 36, 29, 1649, 31, 1647, 58, 1646,
	98, 70, 824, 11, 39, 43, 53, 90, 1645, 9,
	1643, 88, 66, 60, 42, 104, 1642, 99, 89, 1622,
	1621, 637, 1620, 1619, 91, 1618, 65, 82, 1617, 668,
	112, 63, 1616, 1615, 1614, 1612, 56, 72, 1611, 1610,
	48, 172, 106, 1160, 24, 1940, 38, 103, 1609, 34,
	1607, 2723, 77, 46, 73, 1606, 1604, 68, 97, 44,
	1603, 1599, 1598, 1597, 1596, 1595, 139, 1594, 1593, 1592,
	1591, 96, 109, 1590, 1589, 83, 64, 1588, 1582, 1581,
	1580, 1579, 79, 62, 95, 1578, 85, 81, 1576, 1575,
	1574, 1572, 59, 33, 1571, 1570, 1569, 69, 32, 1568,
	45, 21, 22, 50, 5, 55, 1567, 13, 1564, 30,
	1562, 23, 1559, 27, 78, 4, 3, 10, 1549, 1547,
	1546, 1537, 1533, 54, 1525, 1514, 41, 1499, 1493, 1490,
	26, 1483, 1480, 1478, 1473, 0, 142, 108, 1467, 1457,
	115,
}
var yyR1 = [...]int{

	0, 263, 264, 264, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 52,
	2, 2, 2, 6, 3, 3, 4, 4, 5, 5,
	7, 7, 56, 56, 8, 9, 9, 9, 9, 267,
	267, 81, 81, 79, 79, 80, 80, 141, 141, 10,
	10, 10, 10, 145, 145, 148, 148, 148, 149, 149,
	149, 149, 185, 185, 133, 134, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 251, 251, 252, 252, 253,
	253, 253, 253, 254, 254, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 23, 169, 169,
	33, 33, 34, 34, 34, 129, 129, 129, 11, 11,
	11, 11, 11, 18, 20, 20, 25, 25, 26, 21,
	21, 21, 21, 27, 27, 28, 22, 22, 32, 32,
	30, 30, 29, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 17, 250, 250, 250, 24,
	24, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 243, 243, 242, 241, 241, 240, 240,
	239, 39, 224, 225, 225, 225, 225, 213, 214, 189,
	189, 189, 189, 189, 189, 189, 188, 188, 188, 188,
	192, 192, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 191, 191, 191, 191, 191, 191, 191, 191, 193,
	193, 193, 193, 193, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 195,
	195, 195, 195, 195, 195, 195, 195, 212, 212, 196,
	196, 205, 205, 206, 206, 206, 203, 203, 204, 204,
	207, 207, 199, 200, 208, 201, 201, 201, 202, 202,
	202, 211, 211, 211, 211, 197, 215, 215, 234, 234,
	233, 233, 232, 232, 232, 223, 223, 229, 229, 229,
	229, 229, 218, 218, 218, 217, 217, 219, 219, 222,
	222, 231, 231, 230, 216, 216, 235, 235, 235, 235,
	235, 220, 220, 221, 221, 221, 246, 247, 245, 245,
	245, 245, 245, 226, 226, 226, 227, 227, 227, 228,
	228, 228, 248, 248, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 128, 128, 128, 37,
	38, 38, 38, 38, 38, 38, 38, 38, 167, 167,
	244, 244, 244, 244, 244, 238, 236, 236, 237, 237,
	13, 40, 40, 14, 14, 14, 14, 14, 14, 14,
	15, 15, 41, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 70, 155, 155, 153,
	153, 156, 156, 154, 154, 154, 157, 157, 157, 158,
	158, 186, 186, 186, 43, 43, 48, 48, 51, 49,
	50, 168, 168, 46, 46, 47, 47, 47, 47, 62,
	62, 268, 268, 45, 45, 44, 44, 44, 44, 16,
	269, 53, 54, 54, 55, 55, 55, 59, 59, 59,
	57, 57, 57, 58, 58, 64, 64, 68, 68, 68,
	68, 67, 67, 67, 67, 131, 131, 131, 132, 132,
	178, 178, 178, 177, 177, 177, 177, 72, 72, 73,
	73, 74, 74, 74, 74, 90, 90, 91, 91, 91,
	91, 91, 101, 101, 140, 140, 139, 139, 142, 142,
	75, 75, 75, 75, 76, 76, 77, 77, 78, 78,
	166, 166, 183, 183, 183, 82, 82, 82, 84, 83,
	83, 83, 83, 85, 85, 87, 88, 88, 86, 86,
	89, 92, 92, 92, 92, 93, 93, 69, 69, 69,
	69, 69, 69, 69, 152, 152, 95, 95, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 109, 109,
	109, 109, 109, 109, 96, 96, 96, 96, 96, 96,
	96, 63, 63, 110, 110, 110, 117, 66, 66, 65,
	65, 111, 111, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 104, 104, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 270,
	270, 106, 105, 105, 105, 105, 105, 105, 60, 60,
	60, 60, 60, 184, 184, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 121, 121,
	61, 61, 119, 119, 120, 122, 122, 118, 118, 118,
	98, 98, 98, 98, 98, 98, 98, 98, 100, 100,
	100, 123, 123, 112, 112, 71, 71, 124, 124, 125,
	125, 126, 126, 127, 127, 130, 130, 135, 135, 135,
	136, 136, 136, 136, 137, 137, 137, 97, 97, 97,
	97, 97, 97, 138, 138, 138, 138, 143, 143, 113,
	113, 115, 115, 114, 116, 144, 144, 147, 147, 147,
	147, 146, 146, 146, 180, 180, 180, 150, 150, 159,
	159, 160, 160, 151, 151, 198, 198, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 165, 165, 164, 164,
	164, 161, 161, 161, 162, 162, 179, 179, 175, 175,
	176, 176, 181, 181, 182, 182, 249, 249, 209, 209,
	259, 259, 210, 210, 260, 260, 262, 262, 257, 257,
	258, 258, 261, 261, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 265, 266, 170, 171, 171,
	171,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	4, 6, 7, 5, 9, 11, 1, 3, 1, 3,
	7, 8, 1, 1, 9, 8, 7, 6, 6, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	4, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 0, 0, 2, 3, 11, 7,
	9, 5, 5, 15, 11, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 0, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 0, 2, 1, 3,
	3, 4, 4, 1, 3, 3, 3, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	1, 2, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 2, 1, 2, 1, 2, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 2, 1, 1, 1, 6, 10, 9,
	7, 7, 7, 9, 7, 12, 14, 7, 7, 9,
	9, 10, 5, 6, 8, 7, 0, 1, 2, 4,
	7, 5, 5, 5, 12, 7, 5, 9, 0, 1,
	1, 1, 1, 1, 1, 7, 1, 3, 8, 8,
	3, 3, 5, 4, 6, 4, 4, 4, 4, 4,
	3, 2, 3, 4, 4, 3, 6, 6, 4, 4,
	4, 4, 4, 4, 3, 3, 2, 6, 2, 4,
	4, 4, 3, 7, 6, 5, 4, 2, 4, 3,
	4, 3, 3, 5, 2, 3, 3, 1, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 2, 2, 2, 3, 3, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 4, 7, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 3, 1, 3, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 1, 1, 5, 6, 6,
	6, 5, 5, 5, 6, 5, 5, 6, 5, 5,
	5, 5, 6, 5, 5, 5, 4, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 6, 8, 8, 8, 8, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 1, 0, 2, 1,
	1, 0, 3, 1, 3, 2, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 1, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}
var yyChk = [...]int{

	-1000, -263, -1, -2, -6, -7, -8, -9, -10, -12,
	-35, -13, -14, -15, -41, -42, -43, -48, -49, -50,
	-46, -45, -44, -16, -22, -17, -52, -3, -4, 6,
	7, -56, 9, 10, 30, -39, 129, -36, -37, -38,
	132, 131, 168, 133, 161, 63, 214, -51, 217, 218,
	-268, -168, 166, 167, 31, 32, 135, 212, 20, 37,
	-265, 8, 309, 130, 215, 163, 162, 26, 67, -264,
	424, -126, 15, -55, 5, -53, -269, -53, -53, -53,
	-53, -53, -224, 104, 67, -162, 142, 85, 300, 138,
	-169, 139, -161, 190, 44, 149, 148, 139, 139, 140,
	142, 300, 138, 176, 175, 139, -86, -181, 70, -173,
	351, 152, 366, 367, 130, 187, 214, 225, 219, 253,
	241, 352, 368, 153, 207, 137, 239, 242, 287, 151,
	200, 369, 274, 282, 210, 79, 217, 296, 370, 154,
	204, 206, 205, 195, 211, 36, 164, 237, 230, 190,
	371, 359, 228, 28, 185, 372, 284, 258, 373, 356,
	283, 233, 229, 135, 374, 155, 149, 178, 375, 259,
	263, 376, 288, 377, 378, 379, 141, 223, 224, 380,
	191, 290, 257, 33, 150, 353, 48, 173, 291, 38,
	261, 37, 273, 381, 256, 251, 382, 383, 384, 385,
	255, 222, 250, 202, 52, 136, 265, 264, 266, 203,
	286, 246, 244, 386, 387, 156, 388, 389, 231, 18,
	390, 391, 294, 167, 392, 42, 393, 394, 395, 171,
	396, 397, 398, 285, 260, 262, 189, 399, 234, 146,
	400, 175, 401, 355, 402, 292, 227, 403, 157, 172,
	166, 295, 404, 405, 406, 407, 158, 408, 409, 410,
	218, 276, 208, 411, 412, 413, 414, 199, 184, 298,
	289, 51, 212, 270, 415, 221, 148, 213, 416, 215,
	43, 181, 7, 201, 277, 209, 248, 174, 417, 418,
	235, 236, 254, 220, 249, 216, 176, 177, 168, 419,
	297, 271, 357, 50, 243, 240, 182, 247, 420, 142,
	179, 180, 421, 278, 279, 183, 354, 293, 238, 272,
	139, 122, 242, 287, 129, 275, 276, 284, -218, 285,
	175, 178, -186, 139, -153, 274, 278, 279, 183, 70,
	140, 141, 33, 289, 288, 280, -181, -62, 133, 169,
	-86, -170, -170, -170, 277, 277, -170, -32, 213, 70,
	36, -2, -151, 142, 279, 144, 216, -136, 17, 16,
	-5, -3, -265, 6, 21, 22, -59, 53, 54, -54,
	-67, 113, -69, -181, -94, 87, -99, 29, 70, -173,
	24, -98, -95, -118, -116, -117, 122, 123, 124, 111,
	112, 119, 88, 125, -104, -102, -103, -105, -107, -108,
	72, 71, 80, 73, 74, 75, 76, 81, 82, 83,
	-175, -114, -265, 57, 58, 138, 310, 311, 312, 313,
	350, 159, 314, 90, 47, 299, 308, 307, 306, 304,
	305, 301, 303, 302, 316, 317, 145, 300, 117, 309,
	339, 340, 341, 342, 343, 344, 345, 346, 348, 349,
	347, 329, 322, 323, 324, 325, 326, 327, 328, 330,
	331, 332, 333, 334, 335, 336, 337, 338, -151, -151,
	11, -79, -80, -86, -89, -181, -144, -185, 216, -147,
	289, 288, -118, -146, -175, -181, 287, 242, 286, -86,
	-225, -214, -176, -175, -172, 70, -173, 134, 160, 86,
	358, 23, 25, 268, 322, 89, 122, 323, 324, 325,
	16, 20, 90, 121, 310, 326, 129, 61, 301, 303,
	299, 300, 275, 29, 10, 26, 162, 194, 22, 115,
	131, 93, 94, 95, 165, 24, 163, 83, 159, 19,
	64, 11, 13, 320, 321, 14, 145, 144, 106, 192,
	140, 59, 8, 125, 27, 103, 55, 327, 328, 362,
	45, 363, 57, 104, 17, 304, 305, 31, 350, 329,
	170, 364, 330, 117, 197, 62, 49, 87, 81, 34,
	84, 65, 85, 15, 193, 60, 318, 196, 365, 105,
	132, 309, 58, 138, 6, 315, 30, 161, 333, 332,
	331, 334, 198, 56, 312, 313, 335, 422, 139, 92,
	316, 317, 143, 82, 5, 44, 32, 9, 63, 66,
	306, 307, 308, 47, 337, 336, 338, 91, 12, 319,
	140, -86, 309, -160, 145, -160, 176, 175, -160, 96,
	-40, -86, -159, 145, -175, -159, -159, -159, -159, -159,
	-86, 126, -86, 70, 30, -171, -265, -176, 300, 138,
	70, 175, 178, 139, 176, 142, -171, -171, -220, 11,
	106, 181, 181, 181, 182, -171, -156, -155, 177, 282,
	283, 277, 281, 12, -70, 104, 182, 277, 180, -171,
	-47, -2, -9, -7, -8, -2, 96, -170, -170, 30,
	72, 50, -250, 67, -209, 273, -266, 69, 139, -86,
	129, 131, 134, 65, -137, 19, 31, -69, -181, -127,
	-130, -69, -174, 322, 323, 324, 325, 326, 339, 340,
	341, 327, 328, 342, 343, 344, 329, 330, 345, 346,
	348, 349, 347, 333, 332, 331, 334, 335, 337, 336,
	338, -126, -2, -53, 49, -57, 21, 22, 78, 11,
	-178, 86, 85, 103, -177, 23, 70, -173, -174, 72,
	322, 323, 324, 325, 326, 339, 340, 341, 327, 328,
	342, 343, 344, 329, 330, 345, 346, 348, 349, 347,
	333, 332, 331, 334, 335, 337, 336, 338, 126, -69,
	-96, 106, 87, 104, 105, 89, 108, 107, 118, 111,
	112, 113, 114, 115, 116, 117, 109, 110, 121, 96,
	97, 98, 99, 100, 101, 102, -152, -265, -117, -265,
	127, 128, -99, -99, -99, -99, -99, -99, -99, -99,
	-265, -2, -111, -69, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -121, -69, -265, -270, -106,
	-265, -270, -106, -270, -106, -270, -265, -270, -106, -270,
	-106, -270, -270, -106, -270, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -88,
	27, -86, -72, -73, -74, -75, -90, -117, -265, -86,
	-86, -79, -267, 68, 11, 66, -267, 68, 126, 68,
	-144, 216, -145, -148, 290, 292, 96, -180, -175, 72,
	29, 126, 30, 69, 68, -188, -192, -194, -193, -195,
	-190, -191, 239, 242, 246, 244, 240, 245, 122, 243,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 30, 164, 235, 236, 237, 238, 259, 260, 261,
	262, 263, 264, 265, 266, 219, 241, 352, 220, 221,
	222, 223, 224, 225, 227, 228, 229, 230, 231, 232,
	233, -175, 23, 142, 70, 87, 70, 70, 70, -86,
	70, 68, 143, -79, 24, 65, -81, -86, 70, 70,
	70, 70, -182, -181, -172, -171, -171, -160, -160, -171,
	-171, -171, -86, -86, -86, -86, -157, 104, 12, -157,
	-171, -171, 11, -154, 11, 106, -154, -69, -99, -158,
	104, 65, 70, -30, -29, -31, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 72, 69,
	-111, -249, 423, -86, -171, 179, 179, 139, 139, 184,
	-86, 9, 106, 68, 18, 126, 68, -135, 25, 26,
	-135, -136, -266, -59, -100, 50, 73, 76, -58, 56,
	-86, -69, -69, -109, 81, 87, 82, 83, -177, 113,
	-182, -176, -172, -99, -110, -114, -117, 77, 106, 104,
	105, 89, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -184, 70, 72,
	70, -98, -98, -175, -57, -266, 68, -266, -2, -65,
	-68, 113, -69, -181, -65, -266, -69, -69, -118, 72,
	-65, -118, 72, -65, -65, -65, -57, -119, -120, 91,
	-118, -266, -99, -175, -175, -65, -66, -65, -65, -65,
	-266, -266, -68, -65, -68, -65, -65, -266, -266, -266,
	-266, -57, -57, -65, -65, -65, -57, -65, -65, -57,
	-65, -65, -65, -65, -57, -65, -65, -65, -141, 171,
	-86, 30, 68, -82, -84, -83, -85, 55, 59, 61,
	56, 57, 58, 62, -166, 23, -72, -265, -91, 171,
	-92, 23, -183, 63, 144, 64, -181, -174, 72, -141,
	66, -72, -86, -72, -89, -181, 113, -147, -145, 68,
	291, 293, 294, 65, 84, -69, -202, 121, -176, -182,
	-226, -227, -228, -176, 72, 73, -214, -215, -216, -229,
	154, -235, 146, 148, 44, -217, 155, 140, 45, -189,
	-203, 271, -196, 67, -196, -196, 247, 239, 242, 240,
	-196, -196, -196, -196, -196, -201, 242, -201, -201, -201,
	-201, 240, 67, 67, -196, -196, -196, -205, 67, -205,
	234, -206, 67, -206, -206, -206, -206, -179, 66, -133,
	-86, -171, 24, -171, -33, 187, 160, 67, -86, -86,
	-86, 68, 70, 70, -221, 11, 106, 72, -69, -86,
	-101, 23, -181, -181, -157, -63, 165, 72, -86, 68,
	96, 69, -87, 27, 72, -163, 134, 131, 132, 136,
	137, -238, 268, 130, 242, 79, 29, 15, 310, 171,
	357, 70, 172, -86, -86, -86, -86, -86, 134, 131,
	51, -69, -69, -130, -137, -150, 19, 11, 47, 47,
	-64, -134, 81, 82, 83, 126, -265, -110, -99, -99,
	-99, -63, 86, -266, -66, -69, -266, 68, -266, 126,
	-266, 68, 66, 23, 11, 11, -266, 11, 11, -266,
	-266, -266, -65, -122, -120, 93, -69, -266, -266, 68,
	68, -266, -266, -266, -266, -131, 318, -131, -266, -266,
	-266, -266, -266, -131, -131, -131, -131, -65, -65, -266,
	-266, -266, -65, -266, -266, -65, -266, -266, -266, -266,
	-65, -266, -266, -266, -97, 30, 47, -2, -265, -265,
	-144, -73, -74, -74, -73, -74, 55, 55, 55, 60,
	55, 60, 55, -83, -183, -266, -265, 34, -183, -92,
	140, 140, 140, -93, 12, -72, -93, -93, 126, -148,
	-149, 295, 292, 298, 70, 72, 126, 68, -228, 96,
	67, 70, 45, -217, 140, 45, -217, -222, 70, -222,
	45, -207, -199, -200, -208, -211, -197, 81, 87, 29,
	65, 268, 146, 45, 44, 79, -204, 272, 73, -201,
	-201, -196, -196, -196, 247, -196, -201, -202, 30, -202,
	-202, -202, -202, -201, -212, 72, -212, 73, -205, 73,
	65, -175, -2, 23, -34, 8, 9, 10, -251, -252,
	-253, 70, 106, 192, 193, 143, -171, -86, -171, -171,
	-93, 70, 70, -154, -157, 34, -99, -29, -98, -141,
	139, -170, -167, -244, -217, -248, -216, 147, 151, 154,
	155, 146, 171, -167, -244, 154, -217, 155, 147, -164,
	-217, 143, 23, -167, -167, -223, 96, 171, -243, 66,
	179, 268, 179, 52, -86, -93, 11, 68, -67, 113,
	-176, -66, -63, 86, -99, -266, -68, 113, -182, -187,
	122, 239, 164, 237, 230, 257, 244, 270, 235, 271,
	-184, -187, -99, -99, -99, -99, 351, -126, 95, -69,
	92, -99, -99, -175, -265, -131, -131, -131, -131, -131,
	-266, -266, -132, -131, -132, -132, -266, -132, -132, -266,
	-132, -132, -132, -132, -266, -132, -132, -132, -143, 65,
	-144, -113, -115, -114, -265, -2, -138, -175, -142, -175,
	-93, -77, -76, 65, 66, -78, 65, -76, 55, 55,
	-142, -99, -92, -265, -265, -265, -126, -69, -93, 292,
	296, 297, -227, -228, -231, -230, -175, -235, 155, -222,
	-222, 67, 81, -99, 9, 45, 45, 72, 69, -202,
	-202, -201, -196, -202, 70, 122, -202, 69, 68, 69,
	68, 69, 68, -86, -133, -133, 65, 69, 68, -188,
	70, 70, 70, -86, -157, -99, -201, -86, 67, -213,
	70, -170, -222, -161, 70, 70, -170, 70, -175, 45,
	70, -86, -175, -213, 70, -69, -175, -241, 354, -242,
	70, -175, -175, -175, -123, 13, -72, -134, -134, -266,
	-99, 126, -266, -196, -196, -196, -206, -196, 224, -196,
	224, -266, -266, 19, 19, 19, 19, -265, -61, 315,
	-69, 68, 68, -126, 171, -132, -132, -132, -132, -132,
	28, -143, 68, -266, -266, -266, 68, 126, -266, 68,
	-126, -69, 67, -69, -266, -92, -166, -139, -175, -139,
	-139, -136, 69, 68, -196, -139, -103, -202, -201, 72,
	-201, 73, 73, 67, -2, -86, -254, -255, -256, 79,
	353, 87, 194, 195, 156, 196, 197, 198, -253, -188,
	-188, -188, -257, -156, -213, -128, 159, 160, -188, -179,
	-219, -217, 70, -165, 143, 23, 143, -128, -213, 27,
	-240, -239, -176, 67, 66, -124, 14, 16, -93, -67,
	113, -201, 70, -99, -99, -99, -99, -99, -266, 72,
	-99, -99, -266, 16, 45, -115, 47, -2, -265, -175,
	-175, -175, -136, -139, -91, -183, 68, -266, -266, -266,
	-233, -232, 66, 150, 79, -230, -135, 69, -202, -202,
	69, 69, -231, -133, 19, -133, -256, 72, 198, 194,
	198, 198, 198, 198, 199, -258, 38, -260, 39, 69,
	-170, 70, -189, 67, -222, 70, -175, -170, -128, -265,
	68, 96, -139, -86, -125, -69, -174, -112, -71, -69,
	-174, -123, -134, -266, -266, -266, -266, -60, 106, 354,
	-266, -266, -111, 9, -113, -2, 126, 69, -92, -175,
	-232, 70, -223, 72, 157, 69, 185, -19, -2, -7,
	-8, -9, -10, -12, -35, -13, -14, -20, -21, -15,
	-41, -42, -51, -49, -50, -46, -45, -22, -17, -23,
	90, 145, 214, 36, 36, 190, 191, -198, 144, -261,
	43, -259, -210, 42, 16, -170, -231, -179, -170, -236,
	-237, 171, -239, -228, 69, 68, -124, -266, 352, 62,
	355, -126, -144, -266, -175, 73, -86, -234, -233, 186,
	-133, -69, -69, -24, -19, -140, 67, 73, -260, 16,
	-262, 40, 41, 72, 69, 67, -266, 68, -175, -243,
	-71, 52, 353, 356, -266, 67, -129, 188, 189, -25,
	-26, 91, 92, 424, -139, 38, 72, 16, 16, -234,
	-231, -237, 47, -241, 52, -139, -133, 70, 70, 95,
	93, -26, -69, -24, 95, -19, 69, 72, 72, 69,
	173, 354, 69, -11, -18, -10, -7, -8, -9, 214,
	90, -24, 92, 424, -234, 174, 355, -246, -247, 65,
	-133, -24, 424, -24, 95, 93, -27, -28, 94, -265,
	356, -247, 65, -246, 65, 10, 9, 424, 95, 424,
	145, -24, 95, 93, -28, -69, -99, 170, -245, 158,
	153, 156, 30, -245, 95, 90, 424, 145, -24, 92,
	-266, -266, 152, 29, 81, 95, 424, -24, 145, 95,
	424, 145,
}
var yyDef = [...]int{

	28, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 791, 0, 490,
	490, 490, 490, 490, 490, 0, -2, 354, 355, 356,
	0, 0, 0, 0, -2, 465, 466, 467, 469, 470,
	479, -2, 1267, 1267, 0, 0, 1267, 0, 0, 0,
	0, 42, 43, 843, 0, 482, 471, 472, 1265, 1,
	3, 800, 0, 0, 494, 497, 492, 0, 843, 843,
	0, 0, 76, 0, 0, 0, 0, 0, 841, 841,
	0, 841, 865, 0, 861, 862, 863, 0, 839, 0,
	839, 839, 839, 839, 839, 0, 411, 578, 872, 873,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	0, 0, 0, 1268, 0, 1268, 1268, 426, 0, 428,
	0, 0, 0, 1268, 0, 437, 0, 0, 444, 1268,
	312, 313, 314, 462, 463, 450, 464, 0, 0, 0,
	483, 484, 485, 486, 1267, 1267, 489, 136, 0, 156,
	878, 36, 0, 0, 0, 844, 468, 804, 0, 0,
	791, 38, 0, 490, 495, 496, 500, 498, 499, 491,
	0, 511, 520, 0, 587, 0, 592, 594, -2, -2,
	0, 633, 634, 635, 636, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 662, 663, 664, 665, 666,
	770, 771, 772, 773, 774, 775, 776, 777, 596, 597,
	767, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 758, 0, 729, 729, 729, 729, 729,
	729, 729, 729, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 55, 578, 59, 0, 1212, 825,
	-2, -2, 0, 0, 767, 0, -2, 1044, -2, 77,
	0, 193, 0, 870, 871, 868, 869, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	410, 0, 412, 1268, 1268, 415, 1269, 1270, 841, 841,
	1268, 1268, 1268, 0, 0, 0, 424, 425, 0, 331,
	332, 456, 456, 1268, 1268, 432, 0, 453, 453, 451,
	452, 447, 448, 0, 439, 0, 459, 441, 442, 445,
	473, -2, 476, 477, 478, -2, 0, 487, 488, 0,
	138, 0, 155, 0, 876, 879, 37, 1266, 0, 1268,
	0, 0, 0, 0, 30, 0, 0, 801, 0, 792,
	793, 797, 797, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 800, 36, 497, 0, 503, 501, 502, 493, 0,
	512, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 0, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	615, 616, 617, 618, 619, 620, 593, 0, 607, 0,
	0, 0, 653, 654, 655, 656, 657, 658, 659, 0,
	500, 36, 0, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 0, 759, 0, 712, 721,
	0, 713, 722, 714, 723, 715, 0, 716, 724, 717,
	725, 718, 719, 726, 720, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 500, 0, 0, 0, 500, 0, 0,
	500, 0, 0, 0, 0, 500, 0, 0, 0, 57,
	0, 577, 0, 527, 529, 530, 531, -2, 0, 581,
	-2, 0, 0, 0, 49, 50, 0, 0, 0, 0,
	60, 1212, 62, 63, 0, 0, 0, 288, 834, 835,
	836, 0, 832, 343, 0, 199, 276, 207, 208, 209,
	269, 211, 269, 269, 0, 269, 269, 269, 269, 269,
	285, 285, 285, 285, 285, 252, 253, 254, 255, 256,
	0, 0, 229, 269, 269, 269, 233, 259, 260, 261,
	262, 263, 264, 265, 266, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 271, 271, 273, 273, 273, 273,
	273, 866, 74, 0, 1268, 0, 1268, 0, 0, 191,
	109, 0, 0, 403, 840, 0, 405, 51, 406, 407,
	408, 409, 579, 874, 875, 413, 414, 0, 0, 418,
	419, 420, 421, 422, 423, 333, 429, 0, 0, 430,
	431, 436, 0, 542, 0, 0, 456, 438, 621, 440,
	0, 0, 480, 137, 140, 0, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 139, 157,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 805, 0, 0, 0, 0, 0, 795, 798, 799,
	796, 804, 39, 500, 0, 778, 0, 0, 75, 504,
	33, 588, 589, 591, 608, 0, 610, 612, 522, 513,
	0, 768, -2, 598, 599, 623, 624, 625, 0, 0,
	0, 0, 621, 603, 0, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 652, 743, 744,
	0, 650, 651, 660, 627, 626, 0, 823, 36, 0,
	629, 507, 508, 0, 0, 699, 0, 0, 635, 770,
	0, 635, 770, 0, 0, 0, 0, 765, 762, 0,
	0, 730, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 565, 0, 0,
	568, 0, 0, 0, 0, 561, 0, 0, 535, 1146,
	537, 0, 581, 0, 0, 0, 562, 563, 564, 585,
	0, 585, 54, 585, 56, 0, 580, 826, 61, 0,
	0, 66, 67, 827, 828, 829, 830, 0, 768, 0,
	192, 344, 346, 349, 350, 351, 194, 195, 196, 0,
	1056, 325, 1156, 1193, -2, 319, 1082, -2, -2, 198,
	278, 277, 210, 0, 285, 285, 269, 269, 269, 269,
	238, 285, 241, 244, 245, 288, 0, 288, 288, 288,
	288, 285, 0, 0, 230, 231, 232, 221, 0, 222,
	271, 224, 0, 225, 226, 227, 228, 0, 0, 0,
	0, 81, 842, 82, 0, 110, 111, 85, 0, 401,
	1268, 0, 1268, 1268, 585, 0, 0, 457, 458, 453,
	456, 0, 454, 455, 435, 446, 0, 460, 443, 0,
	0, 158, 57, 0, 877, 1267, -2, 388, 858, 388,
	388, 372, 305, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 0, 183, 381, 383, 382, 386, 0, 0,
	0, 802, 803, 794, 31, 0, 837, 838, 779, 780,
	585, 0, 609, 611, 613, 0, 627, 600, 621, 604,
	0, 601, 0, 595, 0, 632, -2, 0, 697, 0,
	698, 0, 0, 0, 0, 0, 736, 0, 0, 737,
	0, 708, 791, 0, 763, 0, 0, 711, 731, 0,
	0, 732, 733, 734, 735, 686, 0, 687, 0, 0,
	0, 0, 0, 693, 694, 695, 696, 0, 0, 518,
	518, 518, 0, 518, 518, 0, 518, 518, 518, 518,
	0, 518, 518, 518, 817, 0, 0, -2, 0, 0,
	585, 528, 556, 558, 0, 553, 566, 567, 569, 0,
	571, 0, 573, 574, 532, 534, 0, 0, 581, 541,
	0, 0, 0, 791, 0, 585, 47, 48, 0, 64,
	65, 0, 0, 71, 289, 290, 0, 0, 347, 0,
	0, 0, 307, 319, 315, 316, 319, 310, 320, 311,
	0, 200, 201, 202, 203, 204, 205, 280, 0, 0,
	0, 284, 0, 292, 294, 0, 206, 279, 0, 288,
	288, 285, 236, 237, 269, 242, 288, 246, 0, 247,
	248, 249, 250, 288, 0, 267, 0, 0, 223, 0,
	0, 867, -2, 74, 0, 112, 113, 114, 0, 86,
	87, 0, 0, 0, 0, 0, 404, 52, 416, 417,
	427, 334, 335, 456, 434, 0, 622, 141, 142, 285,
	0, 357, 0, 1267, 319, 0, 373, 389, 390, 391,
	392, 393, 394, 0, 1267, 391, 0, 392, 0, 0,
	0, 859, 860, 0, 0, 0, 306, 0, 186, 0,
	0, 0, 0, 806, 32, 781, 0, 75, 75, 514,
	769, 0, 602, 0, 605, 667, 630, 509, 0, 0,
	269, 269, 748, 269, 273, 751, 269, 753, 269, 756,
	0, 0, 0, 0, 0, 0, 0, 760, 710, 766,
	0, 0, 0, 515, 791, 688, 689, 690, 691, 692,
	518, 518, 671, 519, 672, 673, 518, 675, 676, 518,
	678, 679, 680, 681, 518, 683, 684, 685, 40, 0,
	817, 807, 819, 821, 0, 36, 0, 813, 0, 548,
	791, 550, 557, 0, 0, 551, 0, 552, 570, 572,
	0, -2, 540, 0, 0, 0, 800, 586, 46, 68,
	69, 70, 345, 348, 0, 321, 269, 324, 0, 308,
	309, 0, 281, 282, 0, 291, 293, 295, 270, 234,
	235, 288, 243, 239, 286, 287, 251, 285, 0, 285,
	0, 274, 0, 0, 79, 0, 0, 93, 0, 89,
	0, 0, 0, 402, 433, 543, 888, 575, 0, 376,
	0, 360, 866, 317, 353, 361, 362, 367, 368, 0,
	0, 364, 0, 376, 0, 375, 0, 380, 0, 184,
	185, 0, 0, 385, 787, 0, 585, 0, 505, 668,
	606, 0, 700, 745, 285, 749, 750, 752, 754, 755,
	757, 702, 701, 0, 0, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 669, 670, 674, 677, 682,
	0, 41, 0, 822, -2, 0, 0, 0, 58, 0,
	800, 554, 0, 559, 581, 538, 0, 0, 546, 0,
	0, 45, 297, 0, 797, 0, 283, 240, 288, 268,
	288, 0, 0, 0, -2, 0, 74, 94, 95, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 88, 90,
	91, 92, 890, 884, 0, 1267, 377, 0, 199, 0,
	319, 318, 374, 0, 856, 857, 0, 1267, 376, 0,
	187, 188, 0, 0, 0, 34, 0, 0, 781, 75,
	510, 746, 747, 0, 0, 0, 0, 738, 709, 761,
	0, 0, 516, 0, 0, 820, 0, -2, 0, 815,
	814, 549, 44, 0, 536, 581, 0, 582, 583, 584,
	296, 300, 0, 305, 0, 322, 323, 0, 257, 258,
	272, 275, 0, 80, 0, 0, 96, 97, 98, 99,
	101, 102, 0, 0, 0, 845, 892, -2, 0, 1267,
	359, 378, 197, 0, 866, 363, 369, 370, 1267, 0,
	0, 0, 0, 387, 788, 789, 790, 782, 783, 785,
	786, 787, 506, 703, 705, 704, 706, 0, 0, 0,
	727, 728, 791, 0, 810, 36, 0, 555, 539, 547,
	301, 302, 0, 304, 0, 298, 0, 74, -2, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	0, 0, 0, 103, 104, 105, 106, 544, 0, 884,
	0, 886, 0, 883, 0, 358, 0, 0, 371, 0,
	396, 0, 189, 190, 183, 0, 35, 707, 0, 0,
	0, 0, 818, -2, 816, 303, 0, 78, 299, 115,
	84, 0, 0, 0, 159, 29, 0, 0, 891, 0,
	889, 0, 0, 885, 298, 0, 395, 0, 0, 186,
	784, 739, 0, 742, 517, 0, 74, 0, 0, 0,
	126, 0, 0, 0, 0, 846, 893, 0, 0, 365,
	0, 397, 0, 384, 740, 0, 0, 116, 117, 0,
	0, 127, 0, 0, 107, 160, 545, 887, 881, 298,
	0, 0, 326, 74, 118, 119, 120, 121, 122, 0,
	124, 0, 0, 0, 366, 0, 0, 327, 328, 0,
	83, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	741, 329, 0, 330, 0, 0, 0, 0, 0, 128,
	129, 0, 0, 0, 134, 0, 0, 0, 336, 338,
	339, 0, 0, 337, 123, 125, 0, 131, 0, 0,
	398, 399, 340, 341, 342, 0, 0, 0, 130, 0,
	135, 132,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 88, 3, 3, 3, 116, 108, 3,
	67, 69, 113, 111, 68, 112, 126, 114, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 424,
	97, 96, 98, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 119,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 89, 90, 91, 92, 93, 94, 95,
	99, 100, 101, 102, 103, 104, 105, 106, 109, 110,
	115, 117, 120, 121, 122, 123, 124, 125, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:390
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:395
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:396
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:400
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:427
		{
			setParseTree(yylex, nil)
		}
	case 29:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:433
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 30:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:439
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:447
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 32:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:451
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 33:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:457
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:464
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[7].expr), GroupBy: GroupBy(yyDollar[8].exprs), Having: NewWhere(HavingStr, yyDollar[9].expr)}
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:468
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[8].tableExprs, Where: NewWhere(WhereStr, yyDollar[9].expr), GroupBy: GroupBy(yyDollar[10].exprs), Having: NewWhere(HavingStr, yyDollar[11].expr)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:478
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:495
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].setExprs)
			yyVAL.statement = ins
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:507
		{
			cols := make(Columns, 0, len(yyDollar[7].setExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].setExprs))
			for _, updateList := range yyDollar[7].setExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].setExprs)}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:519
		{
			yyVAL.str = InsertStr
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.str = ReplaceStr
		}
	case 44:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:529
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].setExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:535
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:543
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:547
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:561
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:581
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			yyVAL.partitions = nil
		}
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:590
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:624
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:628
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:632
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:642
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:646
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:656
		{
			yyVAL.str = SessionStr
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.str = GlobalStr
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:670
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:676
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 78:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:689
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:693
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:697
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:701
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:709
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 83:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:717
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 84:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:721
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:726
		{
			yyVAL.procedureParams = nil
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:740
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:750
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:763
		{
			yyVAL.characteristics = nil
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:807
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:825
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:830
		{
			yyVAL.str = ""
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:840
		{
			yyVAL.str = BeforeStr
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:844
		{
			yyVAL.str = AfterStr
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
			yyVAL.str = InsertStr
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
			yyVAL.str = UpdateStr
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:858
		{
			yyVAL.str = DeleteStr
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:863
		{
			yyVAL.triggerOrder = nil
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:867
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:877
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:887
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:893
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 125:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:897
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:907
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:913
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 129:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:919
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 130:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:924
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:929
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 132:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:935
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:943
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:953
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:959
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:963
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:973
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yyVAL.signalInfo = SignalInfo{Name: string(yyDollar[1].bytes), Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1017
		{
			yyVAL.exprs = nil
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyVAL.exprs = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1025
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1041
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1067
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1077
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1082
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1110
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName, IfNotExists: ne}
			setDDL(yylex, yyVAL.ddl)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1121
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1166
		{
			yyVAL.columnType = ColumnType{}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1242
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1260
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1292
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1450
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 258:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1500
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1505
		{
			yyVAL.sqlVal = nil
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1514
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1518
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1526
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1536
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1544
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1580
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ""
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = ""
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1618
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.colKeyOpt = colKey
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1642
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1646
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1651
		{
			yyVAL.indexOptions = nil
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1675
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1680
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1696
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = ""
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = yyDollar[1].str
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = ""
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 326:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1787
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 327:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1791
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 328:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1795
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 329:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1799
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 330:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1803
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1832
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 358:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1927
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			ddl.Column = yyDollar[8].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 359:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1934
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[7].bytes)), Table: yyDollar[4].tableName}
		}
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 363:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &DDL{Action: AlterStr, ColumnAction: RenameStr, Table: yyDollar[4].tableName, Column: NewColIdent(string(yyDollar[7].bytes)), ToColumn: NewColIdent(string(yyDollar[9].bytes))}
		}
	case 364:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1957
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 365:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[7].str), Using: yyDollar[8].colIdent, Columns: yyDollar[10].indexColumns, Options: yyDollar[12].indexOptions}}
		}
	case 366:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[9].str), Type: yyDollar[7].str, Using: yyDollar[10].colIdent, Columns: yyDollar[12].indexColumns, Options: yyDollar[14].indexOptions}}
		}
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[7].bytes)}}}}
		}
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[7].colIdent}}
		}
	case 369:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1979
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[7].colIdent, ToName: yyDollar[9].colIdent}}
		}
	case 370:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1983
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[8].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[7].columnDefinition)
			ddl.Column = yyDollar[7].columnDefinition.Name
			yyVAL.statement = ddl
		}
	case 371:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1990
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[7].bytes)), ColumnOrder: yyDollar[9].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[8].columnDefinition)
			yyVAL.statement = ddl
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1996
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2000
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[6].constraintDefinition)
			yyVAL.statement = ddl
		}
	case 374:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &DDL{Action: AlterStr, ConstraintAction: DropStr, Table: yyDollar[4].tableName, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[8].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2011
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, AutoIncSpec: &AutoIncSpec{Value: yyDollar[7].expr}}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnOrder = nil
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2048
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2058
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 384:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2066
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2079
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 387:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2119
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 398:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2135
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 399:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2139
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2155
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2163
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 404:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2175
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2183
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2191
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2199
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2207
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2232
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2237
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2245
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2249
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2254
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2258
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2270
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2274
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2290
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2298
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2302
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ProcFuncFilter: yyDollar[4].showFilter}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2314
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2319
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2333
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2341
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2355
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = "full "
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2442
		{
			yyVAL.showFilter = nil
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.showFilter = nil
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = ""
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = SessionStr
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = GlobalStr
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.statement = &Begin{}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Begin{}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.statement = &Commit{}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.statement = &Rollback{}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.statement = &OtherRead{}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2587
		{
			setAllowComments(yylex, true)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.bytes2 = nil
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.str = UnionStr
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.str = UnionAllStr
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.str = UnionDistinctStr
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.str = SQLCacheStr
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2633
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.str = DistinctStr
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = ""
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = StraightJoinHint
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2664
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2683
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2687
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2705
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2716
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 517:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2720
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2725
		{
			yyVAL.over = nil
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.over = yyDollar[1].over
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2784
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2794
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2805
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2820
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2824
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2828
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.expr = nil
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2847
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2852
		{
			yyVAL.columns = nil
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2889
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2893
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2897
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2909
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2919
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.empty = struct{}{}
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.empty = struct{}{}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = JoinStr
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = JoinStr
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = JoinStr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = StraightJoinStr
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = LeftJoinStr
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yyVAL.str = LeftJoinStr
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = RightJoinStr
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = RightJoinStr
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = NaturalJoinStr
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2999
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3024
		{
			yyVAL.indexHints = nil
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3028
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3032
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3036
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = nil
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3055
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3063
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3081
		{
			yyVAL.str = ""
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3125
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = IsNullStr
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = IsNotNullStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = IsTrueStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = IsNotTrueStr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = IsFalseStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = IsNotFalseStr
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = EqualStr
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = LessThanStr
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = GreaterThanStr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = LessEqualStr
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = GreaterEqualStr
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = NotEqualStr
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			yyVAL.expr = nil
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3227
		{
			yyVAL.selectExprs = nil
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3248
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3318
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3342
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3376
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3396
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 668:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3400
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 669:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3410
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3414
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3418
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 674:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3442
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3446
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3458
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3462
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3466
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3470
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3474
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3515
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 704:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 705:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 707:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 727:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 728:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3707
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3711
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = BooleanModeStr
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 741:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = QueryExpansionStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3753
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.expr = nil
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = string("")
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3842
		{
			yyVAL.expr = nil
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3860
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3894
		{
			yyVAL.expr = &NullVal{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3908
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3913
		{
			yyVAL.exprs = nil
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3927
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = nil
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3946
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.orderBy = nil
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3965
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3981
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3985
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.str = AscScr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.str = AscScr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.str = DescScr
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.limit = nil
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4007
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4011
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4015
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = ForUpdateStr
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = ShareModeStr
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4041
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4049
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4054
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4058
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4062
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4073
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4081
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4086
		{
			yyVAL.setExprs = nil
		}
	case 818:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4090
		{
			yyVAL.setExprs = yyDollar[5].setExprs
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4110
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4142
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("on"))}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: NewStrVal([]byte("off"))}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4150
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4154
		{
			yyVAL.setExpr = &SetExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.bytes = []byte("charset")
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.expr = &Default{}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.byt = 0
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{
			yyVAL.byt = 1
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.byt = 0
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4192
		{
			yyVAL.byt = 1
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = IgnoreStr
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.sqlVal = nil
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.empty = struct{}{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.empty = struct{}{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.empty = struct{}{}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4231
		{
			yyVAL.empty = struct{}{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.empty = struct{}{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.empty = struct{}{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.str = UniqueStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = FulltextStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = SpatialStr
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = yyDollar[1].str
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = string("")
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4295
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4300
		{
			yyVAL.EnclosedBy = nil
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4304
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4309
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.sqlVal = nil
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4327
		{
			yyVAL.sqlVal = nil
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4336
		{
			yyVAL.Fields = nil
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4340
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4345
		{
			yyVAL.Lines = nil
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4349
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4354
		{
			yyVAL.sqlVal = nil
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4768
		{
			decNesting(yylex)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4773
		{
			skipToEnd(yylex)
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4778
		{
			skipToEnd(yylex)
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			skipToEnd(yylex)
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4786
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
