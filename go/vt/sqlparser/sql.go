// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824
const NVAR = 57825
const PASSWORD_LOCK = 57826

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1038,
	-1, 43,
	147, 1102,
	148, 1120,
	-2, 231,
	-1, 49,
	186, 673,
	187, 673,
	-2, 663,
	-1, 500,
	135, 1130,
	-2, 1124,
	-1, 501,
	135, 1131,
	-2, 1125,
	-1, 605,
	98, 1396,
	135, 1396,
	-2, 1086,
	-1, 606,
	98, 1492,
	135, 1492,
	-2, 1087,
	-1, 611,
	98, 1418,
	135, 1418,
	-2, 1088,
	-1, 612,
	98, 1455,
	135, 1455,
	-2, 1089,
	-1, 613,
	98, 1456,
	135, 1456,
	-2, 1090,
	-1, 614,
	98, 1352,
	135, 1352,
	-2, 1094,
	-1, 616,
	98, 1437,
	135, 1437,
	-2, 1096,
	-1, 1128,
	1, 770,
	5, 770,
	12, 770,
	13, 770,
	14, 770,
	15, 770,
	17, 770,
	19, 770,
	30, 770,
	31, 770,
	56, 770,
	57, 770,
	58, 770,
	59, 770,
	60, 770,
	62, 770,
	63, 770,
	66, 770,
	67, 770,
	69, 770,
	70, 770,
	405, 770,
	503, 770,
	-2, 800,
	-1, 1132,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1375,
	135, 1133,
	-2, 1129,
	-1, 1544,
	68, 522,
	-2, 1320,
	-1, 1547,
	68, 518,
	72, 518,
	-2, 1238,
	-1, 1548,
	68, 519,
	72, 519,
	-2, 1248,
	-1, 1665,
	44, 565,
	154, 567,
	156, 565,
	157, 565,
	-2, 600,
	-1, 1739,
	5, 51,
	-2, 866,
	-1, 2034,
	69, 1295,
	70, 1295,
	135, 1295,
	-2, 704,
	-1, 2057,
	1, 821,
	5, 821,
	12, 821,
	13, 821,
	14, 821,
	15, 821,
	17, 821,
	19, 821,
	30, 821,
	31, 821,
	56, 821,
	57, 821,
	58, 821,
	59, 821,
	60, 821,
	62, 821,
	63, 821,
	66, 821,
	67, 821,
	69, 821,
	70, 821,
	405, 821,
	503, 821,
	-2, 800,
	-1, 2159,
	154, 568,
	-2, 566,
	-1, 2220,
	5, 51,
	-2, 1058,
	-1, 2422,
	41, 1140,
	-2, 1138,
	-1, 2558,
	5, 51,
	-2, 1061,
}

const yyPrivate = 57344

const yyLast = 34581

var yyAct = [...]int{
	567, 80, 2753, 2703, 2705, 823, 2727, 372, 1592, 2575,
	2717, 2607, 2718, 2561, 2475, 7, 2600, 2474, 6, 501,
	2473, 5, 2540, 1976, 2476, 8, 2442, 2545, 2622, 503,
	2574, 2538, 2605, 2070, 2369, 1803, 2232, 2422, 1161, 2329,
	2051, 1774, 630, 1083, 1959, 492, 1251, 1493, 1590, 1950,
	2472, 3, 2424, 506, 1549, 566, 1824, 1532, 2119, 2027,
	2310, 1602, 355, 358, 2281, 2287, 2265, 127, 1353, 2562,
	127, 2071, 397, 397, 1497, 403, 127, 1499, 2028, 83,
	418, 80, 2247, 2153, 855, 485, 400, 400, 1958, 628,
	1884, 519, 106, 1250, 1775, 2143, 2024, 93, 1664, 127,
	1531, 1688, 1541, 1530, 2036, 1346, 2043, 1998, 1253, 1400,
	127, 1409, 839, 1472, 127, 633, 1929, 1476, 127, 1361,
	1628, 1537, 1520, 1296, 625, 1581, 1231, 1867, 1269, 981,
	607, 484, 127, 400, 1466, 633, 1577, 1143, 1124, 1377,
	1483, 988, 508, 127, 984, 610, 1128, 905, 1644, 992,
	884, 624, 488, 626, 1142, 603, 604, 417, 1001, 1125,
	822, 1301, 599, 375, 374, 883, 810, 596, 1099, 85,
	1134, 2775, 2771, 2761, 2743, 2741, 1100, 2248, 2722, 2698,
	2630, 82, 1294, 2401, 2259, 2734, 2616, 390, 2716, 384,
	395, 378, 36, 2556, 36, 2414, 1895, 2104, 36, 2399,
	2686, 367, 2591, 2116, 2615, 2019, 415, 87, 88, 89,
	90, 91, 385, 36, 2402, 72, 39, 40, 1769, 69,
	2518, 36, 2555, 1615, 2541, 1615, 1710, 2214, 809, 2066,
	2067, 1517, 1518, 2456, 1969, 1770, 1144, 1411, 1145, 2354,
	1643, 1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1017, 2266, 81, 1027, 81, 1342, 1343, 2065,
	81, 2268, 1495, 843, 844, 974, 1516, 846, 812, 858,
	815, 816, 2611, 1297, 1812, 81, 2611, 1811, 1300, 1317,
	1813, 933, 580, 81, 586, 588, 587, 584, 585, 583,
	582, 581, 2606, 859, 860, 366, 1999, 365, 1850, 941,
	845, 1298, 1299, 2251, 2252, 1551, 2608, 1642, 407, 902,
	2608, 1566, 109, 620, 2201, 1557, 1559, 369, 1558, 377,
	376, 379, 72, 39, 40, 494, 1571, 2199, 1566, 383,
	364, 2612, 414, 349, 1926, 2612, 2271, 2001, 1553, 1338,
	865, 127, 1337, 1553, 41, 1336, 387, 1335, 1334, 1333,
	391, 1890, 80, 80, 1578, 99, 2340, 1918, 937, 938,
	2288, 2289, 2290, 2291, 394, 2711, 873, 408, 2427, 875,
	2142, 1923, 874, 1281, 2269, 2270, 2272, 2273, 2274, 1655,
	118, 114, 115, 2632, 116, 127, 2631, 2282, 1672, 1666,
	1667, 868, 1665, 1668, 1669, 2285, 2126, 2581, 1603, 2579,
	2306, 2522, 872, 876, 2299, 1656, 1328, 2400, 917, 2283,
	2284, 970, 2512, 2638, 101, 2627, 120, 119, 98, 978,
	1892, 2731, 2297, 2394, 111, 110, 866, 867, 1673, 112,
	2120, 2121, 2122, 2123, 2124, 2393, 127, 1565, 2392, 948,
	2389, 2391, 949, 2625, 2626, 2390, 856, 359, 857, 859,
	860, 2388, 2508, 2509, 2652, 380, 381, 382, 388, 1307,
	392, 393, 396, 2619, 2620, 2117, 107, 2520, 121, 2418,
	122, 2120, 2121, 2122, 2123, 2124, 108, 1894, 2003, 2129,
	2396, 350, 2563, 2007, 917, 2002, 2234, 2000, 1597, 360,
	1795, 2470, 2005, 2709, 1909, 1910, 2704, 854, 2700, 842,
	1036, 851, 103, 1038, 104, 2004, 2681, 915, 940, 850,
	2707, 852, 853, 356, 1004, 1596, 113, 2514, 814, 813,
	2006, 2008, 2714, 2311, 2312, 2468, 631, 631, 631, 627,
	917, 1546, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 2103, 2457, 1081, 368, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 967,
	1098, 1101, 1101, 1101, 1107, 1101, 1101, 1107, 1101, 1107,
	1116, 1117, 1118, 1119, 2144, 1129, 1649, 2554, 73, 1282,
	1857, 1300, 1671, 1580, 2609, 1556, 1842, 2694, 2609, 1566,
	916, 2267, 924, 127, 127, 127, 117, 869, 1082, 2415,
	1896, 1847, 1846, 976, 1298, 1299, 79, 2580, 79, 633,
	969, 955, 79, 950, 1893, 2757, 2519, 2513, 2417, 2767,
	357, 2397, 1123, 1843, 357, 1037, 357, 79, 2128, 352,
	100, 1885, 927, 2706, 2708, 79, 1302, 610, 1848, 1935,
	1835, 109, 610, 386, 357, 2158, 1836, 2776, 2773, 2762,
	922, 2744, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 353, 2370, 965, 1886, 2074, 811,
	1469, 1304, 825, 631, 1303, 2524, 923, 1546, 919, 2372,
	1156, 1829, 2321, 413, 2322, 73, 1947, 1917, 1914, 1898,
	1897, 1829, 1650, 1239, 1237, 1135, 870, 1220, 1224, 1802,
	1829, 1502, 1504, 1829, 1801, 989, 1800, 1912, 1829, 807,
	973, 1845, 920, 921, 1147, 1008, 817, 1131, 913, 1148,
	321, 2325, 1039, 1040, 2184, 2176, 1916, 1832, 1915, 1160,
	1102, 1104, 1106, 1108, 1110, 1112, 1113, 1115, 1103, 1105,
	961, 1109, 1111, 1133, 1114, 1816, 2755, 1808, 1138, 2756,
	1705, 2754, 1693, 111, 110, 1678, 2371, 1356, 1155, 1887,
	1888, 1748, 960, 956, 957, 958, 959, 962, 963, 964,
	966, 1157, 1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1017, 1828, 1084, 1027, 1612, 1140, 1503,
	1942, 1935, 1611, 1745, 1828, 1939, 1097, 1007, 1938, 1941,
	912, 1935, 397, 1828, 1233, 631, 1828, 633, 1936, 1546,
	2320, 1828, 835, 2517, 1946, 400, 400, 1521, 1943, 397,
	2093, 1252, 1027, 1017, 127, 498, 1027, 127, 2138, 1629,
	1512, 2326, 400, 400, 1279, 127, 2653, 2654, 2650, 2651,
	2551, 2550, 1232, 2539, 127, 127, 127, 127, 1025, 1026,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 1255, 2336,
	1027, 1953, 1477, 2404, 400, 918, 925, 926, 928, 929,
	930, 931, 932, 1270, 934, 935, 936, 1384, 939, 2094,
	942, 943, 944, 945, 946, 1619, 1039, 1040, 848, 1000,
	841, 1277, 1382, 1383, 1381, 1349, 504, 2405, 1752, 397,
	861, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 96,
	1844, 1027, 400, 400, 400, 824, 1951, 633, 1039, 1040,
	2041, 2040, 999, 998, 1292, 2747, 2728, 2746, 1743, 2764,
	1742, 1256, 1289, 1326, 1020, 1021, 1022, 1023, 1024, 1017,
	1000, 1310, 1027, 1265, 1266, 1267, 1268, 400, 999, 998,
	1153, 80, 400, 400, 95, 877, 818, 980, 1467, 1354,
	1355, 2021, 2760, 2695, 1234, 1273, 1000, 1274, 1226, 2684,
	1271, 998, 1241, 127, 2081, 127, 420, 2623, 633, 2662,
	1332, 2661, 1620, 2298, 840, 849, 1308, 2292, 1000, 1259,
	1260, 1467, 94, 1760, 863, 995, 127, 999, 998, 2584,
	2576, 1340, 1004, 1016, 1015, 1025, 1026, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1017, 1000, 1347, 1027, 81, 80,
	2768, 999, 998, 1744, 1284, 1285, 1331, 2577, 1287, 1380,
	1375, 2559, 827, 828, 829, 830, 831, 832, 833, 1000,
	999, 998, 2412, 1358, 1290, 1374, 1378, 2697, 633, 1404,
	1405, 2515, 1305, 999, 998, 412, 1306, 1309, 1000, 1258,
	2624, 2411, 999, 998, 1873, 2660, 1085, 1359, 2623, 1082,
	1360, 1000, 1968, 2578, 2769, 633, 633, 999, 998, 1275,
	1000, 999, 998, 985, 2023, 2410, 986, 999, 998, 2409,
	1327, 2403, 2258, 1330, 2257, 1000, 1373, 2516, 1872, 1000,
	1339, 1367, 1369, 1370, 1401, 1000, 1402, 1368, 1870, 1851,
	1496, 908, 1814, 1344, 1815, 1129, 1447, 907, 1084, 1129,
	881, 127, 1690, 1691, 1692, 1453, 1456, 2674, 2673, 127,
	127, 2635, 1468, 1379, 127, 127, 2633, 2590, 127, 127,
	127, 1371, 2511, 880, 593, 594, 2510, 2467, 2419, 1419,
	2387, 2350, 2295, 2294, 1424, 979, 2293, 2255, 633, 633,
	1082, 2149, 1507, 1255, 2086, 1868, 1509, 524, 523, 526,
	527, 528, 529, 1639, 1286, 610, 525, 530, 1375, 1407,
	1257, 2659, 2521, 1415, 2465, 2436, 1832, 2430, 2318, 2187,
	2172, 1501, 2168, 1525, 1426, 1427, 2160, 626, 1485, 1488,
	1489, 1490, 1486, 2130, 1487, 1491, 1492, 1439, 2044, 2045,
	2114, 1443, 2113, 2112, 980, 1903, 1364, 1365, 1902, 1633,
	1617, 1616, 1527, 1403, 127, 1464, 1609, 1283, 1280, 1249,
	1505, 1248, 1247, 1246, 127, 1235, 127, 127, 400, 400,
	400, 1229, 1228, 127, 1526, 1227, 2207, 1225, 903, 837,
	363, 361, 1131, 2361, 2687, 2243, 2680, 1131, 1240, 1107,
	947, 1131, 2597, 980, 1538, 1607, 1608, 2243, 2595, 2429,
	127, 127, 127, 2243, 2593, 2243, 2469, 1514, 1513, 2361,
	2461, 1519, 1510, 2361, 2377, 2361, 980, 2381, 1587, 1588,
	1528, 1535, 2361, 2360, 2380, 127, 2109, 127, 2428, 1635,
	2087, 633, 913, 1084, 1804, 633, 2645, 1451, 1452, 2243,
	2242, 2224, 980, 420, 1677, 980, 84, 1545, 2178, 1804,
	1583, 1584, 1585, 1586, 2101, 2100, 1675, 633, 2039, 1579,
	633, 2097, 2098, 2097, 2096, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1016, 1015, 1025, 1026, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1017, 1694, 2179, 1027, 1641, 1703,
	980, 1480, 1621, 1480, 980, 1652, 1651, 1627, 1445, 1636,
	1703, 1524, 1445, 980, 1159, 1158, 2179, 1136, 1601, 1375,
	1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1017, 1005, 1136, 1027, 1374, 2025, 1804, 1506, 2039, 1135,
	1351, 1479, 952, 951, 1311, 1445, 911, 1314, 1315, 1316,
	910, 1318, 1319, 911, 2602, 1320, 2218, 1378, 1600, 1634,
	1615, 1321, 2110, 1640, 2099, 1322, 1323, 1631, 1324, 1325,
	2053, 1928, 1818, 1137, 1647, 1139, 1515, 1703, 1732, 1589,
	1480, 1731, 1288, 1614, 1352, 1526, 975, 1329, 1137, 1295,
	1135, 1350, 1238, 2039, 1236, 1141, 1654, 1771, 1773, 1657,
	913, 1129, 1129, 1129, 1129, 1129, 621, 81, 1131, 1661,
	2617, 2594, 1674, 2052, 1682, 1680, 1681, 1496, 2435, 1796,
	127, 127, 127, 127, 127, 2433, 1699, 1129, 2260, 1553,
	2230, 1582, 127, 2080, 2044, 2045, 127, 1578, 1822, 917,
	127, 1695, 1777, 1598, 1379, 1573, 127, 1772, 1485, 1488,
	1489, 1490, 1486, 1776, 1487, 1491, 1572, 1221, 900, 371,
	1591, 1630, 2738, 1806, 1219, 1807, 1362, 1447, 81, 2736,
	633, 2719, 2108, 2047, 1805, 2025, 1874, 1737, 1243, 953,
	914, 909, 1787, 1789, 1785, 1489, 1490, 1788, 610, 1786,
	1689, 2050, 2049, 1791, 1784, 1783, 489, 490, 2656, 1799,
	2614, 1798, 1956, 1679, 993, 994, 2644, 2221, 1687, 1686,
	989, 2351, 2317, 80, 2246, 2167, 2166, 2085, 2084, 1834,
	1759, 1831, 1833, 1826, 2076, 2526, 2529, 402, 565, 2589,
	2588, 633, 2423, 991, 1552, 1567, 1568, 1569, 1570, 1778,
	400, 2634, 1781, 1131, 1131, 1131, 1131, 1131, 2421, 2507,
	1220, 1819, 1790, 2506, 127, 400, 397, 362, 1908, 1131,
	1906, 1779, 1780, 1876, 1782, 1147, 982, 1232, 1861, 1131,
	400, 1709, 1711, 1809, 1901, 2406, 2407, 1817, 983, 1154,
	1821, 898, 1900, 882, 1723, 1724, 1725, 1726, 879, 878,
	400, 838, 633, 2669, 2440, 2439, 80, 2216, 400, 1354,
	1355, 2646, 2327, 1738, 1638, 1594, 1242, 2300, 1860, 2582,
	1862, 1863, 1864, 1865, 2301, 2425, 1877, 633, 633, 1626,
	617, 1869, 96, 127, 629, 1761, 993, 994, 1685, 1276,
	1345, 1977, 1223, 633, 971, 972, 1684, 1871, 2668, 2667,
	2666, 1827, 1830, 2384, 826, 1660, 1082, 1891, 864, 486,
	633, 2637, 2636, 2586, 2530, 1954, 1955, 2448, 1905, 2444,
	487, 84, 2443, 2330, 1919, 1416, 1417, 1804, 1375, 2740,
	2739, 1961, 1925, 1904, 2147, 1911, 1924, 1922, 1429, 1430,
	1431, 1432, 1921, 1374, 1749, 1913, 1879, 1880, 1881, 2740,
	1746, 2030, 80, 1444, 1446, 1658, 1272, 996, 2739, 1450,
	2458, 1927, 2083, 1937, 1348, 1948, 1949, 1932, 621, 1952,
	1933, 633, 409, 633, 411, 86, 2055, 2486, 52, 2488,
	19, 2059, 2060, 2061, 2487, 18, 2489, 20, 1962, 55,
	2038, 2026, 1777, 1, 1971, 1967, 633, 1963, 2490, 21,
	2485, 15, 2031, 1776, 1648, 1653, 2029, 2484, 14, 1347,
	2478, 10, 2501, 34, 2499, 33, 633, 2020, 633, 1312,
	633, 2064, 633, 1930, 1940, 1945, 2498, 32, 2497, 28,
	2280, 2054, 2010, 2009, 2279, 1376, 2496, 27, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 2286, 1961, 2115, 2058, 2033, 2495, 26,
	2493, 23, 2118, 2062, 2078, 2106, 2107, 2079, 2048, 2492,
	22, 1889, 420, 2296, 127, 2494, 24, 1230, 397, 2395,
	2125, 2056, 2483, 13, 2480, 12, 2479, 11, 2477, 9,
	821, 1599, 400, 1587, 904, 1588, 2587, 127, 400, 1005,
	2525, 2069, 2068, 2527, 2111, 2420, 2075, 2302, 2077, 2264,
	2263, 1883, 127, 1882, 400, 899, 633, 400, 1293, 1459,
	1931, 400, 400, 1934, 400, 2132, 1610, 1470, 1978, 1670,
	2537, 1659, 1981, 1982, 1983, 954, 2127, 1986, 1539, 1529,
	633, 623, 92, 1618, 127, 633, 847, 329, 1536, 1840,
	1632, 2528, 633, 633, 901, 2088, 2089, 1839, 1849, 1550,
	1838, 1837, 2092, 2523, 1841, 1165, 1163, 2156, 1164, 2095,
	1162, 1167, 1852, 1853, 2177, 1166, 333, 1149, 2022, 1859,
	2569, 2186, 997, 102, 56, 2180, 2319, 1944, 2137, 1866,
	980, 2141, 405, 406, 97, 2145, 2146, 2133, 2148, 105,
	2212, 335, 1035, 1683, 2157, 1810, 1220, 2151, 608, 2150,
	609, 1662, 2171, 601, 977, 2549, 2599, 1676, 2618, 987,
	2542, 1758, 2063, 1096, 1465, 507, 1794, 420, 2335, 2544,
	1366, 522, 521, 520, 517, 127, 1016, 1015, 1025, 1026,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 518, 1473,
	1027, 2610, 633, 1625, 1357, 1768, 1009, 2102, 505, 633,
	633, 633, 1777, 496, 1127, 1120, 1637, 1484, 633, 1482,
	1481, 1244, 597, 1776, 1701, 2046, 2238, 2239, 2240, 1704,
	633, 2042, 1494, 1126, 1706, 1707, 70, 862, 80, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 2249, 2225, 1722,
	351, 2213, 2455, 2217, 1727, 1728, 1729, 1730, 127, 2197,
	38, 1734, 1735, 1736, 2226, 2236, 410, 491, 1739, 1740,
	1741, 25, 17, 871, 16, 1663, 1747, 819, 2241, 1750,
	1751, 2276, 2277, 2278, 1756, 2237, 42, 44, 2261, 1762,
	1878, 1763, 1764, 1765, 1595, 1766, 1767, 400, 2568, 1819,
	2702, 885, 2726, 2621, 31, 2250, 30, 29, 2491, 1129,
	2500, 2482, 2481, 2689, 1792, 1793, 2688, 4, 2173, 968,
	71, 35, 619, 2313, 2314, 2, 633, 494, 127, 0,
	0, 2275, 0, 0, 633, 2315, 0, 0, 0, 0,
	0, 0, 617, 2253, 420, 0, 0, 617, 1150, 2030,
	2303, 0, 2030, 2356, 2332, 2333, 2331, 0, 1696, 1697,
	1698, 0, 2323, 2304, 2328, 2055, 2309, 2305, 0, 2308,
	2316, 2307, 1961, 0, 633, 0, 0, 0, 0, 1587,
	633, 0, 1075, 1076, 0, 127, 2324, 127, 0, 0,
	0, 2215, 2075, 633, 0, 0, 0, 2359, 1084, 0,
	2383, 0, 2385, 2355, 2029, 0, 0, 2029, 2227, 2228,
	633, 2353, 2229, 0, 0, 2231, 0, 0, 0, 0,
	2362, 0, 2090, 1084, 2382, 0, 0, 2352, 0, 0,
	0, 0, 0, 0, 2376, 0, 1753, 1754, 1755, 0,
	2363, 2358, 2368, 2374, 2375, 2373, 1501, 0, 2364, 0,
	0, 1131, 0, 0, 0, 0, 0, 0, 2441, 0,
	0, 2386, 0, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 0, 0, 2398, 0, 0, 0, 2135,
	0, 2413, 2408, 0, 0, 2030, 0, 80, 2426, 0,
	2416, 0, 0, 0, 0, 0, 0, 2445, 2431, 2432,
	0, 0, 0, 2434, 0, 0, 0, 2378, 2446, 2379,
	0, 633, 0, 0, 0, 2438, 80, 0, 0, 0,
	0, 0, 0, 1966, 0, 2471, 0, 0, 0, 1974,
	0, 0, 0, 2464, 0, 0, 0, 2460, 0, 420,
	2029, 1984, 1985, 0, 2459, 2447, 1222, 420, 0, 0,
	0, 2466, 0, 0, 1993, 0, 0, 0, 1997, 1129,
	1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1017, 2463, 0, 1027, 400, 0, 0, 127, 0,
	0, 0, 0, 633, 0, 633, 0, 1825, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 2533, 0, 2535,
	0, 0, 2531, 0, 0, 1907, 2532, 0, 0, 0,
	2564, 0, 0, 2534, 0, 2547, 0, 0, 127, 0,
	0, 2548, 2552, 0, 0, 0, 0, 0, 0, 0,
	2557, 1777, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 2256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 633, 2573, 2585, 2583, 0, 0, 0, 2592, 0,
	494, 1131, 0, 0, 2603, 0, 0, 1991, 1992, 0,
	0, 0, 0, 0, 2613, 0, 0, 629, 0, 0,
	0, 2011, 2012, 0, 2013, 2014, 0, 2464, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 2640, 2628, 2642,
	0, 0, 0, 0, 633, 0, 629, 0, 2649, 0,
	0, 0, 0, 0, 0, 80, 2648, 2658, 2641, 2643,
	2647, 80, 2639, 2339, 0, 0, 0, 633, 0, 0,
	2672, 0, 2655, 2057, 397, 0, 2678, 1977, 0, 633,
	2663, 0, 0, 2181, 2657, 2665, 0, 1406, 400, 0,
	0, 0, 2682, 80, 0, 633, 2679, 0, 80, 0,
	2683, 2699, 0, 2693, 0, 633, 2692, 0, 0, 2691,
	0, 2543, 2546, 2690, 1437, 1438, 1084, 2670, 2082, 2193,
	0, 0, 0, 2696, 2713, 80, 2715, 2720, 80, 80,
	2202, 2203, 2712, 80, 0, 0, 2208, 617, 2672, 0,
	0, 0, 2729, 0, 0, 2733, 0, 397, 2701, 2732,
	0, 2219, 2220, 80, 2222, 2721, 80, 2223, 2723, 2737,
	2735, 400, 2672, 2748, 2750, 0, 0, 0, 0, 2073,
	2565, 2566, 80, 2758, 80, 0, 0, 2235, 80, 0,
	617, 2672, 2134, 2672, 0, 0, 2745, 0, 0, 0,
	0, 0, 80, 0, 629, 80, 0, 629, 629, 0,
	0, 2672, 80, 0, 96, 0, 80, 0, 2763, 0,
	0, 2672, 0, 1554, 1555, 2672, 1560, 1561, 1562, 1563,
	1564, 0, 0, 0, 0, 2772, 0, 0, 0, 1972,
	1973, 0, 0, 0, 1574, 1575, 1576, 0, 1979, 1980,
	2182, 0, 0, 0, 0, 1502, 1504, 0, 0, 0,
	1987, 1988, 1989, 1990, 0, 0, 0, 1994, 1995, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2546, 0, 0, 0, 0, 0, 2155, 0, 0, 0,
	0, 0, 0, 1825, 0, 2162, 2164, 0, 1130, 0,
	0, 2664, 2209, 2210, 2211, 2155, 0, 1016, 1015, 1025,
	1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 0,
	0, 1027, 0, 0, 990, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2345, 2346, 2347, 1503, 2349, 0, 124, 0, 0, 0,
	1646, 0, 2205, 0, 1646, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2365,
	2366, 2367, 125, 0, 0, 348, 1646, 0, 0, 1646,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 420, 622, 0, 0, 0, 808, 0, 0,
	0, 0, 0, 0, 419, 629, 2749, 0, 0, 0,
	0, 820, 495, 0, 0, 600, 618, 0, 0, 125,
	0, 0, 834, 125, 0, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 325, 0, 0, 125, 0, 2204,
	0, 0, 0, 334, 342, 343, 0, 0, 125, 1016,
	1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1017, 0, 0, 1027, 0, 0, 0, 0, 2449, 2450,
	0, 0, 2451, 2452, 2453, 2454, 2337, 2338, 331, 0,
	0, 332, 0, 0, 340, 341, 0, 0, 0, 0,
	2341, 2342, 2343, 2344, 0, 0, 0, 0, 2348, 2183,
	0, 0, 0, 0, 0, 0, 0, 2185, 0, 2155,
	0, 0, 0, 0, 0, 0, 0, 2188, 2189, 0,
	0, 0, 0, 0, 0, 0, 2192, 0, 617, 2155,
	0, 0, 0, 0, 0, 337, 1016, 1015, 1025, 1026,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 0, 0,
	1027, 0, 0, 0, 0, 0, 338, 0, 0, 0,
	1408, 1413, 1414, 617, 0, 0, 1418, 0, 1420, 1421,
	1422, 1423, 0, 1425, 0, 0, 1428, 0, 0, 629,
	0, 1433, 1434, 1435, 1436, 0, 2553, 0, 1440, 1441,
	1442, 2558, 420, 0, 420, 0, 1448, 1449, 0, 0,
	2073, 1455, 1458, 0, 1463, 2018, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1858, 0, 0, 2073, 0, 0,
	836, 323, 0, 0, 0, 0, 1471, 0, 1474, 1475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 336, 326, 327, 0, 347, 0,
	0, 0, 328, 330, 906, 324, 346, 345, 2596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1920, 0, 0, 0, 0, 0, 0, 339, 0,
	1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1017, 0, 0, 1027, 2536, 629, 629, 0, 0,
	0, 0, 1187, 0, 0, 0, 0, 0, 0, 0,
	0, 419, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 1011, 0, 1014, 0,
	0, 2629, 0, 0, 0, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 0, 1012, 1013, 1010, 0, 0, 0, 0,
	2073, 0, 2073, 1016, 1015, 1025, 1026, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1017, 2191, 0, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 617, 0,
	629, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 2190, 0,
	0, 0, 1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1017, 0, 629, 1027, 629, 0, 629,
	0, 2072, 2017, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 2765, 2766, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 1132, 1016, 1015, 1025, 1026, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1017, 0, 0, 1027,
	0, 0, 2091, 0, 0, 0, 0, 1702, 125, 125,
	125, 0, 0, 0, 0, 1708, 0, 0, 618, 0,
	0, 0, 0, 618, 0, 0, 1720, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1733,
	0, 2073, 0, 0, 0, 2710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2140, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 0, 0, 1016, 1015, 1025,
	1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017, 2165,
	0, 1027, 0, 0, 2170, 0, 0, 0, 0, 0,
	0, 2174, 2175, 1201, 1204, 1205, 1206, 1207, 1208, 1209,
	0, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 2751,
	1189, 1190, 1191, 1192, 1168, 1172, 1202, 1169, 1175, 1171,
	1173, 1170, 0, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 0, 0, 2194, 2195, 0, 2196, 0, 0,
	2198, 0, 2200, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 36, 0, 72, 39, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 617, 0,
	0, 0, 78, 0, 0, 0, 41, 0, 0, 0,
	0, 2233, 0, 0, 0, 0, 0, 0, 2233, 2233,
	2233, 0, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 0, 598, 0, 0, 1245, 2244, 2245, 2233,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	1203, 0, 0, 1261, 1262, 1263, 1264, 0, 0, 125,
	0, 0, 125, 0, 0, 0, 0, 0, 2502, 0,
	1254, 2725, 2728, 2724, 0, 0, 0, 0, 0, 125,
	125, 125, 125, 1016, 1015, 1025, 1026, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1017, 0, 0, 1027, 1016, 1015,
	1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1017,
	0, 0, 1027, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 0, 0, 0, 1964, 0, 0, 0, 2503,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	0, 0, 1700, 629, 0, 49, 77, 76, 0, 0,
	0, 0, 47, 1016, 1015, 1025, 1026, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1017, 0, 0, 1027, 0, 0,
	1016, 1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1017, 1341, 2357, 1027, 0, 0, 0, 0, 2233,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2504, 0, 2072, 0, 0, 1363, 0, 0, 125, 0,
	419, 0, 0, 0, 66, 0, 67, 0, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 1254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2505,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 2437, 0, 0, 0, 1412, 1412, 1412, 0, 0,
	0, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 0,
	0, 1412, 0, 0, 0, 0, 1412, 1412, 1412, 1412,
	0, 0, 0, 1412, 1412, 1412, 0, 0, 0, 0,
	2462, 1412, 1412, 0, 0, 0, 1412, 1412, 0, 1412,
	1478, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 1412, 1412, 1412, 1412, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 125, 419, 0, 73, 0, 125,
	125, 0, 0, 125, 1511, 1254, 618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1254, 0, 2072, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 617, 0, 0,
	0, 0, 0, 2159, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 0, 1605, 1606, 0, 435, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 629, 0, 0, 443, 0, 0, 125,
	0, 125, 125, 0, 0, 0, 0, 0, 125, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2598, 0,
	2601, 0, 0, 0, 906, 1622, 1623, 125, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 441, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	125, 0, 419, 0, 0, 0, 0, 470, 0, 0,
	436, 0, 430, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2233, 0, 0, 0,
	0, 448, 446, 0, 0, 0, 449, 0, 629, 0,
	0, 1254, 457, 424, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 422, 2601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2685, 0, 0, 439, 463, 0,
	0, 0, 0, 0, 0, 437, 438, 440, 467, 0,
	469, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 1412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 1412, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2152, 0, 0, 1412,
	2154, 0, 0, 0, 425, 0, 0, 0, 0, 483,
	0, 0, 0, 447, 618, 125, 125, 125, 125, 125,
	0, 0, 0, 0, 0, 435, 0, 419, 0, 0,
	0, 125, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 125, 0, 443, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 476, 477, 0, 0, 0, 433, 426,
	427, 428, 429, 431, 450, 451, 455, 456, 473, 472,
	471, 474, 478, 481, 480, 482, 432, 434, 442, 452,
	453, 454, 458, 459, 468, 464, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 0, 436, 0, 430,
	0, 0, 0, 1899, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 460, 462, 0, 0, 0, 0, 448, 446,
	0, 0, 0, 449, 36, 0, 72, 39, 40, 457,
	424, 0, 461, 0, 0, 0, 0, 0, 59, 0,
	422, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 0, 1957, 0, 439, 463, 0, 0, 0, 0,
	0, 0, 437, 438, 440, 467, 0, 469, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 1412,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 0,
	1254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2502, 0, 0, 0, 0, 2774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 2503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	476, 477, 0, 0, 47, 433, 426, 427, 428, 429,
	431, 450, 451, 455, 456, 473, 472, 471, 474, 478,
	481, 480, 482, 432, 434, 442, 452, 453, 454, 458,
	459, 468, 464, 466, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2504, 2105, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 66, 483, 67, 0,
	0, 0, 0, 0, 0, 0, 2131, 0, 0, 125,
	465, 0, 0, 435, 0, 0, 0, 0, 0, 0,
	0, 2136, 0, 68, 0, 0, 0, 0, 0, 460,
	462, 443, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 2505, 75, 2169, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 631, 0, 0, 0, 125,
	0, 0, 0, 441, 423, 0, 0, 0, 0, 0,
	0, 0, 1218, 445, 495, 0, 0, 0, 0, 0,
	0, 483, 470, 0, 0, 436, 0, 430, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 448, 446, 0, 73,
	0, 449, 0, 0, 0, 0, 0, 457, 424, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 422, 0,
	419, 0, 0, 0, 618, 0, 0, 0, 0, 631,
	0, 0, 439, 463, 0, 0, 0, 441, 423, 0,
	437, 438, 440, 467, 0, 469, 475, 445, 79, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 436,
	0, 430, 0, 0, 0, 0, 444, 2262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	448, 446, 0, 0, 0, 449, 0, 0, 0, 0,
	0, 457, 424, 0, 461, 0, 0, 0, 0, 425,
	0, 0, 422, 0, 0, 0, 0, 0, 447, 0,
	0, 0, 0, 0, 0, 0, 439, 463, 0, 0,
	0, 0, 0, 0, 437, 438, 440, 467, 0, 469,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 476, 477,
	0, 0, 0, 433, 426, 427, 428, 429, 431, 450,
	451, 455, 456, 473, 472, 471, 474, 478, 481, 480,
	482, 432, 434, 442, 452, 453, 454, 458, 459, 468,
	464, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 0, 419, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 462, 0,
	0, 0, 476, 477, 0, 0, 0, 433, 426, 427,
	428, 429, 431, 450, 451, 455, 456, 473, 472, 471,
	474, 478, 481, 480, 482, 432, 434, 442, 452, 453,
	454, 458, 459, 468, 464, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 462, 0, 0, 0, 0, 0, 788, 764,
	291, 709, 791, 667, 693, 804, 697, 701, 744, 650,
	722, 236, 689, 651, 0, 671, 640, 681, 641, 668,
	711, 166, 666, 766, 725, 790, 0, 739, 0, 158,
	0, 206, 0, 125, 0, 0, 0, 1544, 1548, 0,
	798, 203, 0, 734, 799, 283, 221, 2560, 0, 713,
	775, 720, 762, 708, 746, 659, 733, 793, 690, 741,
	794, 0, 0, 618, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 125, 654, 0, 737, 787, 684, 740,
	743, 638, 736, 0, 645, 652, 803, 782, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 712, 721,
	756, 705, 307, 0, 0, 0, 699, 251, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 731,
	0, 0, 0, 653, 646, 0, 0, 710, 0, 0,
	0, 658, 637, 673, 758, 0, 635, 222, 0, 763,
	781, 1547, 192, 314, 785, 704, 703, 1542, 0, 1543,
	0, 201, 631, 128, 0, 1540, 1546, 233, 755, 0,
	686, 636, 767, 669, 682, 159, 678, 261, 0, 306,
	691, 728, 260, 204, 299, 751, 786, 305, 695, 770,
	312, 316, 677, 718, 656, 280, 167, 0, 0, 688,
	250, 162, 197, 706, 745, 670, 156, 753, 732, 769,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 700, 692, 0, 0, 310, 702, 270,
	269, 696, 187, 761, 735, 642, 257, 748, 193, 132,
	0, 319, 143, 199, 293, 634, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 683,
	750, 760, 255, 272, 295, 145, 286, 679, 680, 685,
	757, 263, 768, 779, 792, 210, 169, 172, 181, 188,
	742, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 643, 0, 284, 0,
	0, 147, 665, 0, 294, 694, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 663, 664, 661, 0, 662, 723,
	724, 795, 796, 797, 759, 655, 0, 776, 777, 0,
	0, 0, 0, 0, 765, 783, 784, 747, 805, 698,
	660, 644, 647, 648, 649, 657, 714, 715, 727, 730,
	773, 772, 771, 774, 778, 801, 800, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	131, 137, 202, 806, 256, 175, 309, 639, 164, 0,
	716, 719, 729, 754, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 752, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 780, 0, 738, 749, 788, 764, 291, 709,
	791, 667, 693, 804, 697, 701, 744, 650, 722, 236,
	689, 651, 0, 671, 640, 681, 641, 668, 711, 166,
	666, 766, 725, 790, 0, 739, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 789, 717, 0, 798, 203,
	0, 734, 799, 283, 221, 0, 0, 713, 775, 720,
	762, 708, 746, 659, 733, 793, 690, 741, 794, 0,
	0, 0, 0, 2567, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 737, 787, 684, 740, 743, 638,
	736, 0, 645, 652, 803, 782, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 712, 721, 756, 705,
	307, 0, 0, 0, 699, 251, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 731, 0, 0,
	0, 653, 646, 0, 0, 710, 0, 0, 0, 658,
	637, 673, 758, 0, 635, 222, 0, 763, 781, 707,
	192, 314, 785, 704, 703, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 755, 0, 686, 636,
	767, 669, 682, 159, 678, 261, 0, 306, 691, 728,
	260, 204, 299, 751, 786, 305, 695, 770, 312, 316,
	677, 718, 656, 280, 167, 0, 0, 688, 250, 162,
	197, 706, 745, 670, 156, 753, 732, 769, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 2570, 2571,
	2572, 700, 692, 0, 0, 310, 702, 270, 269, 696,
	187, 761, 735, 642, 257, 748, 193, 132, 0, 319,
	143, 199, 293, 634, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 683, 750, 760,
	255, 272, 295, 145, 286, 679, 680, 685, 757, 263,
	768, 779, 792, 210, 169, 172, 181, 188, 742, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 643, 0, 284, 0, 0, 147,
	665, 0, 294, 694, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 663, 664, 661, 0, 662, 723, 724, 795,
	796, 797, 759, 655, 0, 776, 777, 0, 0, 0,
	0, 0, 765, 783, 784, 747, 805, 698, 660, 644,
	647, 648, 649, 657, 714, 715, 727, 730, 773, 772,
	771, 774, 778, 801, 800, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 131, 137,
	202, 806, 256, 175, 309, 639, 164, 0, 716, 719,
	729, 754, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 752, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	780, 0, 738, 749, 788, 764, 291, 709, 791, 667,
	693, 804, 697, 701, 744, 650, 722, 236, 689, 651,
	0, 671, 640, 681, 641, 668, 711, 166, 666, 766,
	725, 790, 0, 739, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 789, 717, 0, 798, 203, 0, 734,
	799, 283, 221, 0, 0, 713, 775, 720, 762, 708,
	746, 659, 733, 793, 690, 741, 794, 0, 0, 0,
	0, 632, 0, 1533, 1534, 0, 0, 0, 0, 0,
	654, 0, 737, 787, 684, 740, 743, 638, 736, 0,
	645, 652, 803, 782, 674, 675, 676, 1820, 0, 0,
	0, 0, 0, 0, 712, 721, 756, 705, 307, 0,
	0, 0, 699, 251, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 731, 0, 0, 0, 653,
	646, 0, 0, 710, 0, 0, 0, 658, 637, 673,
	758, 0, 635, 222, 0, 763, 781, 707, 192, 314,
	785, 704, 703, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 755, 0, 686, 636, 767, 669,
	682, 159, 678, 261, 0, 306, 691, 728, 260, 204,
	299, 751, 786, 305, 695, 770, 312, 316, 677, 718,
	656, 280, 167, 0, 0, 688, 250, 162, 197, 706,
	745, 670, 156, 753, 732, 769, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 700,
	692, 0, 0, 310, 702, 270, 269, 696, 187, 761,
	735, 642, 257, 748, 193, 132, 0, 319, 143, 199,
	293, 634, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 683, 750, 760, 255, 272,
	295, 145, 286, 679, 680, 685, 757, 263, 768, 779,
	792, 210, 169, 172, 181, 188, 742, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 643, 0, 284, 0, 0, 147, 665, 0,
	294, 694, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	663, 664, 661, 0, 662, 723, 724, 795, 796, 797,
	759, 655, 0, 776, 777, 0, 0, 0, 0, 0,
	765, 783, 784, 747, 805, 698, 660, 644, 647, 648,
	649, 657, 714, 715, 727, 730, 773, 772, 771, 774,
	778, 801, 800, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 131, 137, 202, 806,
	256, 175, 309, 639, 164, 0, 716, 719, 729, 754,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 752, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 780, 0,
	738, 749, 788, 764, 291, 709, 791, 667, 693, 804,
	697, 701, 744, 650, 722, 236, 689, 651, 0, 671,
	640, 681, 641, 668, 711, 166, 666, 766, 725, 790,
	0, 739, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 789, 717, 0, 798, 203, 0, 734, 799, 283,
	221, 0, 0, 713, 775, 720, 762, 708, 746, 659,
	733, 793, 690, 741, 794, 0, 0, 0, 0, 632,
	0, 1533, 1534, 0, 0, 0, 0, 0, 654, 0,
	737, 787, 684, 740, 743, 638, 736, 0, 645, 652,
	803, 782, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 712, 721, 756, 705, 307, 0, 0, 0,
	699, 251, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 731, 0, 0, 0, 653, 646, 0,
	0, 710, 0, 0, 0, 658, 637, 673, 758, 0,
	635, 222, 0, 763, 781, 707, 192, 314, 785, 704,
	703, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 755, 0, 686, 636, 767, 669, 682, 159,
	678, 261, 0, 306, 691, 728, 260, 204, 299, 751,
	786, 305, 695, 770, 312, 316, 677, 718, 656, 280,
	167, 0, 0, 688, 250, 162, 197, 706, 745, 670,
	156, 753, 732, 769, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 700, 692, 0,
	0, 310, 702, 270, 269, 696, 187, 761, 735, 642,
	257, 748, 193, 132, 0, 319, 143, 199, 293, 634,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 683, 750, 760, 255, 272, 295, 145,
	286, 679, 680, 685, 757, 263, 768, 779, 792, 210,
	169, 172, 181, 188, 742, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	643, 0, 284, 0, 0, 147, 665, 0, 294, 694,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 663, 664,
	661, 0, 662, 723, 724, 795, 796, 797, 759, 655,
	0, 776, 777, 0, 0, 0, 0, 0, 765, 783,
	784, 747, 805, 698, 660, 644, 647, 648, 649, 657,
	714, 715, 727, 730, 773, 772, 771, 774, 778, 801,
	800, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 131, 137, 202, 806, 256, 175,
	309, 639, 164, 0, 716, 719, 729, 754, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 752,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 780, 0, 738, 749,
	788, 2034, 291, 709, 791, 667, 693, 804, 697, 701,
	744, 650, 722, 236, 689, 651, 0, 671, 640, 681,
	641, 668, 711, 166, 666, 766, 725, 790, 0, 739,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 789,
	717, 0, 798, 203, 0, 734, 799, 283, 221, 0,
	0, 713, 775, 720, 762, 708, 746, 659, 733, 793,
	690, 741, 794, 81, 0, 980, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 737, 787,
	684, 740, 743, 638, 736, 0, 645, 652, 803, 782,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	712, 721, 756, 705, 307, 0, 0, 0, 699, 251,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 731, 0, 0, 0, 653, 646, 0, 0, 710,
	0, 0, 0, 658, 637, 673, 758, 0, 635, 222,
	0, 763, 781, 707, 192, 314, 785, 704, 703, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	755, 0, 686, 636, 767, 669, 682, 159, 678, 261,
	0, 306, 691, 728, 260, 204, 299, 751, 786, 305,
	695, 770, 312, 316, 677, 718, 656, 280, 167, 0,
	0, 688, 250, 162, 197, 706, 745, 670, 156, 753,
	732, 769, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 700, 692, 0, 0, 310,
	702, 270, 269, 696, 187, 761, 735, 642, 257, 748,
	193, 132, 0, 319, 143, 199, 293, 634, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 683, 750, 760, 255, 272, 295, 145, 286, 679,
	680, 685, 757, 263, 768, 779, 792, 210, 169, 172,
	181, 188, 742, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 643, 0,
	284, 0, 0, 147, 665, 0, 294, 694, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 663, 664, 661, 0,
	662, 723, 724, 795, 796, 797, 759, 655, 0, 776,
	777, 0, 0, 0, 0, 0, 765, 783, 784, 747,
	805, 698, 660, 644, 647, 648, 649, 657, 714, 715,
	727, 730, 773, 772, 771, 774, 778, 801, 800, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 131, 137, 202, 2035, 256, 175, 309, 639,
	164, 0, 716, 719, 729, 754, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 752, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 780, 0, 738, 749, 788, 764,
	291, 709, 791, 667, 693, 804, 697, 701, 744, 650,
	722, 236, 689, 651, 0, 671, 640, 681, 641, 668,
	711, 166, 666, 766, 725, 790, 0, 739, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 789, 717, 0,
	798, 203, 0, 734, 799, 283, 221, 0, 0, 713,
	775, 720, 762, 708, 746, 659, 733, 793, 690, 741,
	794, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 737, 787, 684, 740,
	743, 638, 736, 0, 645, 652, 803, 782, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 712, 721,
	756, 705, 307, 0, 0, 0, 699, 251, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 731,
	0, 0, 0, 653, 646, 0, 0, 710, 0, 0,
	0, 658, 637, 673, 758, 0, 635, 222, 0, 763,
	781, 707, 192, 314, 785, 704, 703, 0, 0, 0,
	0, 201, 631, 128, 0, 627, 0, 233, 755, 0,
	686, 636, 767, 669, 682, 159, 678, 261, 0, 306,
	691, 728, 260, 204, 299, 751, 786, 305, 695, 770,
	312, 316, 677, 718, 656, 280, 167, 0, 0, 688,
	250, 162, 197, 706, 745, 670, 156, 753, 732, 769,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 700, 692, 0, 0, 310, 702, 270,
	269, 696, 187, 761, 735, 642, 257, 748, 193, 132,
	0, 319, 143, 199, 293, 634, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 683,
	750, 760, 255, 272, 295, 145, 286, 679, 680, 685,
	757, 263, 768, 779, 792, 210, 169, 172, 181, 188,
	742, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 643, 0, 284, 0,
	0, 147, 665, 0, 294, 694, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 663, 664, 661, 0, 662, 723,
	724, 795, 796, 797, 759, 655, 0, 776, 777, 0,
	0, 0, 0, 0, 765, 783, 784, 747, 805, 698,
	660, 644, 647, 648, 649, 657, 714, 715, 727, 730,
	773, 772, 771, 774, 778, 801, 800, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	131, 137, 202, 806, 256, 175, 309, 639, 164, 0,
	716, 719, 729, 754, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 752, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 780, 0, 738, 749, 788, 764, 291, 709,
	791, 667, 693, 804, 697, 701, 744, 650, 722, 236,
	689, 651, 0, 671, 640, 681, 641, 668, 711, 166,
	666, 766, 725, 790, 0, 739, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 789, 717, 0, 798, 203,
	0, 734, 799, 283, 221, 0, 0, 713, 775, 720,
	762, 708, 746, 659, 733, 793, 690, 741, 794, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 737, 787, 684, 740, 743, 638,
	736, 0, 645, 652, 803, 782, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 712, 721, 756, 705,
	307, 0, 0, 0, 699, 251, 687, 0, 0, 0,
	0, 0, 0, 2334, 0, 672, 0, 731, 0, 0,
	0, 653, 646, 0, 0, 710, 0, 0, 0, 658,
	637, 673, 758, 0, 635, 222, 0, 763, 781, 707,
	192, 314, 785, 704, 703, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 755, 0, 686, 636,
	767, 669, 682, 159, 678, 261, 0, 306, 691, 728,
	260, 204, 299, 751, 786, 305, 695, 770, 312, 316,
	677, 718, 656, 280, 167, 0, 0, 688, 250, 162,
	197, 706, 745, 670, 156, 753, 732, 769, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 700, 692, 0, 0, 310, 702, 270, 269, 696,
	187, 761, 735, 642, 257, 748, 193, 132, 0, 319,
	143, 199, 293, 634, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 683, 750, 760,
	255, 272, 295, 145, 286, 679, 680, 685, 757, 263,
	768, 779, 792, 210, 169, 172, 181, 188, 742, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 643, 0, 284, 0, 0, 147,
	665, 0, 294, 694, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 663, 664, 661, 0, 662, 723, 724, 795,
	796, 797, 759, 655, 0, 776, 777, 0, 0, 0,
	0, 0, 765, 783, 784, 747, 805, 698, 660, 644,
	647, 648, 649, 657, 714, 715, 727, 730, 773, 772,
	771, 774, 778, 801, 800, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 131, 137,
	202, 806, 256, 175, 309, 639, 164, 0, 716, 719,
	729, 754, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 752, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	780, 0, 738, 749, 788, 764, 291, 709, 791, 667,
	693, 804, 697, 701, 744, 650, 722, 236, 689, 651,
	0, 671, 640, 681, 641, 668, 711, 166, 666, 766,
	725, 790, 0, 739, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 789, 717, 0, 798, 203, 0, 734,
	799, 283, 221, 0, 0, 713, 775, 720, 762, 708,
	746, 659, 733, 793, 690, 741, 794, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 737, 787, 684, 740, 743, 638, 736, 0,
	645, 652, 803, 782, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 712, 721, 756, 705, 307, 0,
	0, 0, 699, 251, 687, 0, 0, 0, 0, 0,
	0, 1970, 0, 672, 0, 731, 0, 0, 0, 653,
	646, 0, 0, 710, 0, 0, 0, 658, 637, 673,
	758, 0, 635, 222, 0, 763, 781, 707, 192, 314,
	785, 704, 703, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 755, 0, 686, 636, 767, 669,
	682, 159, 678, 261, 0, 306, 691, 728, 260, 204,
	299, 751, 786, 305, 695, 770, 312, 316, 677, 718,
	656, 280, 167, 0, 0, 688, 250, 162, 197, 706,
	745, 670, 156, 753, 732, 769, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 700,
	692, 0, 0, 310, 702, 270, 269, 696, 187, 761,
	735, 642, 257, 748, 193, 132, 0, 319, 143, 199,
	293, 634, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 683, 750, 760, 255, 272,
	295, 145, 286, 679, 680, 685, 757, 263, 768, 779,
	792, 210, 169, 172, 181, 188, 742, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 643, 0, 284, 0, 0, 147, 665, 0,
	294, 694, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	663, 664, 661, 0, 662, 723, 724, 795, 796, 797,
	759, 655, 0, 776, 777, 0, 0, 0, 0, 0,
	765, 783, 784, 747, 805, 698, 660, 644, 647, 648,
	649, 657, 714, 715, 727, 730, 773, 772, 771, 774,
	778, 801, 800, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 131, 137, 202, 806,
	256, 175, 309, 639, 164, 0, 716, 719, 729, 754,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 752, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 780, 0,
	738, 749, 788, 764, 291, 709, 791, 667, 693, 804,
	697, 701, 744, 650, 722, 236, 689, 651, 0, 671,
	640, 681, 641, 668, 711, 166, 666, 766, 725, 790,
	0, 739, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 789, 717, 0, 798, 203, 0, 734, 799, 283,
	221, 0, 0, 713, 775, 720, 762, 708, 746, 659,
	733, 793, 690, 741, 794, 0, 0, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	737, 787, 684, 740, 743, 638, 736, 0, 645, 652,
	803, 782, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 712, 721, 756, 705, 307, 0, 0, 0,
	699, 251, 687, 0, 0, 0, 0, 0, 0, 1960,
	0, 672, 0, 731, 0, 0, 0, 653, 646, 0,
	0, 710, 0, 0, 0, 658, 637, 673, 758, 0,
	635, 222, 0, 763, 781, 707, 192, 314, 785, 704,
	703, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 755, 0, 686, 636, 767, 669, 682, 159,
	678, 261, 0, 306, 691, 728, 260, 204, 299, 751,
	786, 305, 695, 770, 312, 316, 677, 718, 656, 280,
	167, 0, 0, 688, 250, 162, 197, 706, 745, 670,
	156, 753, 732, 769, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 700, 692, 0,
	0, 310, 702, 270, 269, 696, 187, 761, 735, 642,
	257, 748, 193, 132, 0, 319, 143, 199, 293, 634,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 683, 750, 760, 255, 272, 295, 145,
	286, 679, 680, 685, 757, 263, 768, 779, 792, 210,
	169, 172, 181, 188, 742, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	643, 0, 284, 0, 0, 147, 665, 0, 294, 694,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 663, 664,
	661, 0, 662, 723, 724, 795, 796, 797, 759, 655,
	0, 776, 777, 0, 0, 0, 0, 0, 765, 783,
	784, 747, 805, 698, 660, 644, 647, 648, 649, 657,
	714, 715, 727, 730, 773, 772, 771, 774, 778, 801,
	800, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 131, 137, 202, 806, 256, 175,
	309, 639, 164, 0, 716, 719, 729, 754, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 752,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 780, 0, 738, 749,
	788, 764, 291, 709, 791, 667, 693, 804, 697, 701,
	744, 650, 722, 236, 689, 651, 0, 671, 640, 681,
	641, 668, 711, 166, 666, 766, 725, 790, 0, 739,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 789,
	717, 0, 798, 203, 0, 734, 799, 283, 221, 0,
	0, 713, 775, 720, 762, 708, 746, 659, 733, 793,
	690, 741, 794, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 0, 737, 787,
	684, 740, 743, 638, 736, 0, 645, 652, 803, 782,
	674, 675, 676, 0, 0, 0, 0, 0, 0, 0,
	712, 721, 756, 705, 307, 0, 0, 0, 699, 251,
	687, 0, 0, 0, 0, 0, 0, 1512, 0, 672,
	0, 731, 0, 0, 0, 653, 646, 0, 0, 710,
	0, 0, 0, 658, 637, 673, 758, 0, 635, 222,
	0, 763, 781, 707, 192, 314, 785, 704, 703, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	755, 0, 686, 636, 767, 669, 682, 159, 678, 261,
	0, 306, 691, 728, 260, 204, 299, 751, 786, 305,
	695, 770, 312, 316, 677, 718, 656, 280, 167, 0,
	0, 688, 250, 162, 197, 706, 745, 670, 156, 753,
	732, 769, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 700, 692, 0, 0, 310,
	702, 270, 269, 696, 187, 761, 735, 642, 257, 748,
	193, 132, 0, 319, 143, 199, 293, 634, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 683, 750, 760, 255, 272, 295, 145, 286, 679,
	680, 685, 757, 263, 768, 779, 792, 210, 169, 172,
	181, 188, 742, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 643, 0,
	284, 0, 0, 147, 665, 0, 294, 694, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 663, 664, 661, 0,
	662, 723, 724, 795, 796, 797, 759, 655, 0, 776,
	777, 0, 0, 0, 0, 0, 765, 783, 784, 747,
	805, 698, 660, 644, 647, 648, 649, 657, 714, 715,
	727, 730, 773, 772, 771, 774, 778, 801, 800, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 131, 137, 202, 806, 256, 175, 309, 639,
	164, 0, 716, 719, 729, 754, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 752, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 780, 0, 738, 749, 788, 764,
	291, 709, 791, 667, 693, 804, 697, 701, 744, 650,
	722, 236, 689, 651, 0, 671, 640, 681, 641, 668,
	711, 166, 666, 766, 725, 790, 0, 739, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 789, 717, 0,
	798, 203, 0, 734, 799, 283, 221, 0, 0, 713,
	775, 720, 762, 708, 746, 659, 733, 793, 690, 741,
	794, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 737, 787, 684, 740,
	743, 638, 736, 0, 645, 652, 803, 782, 674, 675,
	676, 0, 0, 0, 0, 0, 0, 0, 712, 721,
	756, 705, 307, 0, 0, 0, 699, 251, 687, 0,
	0, 0, 0, 0, 0, 1372, 0, 672, 0, 731,
	0, 0, 0, 653, 646, 0, 0, 710, 0, 0,
	0, 658, 637, 673, 758, 0, 635, 222, 0, 763,
	781, 707, 192, 314, 785, 704, 703, 0, 0, 0,
	0, 201, 0, 128, 0, 0, 0, 233, 755, 0,
	686, 636, 767, 669, 682, 159, 678, 261, 0, 306,
	691, 728, 260, 204, 299, 751, 786, 305, 695, 770,
	312, 316, 677, 718, 656, 280, 167, 0, 0, 688,
	250, 162, 197, 706, 745, 670, 156, 753, 732, 769,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 700, 692, 0, 0, 310, 702, 270,
	269, 696, 187, 761, 735, 642, 257, 748, 193, 132,
	0, 319, 143, 199, 293, 634, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 683,
	750, 760, 255, 272, 295, 145, 286, 679, 680, 685,
	757, 263, 768, 779, 792, 210, 169, 172, 181, 188,
	742, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 643, 0, 284, 0,
	0, 147, 665, 0, 294, 694, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 663, 664, 661, 0, 662, 723,
	724, 795, 796, 797, 759, 655, 0, 776, 777, 0,
	0, 0, 0, 0, 765, 783, 784, 747, 805, 698,
	660, 644, 647, 648, 649, 657, 714, 715, 727, 730,
	773, 772, 771, 774, 778, 801, 800, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	131, 137, 202, 806, 256, 175, 309, 639, 164, 0,
	716, 719, 729, 754, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 752, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 780, 0, 738, 749, 788, 764, 291, 709,
	791, 667, 693, 804, 697, 701, 744, 650, 722, 236,
	689, 651, 0, 671, 640, 681, 641, 668, 711, 166,
	666, 766, 725, 790, 0, 739, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 789, 717, 0, 798, 203,
	0, 734, 799, 283, 221, 0, 0, 713, 775, 720,
	762, 708, 746, 659, 733, 793, 690, 741, 794, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 737, 787, 684, 740, 743, 638,
	736, 0, 645, 652, 803, 782, 674, 675, 676, 0,
	0, 0, 0, 0, 0, 0, 712, 721, 756, 705,
	307, 0, 0, 0, 699, 251, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 731, 0, 0,
	0, 653, 646, 0, 0, 710, 0, 0, 0, 658,
	637, 673, 758, 0, 635, 222, 0, 763, 781, 707,
	192, 314, 785, 704, 703, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 755, 0, 686, 636,
	767, 669, 682, 159, 678, 261, 0, 306, 691, 728,
	260, 204, 299, 751, 786, 305, 695, 770, 312, 316,
	677, 718, 656, 280, 167, 0, 0, 688, 250, 162,
	197, 706, 745, 670, 156, 753, 732, 769, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 700, 692, 0, 0, 310, 702, 270, 269, 696,
	187, 761, 735, 642, 257, 748, 193, 132, 0, 319,
	143, 199, 293, 634, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 683, 750, 760,
	255, 272, 295, 145, 286, 679, 680, 685, 757, 263,
	768, 779, 792, 210, 169, 172, 181, 188, 742, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 643, 0, 284, 0, 0, 147,
	665, 0, 294, 694, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 663, 664, 661, 0, 662, 723, 724, 795,
	796, 797, 759, 655, 0, 776, 777, 0, 0, 0,
	0, 0, 765, 783, 784, 747, 805, 698, 660, 644,
	647, 648, 649, 657, 714, 715, 727, 730, 773, 772,
	771, 774, 778, 801, 800, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 131, 137,
	202, 806, 256, 175, 309, 639, 164, 0, 716, 719,
	729, 754, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 752, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	780, 0, 738, 749, 788, 764, 291, 709, 791, 667,
	693, 804, 697, 701, 744, 650, 722, 236, 689, 651,
	0, 671, 640, 681, 641, 668, 711, 166, 666, 766,
	725, 790, 0, 739, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 789, 717, 0, 798, 203, 0, 734,
	799, 283, 221, 0, 0, 713, 775, 720, 762, 708,
	746, 659, 733, 793, 690, 741, 794, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	654, 0, 737, 787, 684, 740, 743, 638, 736, 0,
	645, 652, 803, 782, 674, 675, 676, 0, 0, 0,
	0, 0, 0, 0, 712, 721, 756, 705, 307, 0,
	0, 0, 699, 251, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 731, 0, 0, 0, 653,
	646, 0, 0, 710, 0, 0, 0, 658, 637, 673,
	758, 0, 635, 222, 0, 763, 781, 707, 192, 314,
	785, 704, 703, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 755, 0, 686, 636, 767, 669,
	682, 159, 678, 261, 0, 306, 691, 728, 260, 204,
	299, 751, 786, 305, 695, 770, 312, 316, 677, 718,
	656, 280, 167, 0, 0, 688, 250, 162, 197, 706,
	745, 670, 156, 753, 732, 769, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 700,
	692, 0, 0, 310, 702, 270, 269, 696, 187, 761,
	735, 642, 257, 748, 193, 132, 0, 319, 143, 199,
	293, 634, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 683, 750, 760, 255, 272,
	295, 145, 286, 679, 680, 685, 757, 263, 768, 779,
	792, 210, 169, 172, 181, 188, 742, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 643, 0, 284, 0, 0, 147, 665, 0,
	294, 694, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	663, 664, 661, 0, 662, 723, 724, 795, 796, 797,
	759, 655, 0, 776, 777, 0, 0, 0, 0, 0,
	765, 783, 784, 747, 805, 698, 660, 644, 647, 648,
	649, 657, 714, 715, 727, 730, 773, 772, 771, 774,
	778, 801, 800, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 131, 137, 202, 806,
	256, 175, 309, 639, 164, 0, 716, 719, 729, 754,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 752, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 780, 0,
	738, 749, 788, 764, 291, 709, 791, 667, 693, 804,
	697, 701, 744, 650, 722, 236, 689, 651, 0, 671,
	640, 681, 641, 668, 711, 166, 666, 766, 725, 790,
	0, 739, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 789, 717, 0, 798, 203, 0, 734, 799, 283,
	221, 0, 0, 713, 775, 720, 762, 708, 746, 659,
	733, 793, 690, 741, 794, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	737, 787, 684, 740, 743, 638, 736, 0, 645, 652,
	803, 782, 674, 675, 676, 0, 0, 0, 0, 0,
	0, 0, 712, 721, 756, 705, 307, 0, 0, 0,
	699, 251, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 731, 0, 0, 0, 653, 646, 0,
	0, 710, 0, 0, 0, 658, 637, 673, 758, 0,
	635, 222, 0, 763, 781, 707, 192, 314, 785, 704,
	703, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 755, 0, 686, 636, 767, 669, 682, 159,
	678, 261, 0, 306, 691, 728, 260, 204, 299, 751,
	786, 305, 695, 770, 312, 316, 677, 718, 656, 280,
	167, 0, 0, 688, 250, 162, 197, 706, 745, 670,
	156, 753, 732, 769, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 700, 692, 0,
	0, 310, 702, 270, 269, 696, 187, 761, 735, 642,
	257, 748, 193, 132, 0, 319, 143, 199, 293, 634,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 683, 750, 760, 255, 272, 295, 145,
	286, 679, 680, 685, 757, 263, 768, 779, 792, 210,
	169, 172, 181, 188, 742, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	643, 0, 284, 0, 0, 147, 665, 0, 294, 694,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 663, 664,
	661, 0, 662, 723, 724, 795, 796, 797, 759, 655,
	0, 776, 777, 0, 0, 0, 0, 0, 765, 783,
	784, 747, 805, 698, 660, 644, 647, 648, 649, 657,
	714, 715, 727, 730, 773, 772, 771, 774, 778, 801,
	800, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 131, 137, 202, 806, 256, 175,
	309, 639, 164, 0, 716, 719, 729, 754, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 752,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 780, 291, 738, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 166, 499,
	0, 0, 0, 0, 0, 0, 158, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 203, 0,
	0, 479, 283, 221, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 0, 0, 1522, 0, 81, 0,
	0, 0, 500, 524, 523, 526, 527, 528, 529, 0,
	0, 483, 525, 530, 563, 564, 1523, 0, 0, 497,
	515, 0, 578, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 443, 0, 0, 0, 0,
	512, 513, 0, 0, 0, 0, 591, 0, 514, 0,
	0, 509, 510, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 570, 0, 0, 192,
	314, 0, 0, 589, 0, 0, 0, 0, 201, 0,
	128, 0, 0, 0, 233, 0, 0, 538, 423, 0,
	0, 0, 159, 0, 261, 0, 306, 540, 0, 260,
	204, 299, 0, 0, 305, 0, 470, 312, 316, 436,
	0, 430, 280, 167, 0, 0, 444, 250, 162, 197,
	0, 0, 0, 156, 0, 0, 0, 279, 297, 144,
	292, 220, 226, 153, 155, 154, 139, 274, 296, 149,
	157, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	448, 446, 0, 0, 310, 449, 270, 269, 0, 187,
	0, 457, 424, 257, 461, 193, 132, 0, 319, 143,
	199, 293, 422, 176, 232, 161, 0, 240, 173, 130,
	253, 217, 218, 216, 219, 180, 439, 463, 0, 255,
	272, 295, 145, 286, 437, 438, 440, 467, 263, 469,
	475, 0, 210, 169, 172, 181, 188, 0, 259, 287,
	311, 0, 140, 133, 290, 304, 150, 271, 273, 317,
	0, 135, 0, 0, 0, 194, 195, 0, 0, 134,
	0, 165, 179, 0, 0, 0, 178, 0, 302, 303,
	160, 320, 0, 0, 136, 141, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 171, 183, 248, 207, 249, 184, 224, 223, 225,
	208, 211, 0, 425, 0, 284, 0, 0, 147, 0,
	0, 294, 447, 254, 148, 177, 170, 247, 227, 142,
	186, 282, 198, 205, 0, 318, 239, 262, 151, 308,
	281, 580, 590, 586, 588, 587, 584, 585, 583, 582,
	581, 592, 571, 572, 573, 574, 575, 0, 0, 0,
	577, 0, 557, 558, 0, 0, 0, 433, 531, 532,
	533, 534, 535, 541, 542, 546, 547, 555, 554, 553,
	556, 559, 561, 560, 562, 536, 537, 539, 543, 544,
	545, 548, 549, 552, 550, 551, 576, 131, 137, 202,
	0, 256, 175, 309, 0, 164, 0, 0, 0, 0,
	0, 129, 138, 146, 152, 163, 168, 174, 182, 185,
	189, 190, 191, 196, 209, 212, 213, 214, 215, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 244, 245,
	246, 252, 465, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 289, 300, 301, 313, 315, 36,
	291, 460, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 166, 499, 0, 0, 0, 0, 0, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 203, 0, 0, 479, 283, 221, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 483, 525, 530, 563, 564, 0,
	0, 0, 497, 515, 0, 578, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 443, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 570,
	0, 0, 192, 314, 0, 0, 589, 0, 0, 0,
	0, 201, 0, 128, 0, 0, 0, 233, 0, 0,
	538, 423, 0, 0, 0, 159, 0, 261, 0, 306,
	540, 0, 260, 204, 299, 0, 0, 305, 0, 470,
	312, 316, 436, 0, 430, 280, 167, 0, 0, 444,
	250, 162, 197, 0, 0, 0, 156, 0, 0, 0,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 448, 446, 0, 0, 310, 449, 270,
	269, 0, 187, 0, 457, 424, 257, 461, 193, 132,
	0, 319, 143, 199, 293, 422, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 439,
	463, 0, 255, 272, 295, 145, 286, 437, 438, 440,
	467, 263, 469, 475, 0, 210, 169, 172, 181, 188,
	0, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 425, 0, 284, 0,
	0, 147, 0, 0, 294, 447, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 580, 590, 586, 588, 587, 584,
	585, 583, 582, 581, 592, 571, 572, 573, 574, 575,
	0, 0, 0, 577, 0, 557, 558, 0, 0, 0,
	433, 531, 532, 533, 534, 535, 541, 542, 546, 547,
	555, 554, 553, 556, 559, 561, 560, 562, 536, 537,
	539, 543, 544, 545, 548, 549, 552, 550, 551, 576,
	131, 137, 202, 79, 256, 175, 309, 0, 164, 0,
	0, 0, 0, 0, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 465, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 291, 0, 460, 462, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 166, 499, 0, 0, 0, 0, 0,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 203, 0, 0, 479, 283, 221, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 483, 525, 530, 563,
	564, 0, 0, 0, 497, 515, 0, 578, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	443, 0, 0, 0, 0, 512, 513, 493, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 570, 0, 0, 192, 314, 0, 0, 589, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	0, 0, 538, 423, 0, 0, 0, 159, 0, 261,
	0, 306, 540, 0, 260, 204, 299, 0, 0, 305,
	0, 470, 312, 316, 436, 0, 430, 280, 167, 0,
	0, 444, 250, 162, 197, 0, 0, 0, 156, 0,
	0, 0, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 448, 446, 0, 0, 310,
	449, 270, 269, 0, 187, 0, 457, 424, 257, 461,
	193, 132, 0, 319, 143, 199, 293, 422, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 439, 463, 0, 255, 272, 295, 145, 286, 437,
	438, 440, 467, 263, 469, 475, 0, 210, 169, 172,
	181, 188, 0, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 425, 0,
	284, 0, 0, 147, 0, 0, 294, 447, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 580, 590, 586, 588,
	587, 584, 585, 583, 582, 581, 592, 571, 572, 573,
	574, 575, 0, 0, 0, 577, 0, 557, 558, 0,
	0, 0, 433, 531, 532, 533, 534, 535, 541, 542,
	546, 547, 555, 554, 553, 556, 559, 561, 560, 562,
	536, 537, 539, 543, 544, 545, 548, 549, 552, 550,
	551, 576, 131, 137, 202, 0, 256, 175, 309, 0,
	164, 0, 0, 0, 0, 0, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 465, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 291, 0, 460, 462, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 166, 499, 0, 0, 0,
	0, 0, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 203, 0, 0, 479, 283,
	221, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 980, 0, 500,
	524, 523, 526, 527, 528, 529, 0, 0, 483, 525,
	530, 563, 564, 0, 0, 0, 497, 515, 0, 578,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 251, 443, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 0, 591, 0, 514, 0, 0, 509, 510,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 570, 0, 0, 192, 314, 0, 0,
	589, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 0, 0, 538, 423, 0, 0, 0, 159,
	0, 261, 0, 306, 540, 0, 260, 204, 299, 0,
	0, 305, 0, 470, 312, 316, 436, 0, 430, 280,
	167, 0, 0, 444, 250, 162, 197, 0, 0, 0,
	156, 0, 0, 0, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 448, 446, 0,
	0, 310, 449, 270, 269, 0, 187, 0, 457, 424,
	257, 461, 193, 132, 0, 319, 143, 199, 293, 422,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 439, 463, 0, 255, 272, 295, 145,
	286, 437, 438, 440, 467, 263, 469, 475, 0, 210,
	169, 172, 181, 188, 0, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	425, 0, 284, 0, 0, 147, 0, 0, 294, 447,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 580, 590,
	586, 588, 587, 584, 585, 583, 582, 581, 592, 571,
	572, 573, 574, 575, 0, 0, 0, 577, 0, 557,
	558, 0, 0, 0, 433, 531, 532, 533, 534, 535,
	541, 542, 546, 547, 555, 554, 553, 556, 559, 561,
	560, 562, 536, 537, 539, 543, 544, 545, 548, 549,
	552, 550, 551, 576, 131, 137, 202, 0, 256, 175,
	309, 0, 164, 0, 0, 0, 0, 0, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 465,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 291, 0, 460, 462,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 166, 499, 0,
	0, 0, 0, 0, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 203, 0, 0,
	479, 283, 221, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	483, 525, 530, 563, 564, 0, 0, 0, 497, 515,
	0, 578, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 443, 0, 0, 0, 0, 512,
	513, 1410, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 570, 0, 0, 192, 314,
	0, 0, 589, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 0, 0, 538, 423, 0, 0,
	0, 159, 0, 261, 0, 306, 540, 0, 260, 204,
	299, 0, 0, 305, 0, 470, 312, 316, 436, 0,
	430, 280, 167, 0, 0, 444, 250, 162, 197, 0,
	0, 0, 156, 0, 0, 0, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 448,
	446, 0, 0, 310, 449, 270, 269, 0, 187, 0,
	457, 424, 257, 461, 193, 132, 0, 319, 143, 199,
	293, 422, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 439, 463, 0, 255, 272,
	295, 145, 286, 437, 438, 440, 467, 263, 469, 475,
	0, 210, 169, 172, 181, 188, 0, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 425, 0, 284, 0, 0, 147, 0, 0,
	294, 447, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	580, 590, 586, 588, 587, 584, 585, 583, 582, 581,
	592, 571, 572, 573, 574, 575, 0, 0, 0, 577,
	0, 557, 558, 0, 0, 0, 433, 531, 532, 533,
	534, 535, 541, 542, 546, 547, 555, 554, 553, 556,
	559, 561, 560, 562, 536, 537, 539, 543, 544, 545,
	548, 549, 552, 550, 551, 576, 131, 137, 202, 0,
	256, 175, 309, 0, 164, 0, 0, 0, 0, 0,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 465, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 291, 0,
	460, 462, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 166,
	499, 0, 0, 0, 0, 0, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 203,
	0, 0, 479, 283, 221, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 500, 524, 1457, 526, 527, 528, 529,
	0, 0, 483, 525, 530, 563, 564, 0, 0, 0,
	497, 515, 0, 578, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 443, 0, 0, 0,
	0, 512, 513, 1410, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 570, 0, 0,
	192, 314, 0, 0, 589, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 0, 0, 538, 423,
	0, 0, 0, 159, 0, 261, 0, 306, 540, 0,
	260, 204, 299, 0, 0, 305, 0, 470, 312, 316,
	436, 0, 430, 280, 167, 0, 0, 444, 250, 162,
	197, 0, 0, 0, 156, 0, 0, 0, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 448, 446, 0, 0, 310, 449, 270, 269, 0,
	187, 0, 457, 424, 257, 461, 193, 132, 0, 319,
	143, 199, 293, 422, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 439, 463, 0,
	255, 272, 295, 145, 286, 437, 438, 440, 467, 263,
	469, 475, 0, 210, 169, 172, 181, 188, 0, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 425, 0, 284, 0, 0, 147,
	0, 0, 294, 447, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 580, 590, 586, 588, 587, 584, 585, 583,
	582, 581, 592, 571, 572, 573, 574, 575, 0, 0,
	0, 577, 0, 557, 558, 0, 0, 0, 433, 531,
	532, 533, 534, 535, 541, 542, 546, 547, 555, 554,
	553, 556, 559, 561, 560, 562, 536, 537, 539, 543,
	544, 545, 548, 549, 552, 550, 551, 576, 131, 137,
	202, 0, 256, 175, 309, 0, 164, 0, 0, 0,
	0, 0, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 465, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	291, 0, 460, 462, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 166, 499, 0, 0, 0, 0, 0, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 203, 0, 0, 479, 283, 221, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 500, 524, 1454, 526, 527,
	528, 529, 0, 0, 483, 525, 530, 563, 564, 0,
	0, 0, 497, 515, 0, 578, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 443, 0,
	0, 0, 0, 512, 513, 1410, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 570,
	0, 0, 192, 314, 0, 0, 589, 0, 0, 0,
	0, 201, 0, 128, 0, 0, 0, 233, 0, 0,
	538, 423, 0, 0, 0, 159, 0, 261, 0, 306,
	540, 0, 260, 204, 299, 0, 0, 305, 0, 470,
	312, 316, 436, 0, 430, 280, 167, 0, 0, 444,
	250, 162, 197, 0, 0, 0, 156, 0, 0, 0,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 448, 446, 0, 0, 310, 449, 270,
	269, 0, 187, 0, 457, 424, 257, 461, 193, 132,
	0, 319, 143, 199, 293, 422, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 439,
	463, 0, 255, 272, 295, 145, 286, 437, 438, 440,
	467, 263, 469, 475, 0, 210, 169, 172, 181, 188,
	0, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 425, 0, 284, 0,
	0, 147, 0, 0, 294, 447, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 580, 590, 586, 588, 587, 584,
	585, 583, 582, 581, 592, 571, 572, 573, 574, 575,
	0, 0, 0, 577, 0, 557, 558, 0, 0, 0,
	433, 531, 532, 533, 534, 535, 541, 542, 546, 547,
	555, 554, 553, 556, 559, 561, 560, 562, 536, 537,
	539, 543, 544, 545, 548, 549, 552, 550, 551, 576,
	131, 137, 202, 0, 256, 175, 309, 0, 164, 0,
	0, 0, 0, 0, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 465, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 291, 0, 460, 462, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 166, 499, 0, 0, 0, 0, 0,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 203, 0, 0, 479, 283, 221, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1291, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 483, 525, 530, 563,
	564, 0, 0, 0, 497, 515, 0, 578, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	443, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 570, 0, 0, 192, 314, 0, 0, 589, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	0, 0, 538, 423, 0, 0, 0, 159, 0, 261,
	0, 306, 540, 0, 260, 204, 299, 0, 0, 305,
	0, 470, 312, 316, 436, 0, 430, 280, 167, 0,
	0, 444, 250, 162, 197, 0, 0, 0, 156, 0,
	0, 0, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 448, 446, 0, 0, 310,
	449, 270, 269, 0, 187, 0, 457, 424, 257, 461,
	193, 132, 0, 319, 143, 199, 293, 422, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 439, 463, 0, 255, 272, 295, 145, 286, 437,
	438, 440, 467, 263, 469, 475, 0, 210, 169, 172,
	181, 188, 0, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 425, 0,
	284, 0, 0, 147, 0, 0, 294, 447, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 580, 590, 586, 588,
	587, 584, 585, 583, 582, 581, 592, 571, 572, 573,
	574, 575, 0, 0, 0, 577, 0, 557, 558, 0,
	0, 0, 433, 531, 532, 533, 534, 535, 541, 542,
	546, 547, 555, 554, 553, 556, 559, 561, 560, 562,
	536, 537, 539, 543, 544, 545, 548, 549, 552, 550,
	551, 576, 131, 137, 202, 0, 256, 175, 309, 0,
	164, 0, 0, 0, 0, 0, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 465, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 291, 0, 460, 462, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 166, 499, 0, 0, 0,
	0, 0, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 203, 0, 0, 479, 283,
	221, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 500,
	524, 523, 526, 527, 528, 529, 0, 0, 483, 525,
	530, 563, 564, 0, 0, 0, 497, 515, 0, 578,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 251, 443, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 0, 591, 0, 514, 0, 0, 509, 510,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 570, 0, 0, 192, 314, 0, 0,
	589, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 0, 0, 538, 423, 0, 0, 0, 159,
	0, 261, 0, 306, 540, 0, 260, 204, 299, 0,
	0, 305, 0, 470, 312, 316, 436, 0, 430, 280,
	167, 0, 0, 444, 250, 162, 197, 0, 0, 0,
	156, 0, 0, 0, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 448, 446, 0,
	0, 310, 449, 270, 269, 0, 187, 0, 457, 424,
	257, 461, 193, 132, 0, 319, 143, 199, 293, 422,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 439, 463, 0, 255, 272, 295, 145,
	286, 437, 438, 440, 467, 263, 469, 475, 0, 210,
	169, 172, 181, 188, 0, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	425, 0, 284, 0, 0, 147, 0, 0, 294, 447,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 580, 590,
	586, 588, 587, 584, 585, 583, 582, 581, 592, 571,
	572, 573, 574, 575, 0, 0, 0, 577, 0, 557,
	558, 0, 0, 0, 433, 531, 532, 533, 534, 535,
	541, 542, 546, 547, 555, 554, 553, 556, 559, 561,
	560, 562, 536, 537, 539, 543, 544, 545, 548, 549,
	552, 550, 551, 576, 131, 137, 202, 0, 256, 175,
	309, 0, 164, 0, 0, 0, 0, 0, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 465,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 291, 0, 460, 462,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 203, 0, 0,
	479, 283, 221, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	483, 525, 530, 563, 564, 0, 0, 0, 0, 515,
	0, 578, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 443, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 570, 0, 0, 192, 314,
	0, 0, 589, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 0, 0, 538, 423, 0, 0,
	0, 159, 0, 261, 0, 306, 540, 0, 260, 204,
	299, 0, 0, 305, 0, 470, 312, 316, 436, 0,
	430, 280, 167, 0, 0, 444, 250, 162, 197, 0,
	0, 0, 156, 0, 0, 0, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 448,
	446, 0, 0, 310, 449, 270, 269, 0, 187, 0,
	457, 424, 257, 461, 193, 132, 0, 319, 143, 199,
	293, 422, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 439, 463, 0, 255, 272,
	295, 145, 286, 437, 438, 440, 467, 263, 469, 475,
	0, 210, 169, 172, 181, 188, 0, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 425, 0, 284, 0, 0, 147, 0, 0,
	294, 447, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	580, 590, 586, 588, 587, 584, 585, 583, 582, 581,
	592, 571, 572, 573, 574, 575, 1460, 1461, 1462, 577,
	0, 557, 558, 0, 0, 0, 433, 531, 532, 533,
	534, 535, 541, 542, 546, 547, 555, 554, 553, 556,
	559, 561, 560, 562, 536, 537, 539, 543, 544, 545,
	548, 549, 552, 550, 551, 576, 131, 137, 202, 0,
	256, 175, 309, 0, 164, 0, 0, 0, 0, 0,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 465, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 291, 0,
	460, 462, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 203,
	0, 0, 479, 283, 221, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 483, 525, 530, 563, 564, 0, 0, 0,
	0, 515, 0, 578, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 443, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 570, 0, 0,
	192, 314, 0, 0, 589, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 0, 0, 538, 423,
	0, 0, 0, 159, 0, 261, 0, 306, 540, 2752,
	260, 204, 299, 0, 0, 305, 0, 470, 312, 316,
	436, 0, 430, 280, 167, 0, 0, 444, 250, 162,
	197, 0, 0, 0, 156, 0, 0, 0, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 448, 446, 0, 0, 310, 449, 270, 269, 0,
	187, 0, 457, 424, 257, 461, 193, 132, 0, 319,
	143, 199, 293, 422, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 439, 463, 0,
	255, 272, 295, 145, 286, 437, 438, 440, 467, 263,
	469, 475, 0, 210, 169, 172, 181, 188, 0, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 425, 0, 284, 0, 0, 147,
	0, 0, 294, 447, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 580, 590, 586, 588, 587, 584, 585, 583,
	582, 581, 592, 571, 572, 573, 574, 575, 0, 0,
	0, 577, 0, 557, 558, 0, 0, 0, 433, 531,
	532, 533, 534, 535, 541, 542, 546, 547, 555, 554,
	553, 556, 559, 561, 560, 562, 536, 537, 539, 543,
	544, 545, 548, 549, 552, 550, 551, 576, 131, 137,
	202, 0, 256, 175, 309, 0, 164, 0, 0, 0,
	0, 0, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 465, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	291, 0, 460, 462, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	579, 203, 0, 0, 479, 283, 221, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 980, 0, 500, 524, 523, 526, 527,
	528, 529, 0, 0, 483, 525, 530, 563, 564, 0,
	0, 0, 0, 515, 0, 578, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 443, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 570,
	0, 0, 192, 314, 0, 0, 589, 0, 0, 0,
	0, 201, 0, 128, 0, 0, 0, 233, 0, 0,
	538, 423, 0, 0, 0, 159, 0, 261, 0, 306,
	540, 0, 260, 204, 299, 0, 0, 305, 0, 470,
	312, 316, 436, 0, 430, 280, 167, 0, 0, 444,
	250, 162, 197, 0, 0, 0, 156, 0, 0, 0,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 448, 446, 0, 0, 310, 449, 270,
	269, 0, 187, 0, 457, 424, 257, 461, 193, 132,
	0, 319, 143, 199, 293, 422, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 439,
	463, 0, 255, 272, 295, 145, 286, 437, 438, 440,
	467, 263, 469, 475, 0, 210, 169, 172, 181, 188,
	0, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 425, 0, 284, 0,
	0, 147, 0, 0, 294, 447, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 580, 590, 586, 588, 587, 584,
	585, 583, 582, 581, 592, 571, 572, 573, 574, 575,
	0, 0, 0, 577, 0, 557, 558, 0, 0, 0,
	433, 531, 532, 533, 534, 535, 541, 542, 546, 547,
	555, 554, 553, 556, 559, 561, 560, 562, 536, 537,
	539, 543, 544, 545, 548, 549, 552, 550, 551, 576,
	131, 137, 202, 0, 256, 175, 309, 0, 164, 0,
	0, 0, 0, 0, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 465, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 291, 0, 460, 462, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 203, 0, 0, 479, 283, 221, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 483, 525, 530, 563,
	564, 0, 0, 0, 0, 515, 0, 578, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	443, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 570, 0, 0, 192, 314, 0, 0, 589, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	0, 0, 538, 423, 0, 0, 0, 159, 0, 261,
	0, 306, 540, 0, 260, 204, 299, 0, 0, 305,
	0, 470, 312, 316, 436, 0, 430, 280, 167, 0,
	0, 444, 250, 162, 197, 0, 0, 0, 156, 0,
	0, 0, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 448, 446, 0, 0, 310,
	449, 270, 269, 0, 187, 0, 457, 424, 257, 461,
	193, 132, 0, 319, 143, 199, 293, 422, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 439, 463, 0, 255, 272, 295, 145, 286, 437,
	438, 440, 467, 263, 469, 475, 0, 210, 169, 172,
	181, 188, 0, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 425, 0,
	284, 0, 0, 147, 0, 0, 294, 447, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 580, 590, 586, 588,
	587, 584, 585, 583, 582, 581, 592, 571, 572, 573,
	574, 575, 0, 0, 0, 577, 0, 557, 558, 0,
	0, 0, 433, 531, 532, 533, 534, 535, 541, 542,
	546, 547, 555, 554, 553, 556, 559, 561, 560, 562,
	536, 537, 539, 543, 544, 545, 548, 549, 552, 550,
	551, 576, 131, 137, 202, 0, 256, 175, 309, 0,
	164, 0, 0, 0, 0, 0, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 465, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 291, 0, 460, 462, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	1500, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 479, 283,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 1504, 0, 0, 0, 0, 0, 0, 126,
	0, 421, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 1498, 0, 0,
	0, 251, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 192, 314, 0, 1503,
	0, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 0, 0, 441, 423, 0, 0, 0, 159,
	0, 261, 0, 306, 445, 0, 260, 204, 299, 0,
	0, 305, 0, 470, 312, 316, 436, 0, 430, 280,
	167, 0, 0, 444, 250, 162, 197, 0, 0, 0,
	156, 0, 0, 0, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 448, 446, 0,
	0, 310, 449, 270, 269, 0, 187, 0, 457, 424,
	257, 461, 193, 132, 0, 319, 143, 199, 293, 422,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 439, 463, 0, 255, 272, 295, 145,
	286, 437, 438, 440, 467, 263, 469, 475, 0, 210,
	169, 172, 181, 188, 0, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	425, 0, 284, 0, 0, 147, 0, 0, 294, 447,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	477, 0, 0, 0, 433, 426, 427, 428, 429, 431,
	450, 451, 455, 456, 473, 472, 471, 474, 478, 481,
	480, 482, 432, 434, 442, 452, 453, 454, 458, 459,
	468, 464, 466, 0, 131, 137, 202, 0, 256, 175,
	309, 0, 164, 0, 0, 0, 0, 0, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 465,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 291, 0, 460, 462,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	479, 283, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 1504, 0, 0, 0, 0, 0,
	0, 126, 0, 421, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 192, 314,
	0, 1503, 0, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 0, 0, 441, 423, 0, 0,
	0, 159, 0, 261, 0, 306, 445, 0, 260, 204,
	299, 0, 0, 305, 0, 470, 312, 316, 436, 0,
	430, 280, 167, 0, 0, 444, 250, 162, 197, 0,
	0, 0, 156, 0, 0, 0, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 448,
	446, 0, 0, 310, 449, 270, 269, 0, 187, 0,
	457, 424, 257, 461, 193, 132, 0, 319, 143, 199,
	293, 422, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 439, 463, 0, 255, 272,
	295, 145, 286, 437, 438, 440, 467, 263, 469, 475,
	0, 210, 169, 172, 181, 188, 0, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 425, 0, 284, 0, 0, 147, 0, 0,
	294, 447, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 0, 0, 0, 433, 426, 427, 428,
	429, 431, 450, 451, 455, 456, 473, 472, 471, 474,
	478, 481, 480, 482, 432, 434, 442, 452, 453, 454,
	458, 459, 468, 464, 466, 0, 131, 137, 202, 0,
	256, 175, 309, 0, 164, 0, 0, 0, 0, 0,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 465, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 291, 0,
	460, 462, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 479, 283, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1003, 0, 1006, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 0, 999, 998,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	192, 314, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 0, 0, 441, 423,
	0, 0, 0, 159, 0, 261, 0, 306, 445, 0,
	260, 204, 299, 0, 0, 305, 0, 470, 312, 316,
	436, 0, 430, 280, 167, 0, 0, 444, 250, 162,
	197, 0, 0, 0, 156, 0, 0, 0, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 448, 446, 0, 0, 310, 449, 270, 269, 0,
	187, 0, 457, 424, 257, 461, 193, 132, 0, 319,
	143, 199, 293, 422, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 439, 463, 0,
	255, 272, 295, 145, 286, 437, 438, 440, 467, 263,
	469, 475, 0, 210, 169, 172, 181, 188, 0, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 425, 0, 284, 0, 0, 147,
	0, 0, 294, 447, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 477, 0, 0, 0, 433, 426,
	427, 428, 429, 431, 450, 451, 455, 456, 473, 472,
	471, 474, 478, 481, 480, 482, 432, 434, 442, 452,
	453, 454, 458, 459, 468, 464, 466, 0, 131, 137,
	202, 0, 256, 175, 309, 0, 164, 0, 0, 0,
	0, 0, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 465, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	291, 0, 460, 462, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 479, 283, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 421, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 192, 314, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 128, 0, 0, 0, 233, 0, 0,
	441, 423, 0, 0, 0, 159, 0, 261, 0, 306,
	445, 0, 260, 204, 299, 0, 0, 305, 0, 470,
	312, 316, 436, 0, 430, 280, 167, 0, 0, 444,
	250, 162, 197, 0, 0, 0, 156, 0, 0, 0,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 448, 446, 0, 0, 310, 449, 270,
	269, 0, 187, 0, 457, 424, 257, 461, 193, 132,
	0, 319, 143, 199, 293, 422, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 439,
	463, 0, 255, 272, 295, 145, 286, 437, 438, 440,
	467, 263, 469, 475, 0, 210, 169, 172, 181, 188,
	0, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 425, 0, 284, 0,
	0, 147, 0, 0, 294, 447, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 477, 0, 0, 0,
	433, 426, 427, 428, 429, 431, 450, 451, 455, 456,
	473, 472, 471, 474, 478, 481, 480, 482, 432, 434,
	442, 452, 453, 454, 458, 459, 468, 464, 466, 0,
	131, 137, 202, 0, 256, 175, 309, 0, 164, 0,
	0, 0, 0, 416, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 465, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 291, 0, 460, 462, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 1797,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 479, 283, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 421,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 192, 314, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	0, 0, 441, 423, 0, 0, 0, 159, 0, 261,
	0, 306, 445, 0, 260, 204, 299, 0, 0, 305,
	0, 470, 312, 316, 436, 0, 430, 280, 167, 0,
	0, 444, 250, 162, 197, 0, 0, 0, 156, 0,
	0, 0, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 448, 446, 0, 0, 310,
	449, 270, 269, 0, 187, 0, 457, 424, 257, 461,
	193, 132, 0, 319, 143, 199, 293, 422, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 439, 463, 0, 255, 272, 295, 145, 286, 437,
	438, 440, 467, 263, 469, 475, 0, 210, 169, 172,
	181, 188, 0, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 425, 0,
	284, 0, 0, 147, 0, 0, 294, 447, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 477, 0,
	0, 0, 433, 426, 427, 428, 429, 431, 450, 451,
	455, 456, 473, 472, 471, 474, 478, 481, 480, 482,
	432, 434, 442, 452, 453, 454, 458, 459, 468, 464,
	466, 0, 131, 137, 202, 0, 256, 175, 309, 0,
	164, 0, 0, 0, 0, 0, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 465, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 291, 0, 460, 462, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 479, 283,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 421, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 251, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 192, 314, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 128, 0, 0,
	0, 233, 0, 0, 441, 423, 0, 0, 0, 159,
	0, 261, 0, 306, 445, 0, 260, 204, 299, 0,
	0, 305, 0, 470, 312, 316, 436, 0, 430, 280,
	167, 0, 0, 444, 250, 162, 197, 0, 0, 0,
	156, 0, 0, 0, 279, 297, 144, 292, 220, 226,
	153, 155, 154, 139, 274, 296, 149, 157, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 448, 446, 0,
	0, 310, 449, 270, 269, 0, 187, 0, 457, 424,
	257, 461, 193, 132, 0, 319, 143, 199, 293, 422,
	176, 232, 161, 0, 240, 173, 130, 253, 217, 218,
	216, 219, 180, 439, 463, 0, 255, 272, 295, 145,
	286, 437, 438, 440, 467, 263, 469, 475, 0, 210,
	169, 172, 181, 188, 0, 259, 287, 311, 0, 140,
	133, 290, 304, 150, 271, 273, 317, 0, 135, 0,
	0, 0, 194, 195, 0, 0, 134, 0, 165, 179,
	0, 0, 0, 178, 0, 302, 303, 160, 320, 0,
	0, 136, 141, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 171, 183,
	248, 207, 249, 184, 224, 223, 225, 208, 211, 0,
	425, 0, 284, 0, 0, 147, 0, 0, 294, 447,
	254, 148, 177, 170, 247, 227, 142, 186, 282, 198,
	205, 0, 318, 239, 262, 151, 308, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	477, 0, 0, 0, 433, 426, 427, 428, 429, 431,
	450, 451, 455, 456, 473, 472, 471, 474, 478, 481,
	480, 482, 432, 434, 442, 452, 453, 454, 458, 459,
	468, 464, 466, 0, 131, 137, 202, 0, 256, 175,
	309, 0, 164, 0, 0, 0, 0, 0, 129, 138,
	146, 152, 163, 168, 174, 182, 185, 189, 190, 191,
	196, 209, 212, 213, 214, 215, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 244, 245, 246, 252, 465,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 289, 300, 301, 313, 315, 291, 0, 460, 462,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	479, 283, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1003, 0, 1006, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 192, 314,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 128,
	0, 0, 0, 233, 0, 0, 441, 423, 0, 0,
	0, 159, 0, 261, 0, 306, 445, 0, 260, 204,
	299, 0, 0, 305, 0, 470, 312, 316, 436, 0,
	430, 280, 167, 0, 0, 444, 250, 162, 197, 0,
	0, 0, 156, 0, 0, 0, 279, 297, 144, 292,
	220, 226, 153, 155, 154, 139, 274, 296, 149, 157,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 448,
	446, 0, 0, 310, 449, 270, 269, 0, 187, 0,
	457, 424, 257, 461, 193, 132, 0, 319, 143, 199,
	293, 422, 176, 232, 161, 0, 240, 173, 130, 253,
	217, 218, 216, 219, 180, 439, 463, 0, 255, 272,
	295, 145, 286, 437, 438, 440, 467, 263, 469, 475,
	0, 210, 169, 172, 181, 188, 0, 259, 287, 311,
	0, 140, 133, 290, 304, 150, 271, 273, 317, 0,
	135, 0, 0, 0, 194, 195, 0, 0, 134, 0,
	165, 179, 0, 0, 0, 178, 0, 302, 303, 160,
	320, 0, 0, 136, 141, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	171, 183, 248, 207, 249, 184, 224, 223, 225, 208,
	211, 0, 425, 0, 284, 0, 0, 147, 0, 0,
	294, 447, 254, 148, 177, 170, 247, 227, 142, 186,
	282, 198, 205, 0, 318, 239, 262, 151, 308, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 477, 0, 0, 0, 433, 426, 427, 428,
	429, 431, 450, 451, 455, 456, 473, 472, 471, 474,
	478, 481, 480, 482, 432, 434, 442, 452, 453, 454,
	458, 459, 468, 464, 466, 0, 131, 137, 202, 0,
	256, 175, 309, 0, 164, 0, 0, 0, 0, 0,
	129, 138, 146, 152, 163, 168, 174, 182, 185, 189,
	190, 191, 196, 209, 212, 213, 214, 215, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 244, 245, 246,
	252, 465, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 289, 300, 301, 313, 315, 291, 0,
	460, 462, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 479, 283, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	192, 314, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 0, 0, 441, 423,
	0, 0, 0, 159, 0, 261, 0, 306, 445, 0,
	260, 204, 299, 0, 0, 305, 0, 470, 312, 316,
	436, 0, 430, 280, 167, 0, 0, 444, 250, 162,
	197, 0, 0, 0, 156, 0, 0, 0, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 448, 446, 0, 0, 310, 449, 270, 269, 0,
	187, 0, 457, 424, 257, 461, 193, 132, 0, 319,
	143, 199, 293, 422, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 439, 463, 0,
	255, 272, 295, 145, 286, 437, 438, 440, 467, 263,
	469, 475, 0, 210, 169, 172, 181, 188, 0, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 425, 0, 284, 0, 0, 147,
	0, 0, 294, 447, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 477, 0, 0, 0, 433, 426,
	427, 428, 429, 431, 450, 451, 455, 456, 473, 472,
	471, 474, 478, 481, 480, 482, 432, 434, 442, 452,
	453, 454, 458, 459, 468, 464, 466, 0, 131, 137,
	202, 0, 256, 175, 309, 0, 164, 0, 0, 0,
	0, 0, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 465, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	0, 0, 460, 462, 390, 291, 384, 395, 378, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 401,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 385,
	0, 0, 0, 0, 158, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 376, 379, 0,
	0, 0, 222, 0, 0, 0, 383, 192, 314, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 128, 0,
	0, 0, 233, 387, 0, 0, 0, 391, 0, 0,
	159, 0, 261, 0, 306, 0, 0, 260, 204, 299,
	0, 394, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 167, 0, 0, 0, 250, 162, 197, 0, 0,
	0, 156, 0, 0, 0, 279, 297, 144, 292, 220,
	226, 153, 155, 154, 139, 274, 296, 149, 157, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 187, 0, 0,
	0, 257, 0, 193, 132, 0, 319, 143, 199, 293,
	0, 176, 232, 161, 0, 240, 173, 130, 253, 217,
	218, 216, 219, 180, 0, 0, 0, 404, 272, 295,
	145, 286, 380, 381, 382, 388, 389, 392, 393, 396,
	210, 169, 172, 181, 188, 0, 259, 287, 311, 0,
	140, 133, 290, 304, 150, 271, 273, 317, 0, 135,
	0, 0, 0, 194, 195, 0, 0, 134, 0, 165,
	179, 0, 0, 0, 178, 0, 302, 303, 160, 320,
	0, 0, 136, 141, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 171,
	183, 248, 207, 249, 184, 224, 223, 225, 208, 211,
	0, 0, 0, 284, 0, 0, 147, 0, 0, 294,
	0, 254, 148, 177, 170, 247, 227, 142, 186, 282,
	198, 205, 0, 318, 239, 262, 151, 308, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 137, 202, 0, 256,
	175, 309, 0, 164, 0, 0, 0, 0, 0, 129,
	138, 146, 152, 163, 168, 174, 182, 185, 189, 190,
	191, 196, 209, 212, 213, 214, 215, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 244, 245, 246, 252,
	386, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 289, 300, 301, 313, 315, 390, 291, 384,
	395, 378, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 385, 0, 0, 0, 0, 158, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 283, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	376, 379, 0, 0, 0, 222, 0, 0, 0, 383,
	192, 314, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 128, 0, 0, 0, 233, 387, 0, 0, 0,
	391, 0, 0, 159, 0, 261, 0, 306, 0, 0,
	260, 204, 299, 0, 394, 305, 0, 0, 312, 316,
	0, 0, 0, 280, 167, 0, 0, 0, 250, 162,
	197, 0, 0, 0, 156, 0, 0, 0, 279, 297,
	144, 292, 220, 226, 153, 155, 154, 139, 274, 296,
	149, 157, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 270, 269, 0,
	187, 0, 0, 0, 257, 0, 193, 132, 0, 319,
	143, 199, 293, 0, 176, 232, 161, 0, 240, 173,
	130, 253, 217, 218, 216, 219, 180, 0, 0, 0,
	373, 272, 295, 145, 286, 380, 381, 382, 388, 389,
	392, 393, 396, 210, 169, 172, 181, 188, 0, 259,
	287, 311, 0, 140, 133, 290, 304, 150, 271, 273,
	317, 0, 135, 0, 0, 0, 194, 195, 0, 0,
	134, 0, 165, 179, 0, 0, 0, 178, 0, 302,
	303, 160, 320, 0, 0, 136, 141, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 171, 183, 248, 207, 249, 184, 224, 223,
	225, 208, 211, 0, 0, 0, 284, 0, 0, 147,
	0, 0, 294, 0, 254, 148, 177, 170, 247, 227,
	142, 186, 282, 198, 205, 0, 318, 239, 262, 151,
	308, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 137,
	202, 0, 256, 175, 309, 0, 164, 0, 0, 0,
	0, 0, 129, 138, 146, 152, 163, 168, 174, 182,
	185, 189, 190, 191, 196, 209, 212, 213, 214, 215,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 244,
	245, 246, 252, 386, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 289, 300, 301, 313, 315,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 283, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 0, 1016,
	1015, 1025, 1026, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1017, 0, 0, 1027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 192, 314, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 128, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 261, 0, 306,
	0, 0, 260, 204, 299, 0, 0, 305, 0, 0,
	312, 316, 0, 0, 0, 280, 167, 0, 0, 0,
	250, 162, 197, 0, 0, 0, 156, 0, 0, 0,
	279, 297, 144, 292, 220, 226, 153, 155, 154, 139,
	274, 296, 149, 157, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 270,
	269, 0, 187, 0, 0, 0, 257, 0, 193, 132,
	0, 319, 143, 199, 293, 0, 176, 232, 161, 0,
	240, 173, 130, 253, 217, 218, 216, 219, 180, 0,
	0, 0, 255, 272, 295, 145, 286, 0, 0, 0,
	0, 263, 0, 0, 0, 210, 169, 172, 181, 188,
	0, 259, 287, 311, 0, 140, 133, 290, 304, 150,
	271, 273, 317, 0, 135, 0, 0, 0, 194, 195,
	0, 0, 134, 0, 165, 179, 0, 0, 0, 178,
	0, 302, 303, 160, 320, 0, 0, 136, 141, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 171, 183, 248, 207, 249, 184,
	224, 223, 225, 208, 211, 0, 0, 0, 284, 0,
	0, 147, 0, 0, 294, 0, 254, 148, 177, 170,
	247, 227, 142, 186, 282, 198, 205, 0, 318, 239,
	262, 151, 308, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 137, 202, 0, 256, 175, 309, 0, 164, 0,
	0, 0, 0, 0, 129, 138, 146, 152, 163, 168,
	174, 182, 185, 189, 190, 191, 196, 209, 212, 213,
	214, 215, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 244, 245, 246, 252, 0, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 289, 300, 301,
	313, 315, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 2677, 0, 0, 0,
	0, 0, 0, 166, 2675, 0, 0, 0, 0, 0,
	0, 158, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 283, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 192, 314, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 128, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 261,
	0, 306, 0, 0, 260, 204, 299, 0, 0, 305,
	0, 0, 312, 316, 0, 0, 0, 280, 167, 0,
	0, 0, 250, 162, 197, 0, 0, 0, 156, 0,
	0, 0, 279, 297, 144, 292, 220, 226, 153, 155,
	154, 139, 274, 296, 149, 157, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 270, 269, 0, 187, 0, 2676, 0, 257, 0,
	193, 132, 0, 319, 143, 199, 293, 0, 176, 232,
	161, 0, 240, 173, 130, 253, 217, 218, 216, 219,
	180, 0, 0, 0, 255, 272, 295, 145, 286, 0,
	0, 0, 0, 263, 0, 0, 0, 210, 169, 172,
	181, 188, 0, 259, 287, 311, 0, 140, 133, 290,
	304, 150, 271, 273, 317, 0, 135, 0, 0, 0,
	194, 195, 0, 0, 134, 0, 165, 179, 0, 0,
	0, 178, 0, 302, 303, 160, 320, 0, 0, 136,
	141, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 171, 183, 248, 207,
	249, 184, 224, 223, 225, 208, 211, 0, 0, 0,
	284, 0, 0, 147, 0, 0, 294, 0, 254, 148,
	177, 170, 247, 227, 142, 186, 282, 198, 205, 0,
	318, 239, 262, 151, 308, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 137, 202, 0, 256, 175, 309, 0,
	164, 0, 0, 0, 0, 0, 129, 138, 146, 152,
	163, 168, 174, 182, 185, 189, 190, 191, 196, 209,
	212, 213, 214, 215, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 244, 245, 246, 252, 0, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 289,
	300, 301, 313, 315, 36, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 203, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 192, 314, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 261, 0, 306, 0, 0, 260, 204, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 167, 0, 0, 0, 250, 162, 197, 0, 0,
	0, 156, 0, 0, 0, 279, 297, 144, 292, 220,
	226, 153, 155, 154, 139, 274, 296, 149, 157, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 187, 0, 0,
	0, 257, 0, 193, 132, 0, 319, 143, 199, 293,
	0, 176, 232, 161, 0, 240, 173, 130, 253, 217,
	218, 216, 219, 180, 0, 0, 0, 255, 272, 295,
	145, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 169, 172, 181, 188, 0, 259, 287, 311, 0,
	140, 133, 290, 304, 150, 271, 273, 317, 0, 135,
	0, 0, 0, 194, 195, 0, 0, 134, 0, 165,
	179, 0, 0, 0, 178, 0, 302, 303, 160, 320,
	0, 0, 136, 141, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 171,
	183, 248, 207, 249, 184, 224, 223, 225, 208, 211,
	0, 0, 0, 284, 0, 0, 147, 0, 0, 294,
	0, 254, 148, 177, 170, 247, 227, 142, 186, 282,
	198, 205, 0, 318, 239, 262, 151, 308, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 137, 202, 79, 256,
	175, 309, 0, 164, 0, 0, 0, 0, 0, 129,
	138, 146, 152, 163, 168, 174, 182, 185, 189, 190,
	191, 196, 209, 212, 213, 214, 215, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 244, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 289, 300, 301, 313, 315, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 192,
	314, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 261, 0, 306, 0, 0, 260,
	204, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 167, 0, 0, 0, 250, 162, 197,
	0, 0, 0, 156, 0, 0, 0, 279, 297, 144,
	292, 220, 226, 153, 155, 154, 139, 274, 296, 149,
	157, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 187,
	0, 0, 0, 257, 0, 193, 132, 0, 319, 143,
	199, 293, 0, 176, 232, 161, 0, 240, 173, 130,
	253, 217, 218, 216, 219, 180, 0, 0, 0, 255,
	272, 295, 145, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 169, 172, 181, 188, 0, 259, 287,
	311, 0, 140, 133, 290, 304, 150, 271, 273, 317,
	0, 135, 0, 0, 0, 194, 195, 0, 0, 134,
	0, 165, 179, 0, 0, 0, 178, 0, 302, 303,
	160, 320, 0, 0, 136, 141, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 171, 183, 248, 207, 249, 184, 224, 223, 225,
	208, 211, 0, 0, 0, 284, 0, 0, 147, 0,
	0, 294, 0, 254, 148, 177, 170, 247, 227, 142,
	186, 282, 198, 205, 0, 318, 239, 262, 151, 308,
	281, 0, 0, 0, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 137, 202,
	0, 256, 175, 309, 0, 164, 0, 0, 0, 0,
	0, 129, 138, 146, 152, 163, 168, 174, 182, 185,
	189, 190, 191, 196, 209, 212, 213, 214, 215, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 244, 245,
	246, 252, 0, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 289, 300, 301, 313, 315, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 1152, 0, 0, 0, 0, 0, 0, 158, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 1151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 192, 314, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 128, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 261, 0, 306, 0,
	0, 260, 204, 299, 0, 0, 305, 0, 0, 312,
	316, 0, 0, 0, 280, 167, 0, 0, 0, 250,
	162, 197, 0, 0, 0, 156, 0, 0, 0, 279,
	297, 144, 292, 220, 226, 153, 155, 154, 139, 274,
	296, 149, 157, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 270, 269,
	0, 187, 0, 0, 0, 257, 0, 193, 132, 0,
	319, 143, 199, 293, 0, 176, 232, 161, 0, 240,
	173, 130, 253, 217, 218, 216, 219, 180, 0, 0,
	0, 255, 272, 295, 145, 286, 0, 0, 0, 0,
	263, 0, 0, 0, 210, 169, 172, 181, 188, 0,
	259, 287, 311, 0, 140, 133, 290, 304, 150, 271,
	273, 317, 0, 135, 0, 0, 0, 194, 195, 0,
	0, 134, 0, 165, 179, 0, 0, 0, 178, 0,
	302, 303, 160, 320, 0, 0, 136, 141, 0, 229,
	0, 228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 171, 183, 248, 207, 249, 184, 224,
	223, 225, 208, 211, 0, 0, 0, 284, 0, 0,
	147, 0, 0, 294, 0, 254, 148, 177, 170, 247,
	227, 142, 186, 282, 198, 205, 0, 318, 239, 262,
	151, 308, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	137, 202, 0, 256, 175, 309, 0, 164, 0, 0,
	0, 0, 0, 129, 138, 146, 152, 163, 168, 174,
	182, 185, 189, 190, 191, 196, 209, 212, 213, 214,
	215, 230, 231, 234, 235, 237, 238, 241, 242, 243,
	244, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 289, 300, 301, 313,
	315, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 283, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 192, 314, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 261, 0,
	306, 0, 0, 260, 204, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 167, 0, 0,
	0, 250, 162, 197, 0, 0, 0, 156, 0, 0,
	0, 279, 297, 144, 292, 220, 226, 153, 155, 154,
	139, 274, 296, 149, 157, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 187, 0, 0, 0, 257, 0, 193,
	132, 0, 319, 143, 199, 293, 0, 176, 232, 161,
	0, 240, 173, 130, 253, 217, 218, 216, 219, 180,
	0, 0, 0, 255, 272, 295, 145, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 169, 172, 181,
	188, 0, 259, 287, 311, 0, 140, 133, 290, 304,
	150, 271, 273, 317, 0, 135, 0, 0, 0, 194,
	195, 0, 0, 134, 0, 165, 179, 0, 0, 0,
	178, 0, 302, 303, 160, 320, 0, 0, 136, 141,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 171, 183, 248, 207, 249,
	184, 224, 223, 225, 208, 211, 0, 0, 0, 284,
	0, 0, 147, 0, 0, 294, 0, 254, 148, 177,
	170, 247, 227, 142, 186, 282, 198, 205, 0, 318,
	239, 262, 151, 308, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 137, 202, 0, 256, 175, 309, 0, 164,
	0, 0, 0, 0, 0, 129, 138, 146, 152, 163,
	168, 174, 182, 185, 189, 190, 191, 196, 209, 212,
	213, 214, 215, 230, 231, 234, 235, 237, 238, 241,
	242, 243, 244, 245, 246, 252, 0, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 289, 300,
	301, 313, 315, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 192, 314, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 128, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	261, 0, 306, 0, 0, 260, 204, 299, 0, 0,
	305, 0, 0, 312, 316, 0, 0, 0, 280, 167,
	0, 0, 0, 250, 162, 197, 0, 0, 0, 156,
	0, 0, 0, 279, 297, 144, 292, 220, 226, 153,
	155, 154, 139, 274, 296, 149, 157, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 187, 0, 0, 0, 257,
	0, 193, 132, 0, 319, 143, 199, 293, 0, 176,
	232, 161, 0, 240, 173, 130, 253, 217, 218, 216,
	219, 180, 0, 0, 0, 255, 272, 295, 145, 286,
	0, 0, 0, 0, 263, 0, 0, 0, 210, 169,
	172, 181, 188, 0, 259, 287, 311, 0, 140, 133,
	290, 304, 150, 271, 273, 317, 0, 135, 0, 0,
	0, 194, 195, 0, 0, 134, 0, 165, 179, 0,
	0, 0, 178, 0, 302, 303, 160, 320, 0, 0,
	136, 141, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 171, 183, 248,
	207, 249, 184, 224, 223, 225, 208, 211, 0, 0,
	0, 284, 0, 0, 147, 0, 0, 294, 0, 254,
	148, 177, 170, 247, 227, 142, 186, 282, 198, 205,
	0, 318, 239, 262, 151, 308, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 137, 202, 0, 256, 175, 309,
	0, 164, 0, 0, 0, 0, 0, 129, 138, 146,
	152, 163, 168, 174, 182, 185, 189, 190, 191, 196,
	209, 212, 213, 214, 215, 230, 231, 234, 235, 237,
	238, 241, 242, 243, 244, 245, 246, 252, 0, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	289, 300, 301, 313, 315, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	2139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 192, 314, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 261, 0, 306, 0, 0, 260, 204, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 167, 0, 0, 0, 250, 162, 197, 0, 0,
	0, 156, 0, 0, 0, 279, 297, 144, 292, 220,
	226, 153, 155, 154, 139, 274, 296, 149, 157, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 187, 0, 0,
	0, 257, 0, 193, 132, 0, 319, 143, 199, 293,
	0, 176, 232, 161, 0, 240, 173, 130, 253, 217,
	218, 216, 219, 180, 0, 0, 0, 255, 272, 295,
	145, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 169, 172, 181, 188, 0, 259, 287, 311, 0,
	140, 133, 290, 304, 150, 271, 273, 317, 0, 135,
	0, 0, 0, 194, 195, 0, 0, 134, 0, 165,
	179, 0, 0, 0, 178, 0, 302, 303, 160, 320,
	0, 0, 136, 141, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 171,
	183, 248, 207, 249, 184, 224, 223, 225, 208, 211,
	0, 0, 0, 284, 0, 0, 147, 0, 0, 294,
	0, 254, 148, 177, 170, 247, 227, 142, 186, 282,
	198, 205, 0, 318, 239, 262, 151, 308, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 137, 202, 0, 256,
	175, 309, 0, 164, 0, 0, 0, 0, 0, 129,
	138, 146, 152, 163, 168, 174, 182, 185, 189, 190,
	191, 196, 209, 212, 213, 214, 215, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 244, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 289, 300, 301, 313, 315, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 192,
	314, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 261, 0, 306, 0, 0, 260,
	204, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 167, 0, 0, 0, 250, 162, 197,
	0, 0, 0, 156, 0, 0, 0, 279, 297, 144,
	292, 220, 226, 153, 155, 154, 139, 274, 296, 149,
	157, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 187,
	0, 0, 0, 257, 0, 193, 132, 0, 319, 143,
	199, 293, 0, 176, 232, 161, 0, 240, 173, 130,
	253, 217, 218, 216, 219, 180, 0, 0, 0, 255,
	272, 295, 145, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 169, 172, 181, 188, 0, 259, 287,
	311, 0, 140, 133, 290, 304, 150, 271, 273, 317,
	0, 135, 0, 0, 0, 194, 195, 0, 0, 134,
	0, 165, 179, 0, 0, 0, 178, 0, 302, 303,
	160, 320, 0, 0, 136, 141, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 171, 183, 248, 207, 249, 184, 224, 223, 225,
	208, 211, 0, 0, 0, 284, 0, 0, 147, 0,
	0, 294, 0, 254, 148, 177, 170, 247, 227, 142,
	186, 282, 198, 205, 0, 318, 239, 262, 151, 308,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 137, 202,
	0, 256, 175, 309, 0, 164, 0, 0, 0, 0,
	0, 129, 138, 146, 152, 163, 168, 174, 182, 185,
	189, 190, 191, 196, 209, 212, 213, 214, 215, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 244, 245,
	246, 252, 0, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 289, 300, 301, 313, 315, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 192, 314, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 128, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 261, 0, 306, 0,
	0, 260, 204, 299, 0, 0, 305, 0, 0, 312,
	316, 0, 0, 0, 280, 167, 0, 0, 0, 250,
	162, 197, 0, 0, 0, 156, 0, 0, 0, 279,
	297, 144, 292, 220, 226, 153, 155, 154, 139, 274,
	296, 149, 157, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 270, 269,
	0, 187, 0, 0, 0, 257, 0, 193, 132, 0,
	319, 143, 199, 293, 0, 176, 232, 161, 0, 240,
	173, 130, 253, 217, 218, 216, 219, 180, 0, 0,
	0, 255, 272, 295, 145, 286, 0, 0, 0, 0,
	263, 0, 0, 0, 210, 169, 172, 181, 188, 0,
	259, 287, 311, 0, 140, 133, 290, 304, 150, 271,
	273, 317, 0, 135, 0, 0, 0, 194, 195, 0,
	0, 134, 0, 165, 179, 0, 0, 0, 178, 0,
	302, 303, 160, 320, 0, 0, 136, 141, 0, 229,
	0, 228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 171, 183, 248, 207, 249, 184, 224,
	223, 225, 208, 211, 0, 0, 0, 284, 0, 0,
	147, 0, 0, 294, 0, 254, 148, 177, 170, 247,
	227, 142, 186, 282, 198, 205, 0, 318, 239, 262,
	151, 308, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	137, 202, 0, 256, 175, 309, 0, 164, 0, 0,
	0, 0, 0, 129, 138, 146, 152, 163, 168, 174,
	182, 185, 189, 190, 191, 196, 209, 212, 213, 214,
	215, 230, 231, 234, 235, 237, 238, 241, 242, 243,
	244, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 289, 300, 301, 313,
	315, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 1121, 166, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 283, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 192, 314, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 261, 0,
	306, 0, 0, 260, 204, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 167, 0, 0,
	0, 250, 162, 197, 0, 0, 0, 156, 0, 0,
	0, 279, 297, 144, 292, 220, 226, 153, 155, 154,
	139, 274, 296, 149, 157, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 187, 0, 0, 0, 257, 0, 193,
	132, 0, 319, 143, 199, 293, 0, 176, 232, 161,
	0, 240, 173, 130, 253, 217, 218, 216, 219, 180,
	0, 0, 0, 255, 272, 295, 145, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 169, 172, 181,
	188, 0, 259, 287, 311, 0, 140, 133, 290, 304,
	150, 271, 273, 317, 0, 135, 0, 0, 0, 194,
	195, 0, 0, 134, 0, 165, 179, 0, 0, 0,
	178, 0, 302, 303, 160, 320, 0, 0, 136, 141,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 171, 183, 248, 207, 249,
	184, 224, 223, 225, 208, 211, 0, 0, 0, 284,
	0, 0, 147, 0, 0, 294, 0, 254, 148, 177,
	170, 247, 227, 142, 186, 282, 198, 205, 0, 318,
	239, 262, 151, 308, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 137, 202, 0, 256, 175, 309, 0, 164,
	0, 0, 0, 0, 0, 129, 138, 146, 152, 163,
	168, 174, 182, 185, 189, 190, 191, 196, 209, 212,
	213, 214, 215, 230, 231, 234, 235, 237, 238, 241,
	242, 243, 244, 245, 246, 252, 0, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 289, 300,
	301, 313, 315, 291, 0, 0, 0, 595, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 192, 314, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 128, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	261, 0, 306, 0, 0, 260, 204, 299, 0, 0,
	305, 0, 0, 312, 316, 0, 0, 0, 280, 167,
	0, 0, 0, 250, 162, 197, 0, 0, 0, 156,
	0, 0, 0, 279, 297, 144, 292, 220, 226, 153,
	155, 154, 139, 274, 296, 149, 157, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 187, 0, 0, 0, 257,
	0, 193, 132, 0, 319, 143, 199, 293, 0, 176,
	232, 161, 0, 240, 173, 130, 253, 217, 218, 216,
	219, 180, 0, 0, 0, 255, 272, 295, 145, 286,
	0, 0, 0, 0, 263, 0, 0, 0, 210, 169,
	172, 181, 188, 0, 259, 287, 311, 0, 140, 133,
	290, 304, 150, 271, 273, 317, 0, 135, 0, 0,
	0, 194, 195, 0, 0, 134, 0, 165, 179, 0,
	0, 0, 178, 0, 302, 303, 160, 320, 0, 0,
	136, 141, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 171, 183, 248,
	207, 249, 184, 224, 223, 225, 208, 211, 0, 0,
	0, 284, 0, 0, 147, 0, 0, 294, 0, 254,
	148, 177, 170, 247, 227, 142, 186, 282, 198, 205,
	0, 318, 239, 262, 151, 308, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 137, 202, 0, 256, 175, 309,
	0, 164, 0, 0, 0, 0, 0, 129, 138, 146,
	152, 163, 168, 174, 182, 185, 189, 190, 191, 196,
	209, 212, 213, 214, 215, 230, 231, 234, 235, 237,
	238, 241, 242, 243, 244, 245, 246, 252, 0, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	289, 300, 301, 313, 315, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 123, 0, 192, 314, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 261, 0, 306, 0, 0, 260, 204, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 167, 0, 0, 0, 250, 162, 197, 0, 0,
	0, 156, 0, 0, 0, 279, 297, 144, 292, 220,
	226, 153, 155, 154, 139, 274, 296, 149, 157, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 187, 0, 0,
	0, 257, 0, 193, 132, 0, 319, 143, 199, 293,
	0, 176, 232, 161, 0, 240, 173, 130, 253, 217,
	218, 216, 219, 180, 0, 0, 0, 255, 272, 295,
	145, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 169, 172, 181, 188, 0, 259, 287, 311, 0,
	140, 133, 290, 304, 150, 271, 273, 317, 0, 135,
	0, 0, 0, 194, 195, 0, 0, 134, 0, 165,
	179, 0, 0, 0, 178, 0, 302, 303, 160, 320,
	0, 0, 136, 141, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 171,
	183, 248, 207, 249, 184, 224, 223, 225, 208, 211,
	0, 0, 0, 284, 0, 0, 147, 0, 0, 294,
	0, 254, 148, 177, 170, 247, 227, 142, 186, 282,
	198, 205, 0, 318, 239, 262, 151, 308, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 137, 202, 0, 256,
	175, 309, 0, 164, 0, 0, 0, 0, 0, 129,
	138, 146, 152, 163, 168, 174, 182, 185, 189, 190,
	191, 196, 209, 212, 213, 214, 215, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 244, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 289, 300, 301, 313, 315, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 192,
	314, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 261, 0, 306, 0, 0, 260,
	204, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 167, 0, 0, 0, 250, 162, 197,
	0, 0, 0, 156, 0, 0, 0, 279, 297, 144,
	292, 220, 226, 153, 155, 154, 139, 274, 296, 149,
	157, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 187,
	0, 0, 0, 257, 0, 193, 132, 0, 319, 143,
	199, 293, 0, 176, 232, 161, 0, 240, 173, 130,
	253, 217, 218, 216, 219, 180, 0, 0, 0, 255,
	272, 295, 145, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 169, 172, 181, 188, 0, 259, 287,
	311, 0, 140, 133, 290, 304, 150, 271, 273, 317,
	0, 135, 0, 0, 0, 194, 195, 0, 0, 134,
	0, 165, 179, 0, 0, 0, 178, 0, 302, 303,
	160, 320, 0, 0, 136, 141, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 171, 183, 248, 207, 249, 184, 224, 223, 225,
	208, 211, 0, 0, 0, 284, 0, 0, 147, 0,
	0, 294, 0, 254, 148, 177, 170, 247, 227, 142,
	186, 282, 198, 205, 0, 318, 239, 262, 151, 308,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 137, 202,
	0, 256, 175, 309, 0, 164, 0, 0, 0, 0,
	0, 129, 138, 146, 152, 163, 168, 174, 182, 185,
	189, 190, 191, 196, 209, 212, 213, 214, 215, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 244, 245,
	246, 252, 0, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 289, 300, 301, 313, 315, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 192, 314, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 128, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 261, 0, 306, 0,
	0, 260, 204, 299, 0, 0, 305, 0, 0, 312,
	316, 0, 0, 0, 280, 167, 0, 0, 0, 250,
	162, 197, 0, 0, 0, 156, 0, 0, 0, 279,
	297, 144, 292, 220, 226, 153, 155, 154, 139, 274,
	296, 149, 157, 0, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 270, 269,
	0, 187, 0, 0, 0, 257, 0, 193, 132, 0,
	319, 143, 199, 293, 0, 176, 232, 161, 0, 240,
	173, 130, 253, 217, 218, 216, 219, 180, 0, 0,
	0, 255, 272, 295, 145, 286, 0, 0, 0, 0,
	263, 0, 0, 0, 210, 169, 172, 181, 188, 0,
	259, 287, 311, 0, 140, 133, 290, 304, 150, 271,
	273, 317, 0, 135, 0, 0, 0, 194, 195, 0,
	0, 134, 0, 165, 179, 0, 0, 0, 178, 0,
	302, 303, 160, 320, 0, 0, 136, 141, 0, 229,
	0, 228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 171, 183, 248, 207, 249, 184, 224,
	223, 225, 208, 211, 0, 0, 0, 284, 0, 0,
	147, 0, 0, 294, 0, 254, 148, 177, 170, 247,
	227, 142, 186, 282, 198, 205, 0, 318, 239, 262,
	151, 308, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	137, 202, 0, 256, 175, 309, 0, 164, 0, 0,
	0, 0, 0, 129, 138, 146, 152, 163, 168, 174,
	182, 185, 189, 190, 191, 196, 209, 212, 213, 214,
	215, 230, 231, 234, 235, 237, 238, 241, 242, 243,
	244, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 289, 300, 301, 313,
	315, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 283, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 192, 314, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 261, 0,
	306, 0, 0, 260, 204, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 167, 0, 0,
	0, 250, 162, 197, 0, 0, 0, 156, 0, 0,
	0, 279, 297, 144, 292, 220, 226, 153, 155, 154,
	139, 274, 296, 149, 157, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 187, 0, 0, 0, 257, 0, 193,
	132, 0, 319, 143, 199, 293, 0, 176, 232, 161,
	0, 240, 173, 130, 253, 217, 218, 216, 219, 180,
	0, 0, 0, 255, 272, 295, 145, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 169, 172, 181,
	188, 0, 259, 287, 311, 0, 140, 133, 290, 304,
	150, 271, 273, 317, 0, 135, 0, 0, 0, 194,
	195, 0, 0, 134, 0, 165, 179, 0, 0, 0,
	178, 0, 302, 303, 160, 320, 0, 0, 136, 141,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 171, 183, 248, 207, 249,
	184, 224, 223, 225, 208, 211, 0, 0, 0, 284,
	0, 0, 147, 0, 0, 294, 0, 254, 148, 177,
	170, 247, 227, 142, 186, 282, 198, 205, 0, 318,
	239, 262, 151, 308, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 137, 202, 0, 256, 175, 309, 0, 164,
	0, 0, 0, 0, 0, 129, 138, 146, 152, 163,
	168, 174, 182, 185, 189, 190, 191, 196, 209, 212,
	213, 214, 215, 230, 231, 234, 235, 237, 238, 241,
	242, 243, 244, 245, 246, 252, 0, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 289, 300,
	301, 313, 315, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 192, 314, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 128, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	261, 0, 306, 0, 0, 260, 204, 299, 0, 0,
	305, 0, 0, 312, 316, 0, 0, 0, 280, 167,
	0, 0, 0, 250, 162, 197, 0, 0, 0, 156,
	0, 0, 0, 279, 297, 144, 292, 220, 226, 153,
	155, 154, 139, 274, 296, 149, 157, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 187, 0, 0, 0, 257,
	0, 193, 132, 0, 319, 143, 199, 293, 0, 176,
	232, 161, 0, 240, 173, 130, 253, 217, 218, 216,
	219, 180, 0, 0, 0, 255, 272, 295, 145, 286,
	0, 0, 0, 0, 263, 0, 0, 0, 210, 169,
	172, 181, 188, 0, 259, 287, 311, 0, 140, 133,
	290, 304, 150, 271, 273, 317, 0, 135, 0, 0,
	0, 194, 195, 0, 0, 134, 0, 165, 179, 0,
	0, 0, 178, 0, 302, 303, 160, 320, 0, 0,
	136, 615, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 171, 183, 248,
	207, 249, 184, 224, 223, 225, 611, 211, 0, 0,
	0, 284, 0, 0, 147, 0, 0, 294, 0, 254,
	148, 177, 170, 247, 616, 614, 605, 606, 198, 205,
	0, 318, 239, 262, 151, 308, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 137, 202, 0, 256, 175, 309,
	0, 164, 0, 0, 0, 0, 0, 129, 138, 146,
	152, 163, 168, 174, 182, 185, 189, 190, 191, 196,
	209, 212, 213, 214, 215, 230, 231, 234, 235, 237,
	238, 241, 242, 243, 244, 612, 613, 252, 0, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	289, 300, 301, 313, 315, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 192, 314, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 261, 0, 306, 0, 0, 260, 204, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 167, 0, 0, 0, 250, 162, 197, 0, 0,
	0, 156, 0, 0, 0, 279, 297, 144, 292, 220,
	226, 153, 155, 154, 139, 274, 296, 149, 157, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 187, 0, 0,
	0, 257, 0, 193, 132, 0, 319, 143, 199, 293,
	0, 176, 232, 161, 0, 240, 173, 130, 253, 217,
	218, 216, 219, 180, 0, 0, 0, 255, 272, 295,
	145, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 169, 172, 181, 188, 0, 259, 287, 311, 0,
	140, 133, 290, 1146, 150, 271, 273, 317, 0, 135,
	0, 0, 0, 194, 195, 0, 0, 134, 0, 165,
	179, 0, 0, 0, 178, 0, 302, 303, 160, 320,
	0, 0, 136, 141, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 171,
	183, 248, 207, 249, 184, 224, 223, 225, 208, 211,
	0, 0, 0, 284, 0, 0, 147, 0, 0, 294,
	0, 254, 148, 177, 170, 247, 227, 142, 186, 282,
	198, 205, 0, 318, 239, 262, 151, 308, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 137, 202, 0, 256,
	175, 309, 0, 164, 0, 0, 0, 0, 0, 129,
	138, 146, 152, 163, 168, 174, 182, 185, 189, 190,
	191, 196, 209, 212, 213, 214, 215, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 244, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 289, 300, 301, 313, 315, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 192,
	314, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 261, 0, 306, 0, 0, 260,
	204, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 167, 0, 0, 0, 250, 162, 197,
	0, 0, 0, 156, 0, 0, 0, 279, 297, 144,
	292, 220, 226, 153, 155, 154, 139, 274, 296, 149,
	157, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 187,
	0, 0, 0, 257, 0, 193, 132, 0, 319, 143,
	199, 293, 0, 176, 232, 161, 0, 240, 173, 130,
	253, 217, 218, 216, 219, 180, 0, 0, 0, 255,
	272, 295, 145, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 169, 172, 181, 188, 0, 259, 287,
	311, 0, 140, 133, 290, 602, 150, 271, 273, 317,
	0, 135, 0, 0, 0, 194, 195, 0, 0, 134,
	0, 165, 179, 0, 0, 0, 178, 0, 302, 303,
	160, 320, 0, 0, 136, 615, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 171, 183, 248, 207, 249, 184, 224, 223, 225,
	611, 211, 0, 0, 0, 284, 0, 0, 147, 0,
	0, 294, 0, 254, 148, 177, 170, 247, 616, 614,
	605, 606, 198, 205, 0, 318, 239, 262, 151, 308,
	281, 0, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2154, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	0, 0, 0, 0, 0, 0, 0, 131, 137, 202,
	0, 256, 175, 309, 0, 164, 0, 443, 0, 0,
	0, 129, 138, 146, 152, 163, 168, 174, 182, 185,
	189, 190, 191, 196, 209, 212, 213, 214, 215, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 244, 612,
	613, 252, 0, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 289, 300, 301, 313, 315, 441,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 0,
	0, 436, 0, 430, 0, 0, 0, 0, 444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 448, 446, 0, 0, 0, 449, 0, 0,
	0, 0, 0, 457, 424, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 0, 439, 463,
	0, 0, 0, 0, 0, 0, 437, 438, 440, 467,
	0, 469, 475, 2163, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 425, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 441, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	436, 0, 430, 0, 476, 477, 0, 444, 0, 433,
	426, 427, 428, 429, 431, 450, 451, 455, 456, 473,
	472, 471, 474, 478, 481, 480, 482, 432, 434, 442,
	452, 453, 454, 458, 459, 468, 464, 466, 0, 0,
	0, 448, 446, 0, 0, 0, 449, 0, 1187, 0,
	0, 0, 457, 424, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 439, 463, 0,
	0, 0, 0, 0, 465, 437, 438, 440, 467, 0,
	469, 475, 2161, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 460, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 441, 423, 0,
	1188, 0, 0, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 436,
	0, 430, 0, 476, 477, 0, 444, 0, 433, 426,
	427, 428, 429, 431, 450, 451, 455, 456, 473, 472,
	471, 474, 478, 481, 480, 482, 432, 434, 442, 452,
	453, 454, 458, 459, 468, 464, 466, 0, 0, 0,
	448, 446, 0, 0, 0, 449, 0, 0, 0, 0,
	0, 457, 424, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 439, 463, 0, 0,
	0, 0, 0, 465, 437, 438, 440, 467, 0, 469,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 462, 0, 0, 0, 0, 0, 1201,
	1204, 1205, 1206, 1207, 1208, 1209, 0, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 0, 1189, 1190, 1191, 1192,
	1168, 1172, 1202, 1169, 1175, 1171, 1173, 1170, 0, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 0, 0,
	0, 0, 0, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 476, 477, 0, 0, 0, 433, 426, 427,
	428, 429, 431, 450, 451, 455, 456, 473, 472, 471,
	474, 478, 481, 480, 482, 432, 434, 442, 452, 453,
	454, 458, 459, 468, 464, 466, 1203, 36, 37, 72,
	39, 40, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 59,
	0, 41, 63, 64, 0, 78, 0, 0, 60, 41,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 0, 81,
	0, 460, 462, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2502, 0, 0, 0, 0, 2770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2503, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 49, 77,
	76, 0, 0, 0, 0, 47, 36, 0, 72, 39,
	40, 65, 0, 0, 36, 0, 72, 39, 40, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 59, 0,
	41, 0, 0, 0, 78, 0, 0, 0, 41, 0,
	0, 0, 57, 58, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 2504, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 0, 66, 81, 67,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 2502, 0, 68, 0, 0, 2759, 0, 0,
	2502, 0, 0, 0, 0, 2742, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 75, 0, 53, 54, 61,
	0, 62, 2505, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 2503, 0, 0, 0, 0, 0, 0,
	0, 2503, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 49, 77, 76,
	0, 0, 0, 0, 47, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 73, 0, 41, 0, 0, 0, 0, 0,
	73, 57, 58, 0, 2504, 0, 0, 0, 0, 57,
	58, 0, 2504, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 81, 2730, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 68, 0, 0, 0, 79,
	0, 0, 0, 68, 0, 0, 2502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2505, 75, 0, 53, 54, 61, 0,
	62, 2505, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 2503, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 41, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 81,
	41, 73, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 57, 58, 0, 2504, 0,
	0, 0, 0, 2502, 0, 0, 0, 0, 2671, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 79, 68,
	0, 0, 2502, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2503, 0, 0, 2505, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 57, 58, 0, 2504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 57, 58, 0, 2504, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2505, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 79, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2505, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79,
}

var yyPact = [...]int{
	33601, -1000, -322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1726, -1000, -1000, -1000, -1000,
	-1000, -1000, 906, 268, -1000, 282, 234, 29468, 593, 2856,
	30452, -1000, -1000, -1000, 182, 507, 30452, 441, 417, 1199,
	1601, 1198, 32, -64, -66, 126, 23071, 22578, 17, -1000,
	1786, 1789, -1000, -1000, 551, 37, -1000, -1000, -1000, 20113,
	186, -1000, -1000, 1712, 1724, 1522, -1000, 13225, 551, 551,
	28976, 32420, -1000, 1782, 30452, 7763, -1000, 581, 30452, -163,
	536, 536, 336, 536, 536, 589, -1000, 878, -1000, -1000,
	-1000, -1000, 30452, 26024, 539, 29960, 539, 539, 539, 539,
	539, 539, 539, 30452, -1000, 697, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30452, 1197, 1641, 898, 117, -1000, -1000, -1000, 897,
	-1000, 323, 315, 325, 311, 85, 908, 1709, -1000, 1419,
	1712, 1712, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 319,
	565, 207, 186, 877, -1000, 1639, 1638, 1089, 1633, 463,
	1631, 1470, -41, -1000, 1196, 30452, -1000, -1000, 1062, 1056,
	1495, 1364, 669, 1494, -1000, -1000, 340, 462, 1451, 416,
	1451, 1451, 1451, 1451, 1451, -80, 1451, 1451, 1451, 86,
	1451, 149, 1451, 1451, 1451, 1451, 1451, 1209, -1000, -1000,
	-1000, 373, 1357, 1411, 1493, 500, -1000, -1000, -1000, -1000,
	1480, 1693, 583, -1000, -109, 1397, 21097, -1000, 1419, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1164, 1627, 1028, 16177, 1563, -1000,
	-1000, 935, 1766, -1000, 19621, 682, -1000, 16177, 3237, 1419,
	-1000, -1000, 1419, -1000, -1000, -1000, 606, -1000, -1000, 18145,
	18145, 18145, 18145, 18145, 18145, 18145, 18145, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, -1000, -1000, 1419, -1000, 12733, 1419, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 16177, 1419,
	1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419, 1419,
	1419, 1419, 1419, 28484, 26516, 30452, 1401, 1386, -1000, -1000,
	673, 1406, -136, 31928, -1000, -1000, -1000, -1000, 30944, 25532,
	872, -1000, -1000, -1000, -1000, 1629, -1000, -1000, 643, -1000,
	1726, -1000, -1000, 1325, 367, -1000, 33168, 4770, -1000, -1000,
	-1000, 1469, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 29960, 1689, 568,
	1195, 899, 1193, 1190, 1189, 26024, 26024, 536, 1183, 1405,
	563, 1403, 562, 1207, 30452, 1662, 1492, 30452, 1181, 1180,
	1179, 1177, 26024, 26024, -1000, 11747, -1000, -1000, 898, -1000,
	1126, 16177, 536, 536, 30452, 30452, 30452, 30452, -1000, -1000,
	898, 898, 898, 898, 882, 1765, 882, -1000, 882, -1000,
	-1000, 16177, -1000, 18145, 25040, 732, -1000, -1000, -1000, 1176,
	301, -1000, -1000, -1000, -1000, -1000, -1000, 1175, 463, 463,
	-1000, 1120, 463, 1393, -1000, 854, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 463, -1000,
	15685, -318, -1000, -1000, 1400, -1000, 250, -1000, -1000, 509,
	509, 181, 26024, 26024, 26024, -1000, 1451, 29960, -1000, 1451,
	1451, 1451, -82, 1451, 1451, -1000, -1000, 1451, -1000, -1000,
	-1000, -1000, -1000, 1451, -1000, -1000, -1000, 1451, 1451, -1000,
	1451, 1451, -1000, -1000, -1000, -1000, -1000, 26024, 509, 168,
	1398, 509, 26024, 26024, -1000, 67, 66, 65, 63, -1000,
	-1000, -1000, -1000, 60, 57, -1000, -1000, 1522, -1000, -1000,
	186, -1000, -1000, 30452, -118, 21097, 1397, 1687, 10751, -1000,
	-1000, -1000, 1775, 807, 1402, -1000, -1000, 1395, -1000, 954,
	642, 1012, 1497, -1000, -1000, -1000, 30452, -1000, 16177, 16177,
	1038, -1000, 21589, -1000, -1000, -1000, -1000, 10253, 804, 18145,
	970, 806, 18145, 18145, 18145, 18145, 18145, 18145, 18145, 18145,
	18145, 18145, 18145, 18145, 18145, 18145, 18145, 1052, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1171, -1000, 186, 1114,
	1114, 712, 712, 712, 712, 712, 712, 712, 23563, 1685,
	14209, 14209, 14209, 1685, 1164, 1164, 14209, 14209, 14209, 14209,
	14209, 14209, 14209, 14209, 1685, 1685, 14209, 1164, 1164, 1164,
	1164, 14209, 14209, 14209, 14209, 29960, 29960, 1685, 14209, 14209,
	14209, 1685, 1164, 1323, 930, 12733, 14209, 14209, 1164, 16177,
	16177, 15193, 14701, 16669, 14209, 1685, 885, 930, 30944, -1000,
	-1000, 17653, -1000, -1000, -1000, -1000, -1000, 1164, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14209, 14209, 14209, 14209,
	772, 30452, -1000, 1391, 1472, -1000, -1000, -1000, 1679, 24548,
	18637, -1000, 772, 1350, 26516, 30452, -1000, -1000, 26516, 30452,
	9755, 31436, 1387, -1000, -107, -144, -136, -1000, -1000, 707,
	-1000, -1000, -1000, 12240, -1000, 11249, 1712, 1522, 6767, 5273,
	-1000, -1000, -51, -1000, -1000, -1000, 1441, -1000, 1441, 275,
	-7, 1441, 1441, 1441, 1441, 1441, -14, -14, -14, -14,
	3, -1000, -1000, -1000, -1000, -1000, 1468, 1457, -1000, 1441,
	1441, 1441, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1449, 286, 1443, 1443, 1443, 1443, 1443, 369, 369,
	-1000, 16177, 1473, -1000, 30452, -1000, 1661, -1000, 320, 1455,
	1369, -1000, 163, 1253, 30452, -1000, 30452, 30452, 26024, 26024,
	26024, 646, -1000, 30452, 1394, -1000, -1000, -1000, -1000, -1000,
	1371, -1000, 1253, -1000, -1000, -1000, -1000, -1000, 930, 1169,
	1168, -1000, -1000, -1000, 894, -1000, -1000, -1000, -1000, 898,
	30452, 30452, 30452, 1676, 898, 930, 676, 1474, 1419, 1164,
	-1000, -1000, 1167, -1000, 1393, 1393, -1000, 1393, 463, 1114,
	1393, -1000, 1319, 1657, 1119, 30452, -1000, 21097, -43, -1000,
	-135, 27992, -1000, -1000, -1000, 27992, -1000, 86, 156, -1000,
	561, -1000, 1316, -1000, -1000, -1000, -1000, 1451, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27992, 123, 167,
	27992, 1371, 1764, -1000, -1000, -1000, -1000, 1706, -1000, 1685,
	1164, 249, -1000, -1000, -1000, 1419, 1265, 640, -1000, 1531,
	1028, 1028, 16177, -1000, -1000, -1000, 11249, 1697, -1000, 1542,
	1541, 1513, -1000, -1000, 804, 903, -1000, -1000, 1059, -1000,
	-1000, -1000, -1000, 637, 1419, -1000, 3632, -1000, -1000, -1000,
	-1000, 970, 18145, 18145, 18145, 676, 3632, 3704, 750, 1283,
	712, 832, 832, 716, 716, 716, 716, 716, 801, 801,
	-1000, -1000, -1000, 1164, -1000, -1000, -1000, 14209, 1310, -1000,
	-1000, 930, 635, 1310, 1310, 14209, -178, -178, 1310, 1164,
	1310, 1310, 1310, 1310, 1164, 1310, 14209, 14209, 1310, -178,
	-178, -178, -178, 1310, 1310, 1310, 1310, 1392, 1389, 14209,
	1310, 1310, 1310, 14209, -1000, 16177, -1000, 1164, 1310, 1310,
	-1000, 881, 1020, 802, 1759, 1310, 770, 1753, 1310, 907,
	18145, 18145, 18145, 1310, 14209, 918, -1000, 16177, 1164, -1000,
	1940, 1310, 1164, 1388, 1310, 1310, 188, 1419, -1000, 11249,
	26516, 26516, 26516, 26516, 26516, -1000, 1519, 1518, -1000, 1508,
	1506, 1507, 21097, 1314, 1164, 296, 24548, -1000, 1419, -1000,
	20605, 657, 578, 576, 571, 1735, 26516, 1312, -1000, 1312,
	-1000, 632, -1000, -1000, 30944, -136, -100, -1000, -1000, 1387,
	-1000, 1060, -1000, -1000, 930, -1000, 630, 1627, 1685, 1383,
	6269, -1000, -1000, -1000, -1000, 367, -1000, -1000, -1000, 1450,
	4666, -1000, 1558, 678, 675, 1134, 1554, -1000, -1000, 577,
	-59, -1000, -1000, 1054, -14, -14, 1441, 1441, 270, 1441,
	-1000, -14, -1000, -1000, -1000, 707, 1618, 707, 707, 707,
	707, -14, 1111, 1111, -1000, -1000, -1000, -1000, 1053, -1000,
	1449, -1000, 1043, -1000, -1000, -1000, -1000, -1000, -1000, 1014,
	1490, 29960, 186, 1673, -1000, 1758, -1000, -1000, 579, 83,
	26024, 184, 389, 180, -1000, 559, -1000, 558, -1000, -1000,
	-1000, -1000, -1000, -1000, 30452, 26024, -1000, -1000, 1735, 1166,
	1163, -1000, -1000, -1000, 882, 898, 1606, -1000, -1000, 18145,
	26024, -1000, 306, -1000, -1000, -1000, -1000, 772, 580, -1000,
	-1000, -73, -1000, -1000, 557, 613, 611, 556, -1000, 98,
	26024, -1000, 29960, -1000, 1751, 1746, 115, 1745, 26024, -1000,
	42, 1497, -1000, 1382, -1000, 666, 656, 683, 504, 504,
	-1000, 838, 504, 771, -1000, 215, -1000, 10751, 10751, 1529,
	-1000, -1000, -1000, 30452, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9257, 14209, -1000, 676, 3632, 3687, -1000,
	18145, -1000, 1310, 14209, -178, 8759, -178, -178, 1310, -1000,
	27500, -1000, -1000, -178, -1000, -178, -178, -178, -178, -178,
	1310, 1310, -178, -1000, -1000, -1000, -1000, -178, -178, -178,
	-178, 18145, 18145, 1310, -178, -178, -178, 1164, 930, -1000,
	-1000, -1000, 165, 1052, 165, 18145, 18145, -1000, 18145, 18145,
	-1000, -1000, 18145, 3617, 3421, 3154, -232, 1321, 884, -1000,
	16177, 1010, -1000, -1000, -1000, -1000, -1000, -1000, 1489, 11249,
	1419, 7265, -1000, 29960, 1404, -1000, 843, 842, 1472, 1448,
	1487, 1162, -1000, -1000, -1000, -1000, 1516, -1000, 1515, -1000,
	-1000, 1425, -1000, -1000, 1381, 1419, 29960, 18145, 657, -1000,
	1419, 1419, 1419, 1726, 16177, 1312, -1000, -1000, 728, -1000,
	-1000, -115, -149, -1000, -1000, -1000, 10751, -1000, 6767, -1000,
	6767, -1000, 22081, 534, 1560, 368, -1000, 1134, -1000, -1000,
	1134, -1000, -1000, -1000, 1445, -1000, 911, -1000, -1000, -1000,
	-1000, -1000, 18145, 1773, -1000, 1553, -1000, 1552, 1110, -1000,
	-1000, 1250, 707, 707, -14, -1000, -1000, 1441, -1000, 707,
	-1000, 768, -1000, -1000, -1000, -1000, 707, 1284, -1000, 1282,
	1375, -1000, 1275, 108, 30452, -1000, -1000, -1000, 1486, -1000,
	-1000, -1000, 1246, 1373, -1000, 33168, 1161, 1160, 1158, -237,
	224, -1000, 26024, 150, 163, 405, 1151, 30452, 26024, -1000,
	-1000, -1000, -1000, -1000, 898, -1000, 18145, 3632, 1253, -1000,
	-1000, -14, 30452, -1000, 26024, 726, 27008, 26024, 114, 154,
	-1000, 26024, 26024, 1743, 26024, 1371, 1107, 1513, 249, 4278,
	1134, 617, -1000, -1000, 511, -1000, 4001, 1144, 33170, 32961,
	29960, 1551, 1550, 1140, 30452, 29960, -1000, -1000, 32752, 1138,
	16177, -1000, 29960, 29960, 610, -1000, -1000, -1000, 1327, 13225,
	-1000, -1000, 1164, -1000, 18145, 3632, -178, -1000, -1000, -1000,
	-1000, 609, -1000, -1000, -178, -1000, -1000, 1137, -1000, -1000,
	-1000, -1000, -1000, -1000, -178, -178, -1000, -1000, -1000, -1000,
	-1000, 3339, 3296, -178, -1000, -1000, -1000, -1000, 1164, 1441,
	1441, -1000, 1441, 1443, -1000, 1441, 21, 1441, 8, 1164,
	1164, 2980, 2893, 2314, 1247, 1940, 18145, 18145, 18145, 1419,
	-174, -1000, 930, 16177, -1000, 1649, 1349, 1367, -1000, -1000,
	13717, 1164, 1540, 1265, -1000, 20113, 1262, -1000, 1726, 11249,
	16177, 16177, -1000, -1000, 16177, 1442, -1000, 16177, -1000, -1000,
	-1000, -1000, 29960, 292, -1000, 16177, 1262, 2751, -1000, 29960,
	29960, 29960, 1712, 930, -1000, -1000, -1000, -1000, 6269, -1000,
	1260, -1000, 1441, 1441, 1549, -1000, 678, -1000, -1000, -1000,
	29960, -1000, 3632, -99, -1000, -1000, -1000, -1000, -1000, -1000,
	707, -1000, -1000, -1000, -1000, -1000, -14, 1103, -14, 1039,
	-1000, 1037, -1000, -1000, -272, 1440, -1000, 186, 30452, 172,
	579, -1000, 33168, 33168, 33168, 143, 99, -1000, 919, -1000,
	-1000, -1000, 1102, 1099, 1098, 1253, 187, 915, 160, -1000,
	1671, -1000, -1000, -1000, 3632, -71, -1000, 154, -1000, -1000,
	-1000, 154, -1000, -1000, 162, 1371, 1371, 26024, 1371, -1000,
	-1000, -1000, 32752, 356, 33168, 33168, 1473, 678, 1547, 368,
	-1000, -1000, -1000, -1000, -1000, -1000, 1136, -1000, 679, -1000,
	553, 356, 32752, 930, 711, 1655, 10751, 1730, 26516, -1000,
	-1000, -1000, 3632, -1000, 8261, -1000, 769, -1000, -1000, -1000,
	18145, 18145, -1000, -1000, -1000, 284, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18145, 18145, 18145, 18145, -1000, 1940,
	1940, 1940, 18145, 1164, 1097, 930, 1546, -1000, 1419, -1000,
	-1000, 1419, 192, -1000, 29960, 1712, -1000, 930, 930, 930,
	29960, 930, 1243, -1000, 1419, 19129, -1000, 21097, 1236, 1236,
	1236, -1000, 618, 22081, 1654, 1654, -1000, 1134, -1000, 1234,
	-1000, 1419, 1419, -1000, 707, -1000, 707, 1244, 1237, -1000,
	22081, -1000, 1704, -1000, 172, -1000, 1096, 245, 238, -1000,
	239, 235, 232, 229, 216, -1000, -1000, -1000, -1000, 399,
	143, -1000, -54, 1036, 808, 1624, 99, -1000, 1034, 1030,
	1006, 987, 183, -1000, -1000, -1000, -1000, 179, 163, -1000,
	395, 1094, 1590, 1573, 1672, 1672, 112, 1371, 1307, 1219,
	-1000, -1000, 1135, -1000, -1000, 1437, 1134, 1430, -1000, 1133,
	-1000, -1000, 29960, -1000, 356, 1646, 1645, 1419, -1000, 1728,
	1723, 1312, 13225, -1000, -1000, 1726, 1721, 1940, 1940, -1000,
	-1000, 1940, 1940, 1940, 1940, -1000, -1000, -1000, 125, -1000,
	-1000, 1771, -1000, 1367, 1419, -1000, 186, -1000, -1000, 1230,
	-1000, 29960, -1000, -1000, 657, -1000, -1000, -1000, 618, -1000,
	1132, 838, 1093, -1000, -1000, -1000, -1000, 360, -1000, -1000,
	-1000, -1000, 1226, -1000, 298, 34140, -1000, -1000, -1000, -1000,
	-1000, -1000, 1597, 1593, 254, -1000, 1092, 1088, -1000, 383,
	1042, 699, -187, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 393, 1130, -1000, 157, -1000, -1000,
	543, 1562, 1564, 1718, -1000, 26024, -1000, -1000, 26516, -1000,
	-1000, 577, 577, 22081, 1473, 22081, -1000, -1000, -1000, 18145,
	-1000, 753, -181, 16177, 16177, 1730, -1000, 749, 16177, -1000,
	-1000, -1000, -1000, -1000, -1000, 1164, 159, -248, 11249, 1367,
	1164, -1000, -1000, -1000, -1000, -1000, 976, -1000, 30452, 618,
	288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16177, 16177, 5771, 34140, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 945, -1000, -1000, 1018, 370, 153,
	-1000, 1666, -1000, 1425, 944, 1573, 1717, 1570, 1568, -1000,
	1083, -238, 1312, 1224, 1423, 1218, 3632, 1213, -1000, 29960,
	-1000, 29960, -1000, 930, 1365, -1000, 930, 1728, -1000, 1164,
	201, 201, 1356, -1000, 1527, -235, -256, 1279, -1000, -1000,
	1422, -1000, 618, 267, -1000, 995, 986, 218, 185, 3262,
	-1000, -1000, -1000, -1000, -323, -1000, 131, -1000, 128, -1000,
	-1000, -1000, 1082, -1000, 1583, -1000, 1077, -1000, 1716, 1715,
	-1000, 177, 1730, 618, 22081, 618, -1000, 753, 1539, 1257,
	-1000, 1658, 16177, -181, -1000, -1000, 197, -1000, 744, 260,
	742, -1000, 1114, -1000, -1000, 1525, -1000, 29960, -1000, 1129,
	1013, 904, -1000, 16177, 34140, 1701, 1700, 1699, 1644, 10751,
	34101, -1000, -1000, -1000, -1000, -1000, 1074, 1073, 24055, 1728,
	-1000, 1206, -1000, -1000, 326, 29960, 1419, -1000, -1000, 901,
	-1000, -1000, -1000, -1000, -1000, 29960, -240, 1204, 314, -1000,
	-1000, 891, 34140, -1000, 973, -324, 423, 186, 421, 18145,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 107, 1253, -181,
	618, 341, -1000, -1000, 197, -1000, -253, 1485, -1000, -1000,
	-1000, -1000, -1000, -1000, 34140, -1000, -325, 34140, 3626, -1000,
	-1000, -1000, 33964, -1000, -1000, -1000, -1000, 190, -1000, -1000,
	3632, 26024, -1000, -1000, 1419, -1000, -257, 1483, 1476, 1740,
	-1000, -328, 33788, -329, 518, 34140, 850, -1000, 16177, -1000,
	421, -1000, 1253, 17161, -1000, -1000, 1760, -1000, 1768, 605,
	605, 33780, 890, 34140, -1000, -330, 516, 34140, -1000, 855,
	-1000, 1940, 1164, -1000, -1000, -1000, 479, 1011, -1000, -1000,
	-1000, 33609, -1000, -331, 34140, -1000, -1000, -1000, -1000, -1000,
	515, 4508, -332, -1000, 514, 34140, -1000,
}

var yyPgo = [...]int{
	0, 2195, 2192, 50, 2191, 219, 2190, 2189, 2187, 20,
	17, 14, 24, 2186, 1908, 1906, 1904, 1902, 1895, 2183,
	9, 2182, 2181, 1889, 2180, 2178, 1880, 1878, 1856, 1848,
	2177, 2176, 2174, 1846, 1834, 1832, 30, 2173, 28, 2172,
	6, 150, 165, 2171, 3, 2170, 2168, 4, 2164, 2160,
	1830, 2157, 2156, 2147, 98, 2145, 1827, 1820, 2144, 1818,
	1806, 2143, 2142, 1804, 1799, 1797, 2141, 169, 2137, 2136,
	2130, 149, 101, 152, 2122, 2121, 2120, 120, 88, 2069,
	113, 45, 111, 237, 2107, 27, 47, 206, 2106, 138,
	159, 2103, 157, 2102, 146, 142, 106, 2101, 2095, 167,
	2092, 2091, 2090, 140, 2089, 2087, 2858, 2086, 2085, 162,
	2084, 74, 77, 35, 2083, 2078, 2077, 2076, 2075, 29,
	845, 2074, 2073, 144, 2071, 2068, 91, 2054, 2053, 176,
	2052, 2051, 2050, 139, 43, 2049, 2048, 59, 2046, 55,
	78, 2045, 53, 2044, 134, 2043, 2041, 39, 26, 2040,
	79, 2039, 60, 2038, 141, 234, 1092, 2036, 22, 16,
	23, 2035, 32, 11, 8, 44, 68, 85, 129, 105,
	2034, 36, 40, 117, 104, 96, 41, 2033, 154, 2030,
	94, 156, 130, 137, 155, 2028, 2025, 2023, 1075, 2022,
	128, 84, 2021, 112, 935, 166, 119, 2019, 92, 2014,
	2013, 2012, 2007, 2006, 97, 116, 2004, 2003, 42, 19,
	916, 1608, 57, 158, 2002, 48, 2001, 2000, 1997, 2884,
	108, 80, 109, 1996, 107, 38, 54, 1995, 1991, 1990,
	1988, 1986, 1985, 1614, 1984, 1983, 1981, 1980, 437, 122,
	1979, 1978, 136, 125, 1977, 1974, 1971, 1969, 127, 83,
	151, 1968, 121, 124, 177, 1967, 82, 1966, 1963, 56,
	49, 1962, 1961, 1959, 103, 100, 1958, 71, 33, 34,
	69, 13, 1955, 1951, 102, 89, 1950, 31, 1949, 2,
	10, 12, 1946, 1943, 1940, 1938, 1935, 1933, 1931, 90,
	1930, 1929, 66, 1927, 1925, 1923, 37, 1920, 1916, 1914,
	147, 123, 46, 163, 93, 7, 1911, 1910, 5, 1899,
	126, 1897, 61, 1893, 58, 1891, 1882, 65, 1875, 1873,
	64, 1854, 1850, 164, 1539, 507, 1839, 161, 148, 52,
	95, 1824, 1813, 0, 690, 170, 168, 1809, 1795,
}

var yyR1 = [...]int{
	0, 332, 332, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 92,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 335, 335, 101, 101, 99, 99, 100,
	100, 173, 173, 12, 12, 12, 178, 178, 183, 183,
	183, 186, 186, 186, 186, 164, 165, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 306,
	306, 315, 315, 315, 316, 316, 314, 314, 314, 314,
	314, 318, 318, 319, 319, 317, 317, 317, 317, 321,
	321, 322, 322, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 309, 309, 309,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 324, 324, 325, 325, 326, 326, 327, 327, 327,
	327, 328, 328, 328, 328, 328, 329, 329, 329, 329,
	329, 329, 329, 330, 330, 331, 331, 2, 287, 287,
	288, 288, 289, 289, 289, 289, 290, 290, 291, 291,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	24, 207, 207, 308, 308, 308, 302, 302, 302, 304,
	304, 303, 303, 303, 305, 305, 310, 310, 310, 310,
	310, 312, 312, 312, 312, 312, 312, 313, 313, 313,
	311, 311, 48, 48, 49, 49, 49, 153, 153, 153,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 286, 286, 286, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 261,
	262, 262, 262, 262, 262, 262, 262, 262, 249, 249,
	250, 226, 226, 226, 226, 226, 226, 226, 226, 225,
	225, 225, 225, 229, 229, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 228, 228, 228, 228, 228,
	228, 228, 228, 230, 230, 230, 230, 230, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 232, 232, 232, 232,
	232, 248, 248, 233, 233, 242, 242, 243, 243, 243,
	240, 240, 241, 241, 236, 237, 244, 238, 238, 238,
	239, 239, 239, 247, 247, 247, 247, 234, 35, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 200, 200, 201, 201, 251, 251, 271,
	271, 270, 270, 269, 269, 269, 260, 260, 266, 266,
	266, 266, 266, 266, 266, 255, 255, 255, 254, 254,
	256, 256, 259, 259, 268, 268, 267, 267, 252, 252,
	252, 274, 274, 274, 274, 274, 253, 253, 253, 253,
	275, 257, 257, 258, 258, 258, 280, 281, 279, 279,
	279, 279, 279, 116, 116, 116, 263, 263, 263, 264,
	264, 264, 265, 265, 265, 284, 284, 283, 283, 50,
	51, 55, 55, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 152, 152, 152,
	205, 205, 278, 276, 276, 277, 277, 15, 15, 53,
	53, 307, 307, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 282, 282, 282, 17, 17, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 84, 192, 192, 191, 191, 190, 190, 190,
	193, 193, 193, 223, 223, 223, 58, 58, 62, 62,
	65, 65, 65, 63, 64, 27, 28, 28, 28, 28,
	29, 206, 206, 60, 60, 61, 61, 61, 61, 76,
	76, 337, 337, 59, 338, 67, 68, 68, 69, 69,
	69, 196, 196, 73, 73, 73, 71, 71, 71, 72,
	72, 78, 78, 82, 82, 82, 82, 81, 81, 81,
	81, 155, 155, 160, 216, 216, 136, 136, 156, 156,
	161, 161, 161, 162, 162, 163, 163, 163, 163, 163,
	158, 158, 157, 157, 159, 124, 124, 214, 214, 214,
	213, 213, 213, 213, 86, 86, 89, 89, 90, 90,
	90, 90, 93, 138, 138, 110, 110, 111, 111, 111,
	111, 111, 122, 122, 172, 172, 171, 171, 174, 174,
	91, 91, 91, 91, 96, 96, 97, 97, 98, 98,
	204, 204, 221, 221, 221, 102, 102, 102, 104, 103,
	103, 103, 103, 105, 105, 107, 108, 108, 106, 106,
	109, 112, 112, 112, 112, 113, 113, 83, 83, 83,
	83, 83, 83, 83, 189, 189, 115, 115, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 132, 132,
	132, 132, 132, 132, 117, 117, 117, 117, 117, 117,
	117, 77, 77, 133, 133, 133, 95, 94, 94, 80,
	80, 79, 79, 134, 134, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	127, 127, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 336, 336,
	129, 128, 128, 128, 128, 128, 128, 74, 74, 74,
	74, 74, 222, 222, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 145, 145, 75,
	75, 143, 143, 144, 146, 146, 142, 142, 142, 119,
	119, 119, 119, 119, 119, 119, 119, 121, 121, 121,
	147, 147, 135, 135, 85, 148, 148, 149, 150, 150,
	151, 151, 154, 166, 166, 166, 167, 167, 167, 167,
	123, 123, 168, 168, 168, 118, 118, 118, 118, 118,
	118, 118, 170, 170, 169, 169, 169, 169, 175, 175,
	137, 137, 140, 140, 139, 141, 176, 176, 180, 180,
	177, 177, 181, 181, 181, 181, 184, 184, 185, 185,
	185, 182, 182, 182, 179, 179, 179, 218, 218, 218,
	187, 187, 197, 197, 194, 194, 195, 195, 188, 188,
	235, 235, 203, 203, 202, 202, 202, 198, 198, 198,
	199, 199, 215, 215, 211, 211, 217, 217, 212, 212,
	219, 219, 220, 220, 285, 285, 245, 245, 295, 295,
	246, 246, 296, 296, 298, 298, 293, 293, 294, 294,
	297, 297, 30, 299, 299, 300, 300, 301, 301, 301,
	301, 31, 32, 32, 32, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 333, 334,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -332, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -337, -206, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-333, 68, 503, -150, 15, -67, -338, -67, -67, -67,
	-67, -67, -261, -204, 106, 68, 23, -199, 150, 87,
	382, 146, -207, 234, 236, -197, -198, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -106, -219, 72, -209, 160, 451,
	259, 437, 246, 293, 309, 301, 324, 438, 452, 216,
	292, 325, 369, 249, 209, 272, 453, 358, 364, 219,
	296, 378, 454, 213, 215, 214, 203, 220, 36, 172,
	320, 255, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 285, 458, 342, 346, 459, 370, 239, 286, 460,
	461, 462, 149, 245, 305, 306, 463, 199, 372, 250,
	340, 158, 439, 48, 180, 373, 38, 344, 350, 464,
	282, 351, 465, 466, 467, 468, 263, 261, 262, 264,
	211, 53, 144, 348, 347, 349, 212, 368, 329, 327,
	469, 470, 254, 164, 471, 472, 18, 473, 474, 376,
	257, 475, 476, 477, 478, 479, 480, 367, 343, 345,
	197, 114, 481, 260, 363, 269, 441, 243, 483, 288,
	179, 174, 377, 278, 484, 485, 486, 487, 488, 237,
	236, 297, 270, 298, 217, 489, 490, 491, 492, 207,
	192, 380, 371, 52, 355, 493, 273, 289, 223, 494,
	294, 7, 210, 251, 361, 271, 218, 208, 331, 181,
	495, 496, 318, 319, 295, 184, 176, 109, 379, 443,
	234, 290, 187, 497, 150, 498, 188, 299, 375, 248,
	321, 147, 131, 325, 369, 138, 359, 360, 366, -255,
	367, 182, 185, -223, 147, -192, 358, 239, 260, 412,
	188, 189, 148, 149, 33, 371, 370, 362, -219, 151,
	299, -76, 142, 177, -106, -47, 72, 223, -47, 30,
	72, 72, 36, 72, 298, 361, 361, 75, 441, 191,
	21, -324, -305, 269, -323, -303, 139, 138, 10, 140,
	274, 275, 276, 148, 8, 31, 482, 165, 277, 278,
	6, 169, 279, 280, 183, 9, 281, -308, 74, 72,
	-209, 21, -324, -305, 269, -201, -200, 291, 350, 6,
	-69, 5, -188, 152, 295, -87, 450, -92, -221, -219,
	-210, 74, 252, 168, 242, 353, 408, 409, 410, 411,
	191, 412, 425, 407, 426, 97, 189, 274, 275, 266,
	276, 167, 427, 115, 196, 177, 231, 362, 230, 235,
	413, 414, 428, 429, 430, 415, 416, 241, 431, 432,
	501, 244, 502, 267, 434, 482, 435, 277, 433, 279,
	186, 419, 418, 417, 420, 280, 402, 403, 421, 51,
	423, 422, 424, 81, -3, -167, 17, 16, -73, 54,
	55, -68, -81, 122, -83, -219, -114, 89, -120, 29,
	72, -209, 24, -119, -210, -115, -142, -141, -95, 131,
	132, 133, 120, 121, 128, 90, 134, -127, -125, -126,
	-128, -130, -131, 74, 73, 82, 75, 76, 77, 78,
	83, 408, 409, 410, 411, 412, 425, 426, 167, 427,
	177, 413, 414, 428, 429, 430, 415, 416, 431, 432,
	434, 435, 433, 419, 418, 417, 420, 402, 403, 421,
	423, 422, 424, 84, 85, -211, -139, -333, 58, 59,
	146, 392, 393, 394, 395, 396, 436, 400, 92, 47,
	381, 390, 389, 388, 386, 387, 383, 385, 384, 153,
	382, 126, 391, -188, -188, 11, -99, -100, -106, -109,
	-219, -177, 295, -184, -181, 370, 371, -182, -185, -179,
	-142, 350, 479, 480, 369, 325, 368, -211, -219, -2,
	-5, 6, -106, -262, -250, -253, -212, 162, -275, -211,
	-208, 159, 72, -209, 252, 143, 168, 139, 88, 444,
	23, 25, 242, 353, 408, 91, 131, 409, 410, 411,
	16, 20, 92, 130, 81, 392, 191, 412, 138, 62,
	407, 383, 385, 381, 382, 359, 29, 10, 26, 170,
	202, 22, 124, 140, 95, 96, 97, 189, 173, 274,
	275, 24, 171, 266, 85, 276, 167, 115, 196, 19,
	65, 177, 231, 11, 362, 185, 238, 13, 406, 113,
	230, 14, 235, 153, 152, 108, 200, 148, 60, 8,
	134, 27, 105, 56, 413, 414, 447, 45, 190, 448,
	58, 106, 17, 386, 387, 31, 436, 415, 178, 449,
	416, 126, 205, 63, 50, 241, 89, 83, 501, 34,
	86, 66, 287, 87, 15, 201, 61, 404, 244, 502,
	267, 182, 482, 204, 450, 165, 107, 277, 141, 391,
	268, 240, 59, 146, 6, 401, 30, 169, 279, 206,
	186, 419, 418, 417, 420, 57, 394, 395, 421, 280,
	499, 147, 94, 402, 403, 151, 183, 84, 5, 44,
	32, 9, 281, 64, 67, 388, 389, 390, 47, 51,
	423, 422, 424, 93, 12, 405, 440, 148, -106, 391,
	-195, 153, -195, 183, 182, -195, -195, 147, 98, -53,
	-106, -307, -302, -308, -194, 153, -211, -194, -194, -194,
	-194, -194, -194, -194, -106, 135, -106, 72, 30, -193,
	106, 12, 382, 146, 147, 183, 150, -257, 11, 108,
	186, 186, 186, 187, 186, -191, 361, 363, 184, 364,
	365, 12, -84, 106, 19, -333, -167, -167, 72, 298,
	151, -61, -3, -11, -9, -10, -3, 98, 30, 30,
	74, 51, 30, -42, -41, -43, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 30, -286,
	68, -245, 350, 72, -299, -300, -106, 75, 75, 66,
	66, 69, 151, 69, 66, -325, 270, 68, -325, 236,
	270, 271, 208, 234, 150, -325, -325, 236, -325, -325,
	-325, -325, -325, 361, -325, -325, -325, 272, 273, -325,
	359, 150, -325, -325, -325, -325, -325, 71, 66, 69,
	260, 66, 11, 66, -272, 131, 283, 284, 285, 286,
	282, 260, 287, 288, 289, 186, 290, -67, -7, -5,
	-333, 21, 22, 147, 374, 69, -87, -170, -333, -334,
	70, -168, 19, 31, -123, 75, 78, -151, -154, -83,
	-219, 50, -71, 21, 22, 80, 11, -214, 88, 87,
	105, -213, 23, 72, -209, -210, 74, 135, -83, -117,
	108, 89, 106, 107, 91, 117, 116, 127, 120, 121,
	122, 123, 124, 125, 126, 118, 119, 130, 98, 99,
	100, 101, 102, 103, 104, -189, -333, -95, -333, 136,
	137, -120, -120, -120, -120, -120, -120, -120, -120, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -3, -134, -83, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -145, -83, -333, -336,
	-129, -333, -336, -129, -336, -129, -336, -333, -336, -129,
	-336, -129, -336, -336, -129, -336, -333, -333, -333, -333,
	-108, 27, -106, -86, -89, -90, -91, -110, -94, -333,
	-106, -95, -106, -99, -335, 69, 11, 67, -335, 69,
	135, 69, -178, -183, 372, 374, 295, -182, -182, -218,
	-211, 74, 29, 98, 30, 135, -150, -67, 70, 69,
	-253, -225, -229, -231, -230, -232, -227, -228, 322, 325,
	329, 327, 323, 328, 131, 326, 331, 332, 333, 334,
	335, 336, 337, 338, 339, 340, 341, 30, 172, 318,
	319, 320, 321, 342, 343, 344, 345, 346, 347, 348,
	349, 301, 324, 438, 302, 303, 304, 305, 306, 307,
	309, 310, 311, 312, 313, 314, 315, 316, 72, -210,
	-275, 68, -211, 23, 150, 72, 89, 72, 72, 72,
	-311, -310, -302, -305, -195, 72, 69, 151, 69, 151,
	71, -99, 24, 66, -101, -106, 72, 72, 72, 72,
	-304, -302, -305, -220, -219, -208, -193, 74, -83, -195,
	-195, -106, -106, -106, -106, -193, -193, -193, -193, -190,
	11, 108, 11, -190, -190, -83, -120, -302, 384, 122,
	72, 72, 298, 72, -42, -42, 74, -42, 69, 98,
	-42, 70, -134, -285, 500, 69, -301, 23, 374, 375,
	351, -327, 147, 185, 182, -327, -323, 278, -304, -303,
	-302, -325, -326, -211, -325, -325, -325, 361, -325, -325,
	-325, -325, -325, -325, -325, -325, -308, -327, 238, 69,
	-327, -304, -302, 282, 282, 282, 282, 282, 282, -73,
	-3, -106, 375, 376, -92, 23, -169, -212, 9, 108,
	69, 18, 69, -166, 25, 26, 135, -121, 51, 75,
	78, -196, 49, -106, -83, -83, -132, 83, 89, 84,
	85, -213, 122, -220, -212, -208, -120, -133, -139, -95,
	79, 108, 106, 107, 91, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-222, 72, 74, 72, -119, -119, -211, -71, -79, -82,
	122, -83, -219, -79, -79, -71, -334, -334, -79, -82,
	-79, -79, -79, -79, -82, -79, -71, -71, -79, -334,
	-334, -334, -334, -79, -79, -79, -79, -211, -211, -71,
	-79, -79, -79, -71, -334, 69, -334, -3, -79, -79,
	-334, -83, -83, -142, 74, -79, -142, 74, -79, -120,
	397, 398, 399, -79, -71, -143, -144, 93, -142, -334,
	-120, -79, -80, -79, -79, -79, -173, 110, -106, 30,
	69, -102, -104, -103, -105, 56, 60, 62, 57, 58,
	59, 63, -204, -86, -93, 47, -333, -111, 110, -112,
	23, -221, 64, 152, 65, -173, 67, -86, -106, -86,
	-109, -219, 122, -181, -184, 69, 373, 375, 376, -178,
	-239, 130, 66, 86, -83, -212, -220, -167, -73, -263,
	-264, -265, -212, 74, 75, -250, -251, -252, -253, -266,
	162, -274, 154, 156, 44, -254, 163, 148, 45, -226,
	-240, 356, -233, 68, -233, -233, 330, 322, 325, 323,
	-233, -233, -233, -233, -233, -238, 325, -238, -238, -238,
	-238, 323, 68, 68, -233, -233, -233, -242, 68, -242,
	317, -243, 68, -243, -243, -243, -243, -275, -275, -83,
	-215, 67, -164, -106, 24, -48, 195, 168, 68, -306,
	69, 29, -312, 235, -106, -106, -106, -302, -302, -308,
	-282, 166, 161, -106, 69, 69, 72, 72, -258, 11,
	108, -193, -219, -219, -106, -122, 23, -193, -77, 173,
	67, -336, -334, 72, -41, -119, 70, -107, 27, 74,
	-300, -221, 350, 375, -328, 122, -211, -328, -331, 440,
	151, 70, 69, -325, -328, 256, 238, -328, 11, -273,
	19, -71, -334, -55, -54, 143, 140, 141, 144, 145,
	-278, 353, 139, 179, -94, -333, -334, 69, 135, 52,
	-123, -123, -154, -187, 19, 11, 47, 47, -72, 57,
	83, 84, 85, 135, -333, -133, -120, -120, -120, -77,
	88, -334, -79, 69, -334, 135, -334, -334, -79, -155,
	404, -155, -334, -334, -334, -334, -334, -334, -334, -334,
	-79, -79, -334, -155, -155, -155, -155, -334, -334, -334,
	-334, 69, 69, -79, -334, -334, -334, -80, -83, -334,
	-334, -334, 69, 67, 23, 11, 11, -334, 11, 11,
	-334, -334, 11, -120, -120, -120, -334, -79, -146, -144,
	95, -83, -334, -334, -334, -334, -334, -334, -118, 30,
	47, -333, -3, -333, -176, -180, -142, -208, -89, -90,
	-90, -89, -90, 56, 56, 56, 61, 56, 61, 56,
	-103, -221, -334, -334, -138, 194, -333, 34, -221, -112,
	148, 148, 148, -113, 12, -86, -113, -113, 135, -183,
	-186, 377, 374, 380, 72, 74, 135, -168, 69, -265,
	98, -253, 68, 72, -259, -210, 45, -254, 148, 45,
	-254, -259, 72, -259, 45, 83, 89, -236, -237, -244,
	-247, -234, 29, 66, 353, 154, 45, 44, 81, -241,
	357, 75, -238, -238, -233, -233, -233, 330, -233, -238,
	-239, 30, -239, -239, -239, -239, -238, -248, 74, -248,
	75, -242, 75, 70, 66, -211, -3, 23, -49, 8,
	9, 10, -287, -288, -289, 72, 108, 200, 201, -315,
	268, -310, 236, 245, 88, 16, 440, 151, 151, -106,
	-302, -113, 72, 72, -190, -193, 34, -120, -305, 188,
	189, -173, 147, -301, 151, 135, 135, 151, 259, -304,
	-211, 11, 11, 256, 11, -304, 292, -196, 69, -205,
	-254, -284, -252, -253, -283, 155, 162, -205, 162, 159,
	-254, 163, 154, 155, -202, -254, 151, 23, -205, -205,
	-260, 98, -205, 110, -212, -212, 53, -106, -78, -165,
	122, -212, -80, -77, 88, -120, -334, -82, -156, -155,
	122, -220, -156, -156, -334, -211, -160, -333, -155, -156,
	-156, -155, -155, -155, -334, -334, -155, -156, -156, -156,
	-156, -120, -120, -334, -156, -156, -156, -334, -224, 131,
	322, 172, 320, 313, 340, 327, 355, 318, 356, -222,
	-224, -120, -120, -120, -120, -120, 11, 11, 11, 437,
	-150, 97, -83, 94, -175, 66, -176, -137, -140, -139,
	-333, -3, -334, -169, 6, 440, -174, -211, -113, 69,
	98, 98, -97, -96, 66, 67, -98, 66, -96, 56,
	56, -172, 68, 69, -139, -333, -174, -120, -112, -333,
	-333, -333, -150, -83, -113, 374, 378, 379, -264, -265,
	-268, -267, -211, -210, 154, -274, 44, -274, -259, -259,
	68, 83, -120, 9, 45, 45, 74, 70, -239, -239,
	-238, -233, -239, 72, 131, -239, 70, 69, 70, 69,
	70, 69, -116, 456, 89, -106, -164, -164, 66, 70,
	69, -225, 72, 72, 72, -318, 440, 241, -316, -314,
	247, 248, 249, 250, 251, -305, 246, -312, 243, 74,
	72, -106, -302, -193, -120, -238, -106, -304, 122, 122,
	-211, -304, 256, -330, 440, -304, -304, 11, -304, 74,
	-72, -54, 68, -249, 72, -210, -259, -198, 154, 72,
	72, 72, -210, 72, -210, -211, 45, 45, 72, -106,
	-211, -249, 72, -83, -211, -211, 135, -113, 11, 69,
	-81, -334, -120, -156, 135, -156, -216, 72, -156, -156,
	69, 69, -156, -334, -233, -233, -233, -243, -233, 306,
	-233, 306, -334, -334, 19, 19, 19, 19, -334, -120,
	-120, -120, -333, -75, 401, -83, 28, -175, 69, -334,
	-334, 47, -334, -334, 69, -150, -180, -83, -83, -83,
	68, -83, -171, -211, 194, -334, -112, -204, -171, -171,
	-171, -167, 70, 69, -233, -233, 45, -256, -254, -171,
	-126, 402, 403, -239, -238, 74, -238, 75, 75, 456,
	68, -3, -106, -290, -291, -292, 81, 439, 89, 202,
	203, 164, 204, 205, 206, -289, -225, -225, -225, -321,
	-322, -320, 244, 266, 267, 252, -319, -317, 261, 262,
	263, 264, 88, 74, 74, 74, -313, 235, 88, 244,
	16, 23, -293, -191, -330, -330, 238, -304, -78, -249,
	-152, 167, 168, -225, -225, -215, -256, 45, 72, -203,
	151, 23, 151, -152, -249, 30, 140, 27, -212, -147,
	13, -86, -165, -165, 122, -136, 110, -120, -120, -238,
	72, -120, -120, -120, -120, -334, -334, -334, -120, -334,
	74, 45, -140, -137, 47, -3, -333, -211, -167, -171,
	70, 69, -139, -111, -221, -334, -334, -334, -270, -269,
	67, 158, 81, -267, -166, -166, -259, 70, -239, -239,
	70, 70, -268, -164, 19, -164, -292, 74, 206, 202,
	206, 206, 206, 206, 207, -309, 81, 242, -320, 253,
	461, 237, 268, 75, 75, 109, 31, 32, -317, 75,
	75, 75, 75, -314, 16, 440, -312, 243, 74, 74,
	-294, 38, -296, 39, -329, 23, -329, 256, 11, 70,
	72, -226, -226, 68, -259, 68, 72, -211, -152, 29,
	29, -333, -148, 14, 16, -113, -81, -150, 16, -334,
	-334, -334, -334, -334, -334, -74, 108, 440, 9, -137,
	-3, 70, -211, -112, -269, 72, -260, 74, 165, 70,
	193, -20, -3, -9, -10, -11, -12, -14, -50, -15,
	-16, -21, -22, -17, -56, -57, -65, -63, -64, -60,
	-59, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, -35, 92, 153, 224, 293, 36, 36, 198, 199,
	74, 74, 29, 254, 134, 29, 75, 134, 407, 243,
	74, 72, 244, -235, 152, -297, 43, -295, -246, 42,
	16, -302, -86, -268, -215, -268, -120, -276, -277, 110,
	-158, 405, -149, -83, -135, -85, -83, -147, -165, -161,
	112, 111, -134, -334, 438, 63, 441, -176, -334, 75,
	-106, -271, -270, 194, -164, -83, -83, 72, -46, -217,
	227, 228, 229, -212, -36, -20, 75, 29, 75, 29,
	257, 244, 23, -172, 75, -296, 16, -298, 40, 41,
	74, 440, -113, 70, 68, 70, -334, 69, -211, -157,
	-159, -211, 69, -148, -334, -162, 91, -163, 109, 407,
	-124, 75, 134, -162, 53, 439, 442, 68, -153, 196,
	197, -37, -38, 93, 94, 225, 226, 230, -225, 69,
	503, 255, 255, 74, 38, 74, 16, 16, 236, -147,
	-271, -268, -271, -277, 47, 69, 23, -85, -158, -163,
	114, 115, 194, 114, 115, -119, 53, -171, -164, 72,
	72, 97, 95, -38, -83, -36, 19, 19, 19, 29,
	-212, 97, -20, 74, 74, 29, 241, 21, -305, -148,
	70, 180, -159, -160, 88, -211, 440, 70, -13, -19,
	-12, -9, -10, -11, 293, 92, -36, 94, 503, -47,
	75, -3, -45, -44, 75, -47, 232, 89, 233, 72,
	-120, 258, -158, -271, 181, -163, 441, -280, -281, 66,
	-164, -36, 503, -36, 97, 95, -39, -40, 96, -20,
	69, 231, -305, -333, 442, -281, 66, -280, 66, 10,
	9, 503, 97, 503, 153, -36, 97, 95, -40, -83,
	-44, -120, 178, -279, 166, 161, 164, 30, -279, 97,
	92, 503, 153, -36, 94, -334, -334, 160, 29, 83,
	97, 503, -36, 153, 97, 503, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 704, 704, 704, 704,
	704, 704, 800, -2, 569, 0, 0, 0, 0, -2,
	677, 678, 679, 683, 684, 699, 701, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 40,
	0, 0, 56, 57, 1108, 0, 702, 691, 692, 0,
	0, 1593, 2, 1046, 0, 713, 706, 0, 1108, 1108,
	0, 0, 87, 0, 0, 0, 801, 0, 0, 0,
	1106, 1106, 0, 1106, 1106, 0, 1121, 0, 1103, 1117,
	1118, 1119, 0, 0, 1104, 0, 1104, 1104, 1104, 1104,
	1104, 1104, 1104, 0, 626, 818, 1130, 1131, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 0, 0, 0, 670, 0, 636, 637, 638, 0,
	640, 0, 0, 0, 0, 0, 650, 653, 657, 0,
	1046, 1046, 515, 516, 517, 674, 675, 664, 676, 0,
	0, 0, 0, 0, 703, 305, 307, 0, 327, 0,
	330, 333, 1136, 685, 0, 0, 1161, 1162, 0, 0,
	0, 0, 0, 1465, 181, 244, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 0, 183, 183, 183, 1473,
	183, 0, 183, 183, 183, 183, 183, 243, 233, 234,
	235, 0, 0, 0, 1465, 0, 496, 493, 494, 704,
	0, 708, 0, 1109, 680, 45, 0, 47, 1062, 802,
	803, 804, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 0, 1052, 0, 0, 716, 714,
	715, 705, 0, 727, 757, 0, 827, 0, 832, 834,
	-2, -2, 0, 875, 876, 877, 878, 879, 880, 0,
	0, 0, 0, 0, 0, 0, 0, 904, 905, 906,
	907, 908, 909, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1535, 1536, 1537, 1538, 1540, 1541, 1543, 1550, 1551,
	1554, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568,
	1573, 1575, 1577, 1580, 1581, 1582, 1583, 1585, 1586, 1587,
	1589, 1590, 1591, 836, 837, 1016, 1075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1007, 0,
	978, 978, 978, 978, 978, 978, 978, 978, 978, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 67, 69,
	818, 73, 1514, 0, 1080, -2, -2, 1082, 0, 0,
	0, -2, -2, -2, -2, 1351, -2, 1016, 0, 88,
	1038, 704, 89, 0, 370, 371, 0, 0, 539, 1128,
	1129, 0, 1124, 1125, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 0, 607,
	0, 608, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 627, 628, 670, 630,
	0, 0, 1106, 1106, 0, 0, 0, 0, 541, 542,
	670, 670, 670, 670, 667, 0, 667, 647, 667, 665,
	666, 0, 652, 0, 0, 0, 660, 661, 686, 0,
	0, 693, 695, 696, 697, 698, 694, 0, 0, 0,
	309, 0, 0, 329, 311, 0, 314, 315, 316, 317,
	318, 319, 320, 321, 322, 323, 324, 325, 0, 332,
	0, 1134, 1137, 690, 1152, 1153, 0, 1163, 1164, 187,
	187, 0, 0, 0, 0, 150, 183, 0, 152, 183,
	183, 183, 0, 183, 183, 159, 160, 183, 162, 163,
	164, 165, 166, 183, 168, 169, 170, 183, 183, 173,
	183, 183, 176, 177, 178, 179, 180, 242, 187, 0,
	0, 187, 0, 0, 478, 0, 0, 0, 0, 483,
	484, 485, 486, 0, 0, 489, 490, 713, 42, 52,
	0, 709, 710, 0, 0, 0, 46, 0, 0, 51,
	1594, 37, 0, 0, 1047, 1050, 1051, 1039, 1040, 1043,
	0, 0, 711, 717, 718, 707, 0, 728, 0, 0,
	0, 758, 0, 760, 761, 762, 763, 0, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 855,
	856, 857, 858, 859, 860, 833, 0, 847, 0, 0,
	0, 896, 897, 898, 899, 900, 901, 902, 0, 716,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	0, 716, 0, 0, 873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 716, 0, 1008, 0, 961,
	970, 0, 962, 971, 963, 972, 964, 0, 965, 973,
	966, 974, 967, 968, 975, 969, 0, 869, 0, 0,
	71, 0, 817, 0, 764, 766, 767, 768, -2, 0,
	821, 867, -2, 0, 0, 0, 63, 64, 0, 0,
	0, 0, 74, 76, 0, 0, 1514, 1083, 1084, 470,
	1097, 1098, 1099, 0, 1095, 0, 1046, 713, 556, 0,
	372, 381, 460, 390, 391, 392, 453, 394, 453, 453,
	0, 453, 453, 453, 453, 453, 467, 467, 467, 467,
	467, 436, 437, 438, 439, 440, 0, 0, 413, 453,
	453, 453, 417, 443, 444, 445, 446, 447, 448, 449,
	450, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 455, 455, 457, 457, 457, 457, 457, 0, 0,
	538, 0, 1122, 85, 0, 93, 0, 94, 0, 0,
	99, 260, 246, 98, 0, 232, 0, 0, 0, 0,
	237, 622, 1105, 0, 615, 65, 616, 617, 618, 619,
	620, 239, 621, 819, 1132, 1133, 629, 671, 672, 0,
	0, 633, 634, 635, 543, 641, 642, 643, 649, 670,
	0, 0, 0, 782, 670, 651, 861, 654, 978, 0,
	688, 687, 0, 700, 306, 308, 310, 328, 0, 0,
	331, 334, 0, 0, 0, 0, 1155, 0, 1157, 1159,
	0, 0, 188, 189, 190, 0, 182, 0, 205, 245,
	0, 151, 0, 185, 153, 154, 155, 183, 157, 158,
	161, 167, 171, 172, 174, 175, 241, 0, 0, 0,
	0, 148, 0, 479, 480, 481, 482, 491, 488, 716,
	0, 0, 681, 682, 48, 0, 0, 1064, 1053, 0,
	0, 0, 0, 1042, 1044, 1045, 0, 0, 1027, 0,
	0, 719, 712, 39, 828, 829, 831, 848, 0, 850,
	852, 759, 729, 0, 1017, -2, 838, 839, 863, 864,
	865, 0, 0, 0, 0, 861, 843, 0, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	895, 992, 993, 0, 893, 894, 903, 0, 0, 871,
	723, 724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 869, 866, 0, 1074, 0, 0, 0,
	943, 0, 0, 878, 1019, 0, 878, 1019, 0, 0,
	0, 0, 0, 0, 0, 1014, 1011, 0, 0, 979,
	0, 0, 0, 870, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 805, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 775, 0, 777,
	0, 821, 0, 0, 0, 825, 0, 825, 68, 825,
	70, 0, 820, 1081, 0, 0, 0, 79, 80, 75,
	1085, 0, 1091, 1092, 1093, 1017, 0, 1052, 716, 369,
	557, 559, 562, 563, 564, 373, 375, 376, 377, 0,
	522, 530, 0, 0, -2, 522, 0, -2, -2, 380,
	462, 461, 393, 0, 467, 467, 453, 453, 453, 453,
	422, 467, 425, 428, 429, 470, 0, 470, 470, 470,
	470, 467, 0, 0, 414, 415, 416, 405, 0, 406,
	455, 408, 0, 409, 410, 411, 412, 536, 537, 0,
	0, 0, 0, 0, 1107, 0, 262, 263, 208, 101,
	0, 0, 247, 0, 368, 0, 609, 0, 611, 236,
	613, 623, 624, 614, 0, 0, 631, 632, 825, 0,
	0, 644, 668, 669, 667, 670, 0, 648, 662, 0,
	0, 655, 0, 689, 312, 313, 335, 71, 0, 1135,
	1154, 0, 1158, 1160, 0, 191, 193, 0, 142, 0,
	0, 184, 0, 156, 0, 0, 0, 0, 0, 487,
	0, 711, 53, 570, 571, -2, 600, 1114, 600, 600,
	588, 506, 600, 0, 49, 0, 1063, 0, 0, 0,
	1048, 1049, 1041, 0, 1100, 1101, 1028, 1029, 86, 720,
	849, 851, 853, 0, 869, 840, 861, 844, 0, 841,
	0, 835, 0, 0, 738, 0, 738, 738, 0, 929,
	0, 930, 957, 0, 942, 738, 738, 0, 0, 0,
	0, 0, 0, 936, 937, 938, 939, 738, 738, 738,
	738, 0, 0, 0, 738, 738, 738, 0, 874, -2,
	940, 941, 0, 0, 0, 0, 0, 985, 0, 0,
	986, 951, 0, 0, 0, 0, 0, 1038, 0, 1012,
	0, 0, 960, 980, 981, 982, 983, 984, 1068, 0,
	0, 0, 1057, 0, 825, 1076, 0, 0, 765, 796,
	798, 0, 793, 806, 807, 809, 0, 811, 0, 813,
	814, 784, 771, 868, 772, 0, 0, 0, 821, 781,
	0, 0, 0, 1038, 0, 825, 61, 62, 0, 77,
	78, 0, 0, 84, 471, 472, 0, 207, 0, 560,
	0, 374, 0, 523, 0, 0, 508, 522, 518, 519,
	522, 513, 523, 514, 0, 382, 0, 384, 385, 386,
	387, 388, 0, 0, 466, 0, 474, 476, 0, 389,
	463, 0, 470, 470, 467, 420, 421, 453, 426, 470,
	430, 0, 431, 432, 433, 434, 470, 0, 451, 0,
	0, 407, 0, 553, 0, 1123, 85, 85, 0, 264,
	265, 266, 0, 209, 210, 0, 0, 0, 0, 111,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 66,
	240, 639, 544, 545, 670, 646, 0, 862, 656, 658,
	659, 467, 0, 1156, 0, 0, 0, 0, 0, 203,
	186, 0, 0, 0, 0, 149, 0, 719, 0, 0,
	522, 0, 589, 590, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 1116, 0, 0,
	0, 507, 0, 0, 1066, 1065, 1054, 38, 825, 0,
	730, 1018, 0, 842, 0, 845, 738, 872, 914, 739,
	725, 0, 915, 916, 738, 731, 732, 734, 931, 918,
	919, 932, 933, 934, 738, 738, 935, 923, 922, 921,
	924, 0, 0, 738, 927, 926, 928, 910, 0, 453,
	453, 997, 453, 457, 1000, 453, 1002, 453, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1009, 959, 1015, 0, 54, 0, 1068, 1055, 1070, 1072,
	0, 0, 0, 0, -2, 1337, 0, 788, 1038, 0,
	0, 0, 790, 797, 0, 0, 791, 0, 792, 810,
	812, 769, 0, 0, 773, 0, 0, -2, 780, 0,
	0, 0, 1046, 826, 60, 81, 82, 83, 558, 561,
	0, 524, 453, 453, 0, 528, 520, 529, 510, 512,
	0, 383, 464, 0, 473, 475, 477, 454, 418, 419,
	470, 427, 423, 468, 469, 435, 467, 0, 467, 0,
	458, 0, 540, 554, 0, 0, 91, 0, 0, 216,
	0, 212, 0, 0, 0, 119, 0, 102, 103, 104,
	106, 107, 0, 0, 0, 100, 0, 249, 0, 252,
	253, 610, 612, 645, 783, 1146, 815, 203, 192, 194,
	195, 203, 206, 143, 0, 144, 146, 0, 145, 492,
	86, 572, 0, 597, 0, 0, 1122, 520, 0, -2,
	575, 580, 581, 582, 583, 584, 0, 595, 0, 577,
	0, 597, 0, 592, 0, 0, 0, 1030, 0, 86,
	86, 911, 846, 913, 0, 917, 736, 735, 912, 920,
	0, 0, 925, 944, 994, 467, 998, 999, 1001, 1003,
	1004, 1006, 946, 945, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 0, 0, 1013, 0, 55, 0, 1073,
	-2, 0, 0, 72, 0, 1046, 1077, 1078, 1079, 794,
	0, 799, 0, 786, 0, 821, 778, 0, 0, 0,
	0, 59, 498, 0, 1043, 1043, 509, 522, 521, 0,
	465, 0, 0, 424, 470, 452, 470, 0, 0, 555,
	0, 85, 0, 85, 217, 218, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 211, 213, 214, 215, 137,
	120, 121, 0, 0, 0, 0, 112, 113, 0, 0,
	0, 0, 0, 108, 109, 110, 248, 0, 0, 251,
	0, 0, 1148, 1142, 196, 196, 0, 147, 0, 0,
	574, 598, 0, 381, 381, 0, 522, 0, 591, 0,
	1112, 1113, 0, 586, 597, 0, 0, 0, 1067, 1035,
	0, 825, 0, 721, 726, 1038, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 953, 954, 955, 987, 958,
	1010, 0, 1071, 1056, 0, 1060, 0, 789, 58, 0,
	785, 0, 774, 776, 821, 822, 823, 824, 497, 501,
	0, 506, 0, 525, 526, 527, 511, 0, 441, 442,
	456, 459, 0, 92, 0, 0, 219, 220, 221, 222,
	224, 225, 0, 0, 0, 97, 0, 0, 122, 0,
	0, 0, 0, 132, 133, 134, 135, 136, 114, 115,
	116, 117, 118, 105, 0, 0, 250, 0, 255, 256,
	1110, 1150, -2, 0, 140, 0, 141, 204, 0, 573,
	599, 378, 379, 0, 1122, 0, 576, 585, 587, 0,
	594, 0, 750, 0, 0, 1030, 86, 740, 0, 976,
	977, 947, 949, 948, 950, 0, 0, 0, 0, 1059,
	0, 795, 787, 779, 502, 503, 0, 505, 0, 499,
	0, 85, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 0, 0, 0, 226, 227, 228, 229,
	138, 139, 123, 124, 0, 126, 127, 0, 0, 0,
	258, 0, 254, 784, 0, 1142, 0, 1144, 0, 1141,
	0, 197, 825, 0, 0, 0, 593, 0, 603, 0,
	43, 0, 1036, 1037, 1031, 1032, 1034, 1035, 722, 0,
	0, 0, 737, 956, 0, 0, 0, 1069, -2, 504,
	0, 90, 500, 267, 96, 0, 0, 1124, 0, 0,
	294, 295, 296, 1126, 0, 336, 0, 128, 0, 130,
	131, 257, 0, 36, 0, 1149, 0, 1147, 0, 0,
	1143, 0, 1030, 499, 0, 499, 602, 0, 0, 751,
	752, 0, 0, 750, 733, 741, 0, 744, 0, 0,
	0, 755, 0, 742, 988, 0, 991, 0, 85, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 292, 0,
	0, 125, 129, 259, 1111, 1151, 0, 0, 0, 1035,
	578, 0, 596, 604, 0, 0, 0, 1033, 44, 0,
	745, 746, 747, 748, 749, 0, 989, 0, 0, 268,
	269, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	1127, 230, 337, 1145, 1139, 198, 199, 200, 202, 750,
	499, 0, 753, 754, 0, 756, 0, 531, 85, 270,
	271, 272, 273, 274, 0, 276, 0, 0, 0, 288,
	289, 290, 0, 297, 299, 300, 301, 0, 303, 304,
	293, 0, 41, 579, 0, 743, 0, 532, 533, 0,
	95, 0, 0, 0, 0, 0, 0, 285, 0, 291,
	0, 302, 201, 0, 990, 534, 0, 535, 0, 0,
	0, 0, 0, 280, 281, 0, 0, 0, 286, 0,
	298, 0, 0, 546, 548, 549, 0, 0, 547, 275,
	277, 0, 283, 0, 0, 605, 606, 550, 551, 552,
	0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:486
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:493
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:528
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:534
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:540
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:553
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:564
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:577
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:584
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:593
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:613
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:639
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:651
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:673
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:679
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:687
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:691
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:734
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:740
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:744
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:751
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:764
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:770
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:801
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:806
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:812
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:831
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:835
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:839
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:843
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:851
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:859
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:863
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:867
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:886
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:904
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:922
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:949
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:977
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:986
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1000
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1030
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1078
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1083
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1087
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1091
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1097
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1102
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1114
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1118
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1148
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1259
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1304
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1374
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1411
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1421
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1425
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1473
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1510
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1574
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1588
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1600
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1604
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1608
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1685
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1691
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1695
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1717
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1722
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1727
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1733
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1751
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1856
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1872
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2018
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2034
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2057
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2061
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2459
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2490
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2498
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2507
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2517
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = yyDollar[1].str
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2657
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.indexOptions = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2690
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2715
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2723
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = yyDollar[1].str
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2778
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2802
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 531:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2822
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 532:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2826
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 533:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2830
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 534:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2834
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 535:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2838
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2862
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2891
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.boolean = false
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = string("")
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3002
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3025
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3032
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3043
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3052
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 579:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3056
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3084
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3095
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3117
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3126
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3130
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3138
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3145
		{
			yyVAL.columnOrder = nil
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3158
		{
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3164
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3174
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3180
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3184
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3204
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3216
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3222
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3230
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3234
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3242
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3250
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3258
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3266
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3274
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3282
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3291
		{

		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3305
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3333
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3337
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3365
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3385
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3389
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 646:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3394
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3403
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3407
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3415
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3433
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3442
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3451
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3455
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3475
		{
			yyVAL.boolean = false
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.boolean = true
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
			yyVAL.showFilter = nil
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = ""
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = SessionStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = GlobalStr
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.statement = &Begin{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.statement = &Begin{}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3561
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3565
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = &Commit{}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Rollback{}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3597
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3601
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3617
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3655
		{
			setAllowComments(yylex, true)
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.bytes2 = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = UnionStr
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = UnionAllStr
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = UnionDistinctStr
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3688
		{
			yyVAL.byt = 0
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.byt = 1
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = SQLCacheStr
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = DistinctStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = StraightJoinHint
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3741
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3764
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3782
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3798
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3803
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3811
		{
			yyVAL.exprs = nil
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3815
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3820
		{
			yyVAL.over = nil
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.over = yyDollar[1].over
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3829
		{
			yyVAL.frame = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3886
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3909
		{
			yyVAL.window = nil
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.window = yyDollar[2].window
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3927
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3981
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3995
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4011
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4017
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4023
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4027
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4038
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4053
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4057
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.expr = nil
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4085
		{
			yyVAL.columns = nil
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4089
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4109
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4122
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4126
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4130
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4134
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4142
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4146
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = JoinStr
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = JoinStr
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = JoinStr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = StraightJoinStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = LeftJoinStr
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = LeftJoinStr
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = RightJoinStr
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = RightJoinStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = NaturalJoinStr
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4226
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4257
		{
			yyVAL.indexHints = nil
		}
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4261
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4265
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4269
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.expr = nil
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4342
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4346
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4350
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4358
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4362
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4366
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = IsNullStr
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = IsNotNullStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = IsTrueStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = IsNotTrueStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = IsFalseStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = IsNotFalseStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = EqualStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = LessThanStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = GreaterThanStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = LessEqualStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = GreaterEqualStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = NotEqualStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4431
		{
			yyVAL.expr = nil
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4471
		{
			yyVAL.selectExprs = nil
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4582
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4586
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4594
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4658
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4810
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4814
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4822
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4826
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 956:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = ""
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = BooleanModeStr
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 990:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = QueryExpansionStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5029
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5037
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5041
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5045
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = nil
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5089
		{
			yyVAL.str = string("")
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5093
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5109
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5114
		{
			yyVAL.expr = nil
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5128
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5132
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &NullVal{}
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{
			yyVAL.exprs = nil
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5195
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5199
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = nil
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5225
		{
			yyVAL.orderBy = nil
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5239
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5245
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = AscScr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = AscScr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = DescScr
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5263
		{
			yyVAL.limit = nil
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5271
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5275
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = ForUpdateStr
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = ShareModeStr
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5311
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5315
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5323
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5328
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5332
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5336
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5342
		{
			yyVAL.columns = nil
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5346
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5352
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5356
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5360
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5364
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
			yyVAL.assignExprs = nil
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5373
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5383
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5399
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5419
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5425
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5455
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5468
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5481
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5511
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5541
		{
			yyVAL.expr = &Default{}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5550
		{
			yyVAL.byt = 0
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.byt = 1
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5555
		{
			yyVAL.byt = 0
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5557
		{
			yyVAL.byt = 1
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5560
		{
			yyVAL.byt = 0
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5562
		{
			yyVAL.byt = 1
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = IgnoreStr
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5570
		{
			yyVAL.sqlVal = nil
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			yyVAL.empty = struct{}{}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.empty = struct{}{}
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.empty = struct{}{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.empty = struct{}{}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = UniqueStr
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.str = FulltextStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = SpatialStr
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5596
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5601
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5603
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5607
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5621
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = string("")
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5655
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5660
		{
			yyVAL.EnclosedBy = nil
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5664
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5669
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5673
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5678
		{
			yyVAL.sqlVal = nil
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5682
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5687
		{
			yyVAL.sqlVal = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5696
		{
			yyVAL.Fields = nil
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5700
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5705
		{
			yyVAL.Lines = nil
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5709
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.sqlVal = nil
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5724
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5734
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5740
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5744
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.lockType = LockRead
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5754
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.lockType = LockWrite
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5762
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5768
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5774
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
