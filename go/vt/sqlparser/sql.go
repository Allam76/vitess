// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const LOCAL = 57606
const LOW_PRIORITY = 57607
const NULLX = 57608
const AUTO_INCREMENT = 57609
const APPROXNUM = 57610
const SIGNED = 57611
const UNSIGNED = 57612
const ZEROFILL = 57613
const COLLATION = 57614
const DATABASES = 57615
const SCHEMAS = 57616
const TABLES = 57617
const FULL = 57618
const PROCESSLIST = 57619
const COLUMNS = 57620
const FIELDS = 57621
const ENGINES = 57622
const PLUGINS = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_USER = 57640
const CURRENT_TIME = 57641
const LOCALTIME = 57642
const LOCALTIMESTAMP = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const GROUP_CONCAT = 57652
const SEPARATOR = 57653
const TIMESTAMPADD = 57654
const TIMESTAMPDIFF = 57655
const OVER = 57656
const WINDOW = 57657
const GROUPING = 57658
const GROUPS = 57659
const AVG = 57660
const BIT_AND = 57661
const BIT_OR = 57662
const BIT_XOR = 57663
const COUNT = 57664
const JSON_ARRAYAGG = 57665
const JSON_OBJECTAGG = 57666
const MAX = 57667
const MIN = 57668
const STDDEV_POP = 57669
const STDDEV = 57670
const STD = 57671
const STDDEV_SAMP = 57672
const SUM = 57673
const VAR_POP = 57674
const VARIANCE = 57675
const VAR_SAMP = 57676
const CUME_DIST = 57677
const DENSE_RANK = 57678
const FIRST_VALUE = 57679
const LAG = 57680
const LAST_VALUE = 57681
const LEAD = 57682
const NTH_VALUE = 57683
const NTILE = 57684
const ROW_NUMBER = 57685
const PERCENT_RANK = 57686
const RANK = 57687
const MATCH = 57688
const AGAINST = 57689
const BOOLEAN = 57690
const LANGUAGE = 57691
const WITH = 57692
const QUERY = 57693
const EXPANSION = 57694
const UNUSED = 57695
const ARRAY = 57696
const DESCRIPTION = 57697
const EMPTY = 57698
const EXCEPT = 57699
const JSON_TABLE = 57700
const LATERAL = 57701
const MEMBER = 57702
const RECURSIVE = 57703
const ACTIVE = 57704
const ADMIN = 57705
const BUCKETS = 57706
const CLONE = 57707
const COMPONENT = 57708
const DEFINITION = 57709
const ENFORCED = 57710
const EXCLUDE = 57711
const FOLLOWING = 57712
const GEOMCOLLECTION = 57713
const GET_MASTER_PUBLIC_KEY = 57714
const HISTOGRAM = 57715
const HISTORY = 57716
const INACTIVE = 57717
const INVISIBLE = 57718
const LOCKED = 57719
const MASTER_COMPRESSION_ALGORITHMS = 57720
const MASTER_PUBLIC_KEY_PATH = 57721
const MASTER_TLS_CIPHERSUITES = 57722
const MASTER_ZSTD_COMPRESSION_LEVEL = 57723
const NESTED = 57724
const NETWORK_NAMESPACE = 57725
const NOWAIT = 57726
const NULLS = 57727
const OJ = 57728
const OLD = 57729
const OPTIONAL = 57730
const ORDINALITY = 57731
const ORGANIZATION = 57732
const OTHERS = 57733
const PATH = 57734
const PERSIST = 57735
const PERSIST_ONLY = 57736
const PRECEDING = 57737
const PRIVILEGE_CHECKS_USER = 57738
const PROCESS = 57739
const RANDOM = 57740
const REFERENCE = 57741
const REQUIRE_ROW_FORMAT = 57742
const RESOURCE = 57743
const RESPECT = 57744
const RESTART = 57745
const RETAIN = 57746
const REUSE = 57747
const ROLE = 57748
const SECONDARY = 57749
const SECONDARY_ENGINE = 57750
const SECONDARY_LOAD = 57751
const SECONDARY_UNLOAD = 57752
const SKIP = 57753
const SRID = 57754
const THREAD_PRIORITY = 57755
const TIES = 57756
const UNBOUNDED = 57757
const VCPU = 57758
const VISIBLE = 57759
const SYSTEM = 57760
const INFILE = 57761

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 49,
	-2, 835,
	-1, 41,
	140, 896,
	141, 922,
	-2, 118,
	-1, 48,
	180, 494,
	181, 494,
	-2, 484,
	-1, 55,
	1, 1340,
	437, 1340,
	-2, 520,
	-1, 436,
	127, 932,
	-2, 926,
	-1, 437,
	127, 933,
	-2, 927,
	-1, 538,
	97, 1161,
	127, 1161,
	-2, 880,
	-1, 539,
	97, 1263,
	127, 1263,
	-2, 881,
	-1, 544,
	97, 1181,
	127, 1181,
	-2, 882,
	-1, 545,
	97, 1221,
	127, 1221,
	-2, 883,
	-1, 546,
	97, 1222,
	127, 1222,
	-2, 884,
	-1, 547,
	97, 1116,
	127, 1116,
	-2, 888,
	-1, 549,
	97, 1200,
	127, 1200,
	-2, 890,
	-1, 984,
	1, 572,
	5, 572,
	12, 572,
	13, 572,
	14, 572,
	15, 572,
	17, 572,
	19, 572,
	30, 572,
	31, 572,
	56, 572,
	57, 572,
	58, 572,
	59, 572,
	60, 572,
	62, 572,
	63, 572,
	66, 572,
	67, 572,
	69, 572,
	70, 572,
	437, 572,
	-2, 602,
	-1, 988,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1184,
	127, 935,
	-2, 931,
	-1, 1347,
	68, 355,
	-2, 1082,
	-1, 1350,
	68, 351,
	71, 351,
	-2, 1017,
	-1, 1351,
	68, 352,
	71, 352,
	-2, 1027,
	-1, 1439,
	68, 429,
	71, 429,
	-2, 395,
	-1, 1484,
	5, 50,
	-2, 668,
	-1, 1801,
	1, 623,
	5, 623,
	12, 623,
	13, 623,
	14, 623,
	15, 623,
	17, 623,
	19, 623,
	30, 623,
	31, 623,
	56, 623,
	57, 623,
	58, 623,
	59, 623,
	60, 623,
	62, 623,
	63, 623,
	66, 623,
	67, 623,
	69, 623,
	70, 623,
	437, 623,
	-2, 602,
	-1, 1925,
	5, 50,
	-2, 855,
	-1, 2060,
	41, 942,
	-2, 940,
	-1, 2168,
	5, 50,
	-2, 858,
}

const yyPrivate = 57344

const yyLast = 25893

var yyAct = [...]int{

	470, 78, 434, 2269, 2315, 2185, 2290, 2281, 2280, 2171,
	2271, 2106, 7, 2074, 1935, 2105, 6, 2211, 1394, 2104,
	5, 2107, 8, 2157, 2151, 1814, 1017, 2034, 2060, 1795,
	1702, 2184, 390, 1548, 1998, 1392, 441, 1298, 82, 1576,
	1712, 428, 469, 736, 1775, 1352, 1161, 1962, 1980, 1815,
	1302, 421, 1304, 2172, 1325, 1601, 1864, 1711, 1776, 909,
	454, 558, 1344, 2103, 3, 1655, 746, 1296, 1549, 1772,
	367, 370, 388, 1781, 101, 363, 1468, 1333, 1757, 78,
	1384, 1437, 1334, 1787, 1154, 984, 1723, 1679, 1420, 1678,
	1209, 560, 1248, 1170, 1340, 1141, 1280, 1097, 1380, 1186,
	1348, 1638, 1117, 1240, 817, 981, 1287, 813, 794, 439,
	555, 1368, 540, 773, 1222, 554, 536, 387, 859, 999,
	998, 424, 532, 925, 990, 2337, 772, 543, 537, 2333,
	2323, 2305, 364, 365, 366, 926, 2303, 556, 2285, 2264,
	2219, 529, 420, 81, 1139, 1845, 723, 84, 1956, 2084,
	874, 873, 883, 884, 876, 877, 878, 879, 880, 881,
	882, 875, 67, 1243, 885, 2296, 2204, 980, 2279, 1963,
	34, 34, 34, 2165, 2252, 2203, 850, 1965, 34, 1740,
	2164, 1514, 1910, 86, 87, 88, 89, 90, 700, 701,
	1810, 1811, 728, 1432, 1543, 1585, 104, 1809, 1584, 1322,
	1323, 1586, 1000, 748, 1001, 1145, 1321, 749, 750, 378,
	377, 1544, 2019, 34, 1621, 70, 37, 38, 483, 1300,
	489, 491, 490, 487, 488, 486, 485, 484, 1143, 1144,
	1355, 1354, 79, 79, 79, 492, 493, 1724, 96, 1431,
	79, 70, 37, 38, 791, 1356, 1968, 1356, 1360, 1362,
	1369, 1361, 112, 108, 109, 1374, 110, 1369, 2005, 1901,
	727, 731, 1899, 39, 733, 1381, 357, 376, 385, 1126,
	757, 1142, 2294, 2216, 2266, 79, 2214, 2215, 2057, 1726,
	2056, 2055, 1966, 1967, 1969, 1970, 1971, 368, 703, 114,
	113, 98, 2054, 1613, 2053, 95, 2051, 729, 732, 2052,
	730, 106, 105, 1401, 2136, 2137, 2208, 2209, 1618, 1617,
	2173, 1656, 1937, 1568, 2101, 743, 744, 751, 745, 752,
	749, 750, 2278, 742, 741, 705, 704, 2251, 1400, 2152,
	1614, 1705, 1281, 2319, 2099, 1756, 1016, 360, 735, 735,
	1818, 102, 1981, 1982, 1619, 1016, 1611, 1657, 1015, 2329,
	735, 103, 1612, 358, 371, 2338, 1869, 2035, 1728, 1684,
	78, 78, 443, 1732, 1016, 1727, 2335, 1725, 2324, 2306,
	2037, 762, 1730, 361, 702, 764, 711, 2139, 83, 763,
	1595, 799, 383, 1073, 384, 1729, 734, 1307, 1309, 807,
	384, 1991, 1078, 2275, 1660, 372, 2270, 1087, 759, 1575,
	1731, 1733, 1574, 1573, 698, 1673, 803, 706, 332, 2085,
	2273, 1616, 107, 1892, 369, 1885, 1990, 897, 898, 1589,
	1581, 1487, 1473, 761, 765, 1458, 111, 1165, 1127, 758,
	369, 1658, 1659, 1011, 726, 104, 894, 1016, 1628, 896,
	1359, 2036, 1844, 1369, 996, 1383, 1599, 899, 900, 901,
	902, 903, 904, 905, 906, 1964, 819, 2317, 2260, 1994,
	2318, 1016, 2316, 863, 1016, 97, 865, 719, 1308, 907,
	1326, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 2163, 924, 927, 927, 927, 933, 927, 927,
	933, 927, 933, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 796, 985, 71,
	1145, 77, 77, 77, 908, 1915, 369, 1989, 369, 77,
	106, 105, 1598, 798, 875, 2272, 2274, 885, 1615, 885,
	1599, 1317, 1118, 1143, 1144, 71, 1157, 725, 1699, 858,
	1193, 1995, 1411, 739, 1834, 979, 856, 1495, 93, 1703,
	1492, 1599, 1599, 543, 77, 1191, 1192, 1190, 543, 753,
	1599, 1785, 1742, 858, 808, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 2322, 1602, 878,
	879, 880, 881, 882, 875, 92, 1134, 885, 928, 930,
	932, 934, 936, 938, 939, 941, 1835, 1009, 766, 1074,
	929, 931, 707, 935, 937, 2261, 940, 2309, 2291, 2308,
	1450, 874, 873, 883, 884, 876, 877, 878, 879, 880,
	881, 882, 875, 1080, 1449, 885, 1598, 986, 1119, 1003,
	724, 1822, 1686, 1684, 1004, 994, 1241, 1692, 1412, 740,
	1691, 1694, 1162, 1163, 853, 1014, 809, 1598, 1598, 710,
	989, 2187, 755, 1686, 1684, 2169, 1598, 1687, 1016, 1698,
	2330, 1688, 1685, 1695, 897, 898, 1454, 897, 898, 1421,
	1241, 1955, 1503, 1954, 116, 1448, 1491, 1490, 1687, 1489,
	1470, 1471, 1472, 362, 874, 873, 883, 884, 876, 877,
	878, 879, 880, 881, 882, 875, 857, 856, 885, 1643,
	857, 856, 735, 857, 856, 737, 1913, 2326, 382, 735,
	735, 735, 79, 2331, 858, 1641, 756, 531, 858, 1622,
	552, 858, 1189, 699, 735, 735, 1446, 1440, 1441, 2248,
	1439, 814, 1442, 1443, 815, 709, 770, 2247, 1124, 857,
	856, 2221, 1210, 718, 1211, 874, 873, 883, 884, 876,
	877, 878, 879, 880, 881, 882, 875, 858, 769, 885,
	713, 714, 715, 716, 717, 857, 856, 1452, 1455, 873,
	883, 884, 876, 877, 878, 879, 880, 881, 882, 875,
	78, 895, 885, 858, 2212, 735, 2236, 1153, 2235, 2193,
	2098, 1099, 1176, 1178, 1179, 2050, 526, 527, 1177, 2012,
	1952, 960, 961, 962, 963, 964, 948, 949, 950, 965,
	966, 951, 952, 953, 959, 967, 954, 955, 956, 957,
	958, 970, 969, 968, 971, 972, 974, 973, 975, 1137,
	1121, 1122, 1088, 883, 884, 876, 877, 878, 879, 880,
	881, 882, 875, 1147, 1827, 885, 1164, 1639, 1428, 1101,
	1185, 1447, 1131, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1113, 1114,
	987, 1224, 1152, 863, 1129, 1130, 1084, 78, 1132, 1445,
	876, 877, 878, 879, 880, 881, 882, 875, 2234, 1183,
	885, 1187, 911, 1102, 1135, 1644, 1104, 1105, 1146, 857,
	856, 857, 856, 1151, 1297, 2233, 2263, 1167, 2213, 809,
	1244, 857, 856, 1863, 857, 856, 1865, 858, 1451, 858,
	2212, 1587, 2096, 1588, 857, 856, 2026, 2253, 1148, 858,
	1168, 1744, 858, 1169, 1230, 1233, 2068, 1184, 1946, 2250,
	908, 1242, 858, 1182, 1602, 1307, 1309, 459, 458, 461,
	462, 463, 464, 2198, 809, 1220, 460, 465, 430, 1180,
	720, 1946, 2195, 1946, 2100, 1453, 1301, 2026, 2092, 1784,
	2064, 985, 2026, 2040, 2063, 985, 2026, 809, 2026, 2025,
	79, 1865, 1987, 1946, 1945, 1928, 809, 1213, 1214, 874,
	873, 883, 884, 876, 877, 878, 879, 880, 881, 882,
	875, 1457, 809, 885, 1880, 795, 1876, 1873, 1312, 1887,
	1577, 804, 1314, 1872, 543, 1870, 1855, 1289, 1292, 1293,
	1294, 1290, 1854, 1291, 1295, 1853, 1308, 1788, 1789, 908,
	1667, 1842, 1841, 1838, 1839, 1330, 1335, 556, 1666, 1306,
	1838, 1837, 1485, 809, 2044, 1254, 1422, 1256, 1284, 809,
	1218, 1425, 1217, 1219, 1409, 1408, 1212, 1074, 1227, 1128,
	735, 1125, 735, 1096, 1216, 1310, 1095, 1888, 1099, 1218,
	809, 1469, 1094, 1093, 1085, 1083, 1082, 1081, 1238, 1079,
	1013, 1012, 1577, 1184, 992, 992, 792, 721, 1100, 1331,
	375, 373, 1252, 1253, 1319, 1106, 1107, 1108, 1315, 1259,
	1260, 1261, 1262, 1324, 1341, 2062, 1318, 83, 2043, 1338,
	1115, 1116, 1850, 1828, 83, 1390, 1263, 1264, 1311, 1773,
	991, 1268, 1784, 1283, 1271, 1370, 1371, 1372, 1373, 1276,
	1386, 1387, 1388, 1389, 78, 1577, 2200, 1923, 1912, 1284,
	993, 993, 995, 991, 1851, 1159, 1382, 1840, 1797, 987,
	1676, 1590, 1320, 1485, 978, 1508, 988, 1507, 1133, 2230,
	1407, 1218, 1284, 1888, 1474, 991, 1160, 1140, 1485, 1086,
	997, 1150, 805, 819, 1476, 1477, 1478, 874, 873, 883,
	884, 876, 877, 878, 879, 880, 881, 882, 875, 1183,
	800, 885, 1784, 2206, 2196, 1430, 1158, 908, 874, 873,
	883, 884, 876, 877, 878, 879, 880, 881, 882, 875,
	806, 1188, 885, 1187, 1289, 1292, 1293, 1294, 1290, 1796,
	1291, 1295, 2066, 1957, 1424, 1356, 1393, 1423, 1933, 1429,
	1385, 1821, 1788, 1789, 2300, 1357, 1358, 1184, 1363, 1364,
	1365, 1366, 1367, 1331, 1413, 1462, 1460, 1461, 1381, 1419,
	1435, 1594, 79, 1402, 1376, 79, 1377, 1378, 1379, 1375,
	1075, 1546, 1547, 1479, 789, 985, 985, 985, 985, 985,
	1475, 2298, 2282, 1849, 1791, 1773, 1645, 1090, 1560, 1794,
	1558, 1793, 1301, 1561, 1569, 1559, 1557, 1556, 2202, 1482,
	1709, 1434, 985, 1459, 1562, 818, 1293, 1294, 1456, 1171,
	1550, 425, 426, 1433, 2228, 866, 851, 852, 1467, 1466,
	2017, 1513, 1515, 1604, 1875, 1826, 1825, 1596, 1521, 1522,
	1523, 1524, 2141, 1502, 1545, 2144, 2061, 2192, 987, 1578,
	2191, 2220, 1579, 987, 1580, 849, 543, 987, 531, 1572,
	2059, 1092, 910, 2135, 2134, 1220, 374, 1670, 1632, 1564,
	811, 1010, 787, 923, 771, 768, 1481, 1335, 1571, 1109,
	1110, 1111, 812, 767, 1484, 1486, 1112, 722, 2243, 2072,
	1488, 1552, 1553, 2071, 1555, 78, 1494, 1921, 1996, 1497,
	1498, 1499, 1563, 1427, 1603, 1074, 1505, 735, 1506, 735,
	735, 1509, 1510, 1397, 1511, 1512, 1591, 1089, 1516, 1517,
	1518, 1519, 1520, 1631, 1671, 1633, 1634, 1635, 1636, 1527,
	1528, 1529, 1003, 1531, 1532, 1706, 1534, 1535, 1536, 1537,
	1582, 1539, 1540, 1541, 1162, 1163, 1648, 1597, 1600, 1593,
	1665, 1149, 1551, 851, 852, 1554, 1418, 1297, 1647, 1077,
	801, 802, 1565, 1566, 1465, 2242, 1396, 2241, 1398, 1623,
	1624, 2240, 1464, 2047, 422, 2223, 1630, 2222, 1640, 2189,
	2145, 2076, 1642, 1718, 2016, 423, 1637, 83, 2075, 1999,
	1577, 1650, 1651, 1652, 2301, 1736, 1737, 1496, 1738, 1739,
	2302, 2301, 1172, 1493, 1120, 854, 2302, 2089, 1824, 1156,
	1745, 1746, 379, 381, 1677, 1748, 85, 1714, 54, 1668,
	2117, 51, 80, 1672, 2119, 19, 1674, 1675, 1690, 1,
	1689, 1183, 1700, 1701, 1682, 793, 1704, 2118, 18, 1741,
	1680, 1693, 1697, 2120, 20, 1778, 2190, 78, 2121, 21,
	1683, 2116, 15, 1188, 1249, 2115, 14, 2109, 10, 2128,
	30, 2127, 29, 2140, 1669, 1716, 2142, 1715, 2058, 1799,
	2126, 28, 1976, 1801, 1803, 1804, 1805, 1774, 1735, 1184,
	1550, 1734, 2124, 25, 1961, 1722, 1960, 1777, 1783, 1654,
	1625, 1626, 1627, 1629, 1653, 1749, 1750, 1751, 1752, 1753,
	1720, 2123, 24, 2125, 26, 2114, 13, 2111, 12, 788,
	1779, 1798, 2110, 11, 1138, 1806, 1823, 1103, 1808, 2108,
	9, 1681, 1444, 2150, 1802, 1282, 1342, 1332, 553, 91,
	1410, 1780, 738, 1714, 1335, 1985, 1335, 437, 1792, 1313,
	340, 1339, 1609, 1800, 2143, 1123, 1719, 987, 987, 987,
	987, 987, 790, 1819, 1608, 1605, 1820, 1390, 1817, 1620,
	1353, 1607, 1606, 2138, 987, 1610, 1847, 1848, 1812, 1021,
	1019, 1020, 1018, 1858, 987, 1813, 1023, 1022, 1829, 1830,
	1907, 910, 344, 1852, 119, 1833, 1005, 119, 2179, 1754,
	1755, 855, 1836, 119, 1760, 99, 55, 1763, 1988, 1696,
	1438, 94, 1768, 100, 747, 346, 893, 1153, 1463, 1583,
	541, 542, 534, 810, 2207, 119, 816, 2153, 1501, 922,
	1891, 1239, 442, 1567, 2156, 1175, 1395, 119, 457, 456,
	119, 563, 1403, 119, 1404, 1405, 1867, 1831, 1406, 455,
	452, 1908, 453, 1417, 1166, 119, 1542, 563, 1173, 1174,
	1074, 1886, 1861, 119, 1889, 1866, 1868, 1879, 1862, 867,
	1843, 440, 432, 983, 976, 1426, 1871, 1288, 1416, 874,
	873, 883, 884, 876, 877, 878, 879, 880, 881, 882,
	875, 1286, 1285, 885, 1859, 1091, 530, 1914, 795, 1790,
	1786, 1299, 1884, 1661, 982, 1663, 1664, 386, 68, 754,
	359, 1909, 1717, 910, 2083, 36, 380, 1228, 1229, 1897,
	427, 27, 17, 760, 22, 1857, 16, 1436, 1941, 1942,
	1943, 1550, 1929, 874, 873, 883, 884, 876, 877, 878,
	879, 880, 881, 882, 875, 708, 1948, 885, 40, 43,
	42, 1649, 1399, 2178, 1922, 2268, 774, 2289, 2210, 78,
	32, 31, 2122, 1930, 1939, 2129, 1335, 2113, 1944, 1832,
	2112, 2255, 23, 2254, 1758, 1759, 4, 1761, 1762, 1940,
	1764, 1765, 1766, 1767, 797, 1769, 1770, 1771, 69, 1890,
	1973, 1974, 1975, 33, 2, 1949, 1950, 1893, 985, 0,
	0, 0, 1983, 0, 0, 1591, 0, 0, 1902, 1903,
	0, 1329, 0, 1984, 0, 0, 0, 2006, 2007, 2008,
	2009, 2010, 1958, 0, 0, 2013, 2014, 1972, 0, 1978,
	1979, 0, 0, 0, 1778, 2000, 1977, 2021, 1992, 2001,
	2002, 1390, 1817, 0, 0, 0, 1714, 1993, 1799, 0,
	0, 0, 1924, 1925, 1926, 1927, 0, 0, 2024, 1951,
	0, 1953, 0, 0, 0, 1894, 1895, 0, 1896, 0,
	0, 1898, 0, 1900, 1938, 0, 1777, 1391, 0, 1986,
	119, 0, 0, 0, 0, 563, 563, 2046, 0, 2048,
	2027, 2023, 2018, 2045, 0, 0, 0, 563, 0, 2028,
	2020, 0, 0, 0, 2039, 0, 2038, 2073, 0, 2033,
	0, 0, 0, 0, 0, 0, 2041, 2004, 2042, 2049,
	0, 1306, 0, 2029, 0, 119, 0, 0, 0, 0,
	1778, 119, 78, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 2067, 2070, 2078, 0, 0, 0, 1947, 0, 78,
	0, 0, 818, 468, 2102, 1662, 0, 0, 0, 1906,
	0, 2095, 1777, 985, 2090, 0, 0, 2097, 862, 987,
	0, 0, 0, 2011, 2149, 0, 2088, 0, 2015, 0,
	0, 0, 2094, 0, 0, 2091, 0, 0, 0, 0,
	1916, 1917, 2147, 0, 0, 0, 1918, 0, 1905, 1919,
	2146, 0, 0, 2148, 1920, 2030, 2031, 2032, 2155, 2159,
	1483, 1710, 2160, 0, 0, 0, 0, 0, 0, 2161,
	0, 2174, 0, 2167, 0, 0, 1550, 2166, 0, 0,
	0, 0, 0, 1504, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 559, 874, 873,
	883, 884, 876, 877, 878, 879, 880, 881, 882, 875,
	0, 0, 885, 712, 119, 119, 119, 0, 2186, 2188,
	2079, 2080, 2081, 2082, 2201, 0, 2183, 2086, 2087, 0,
	563, 0, 0, 0, 0, 0, 2194, 874, 873, 883,
	884, 876, 877, 878, 879, 880, 881, 882, 875, 0,
	2095, 885, 0, 0, 0, 2225, 2217, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 0,
	78, 2231, 2226, 2227, 2229, 2246, 2232, 0, 2237, 2224,
	0, 0, 0, 2159, 0, 0, 0, 78, 2249, 0,
	0, 0, 78, 0, 2259, 2239, 2276, 2162, 2258, 0,
	987, 2265, 2257, 0, 2256, 2168, 0, 0, 0, 0,
	2277, 78, 2244, 0, 78, 78, 0, 0, 2262, 78,
	2246, 0, 0, 2283, 2292, 0, 0, 0, 0, 2295,
	0, 0, 0, 0, 0, 0, 78, 0, 2297, 78,
	2299, 2246, 2284, 1846, 0, 2286, 2310, 2312, 2313, 0,
	0, 0, 0, 0, 78, 2267, 78, 2320, 1856, 2246,
	78, 2246, 0, 0, 2197, 1904, 0, 0, 0, 0,
	2307, 1860, 0, 0, 78, 0, 0, 78, 0, 2246,
	2205, 0, 0, 0, 78, 0, 563, 0, 78, 2246,
	0, 2325, 0, 2246, 1877, 0, 0, 0, 119, 0,
	0, 119, 0, 0, 0, 0, 0, 119, 2334, 563,
	0, 0, 0, 0, 0, 0, 563, 563, 563, 119,
	119, 119, 0, 0, 0, 0, 119, 0, 0, 0,
	0, 563, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 559, 0, 0, 1743, 352, 0, 0, 0,
	0, 0, 0, 559, 874, 873, 883, 884, 876, 877,
	878, 879, 880, 881, 882, 875, 0, 0, 885, 0,
	0, 0, 0, 0, 0, 987, 1480, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 0, 0, 0, 0,
	0, 119, 563, 119, 0, 563, 0, 874, 873, 883,
	884, 876, 877, 878, 879, 880, 881, 882, 875, 0,
	0, 885, 0, 0, 0, 0, 0, 1221, 1226, 1807,
	0, 0, 1232, 1235, 1236, 1237, 0, 2327, 2328, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 119, 336, 0, 0, 0, 1959, 862, 1247,
	0, 1250, 1251, 345, 350, 351, 1255, 0, 1257, 1258,
	0, 0, 0, 0, 0, 0, 1265, 1266, 1267, 0,
	1269, 1270, 0, 1272, 1273, 1274, 1275, 0, 1277, 1278,
	1279, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 343, 0, 563, 348, 0, 0, 34, 35,
	70, 37, 38, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 39, 65, 66, 0, 0, 0, 0, 62,
	563, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 1881, 550, 1006, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 49, 0, 0, 0,
	79, 0, 0, 0, 0, 119, 0, 0, 0, 334,
	0, 0, 0, 119, 119, 0, 0, 0, 119, 119,
	0, 0, 119, 119, 119, 0, 1911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 563, 347, 337, 338, 0, 355, 0, 0, 0,
	339, 341, 0, 335, 354, 353, 0, 0, 0, 0,
	910, 0, 41, 72, 45, 44, 47, 1931, 58, 0,
	1932, 0, 0, 1934, 0, 0, 0, 0, 0, 0,
	0, 910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 75, 74, 0, 0, 56,
	57, 46, 0, 0, 0, 0, 119, 563, 0, 563,
	0, 0, 119, 0, 119, 119, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2170, 0, 0,
	0, 0, 1076, 0, 59, 60, 119, 119, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 73, 0,
	52, 53, 63, 0, 64, 559, 0, 0, 119, 0,
	119, 0, 559, 559, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 1500, 0, 0, 0, 559, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 1526,
	0, 0, 0, 1530, 0, 869, 1533, 872, 0, 0,
	0, 1538, 0, 0, 886, 887, 888, 889, 890, 891,
	892, 0, 870, 871, 868, 874, 873, 883, 884, 876,
	877, 878, 879, 880, 881, 882, 875, 0, 559, 885,
	0, 1155, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 910, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 119, 119, 119, 119, 119, 0, 0, 0,
	0, 0, 0, 0, 119, 0, 0, 0, 0, 119,
	0, 0, 0, 119, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1215, 0, 0, 0, 0, 0, 0, 2154, 2158, 0,
	0, 563, 0, 0, 0, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	34, 0, 70, 37, 38, 0, 1245, 1246, 0, 0,
	0, 0, 0, 0, 61, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 2175, 2176, 0, 0, 0, 0, 0, 0,
	0, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 119, 563, 563, 0, 0,
	0, 550, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 559, 559, 0, 0,
	0, 0, 0, 0, 0, 2130, 0, 0, 2288, 2291,
	2287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2158, 0, 0, 563, 563, 0, 0, 0,
	0, 119, 0, 0, 2238, 0, 0, 0, 0, 0,
	0, 563, 0, 0, 41, 72, 45, 44, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2131, 0, 0, 559, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 75, 74, 0,
	0, 0, 563, 46, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2311, 563, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 60, 0, 2132,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 2133,
	73, 0, 52, 53, 63, 0, 64, 117, 0, 559,
	356, 0, 0, 0, 0, 0, 117, 563, 563, 0,
	563, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	533, 551, 0, 117, 0, 0, 117, 0, 0, 0,
	34, 0, 70, 37, 38, 0, 0, 0, 117, 0,
	0, 0, 0, 119, 61, 0, 117, 0, 0, 0,
	76, 0, 0, 0, 39, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 79, 0, 119, 563, 0, 550, 0, 0,
	0, 0, 563, 563, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 2130, 0, 0, 0, 0,
	2336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 41, 72, 45, 44, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 75, 74, 0,
	0, 0, 0, 46, 563, 0, 0, 0, 0, 0,
	0, 563, 563, 563, 0, 0, 1043, 1646, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	559, 0, 559, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 60, 0, 2132,
	0, 0, 0, 0, 0, 2218, 0, 119, 0, 2133,
	73, 0, 52, 53, 63, 0, 64, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 1707, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 119, 0, 559, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 1030,
	0, 559, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 0, 1747, 0,
	0, 563, 0, 0, 0, 0, 119, 0, 119, 0,
	0, 1044, 0, 0, 563, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 0, 550, 0, 0,
	1155, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 0, 0, 0, 0, 0, 563,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 559, 0, 559, 0, 1816, 1057,
	1060, 1061, 1062, 1063, 1064, 1065, 0, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 563, 1045, 1046, 1047, 1048, 1024,
	1028, 1058, 1025, 1031, 1027, 1029, 1026, 0, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 117, 117, 117,
	119, 0, 0, 0, 563, 0, 0, 551, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 34, 119, 70, 37,
	38, 0, 0, 0, 0, 0, 0, 1874, 0, 0,
	61, 1878, 0, 0, 0, 0, 76, 0, 1882, 1883,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2130, 0, 0, 0, 0, 2332, 0, 0, 0,
	0, 0, 0, 0, 563, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 563, 0, 0, 0, 0, 0,
	1936, 0, 0, 0, 0, 0, 563, 1936, 1936, 1936,
	41, 72, 45, 44, 47, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 2131, 0, 0, 0,
	0, 117, 0, 0, 117, 0, 0, 0, 0, 0,
	1098, 0, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 0, 117, 117, 117, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1997,
	0, 0, 59, 60, 0, 2132, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 2133, 73, 0, 52, 53,
	63, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 389, 0, 0, 0,
	0, 0, 2022, 0, 0, 0, 0, 1936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 1225, 1225, 0, 0, 0, 1225, 1225,
	1225, 1225, 0, 0, 0, 551, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 1225, 1225, 1225, 0,
	1816, 1225, 1225, 1225, 1225, 1225, 0, 0, 0, 0,
	0, 0, 1225, 1225, 1225, 1043, 1225, 1225, 0, 1225,
	1225, 1225, 1225, 550, 1225, 1225, 1225, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 117, 389, 0, 0,
	0, 117, 117, 0, 0, 117, 1316, 1098, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1098, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	1816, 0, 0, 0, 0, 117, 0, 117, 117, 0,
	1936, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	1415, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1098, 0, 1057, 1060,
	1061, 1062, 1063, 1064, 1065, 0, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 0, 1045, 1046, 1047, 1048, 1024, 1028,
	1058, 1025, 1031, 1027, 1029, 1026, 0, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 0, 1225, 34, 0,
	70, 37, 38, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 0, 76, 1225,
	0, 0, 39, 34, 0, 70, 37, 38, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 0, 76, 1225, 1225, 0, 39, 0, 1225,
	0, 0, 1225, 0, 0, 0, 0, 1225, 0, 0,
	79, 0, 0, 0, 551, 117, 117, 117, 117, 117,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	1059, 0, 117, 2130, 0, 79, 389, 0, 2321, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 2130, 0,
	0, 0, 0, 2304, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 72, 45, 44, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2131, 0,
	0, 0, 0, 0, 0, 0, 0, 41, 72, 45,
	44, 47, 0, 0, 48, 75, 74, 0, 0, 0,
	0, 46, 0, 2131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	75, 74, 0, 0, 0, 0, 46, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 60, 0, 2132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2133, 73, 0,
	52, 53, 63, 0, 64, 0, 0, 0, 0, 59,
	60, 0, 2132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2133, 73, 117, 52, 53, 63, 0, 64,
	0, 0, 0, 0, 0, 1225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 231, 0, 0, 0, 0, 1305, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 77, 0, 0, 237, 295, 0,
	0, 0, 0, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1307,
	1309, 0, 0, 0, 0, 0, 118, 0, 391, 0,
	0, 0, 0, 0, 0, 145, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 117, 0, 0,
	0, 174, 217, 135, 0, 0, 0, 187, 325, 0,
	1308, 0, 251, 431, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 0, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 0, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	117, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 400, 401, 405, 406, 414,
	413, 412, 415, 416, 418, 417, 419, 397, 398, 399,
	402, 403, 404, 407, 408, 411, 409, 410, 0, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 389,
	0, 389, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	0, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 681, 661, 297,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	231, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 117, 237, 295, 682, 627, 0, 690,
	197, 0, 643, 319, 286, 216, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	551, 0, 0, 2177, 0, 0, 0, 0, 0, 0,
	117, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 217,
	135, 660, 675, 617, 187, 325, 679, 614, 613, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 605, 565, 664, 593, 603, 156, 601, 263,
	235, 314, 0, 637, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	2180, 2181, 2182, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 203, 207, 0, 570, 0, 288, 317,
	331, 142, 589, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 587, 588, 585, 0, 586, 632,
	633, 687, 688, 689, 658, 581, 0, 671, 672, 0,
	662, 677, 678, 653, 696, 610, 611, 571, 574, 575,
	576, 582, 624, 625, 636, 639, 667, 666, 665, 668,
	673, 692, 691, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 120, 131, 196, 697,
	255, 170, 318, 567, 162, 0, 0, 626, 628, 638,
	655, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 674, 681, 661,
	297, 619, 684, 591, 608, 695, 609, 612, 650, 577,
	631, 231, 606, 578, 0, 595, 568, 602, 569, 592,
	621, 164, 590, 663, 634, 683, 194, 646, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 682, 627, 0,
	690, 197, 0, 643, 319, 286, 216, 0, 0, 623,
	670, 629, 659, 618, 652, 584, 642, 685, 607, 648,
	686, 0, 0, 0, 562, 0, 1336, 1337, 0, 0,
	0, 0, 0, 145, 0, 645, 680, 604, 647, 649,
	566, 644, 0, 572, 579, 694, 676, 598, 599, 600,
	1592, 0, 0, 0, 0, 0, 0, 622, 630, 656,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 640, 0, 0, 0, 580, 573, 0, 0, 620,
	0, 0, 0, 583, 124, 597, 657, 0, 564, 174,
	217, 135, 660, 675, 617, 187, 325, 679, 614, 613,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 605, 565, 664, 593, 603, 156, 601,
	263, 235, 314, 0, 637, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 616, 651, 594, 153, 654, 641,
	669, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 570, 0, 288,
	317, 331, 142, 589, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 587, 588, 585, 0, 586,
	632, 633, 687, 688, 689, 658, 581, 0, 671, 672,
	0, 662, 677, 678, 653, 696, 610, 611, 571, 574,
	575, 576, 582, 624, 625, 636, 639, 667, 666, 665,
	668, 673, 692, 691, 693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 120, 131, 196,
	697, 255, 170, 318, 567, 162, 0, 0, 626, 628,
	638, 655, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 674, 681,
	661, 297, 619, 684, 591, 608, 695, 609, 612, 650,
	577, 631, 231, 606, 578, 0, 595, 568, 602, 569,
	592, 621, 164, 590, 663, 634, 683, 194, 646, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 682, 627,
	0, 690, 197, 0, 643, 319, 286, 216, 0, 0,
	623, 670, 629, 659, 618, 652, 584, 642, 685, 607,
	648, 686, 0, 0, 0, 562, 0, 1336, 1337, 0,
	0, 0, 0, 0, 145, 0, 645, 680, 604, 647,
	649, 566, 644, 0, 572, 579, 694, 676, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 622, 630,
	656, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 0, 640, 0, 0, 0, 580, 573, 0, 0,
	620, 0, 0, 0, 583, 124, 597, 657, 0, 564,
	174, 217, 135, 660, 675, 617, 187, 325, 679, 614,
	613, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 605, 565, 664, 593, 603, 156,
	601, 263, 235, 314, 0, 637, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 616, 651, 594, 153, 654,
	641, 669, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 203, 207, 0, 570, 0,
	288, 317, 331, 142, 589, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 587, 588, 585, 0,
	586, 632, 633, 687, 688, 689, 658, 581, 0, 671,
	672, 0, 662, 677, 678, 653, 696, 610, 611, 571,
	574, 575, 576, 582, 624, 625, 636, 639, 667, 666,
	665, 668, 673, 692, 691, 693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 120, 131,
	196, 697, 255, 170, 318, 567, 162, 0, 0, 626,
	628, 638, 655, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 674,
	681, 661, 297, 619, 684, 591, 608, 695, 609, 612,
	650, 577, 631, 231, 606, 578, 0, 595, 568, 602,
	569, 592, 621, 164, 590, 663, 634, 683, 194, 646,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 682,
	627, 0, 690, 197, 0, 643, 319, 286, 216, 0,
	0, 623, 670, 629, 659, 618, 652, 584, 642, 685,
	607, 648, 686, 0, 0, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 645, 680, 604,
	647, 649, 566, 644, 0, 572, 579, 694, 676, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 622,
	630, 656, 615, 0, 0, 0, 0, 0, 0, 2003,
	0, 596, 0, 640, 0, 0, 0, 580, 573, 0,
	0, 620, 0, 0, 0, 583, 124, 597, 657, 0,
	564, 174, 217, 135, 660, 675, 617, 187, 325, 679,
	614, 613, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 605, 565, 664, 593, 603,
	156, 601, 263, 235, 314, 0, 637, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 616, 651, 594, 153,
	654, 641, 669, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 570,
	0, 288, 317, 331, 142, 589, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 587, 588, 585,
	0, 586, 632, 633, 687, 688, 689, 658, 581, 0,
	671, 672, 0, 662, 677, 678, 653, 696, 610, 611,
	571, 574, 575, 576, 582, 624, 625, 636, 639, 667,
	666, 665, 668, 673, 692, 691, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 120,
	131, 196, 697, 255, 170, 318, 567, 162, 0, 0,
	626, 628, 638, 655, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	674, 681, 661, 297, 619, 684, 591, 608, 695, 609,
	612, 650, 577, 631, 231, 606, 578, 0, 595, 568,
	602, 569, 592, 621, 164, 590, 663, 634, 683, 194,
	646, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	682, 627, 0, 690, 197, 0, 643, 319, 286, 216,
	0, 0, 623, 670, 629, 659, 618, 652, 584, 642,
	685, 607, 648, 686, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 645, 680,
	604, 647, 649, 566, 644, 0, 572, 579, 694, 676,
	598, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	622, 630, 656, 615, 0, 0, 0, 0, 0, 0,
	1721, 0, 596, 0, 640, 0, 0, 0, 580, 573,
	0, 0, 620, 0, 0, 0, 583, 124, 597, 657,
	0, 564, 174, 217, 135, 660, 675, 617, 187, 325,
	679, 614, 613, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 605, 565, 664, 593,
	603, 156, 601, 263, 235, 314, 0, 637, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 616, 651, 594,
	153, 654, 641, 669, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 203, 207, 0,
	570, 0, 288, 317, 331, 142, 589, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 587, 588,
	585, 0, 586, 632, 633, 687, 688, 689, 658, 581,
	0, 671, 672, 0, 662, 677, 678, 653, 696, 610,
	611, 571, 574, 575, 576, 582, 624, 625, 636, 639,
	667, 666, 665, 668, 673, 692, 691, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	120, 131, 196, 697, 255, 170, 318, 567, 162, 0,
	0, 626, 628, 638, 655, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 674, 681, 661, 297, 619, 684, 591, 608, 695,
	609, 612, 650, 577, 631, 231, 606, 578, 0, 595,
	568, 602, 569, 592, 621, 164, 590, 663, 634, 683,
	194, 646, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 682, 627, 0, 690, 197, 0, 643, 319, 286,
	216, 0, 0, 623, 670, 629, 659, 618, 652, 584,
	642, 685, 607, 648, 686, 0, 0, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 645,
	680, 604, 647, 649, 566, 644, 0, 572, 579, 694,
	676, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 622, 630, 656, 615, 0, 0, 0, 0, 0,
	0, 1713, 0, 596, 0, 640, 0, 0, 0, 580,
	573, 0, 0, 620, 0, 0, 0, 583, 124, 597,
	657, 0, 564, 174, 217, 135, 660, 675, 617, 187,
	325, 679, 614, 613, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 605, 565, 664,
	593, 603, 156, 601, 263, 235, 314, 0, 637, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 616, 651,
	594, 153, 654, 641, 669, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 203, 207,
	0, 570, 0, 288, 317, 331, 142, 589, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 587,
	588, 585, 0, 586, 632, 633, 687, 688, 689, 658,
	581, 0, 671, 672, 0, 662, 677, 678, 653, 696,
	610, 611, 571, 574, 575, 576, 582, 624, 625, 636,
	639, 667, 666, 665, 668, 673, 692, 691, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 120, 131, 196, 697, 255, 170, 318, 567, 162,
	0, 0, 626, 628, 638, 655, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 674, 681, 661, 297, 619, 684, 591, 608,
	695, 609, 612, 650, 577, 631, 231, 606, 578, 0,
	595, 568, 602, 569, 592, 621, 164, 590, 663, 634,
	683, 194, 646, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 682, 627, 0, 690, 197, 0, 643, 319,
	286, 216, 0, 0, 623, 670, 629, 659, 618, 652,
	584, 642, 685, 607, 648, 686, 79, 0, 0, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	645, 680, 604, 647, 649, 566, 644, 0, 572, 579,
	694, 676, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 622, 630, 656, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 0, 640, 0, 0, 0,
	580, 573, 0, 0, 620, 0, 0, 0, 583, 124,
	597, 657, 0, 564, 174, 217, 135, 660, 675, 617,
	187, 325, 679, 614, 613, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 605, 565,
	664, 593, 603, 156, 601, 263, 235, 314, 0, 637,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 616,
	651, 594, 153, 654, 641, 669, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 203,
	207, 0, 570, 0, 288, 317, 331, 142, 589, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	587, 588, 585, 0, 586, 632, 633, 687, 688, 689,
	658, 581, 0, 671, 672, 0, 662, 677, 678, 653,
	696, 610, 611, 571, 574, 575, 576, 582, 624, 625,
	636, 639, 667, 666, 665, 668, 673, 692, 691, 693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 120, 131, 196, 697, 255, 170, 318, 567,
	162, 0, 0, 626, 628, 638, 655, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 674, 681, 661, 297, 619, 684, 591,
	608, 695, 609, 612, 650, 577, 631, 231, 606, 578,
	0, 595, 568, 602, 569, 592, 621, 164, 590, 663,
	634, 683, 194, 646, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 682, 627, 0, 690, 197, 0, 643,
	319, 286, 216, 0, 0, 623, 670, 629, 659, 618,
	652, 584, 642, 685, 607, 648, 686, 0, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 645, 680, 604, 647, 649, 566, 644, 0, 572,
	579, 694, 676, 598, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 622, 630, 656, 615, 0, 0, 0,
	0, 0, 0, 1317, 0, 596, 0, 640, 0, 0,
	0, 580, 573, 0, 0, 620, 0, 0, 0, 583,
	124, 597, 657, 0, 564, 174, 217, 135, 660, 675,
	617, 187, 325, 679, 614, 613, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 605,
	565, 664, 593, 603, 156, 601, 263, 235, 314, 0,
	637, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	616, 651, 594, 153, 654, 641, 669, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 570, 0, 288, 317, 331, 142, 589,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 587, 588, 585, 0, 586, 632, 633, 687, 688,
	689, 658, 581, 0, 671, 672, 0, 662, 677, 678,
	653, 696, 610, 611, 571, 574, 575, 576, 582, 624,
	625, 636, 639, 667, 666, 665, 668, 673, 692, 691,
	693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 120, 131, 196, 697, 255, 170, 318,
	567, 162, 0, 0, 626, 628, 638, 655, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 674, 681, 661, 297, 619, 684,
	591, 608, 695, 609, 612, 650, 577, 631, 231, 606,
	578, 0, 595, 568, 602, 569, 592, 621, 164, 590,
	663, 634, 683, 194, 646, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 682, 627, 0, 690, 197, 0,
	643, 319, 286, 216, 0, 0, 623, 670, 629, 659,
	618, 652, 584, 642, 685, 607, 648, 686, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 645, 680, 604, 647, 649, 566, 644, 0,
	572, 579, 694, 676, 598, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 622, 630, 656, 615, 0, 0,
	0, 0, 0, 0, 1181, 0, 596, 0, 640, 0,
	0, 0, 580, 573, 0, 0, 620, 0, 0, 0,
	583, 124, 597, 657, 0, 564, 174, 217, 135, 660,
	675, 617, 187, 325, 679, 614, 613, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	605, 565, 664, 593, 603, 156, 601, 263, 235, 314,
	0, 637, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 616, 651, 594, 153, 654, 641, 669, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 203, 207, 0, 570, 0, 288, 317, 331, 142,
	589, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 587, 588, 585, 0, 586, 632, 633, 687,
	688, 689, 658, 581, 0, 671, 672, 0, 662, 677,
	678, 653, 696, 610, 611, 571, 574, 575, 576, 582,
	624, 625, 636, 639, 667, 666, 665, 668, 673, 692,
	691, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 120, 131, 196, 697, 255, 170,
	318, 567, 162, 0, 0, 626, 628, 638, 655, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 674, 681, 661, 297, 619,
	684, 591, 608, 695, 609, 612, 650, 577, 631, 231,
	606, 578, 0, 595, 568, 602, 569, 592, 621, 164,
	590, 663, 634, 683, 194, 646, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 682, 627, 0, 690, 197,
	0, 643, 319, 286, 216, 0, 0, 623, 670, 629,
	659, 618, 652, 584, 642, 685, 607, 648, 686, 0,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 645, 680, 604, 647, 649, 566, 644,
	0, 572, 579, 694, 676, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 622, 630, 656, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 0, 640,
	0, 0, 0, 580, 573, 0, 0, 620, 0, 0,
	0, 583, 124, 597, 657, 0, 564, 174, 217, 135,
	660, 675, 617, 187, 325, 679, 614, 613, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 605, 565, 664, 593, 603, 156, 601, 263, 235,
	314, 0, 637, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 616, 651, 594, 153, 654, 641, 669, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 570, 0, 288, 317, 331,
	142, 589, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 255,
	170, 318, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 674, 681, 661, 297,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	231, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 682, 627, 0, 690,
	197, 0, 643, 319, 286, 216, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 217,
	135, 660, 675, 617, 187, 325, 679, 614, 613, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 605, 565, 664, 593, 603, 156, 601, 263,
	235, 314, 0, 637, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 203, 207, 0, 570, 0, 288, 317,
	331, 142, 589, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 587, 588, 585, 0, 586, 632,
	633, 687, 688, 689, 658, 581, 0, 671, 672, 0,
	662, 677, 678, 653, 696, 610, 611, 571, 574, 575,
	576, 582, 624, 625, 636, 639, 667, 666, 665, 668,
	673, 692, 691, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 120, 131, 196, 697,
	255, 170, 318, 567, 162, 0, 0, 626, 628, 638,
	655, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 674, 681, 661,
	297, 619, 684, 591, 608, 695, 609, 612, 650, 577,
	631, 231, 606, 578, 0, 595, 568, 602, 569, 592,
	621, 164, 590, 663, 634, 683, 194, 646, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 1347, 1351, 0,
	690, 197, 0, 643, 319, 286, 216, 0, 0, 623,
	670, 629, 659, 618, 652, 584, 642, 685, 607, 648,
	686, 0, 0, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 645, 680, 604, 647, 649,
	566, 644, 0, 572, 579, 694, 676, 598, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 622, 630, 656,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 640, 0, 0, 0, 580, 573, 0, 0, 620,
	0, 0, 0, 583, 124, 597, 657, 0, 564, 174,
	217, 135, 660, 675, 1350, 187, 325, 679, 614, 613,
	1345, 0, 1346, 177, 195, 561, 121, 133, 1343, 1349,
	227, 260, 270, 605, 565, 664, 593, 603, 156, 601,
	263, 235, 314, 0, 637, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 616, 651, 594, 153, 654, 641,
	669, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 570, 0, 288,
	317, 331, 142, 589, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 587, 588, 585, 0, 586,
	632, 633, 687, 688, 689, 658, 581, 0, 671, 672,
	0, 662, 677, 678, 653, 696, 610, 611, 571, 574,
	575, 576, 582, 624, 625, 636, 639, 667, 666, 665,
	668, 673, 692, 691, 693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 120, 131, 196,
	697, 255, 170, 318, 567, 162, 0, 0, 626, 628,
	638, 655, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 674, 681,
	661, 297, 619, 684, 591, 608, 695, 609, 612, 650,
	577, 631, 231, 606, 578, 0, 595, 568, 602, 569,
	592, 621, 164, 590, 663, 634, 683, 194, 646, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 682, 627,
	0, 690, 197, 0, 643, 319, 286, 216, 0, 0,
	623, 670, 629, 659, 618, 652, 584, 642, 685, 607,
	648, 686, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 645, 680, 604, 647,
	649, 566, 644, 0, 572, 579, 694, 676, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 622, 630,
	656, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 0, 640, 0, 0, 0, 580, 573, 0, 0,
	620, 0, 0, 0, 583, 124, 597, 657, 0, 564,
	174, 217, 135, 660, 675, 617, 187, 325, 679, 614,
	613, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 605, 565, 664, 593, 603, 156,
	601, 263, 235, 314, 0, 637, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 616, 651, 594, 153, 654,
	641, 669, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 203, 207, 0, 570, 0,
	288, 317, 331, 142, 589, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 587, 588, 585, 0,
	586, 632, 633, 687, 688, 689, 658, 581, 0, 671,
	672, 0, 662, 677, 678, 653, 696, 610, 611, 571,
	574, 575, 576, 582, 624, 625, 636, 639, 667, 666,
	665, 668, 673, 692, 691, 693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 120, 131,
	196, 697, 255, 170, 318, 567, 162, 0, 0, 626,
	628, 638, 655, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 674,
	681, 661, 297, 619, 684, 591, 608, 695, 609, 612,
	650, 577, 631, 231, 606, 578, 0, 595, 568, 602,
	569, 592, 621, 164, 590, 663, 634, 683, 194, 646,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 682,
	627, 0, 690, 197, 0, 643, 319, 286, 216, 0,
	0, 623, 670, 629, 659, 618, 652, 584, 642, 685,
	607, 648, 686, 0, 0, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 645, 680, 604,
	647, 649, 566, 644, 0, 572, 579, 694, 676, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 622,
	630, 656, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 640, 0, 0, 0, 580, 573, 0,
	0, 620, 0, 0, 0, 583, 124, 597, 657, 0,
	564, 174, 217, 135, 660, 675, 617, 187, 325, 679,
	614, 613, 251, 0, 291, 177, 195, 561, 121, 133,
	557, 176, 227, 260, 270, 605, 565, 664, 593, 603,
	156, 601, 263, 235, 314, 0, 637, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 616, 651, 594, 153,
	654, 641, 669, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 570,
	0, 288, 317, 331, 142, 589, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 587, 588, 585,
	0, 586, 632, 633, 687, 688, 689, 658, 581, 0,
	671, 672, 0, 662, 677, 678, 653, 696, 610, 611,
	571, 574, 575, 576, 582, 624, 625, 636, 639, 667,
	666, 665, 668, 673, 692, 691, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 120,
	131, 196, 697, 255, 170, 318, 567, 162, 0, 0,
	626, 628, 638, 655, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	674, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 164, 435, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 482, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 471, 472, 0, 0, 0, 0, 0, 0,
	1327, 0, 79, 0, 0, 436, 459, 458, 461, 462,
	463, 464, 0, 0, 145, 460, 465, 466, 467, 1328,
	0, 0, 433, 450, 0, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 448, 0, 0,
	0, 0, 496, 0, 449, 0, 0, 444, 445, 446,
	451, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 473, 0, 0, 187, 325, 0, 0,
	494, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 479, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 203, 207, 0, 0, 0,
	288, 317, 331, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 483, 495, 489, 491,
	490, 487, 488, 486, 485, 484, 497, 474, 475, 476,
	477, 480, 0, 492, 493, 0, 0, 0, 0, 510,
	511, 512, 513, 514, 515, 516, 509, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 498, 499, 500, 501,
	502, 503, 504, 505, 508, 506, 507, 478, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 34,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 164, 435, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	482, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 471, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 436, 459, 458, 461, 462, 463,
	464, 0, 0, 145, 460, 465, 466, 467, 0, 0,
	0, 433, 450, 0, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 448, 0, 0, 0,
	0, 496, 0, 449, 0, 0, 444, 445, 446, 451,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 473, 0, 0, 187, 325, 0, 0, 494,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 479, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 483, 495, 489, 491, 490,
	487, 488, 486, 485, 484, 497, 474, 475, 476, 477,
	480, 0, 492, 493, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 509, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 498, 499, 500, 501, 502,
	503, 504, 505, 508, 506, 507, 478, 120, 131, 196,
	77, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 164,
	435, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 0, 0, 0, 482, 197,
	0, 0, 319, 286, 216, 0, 0, 0, 0, 471,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 436, 459, 458, 461, 462, 463, 464, 0,
	0, 145, 460, 465, 466, 467, 0, 0, 0, 433,
	450, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 448, 429, 0, 0, 0, 496,
	0, 449, 0, 0, 444, 445, 446, 451, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 217, 135,
	473, 0, 0, 187, 325, 0, 0, 494, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 479, 0, 0, 0, 0, 156, 0, 263, 235,
	314, 0, 0, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 0, 0, 288, 317, 331,
	142, 0, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 483, 495, 489, 491, 490, 487, 488,
	486, 485, 484, 497, 474, 475, 476, 477, 480, 0,
	492, 493, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 509, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 498, 499, 500, 501, 502, 503, 504,
	505, 508, 506, 507, 478, 120, 131, 196, 0, 255,
	170, 318, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 164, 435, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 482, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 471, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 809,
	436, 459, 458, 461, 462, 463, 464, 0, 0, 145,
	460, 465, 466, 467, 0, 0, 0, 433, 450, 0,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 448, 0, 0, 0, 0, 496, 0, 449,
	0, 0, 444, 445, 446, 451, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 473, 0,
	0, 187, 325, 0, 0, 494, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 479,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 0, 0, 288, 317, 331, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 483, 495, 489, 491, 490, 487, 488, 486, 485,
	484, 497, 474, 475, 476, 477, 480, 0, 492, 493,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 509, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 498, 499, 500, 501, 502, 503, 504, 505, 508,
	506, 507, 478, 120, 131, 196, 0, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 164, 435, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 482, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 471, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 436, 459,
	458, 461, 462, 463, 464, 0, 0, 145, 460, 465,
	466, 467, 0, 0, 0, 433, 450, 0, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	448, 1223, 0, 0, 0, 496, 0, 449, 0, 0,
	444, 445, 446, 451, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 473, 0, 0, 187,
	325, 0, 0, 494, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 479, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 203, 207,
	0, 0, 0, 288, 317, 331, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 483,
	495, 489, 491, 490, 487, 488, 486, 485, 484, 497,
	474, 475, 476, 477, 480, 0, 492, 493, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 509,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 498,
	499, 500, 501, 502, 503, 504, 505, 508, 506, 507,
	478, 120, 131, 196, 0, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 164, 435, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 0,
	0, 0, 482, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 471, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 436, 459, 1234, 461,
	462, 463, 464, 0, 0, 145, 460, 465, 466, 467,
	0, 0, 0, 433, 450, 0, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 448, 1223,
	0, 0, 0, 496, 0, 449, 0, 0, 444, 445,
	446, 451, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 217, 135, 473, 0, 0, 187, 325, 0,
	0, 494, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 479, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 0, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	0, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 483, 495, 489,
	491, 490, 487, 488, 486, 485, 484, 497, 474, 475,
	476, 477, 480, 0, 492, 493, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 509, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 498, 499, 500,
	501, 502, 503, 504, 505, 508, 506, 507, 478, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 164, 435, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	482, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 471, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 436, 459, 1231, 461, 462, 463,
	464, 0, 0, 145, 460, 465, 466, 467, 0, 0,
	0, 433, 450, 0, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 448, 1223, 0, 0,
	0, 496, 0, 449, 0, 0, 444, 445, 446, 451,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 473, 0, 0, 187, 325, 0, 0, 494,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 479, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 483, 495, 489, 491, 490,
	487, 488, 486, 485, 484, 497, 474, 475, 476, 477,
	480, 0, 492, 493, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 509, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 498, 499, 500, 501, 502,
	503, 504, 505, 508, 506, 507, 478, 120, 131, 196,
	0, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 164,
	435, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 0, 0, 0, 482, 197,
	0, 0, 319, 286, 216, 0, 0, 0, 0, 471,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 1136, 436, 459, 458, 461, 462, 463, 464, 0,
	0, 145, 460, 465, 466, 467, 0, 0, 0, 433,
	450, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 448, 0, 0, 0, 0, 496,
	0, 449, 0, 0, 444, 445, 446, 451, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 217, 135,
	473, 0, 0, 187, 325, 0, 0, 494, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 479, 0, 0, 0, 0, 156, 0, 263, 235,
	314, 0, 0, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 0, 0, 288, 317, 331,
	142, 0, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 483, 495, 489, 491, 490, 487, 488,
	486, 485, 484, 497, 474, 475, 476, 477, 480, 0,
	492, 493, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 509, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 498, 499, 500, 501, 502, 503, 504,
	505, 508, 506, 507, 478, 120, 131, 196, 0, 255,
	170, 318, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 164, 435, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 482, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 471, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	436, 459, 458, 461, 462, 463, 464, 0, 0, 145,
	460, 465, 466, 467, 0, 0, 0, 433, 450, 0,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 448, 0, 0, 0, 0, 496, 0, 449,
	0, 0, 444, 445, 446, 451, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 473, 0,
	0, 187, 325, 0, 0, 494, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 479,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 0, 0, 288, 317, 331, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 483, 495, 489, 491, 490, 487, 488, 486, 485,
	484, 497, 474, 475, 476, 477, 480, 0, 492, 493,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 515,
	516, 509, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 498, 499, 500, 501, 502, 503, 504, 505, 508,
	506, 507, 478, 120, 131, 196, 0, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 164, 435, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 482, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 471, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 436, 459,
	458, 461, 462, 463, 464, 0, 0, 145, 460, 465,
	466, 467, 0, 0, 0, 433, 450, 0, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	448, 0, 0, 0, 0, 496, 0, 449, 0, 0,
	444, 445, 446, 451, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 473, 0, 0, 187,
	325, 0, 0, 494, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 479, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 203, 207,
	0, 0, 0, 288, 317, 331, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 483,
	495, 489, 491, 490, 487, 488, 486, 485, 484, 497,
	474, 475, 476, 477, 480, 0, 492, 493, 0, 0,
	0, 0, 820, 821, 822, 823, 824, 828, 829, 833,
	834, 842, 841, 840, 843, 844, 846, 845, 847, 825,
	826, 827, 830, 831, 832, 835, 836, 839, 837, 838,
	478, 120, 131, 196, 0, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 0,
	0, 0, 482, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 471, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 436, 459, 458, 461,
	462, 463, 464, 0, 0, 145, 460, 465, 466, 467,
	0, 0, 0, 0, 450, 0, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 448, 0,
	0, 0, 0, 496, 0, 449, 0, 0, 444, 445,
	446, 451, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 217, 135, 473, 0, 0, 187, 325, 0,
	0, 494, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 479, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 2314, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	0, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 483, 495, 489,
	491, 490, 487, 488, 486, 485, 484, 497, 474, 475,
	476, 477, 480, 0, 492, 493, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 515, 516, 509, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 498, 499, 500,
	501, 502, 503, 504, 505, 508, 506, 507, 478, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	482, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 471, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 809, 436, 459, 458, 461, 462, 463,
	464, 0, 0, 145, 460, 465, 466, 467, 0, 0,
	0, 0, 450, 0, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 448, 0, 0, 0,
	0, 496, 0, 449, 0, 0, 444, 445, 446, 451,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 473, 0, 0, 187, 325, 0, 0, 494,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 479, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 483, 495, 489, 491, 490,
	487, 488, 486, 485, 484, 497, 474, 475, 476, 477,
	480, 0, 492, 493, 0, 0, 0, 0, 510, 511,
	512, 513, 514, 515, 516, 509, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 498, 499, 500, 501, 502,
	503, 504, 505, 508, 506, 507, 478, 120, 131, 196,
	0, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 0, 0, 0, 482, 197,
	0, 0, 319, 286, 216, 0, 0, 0, 0, 471,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 436, 459, 458, 461, 462, 463, 464, 0,
	0, 145, 460, 465, 466, 467, 0, 0, 0, 0,
	450, 0, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 448, 0, 0, 0, 0, 496,
	0, 449, 0, 0, 444, 445, 446, 451, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 217, 135,
	473, 0, 0, 187, 325, 0, 0, 494, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 479, 0, 0, 0, 0, 156, 0, 263, 235,
	314, 0, 0, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 0, 0, 288, 317, 331,
	142, 0, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 483, 495, 489, 491, 490, 487, 488,
	486, 485, 484, 497, 474, 475, 476, 477, 480, 0,
	492, 493, 0, 0, 0, 0, 510, 511, 512, 513,
	514, 515, 516, 509, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 498, 499, 500, 501, 502, 503, 504,
	505, 508, 506, 507, 478, 120, 131, 196, 0, 255,
	170, 318, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 0, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1307, 1309, 0, 0, 0, 0, 0,
	118, 0, 391, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 0, 0,
	0, 187, 325, 0, 1308, 0, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 0,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 1303, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 0, 0, 288, 317, 331, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 395, 396, 400,
	401, 405, 406, 414, 413, 412, 415, 416, 418, 417,
	419, 397, 398, 399, 402, 403, 404, 407, 408, 411,
	409, 410, 0, 120, 131, 196, 0, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	860, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 0, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	864, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 857, 856, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 0, 0, 0, 187,
	325, 0, 0, 0, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 0, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 203, 207,
	0, 0, 0, 288, 317, 331, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 395, 396, 400, 401, 405,
	406, 414, 413, 412, 415, 416, 418, 417, 419, 397,
	398, 399, 402, 403, 404, 407, 408, 411, 409, 410,
	0, 120, 131, 196, 0, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 1570,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 0,
	0, 0, 0, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 391, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 217, 135, 0, 0, 0, 187, 325, 0,
	0, 0, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 0, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 0, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	0, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 395, 396, 400, 401, 405, 406, 414,
	413, 412, 415, 416, 418, 417, 419, 397, 398, 399,
	402, 403, 404, 407, 408, 411, 409, 410, 0, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	0, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 0, 391, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 0, 0, 0, 187, 325, 0, 0, 0,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 0, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 395, 396, 400, 401, 405, 406, 414, 413, 412,
	415, 416, 418, 417, 419, 397, 398, 399, 402, 403,
	404, 407, 408, 411, 409, 410, 0, 120, 131, 196,
	0, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 0, 0, 0, 0, 197,
	0, 0, 319, 286, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 861, 0, 864, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 217, 135,
	0, 0, 0, 187, 325, 0, 0, 0, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 0, 0, 0, 0, 0, 156, 0, 263, 235,
	314, 0, 0, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 0, 0, 288, 317, 331,
	142, 0, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 395,
	396, 400, 401, 405, 406, 414, 413, 412, 415, 416,
	418, 417, 419, 397, 398, 399, 402, 403, 404, 407,
	408, 411, 409, 410, 0, 120, 131, 196, 0, 255,
	170, 318, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 0, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 874, 873, 883,
	884, 876, 877, 878, 879, 880, 881, 882, 875, 0,
	0, 885, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 0, 0,
	0, 187, 325, 0, 0, 0, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 0,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 0, 0, 288, 317, 331, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 0, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 34, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 1300, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 0, 0, 0,
	187, 325, 0, 0, 0, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 0, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 0,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 203,
	207, 0, 0, 0, 288, 317, 331, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 77, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 34, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 0, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 0, 0, 0, 187,
	325, 0, 0, 0, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 0, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 203, 207,
	0, 0, 0, 288, 317, 331, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 131, 196, 77, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 1008, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 0,
	0, 0, 0, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 562, 0, 1007, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 217, 135, 0, 0, 0, 187, 325, 0,
	0, 0, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 0, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 0, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	0, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	0, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 118, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 0, 0, 0, 187, 325, 0, 0, 0,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 0, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 0, 0, 0, 0, 197,
	0, 0, 319, 286, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 217, 135,
	0, 0, 0, 187, 325, 0, 0, 0, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 0, 0, 0, 0, 0, 156, 0, 263, 235,
	314, 0, 0, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 0, 0, 288, 317, 331,
	142, 0, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 0, 255,
	170, 318, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 977, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 0, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 0, 0,
	0, 187, 325, 0, 0, 0, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 0,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 0, 0, 288, 317, 331, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 0, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 297, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 0, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 0, 0, 0, 187,
	325, 0, 0, 0, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 0, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 203, 207,
	0, 0, 0, 288, 317, 331, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 131, 196, 0, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 0,
	0, 0, 0, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 217, 135, 0, 115, 0, 187, 325, 0,
	0, 0, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 0, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 0, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	0, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	0, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 0, 0, 0, 187, 325, 0, 0, 0,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 0, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 203, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 194, 0, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 0, 0, 0, 0, 197,
	0, 0, 319, 286, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 174, 217, 135,
	0, 0, 0, 187, 325, 0, 0, 0, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 0, 0, 0, 0, 0, 156, 0, 263, 235,
	314, 0, 0, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 0, 0, 0, 153, 0, 0, 0, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 203, 207, 0, 0, 0, 288, 317, 331,
	142, 0, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 131, 196, 0, 255,
	170, 318, 0, 162, 0, 0, 0, 0, 0, 0,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 0, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 0, 0,
	0, 187, 325, 0, 0, 0, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 0,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	203, 207, 0, 0, 0, 288, 317, 331, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 0, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 0, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 0, 0, 0, 187,
	325, 0, 0, 0, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 0, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 548, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 544, 207,
	0, 0, 0, 288, 317, 331, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 549, 547, 538, 539,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 131, 196, 0, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 545, 546, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 194, 0,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 0,
	0, 0, 0, 197, 0, 0, 319, 286, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 174, 217, 135, 0, 0, 0, 187, 325, 0,
	0, 0, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 0, 0, 0, 0, 0,
	156, 0, 263, 235, 314, 0, 0, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 0, 0, 0, 153,
	0, 0, 0, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 1002, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 203, 207, 0, 0,
	0, 288, 317, 331, 142, 0, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	131, 196, 0, 255, 170, 318, 0, 162, 0, 0,
	0, 0, 0, 0, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 194, 0, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 0, 0, 0,
	0, 197, 0, 0, 319, 286, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 174,
	217, 135, 0, 0, 0, 187, 325, 0, 0, 0,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 0, 0, 0, 0, 0, 156, 0,
	263, 235, 314, 0, 0, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 0, 0, 0, 153, 0, 0,
	0, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	535, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 548,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 544, 207, 0, 0, 0, 288,
	317, 331, 142, 0, 276, 299, 0, 0, 143, 171,
	167, 245, 549, 547, 538, 539, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 131, 196,
	0, 255, 170, 318, 0, 162, 0, 0, 0, 0,
	0, 0, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 545, 546, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 34, 0,
	70, 37, 38, 0, 0, 0, 34, 0, 70, 37,
	38, 0, 61, 0, 0, 0, 0, 0, 76, 0,
	61, 0, 39, 0, 0, 0, 76, 0, 0, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 2293, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2130, 0, 0, 0, 0, 0, 0,
	0, 2130, 0, 0, 0, 0, 2245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 72, 45, 44, 47, 0, 0, 0,
	41, 72, 45, 44, 47, 0, 0, 0, 2131, 0,
	0, 0, 0, 0, 0, 0, 2131, 0, 0, 0,
	0, 0, 0, 0, 48, 75, 74, 0, 0, 0,
	0, 46, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 34, 0, 70, 37, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 60, 0, 2132, 0, 0,
	0, 0, 59, 60, 0, 2132, 0, 2133, 73, 0,
	52, 53, 63, 0, 64, 2133, 73, 0, 52, 53,
	63, 0, 64, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 72, 45, 44, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2131, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 60, 0,
	2132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2133, 73, 0, 52, 53, 63, 0, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77,
}
var yyPact = [...]int{

	2542, -1000, -294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1472, -1000, -1000, -1000, -1000, -1000, -1000,
	500, 152, -1000, -1000, 272, 113, 22355, 268, 2363, 23211,
	-1000, -1000, -1000, 122, 203, 23211, -1000, -1000, -1000, 216,
	324, 1040, 1330, 1039, 37, -82, -83, -1000, 1506, 1508,
	-1000, -1000, 239, 41, -1000, -1000, -1000, 18073, 166, -1000,
	-1000, -1000, 1457, 1469, 1267, -1000, 12081, 245, 245, 21927,
	24923, -1000, 23211, 10795, 263, 23211, -134, 228, 228, 149,
	267, -1000, 525, -1000, -1000, -1000, -1000, 23211, 230, 22783,
	230, 230, 230, 230, 230, 23211, -1000, 340, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 23211, 1036, 1357, 545, 121, 7778, 7778, -1000,
	552, -1000, 144, 143, 135, 138, 25, 567, -1000, 7778,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 199, 254, 207,
	166, 521, -1000, -1000, -1000, -1000, -1000, 1353, 1345, 705,
	1344, 385, 1342, 1216, -37, -1000, 1035, 23211, -1000, -1000,
	1204, 1439, 266, 23211, -1000, -1000, 1123, -1000, 1207, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	859, 1351, 677, 15077, 1305, -1000, -1000, 585, 1494, -1000,
	17217, 339, -1000, 14649, 2737, 932, -1000, -1000, 932, -1000,
	-1000, 289, -1000, -1000, 16361, 16361, 16361, 16361, 16361, 16361,
	16361, 16361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 932, -1000,
	11653, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 14649, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 21499, 20643, 23211, 1094,
	1093, -1000, -1000, 317, 1121, -101, 24495, -1000, -1000, -1000,
	-1000, 23639, 20215, 520, -1000, -1000, -1000, -1000, 1341, -1000,
	-1000, 306, -1000, 1031, 193, -1000, 4105, 312, -1000, -1000,
	-1000, 1212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22783, 1436,
	249, 1028, 555, 1026, 1025, 1024, 228, 1023, 1120, 253,
	23211, 1393, 1231, 23211, 1022, 1021, 1015, 1012, -1000, 10364,
	-1000, 7778, 545, -1000, 840, 14649, 228, 228, 7778, 7778,
	7778, 23211, 23211, 23211, -1000, -1000, -1000, -1000, 23211, -1000,
	-1000, 545, 545, 7778, 7778, 541, 1493, 541, 541, -1000,
	-1000, -1000, -1000, 14649, -1000, 16361, -1000, -1000, 1010, 198,
	-1000, -1000, -1000, -1000, -1000, -1000, 1008, 385, 385, -1000,
	799, 385, 1109, -1000, 509, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 385, -1000, 14221,
	-292, -1000, -1000, 1118, -1000, 248, 1267, -1000, -1000, 166,
	-1000, -1000, -1000, 23211, 7778, 18073, 932, 22783, -1000, -1000,
	-1000, 1500, 449, 1147, -1000, -1000, 1117, -1000, 637, 1419,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 932, 932,
	932, 932, 932, 932, 932, 932, 932, 932, 300, 876,
	1270, -1000, -1000, -1000, 23211, -1000, 14649, 14649, 730, -1000,
	18501, -1000, -1000, -1000, -1000, 8640, 455, 16361, 664, 470,
	16361, 16361, 16361, 16361, 16361, 16361, 16361, 16361, 16361, 16361,
	16361, 16361, 16361, 16361, 16361, 691, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1005, -1000, 166, 895, 895, 427,
	427, 427, 427, 427, 427, 427, 18929, 1432, 859, 1020,
	699, 11653, 12937, 12937, 859, 14649, 14649, 13793, 13365, 12937,
	12937, 1432, 564, 699, 23639, -1000, -1000, 15933, -1000, -1000,
	-1000, -1000, -1000, 859, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22783, 22783, 12937, 12937, 12937, 12937, 859, 859,
	12937, 12937, 12937, 12937, 12937, 859, 859, 859, 859, 1432,
	1432, 12937, 12937, 12937, 1432, 12937, 12937, 1432, 12937, 12937,
	12937, 12937, 1432, 12937, 12937, 12937, 160, 23211, -1000, 1113,
	1178, -1000, -1000, -1000, 1434, 19358, 16789, -1000, 160, 1071,
	20643, 23211, -1000, -1000, 20643, 23211, 8209, 24067, 1103, -1000,
	-98, -107, -101, -1000, -1000, 348, -1000, -1000, -1000, 11224,
	-1000, 9502, 6054, 9933, -1000, 312, 1212, -1000, -56, -1000,
	-1000, -1000, 1177, -1000, 1177, 179, -5, 1177, 1177, 1177,
	1177, 1177, -6, -6, -6, -6, 1, -1000, -1000, -1000,
	-1000, -1000, 1211, 1206, -1000, 1177, 1177, 1177, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1200, 197, 1182, 1182,
	1182, 1182, 1182, 212, -1000, 14649, 1179, -1000, 23211, 7778,
	1389, 7778, 142, 1205, 23211, -1000, 23211, 23211, 1116, -1000,
	23211, 1111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 699, 1004, 1003, -1000, -1000, -1000, -1000,
	-1000, -1000, 551, -1000, -1000, -1000, -1000, 545, 23211, 23211,
	23211, 1433, 545, 699, 523, -1000, -1000, 995, -1000, 1109,
	1109, -1000, 1109, 385, 895, 1109, -1000, 1001, 1376, 795,
	23211, -1000, 18073, -42, -1000, -113, 1432, 859, 1267, 615,
	-1000, -1000, -1000, 172, 952, 298, -1000, 1261, 677, 677,
	15077, -1000, -1000, -1000, -1000, 9502, 1453, -1000, 1282, 1281,
	1034, -1000, -1000, 455, 479, -1000, -1000, 618, -1000, -1000,
	-1000, -1000, 295, 932, -1000, 1110, -1000, -1000, -1000, -1000,
	664, 16361, 16361, 16361, 523, 1110, 2339, 743, 680, 427,
	485, 485, 425, 425, 425, 425, 425, 788, 788, -1000,
	-1000, -1000, 859, -1000, -1000, -1000, 12937, -1000, 14649, -1000,
	859, 993, -1000, -1000, 699, 294, 993, -1000, 630, 673,
	559, 1492, 993, 556, 1486, 993, 993, 993, 12937, 598,
	-1000, 14649, 859, -1000, 596, 1108, 1106, 993, 859, 1104,
	993, 993, -150, -150, 859, 993, 859, 993, 993, -150,
	-150, -150, -150, 12937, 12937, 993, 993, 993, 12937, 993,
	993, 12937, 993, 993, 993, 993, 12937, 993, 993, 993,
	164, 932, -1000, 23639, 20643, 20643, 20643, 20643, 20643, -1000,
	1251, 1250, -1000, 1244, 1242, 1258, 18073, -1000, 999, 859,
	128, 19358, -1000, 932, -1000, 17645, 323, 262, 261, 258,
	1478, 20643, 1090, -1000, 1090, -1000, 293, -1000, -1000, 23639,
	-101, -110, -1000, -1000, 1103, -1000, 870, -1000, -1000, 699,
	-1000, 292, 1102, 5623, -1000, -1000, -1000, -1000, 193, -1000,
	-1000, -1000, 1203, 309, -1000, 1292, 401, 527, 893, 1288,
	-1000, -1000, 264, -74, -1000, -1000, 665, -6, -6, 1177,
	1177, 177, 1177, -1000, -6, -1000, -1000, -1000, 348, 1338,
	348, 348, 348, 348, -6, 794, 794, -1000, -1000, -1000,
	-1000, 661, -1000, 1200, -1000, 645, -1000, -1000, -1000, -1000,
	-1000, 845, 1230, 22783, 166, 1423, -1000, -1000, -1000, 1483,
	-1000, -1000, 240, -1000, 250, -1000, 7778, 23211, 7778, 7778,
	1478, 987, 979, -1000, -1000, -1000, 541, 545, 1333, -1000,
	-1000, 16361, -1000, -1000, -1000, -1000, 160, 265, -1000, -1000,
	-77, -1000, -1000, 1270, -1000, 1432, 1101, -1000, -1000, 526,
	505, 535, 211, 211, -1000, 472, 211, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 159, 1412, 22783, 22783, 1257,
	-1000, -1000, -1000, 23211, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7347, 12937, -1000, 523, 1110, 1715, -1000,
	16361, -1000, 859, 699, -1000, 12937, -1000, 6916, -1000, 114,
	691, 114, 16361, 16361, -1000, 16361, 16361, -1000, -185, -1000,
	1119, 486, -1000, 14649, 858, -1000, -1000, 16361, 16361, -1000,
	-1000, -1000, -1000, -1000, 21071, -1000, -150, -150, -150, -150,
	-150, -1000, -1000, -1000, -1000, 993, 993, -150, -150, -150,
	993, -150, -150, 993, -150, -150, -150, -150, 993, -150,
	-150, -150, 1229, 23639, 932, -1000, 19787, 22783, 1143, -1000,
	484, 1178, 1186, 1228, 981, -1000, -1000, -1000, -1000, 1245,
	-1000, 1243, -1000, -1000, 1171, -1000, -1000, 1099, 932, 22783,
	16361, 323, -1000, 932, 932, 932, 1472, 14649, 1090, -1000,
	-1000, 437, -1000, -1000, -108, -119, -1000, -1000, -1000, 9071,
	6054, -1000, 6054, -1000, 22783, 184, -1000, 893, -1000, -1000,
	893, -1000, -1000, -1000, 1183, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 569, 16361, 1499, -1000, 1291, -1000, 1290, 791,
	-1000, -1000, 1063, 348, 348, -6, -1000, -1000, 1177, -1000,
	348, -1000, 493, -1000, -1000, -1000, -1000, 348, 991, -1000,
	984, 1098, -1000, 982, 57, 23211, -1000, -1000, -1000, 1227,
	-1000, -1000, -1000, 1062, 1095, -1000, 4105, 974, 971, 965,
	23211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 545, -1000,
	16361, 1110, -6, 23211, -1000, 1034, 615, -1000, 865, -1000,
	893, 391, -1000, -1000, -1000, 1288, -1000, -1000, 285, 964,
	-1000, 962, 956, 22783, 1289, 955, 23211, 22783, -1000, -1000,
	930, 953, 14649, -1000, 22783, 22783, 932, 288, -1000, -1000,
	-1000, 1018, 12081, -1000, -1000, 859, -1000, 16361, 1110, -1000,
	-1000, -1000, 286, 859, 1177, 1177, -1000, 1177, 1182, -1000,
	1177, 24, 1177, 21, 859, 859, 2296, 2079, 2040, 1661,
	932, -146, -1000, 699, 14649, 1089, 657, -1000, 363, -1000,
	-1000, -1000, -1000, -1000, -150, -150, -1000, -1000, -1000, -1000,
	-150, -1000, -1000, -150, -1000, -1000, -1000, -1000, -150, -1000,
	-1000, -1000, -1000, 1369, 1073, 1088, -1000, -1000, 12509, 859,
	952, 936, -1000, 1472, 23639, 14649, -1000, -1000, 14649, 1180,
	-1000, 14649, -1000, -1000, -1000, -1000, 22783, 127, -1000, 14649,
	936, 901, -1000, 22783, 22783, 22783, 1457, 699, -1000, -1000,
	-1000, -1000, 5623, -1000, 934, -1000, 1177, -1000, 1288, -1000,
	-1000, 22783, -1000, 1110, -94, -1000, -1000, -1000, -1000, -1000,
	-1000, 348, -1000, -1000, -1000, -1000, -1000, -6, 747, -6,
	619, -1000, 617, -1000, -1000, -237, 1175, -1000, 166, 23211,
	89, 240, -1000, 4105, 4105, 4105, -1000, -1000, 1110, -88,
	-1000, -1000, -1000, 930, 182, 4105, -1000, 1179, 401, 184,
	-1000, -1000, -1000, -1000, -1000, 931, 393, -1000, 247, 182,
	930, 699, 429, 1371, -1000, 22783, 1476, 20643, -1000, -1000,
	-1000, 1110, 6485, -1000, -1000, 187, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16361, 16361, 16361, 16361, 16361, 859,
	746, 699, 16361, 16361, 859, 1468, -1000, -1000, -1000, -1000,
	-1000, 1285, -1000, 932, -1000, -1000, 165, -1000, 22783, 1457,
	-1000, 699, 699, 22783, 699, 929, -1000, 932, 4735, -1000,
	18073, 927, 927, 927, -1000, 290, 22783, 1419, 923, -1000,
	-1000, 348, -1000, 348, 1058, 994, -1000, 22783, -1000, 1454,
	-1000, 89, -1000, 742, 99, 106, -1000, 97, 95, 84,
	83, 80, -1000, -1000, -1000, -1000, 1322, 1307, 1114, 924,
	-1000, -1000, 919, -1000, 1174, 893, -1000, -1000, 885, -1000,
	-1000, 22783, -1000, 182, 1364, 1360, 932, -1000, 1474, 1465,
	1090, 12081, -1000, -1000, -1000, -1000, 596, 596, 596, 596,
	42, -1000, -1000, 596, 596, -1000, 14649, 1498, -1000, 932,
	-1000, 166, -1000, -1000, 918, -1000, 22783, -1000, -1000, 323,
	-1000, -1000, -1000, 290, -1000, 871, 472, 737, -1000, -1000,
	176, -1000, -1000, -1000, -1000, 914, -1000, 130, 25525, -1000,
	-1000, -1000, -1000, -1000, -1000, 1328, 1327, 115, 232, 1299,
	1303, 1464, 20643, -1000, -1000, 264, 22783, 1179, -1000, -1000,
	-1000, 16361, -1000, 157, -1000, 15077, 15077, 1476, -1000, -1000,
	-1000, -1000, -1000, 859, 117, -195, -1000, -1000, 1112, 23639,
	1088, 859, -1000, -1000, -1000, -1000, -1000, 601, -1000, 23211,
	290, 125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	14649, 14649, 5192, 25525, -1000, -1000, -1000, -1000, 1171, 597,
	1307, 1463, 1310, 1306, -1000, 736, 1090, 912, 1146, 1110,
	904, -1000, 22783, -1000, 699, -1000, 1087, -1000, 699, -1000,
	1474, -1000, -1000, 1255, -191, -203, 859, 920, -1000, -1000,
	1145, -1000, 290, 119, -1000, 848, 835, 60, 52, 3416,
	-1000, -1000, -1000, -1000, -297, -1000, -1000, 1313, -1000, 688,
	-1000, 1461, 1459, -1000, 1476, 290, 22783, -1000, 157, 1277,
	15077, -1000, -1000, 1126, -1000, -1000, 22783, -1000, 854, 837,
	712, -1000, 14649, 25525, 1452, 1448, 1446, 1359, 9071, 25360,
	-1000, -1000, 684, 676, 1474, -1000, 889, -1000, 153, -1000,
	-193, 877, 233, -1000, -1000, 534, 25525, -1000, 833, -298,
	200, 166, 322, 16361, -1000, -1000, -1000, -1000, -1000, -1000,
	290, 147, -200, 1226, -1000, -1000, -1000, -1000, -1000, -1000,
	25525, -1000, -299, 25525, 2984, -1000, -1000, -1000, 25352, -1000,
	-1000, -1000, -1000, 50, -1000, -1000, 1110, -1000, 932, -204,
	1225, 1188, 1491, -1000, -301, 4407, -306, 223, 25525, 533,
	-1000, 14649, -1000, 322, -1000, 15505, -1000, -1000, 1497, -1000,
	1484, 303, 303, 4382, 506, 25525, -1000, -307, 222, 25525,
	-1000, 634, -1000, 596, 859, -1000, -1000, -1000, 196, 651,
	-1000, -1000, -1000, 3730, -1000, -308, 25525, -1000, -1000, -1000,
	-1000, -1000, 220, 3264, -312, -1000, 209, 25525, -1000,
}
var yyPgo = [...]int{

	0, 1884, 63, 1883, 162, 1878, 1874, 1866, 19, 15,
	11, 21, 1863, 1619, 1612, 1607, 1605, 1862, 1603, 1861,
	5, 1860, 1857, 1601, 1855, 1852, 1582, 1570, 1561, 1559,
	1851, 1850, 31, 1848, 17, 1847, 6, 113, 126, 1846,
	3, 1845, 1843, 10, 1842, 1841, 1557, 1840, 1839, 1838,
	1835, 81, 1817, 1555, 1551, 1816, 1814, 1548, 1543, 1813,
	1812, 1537, 1524, 1520, 1811, 147, 1810, 1806, 1805, 176,
	76, 121, 1804, 1801, 1800, 88, 57, 1554, 92, 41,
	114, 891, 1799, 23, 37, 1798, 1797, 167, 105, 1794,
	117, 1791, 85, 362, 83, 1790, 1789, 141, 1786, 1785,
	1782, 106, 1781, 1767, 647, 1765, 1764, 122, 1763, 50,
	52, 39, 1762, 1761, 1760, 1759, 1746, 109, 2, 1744,
	1743, 107, 1742, 60, 1740, 1739, 135, 1729, 1728, 1725,
	99, 59, 1724, 44, 1723, 42, 58, 1722, 36, 1721,
	103, 1719, 1718, 34, 13, 1717, 38, 1716, 48, 1714,
	104, 78, 335, 18, 40, 46, 51, 1713, 84, 14,
	29, 96, 73, 69, 33, 1712, 120, 1711, 68, 128,
	112, 119, 116, 1710, 1709, 1708, 728, 1706, 1705, 102,
	1704, 66, 146, 669, 189, 93, 1703, 74, 1701, 1700,
	1699, 1698, 67, 89, 1696, 1695, 75, 386, 91, 1637,
	32, 2053, 43, 118, 1691, 35, 1688, 1686, 3170, 97,
	72, 90, 1682, 86, 26, 45, 1677, 1676, 1672, 1671,
	1670, 1669, 230, 1665, 1663, 1662, 1661, 111, 54, 1660,
	1659, 98, 80, 1655, 1654, 1652, 1644, 1642, 101, 56,
	115, 1641, 94, 110, 100, 1640, 1635, 1632, 1630, 55,
	30, 1629, 1628, 1627, 77, 82, 1626, 49, 25, 27,
	53, 9, 62, 61, 1623, 24, 1622, 87, 4, 8,
	7, 1621, 1614, 1609, 1594, 1589, 65, 1586, 1584, 47,
	1572, 1568, 1566, 28, 1563, 1546, 1535, 108, 95, 1529,
	1522, 0, 163, 124, 1518, 1516, 123,
}
var yyR1 = [...]int{

	0, 289, 290, 290, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 64, 2, 2, 7, 3,
	3, 3, 4, 4, 85, 86, 86, 90, 90, 5,
	5, 6, 6, 8, 8, 68, 68, 9, 10, 10,
	10, 10, 293, 293, 99, 99, 97, 97, 98, 98,
	161, 161, 11, 11, 11, 166, 166, 171, 171, 171,
	174, 174, 174, 174, 153, 154, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 274, 274, 275, 275, 276,
	276, 276, 276, 277, 277, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 24, 195, 195,
	44, 44, 45, 45, 45, 149, 149, 149, 12, 12,
	12, 12, 12, 19, 21, 21, 33, 33, 34, 22,
	22, 22, 22, 35, 35, 36, 25, 25, 25, 25,
	25, 25, 42, 42, 42, 41, 41, 40, 40, 40,
	40, 40, 40, 23, 23, 23, 23, 43, 43, 38,
	38, 37, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 26, 26, 26, 26, 26, 26,
	18, 273, 273, 273, 32, 32, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 49, 251, 252, 252, 252, 252, 252,
	252, 252, 252, 239, 240, 215, 215, 215, 215, 215,
	215, 215, 214, 214, 214, 214, 218, 218, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 217, 217, 217,
	217, 217, 217, 217, 217, 219, 219, 219, 219, 219,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 221, 221, 221, 221, 221,
	221, 221, 221, 238, 238, 222, 222, 231, 231, 232,
	232, 232, 229, 229, 230, 230, 233, 233, 225, 226,
	234, 227, 227, 227, 228, 228, 228, 237, 237, 237,
	237, 223, 241, 241, 261, 261, 260, 260, 259, 259,
	259, 250, 250, 256, 256, 256, 256, 256, 245, 245,
	245, 244, 244, 246, 246, 249, 249, 258, 258, 257,
	242, 242, 262, 262, 262, 262, 262, 243, 243, 243,
	263, 247, 247, 248, 248, 248, 269, 270, 268, 268,
	268, 268, 268, 114, 114, 114, 253, 253, 253, 254,
	254, 254, 255, 255, 255, 271, 271, 46, 46, 47,
	52, 52, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 148, 148, 148, 48, 193,
	193, 267, 267, 267, 266, 264, 264, 265, 265, 14,
	50, 50, 15, 15, 15, 15, 15, 15, 15, 16,
	16, 53, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 82, 180, 180, 178, 178, 181, 181, 179, 179,
	179, 182, 182, 182, 212, 212, 212, 55, 55, 60,
	60, 63, 61, 62, 27, 28, 28, 28, 28, 29,
	194, 194, 58, 58, 59, 59, 59, 59, 74, 74,
	294, 294, 57, 57, 56, 56, 17, 295, 65, 66,
	66, 67, 67, 67, 185, 185, 71, 71, 71, 69,
	69, 69, 70, 70, 76, 76, 80, 80, 80, 80,
	79, 79, 79, 79, 151, 151, 151, 152, 152, 204,
	204, 204, 203, 203, 203, 203, 84, 84, 87, 87,
	88, 88, 88, 88, 91, 134, 134, 108, 108, 109,
	109, 109, 109, 109, 120, 120, 160, 160, 159, 159,
	162, 162, 89, 89, 89, 89, 94, 94, 95, 95,
	96, 96, 192, 192, 210, 210, 210, 100, 100, 100,
	102, 101, 101, 101, 101, 103, 103, 105, 106, 106,
	104, 104, 107, 110, 110, 110, 110, 111, 111, 81,
	81, 81, 81, 81, 81, 81, 177, 177, 113, 113,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	129, 129, 129, 129, 129, 129, 115, 115, 115, 115,
	115, 115, 115, 75, 75, 130, 130, 130, 93, 92,
	92, 78, 78, 77, 77, 131, 131, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 124, 124, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 296, 296, 126, 125, 125, 125, 125,
	125, 125, 72, 72, 72, 72, 72, 211, 211, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 141, 141, 73, 73, 139, 139, 140, 142,
	142, 138, 138, 138, 117, 117, 117, 117, 117, 117,
	117, 117, 119, 119, 119, 143, 143, 132, 132, 83,
	83, 144, 144, 145, 145, 146, 146, 147, 147, 150,
	150, 155, 155, 155, 156, 156, 156, 156, 121, 121,
	157, 157, 157, 116, 116, 116, 116, 116, 116, 158,
	158, 158, 158, 163, 163, 133, 133, 136, 136, 135,
	137, 164, 164, 168, 165, 165, 169, 169, 169, 169,
	172, 172, 173, 173, 173, 170, 170, 170, 167, 167,
	167, 207, 207, 207, 175, 175, 186, 186, 183, 183,
	184, 184, 176, 176, 224, 224, 189, 189, 189, 189,
	189, 189, 189, 189, 191, 191, 190, 190, 190, 187,
	187, 187, 188, 188, 205, 205, 201, 201, 206, 206,
	202, 202, 208, 208, 209, 209, 272, 272, 235, 235,
	282, 282, 236, 236, 283, 283, 285, 285, 280, 280,
	281, 281, 284, 284, 30, 286, 286, 287, 287, 288,
	288, 288, 288, 31, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 291, 292,
	196, 197, 197, 197,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 11, 7,
	9, 5, 5, 15, 11, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 0, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	3, 5, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 4, 3, 2, 4,
	3, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 4, 1, 1, 2, 3, 4,
	3, 3, 3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 1, 2, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 2, 1, 2,
	1, 2, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 2, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 1, 1, 5,
	1, 3, 2, 5, 4, 3, 3, 3, 5, 3,
	8, 10, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 0, 1, 2, 4, 0,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 4, 4, 4, 4, 4, 3,
	2, 3, 4, 4, 3, 6, 6, 4, 4, 4,
	4, 4, 4, 3, 3, 2, 6, 2, 4, 4,
	4, 5, 7, 6, 5, 4, 2, 4, 3, 2,
	3, 3, 1, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 7, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 1, 3, 5, 4, 6, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -289, -1, -2, -7, -8, -9, -10, -11, -13,
	-46, -14, -15, -16, -53, -54, -55, -60, -61, -62,
	-58, -57, -56, -17, -23, -26, -18, -64, -27, -28,
	-29, -30, -31, -3, 6, 7, -68, 9, 10, 30,
	-49, 130, -47, -48, 133, 132, 169, 134, 162, 64,
	225, -63, 228, 229, -294, -194, 167, 168, 136, 212,
	213, 20, 37, 230, 232, 31, 32, -4, -85, -5,
	8, 322, 131, 226, 164, 163, 26, 367, -291, 68,
	-290, 437, -146, 15, -65, -295, -65, -65, -65, -65,
	-65, -251, 105, 68, -188, 143, 86, 313, 139, -195,
	-186, -187, 189, 199, 44, 150, 149, 140, 140, 141,
	143, 313, 139, 177, 176, 140, -104, -208, 71, -199,
	364, 153, 379, 380, 131, 186, 225, 239, 233, 267,
	255, 365, 381, 154, 207, 138, 253, 256, 300, 152,
	200, 382, 289, 295, 210, 80, 228, 309, 383, 155,
	204, 206, 205, 194, 211, 36, 165, 251, 244, 215,
	189, 384, 372, 242, 28, 184, 385, 297, 272, 386,
	369, 296, 247, 243, 136, 387, 156, 150, 179, 388,
	273, 277, 389, 301, 390, 391, 392, 142, 237, 238,
	393, 190, 303, 271, 33, 151, 366, 48, 174, 304,
	38, 275, 37, 281, 394, 270, 265, 282, 395, 396,
	397, 398, 269, 236, 264, 202, 53, 137, 279, 278,
	280, 203, 299, 260, 258, 399, 400, 157, 401, 402,
	245, 18, 403, 404, 307, 168, 405, 42, 406, 407,
	408, 172, 409, 410, 411, 298, 274, 276, 188, 412,
	248, 147, 413, 176, 414, 368, 415, 305, 241, 416,
	158, 232, 173, 167, 308, 417, 213, 418, 419, 420,
	159, 421, 422, 423, 229, 230, 291, 208, 424, 425,
	426, 427, 198, 183, 311, 302, 52, 212, 286, 428,
	235, 149, 214, 429, 226, 43, 180, 7, 201, 292,
	209, 199, 262, 175, 430, 431, 249, 250, 268, 234,
	263, 227, 177, 178, 169, 432, 310, 287, 370, 51,
	257, 254, 181, 261, 433, 143, 434, 182, 231, 306,
	252, 288, 140, 123, 256, 300, 130, 290, 291, 297,
	-245, 298, 176, 179, -212, 140, -178, 289, 182, 71,
	141, 142, 33, 302, 301, 293, -208, 144, 231, -74,
	134, 170, -104, -196, -196, -196, -196, -43, 71, 214,
	-43, 30, 71, 71, 36, 71, 230, 292, 292, 6,
	-67, 5, -176, 143, 145, 227, -86, -90, -210, -208,
	-200, 73, 335, 336, 337, 338, 339, 352, 353, 354,
	340, 341, 355, 356, 357, 342, 343, 358, 359, 361,
	362, 360, 346, 345, 344, 347, 348, 350, 349, 351,
	-2, -156, 17, 16, -71, 54, 55, -66, -79, 114,
	-81, -208, -112, 88, -118, 29, 71, -199, 24, -117,
	-113, -138, -137, -93, 123, 124, 125, 112, 113, 120,
	89, 126, -124, -122, -123, -125, -127, -128, 73, 72,
	81, 74, 75, 76, 77, 82, 83, 84, -201, -135,
	-291, 58, 59, 139, 323, 324, 325, 326, 363, 160,
	327, 91, 47, 312, 321, 320, 319, 317, 318, 314,
	316, 315, 329, 330, 146, 313, 118, 322, 352, 353,
	354, 355, 356, 357, 358, 359, 361, 362, 360, 342,
	335, 336, 337, 338, 339, 340, 341, 343, 344, 345,
	346, 347, 348, 349, 350, 351, -176, -176, 11, -97,
	-98, -104, -107, -208, -165, 227, -172, -169, 301, 302,
	-170, -173, -167, -138, 281, 410, 411, 300, 256, 299,
	-201, -208, -104, -252, -240, -243, -202, 155, -263, -201,
	-198, 152, 71, -199, 135, 161, 87, 371, 23, 25,
	284, 335, 90, 123, 336, 337, 338, 16, 20, 91,
	122, 323, 339, 130, 62, 314, 316, 312, 313, 290,
	29, 10, 26, 163, 193, 22, 116, 132, 94, 95,
	96, 166, 24, 164, 84, 160, 19, 65, 11, 13,
	333, 334, 14, 146, 145, 107, 191, 141, 60, 8,
	126, 27, 104, 56, 340, 341, 375, 45, 376, 58,
	105, 17, 317, 318, 31, 363, 342, 171, 377, 343,
	118, 196, 63, 50, 88, 82, 34, 85, 66, 86,
	15, 192, 61, 331, 195, 378, 106, 133, 322, 59,
	139, 6, 328, 30, 162, 346, 345, 344, 347, 197,
	57, 325, 326, 348, 435, 140, 93, 329, 330, 144,
	83, 5, 44, 32, 9, 64, 67, 319, 320, 321,
	47, 350, 349, 351, 92, 12, 332, 367, 141, -104,
	322, -184, 146, -184, 177, 176, 140, 97, -50, -104,
	-183, 146, -201, -183, -183, -183, -183, -183, -104, 127,
	-104, 71, 30, -182, 105, 12, 313, 139, 71, 176,
	179, 140, 177, 143, -197, -291, -202, -197, -247, 11,
	107, 180, 180, 180, 181, 180, -181, -180, 178, 295,
	296, 292, 294, 12, -82, 105, -197, 71, 230, 144,
	-59, -2, -10, -8, -9, -2, 97, 30, 30, 73,
	51, 30, -38, -37, -39, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 30, -273, 68,
	-235, 281, 71, -286, -287, -104, -65, -6, -4, -291,
	6, 21, 22, 140, -104, 69, 23, -291, -292, 70,
	-157, 19, 31, -121, 74, 77, -147, -150, -81, -200,
	335, 336, 337, 338, 339, 352, 353, 354, 340, 341,
	355, 356, 357, 342, 343, 358, 359, 361, 362, 360,
	346, 345, 344, 347, 348, 350, 349, 351, -208, 50,
	-69, 21, 22, 79, 11, -204, 87, 86, 104, -203,
	23, 71, -199, -200, 73, 127, -81, -115, 107, 88,
	105, 106, 90, 109, 108, 119, 112, 113, 114, 115,
	116, 117, 118, 110, 111, 122, 97, 98, 99, 100,
	101, 102, 103, -177, -291, -93, -291, 128, 129, -118,
	-118, -118, -118, -118, -118, -118, -118, -291, -2, -131,
	-81, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -141, -81, -291, -296, -126, -291, -296, -126,
	-296, -126, -296, -291, -296, -126, -296, -126, -296, -296,
	-126, -296, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -106, 27, -104, -84,
	-87, -88, -89, -108, -92, -291, -104, -93, -104, -97,
	-293, 69, 11, 67, -293, 69, 127, 69, -166, -171,
	303, 305, 227, -170, -170, -207, -201, 73, 29, 97,
	30, 127, 70, 69, -243, 155, 152, -214, -218, -220,
	-219, -221, -216, -217, 253, 256, 260, 258, 254, 259,
	123, 257, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 30, 165, 249, 250, 251, 252, 273,
	274, 275, 276, 277, 278, 279, 280, 233, 255, 365,
	234, 235, 236, 237, 238, 239, 241, 242, 243, 244,
	245, 246, 247, 71, -263, 68, -201, 23, 143, 71,
	88, 71, 71, 71, -184, 71, 69, 144, -97, 24,
	66, -99, -104, 71, 71, 71, 71, -209, -208, -198,
	-197, -182, 73, -81, -184, -184, -197, -197, -197, -104,
	-104, -104, -104, -182, -182, -197, -197, -179, 11, 107,
	11, -179, -179, -81, -118, 71, 71, 230, 71, -38,
	-38, 73, -38, 69, 97, -38, 70, -131, -272, 436,
	69, -288, 23, 305, 306, 282, -71, -2, -65, -104,
	-197, -90, -92, -291, -158, -201, 9, 107, 69, 18,
	69, -155, 25, 26, -155, 127, -119, 51, 74, 77,
	-185, 49, -104, -81, -81, -129, 82, 88, 83, 84,
	-203, 114, -209, -202, -198, -118, -130, -135, -93, 78,
	107, 105, 106, 90, -118, -118, -118, -118, -118, -118,
	-118, -118, -118, -118, -118, -118, -118, -118, -118, -211,
	71, 73, 71, -117, -117, -201, -69, -292, 69, -292,
	-2, -77, -80, 114, -81, -208, -77, -292, -81, -81,
	-138, 73, -77, -138, 73, -77, -77, -77, -69, -139,
	-140, 92, -138, -292, -118, -201, -201, -77, -78, -77,
	-77, -77, -292, -292, -80, -77, -80, -77, -77, -292,
	-292, -292, -292, -69, -69, -77, -77, -77, -69, -77,
	-77, -69, -77, -77, -77, -77, -69, -77, -77, -77,
	-161, 172, -104, 30, 69, -100, -102, -101, -103, 56,
	60, 62, 57, 58, 59, 63, -192, 23, -84, -91,
	47, -291, -109, 172, -110, 23, -210, 64, 145, 65,
	-161, 67, -84, -104, -84, -107, -208, 114, -169, -172,
	69, 304, 306, 307, -166, -228, 122, 66, 85, -81,
	-202, -209, -253, -254, -255, -202, 73, 74, -240, -241,
	-242, -243, -256, 155, -262, 147, 149, 44, -244, 156,
	141, 45, -215, -229, 287, -222, 68, -222, -222, 261,
	253, 256, 254, -222, -222, -222, -222, -222, -227, 256,
	-227, -227, -227, -227, 254, 68, 68, -222, -222, -222,
	-231, 68, -231, 248, -232, 68, -232, -232, -232, -232,
	-263, -81, -205, 67, -153, -104, -197, 24, -197, -44,
	186, 161, 68, -104, -104, -104, -104, 69, 71, 71,
	-248, 11, 107, -182, -208, -208, -104, -120, 23, -182,
	-75, 166, 71, -37, -117, 70, -105, 27, 73, -287,
	-210, 281, 306, -69, -292, -71, -52, -51, -189, 135,
	132, 133, 137, 138, -266, 284, 131, 256, 80, 29,
	15, 323, 172, 370, 71, 173, -292, 69, 127, 52,
	-121, -121, -150, -175, 19, 11, 47, 47, -70, 57,
	82, 83, 84, 127, -291, -130, -118, -118, -118, -75,
	87, -292, -78, -81, -292, 69, -292, 127, -292, 69,
	67, 23, 11, 11, -292, 11, 11, -292, -292, -292,
	-77, -142, -140, 94, -81, -292, -292, 69, 69, -292,
	-292, -292, -292, -151, 331, -151, -292, -292, -292, -292,
	-292, -151, -151, -151, -151, -77, -77, -292, -292, -292,
	-77, -292, -292, -77, -292, -292, -292, -292, -77, -292,
	-292, -292, -116, 30, 47, -2, -291, -291, -164, -168,
	-138, -87, -88, -88, -87, -88, 56, 56, 56, 61,
	56, 61, 56, -101, -210, -292, -292, -134, 185, -291,
	34, -210, -110, 141, 141, 141, -111, 12, -84, -111,
	-111, 127, -171, -174, 308, 305, 311, 71, 73, 127,
	69, -255, 97, -243, 68, 71, 45, -244, 141, 45,
	-244, -249, 71, -249, 45, -233, -225, -226, -234, -237,
	-223, 82, 88, 29, 66, 284, 147, 45, 44, 80,
	-230, 288, 74, -227, -227, -222, -222, -222, 261, -222,
	-227, -228, 30, -228, -228, -228, -228, -227, -238, 73,
	-238, 74, -231, 74, 70, 66, -201, -2, 23, -45,
	8, 9, 10, -274, -275, -276, 71, 107, 191, 192,
	144, -197, -104, -197, -197, -111, 71, 71, -179, -182,
	34, -118, -161, 140, -288, -185, 69, -196, -193, -267,
	-244, -271, -242, -243, 148, 156, 147, 172, 155, -193,
	-267, 155, 152, -244, 156, 148, -190, -244, 144, 23,
	-193, -193, -250, 97, -193, 172, 23, -201, -201, 53,
	-104, -76, -154, 114, -202, -78, -75, 87, -118, -292,
	-80, 114, -209, -213, 123, 253, 165, 251, 244, 271,
	258, 286, 249, 287, -211, -213, -118, -118, -118, -118,
	364, -146, 96, -81, 93, -118, -118, -201, -291, -151,
	-151, -151, -151, -151, -292, -292, -152, -151, -152, -152,
	-292, -152, -152, -292, -152, -152, -152, -152, -292, -152,
	-152, -152, -163, 66, -164, -133, -136, -135, -291, -2,
	-158, -162, -201, -111, 69, 97, -95, -94, 66, 67,
	-96, 66, -94, 56, 56, -160, 68, 69, -135, -291,
	-162, -118, -110, -291, -291, -291, -146, -81, -111, 305,
	309, 310, -254, -255, -258, -257, -201, -262, 156, -249,
	-249, 68, 82, -118, 9, 45, 45, 73, 70, -228,
	-228, -227, -222, -228, 71, 123, -228, 70, 69, 70,
	69, 70, 69, -114, 385, 88, -104, -153, -153, 66,
	70, 69, -214, 71, 71, 71, -104, -182, -118, -227,
	-104, -70, -51, 68, -239, 71, -196, -249, -187, 71,
	71, -196, 71, 71, -201, 45, 71, -104, -201, -239,
	71, -81, -201, -201, -92, 127, -111, 11, 69, -79,
	-292, -118, 127, -292, -222, -222, -222, -232, -222, 238,
	-222, 238, -292, -292, 19, 19, 19, 19, -291, -73,
	328, -81, 69, 69, -146, 172, -152, -152, -152, -152,
	-152, 28, -163, 69, -292, -292, -292, -292, 69, -146,
	-168, -81, -81, 68, -81, -159, -201, 185, -292, -110,
	-192, -159, -159, -159, -156, 70, 69, -222, -159, -123,
	-228, -227, 73, -227, 74, 74, 385, 68, -2, -104,
	-277, -278, -279, 80, 366, 88, 193, 194, 157, 195,
	196, 197, -276, -214, -214, -214, -280, -181, -76, -239,
	-148, 160, 161, -214, -205, -246, -244, 71, -191, 144,
	23, 144, -148, -239, 30, 132, 27, -201, -143, 13,
	-84, -154, -154, 114, -227, 71, -118, -118, -118, -118,
	-118, -292, 73, -118, -118, -292, 16, 45, -136, 47,
	-2, -291, -201, -156, -159, 70, 69, -135, -109, -210,
	-292, -292, -292, -260, -259, 67, 151, 80, -257, -155,
	70, -228, -228, 70, 70, -258, -153, 19, -153, -279,
	73, 197, 193, 197, 197, 197, 197, 198, -281, 38,
	-283, 39, 11, 70, 71, -215, 68, -249, 71, -201,
	-148, 29, 29, -291, -144, 14, 16, -111, -79, -292,
	-292, -292, -292, -72, 107, 367, -292, -292, -131, 9,
	-133, -2, 70, -201, -110, -259, 71, -250, 73, 158,
	70, 184, -20, -2, -8, -9, -10, -11, -13, -46,
	-14, -15, -21, -22, -16, -53, -54, -63, -61, -62,
	-58, -57, -25, -23, -26, -18, -27, -28, -29, -24,
	91, 146, 215, 225, 36, 36, 189, 190, -224, 145,
	-284, 43, -282, -236, 42, 16, -84, -258, -205, -118,
	-264, -265, 172, -145, -81, -200, -132, -83, -81, -200,
	-143, -154, -292, 365, 63, 368, -146, -164, -292, 74,
	-104, -261, -260, 185, -153, -81, -81, 71, -42, -206,
	218, 219, 220, -202, -32, -20, -160, 74, -283, 16,
	-285, 40, 41, 73, -111, 70, 68, -292, 69, -201,
	69, -144, 53, 366, 369, -292, 68, -149, 187, 188,
	-33, -34, 92, 93, 216, 217, 221, -214, 69, 437,
	38, 73, 16, 16, -143, -261, -258, -265, 47, -83,
	53, -159, -153, 71, 71, 96, 94, -34, -81, -32,
	19, 19, 19, 29, -202, 96, -20, 73, 73, -144,
	70, 174, 367, 70, -12, -19, -11, -8, -9, -10,
	225, 91, -32, 93, 437, -43, 74, -2, -41, -40,
	74, -43, 223, 88, 224, 71, -118, -261, 175, 368,
	-269, -270, 66, -153, -32, 437, -32, 96, 94, -35,
	-36, 95, -20, 69, 222, -291, 369, -270, 66, -269,
	66, 10, 9, 437, 96, 437, 146, -32, 96, 94,
	-36, -81, -40, -118, 171, -268, 159, 154, 157, 30,
	-268, 96, 91, 437, 146, -32, 93, -292, -292, 153,
	29, 82, 96, 437, -32, 146, 96, 437, 146,
}
var yyDef = [...]int{

	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, -2, 527, 527, 527, 527, 527, 527,
	0, -2, 397, 398, 0, 0, 0, 0, -2, 498,
	499, 500, 502, 503, 518, -2, 1340, 1340, 1340, 0,
	184, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 902, 0, 521, 510, 511, 0, 0, 1338,
	1, 3, 844, 0, 536, 529, 0, 902, 902, 0,
	0, 86, 0, 0, 0, 0, 0, 900, 900, 0,
	0, 923, 0, 897, 919, 920, 921, 0, 898, 0,
	898, 898, 898, 898, 898, 0, 450, 620, 932, 933,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 0, 0, 0, 491, 0, 1341, 1341, 465,
	0, 467, 0, 0, 0, 0, 0, 476, 479, 1341,
	348, 349, 350, 495, 496, 485, 497, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 163, 165, 0,
	185, 0, 188, 191, 938, 504, 0, 0, 963, 527,
	0, 531, 0, 0, 903, 501, 44, 45, 0, 604,
	605, 606, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	0, 850, 0, 0, 539, 537, 538, 528, 0, 550,
	559, 0, 629, 0, 634, 636, -2, -2, 0, 677,
	678, 679, 680, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 706, 707, 708, 709, 710, 814, 815,
	816, 817, 818, 819, 820, 821, 638, 639, 811, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 802, 0, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 68, 620, 72, 1289, 0, 874, -2, -2,
	876, 0, 0, 0, -2, -2, -2, -2, 1115, -2,
	811, 0, 87, 0, 225, 226, 0, 1127, 369, 930,
	931, 1117, 926, 927, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 900, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	451, 1341, 491, 454, 0, 0, 900, 900, 1341, 1341,
	1341, 0, 0, 0, 463, 1342, 1343, 464, 0, 371,
	372, 491, 491, 1341, 1341, 488, 0, 488, 488, 486,
	487, 482, 483, 0, 478, 0, 480, 505, 0, 0,
	512, 514, 515, 516, 517, 513, 0, 0, 0, 167,
	0, 0, 187, 169, 0, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 0, 190, 0,
	936, 939, 509, 954, 955, 0, 536, 41, 51, 0,
	527, 532, 533, 0, 1341, 0, 0, 0, 50, 1339,
	36, 0, 0, 845, 848, 849, 836, 837, 841, 841,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 0, 0,
	534, 540, 541, 530, 0, 551, 0, 0, 0, 560,
	0, 562, 563, 564, 565, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 656, 657, 658, 659,
	660, 661, 662, 635, 0, 649, 0, 0, 0, 697,
	698, 699, 700, 701, 702, 703, 0, 539, 0, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 803, 0, 756, 765, 0, 757, 766,
	758, 767, 759, 0, 760, 768, 761, 769, 762, 763,
	770, 764, 0, 0, 0, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	539, 0, 0, 0, 539, 0, 0, 539, 0, 0,
	0, 0, 539, 0, 0, 0, 70, 0, 619, 0,
	566, 568, 569, 570, -2, 0, 623, 669, -2, 0,
	0, 0, 62, 63, 0, 0, 0, 0, 73, 75,
	0, 0, 1289, 877, 878, 324, 891, 892, 893, 0,
	889, 0, 386, 0, 227, 0, 0, 235, 312, 243,
	244, 245, 305, 247, 305, 305, 0, 305, 305, 305,
	305, 305, 321, 321, 321, 321, 321, 288, 289, 290,
	291, 292, 0, 0, 265, 305, 305, 305, 269, 295,
	296, 297, 298, 299, 300, 301, 302, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 307, 307, 309, 309,
	309, 309, 309, 0, 368, 0, 924, 84, 0, 1341,
	0, 1341, 0, 0, 0, 119, 0, 0, 442, 899,
	0, 444, 64, 445, 446, 447, 448, 621, 934, 935,
	452, 453, 492, 493, 0, 0, 457, 458, 459, 460,
	461, 462, 373, 468, 469, 470, 475, 491, 0, 0,
	0, 584, 491, 477, 663, 507, 506, 0, 519, 164,
	166, 168, 186, 0, 0, 189, 192, 0, 0, 0,
	0, 957, 0, 959, 961, 0, 539, 0, 536, 0,
	428, 46, 47, 0, 0, 859, 851, 0, 0, 0,
	0, 839, 842, 843, 840, 0, 0, 822, 0, 0,
	542, 535, 38, 630, 631, 633, 650, 0, 652, 654,
	561, 552, 0, 812, -2, 640, 641, 665, 666, 667,
	0, 0, 0, 0, 663, 645, 0, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 696,
	787, 788, 0, 694, 695, 704, 671, 668, 0, 869,
	0, 0, 673, 546, 547, 0, 0, 743, 0, 0,
	679, 814, 0, 679, 814, 0, 0, 0, 0, 809,
	806, 0, 0, 774, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 610, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 577, 1219, 579, 0, 623, 0, 0, 0,
	627, 0, 627, 67, 627, 69, 0, 622, 875, 0,
	0, 0, 78, 79, 74, 879, 0, 885, 886, 887,
	812, 0, 224, 387, 389, 392, 393, 394, 228, 230,
	231, 232, 0, 1127, 361, 1229, 1269, -2, 355, 1154,
	-2, -2, 234, 314, 313, 246, 0, 321, 321, 305,
	305, 305, 305, 274, 321, 277, 280, 281, 324, 0,
	324, 324, 324, 324, 321, 0, 0, 266, 267, 268,
	257, 0, 258, 307, 260, 0, 261, 262, 263, 264,
	367, 0, 0, 0, 0, 0, 91, 901, 92, 0,
	120, 121, 95, 223, 0, 440, 1341, 0, 1341, 1341,
	627, 0, 0, 471, 489, 490, 488, 491, 0, 474,
	481, 0, 508, 170, 171, 193, 70, 0, 937, 956,
	0, 960, 962, 534, 52, 539, 399, 400, 1340, -2,
	429, 916, 429, 429, 418, 341, 429, 906, 907, 908,
	909, 910, 911, 912, 913, 0, 0, 0, 0, 0,
	846, 847, 838, 0, 894, 895, 823, 824, 85, 543,
	651, 653, 655, 0, 671, 642, 663, 646, 0, 643,
	0, 637, 0, 676, -2, 0, 741, 0, 742, 0,
	0, 0, 0, 0, 780, 0, 0, 781, 0, 752,
	835, 0, 807, 0, 0, 755, 775, 0, 0, 776,
	777, 778, 779, 730, 0, 731, 0, 0, 0, 0,
	0, 737, 738, 739, 740, 0, 0, 557, 557, 557,
	0, 557, 557, 0, 557, 557, 557, 557, 0, 557,
	557, 557, 863, 0, 0, 854, 0, 0, 627, 871,
	0, 567, 598, 600, 0, 595, 608, 609, 611, 0,
	613, 0, 615, 616, 586, 573, 670, 574, 0, 0,
	0, 623, 583, 0, 0, 0, 835, 0, 627, 60,
	61, 0, 76, 77, 0, 0, 83, 325, 326, 0,
	0, 390, 0, 229, 0, 0, 343, 355, 351, 352,
	355, 346, 356, 347, 0, 236, 237, 238, 239, 240,
	241, 316, 0, 0, 0, 320, 0, 328, 330, 0,
	242, 315, 0, 324, 324, 321, 272, 273, 305, 278,
	324, 282, 0, 283, 284, 285, 286, 324, 0, 303,
	0, 0, 259, 0, 383, 0, 925, 84, 84, 0,
	122, 123, 124, 0, 96, 97, 0, 0, 0, 0,
	0, 443, 65, 455, 456, 466, 374, 375, 491, 473,
	0, 664, 321, 0, 958, 542, 0, 402, 0, 1340,
	355, 0, 419, 420, 430, 431, 432, 433, 0, 0,
	1340, 0, 0, 0, 431, 0, 0, 0, 917, 918,
	0, 0, 0, 342, 0, 0, 0, 861, 860, 852,
	37, 627, 0, 553, 813, 0, 644, 0, 647, 711,
	674, 548, 0, 0, 305, 305, 792, 305, 309, 795,
	305, 797, 305, 800, 0, 0, 0, 0, 0, 0,
	0, 804, 754, 810, 0, 0, 0, 554, 835, 732,
	733, 734, 735, 736, 557, 557, 715, 558, 716, 717,
	557, 719, 720, 557, 722, 723, 724, 725, 557, 727,
	728, 729, 53, 0, 863, 853, 865, 867, 0, 0,
	0, 0, 590, 835, 0, 0, 592, 599, 0, 0,
	593, 0, 594, 612, 614, 571, 0, 0, 575, 0,
	0, -2, 582, 0, 0, 0, 844, 628, 59, 80,
	81, 82, 388, 391, 0, 357, 305, 360, 0, 344,
	345, 0, 317, 318, 0, 327, 329, 331, 306, 270,
	271, 324, 279, 275, 322, 323, 287, 321, 0, 321,
	0, 310, 0, 370, 384, 0, 0, 89, 0, 0,
	103, 0, 99, 0, 0, 0, 441, 472, 585, 948,
	617, 85, 401, 0, 425, 0, 405, 924, 353, 396,
	406, 407, 412, 413, 414, 0, 0, 409, 0, 425,
	0, 422, 0, 0, 48, 0, 825, 0, 85, 85,
	712, 648, 0, 744, 789, 321, 793, 794, 796, 798,
	799, 801, 746, 745, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 713, 714, 718, 721,
	726, 0, 54, 0, 868, -2, 0, 71, 0, 844,
	872, 873, 596, 0, 601, 0, 588, 0, 623, 580,
	0, 0, 0, 0, 58, 333, 0, 841, 0, 319,
	276, 324, 304, 324, 0, 0, 385, 0, 84, 0,
	84, 104, 105, 0, 0, 0, 110, 0, 0, 0,
	0, 0, 98, 100, 101, 102, 950, 944, 0, 0,
	404, 426, 0, 235, 0, 355, 354, 421, 0, 914,
	915, 0, 416, 425, 0, 0, 0, 862, 831, 0,
	627, 0, 544, 549, 790, 791, 0, 0, 0, 0,
	782, 753, 805, 0, 0, 555, 0, 0, 866, 0,
	857, 0, 591, 57, 0, 587, 0, 576, 578, 623,
	624, 625, 626, 332, 336, 0, 341, 0, 358, 359,
	0, 293, 294, 308, 311, 0, 90, 0, 0, 106,
	107, 108, 109, 111, 112, 0, 0, 0, 904, 952,
	-2, 0, 0, 403, 427, 233, 0, 924, 408, 415,
	417, 0, 424, 0, 42, 0, 0, 825, 85, 747,
	749, 748, 750, 0, 0, 0, 771, 772, 835, 0,
	856, 0, 597, 589, 581, 337, 338, 0, 340, 0,
	334, 0, 84, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	0, 0, 0, 0, 113, 114, 115, 116, 586, 0,
	944, 0, 946, 0, 943, 0, 627, 0, 0, 423,
	0, 435, 0, 832, 833, 834, 826, 827, 829, 830,
	831, 545, 751, 0, 0, 0, 0, 864, -2, 339,
	0, 88, 335, 125, 94, 0, 0, 926, 0, 0,
	152, 153, 154, 928, 0, 194, 35, 0, 951, 0,
	949, 0, 0, 945, 825, 334, 0, 434, 0, 0,
	0, 43, 783, 0, 786, 556, 0, 84, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 150, 0, 0,
	905, 953, 0, 0, 831, 410, 0, 436, 0, 828,
	784, 0, 0, 126, 127, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 929, 117, 195, 947, 941, 40,
	334, 0, 0, 362, 84, 128, 129, 130, 131, 132,
	0, 134, 0, 0, 0, 146, 147, 148, 0, 155,
	157, 158, 159, 0, 161, 162, 151, 411, 0, 0,
	363, 364, 0, 93, 0, 0, 0, 0, 0, 0,
	143, 0, 149, 0, 160, 0, 785, 365, 0, 366,
	0, 0, 0, 0, 0, 138, 139, 0, 0, 0,
	144, 0, 156, 0, 0, 376, 378, 379, 0, 0,
	377, 133, 135, 0, 141, 0, 0, 437, 438, 380,
	381, 382, 0, 0, 0, 140, 0, 145, 142,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 437,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:421
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:426
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:427
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:431
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:464
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:470
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:476
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:483
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:489
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:500
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:507
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:513
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:520
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:529
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:539
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:545
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:549
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:559
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:575
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:587
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:599
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:609
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:619
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:623
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:627
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:651
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:657
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:661
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:666
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:670
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:680
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:687
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:710
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:714
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:728
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:732
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:737
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:742
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:748
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:761
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:765
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:769
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:773
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:781
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:789
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:793
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:798
		{
			yyVAL.procedureParams = nil
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:818
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:822
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:835
		{
			yyVAL.characteristics = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:839
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:849
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:859
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:863
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:875
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:887
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:902
		{
			yyVAL.str = ""
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:912
		{
			yyVAL.str = BeforeStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.str = AfterStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.str = InsertStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.str = UpdateStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.str = DeleteStr
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.triggerOrder = nil
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:939
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:949
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:959
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:965
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:969
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:985
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:991
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 140:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:996
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1001
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 142:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1007
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1015
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1019
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1025
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1031
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1035
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1039
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1043
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1047
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1051
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1058
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1072
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1120
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1126
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.statement = &Resignal{}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1233
		{
			yyVAL.exprs = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1241
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1289
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1306
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1333
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1338
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1352
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1402
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1411
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1442
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1710
		{
			yyVAL.sqlVal = nil
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1719
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1723
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1731
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1735
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1741
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1749
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1758
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1785
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.colKeyOpt = colKey
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1847
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1851
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1856
		{
			yyVAL.indexOptions = nil
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1876
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1905
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1946
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = yyDollar[1].str
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1955
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1991
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 363:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1995
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1999
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2003
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 366:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2007
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2027
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2089
		{
			yyVAL.boolean = true
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.boolean = true
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.boolean = false
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2102
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = yyDollar[1].str
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2159
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2186
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2193
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2200
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2212
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2221
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 411:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2225
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2239
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2243
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2247
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2254
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2276
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2285
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2289
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnOrder = nil
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2308
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2314
		{
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2325
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2341
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2345
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2361
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2377
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2381
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2389
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2405
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2413
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2427
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2438
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2443
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2447
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2451
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2460
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2472
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2476
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2492
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2496
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2504
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2508
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2512
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2516
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2520
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2525
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2535
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2539
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2547
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2553
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2571
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2593
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.str = "full "
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2627
		{
			yyVAL.showFilter = nil
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2631
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2641
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = SessionStr
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = GlobalStr
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.statement = &Begin{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2675
		{
			yyVAL.statement = &Begin{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.statement = &Commit{}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.statement = &Rollback{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2703
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2707
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2711
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2745
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2749
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.statement = &OtherRead{}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2784
		{
			setAllowComments(yylex, true)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2788
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.bytes2 = nil
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = UnionStr
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = UnionAllStr
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = UnionDistinctStr
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2817
		{
			yyVAL.byt = 0
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.byt = 1
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.str = SQLCacheStr
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = ""
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = DistinctStr
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = StraightJoinHint
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2870
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2889
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2893
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2903
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2911
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2922
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 556:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2926
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2931
		{
			yyVAL.over = nil
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.over = yyDollar[1].over
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2940
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2944
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2948
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2958
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2966
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2990
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3012
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3022
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3033
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3048
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3052
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3056
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3060
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = nil
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3080
		{
			yyVAL.columns = nil
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3094
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3117
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3121
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3125
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3137
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3141
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3147
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3152
		{
			yyVAL.empty = struct{}{}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = JoinStr
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = JoinStr
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = JoinStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = StraightJoinStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = LeftJoinStr
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = LeftJoinStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = RightJoinStr
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.str = RightJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = NaturalJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3227
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3252
		{
			yyVAL.indexHints = nil
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3256
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3260
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3264
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3337
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3345
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = IsNullStr
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3375
		{
			yyVAL.str = IsNotNullStr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.str = IsTrueStr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = IsNotTrueStr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = IsFalseStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = IsNotFalseStr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = EqualStr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = LessThanStr
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = GreaterThanStr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = LessEqualStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = GreaterEqualStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = NotEqualStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3421
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = nil
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3444
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3466
		{
			yyVAL.selectExprs = nil
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3477
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3483
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3513
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3517
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3525
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3573
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3593
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3635
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3639
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3649
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3701
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3730
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3734
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3773
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3789
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3793
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3797
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3805
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3809
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3813
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 753:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3821
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3829
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3873
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3877
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3886
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3895
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3905
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3909
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 772:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3913
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3934
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3946
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3950
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3954
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = BooleanModeStr
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = QueryExpansionStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3992
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3996
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4008
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4012
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4042
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = nil
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = string("")
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4076
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = nil
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4085
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4099
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4117
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.expr = &NullVal{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4143
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			yyVAL.exprs = nil
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4156
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4166
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4185
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.orderBy = nil
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4204
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = AscScr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = AscScr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = DescScr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4242
		{
			yyVAL.limit = nil
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4246
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4250
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4254
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = ForUpdateStr
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = ShareModeStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4290
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4303
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4307
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4311
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4330
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.assignExprs = nil
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4339
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4345
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4349
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4359
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4418
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.setScope = SetScope_Global
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.setScope = SetScope_Session
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.setScope = SetScope_Session
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4489
		{
			yyVAL.bytes = []byte("charset")
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.expr = &Default{}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4513
		{
			yyVAL.byt = 0
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.byt = 1
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4518
		{
			yyVAL.byt = 0
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.byt = 1
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4523
		{
			yyVAL.byt = 0
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yyVAL.byt = 1
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = IgnoreStr
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4533
		{
			yyVAL.sqlVal = nil
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4535
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.empty = struct{}{}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4562
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = UniqueStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = FulltextStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = SpatialStr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = yyDollar[1].str
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4582
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4584
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string("")
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4636
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4641
		{
			yyVAL.EnclosedBy = nil
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4645
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4654
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4659
		{
			yyVAL.sqlVal = nil
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4668
		{
			yyVAL.sqlVal = nil
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.Fields = nil
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4681
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4686
		{
			yyVAL.Lines = nil
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4690
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4695
		{
			yyVAL.sqlVal = nil
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4699
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4725
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4731
		{
			yyVAL.lockType = "read"
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.lockType = "read local"
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.lockType = "write"
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4743
		{
			yyVAL.lockType = "low_priority write"
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			decNesting(yylex)
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5167
		{
			skipToEnd(yylex)
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5172
		{
			skipToEnd(yylex)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			skipToEnd(yylex)
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
