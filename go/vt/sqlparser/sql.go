// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	"fmt"
	__yyfmt__ "fmt"
)

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lock                     Lock
	lockType                 LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const LOW_PRIORITY = 57606
const NULLX = 57607
const AUTO_INCREMENT = 57608
const APPROXNUM = 57609
const SIGNED = 57610
const UNSIGNED = 57611
const ZEROFILL = 57612
const LOCAL = 57613
const COLLATION = 57614
const DATABASES = 57615
const SCHEMAS = 57616
const TABLES = 57617
const FULL = 57618
const PROCESSLIST = 57619
const COLUMNS = 57620
const FIELDS = 57621
const ENGINES = 57622
const PLUGINS = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_USER = 57640
const CURRENT_TIME = 57641
const LOCALTIME = 57642
const LOCALTIMESTAMP = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const GROUP_CONCAT = 57652
const SEPARATOR = 57653
const TIMESTAMPADD = 57654
const TIMESTAMPDIFF = 57655
const OVER = 57656
const WINDOW = 57657
const GROUPING = 57658
const GROUPS = 57659
const AVG = 57660
const BIT_AND = 57661
const BIT_OR = 57662
const BIT_XOR = 57663
const COUNT = 57664
const JSON_ARRAYAGG = 57665
const JSON_OBJECTAGG = 57666
const MAX = 57667
const MIN = 57668
const STDDEV_POP = 57669
const STDDEV = 57670
const STD = 57671
const STDDEV_SAMP = 57672
const SUM = 57673
const VAR_POP = 57674
const VARIANCE = 57675
const VAR_SAMP = 57676
const CUME_DIST = 57677
const DENSE_RANK = 57678
const FIRST_VALUE = 57679
const LAG = 57680
const LAST_VALUE = 57681
const LEAD = 57682
const NTH_VALUE = 57683
const NTILE = 57684
const ROW_NUMBER = 57685
const PERCENT_RANK = 57686
const RANK = 57687
const MATCH = 57688
const AGAINST = 57689
const BOOLEAN = 57690
const LANGUAGE = 57691
const WITH = 57692
const QUERY = 57693
const EXPANSION = 57694
const UNUSED = 57695
const ARRAY = 57696
const DESCRIPTION = 57697
const EMPTY = 57698
const EXCEPT = 57699
const JSON_TABLE = 57700
const LATERAL = 57701
const MEMBER = 57702
const RECURSIVE = 57703
const ACTIVE = 57704
const ADMIN = 57705
const BUCKETS = 57706
const CLONE = 57707
const COMPONENT = 57708
const DEFINITION = 57709
const ENFORCED = 57710
const EXCLUDE = 57711
const FOLLOWING = 57712
const GEOMCOLLECTION = 57713
const GET_MASTER_PUBLIC_KEY = 57714
const HISTOGRAM = 57715
const HISTORY = 57716
const INACTIVE = 57717
const INVISIBLE = 57718
const LOCKED = 57719
const MASTER_COMPRESSION_ALGORITHMS = 57720
const MASTER_PUBLIC_KEY_PATH = 57721
const MASTER_TLS_CIPHERSUITES = 57722
const MASTER_ZSTD_COMPRESSION_LEVEL = 57723
const NESTED = 57724
const NETWORK_NAMESPACE = 57725
const NOWAIT = 57726
const NULLS = 57727
const OJ = 57728
const OLD = 57729
const OPTIONAL = 57730
const ORDINALITY = 57731
const ORGANIZATION = 57732
const OTHERS = 57733
const PATH = 57734
const PERSIST = 57735
const PERSIST_ONLY = 57736
const PRECEDING = 57737
const PRIVILEGE_CHECKS_USER = 57738
const PROCESS = 57739
const RANDOM = 57740
const REFERENCE = 57741
const REQUIRE_ROW_FORMAT = 57742
const RESOURCE = 57743
const RESPECT = 57744
const RESTART = 57745
const RETAIN = 57746
const REUSE = 57747
const ROLE = 57748
const SECONDARY = 57749
const SECONDARY_ENGINE = 57750
const SECONDARY_LOAD = 57751
const SECONDARY_UNLOAD = 57752
const SKIP = 57753
const SRID = 57754
const THREAD_PRIORITY = 57755
const TIES = 57756
const UNBOUNDED = 57757
const VCPU = 57758
const VISIBLE = 57759
const SYSTEM = 57760
const INFILE = 57761

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 49,
	-2, 835,
	-1, 41,
	140, 896,
	141, 922,
	-2, 118,
	-1, 48,
	180, 494,
	181, 494,
	-2, 484,
	-1, 55,
	1, 1339,
	437, 1339,
	-2, 520,
	-1, 436,
	127, 932,
	-2, 926,
	-1, 437,
	127, 933,
	-2, 927,
	-1, 538,
	97, 1160,
	127, 1160,
	-2, 880,
	-1, 539,
	97, 1262,
	127, 1262,
	-2, 881,
	-1, 544,
	97, 1180,
	127, 1180,
	-2, 882,
	-1, 545,
	97, 1220,
	127, 1220,
	-2, 883,
	-1, 546,
	97, 1221,
	127, 1221,
	-2, 884,
	-1, 547,
	97, 1115,
	127, 1115,
	-2, 888,
	-1, 549,
	97, 1199,
	127, 1199,
	-2, 890,
	-1, 985,
	1, 572,
	5, 572,
	12, 572,
	13, 572,
	14, 572,
	15, 572,
	17, 572,
	19, 572,
	30, 572,
	31, 572,
	56, 572,
	57, 572,
	58, 572,
	59, 572,
	60, 572,
	62, 572,
	63, 572,
	66, 572,
	67, 572,
	69, 572,
	70, 572,
	437, 572,
	-2, 602,
	-1, 988,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1191,
	127, 935,
	-2, 931,
	-1, 1346,
	68, 355,
	-2, 1081,
	-1, 1349,
	68, 351,
	71, 351,
	-2, 1016,
	-1, 1350,
	68, 352,
	71, 352,
	-2, 1026,
	-1, 1444,
	68, 429,
	71, 429,
	-2, 395,
	-1, 1489,
	5, 50,
	-2, 668,
	-1, 1674,
	1, 623,
	5, 623,
	12, 623,
	13, 623,
	14, 623,
	15, 623,
	17, 623,
	19, 623,
	30, 623,
	31, 623,
	56, 623,
	57, 623,
	58, 623,
	59, 623,
	60, 623,
	62, 623,
	63, 623,
	66, 623,
	67, 623,
	69, 623,
	70, 623,
	437, 623,
	-2, 602,
	-1, 1930,
	5, 50,
	-2, 855,
	-1, 2057,
	41, 942,
	-2, 940,
	-1, 2165,
	5, 50,
	-2, 858,
}

const yyPrivate = 57344

const yyLast = 25429

var yyAct = [...]int{

	470, 78, 434, 2266, 2312, 2182, 2287, 2278, 2168, 2268,
	2277, 2103, 7, 2073, 2102, 6, 2101, 5, 1393, 2208,
	1862, 2104, 8, 2154, 2148, 1017, 2181, 2002, 2057, 2031,
	1716, 390, 1811, 1706, 1798, 1553, 1574, 1779, 1391, 736,
	1147, 428, 82, 1351, 469, 1984, 1324, 1959, 1168, 2169,
	1305, 1343, 1812, 1780, 421, 1715, 1554, 1653, 1869, 2100,
	3, 746, 910, 441, 1599, 454, 1776, 1367, 101, 367,
	370, 1473, 558, 363, 1145, 1442, 1790, 723, 1383, 78,
	1347, 985, 1672, 1332, 1303, 1161, 1727, 1333, 1097, 1216,
	1339, 1255, 1682, 560, 1379, 1247, 1354, 1683, 1419, 1636,
	388, 555, 1229, 1177, 1287, 1193, 1117, 1294, 818, 540,
	999, 424, 814, 794, 773, 1250, 439, 998, 554, 860,
	536, 537, 387, 772, 990, 926, 2334, 532, 2330, 2320,
	364, 365, 366, 556, 2302, 927, 2300, 981, 420, 529,
	2282, 2261, 2216, 81, 1139, 1842, 1953, 1960, 67, 984,
	2293, 982, 2201, 2276, 543, 1962, 2162, 2249, 2200, 84,
	1744, 2083, 875, 874, 884, 885, 877, 878, 879, 880,
	881, 882, 883, 876, 34, 1519, 886, 1915, 700, 34,
	34, 34, 1583, 1807, 1808, 1582, 1321, 1322, 1584, 701,
	112, 108, 109, 734, 110, 86, 87, 88, 89, 90,
	1000, 728, 1001, 1761, 1548, 1144, 1430, 1806, 851, 1320,
	749, 750, 378, 377, 1429, 34, 791, 70, 37, 38,
	2023, 1549, 1307, 1353, 1965, 1619, 2009, 114, 113, 1142,
	1143, 748, 2161, 1355, 1355, 796, 79, 1728, 1373, 1368,
	1368, 79, 79, 79, 1359, 1361, 1906, 1360, 483, 1380,
	489, 491, 490, 487, 488, 486, 485, 484, 1904, 357,
	1963, 1964, 1966, 1967, 1968, 492, 493, 376, 443, 727,
	731, 385, 1126, 733, 2291, 757, 2213, 79, 2054, 1730,
	2211, 2212, 116, 371, 2053, 104, 2052, 2051, 703, 368,
	2050, 362, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 2263, 2048, 729, 732, 1231, 730,
	2049, 2133, 2134, 2272, 2170, 352, 2267, 1400, 2205, 2206,
	1940, 1573, 2098, 745, 372, 531, 742, 96, 552, 741,
	2270, 699, 743, 744, 70, 37, 38, 2275, 735, 735,
	705, 704, 1399, 709, 2248, 751, 358, 752, 749, 750,
	735, 718, 2149, 349, 1709, 1288, 39, 360, 1732, 2326,
	78, 78, 1016, 1736, 111, 1731, 1815, 1729, 1985, 1986,
	2096, 762, 1734, 2032, 764, 2335, 763, 1016, 1874, 1016,
	98, 800, 1015, 1688, 95, 1733, 2034, 83, 2136, 808,
	106, 105, 2332, 361, 2321, 430, 2303, 702, 711, 1735,
	1737, 1593, 383, 384, 384, 333, 1995, 1658, 1087, 759,
	1078, 1368, 336, 1437, 1436, 1435, 698, 1671, 804, 761,
	765, 2084, 345, 350, 351, 706, 1626, 1358, 2316, 1382,
	102, 1127, 369, 1961, 758, 332, 895, 107, 1897, 897,
	103, 1994, 1841, 726, 369, 1998, 1890, 900, 901, 902,
	903, 904, 905, 906, 907, 820, 369, 2033, 342, 1016,
	1587, 343, 864, 1579, 348, 2269, 2271, 369, 1597, 908,
	1492, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 1016, 925, 928, 928, 928, 934, 928, 928,
	934, 928, 934, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 795, 986, 799,
	909, 71, 737, 1654, 2160, 77, 809, 1073, 334, 797,
	77, 77, 77, 756, 1920, 1316, 34, 1999, 70, 37,
	38, 2257, 2314, 1478, 97, 2315, 1597, 2313, 1150, 1152,
	61, 1463, 1993, 1172, 1596, 1011, 76, 1500, 720, 1655,
	39, 347, 337, 338, 996, 355, 77, 866, 980, 339,
	341, 1597, 335, 354, 353, 875, 874, 884, 885, 877,
	878, 879, 880, 881, 882, 883, 876, 898, 899, 886,
	543, 719, 1325, 876, 886, 543, 886, 1600, 79, 1597,
	929, 931, 933, 935, 937, 939, 940, 942, 1016, 805,
	930, 932, 104, 936, 938, 1703, 941, 1164, 1118, 1831,
	1074, 2127, 858, 857, 2285, 2288, 2284, 1410, 739, 1151,
	857, 859, 1497, 1420, 1707, 1200, 1003, 1597, 71, 1788,
	859, 1004, 1596, 1656, 1657, 994, 1014, 859, 1690, 1688,
	1198, 1199, 1197, 1696, 1611, 1134, 1695, 1698, 989, 93,
	41, 72, 45, 44, 47, 1746, 1496, 1596, 725, 1616,
	1615, 1832, 1009, 1691, 898, 899, 2128, 884, 885, 877,
	878, 879, 880, 881, 882, 883, 876, 766, 1248, 886,
	753, 1612, 48, 75, 74, 1596, 92, 896, 707, 46,
	2319, 1690, 1688, 2258, 2327, 1617, 1016, 1609, 1080, 1692,
	1689, 1819, 735, 1610, 1119, 79, 382, 106, 105, 735,
	735, 735, 819, 1411, 740, 1196, 1691, 1169, 1170, 858,
	857, 2184, 867, 1596, 735, 735, 1702, 2209, 854, 2233,
	1699, 2232, 59, 60, 1248, 2129, 1508, 859, 1124, 898,
	899, 2166, 979, 1952, 988, 2130, 73, 2328, 52, 53,
	63, 724, 64, 879, 880, 881, 882, 883, 876, 911,
	815, 886, 1614, 816, 1495, 1951, 1494, 1641, 710, 1639,
	924, 858, 857, 755, 1620, 770, 987, 2209, 858, 857,
	1101, 78, 2245, 858, 857, 1217, 735, 1218, 1160, 859,
	2306, 2288, 2305, 1099, 526, 527, 859, 769, 1760, 1113,
	1114, 859, 961, 962, 963, 964, 965, 949, 950, 951,
	966, 967, 952, 953, 954, 960, 968, 955, 956, 957,
	958, 959, 971, 970, 969, 972, 973, 975, 974, 976,
	1088, 1585, 1137, 1586, 1121, 1122, 1642, 1183, 1185, 1186,
	1154, 2244, 71, 1184, 1475, 1476, 1477, 2218, 2190, 1171,
	2095, 1192, 858, 857, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1159,
	859, 1129, 1130, 864, 2047, 1132, 1084, 1149, 78, 713,
	714, 715, 716, 717, 2016, 1949, 1190, 77, 1824, 1153,
	1637, 1135, 810, 912, 1194, 1100, 1104, 1105, 1613, 1427,
	1131, 1102, 1106, 1107, 1108, 858, 857, 858, 857, 1158,
	2231, 1251, 2323, 1174, 2260, 858, 857, 1115, 1116, 2230,
	858, 857, 2210, 859, 2093, 859, 531, 1748, 1868, 1092,
	2067, 1870, 1600, 859, 2063, 1189, 1175, 909, 859, 1176,
	1191, 1155, 810, 1978, 2250, 1943, 2247, 1109, 1110, 1111,
	2195, 810, 1227, 1870, 1112, 459, 458, 461, 462, 463,
	464, 1187, 1237, 1240, 460, 465, 1991, 1308, 1885, 1249,
	1881, 986, 1943, 2192, 2062, 986, 1943, 2097, 2041, 1157,
	875, 874, 884, 885, 877, 878, 879, 880, 881, 882,
	883, 876, 1978, 2091, 886, 1220, 1221, 877, 878, 879,
	880, 881, 882, 883, 876, 1224, 1226, 886, 1978, 2037,
	2040, 1234, 1978, 2028, 1103, 1978, 810, 1943, 1942, 1575,
	1156, 1311, 1859, 810, 1847, 1313, 909, 1462, 810, 1892,
	1575, 1329, 1334, 556, 1261, 1878, 1263, 1877, 1875, 1852,
	1851, 543, 1123, 1850, 1665, 1259, 1260, 1839, 1838, 1835,
	1836, 1825, 1266, 1267, 1268, 1269, 987, 1835, 1834, 79,
	735, 1664, 735, 1490, 810, 1291, 810, 2203, 1074, 1421,
	1099, 1179, 1408, 1309, 1225, 1424, 1291, 1407, 911, 1219,
	1330, 1369, 1370, 1371, 1372, 1191, 1128, 1893, 1225, 810,
	2061, 1125, 1096, 1095, 1094, 1340, 1093, 1223, 1318, 1317,
	1323, 1356, 1357, 1314, 1362, 1363, 1364, 1365, 1366, 1085,
	1083, 1245, 1337, 1082, 1081, 1079, 1013, 1012, 1195, 792,
	1912, 721, 1376, 1377, 1378, 375, 1389, 1431, 1385, 1386,
	1387, 1388, 992, 1296, 1299, 1300, 1301, 1297, 373, 1298,
	1302, 78, 1381, 1791, 1792, 83, 1180, 1181, 1893, 1270,
	1271, 1575, 1777, 1166, 1275, 1787, 1310, 1278, 991, 1290,
	1787, 2197, 1283, 1928, 1848, 1837, 1800, 83, 992, 1680,
	1434, 1479, 1588, 1319, 1490, 1412, 1513, 1512, 1133, 820,
	1418, 1481, 1482, 1483, 1406, 991, 1167, 1140, 993, 1086,
	995, 997, 1190, 807, 1289, 806, 2193, 2297, 1291, 1225,
	909, 911, 1799, 801, 1165, 1235, 1236, 1312, 1787, 875,
	874, 884, 885, 877, 878, 879, 880, 881, 882, 883,
	876, 1490, 1194, 886, 993, 1392, 991, 2065, 1422, 1433,
	1954, 1423, 1355, 1937, 1428, 987, 1384, 1818, 79, 987,
	1380, 1330, 1592, 987, 1791, 1792, 1191, 1440, 1401, 1375,
	1439, 1374, 1075, 1395, 789, 1397, 1467, 1461, 1465, 1466,
	1296, 1299, 1300, 1301, 1297, 79, 1298, 1302, 1551, 1552,
	795, 2295, 986, 986, 986, 986, 986, 2279, 1846, 1794,
	1484, 1777, 1643, 1480, 1090, 1565, 1797, 1563, 1796, 1308,
	1566, 986, 1564, 1474, 1394, 1487, 1562, 1561, 1328, 2227,
	1402, 2199, 1403, 1404, 1713, 1567, 1405, 1300, 1301, 425,
	426, 1464, 1178, 2225, 1472, 1486, 1471, 852, 853, 2021,
	1602, 1880, 1507, 1489, 1491, 1823, 1822, 1550, 1577, 1493,
	1578, 1594, 2138, 2141, 1555, 1499, 1415, 2188, 1502, 1503,
	1504, 1576, 1438, 2189, 2058, 1510, 850, 1511, 1227, 2217,
	1514, 1515, 1334, 1516, 1517, 2056, 2132, 1521, 1522, 1523,
	1524, 1525, 543, 2131, 1390, 374, 1668, 812, 1532, 1533,
	1534, 1630, 1536, 1537, 78, 1539, 1540, 1541, 1542, 813,
	1544, 1545, 1546, 1010, 1569, 787, 735, 771, 735, 735,
	1568, 768, 1601, 767, 1629, 1074, 1631, 1632, 1633, 1634,
	1589, 1570, 1571, 1669, 1621, 1622, 1595, 1598, 1003, 1556,
	1580, 1628, 1559, 722, 2240, 1674, 1676, 1677, 1678, 1591,
	2071, 1635, 2070, 437, 1557, 1558, 1663, 1560, 1926, 1169,
	1170, 1710, 2000, 1645, 1426, 1623, 1624, 1625, 1627, 1396,
	1089, 852, 853, 1518, 1520, 1646, 1195, 1417, 1304, 1077,
	1526, 1527, 1528, 1529, 1675, 1638, 819, 1640, 802, 803,
	2239, 1470, 2238, 2237, 2044, 422, 2074, 2220, 1722, 1469,
	119, 2219, 2186, 119, 1667, 1256, 2142, 2075, 2020, 119,
	1740, 1741, 423, 1742, 1743, 83, 2003, 1575, 1648, 1649,
	1650, 2299, 2298, 2299, 1501, 1749, 1750, 1681, 1718, 1498,
	1752, 119, 1666, 1120, 855, 1684, 1697, 1701, 2298, 2088,
	1670, 1821, 1190, 119, 1488, 1686, 119, 563, 1693, 119,
	1704, 1705, 1679, 1694, 1708, 1163, 1687, 379, 1745, 381,
	1782, 119, 78, 563, 2114, 51, 85, 1509, 54, 119,
	987, 987, 987, 987, 987, 2116, 19, 2115, 18, 2117,
	20, 1719, 2118, 21, 1802, 2113, 15, 987, 80, 987,
	1720, 1726, 1, 1739, 1778, 1738, 1191, 2112, 14, 1141,
	1786, 2106, 10, 1724, 1781, 2125, 30, 2124, 29, 1659,
	793, 1661, 1662, 1723, 2123, 28, 2121, 25, 2120, 24,
	2187, 1783, 1555, 1805, 1820, 2122, 26, 1803, 1801, 2111,
	13, 2108, 12, 2107, 11, 2105, 9, 1718, 1334, 2137,
	1334, 2139, 2055, 1973, 1958, 1785, 1795, 1784, 1957, 1652,
	1651, 788, 1660, 1138, 1685, 1814, 1758, 1759, 1449, 2147,
	1341, 1764, 1331, 553, 1767, 91, 1409, 738, 1989, 1772,
	1816, 340, 1338, 1817, 1844, 1845, 1389, 1607, 1826, 1827,
	2140, 1855, 1809, 790, 1606, 1830, 1603, 1618, 1810, 1352,
	1849, 1605, 1833, 1604, 2135, 1608, 1021, 1019, 1020, 1018,
	1023, 1828, 1022, 344, 1005, 2176, 856, 99, 1864, 1865,
	55, 1992, 1700, 1443, 1714, 94, 100, 747, 346, 894,
	1468, 1160, 1581, 541, 542, 1860, 534, 811, 2204, 817,
	2150, 1506, 923, 1829, 1896, 1753, 1754, 1755, 1756, 1757,
	1246, 442, 1572, 2153, 1182, 457, 456, 455, 1856, 452,
	453, 1416, 1173, 1547, 1854, 1913, 868, 1840, 440, 1872,
	432, 1866, 1891, 977, 1873, 1425, 1867, 1871, 1894, 1861,
	1918, 1295, 1293, 1884, 1292, 1074, 1091, 530, 1876, 1793,
	1911, 1789, 1306, 983, 386, 68, 119, 754, 359, 1914,
	2082, 563, 563, 36, 380, 427, 27, 17, 1858, 760,
	22, 16, 1889, 563, 1441, 1919, 708, 40, 43, 875,
	874, 884, 885, 877, 878, 879, 880, 881, 882, 883,
	876, 1902, 42, 886, 1647, 1398, 2175, 1747, 2265, 774,
	1939, 119, 2286, 2207, 32, 1899, 1900, 119, 1901, 1933,
	31, 1903, 2119, 1905, 2126, 1895, 2110, 2109, 2252, 1945,
	23, 2251, 4, 1898, 1934, 1927, 78, 798, 69, 1334,
	33, 1555, 2, 0, 1907, 1908, 0, 0, 1941, 875,
	874, 884, 885, 877, 878, 879, 880, 881, 882, 883,
	876, 0, 0, 886, 863, 1947, 1970, 1971, 1972, 1843,
	0, 0, 0, 0, 1804, 0, 0, 1946, 0, 0,
	0, 0, 0, 986, 1853, 0, 1987, 1589, 1929, 1930,
	1931, 1932, 1948, 0, 1950, 1955, 1969, 1857, 0, 0,
	1944, 1988, 2010, 2011, 2012, 2013, 2014, 0, 1974, 0,
	2017, 2018, 1982, 0, 2005, 2006, 1814, 1983, 0, 1782,
	1996, 0, 2025, 1975, 0, 0, 1882, 1718, 0, 0,
	0, 1802, 0, 2004, 1997, 0, 0, 1389, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 2027, 1149,
	0, 0, 1977, 0, 0, 0, 0, 0, 2008, 0,
	119, 119, 119, 1781, 2043, 0, 2045, 0, 1979, 987,
	1980, 1981, 2022, 0, 0, 2029, 563, 2042, 2026, 0,
	0, 2024, 2030, 2036, 0, 2038, 2035, 2039, 0, 0,
	0, 2072, 0, 0, 0, 0, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 1886, 0, 0, 2059, 0,
	0, 0, 0, 0, 1782, 430, 78, 0, 468, 0,
	2015, 2064, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 2076, 0, 2069, 0, 0, 78, 2077, 0, 0,
	0, 2099, 0, 0, 2066, 0, 0, 1916, 0, 0,
	2092, 2089, 986, 0, 0, 0, 0, 2094, 1781, 0,
	0, 0, 0, 2146, 0, 0, 0, 0, 0, 0,
	0, 0, 1956, 2087, 0, 2090, 0, 0, 0, 0,
	0, 911, 0, 0, 0, 0, 0, 1935, 2144, 0,
	1936, 0, 0, 1938, 2157, 2145, 2152, 2156, 2158, 0,
	0, 911, 2143, 0, 0, 0, 0, 0, 2171, 550,
	0, 0, 559, 0, 2164, 0, 2078, 2079, 2080, 2081,
	2163, 78, 0, 2085, 2086, 0, 0, 0, 712, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1555, 0, 119, 0, 0, 119, 0, 0,
	0, 987, 0, 119, 0, 563, 2185, 0, 0, 2180,
	2183, 2198, 563, 563, 563, 119, 119, 119, 0, 0,
	2191, 0, 119, 0, 0, 0, 0, 563, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2159, 2092,
	0, 2222, 2214, 0, 0, 0, 2165, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 78, 0, 2221,
	2224, 2226, 2243, 2229, 2228, 0, 2223, 2234, 0, 2156,
	0, 0, 0, 0, 78, 2246, 0, 2236, 0, 78,
	119, 2256, 0, 2273, 2255, 0, 2254, 2262, 119, 563,
	119, 2253, 563, 0, 0, 2241, 2274, 0, 78, 0,
	2259, 78, 78, 2194, 0, 0, 78, 2243, 0, 0,
	2280, 2289, 0, 0, 0, 0, 2292, 0, 0, 2202,
	0, 0, 0, 78, 2281, 2294, 78, 2283, 2243, 2296,
	0, 0, 0, 2307, 2309, 2310, 0, 0, 2264, 119,
	0, 78, 1910, 78, 2317, 863, 2243, 78, 2243, 0,
	0, 0, 2304, 0, 430, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 78, 0, 2243, 0, 0, 911,
	987, 78, 2167, 2322, 0, 78, 2243, 0, 0, 0,
	2243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2331, 563, 1762, 1763, 0, 1765, 1766, 0, 1768, 1769,
	1770, 1771, 0, 1773, 1774, 1775, 559, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 2151, 2155, 0, 0, 563, 563, 0,
	1304, 875, 874, 884, 885, 877, 878, 879, 880, 881,
	882, 883, 876, 0, 0, 886, 0, 1043, 0, 1228,
	1233, 0, 0, 0, 1239, 1242, 1243, 1244, 0, 0,
	0, 0, 119, 0, 0, 0, 2324, 2325, 0, 0,
	119, 1150, 1152, 0, 119, 119, 2172, 2173, 119, 119,
	119, 1254, 0, 1257, 1258, 0, 2215, 0, 1262, 0,
	1264, 1265, 0, 0, 0, 1043, 563, 563, 1272, 1273,
	1274, 0, 1276, 1277, 0, 1279, 1280, 1281, 1282, 0,
	1284, 1285, 1286, 0, 0, 875, 874, 884, 885, 877,
	878, 879, 880, 881, 882, 883, 876, 0, 0, 886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1030, 0, 0, 0, 0, 0, 2155, 0, 0, 0,
	0, 0, 1151, 0, 0, 0, 0, 0, 2235, 0,
	0, 0, 119, 563, 0, 563, 0, 0, 119, 0,
	119, 119, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 119, 119, 550, 0, 0, 0, 0,
	550, 1006, 0, 0, 0, 0, 0, 1921, 1922, 0,
	0, 0, 0, 1923, 119, 0, 1924, 0, 0, 0,
	1044, 1925, 119, 0, 0, 0, 0, 2308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1057, 1060, 1061, 1062, 1063, 1064, 1065, 0, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 0, 1045, 1046, 1047, 1048,
	1024, 1028, 1058, 1025, 1031, 1027, 1029, 1026, 0, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060,
	1061, 1062, 1063, 1064, 1065, 0, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1917, 1045, 1046, 1047, 1048, 1024, 1028,
	1058, 1025, 1031, 1027, 1029, 1026, 0, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 0, 0, 0, 0,
	0, 0, 875, 874, 884, 885, 877, 878, 879, 880,
	881, 882, 883, 876, 0, 0, 886, 1076, 0, 0,
	0, 0, 0, 0, 0, 119, 119, 119, 119, 119,
	0, 1505, 1059, 0, 0, 0, 0, 119, 0, 0,
	559, 0, 119, 0, 119, 0, 0, 559, 559, 559,
	0, 0, 0, 0, 0, 0, 1530, 1531, 0, 0,
	0, 1535, 559, 559, 1538, 0, 563, 0, 0, 1543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 34, 0, 70, 37, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 39, 0, 849, 0, 0,
	0, 0, 0, 0, 559, 0, 563, 1162, 0, 0,
	0, 34, 35, 70, 37, 38, 0, 0, 0, 563,
	119, 563, 563, 0, 0, 61, 0, 0, 0, 1455,
	0, 76, 0, 79, 0, 39, 65, 66, 0, 0,
	0, 0, 62, 1454, 117, 563, 0, 356, 0, 0,
	0, 0, 0, 117, 0, 0, 2127, 0, 0, 0,
	0, 2333, 0, 0, 0, 559, 0, 0, 0, 49,
	0, 0, 0, 79, 0, 389, 563, 563, 0, 0,
	0, 0, 119, 0, 431, 1459, 0, 533, 551, 0,
	117, 0, 563, 117, 1453, 41, 72, 45, 44, 47,
	0, 0, 0, 0, 0, 117, 1222, 0, 0, 0,
	0, 2128, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 48, 75, 74,
	0, 0, 0, 563, 46, 41, 72, 45, 44, 47,
	0, 58, 1252, 1253, 0, 1451, 1445, 1446, 0, 1444,
	0, 1447, 1448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 563, 48, 75, 74,
	0, 0, 56, 57, 46, 0, 0, 59, 60, 0,
	2129, 0, 0, 0, 0, 0, 1457, 1460, 0, 0,
	2130, 73, 0, 52, 53, 63, 550, 64, 0, 0,
	0, 563, 563, 0, 563, 0, 563, 0, 0, 0,
	559, 559, 559, 0, 0, 0, 0, 59, 60, 0,
	0, 0, 34, 0, 70, 37, 38, 0, 0, 0,
	50, 73, 0, 52, 53, 63, 61, 64, 0, 0,
	0, 0, 76, 0, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 874, 884,
	885, 877, 878, 879, 880, 881, 882, 883, 876, 0,
	1452, 886, 119, 0, 0, 0, 0, 0, 559, 0,
	559, 0, 0, 0, 79, 119, 0, 71, 0, 0,
	563, 563, 563, 0, 0, 0, 0, 1450, 1909, 0,
	0, 0, 0, 0, 0, 0, 0, 2127, 0, 0,
	0, 563, 2329, 0, 119, 563, 0, 0, 0, 0,
	0, 0, 563, 563, 0, 0, 0, 71, 0, 0,
	117, 0, 77, 0, 0, 0, 0, 1456, 0, 0,
	34, 0, 70, 37, 38, 0, 41, 72, 45, 44,
	47, 0, 0, 0, 61, 0, 0, 0, 0, 0,
	76, 0, 2128, 0, 39, 0, 0, 0, 0, 0,
	0, 559, 77, 0, 0, 117, 0, 0, 48, 75,
	74, 117, 0, 0, 1458, 46, 0, 875, 874, 884,
	885, 877, 878, 879, 880, 881, 882, 883, 876, 0,
	0, 886, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 2127, 0, 0, 59, 60,
	2318, 2129, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 2130, 73, 0, 52, 53, 63, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 0, 0, 0, 41, 72, 45, 44, 47, 0,
	0, 0, 119, 563, 0, 119, 0, 0, 0, 0,
	2128, 0, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 48, 75, 74, 0,
	0, 0, 0, 46, 563, 0, 119, 0, 0, 0,
	0, 563, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 117, 117, 117, 0, 0, 0,
	0, 559, 0, 0, 551, 0, 0, 0, 71, 551,
	0, 0, 0, 0, 0, 0, 59, 60, 0, 2129,
	1721, 563, 0, 0, 0, 0, 0, 563, 0, 2130,
	73, 0, 52, 53, 63, 0, 64, 0, 563, 0,
	0, 875, 874, 884, 885, 877, 878, 879, 880, 881,
	882, 883, 876, 77, 0, 886, 0, 0, 0, 0,
	0, 1644, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 559, 559, 0, 563,
	0, 0, 0, 0, 34, 0, 70, 37, 38, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 0,
	1673, 0, 0, 0, 76, 0, 0, 0, 39, 0,
	875, 874, 884, 885, 877, 878, 879, 880, 881, 882,
	883, 876, 0, 0, 886, 0, 71, 0, 0, 0,
	0, 1711, 1712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 79, 559, 0, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 2127,
	0, 77, 0, 0, 2301, 0, 0, 0, 117, 0,
	119, 117, 0, 0, 0, 0, 0, 1098, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	117, 117, 0, 0, 0, 0, 117, 0, 41, 72,
	45, 44, 47, 563, 0, 0, 0, 550, 0, 0,
	1162, 1673, 0, 0, 2128, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 0, 0, 0, 0,
	48, 75, 74, 0, 0, 0, 0, 46, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 559, 0, 559,
	0, 1813, 0, 0, 389, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 389, 0, 0, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 0,
	59, 60, 0, 2129, 0, 0, 0, 0, 0, 563,
	0, 0, 0, 2130, 73, 0, 52, 53, 63, 0,
	64, 875, 874, 884, 885, 877, 878, 879, 880, 881,
	882, 883, 876, 117, 0, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 1098, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1863, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 0, 1887, 1888, 0,
	0, 1232, 1232, 0, 0, 0, 1232, 1232, 1232, 1232,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1232, 1232, 1232, 1232, 0, 0, 1232,
	1232, 1232, 1232, 1232, 0, 0, 0, 0, 0, 0,
	1232, 1232, 1232, 0, 1232, 1232, 0, 1232, 1232, 1232,
	1232, 0, 1232, 1232, 1232, 77, 117, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 550, 0, 117, 117,
	0, 0, 117, 1315, 1098, 551, 0, 0, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 1098,
	0, 0, 0, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 34, 0, 70, 37, 38,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 61,
	0, 0, 0, 0, 0, 76, 0, 0, 1976, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 117, 0, 117, 117, 0, 0, 117, 2001,
	0, 0, 0, 0, 0, 0, 559, 79, 2290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 1414, 117, 0,
	2127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 117, 0,
	0, 0, 1813, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 0, 0,
	1098, 0, 0, 0, 0, 2128, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 2068, 0, 0, 0, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 34,
	0, 70, 37, 38, 0, 0, 0, 0, 0, 0,
	0, 1232, 0, 61, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 39, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 1232, 2129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2130, 73, 0, 52, 53, 63,
	0, 64, 0, 0, 1813, 0, 0, 0, 1232, 1232,
	0, 79, 0, 1232, 0, 0, 1232, 0, 0, 0,
	0, 1232, 0, 0, 0, 0, 0, 550, 551, 117,
	117, 117, 117, 117, 2127, 0, 0, 0, 0, 2242,
	0, 389, 0, 0, 0, 0, 117, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 41, 72, 45, 44, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2196, 2128,
	0, 71, 0, 0, 0, 34, 0, 70, 37, 38,
	0, 0, 0, 0, 0, 48, 75, 74, 0, 61,
	0, 0, 46, 0, 0, 76, 0, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 1863, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 59, 60, 79, 2129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2130, 73,
	0, 52, 53, 63, 870, 64, 873, 0, 0, 0,
	2127, 0, 0, 887, 888, 889, 890, 891, 892, 893,
	0, 871, 872, 869, 875, 874, 884, 885, 877, 878,
	879, 880, 881, 882, 883, 876, 117, 0, 886, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 41,
	72, 45, 44, 47, 0, 0, 0, 0, 1232, 0,
	1098, 0, 0, 0, 0, 2128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 0, 2129, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 2130, 73, 0, 52, 53, 63,
	0, 64, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 0, 0, 0, 0, 0,
	681, 661, 297, 619, 684, 591, 608, 695, 609, 612,
	650, 577, 631, 231, 606, 578, 0, 595, 568, 602,
	569, 592, 621, 164, 590, 663, 634, 683, 194, 646,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 682,
	627, 0, 690, 197, 0, 643, 319, 286, 216, 117,
	0, 623, 670, 629, 659, 618, 652, 584, 642, 685,
	607, 648, 686, 0, 0, 0, 2174, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 551, 645, 680, 604,
	647, 649, 566, 644, 117, 572, 579, 694, 676, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 622,
	630, 656, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 640, 0, 0, 0, 580, 573, 0,
	0, 620, 0, 0, 0, 583, 124, 597, 657, 0,
	564, 174, 217, 135, 660, 675, 617, 187, 325, 679,
	614, 613, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 605, 565, 664, 593, 603,
	156, 601, 263, 235, 314, 0, 637, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 616, 651, 594, 153,
	654, 641, 669, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 2177, 2178, 2179, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 207, 0, 570, 0,
	288, 317, 331, 203, 142, 589, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 587, 588, 585,
	0, 586, 632, 633, 687, 688, 689, 658, 581, 0,
	671, 672, 0, 662, 677, 678, 653, 696, 610, 611,
	571, 574, 575, 576, 582, 624, 625, 636, 639, 667,
	666, 665, 668, 673, 692, 691, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 120,
	131, 196, 697, 255, 170, 318, 567, 162, 0, 0,
	626, 628, 638, 655, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	674, 681, 661, 297, 619, 684, 591, 608, 695, 609,
	612, 650, 577, 631, 231, 606, 578, 0, 595, 568,
	602, 569, 592, 621, 164, 590, 663, 634, 683, 194,
	646, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	682, 627, 0, 690, 197, 0, 643, 319, 286, 216,
	0, 0, 623, 670, 629, 659, 618, 652, 584, 642,
	685, 607, 648, 686, 0, 0, 0, 562, 0, 1335,
	1336, 0, 0, 0, 0, 0, 145, 0, 645, 680,
	604, 647, 649, 566, 644, 0, 572, 579, 694, 676,
	598, 599, 600, 1590, 0, 0, 0, 0, 0, 0,
	622, 630, 656, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 640, 0, 0, 0, 580, 573,
	0, 0, 620, 0, 0, 0, 583, 124, 597, 657,
	0, 564, 174, 217, 135, 660, 675, 617, 187, 325,
	679, 614, 613, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 605, 565, 664, 593,
	603, 156, 601, 263, 235, 314, 0, 637, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 616, 651, 594,
	153, 654, 641, 669, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 570,
	0, 288, 317, 331, 203, 142, 589, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 587, 588,
	585, 0, 586, 632, 633, 687, 688, 689, 658, 581,
	0, 671, 672, 0, 662, 677, 678, 653, 696, 610,
	611, 571, 574, 575, 576, 582, 624, 625, 636, 639,
	667, 666, 665, 668, 673, 692, 691, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	120, 131, 196, 697, 255, 170, 318, 567, 162, 0,
	0, 626, 628, 638, 655, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 674, 681, 661, 297, 619, 684, 591, 608, 695,
	609, 612, 650, 577, 631, 231, 606, 578, 0, 595,
	568, 602, 569, 592, 621, 164, 590, 663, 634, 683,
	194, 646, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 682, 627, 0, 690, 197, 0, 643, 319, 286,
	216, 0, 0, 623, 670, 629, 659, 618, 652, 584,
	642, 685, 607, 648, 686, 0, 0, 0, 562, 0,
	1335, 1336, 0, 0, 0, 0, 0, 145, 0, 645,
	680, 604, 647, 649, 566, 644, 0, 572, 579, 694,
	676, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 622, 630, 656, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 640, 0, 0, 0, 580,
	573, 0, 0, 620, 0, 0, 0, 583, 124, 597,
	657, 0, 564, 174, 217, 135, 660, 675, 617, 187,
	325, 679, 614, 613, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 605, 565, 664,
	593, 603, 156, 601, 263, 235, 314, 0, 637, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 616, 651,
	594, 153, 654, 641, 669, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 207, 0,
	570, 0, 288, 317, 331, 203, 142, 589, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 587,
	588, 585, 0, 586, 632, 633, 687, 688, 689, 658,
	581, 0, 671, 672, 0, 662, 677, 678, 653, 696,
	610, 611, 571, 574, 575, 576, 582, 624, 625, 636,
	639, 667, 666, 665, 668, 673, 692, 691, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 120, 131, 196, 697, 255, 170, 318, 567, 162,
	0, 0, 626, 628, 638, 655, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 674, 681, 661, 297, 619, 684, 591, 608,
	695, 609, 612, 650, 577, 631, 231, 606, 578, 0,
	595, 568, 602, 569, 592, 621, 164, 590, 663, 634,
	683, 194, 646, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 682, 627, 0, 690, 197, 0, 643, 319,
	286, 216, 0, 0, 623, 670, 629, 659, 618, 652,
	584, 642, 685, 607, 648, 686, 0, 0, 0, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	645, 680, 604, 647, 649, 566, 644, 0, 572, 579,
	694, 676, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 622, 630, 656, 615, 0, 0, 0, 0,
	0, 0, 2007, 0, 596, 0, 640, 0, 0, 0,
	580, 573, 0, 0, 620, 0, 0, 0, 583, 124,
	597, 657, 0, 564, 174, 217, 135, 660, 675, 617,
	187, 325, 679, 614, 613, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 605, 565,
	664, 593, 603, 156, 601, 263, 235, 314, 0, 637,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 616,
	651, 594, 153, 654, 641, 669, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 570, 0, 288, 317, 331, 203, 142, 589, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	587, 588, 585, 0, 586, 632, 633, 687, 688, 689,
	658, 581, 0, 671, 672, 0, 662, 677, 678, 653,
	696, 610, 611, 571, 574, 575, 576, 582, 624, 625,
	636, 639, 667, 666, 665, 668, 673, 692, 691, 693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 120, 131, 196, 697, 255, 170, 318, 567,
	162, 0, 0, 626, 628, 638, 655, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 674, 681, 661, 297, 619, 684, 591,
	608, 695, 609, 612, 650, 577, 631, 231, 606, 578,
	0, 595, 568, 602, 569, 592, 621, 164, 590, 663,
	634, 683, 194, 646, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 682, 627, 0, 690, 197, 0, 643,
	319, 286, 216, 0, 0, 623, 670, 629, 659, 618,
	652, 584, 642, 685, 607, 648, 686, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 645, 680, 604, 647, 649, 566, 644, 0, 572,
	579, 694, 676, 598, 599, 600, 0, 0, 0, 0,
	0, 0, 0, 622, 630, 656, 615, 0, 0, 0,
	0, 0, 0, 1725, 0, 596, 0, 640, 0, 0,
	0, 580, 573, 0, 0, 620, 0, 0, 0, 583,
	124, 597, 657, 0, 564, 174, 217, 135, 660, 675,
	617, 187, 325, 679, 614, 613, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 605,
	565, 664, 593, 603, 156, 601, 263, 235, 314, 0,
	637, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	616, 651, 594, 153, 654, 641, 669, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	207, 0, 570, 0, 288, 317, 331, 203, 142, 589,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 587, 588, 585, 0, 586, 632, 633, 687, 688,
	689, 658, 581, 0, 671, 672, 0, 662, 677, 678,
	653, 696, 610, 611, 571, 574, 575, 576, 582, 624,
	625, 636, 639, 667, 666, 665, 668, 673, 692, 691,
	693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 120, 131, 196, 697, 255, 170, 318,
	567, 162, 0, 0, 626, 628, 638, 655, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 674, 681, 661, 297, 619, 684,
	591, 608, 695, 609, 612, 650, 577, 631, 231, 606,
	578, 0, 595, 568, 602, 569, 592, 621, 164, 590,
	663, 634, 683, 194, 646, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 682, 627, 0, 690, 197, 0,
	643, 319, 286, 216, 0, 0, 623, 670, 629, 659,
	618, 652, 584, 642, 685, 607, 648, 686, 0, 0,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 645, 680, 604, 647, 649, 566, 644, 0,
	572, 579, 694, 676, 598, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 622, 630, 656, 615, 0, 0,
	0, 0, 0, 0, 1717, 0, 596, 0, 640, 0,
	0, 0, 580, 573, 0, 0, 620, 0, 0, 0,
	583, 124, 597, 657, 0, 564, 174, 217, 135, 660,
	675, 617, 187, 325, 679, 614, 613, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	605, 565, 664, 593, 603, 156, 601, 263, 235, 314,
	0, 637, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 616, 651, 594, 153, 654, 641, 669, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 570, 0, 288, 317, 331, 203, 142,
	589, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 587, 588, 585, 0, 586, 632, 633, 687,
	688, 689, 658, 581, 0, 671, 672, 0, 662, 677,
	678, 653, 696, 610, 611, 571, 574, 575, 576, 582,
	624, 625, 636, 639, 667, 666, 665, 668, 673, 692,
	691, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 120, 131, 196, 697, 255, 170,
	318, 567, 162, 0, 0, 626, 628, 638, 655, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 674, 681, 661, 297, 619,
	684, 591, 608, 695, 609, 612, 650, 577, 631, 231,
	606, 578, 0, 595, 568, 602, 569, 592, 621, 164,
	590, 663, 634, 683, 194, 646, 0, 155, 202, 200,
	0, 0, 0, 237, 295, 682, 627, 0, 690, 197,
	0, 643, 319, 286, 216, 0, 0, 623, 670, 629,
	659, 618, 652, 584, 642, 685, 607, 648, 686, 79,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 645, 680, 604, 647, 649, 566, 644,
	0, 572, 579, 694, 676, 598, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 622, 630, 656, 615, 0,
	0, 0, 0, 0, 0, 0, 0, 596, 0, 640,
	0, 0, 0, 580, 573, 0, 0, 620, 0, 0,
	0, 583, 124, 597, 657, 0, 564, 174, 217, 135,
	660, 675, 617, 187, 325, 679, 614, 613, 251, 0,
	291, 177, 195, 139, 121, 133, 149, 176, 227, 260,
	270, 605, 565, 664, 593, 603, 156, 601, 263, 235,
	314, 0, 637, 241, 262, 198, 303, 253, 312, 313,
	178, 296, 322, 327, 283, 165, 0, 125, 0, 248,
	160, 191, 616, 651, 594, 153, 654, 641, 669, 282,
	301, 140, 298, 215, 221, 150, 152, 151, 134, 277,
	300, 144, 154, 287, 266, 292, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 294, 311, 146,
	274, 275, 328, 261, 128, 309, 290, 213, 188, 189,
	127, 0, 258, 163, 173, 158, 230, 0, 172, 250,
	306, 307, 157, 330, 136, 321, 130, 137, 320, 224,
	0, 223, 323, 302, 310, 214, 206, 0, 129, 308,
	212, 205, 193, 168, 180, 246, 201, 247, 181, 219,
	218, 220, 207, 0, 570, 0, 288, 317, 331, 203,
	142, 589, 276, 299, 0, 0, 143, 171, 167, 245,
	222, 138, 183, 285, 192, 199, 257, 329, 234, 264,
	147, 316, 284, 587, 588, 585, 0, 586, 632, 633,
	687, 688, 689, 658, 581, 0, 671, 672, 0, 662,
	677, 678, 653, 696, 610, 611, 571, 574, 575, 576,
	582, 624, 625, 636, 639, 667, 666, 665, 668, 673,
	692, 691, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 120, 131, 196, 697, 255,
	170, 318, 567, 162, 0, 0, 626, 628, 638, 655,
	122, 123, 132, 141, 148, 161, 166, 169, 175, 179,
	182, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	225, 226, 228, 229, 232, 233, 236, 238, 239, 240,
	242, 243, 244, 249, 252, 254, 256, 259, 265, 267,
	268, 269, 271, 272, 273, 278, 279, 280, 281, 289,
	293, 304, 305, 315, 324, 326, 674, 681, 661, 297,
	619, 684, 591, 608, 695, 609, 612, 650, 577, 631,
	231, 606, 578, 0, 595, 568, 602, 569, 592, 621,
	164, 590, 663, 634, 683, 194, 646, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 682, 627, 0, 690,
	197, 0, 643, 319, 286, 216, 0, 0, 623, 670,
	629, 659, 618, 652, 584, 642, 685, 607, 648, 686,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 645, 680, 604, 647, 649, 566,
	644, 0, 572, 579, 694, 676, 598, 599, 600, 0,
	0, 0, 0, 0, 0, 0, 622, 630, 656, 615,
	0, 0, 0, 0, 0, 0, 1316, 0, 596, 0,
	640, 0, 0, 0, 580, 573, 0, 0, 620, 0,
	0, 0, 583, 124, 597, 657, 0, 564, 174, 217,
	135, 660, 675, 617, 187, 325, 679, 614, 613, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 605, 565, 664, 593, 603, 156, 601, 263,
	235, 314, 0, 637, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 616, 651, 594, 153, 654, 641, 669,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 570, 0, 288, 317, 331,
	203, 142, 589, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 587, 588, 585, 0, 586, 632,
	633, 687, 688, 689, 658, 581, 0, 671, 672, 0,
	662, 677, 678, 653, 696, 610, 611, 571, 574, 575,
	576, 582, 624, 625, 636, 639, 667, 666, 665, 668,
	673, 692, 691, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 120, 131, 196, 697,
	255, 170, 318, 567, 162, 0, 0, 626, 628, 638,
	655, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 674, 681, 661,
	297, 619, 684, 591, 608, 695, 609, 612, 650, 577,
	631, 231, 606, 578, 0, 595, 568, 602, 569, 592,
	621, 164, 590, 663, 634, 683, 194, 646, 0, 155,
	202, 200, 0, 0, 0, 237, 295, 682, 627, 0,
	690, 197, 0, 643, 319, 286, 216, 0, 0, 623,
	670, 629, 659, 618, 652, 584, 642, 685, 607, 648,
	686, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 645, 680, 604, 647, 649,
	566, 644, 0, 572, 579, 694, 676, 598, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 622, 630, 656,
	615, 0, 0, 0, 0, 0, 0, 1188, 0, 596,
	0, 640, 0, 0, 0, 580, 573, 0, 0, 620,
	0, 0, 0, 583, 124, 597, 657, 0, 564, 174,
	217, 135, 660, 675, 617, 187, 325, 679, 614, 613,
	251, 0, 291, 177, 195, 139, 121, 133, 149, 176,
	227, 260, 270, 605, 565, 664, 593, 603, 156, 601,
	263, 235, 314, 0, 637, 241, 262, 198, 303, 253,
	312, 313, 178, 296, 322, 327, 283, 165, 0, 125,
	0, 248, 160, 191, 616, 651, 594, 153, 654, 641,
	669, 282, 301, 140, 298, 215, 221, 150, 152, 151,
	134, 277, 300, 144, 154, 287, 266, 292, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 294,
	311, 146, 274, 275, 328, 261, 128, 309, 290, 213,
	188, 189, 127, 0, 258, 163, 173, 158, 230, 0,
	172, 250, 306, 307, 157, 330, 136, 321, 130, 137,
	320, 224, 0, 223, 323, 302, 310, 214, 206, 0,
	129, 308, 212, 205, 193, 168, 180, 246, 201, 247,
	181, 219, 218, 220, 207, 0, 570, 0, 288, 317,
	331, 203, 142, 589, 276, 299, 0, 0, 143, 171,
	167, 245, 222, 138, 183, 285, 192, 199, 257, 329,
	234, 264, 147, 316, 284, 587, 588, 585, 0, 586,
	632, 633, 687, 688, 689, 658, 581, 0, 671, 672,
	0, 662, 677, 678, 653, 696, 610, 611, 571, 574,
	575, 576, 582, 624, 625, 636, 639, 667, 666, 665,
	668, 673, 692, 691, 693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 120, 131, 196,
	697, 255, 170, 318, 567, 162, 0, 0, 626, 628,
	638, 655, 122, 123, 132, 141, 148, 161, 166, 169,
	175, 179, 182, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 225, 226, 228, 229, 232, 233, 236, 238,
	239, 240, 242, 243, 244, 249, 252, 254, 256, 259,
	265, 267, 268, 269, 271, 272, 273, 278, 279, 280,
	281, 289, 293, 304, 305, 315, 324, 326, 674, 681,
	661, 297, 619, 684, 591, 608, 695, 609, 612, 650,
	577, 631, 231, 606, 578, 0, 595, 568, 602, 569,
	592, 621, 164, 590, 663, 634, 683, 194, 646, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 682, 627,
	0, 690, 197, 0, 643, 319, 286, 216, 0, 0,
	623, 670, 629, 659, 618, 652, 584, 642, 685, 607,
	648, 686, 0, 0, 0, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 645, 680, 604, 647,
	649, 566, 644, 0, 572, 579, 694, 676, 598, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 622, 630,
	656, 615, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 0, 640, 0, 0, 0, 580, 573, 0, 0,
	620, 0, 0, 0, 583, 124, 597, 657, 0, 564,
	174, 217, 135, 660, 675, 617, 187, 325, 679, 614,
	613, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 605, 565, 664, 593, 603, 156,
	601, 263, 235, 314, 0, 637, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 616, 651, 594, 153, 654,
	641, 669, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 570, 0, 288,
	317, 331, 203, 142, 589, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 587, 588, 585, 0,
	586, 632, 633, 687, 688, 689, 658, 581, 0, 671,
	672, 0, 662, 677, 678, 653, 696, 610, 611, 571,
	574, 575, 576, 582, 624, 625, 636, 639, 667, 666,
	665, 668, 673, 692, 691, 693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 120, 131,
	196, 697, 255, 170, 318, 567, 162, 0, 0, 626,
	628, 638, 655, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 674,
	681, 661, 297, 619, 684, 591, 608, 695, 609, 612,
	650, 577, 631, 231, 606, 578, 0, 595, 568, 602,
	569, 592, 621, 164, 590, 663, 634, 683, 194, 646,
	0, 155, 202, 200, 0, 0, 0, 237, 295, 682,
	627, 0, 690, 197, 0, 643, 319, 286, 216, 0,
	0, 623, 670, 629, 659, 618, 652, 584, 642, 685,
	607, 648, 686, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 645, 680, 604,
	647, 649, 566, 644, 0, 572, 579, 694, 676, 598,
	599, 600, 0, 0, 0, 0, 0, 0, 0, 622,
	630, 656, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 640, 0, 0, 0, 580, 573, 0,
	0, 620, 0, 0, 0, 583, 124, 597, 657, 0,
	564, 174, 217, 135, 660, 675, 617, 187, 325, 679,
	614, 613, 251, 0, 291, 177, 195, 139, 121, 133,
	149, 176, 227, 260, 270, 605, 565, 664, 593, 603,
	156, 601, 263, 235, 314, 0, 637, 241, 262, 198,
	303, 253, 312, 313, 178, 296, 322, 327, 283, 165,
	0, 125, 0, 248, 160, 191, 616, 651, 594, 153,
	654, 641, 669, 282, 301, 140, 298, 215, 221, 150,
	152, 151, 134, 277, 300, 144, 154, 287, 266, 292,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 294, 311, 146, 274, 275, 328, 261, 128, 309,
	290, 213, 188, 189, 127, 0, 258, 163, 173, 158,
	230, 0, 172, 250, 306, 307, 157, 330, 136, 321,
	130, 137, 320, 224, 0, 223, 323, 302, 310, 214,
	206, 0, 129, 308, 212, 205, 193, 168, 180, 246,
	201, 247, 181, 219, 218, 220, 207, 0, 570, 0,
	288, 317, 331, 203, 142, 589, 276, 299, 0, 0,
	143, 171, 167, 245, 222, 138, 183, 285, 192, 199,
	257, 329, 234, 264, 147, 316, 284, 587, 588, 585,
	0, 586, 632, 633, 687, 688, 689, 658, 581, 0,
	671, 672, 0, 662, 677, 678, 653, 696, 610, 611,
	571, 574, 575, 576, 582, 624, 625, 636, 639, 667,
	666, 665, 668, 673, 692, 691, 693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 120,
	131, 196, 697, 255, 170, 318, 567, 162, 0, 0,
	626, 628, 638, 655, 122, 123, 132, 141, 148, 161,
	166, 169, 175, 179, 182, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 225, 226, 228, 229, 232, 233,
	236, 238, 239, 240, 242, 243, 244, 249, 252, 254,
	256, 259, 265, 267, 268, 269, 271, 272, 273, 278,
	279, 280, 281, 289, 293, 304, 305, 315, 324, 326,
	674, 681, 661, 297, 619, 684, 591, 608, 695, 609,
	612, 650, 577, 631, 231, 606, 578, 0, 595, 568,
	602, 569, 592, 621, 164, 590, 663, 634, 683, 194,
	646, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	1346, 1350, 0, 690, 197, 0, 643, 319, 286, 216,
	0, 0, 623, 670, 629, 659, 618, 652, 584, 642,
	685, 607, 648, 686, 0, 0, 0, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 645, 680,
	604, 647, 649, 566, 644, 0, 572, 579, 694, 676,
	598, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	622, 630, 656, 615, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 640, 0, 0, 0, 580, 573,
	0, 0, 620, 0, 0, 0, 583, 124, 597, 657,
	0, 564, 174, 217, 135, 660, 675, 1349, 187, 325,
	679, 614, 613, 1344, 0, 1345, 177, 195, 561, 121,
	133, 1342, 1348, 227, 260, 270, 605, 565, 664, 593,
	603, 156, 601, 263, 235, 314, 0, 637, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 616, 651, 594,
	153, 654, 641, 669, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 570,
	0, 288, 317, 331, 203, 142, 589, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 587, 588,
	585, 0, 586, 632, 633, 687, 688, 689, 658, 581,
	0, 671, 672, 0, 662, 677, 678, 653, 696, 610,
	611, 571, 574, 575, 576, 582, 624, 625, 636, 639,
	667, 666, 665, 668, 673, 692, 691, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	120, 131, 196, 697, 255, 170, 318, 567, 162, 0,
	0, 626, 628, 638, 655, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 674, 681, 661, 297, 619, 684, 591, 608, 695,
	609, 612, 650, 577, 631, 231, 606, 578, 0, 595,
	568, 602, 569, 592, 621, 164, 590, 663, 634, 683,
	194, 646, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 682, 627, 0, 690, 197, 0, 643, 319, 286,
	216, 0, 0, 623, 670, 629, 659, 618, 652, 584,
	642, 685, 607, 648, 686, 0, 0, 0, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 645,
	680, 604, 647, 649, 566, 644, 0, 572, 579, 694,
	676, 598, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 622, 630, 656, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 640, 0, 0, 0, 580,
	573, 0, 0, 620, 0, 0, 0, 583, 124, 597,
	657, 0, 564, 174, 217, 135, 660, 675, 617, 187,
	325, 679, 614, 613, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 605, 565, 664,
	593, 603, 156, 601, 263, 235, 314, 0, 637, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 616, 651,
	594, 153, 654, 641, 669, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 207, 0,
	570, 0, 288, 317, 331, 203, 142, 589, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 587,
	588, 585, 0, 586, 632, 633, 687, 688, 689, 658,
	581, 0, 671, 672, 0, 662, 677, 678, 653, 696,
	610, 611, 571, 574, 575, 576, 582, 624, 625, 636,
	639, 667, 666, 665, 668, 673, 692, 691, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 120, 131, 196, 697, 255, 170, 318, 567, 162,
	0, 0, 626, 628, 638, 655, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 674, 681, 661, 297, 619, 684, 591, 608,
	695, 609, 612, 650, 577, 631, 231, 606, 578, 0,
	595, 568, 602, 569, 592, 621, 164, 590, 663, 634,
	683, 194, 646, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 682, 627, 0, 690, 197, 0, 643, 319,
	286, 216, 0, 0, 623, 670, 629, 659, 618, 652,
	584, 642, 685, 607, 648, 686, 0, 0, 0, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	645, 680, 604, 647, 649, 566, 644, 0, 572, 579,
	694, 676, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 622, 630, 656, 615, 0, 0, 0, 0,
	0, 0, 0, 0, 596, 0, 640, 0, 0, 0,
	580, 573, 0, 0, 620, 0, 0, 0, 583, 124,
	597, 657, 0, 564, 174, 217, 135, 660, 675, 617,
	187, 325, 679, 614, 613, 251, 0, 291, 177, 195,
	561, 121, 133, 557, 176, 227, 260, 270, 605, 565,
	664, 593, 603, 156, 601, 263, 235, 314, 0, 637,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 616,
	651, 594, 153, 654, 641, 669, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 570, 0, 288, 317, 331, 203, 142, 589, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	587, 588, 585, 0, 586, 632, 633, 687, 688, 689,
	658, 581, 0, 671, 672, 0, 662, 677, 678, 653,
	696, 610, 611, 571, 574, 575, 576, 582, 624, 625,
	636, 639, 667, 666, 665, 668, 673, 692, 691, 693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 635, 120, 131, 196, 697, 255, 170, 318, 567,
	162, 0, 0, 626, 628, 638, 655, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 674, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 164, 435, 0, 0, 0,
	194, 0, 0, 155, 202, 200, 0, 0, 0, 237,
	295, 0, 0, 0, 482, 197, 0, 0, 319, 286,
	216, 0, 0, 0, 0, 471, 472, 0, 0, 0,
	0, 0, 0, 1326, 0, 79, 0, 0, 436, 459,
	458, 461, 462, 463, 464, 0, 0, 145, 460, 465,
	466, 467, 1327, 0, 0, 433, 450, 0, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	448, 0, 0, 0, 0, 496, 0, 449, 0, 0,
	444, 445, 446, 451, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 174, 217, 135, 473, 0, 0, 187,
	325, 0, 0, 494, 251, 0, 291, 177, 195, 139,
	121, 133, 149, 176, 227, 260, 270, 479, 0, 0,
	0, 0, 156, 0, 263, 235, 314, 0, 0, 241,
	262, 198, 303, 253, 312, 313, 178, 296, 322, 327,
	283, 165, 0, 125, 0, 248, 160, 191, 0, 0,
	0, 153, 0, 0, 0, 282, 301, 140, 298, 215,
	221, 150, 152, 151, 134, 277, 300, 144, 154, 287,
	266, 292, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 294, 311, 146, 274, 275, 328, 261,
	128, 309, 290, 213, 188, 189, 127, 0, 258, 163,
	173, 158, 230, 0, 172, 250, 306, 307, 157, 330,
	136, 321, 130, 137, 320, 224, 0, 223, 323, 302,
	310, 214, 206, 0, 129, 308, 212, 205, 193, 168,
	180, 246, 201, 247, 181, 219, 218, 220, 207, 0,
	0, 0, 288, 317, 331, 203, 142, 0, 276, 299,
	0, 0, 143, 171, 167, 245, 222, 138, 183, 285,
	192, 199, 257, 329, 234, 264, 147, 316, 284, 483,
	495, 489, 491, 490, 487, 488, 486, 485, 484, 497,
	474, 475, 476, 477, 480, 0, 492, 493, 0, 0,
	0, 0, 510, 511, 512, 513, 514, 515, 516, 509,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 498,
	499, 500, 501, 502, 503, 504, 505, 508, 506, 507,
	478, 120, 131, 196, 0, 255, 170, 318, 0, 162,
	0, 0, 0, 0, 0, 0, 122, 123, 132, 141,
	148, 161, 166, 169, 175, 179, 182, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 225, 226, 228, 229,
	232, 233, 236, 238, 239, 240, 242, 243, 244, 249,
	252, 254, 256, 259, 265, 267, 268, 269, 271, 272,
	273, 278, 279, 280, 281, 289, 293, 304, 305, 315,
	324, 326, 34, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 164, 435, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 482, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 471, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 436, 459, 458,
	461, 462, 463, 464, 0, 0, 145, 460, 465, 466,
	467, 0, 0, 0, 433, 450, 0, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 447, 448,
	0, 0, 0, 0, 496, 0, 449, 0, 0, 444,
	445, 446, 451, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 473, 0, 0, 187, 325,
	0, 0, 494, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 479, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 483, 495,
	489, 491, 490, 487, 488, 486, 485, 484, 497, 474,
	475, 476, 477, 480, 0, 492, 493, 0, 0, 0,
	0, 510, 511, 512, 513, 514, 515, 516, 509, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 498, 499,
	500, 501, 502, 503, 504, 505, 508, 506, 507, 478,
	120, 131, 196, 77, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 164, 435, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 482, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 471, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 436, 459, 458, 461, 462,
	463, 464, 0, 0, 145, 460, 465, 466, 467, 0,
	0, 0, 433, 450, 0, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 448, 429, 0,
	0, 0, 496, 0, 449, 0, 0, 444, 445, 446,
	451, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 473, 0, 0, 187, 325, 0, 0,
	494, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 479, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 203, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 483, 495, 489, 491,
	490, 487, 488, 486, 485, 484, 497, 474, 475, 476,
	477, 480, 0, 492, 493, 0, 0, 0, 0, 510,
	511, 512, 513, 514, 515, 516, 509, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 498, 499, 500, 501,
	502, 503, 504, 505, 508, 506, 507, 478, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	164, 435, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 0, 0, 0, 482,
	197, 0, 0, 319, 286, 216, 0, 0, 0, 0,
	471, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 810, 436, 459, 458, 461, 462, 463, 464,
	0, 0, 145, 460, 465, 466, 467, 0, 0, 0,
	433, 450, 0, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 448, 0, 0, 0, 0,
	496, 0, 449, 0, 0, 444, 445, 446, 451, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 217,
	135, 473, 0, 0, 187, 325, 0, 0, 494, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 479, 0, 0, 0, 0, 156, 0, 263,
	235, 314, 0, 0, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 0, 0, 288, 317, 331,
	203, 142, 0, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 483, 495, 489, 491, 490, 487,
	488, 486, 485, 484, 497, 474, 475, 476, 477, 480,
	0, 492, 493, 0, 0, 0, 0, 510, 511, 512,
	513, 514, 515, 516, 509, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 498, 499, 500, 501, 502, 503,
	504, 505, 508, 506, 507, 478, 120, 131, 196, 0,
	255, 170, 318, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 164, 435,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 0, 0, 0, 482, 197, 0,
	0, 319, 286, 216, 0, 0, 0, 0, 471, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 436, 459, 458, 461, 462, 463, 464, 0, 0,
	145, 460, 465, 466, 467, 0, 0, 0, 433, 450,
	0, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 448, 1230, 0, 0, 0, 496, 0,
	449, 0, 0, 444, 445, 446, 451, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 217, 135, 473,
	0, 0, 187, 325, 0, 0, 494, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	479, 0, 0, 0, 0, 156, 0, 263, 235, 314,
	0, 0, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 0, 0, 288, 317, 331, 203, 142,
	0, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 483, 495, 489, 491, 490, 487, 488, 486,
	485, 484, 497, 474, 475, 476, 477, 480, 0, 492,
	493, 0, 0, 0, 0, 510, 511, 512, 513, 514,
	515, 516, 509, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 498, 499, 500, 501, 502, 503, 504, 505,
	508, 506, 507, 478, 120, 131, 196, 0, 255, 170,
	318, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 164, 435, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 482, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 471, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 436,
	459, 1241, 461, 462, 463, 464, 0, 0, 145, 460,
	465, 466, 467, 0, 0, 0, 433, 450, 0, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	447, 448, 1230, 0, 0, 0, 496, 0, 449, 0,
	0, 444, 445, 446, 451, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 473, 0, 0,
	187, 325, 0, 0, 494, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 479, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 0,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 0, 0, 288, 317, 331, 203, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	483, 495, 489, 491, 490, 487, 488, 486, 485, 484,
	497, 474, 475, 476, 477, 480, 0, 492, 493, 0,
	0, 0, 0, 510, 511, 512, 513, 514, 515, 516,
	509, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	498, 499, 500, 501, 502, 503, 504, 505, 508, 506,
	507, 478, 120, 131, 196, 0, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 164, 435, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 482, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 471, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 436, 459, 1238,
	461, 462, 463, 464, 0, 0, 145, 460, 465, 466,
	467, 0, 0, 0, 433, 450, 0, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 447, 448,
	1230, 0, 0, 0, 496, 0, 449, 0, 0, 444,
	445, 446, 451, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 473, 0, 0, 187, 325,
	0, 0, 494, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 479, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 483, 495,
	489, 491, 490, 487, 488, 486, 485, 484, 497, 474,
	475, 476, 477, 480, 0, 492, 493, 0, 0, 0,
	0, 510, 511, 512, 513, 514, 515, 516, 509, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 498, 499,
	500, 501, 502, 503, 504, 505, 508, 506, 507, 478,
	120, 131, 196, 0, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 164, 435, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 482, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 471, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 1136, 436, 459, 458, 461, 462,
	463, 464, 0, 0, 145, 460, 465, 466, 467, 0,
	0, 0, 433, 450, 0, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 448, 0, 0,
	0, 0, 496, 0, 449, 0, 0, 444, 445, 446,
	451, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 473, 0, 0, 187, 325, 0, 0,
	494, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 479, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 203, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 483, 495, 489, 491,
	490, 487, 488, 486, 485, 484, 497, 474, 475, 476,
	477, 480, 0, 492, 493, 0, 0, 0, 0, 510,
	511, 512, 513, 514, 515, 516, 509, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 498, 499, 500, 501,
	502, 503, 504, 505, 508, 506, 507, 478, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	164, 435, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 0, 0, 0, 482,
	197, 0, 0, 319, 286, 216, 0, 0, 0, 0,
	471, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 436, 459, 458, 461, 462, 463, 464,
	0, 0, 145, 460, 465, 466, 467, 0, 0, 0,
	433, 450, 0, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 448, 0, 0, 0, 0,
	496, 0, 449, 0, 0, 444, 445, 446, 451, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 217,
	135, 473, 0, 0, 187, 325, 0, 0, 494, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 479, 0, 0, 0, 0, 156, 0, 263,
	235, 314, 0, 0, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 0, 0, 288, 317, 331,
	203, 142, 0, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 483, 495, 489, 491, 490, 487,
	488, 486, 485, 484, 497, 474, 475, 476, 477, 480,
	0, 492, 493, 0, 0, 0, 0, 510, 511, 512,
	513, 514, 515, 516, 509, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 498, 499, 500, 501, 502, 503,
	504, 505, 508, 506, 507, 478, 120, 131, 196, 0,
	255, 170, 318, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 164, 435,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 0, 0, 0, 482, 197, 0,
	0, 319, 286, 216, 0, 0, 0, 0, 471, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 436, 459, 458, 461, 462, 463, 464, 0, 0,
	145, 460, 465, 466, 467, 0, 0, 0, 433, 450,
	0, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 447, 448, 0, 0, 0, 0, 496, 0,
	449, 0, 0, 444, 445, 446, 451, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 217, 135, 473,
	0, 0, 187, 325, 0, 0, 494, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	479, 0, 0, 0, 0, 156, 0, 263, 235, 314,
	0, 0, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 0, 0, 288, 317, 331, 203, 142,
	0, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 483, 495, 489, 491, 490, 487, 488, 486,
	485, 484, 497, 474, 475, 476, 477, 480, 0, 492,
	493, 0, 0, 0, 0, 821, 822, 823, 824, 825,
	829, 830, 834, 835, 843, 842, 841, 844, 845, 847,
	846, 848, 826, 827, 828, 831, 832, 833, 836, 837,
	840, 838, 839, 478, 120, 131, 196, 0, 255, 170,
	318, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 482, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 471, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 436,
	459, 458, 461, 462, 463, 464, 0, 0, 145, 460,
	465, 466, 467, 0, 0, 0, 0, 450, 0, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	447, 448, 0, 0, 0, 0, 496, 0, 449, 0,
	0, 444, 445, 446, 451, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 473, 0, 0,
	187, 325, 0, 0, 494, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 479, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 2311,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 0, 0, 288, 317, 331, 203, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	483, 495, 489, 491, 490, 487, 488, 486, 485, 484,
	497, 474, 475, 476, 477, 480, 0, 492, 493, 0,
	0, 0, 0, 510, 511, 512, 513, 514, 515, 516,
	509, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	498, 499, 500, 501, 502, 503, 504, 505, 508, 506,
	507, 478, 120, 131, 196, 0, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 482, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 471, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 810, 436, 459, 458,
	461, 462, 463, 464, 0, 0, 145, 460, 465, 466,
	467, 0, 0, 0, 0, 450, 0, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 447, 448,
	0, 0, 0, 0, 496, 0, 449, 0, 0, 444,
	445, 446, 451, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 473, 0, 0, 187, 325,
	0, 0, 494, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 479, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 483, 495,
	489, 491, 490, 487, 488, 486, 485, 484, 497, 474,
	475, 476, 477, 480, 0, 492, 493, 0, 0, 0,
	0, 510, 511, 512, 513, 514, 515, 516, 509, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 498, 499,
	500, 501, 502, 503, 504, 505, 508, 506, 507, 478,
	120, 131, 196, 0, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 482, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 471, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 436, 459, 458, 461, 462,
	463, 464, 0, 0, 145, 460, 465, 466, 467, 0,
	0, 0, 0, 450, 0, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 447, 448, 0, 0,
	0, 0, 496, 0, 449, 0, 0, 444, 445, 446,
	451, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 473, 0, 0, 187, 325, 0, 0,
	494, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 479, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 203, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 483, 495, 489, 491,
	490, 487, 488, 486, 485, 484, 497, 474, 475, 476,
	477, 480, 0, 492, 493, 0, 0, 0, 0, 510,
	511, 512, 513, 514, 515, 516, 509, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 498, 499, 500, 501,
	502, 503, 504, 505, 508, 506, 507, 478, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 1148, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 0, 0, 0, 0,
	197, 0, 0, 319, 286, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1150, 1152, 0, 0,
	0, 0, 0, 118, 0, 391, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 217,
	135, 0, 0, 0, 187, 325, 0, 1151, 0, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 0, 0, 0, 0, 0, 156, 0, 263,
	235, 314, 0, 0, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 0, 0, 288, 317, 331,
	203, 142, 0, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 400, 401, 405, 406, 414, 413, 412, 415,
	416, 418, 417, 419, 397, 398, 399, 402, 403, 404,
	407, 408, 411, 409, 410, 0, 120, 131, 196, 0,
	255, 170, 318, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 1148, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 0, 0, 0, 0, 197, 0,
	0, 319, 286, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1150, 1152, 0, 0, 0, 0,
	0, 118, 0, 391, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 217, 135, 0,
	0, 0, 187, 325, 0, 1151, 0, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	0, 0, 0, 0, 0, 156, 0, 263, 235, 314,
	0, 0, 1146, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 0, 0, 288, 317, 331, 203, 142,
	0, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 395, 396,
	400, 401, 405, 406, 414, 413, 412, 415, 416, 418,
	417, 419, 397, 398, 399, 402, 403, 404, 407, 408,
	411, 409, 410, 0, 120, 131, 196, 0, 255, 170,
	318, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 861, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 0, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 862,
	0, 865, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 858, 857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 0, 0, 0,
	187, 325, 0, 0, 0, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 0, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 0,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 0, 0, 288, 317, 331, 203, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 395, 396, 400, 401,
	405, 406, 414, 413, 412, 415, 416, 418, 417, 419,
	397, 398, 399, 402, 403, 404, 407, 408, 411, 409,
	410, 0, 120, 131, 196, 0, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	1432, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 0, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 391,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 0, 0, 0, 187, 325,
	0, 0, 0, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 0, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 395, 396, 400, 401, 405, 406,
	414, 413, 412, 415, 416, 418, 417, 419, 397, 398,
	399, 402, 403, 404, 407, 408, 411, 409, 410, 0,
	120, 131, 196, 0, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 0, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 391, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 0, 0, 0, 187, 325, 0, 0,
	0, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 0, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 203, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 395, 396, 400, 401, 405, 406, 414, 413,
	412, 415, 416, 418, 417, 419, 397, 398, 399, 402,
	403, 404, 407, 408, 411, 409, 410, 0, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 0, 0, 0, 0,
	197, 0, 0, 319, 286, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 865, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 217,
	135, 0, 0, 0, 187, 325, 0, 0, 0, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 0, 0, 0, 0, 0, 156, 0, 263,
	235, 314, 0, 0, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 0, 0, 288, 317, 331,
	203, 142, 0, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	395, 396, 400, 401, 405, 406, 414, 413, 412, 415,
	416, 418, 417, 419, 397, 398, 399, 402, 403, 404,
	407, 408, 411, 409, 410, 0, 120, 131, 196, 0,
	255, 170, 318, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 0, 0, 0, 0, 197, 0,
	0, 319, 286, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 875, 874,
	884, 885, 877, 878, 879, 880, 881, 882, 883, 876,
	0, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 217, 135, 0,
	0, 0, 187, 325, 0, 0, 0, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	0, 0, 0, 0, 0, 156, 0, 263, 235, 314,
	0, 0, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 0, 0, 288, 317, 331, 203, 142,
	0, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 0, 255, 170,
	318, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 34, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 194, 0, 0, 155, 202, 200, 0, 0,
	0, 237, 295, 0, 0, 0, 1307, 197, 0, 0,
	319, 286, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 174, 217, 135, 0, 0,
	0, 187, 325, 0, 0, 0, 251, 0, 291, 177,
	195, 139, 121, 133, 149, 176, 227, 260, 270, 0,
	0, 0, 0, 0, 156, 0, 263, 235, 314, 0,
	0, 241, 262, 198, 303, 253, 312, 313, 178, 296,
	322, 327, 283, 165, 0, 125, 0, 248, 160, 191,
	0, 0, 0, 153, 0, 0, 0, 282, 301, 140,
	298, 215, 221, 150, 152, 151, 134, 277, 300, 144,
	154, 287, 266, 292, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 294, 311, 146, 274, 275,
	328, 261, 128, 309, 290, 213, 188, 189, 127, 0,
	258, 163, 173, 158, 230, 0, 172, 250, 306, 307,
	157, 330, 136, 321, 130, 137, 320, 224, 0, 223,
	323, 302, 310, 214, 206, 0, 129, 308, 212, 205,
	193, 168, 180, 246, 201, 247, 181, 219, 218, 220,
	207, 0, 0, 0, 288, 317, 331, 203, 142, 0,
	276, 299, 0, 0, 143, 171, 167, 245, 222, 138,
	183, 285, 192, 199, 257, 329, 234, 264, 147, 316,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 131, 196, 77, 255, 170, 318,
	0, 162, 0, 0, 0, 0, 0, 0, 122, 123,
	132, 141, 148, 161, 166, 169, 175, 179, 182, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 225, 226,
	228, 229, 232, 233, 236, 238, 239, 240, 242, 243,
	244, 249, 252, 254, 256, 259, 265, 267, 268, 269,
	271, 272, 273, 278, 279, 280, 281, 289, 293, 304,
	305, 315, 324, 326, 34, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 0, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 0, 0, 0,
	187, 325, 0, 0, 0, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 0, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 0,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 0, 0, 288, 317, 331, 203, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 77, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 1008, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 0, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 0, 1007,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 0, 0, 0, 187, 325,
	0, 0, 0, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 0, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 0, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 0, 0, 0, 187, 325, 0, 0,
	0, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 0, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 203, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 0, 0, 0, 0,
	197, 0, 0, 319, 286, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 217,
	135, 0, 0, 0, 187, 325, 0, 0, 0, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 0, 0, 0, 0, 0, 156, 0, 263,
	235, 314, 0, 0, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 0, 0, 288, 317, 331,
	203, 142, 0, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	255, 170, 318, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 0, 0, 0, 0, 197, 0,
	0, 319, 286, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 217, 135, 0,
	0, 0, 187, 325, 0, 0, 0, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	0, 0, 0, 0, 0, 156, 0, 263, 235, 314,
	0, 0, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 0, 0, 288, 317, 331, 203, 142,
	0, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 0, 255, 170,
	318, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 297, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 0, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 0, 0, 0,
	187, 325, 0, 0, 0, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 0, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 0,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 137, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 0, 0, 288, 317, 331, 203, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 222, 138, 183,
	285, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 0, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 243, 244,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 0, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 0, 115, 0, 187, 325,
	0, 0, 0, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 0, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 311, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 0, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 0, 0, 0, 187, 325, 0, 0,
	0, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 0, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 311, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	137, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 203, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 222, 138, 183, 285, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 243, 244, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 194, 0, 0, 155, 202,
	200, 0, 0, 0, 237, 295, 0, 0, 0, 0,
	197, 0, 0, 319, 286, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 174, 217,
	135, 0, 0, 0, 187, 325, 0, 0, 0, 251,
	0, 291, 177, 195, 139, 121, 133, 149, 176, 227,
	260, 270, 0, 0, 0, 0, 0, 156, 0, 263,
	235, 314, 0, 0, 241, 262, 198, 303, 253, 312,
	313, 178, 296, 322, 327, 283, 165, 0, 125, 0,
	248, 160, 191, 0, 0, 0, 153, 0, 0, 0,
	282, 301, 140, 298, 215, 221, 150, 152, 151, 134,
	277, 300, 144, 154, 287, 266, 292, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 294, 311,
	146, 274, 275, 328, 261, 128, 309, 290, 213, 188,
	189, 127, 0, 258, 163, 173, 158, 230, 0, 172,
	250, 306, 307, 157, 330, 136, 321, 130, 137, 320,
	224, 0, 223, 323, 302, 310, 214, 206, 0, 129,
	308, 212, 205, 193, 168, 180, 246, 201, 247, 181,
	219, 218, 220, 207, 0, 0, 0, 288, 317, 331,
	203, 142, 0, 276, 299, 0, 0, 143, 171, 167,
	245, 222, 138, 183, 285, 192, 199, 257, 329, 234,
	264, 147, 316, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 131, 196, 0,
	255, 170, 318, 0, 162, 0, 0, 0, 0, 0,
	0, 122, 123, 132, 141, 148, 161, 166, 169, 175,
	179, 182, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 225, 226, 228, 229, 232, 233, 236, 238, 239,
	240, 242, 243, 244, 249, 252, 254, 256, 259, 265,
	267, 268, 269, 271, 272, 273, 278, 279, 280, 281,
	289, 293, 304, 305, 315, 324, 326, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 194, 0, 0, 155, 202, 200, 0,
	0, 0, 237, 295, 0, 0, 0, 0, 197, 0,
	0, 319, 286, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 174, 217, 135, 0,
	0, 0, 187, 325, 0, 0, 0, 251, 0, 291,
	177, 195, 139, 121, 133, 149, 176, 227, 260, 270,
	0, 0, 0, 0, 0, 156, 0, 263, 235, 314,
	0, 0, 241, 262, 198, 303, 253, 312, 313, 178,
	296, 322, 327, 283, 165, 0, 125, 0, 248, 160,
	191, 0, 0, 0, 153, 0, 0, 0, 282, 301,
	140, 298, 215, 221, 150, 152, 151, 134, 277, 300,
	144, 154, 287, 266, 292, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 294, 311, 146, 274,
	275, 328, 261, 128, 309, 290, 213, 188, 189, 127,
	0, 258, 163, 173, 158, 230, 0, 172, 250, 306,
	307, 157, 330, 136, 321, 130, 137, 320, 224, 0,
	223, 323, 302, 310, 214, 206, 0, 129, 308, 212,
	205, 193, 168, 180, 246, 201, 247, 181, 219, 218,
	220, 207, 0, 0, 0, 288, 317, 331, 203, 142,
	0, 276, 299, 0, 0, 143, 171, 167, 245, 222,
	138, 183, 285, 192, 199, 257, 329, 234, 264, 147,
	316, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 131, 196, 0, 255, 170,
	318, 0, 162, 0, 0, 0, 0, 0, 0, 122,
	123, 132, 141, 148, 161, 166, 169, 175, 179, 182,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 225,
	226, 228, 229, 232, 233, 236, 238, 239, 240, 242,
	243, 244, 249, 252, 254, 256, 259, 265, 267, 268,
	269, 271, 272, 273, 278, 279, 280, 281, 289, 293,
	304, 305, 315, 324, 326, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 194, 0, 0, 155, 202, 200, 0, 0, 0,
	237, 295, 0, 0, 0, 0, 197, 0, 0, 319,
	286, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 174, 217, 135, 0, 0, 0,
	187, 325, 0, 0, 0, 251, 0, 291, 177, 195,
	139, 121, 133, 149, 176, 227, 260, 270, 0, 0,
	0, 0, 0, 156, 0, 263, 235, 314, 0, 0,
	241, 262, 198, 303, 253, 312, 313, 178, 296, 322,
	327, 283, 165, 0, 125, 0, 248, 160, 191, 0,
	0, 0, 153, 0, 0, 0, 282, 301, 140, 298,
	215, 221, 150, 152, 151, 134, 277, 300, 144, 154,
	287, 266, 292, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 294, 311, 146, 274, 275, 328,
	261, 128, 309, 290, 213, 188, 189, 127, 0, 258,
	163, 173, 158, 230, 0, 172, 250, 306, 307, 157,
	330, 136, 321, 130, 548, 320, 224, 0, 223, 323,
	302, 310, 214, 206, 0, 129, 308, 212, 205, 193,
	168, 180, 246, 201, 247, 181, 219, 218, 220, 207,
	0, 0, 0, 288, 317, 331, 544, 142, 0, 276,
	299, 0, 0, 143, 171, 167, 245, 549, 547, 538,
	539, 192, 199, 257, 329, 234, 264, 147, 316, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 131, 196, 0, 255, 170, 318, 0,
	162, 0, 0, 0, 0, 0, 0, 122, 123, 132,
	141, 148, 161, 166, 169, 175, 179, 182, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 225, 226, 228,
	229, 232, 233, 236, 238, 239, 240, 242, 545, 546,
	249, 252, 254, 256, 259, 265, 267, 268, 269, 271,
	272, 273, 278, 279, 280, 281, 289, 293, 304, 305,
	315, 324, 326, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 194,
	0, 0, 155, 202, 200, 0, 0, 0, 237, 295,
	0, 0, 0, 0, 197, 0, 0, 319, 286, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 174, 217, 135, 0, 0, 0, 187, 325,
	0, 0, 0, 251, 0, 291, 177, 195, 139, 121,
	133, 149, 176, 227, 260, 270, 0, 0, 0, 0,
	0, 156, 0, 263, 235, 314, 0, 0, 241, 262,
	198, 303, 253, 312, 313, 178, 296, 322, 327, 283,
	165, 0, 125, 0, 248, 160, 191, 0, 0, 0,
	153, 0, 0, 0, 282, 301, 140, 298, 215, 221,
	150, 152, 151, 134, 277, 300, 144, 154, 287, 266,
	292, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 294, 1002, 146, 274, 275, 328, 261, 128,
	309, 290, 213, 188, 189, 127, 0, 258, 163, 173,
	158, 230, 0, 172, 250, 306, 307, 157, 330, 136,
	321, 130, 137, 320, 224, 0, 223, 323, 302, 310,
	214, 206, 0, 129, 308, 212, 205, 193, 168, 180,
	246, 201, 247, 181, 219, 218, 220, 207, 0, 0,
	0, 288, 317, 331, 203, 142, 0, 276, 299, 0,
	0, 143, 171, 167, 245, 222, 138, 183, 285, 192,
	199, 257, 329, 234, 264, 147, 316, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 131, 196, 0, 255, 170, 318, 0, 162, 0,
	0, 0, 0, 0, 0, 122, 123, 132, 141, 148,
	161, 166, 169, 175, 179, 182, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 225, 226, 228, 229, 232,
	233, 236, 238, 239, 240, 242, 243, 244, 249, 252,
	254, 256, 259, 265, 267, 268, 269, 271, 272, 273,
	278, 279, 280, 281, 289, 293, 304, 305, 315, 324,
	326, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 194, 0, 0,
	155, 202, 200, 0, 0, 0, 237, 295, 0, 0,
	0, 0, 197, 0, 0, 319, 286, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	174, 217, 135, 0, 0, 0, 187, 325, 0, 0,
	0, 251, 0, 291, 177, 195, 139, 121, 133, 149,
	176, 227, 260, 270, 0, 0, 0, 0, 0, 156,
	0, 263, 235, 314, 0, 0, 241, 262, 198, 303,
	253, 312, 313, 178, 296, 322, 327, 283, 165, 0,
	125, 0, 248, 160, 191, 0, 0, 0, 153, 0,
	0, 0, 282, 301, 140, 298, 215, 221, 150, 152,
	151, 134, 277, 300, 144, 154, 287, 266, 292, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	294, 535, 146, 274, 275, 328, 261, 128, 309, 290,
	213, 188, 189, 127, 0, 258, 163, 173, 158, 230,
	0, 172, 250, 306, 307, 157, 330, 136, 321, 130,
	548, 320, 224, 0, 223, 323, 302, 310, 214, 206,
	0, 129, 308, 212, 205, 193, 168, 180, 246, 201,
	247, 181, 219, 218, 220, 207, 0, 0, 0, 288,
	317, 331, 544, 142, 0, 276, 299, 0, 0, 143,
	171, 167, 245, 549, 547, 538, 539, 192, 199, 257,
	329, 234, 264, 147, 316, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 131,
	196, 0, 255, 170, 318, 0, 162, 0, 0, 0,
	0, 0, 0, 122, 123, 132, 141, 148, 161, 166,
	169, 175, 179, 182, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 225, 226, 228, 229, 232, 233, 236,
	238, 239, 240, 242, 545, 546, 249, 252, 254, 256,
	259, 265, 267, 268, 269, 271, 272, 273, 278, 279,
	280, 281, 289, 293, 304, 305, 315, 324, 326,
}
var yyPact = [...]int{

	2835, -1000, -294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1490, -1000, -1000, -1000, -1000, -1000, -1000,
	601, 241, -1000, -1000, 297, 51, 22426, 295, 282, 23282,
	-1000, -1000, -1000, 115, 223, 23282, -1000, -1000, -1000, 218,
	253, 1087, 1349, 1074, 37, -79, -80, -1000, 1541, 1544,
	-1000, -1000, 259, 44, -1000, -1000, -1000, 18144, 168, -1000,
	-1000, -1000, 1468, 1486, 1275, -1000, 11724, 258, 258, 21998,
	24994, -1000, 23282, 10438, 275, 23282, -144, 251, 251, 164,
	285, -1000, 611, -1000, -1000, -1000, -1000, 23282, 252, 22854,
	252, 252, 252, 252, 252, 23282, -1000, 474, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 23282, 1070, 1403, 666, 130, 7421, 7421, -1000,
	627, -1000, 149, 146, 152, 143, 53, 688, -1000, 7421,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 204, 265, 209,
	168, 600, -1000, -1000, -1000, -1000, -1000, 1383, 1381, 744,
	1377, 92, 1375, 1206, -72, -1000, 1068, 23282, -1000, -1000,
	1217, 1457, 278, 23282, -1000, -1000, 1146, -1000, 1190, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	842, 1368, 706, 14720, 1316, -1000, -1000, 669, 1513, -1000,
	17288, 450, -1000, 14292, 4176, 1011, -1000, -1000, 1011, -1000,
	-1000, 469, -1000, -1000, 16004, 16004, 16004, 16004, 16004, 16004,
	16004, 16004, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1011, -1000,
	11296, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 14292, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 21570, 20714, 23282, 1177,
	1141, -1000, -1000, 447, 1142, -103, 24566, -1000, -1000, -1000,
	-1000, 23710, 20286, 585, -1000, -1000, -1000, -1000, 1373, -1000,
	-1000, 438, -1000, 1067, 227, -1000, 2425, 466, -1000, -1000,
	-1000, 1204, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22854, 1446,
	267, 1064, 630, 1063, 1062, 1059, 251, 1058, 1140, 264,
	23282, 1436, 1238, 23282, 1045, 1043, 1042, 1041, -1000, 10007,
	-1000, 7421, 666, -1000, 848, 14292, 251, 251, 7421, 7421,
	7421, 23282, 23282, 23282, -1000, -1000, -1000, -1000, 23282, -1000,
	-1000, 666, 666, 7421, 7421, 617, 1512, 617, 617, -1000,
	-1000, -1000, -1000, 14292, -1000, 16004, -1000, -1000, 1040, 201,
	-1000, -1000, -1000, -1000, -1000, -1000, 1035, 92, 92, -1000,
	847, 92, 1129, -1000, 568, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 92, -1000, 13864,
	-292, -1000, -1000, 1138, -1000, -76, 16860, 1275, -1000, -1000,
	168, -1000, -1000, -1000, 23282, 7421, 18144, 1011, 22854, -1000,
	-1000, -1000, 1536, 520, 1155, -1000, -1000, 1137, -1000, 712,
	1424, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
	1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 436,
	882, 1283, -1000, -1000, -1000, 23282, -1000, 14292, 14292, 775,
	-1000, 18572, -1000, -1000, -1000, -1000, 8283, 537, 16004, 657,
	555, 16004, 16004, 16004, 16004, 16004, 16004, 16004, 16004, 16004,
	16004, 16004, 16004, 16004, 16004, 16004, 734, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1028, -1000, 168, 903, 903,
	482, 482, 482, 482, 482, 482, 482, 19000, 1440, 842,
	1039, 546, 11296, 12580, 12580, 842, 14292, 14292, 13436, 13008,
	12580, 12580, 1440, 606, 546, 23710, -1000, -1000, 15576, -1000,
	-1000, -1000, -1000, -1000, 842, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22854, 22854, 12580, 12580, 12580, 12580, 842,
	842, 12580, 12580, 12580, 12580, 12580, 842, 842, 842, 842,
	1440, 1440, 12580, 12580, 12580, 1440, 12580, 12580, 1440, 12580,
	12580, 12580, 12580, 1440, 12580, 12580, 12580, 183, 23282, -1000,
	1149, 1224, -1000, -1000, -1000, 1445, 19429, -1000, 183, 1109,
	20714, 23282, -1000, -1000, 20714, 23282, 7852, 24138, 1124, -1000,
	-95, -120, -103, -1000, -1000, 480, -1000, -1000, -1000, 10867,
	-1000, 9145, 5697, 9576, -1000, 466, 1204, -1000, -63, -1000,
	-1000, -1000, 1184, -1000, 1184, 166, -9, 1184, 1184, 1184,
	1184, 1184, -17, -17, -17, -17, -16, -1000, -1000, -1000,
	-1000, -1000, 1203, 1201, -1000, 1184, 1184, 1184, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1192, 181, 1188, 1188,
	1188, 1188, 1188, 225, -1000, 14292, 1178, -1000, 23282, 7421,
	1435, 7421, 156, 1200, 23282, -1000, 23282, 23282, 1136, -1000,
	23282, 1135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 546, 1026, 1021, -1000, -1000, -1000, -1000,
	-1000, -1000, 626, -1000, -1000, -1000, -1000, 666, 23282, 23282,
	23282, 1444, 666, 546, 477, -1000, -1000, 1018, -1000, 1129,
	1129, -1000, 1129, 92, 903, 1129, -1000, 1025, 1427, 846,
	23282, -1000, -74, -1000, -100, -1000, 1011, -1000, 17716, 494,
	274, 273, 272, 1440, 842, 1275, 2844, -1000, -1000, -1000,
	175, 978, 434, -1000, 1279, 706, 706, 14720, -1000, -1000,
	-1000, -1000, 9145, 1470, -1000, 1289, 1287, 1256, -1000, -1000,
	537, 553, -1000, -1000, 782, -1000, -1000, -1000, -1000, 426,
	1011, -1000, 3563, -1000, -1000, -1000, -1000, 657, 16004, 16004,
	16004, 477, 3563, 3362, 577, 2979, 482, 659, 659, 484,
	484, 484, 484, 484, 905, 905, -1000, -1000, -1000, 842,
	-1000, -1000, -1000, 12580, -1000, 14292, -1000, 842, 1014, -1000,
	-1000, 546, 343, 1014, -1000, 717, 653, 631, 1508, 1014,
	556, 1503, 1014, 1014, 1014, 12580, 662, -1000, 14292, 842,
	-1000, 892, 1128, 1127, 1014, 842, 1125, 1014, 1014, -156,
	-156, 842, 1014, 842, 1014, 1014, -156, -156, -156, -156,
	12580, 12580, 1014, 1014, 1014, 12580, 1014, 1014, 12580, 1014,
	1014, 1014, 1014, 12580, 1014, 1014, 1014, 174, 1011, -1000,
	23710, 20714, 20714, 20714, 20714, 20714, -1000, 1261, 1260, -1000,
	1251, 1249, 1269, 18144, -1000, 1016, 842, 136, 19429, 1495,
	20714, 1027, -1000, 1027, -1000, 336, -1000, -1000, 23710, -103,
	-123, -1000, -1000, 1124, -1000, 780, -1000, -1000, 546, -1000,
	333, 1123, 5266, -1000, -1000, -1000, -1000, 227, -1000, -1000,
	-1000, 1194, 330, -1000, 1306, 423, 536, 881, 1295, -1000,
	-1000, 635, -62, -1000, -1000, 720, -17, -17, 1184, 1184,
	165, 1184, -1000, -17, -1000, -1000, -1000, 480, 1361, 480,
	480, 480, 480, -17, 837, 837, -1000, -1000, -1000, -1000,
	715, -1000, 1192, -1000, 713, -1000, -1000, -1000, -1000, -1000,
	786, 1236, 22854, 168, 1442, -1000, -1000, -1000, 1500, -1000,
	-1000, 462, -1000, 263, -1000, 7421, 23282, 7421, 7421, 1495,
	1010, 993, -1000, -1000, -1000, 617, 666, 1352, -1000, -1000,
	16004, -1000, -1000, -1000, -1000, 183, 277, -1000, -1000, -1000,
	-1000, 22854, 16004, 494, -1000, 1011, 1011, 1011, 1283, -1000,
	1440, 1120, -1000, -1000, 564, 511, 602, 235, 235, -1000,
	547, 235, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	182, 1428, 22854, 22854, 1271, -1000, -1000, -1000, 23282, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6990, 12580,
	-1000, 477, 3563, 3293, -1000, 16004, -1000, 842, 546, -1000,
	12580, -1000, 6559, -1000, 114, 734, 114, 16004, 16004, -1000,
	16004, 16004, -1000, -204, -1000, 1172, 579, -1000, 14292, 854,
	-1000, -1000, 16004, 16004, -1000, -1000, -1000, -1000, -1000, 21142,
	-1000, -156, -156, -156, -156, -156, -1000, -1000, -1000, -1000,
	1014, 1014, -156, -156, -156, 1014, -156, -156, 1014, -156,
	-156, -156, -156, 1014, -156, -156, -156, 1235, 23710, 1011,
	-1000, 19858, 22854, 1159, -1000, 552, 1224, 1198, 1233, 1097,
	-1000, -1000, -1000, -1000, 1252, -1000, 1250, -1000, -1000, 1154,
	-1000, -1000, 1117, 1011, 1490, 14292, 1027, -1000, -1000, 431,
	-1000, -1000, -98, -126, -1000, -1000, -1000, 8714, 5697, -1000,
	5697, -1000, 22854, 210, -1000, 881, -1000, -1000, 881, -1000,
	-1000, -1000, 1189, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	639, 16004, 1522, -1000, 1301, -1000, 1300, 835, -1000, -1000,
	1001, 480, 480, -17, -1000, -1000, 1184, -1000, 480, -1000,
	558, -1000, -1000, -1000, -1000, 480, 1008, -1000, 1000, 1116,
	-1000, 998, 57, 23282, -1000, -1000, -1000, 1232, -1000, -1000,
	-1000, 974, 1115, -1000, 2425, 992, 989, 988, 23282, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 666, -1000, 16004, 3563,
	-17, 23282, 973, -1000, 2367, -1000, 22854, 22854, 22854, 1256,
	2844, -1000, 880, -1000, 881, 578, -1000, -1000, -1000, 1295,
	-1000, -1000, 307, 987, -1000, 986, 984, 22854, 1296, 919,
	23282, 22854, -1000, -1000, 902, 917, 14292, -1000, 22854, 22854,
	1011, 319, -1000, -1000, -1000, 1038, 11724, -1000, -1000, 842,
	-1000, 16004, 3563, -1000, -1000, -1000, 311, 842, 1184, 1184,
	-1000, 1184, 1188, -1000, 1184, 20, 1184, 8, 842, 842,
	3109, 2283, 1751, 1121, 1011, -151, -1000, 546, 14292, 2604,
	1691, -1000, 372, -1000, -1000, -1000, -1000, -1000, -156, -156,
	-1000, -1000, -1000, -1000, -156, -1000, -1000, -156, -1000, -1000,
	-1000, -1000, -156, -1000, -1000, -1000, -1000, 1420, 1106, 1114,
	-1000, -1000, 12152, 842, 978, 973, 1490, 23710, 14292, -1000,
	-1000, 14292, 1185, -1000, 14292, -1000, -1000, -1000, -1000, 22854,
	135, -1000, 14292, 1468, 546, -1000, -1000, -1000, -1000, 5266,
	-1000, 968, -1000, 1184, -1000, 1295, -1000, -1000, 22854, -1000,
	3563, -64, -1000, -1000, -1000, -1000, -1000, -1000, 480, -1000,
	-1000, -1000, -1000, -1000, -17, 832, -17, 711, -1000, 689,
	-1000, -1000, -239, 1182, -1000, 168, 23282, 67, 462, -1000,
	2425, 2425, 2425, -1000, -1000, 3563, -85, -1000, 16432, 22854,
	-1000, 18144, 966, -1000, 966, 966, -1000, -1000, 902, 208,
	2425, -1000, 1178, 423, 210, -1000, -1000, -1000, -1000, -1000,
	915, 418, -1000, 262, 208, 902, 546, 415, 1425, -1000,
	22854, 1493, 20714, -1000, -1000, -1000, 3563, 6128, -1000, -1000,
	155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16004,
	16004, 16004, 16004, 16004, 842, 831, 546, 16004, 16004, 842,
	1482, -1000, -1000, -1000, -1000, -1000, 1294, -1000, 1011, -1000,
	-1000, 173, -1000, 1468, -1000, 546, 546, 22854, 546, 963,
	1011, -1000, 306, 22854, 1424, 959, -1000, -1000, 480, -1000,
	480, 960, 928, -1000, 22854, -1000, 1465, -1000, 67, -1000,
	821, 108, 117, -1000, 93, 90, 89, 87, 80, -1000,
	-1000, -1000, -1000, 1337, 1325, -1000, -1000, 494, 22854, -1000,
	-1000, -1000, 1099, 924, -1000, -1000, 883, -1000, 1179, 881,
	-1000, -1000, 879, -1000, -1000, 22854, -1000, 208, 1413, 1411,
	1011, -1000, 1472, 1481, 1027, 11724, -1000, -1000, -1000, -1000,
	892, 892, 892, 892, 54, -1000, -1000, 892, 892, -1000,
	14292, 1520, -1000, 1011, -1000, 168, -1000, 943, -1000, -1000,
	306, -1000, 873, 547, 797, -1000, -1000, 212, -1000, -1000,
	-1000, -1000, 927, -1000, 138, 4179, -1000, -1000, -1000, -1000,
	-1000, -1000, 1347, 1340, 122, 243, 1309, 1311, 1480, -1000,
	-1000, 20714, -1000, -1000, 635, 22854, 1178, -1000, -1000, -1000,
	16004, -1000, 180, -1000, 14720, 14720, 1493, -1000, -1000, -1000,
	-1000, -1000, 842, 169, -212, -1000, -1000, 1150, 23710, 1114,
	842, -1000, -1000, -1000, 687, -1000, 23282, 306, 129, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14292, 14292, 4835,
	4179, -1000, -1000, -1000, -1000, 1154, 667, 1325, 1476, 1317,
	1322, -1000, 795, 1027, 923, 1148, 3563, 901, -1000, 22854,
	-1000, 546, -1000, 1112, -1000, 546, -1000, 1472, -1000, -1000,
	1268, -208, -217, 842, 1111, -1000, -1000, 1019, -1000, 306,
	131, -1000, 705, 849, 64, 55, 2377, -1000, -1000, -1000,
	-1000, -295, -1000, -1000, 1331, -1000, 794, -1000, 1475, 1471,
	-1000, 1493, 306, 22854, -1000, 180, 1286, 14720, -1000, -1000,
	1266, -1000, -1000, 22854, -1000, 868, 859, 655, -1000, 14292,
	4179, 1464, 1463, 1461, 1405, 8714, 4033, -1000, -1000, 788,
	729, 1472, -1000, 896, -1000, 170, -1000, -210, 894, 326,
	-1000, -1000, 622, 4179, -1000, 841, -296, 230, 168, 242,
	16004, -1000, -1000, -1000, -1000, -1000, -1000, 306, 162, -215,
	1231, -1000, -1000, -1000, -1000, -1000, -1000, 4179, -1000, -297,
	4179, 540, -1000, -1000, -1000, 3859, -1000, -1000, -1000, -1000,
	52, -1000, -1000, 3563, -1000, 1011, -219, 1225, 1151, 1502,
	-1000, -301, 3438, -303, 250, 4179, 716, -1000, 14292, -1000,
	242, -1000, 15148, -1000, -1000, 1504, -1000, 1518, 398, 398,
	3164, 619, 4179, -1000, -308, 248, 4179, -1000, 839, -1000,
	892, 842, -1000, -1000, -1000, 206, 685, -1000, -1000, -1000,
	3046, -1000, -309, 4179, -1000, -1000, -1000, -1000, -1000, 246,
	2795, -311, -1000, 229, 4179, -1000,
}
var yyPgo = [...]int{

	0, 1852, 59, 1850, 148, 1848, 1847, 1842, 16, 14,
	11, 21, 1841, 1625, 1623, 1621, 1619, 1840, 1615, 1838,
	5, 1837, 1836, 1608, 1834, 1832, 1606, 1604, 1597, 1595,
	1830, 1824, 26, 1823, 19, 1822, 6, 114, 123, 1819,
	3, 1818, 1816, 9, 1815, 1814, 1591, 1812, 1798, 1797,
	1796, 75, 1794, 1587, 1575, 1791, 1790, 1572, 1569, 1789,
	1787, 1567, 1565, 1554, 1786, 159, 1785, 1784, 1783, 208,
	71, 111, 1780, 1779, 1778, 98, 55, 1495, 91, 41,
	102, 308, 1777, 23, 50, 1775, 1774, 137, 151, 1773,
	122, 1772, 81, 268, 76, 1771, 1769, 139, 1767, 1766,
	1764, 107, 1762, 1761, 235, 1755, 1753, 127, 149, 74,
	40, 36, 1750, 1748, 1747, 1746, 1743, 116, 2, 1742,
	1741, 112, 1740, 65, 1739, 1737, 135, 1736, 1735, 1734,
	105, 62, 1733, 37, 1732, 44, 53, 1731, 63, 1730,
	95, 1722, 1721, 27, 13, 1720, 42, 1719, 45, 1718,
	108, 203, 818, 18, 30, 48, 54, 1717, 85, 20,
	34, 104, 82, 66, 35, 1716, 117, 1714, 56, 121,
	109, 110, 120, 1713, 1712, 1710, 726, 1709, 1708, 106,
	1707, 61, 77, 788, 189, 103, 1706, 68, 1705, 1703,
	1702, 1701, 84, 92, 1700, 1697, 73, 193, 93, 1443,
	31, 2028, 39, 119, 1696, 38, 1695, 1694, 2827, 88,
	100, 89, 1693, 86, 25, 43, 1692, 1690, 1689, 1688,
	1687, 1686, 96, 1685, 1684, 1683, 1681, 67, 46, 1679,
	1677, 94, 78, 1676, 1674, 1673, 1670, 1667, 99, 58,
	118, 1662, 90, 101, 80, 1661, 1658, 1657, 1656, 64,
	33, 1655, 1653, 1652, 83, 87, 1650, 52, 32, 29,
	49, 8, 51, 72, 1649, 24, 1648, 97, 4, 10,
	7, 1644, 1643, 1641, 1640, 1639, 57, 1638, 1634, 47,
	1633, 1632, 1631, 28, 1629, 1610, 1600, 113, 1589, 1582,
	1578, 0, 115, 124, 1558, 1556, 125,
}
var yyR1 = [...]int{

	0, 289, 290, 290, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 64, 2, 2, 7, 3,
	3, 3, 4, 4, 85, 86, 86, 90, 90, 5,
	5, 6, 6, 8, 8, 68, 68, 9, 10, 10,
	10, 10, 293, 293, 99, 99, 97, 97, 98, 98,
	161, 161, 11, 11, 11, 166, 166, 171, 171, 171,
	174, 174, 174, 174, 153, 154, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 274, 274, 275, 275, 276,
	276, 276, 276, 277, 277, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 24, 195, 195,
	44, 44, 45, 45, 45, 149, 149, 149, 12, 12,
	12, 12, 12, 19, 21, 21, 33, 33, 34, 22,
	22, 22, 22, 35, 35, 36, 25, 25, 25, 25,
	25, 25, 42, 42, 42, 41, 41, 40, 40, 40,
	40, 40, 40, 23, 23, 23, 23, 43, 43, 38,
	38, 37, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 26, 26, 26, 26, 26, 26,
	18, 273, 273, 273, 32, 32, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 49, 251, 252, 252, 252, 252, 252,
	252, 252, 252, 239, 240, 215, 215, 215, 215, 215,
	215, 215, 214, 214, 214, 214, 218, 218, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 217, 217, 217,
	217, 217, 217, 217, 217, 219, 219, 219, 219, 219,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 221, 221, 221, 221, 221,
	221, 221, 221, 238, 238, 222, 222, 231, 231, 232,
	232, 232, 229, 229, 230, 230, 233, 233, 225, 226,
	234, 227, 227, 227, 228, 228, 228, 237, 237, 237,
	237, 223, 241, 241, 261, 261, 260, 260, 259, 259,
	259, 250, 250, 256, 256, 256, 256, 256, 245, 245,
	245, 244, 244, 246, 246, 249, 249, 258, 258, 257,
	242, 242, 262, 262, 262, 262, 262, 243, 243, 243,
	263, 247, 247, 248, 248, 248, 269, 270, 268, 268,
	268, 268, 268, 114, 114, 114, 253, 253, 253, 254,
	254, 254, 255, 255, 255, 271, 271, 46, 46, 47,
	52, 52, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 148, 148, 148, 48, 193,
	193, 267, 267, 267, 266, 264, 264, 265, 265, 14,
	50, 50, 15, 15, 15, 15, 15, 15, 15, 16,
	16, 53, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 82, 180, 180, 178, 178, 181, 181, 179, 179,
	179, 182, 182, 182, 212, 212, 212, 55, 55, 60,
	60, 63, 61, 62, 27, 28, 28, 28, 28, 29,
	194, 194, 58, 58, 59, 59, 59, 59, 74, 74,
	294, 294, 57, 57, 56, 56, 17, 295, 65, 66,
	66, 67, 67, 67, 185, 185, 71, 71, 71, 69,
	69, 69, 70, 70, 76, 76, 80, 80, 80, 80,
	79, 79, 79, 79, 151, 151, 151, 152, 152, 204,
	204, 204, 203, 203, 203, 203, 84, 84, 87, 87,
	88, 88, 88, 88, 91, 134, 134, 108, 108, 109,
	109, 109, 109, 109, 120, 120, 160, 160, 159, 159,
	162, 162, 89, 89, 89, 89, 94, 94, 95, 95,
	96, 96, 192, 192, 210, 210, 210, 100, 100, 100,
	102, 101, 101, 101, 101, 103, 103, 105, 106, 106,
	104, 104, 107, 110, 110, 110, 110, 111, 111, 81,
	81, 81, 81, 81, 81, 81, 177, 177, 113, 113,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	129, 129, 129, 129, 129, 129, 115, 115, 115, 115,
	115, 115, 115, 75, 75, 130, 130, 130, 93, 92,
	92, 78, 78, 77, 77, 131, 131, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 124, 124, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 296, 296, 126, 125, 125, 125, 125,
	125, 125, 72, 72, 72, 72, 72, 211, 211, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 141, 141, 73, 73, 139, 139, 140, 142,
	142, 138, 138, 138, 117, 117, 117, 117, 117, 117,
	117, 117, 119, 119, 119, 143, 143, 132, 132, 83,
	83, 144, 144, 145, 145, 146, 146, 147, 147, 150,
	150, 155, 155, 155, 156, 156, 156, 156, 121, 121,
	157, 157, 157, 116, 116, 116, 116, 116, 116, 158,
	158, 158, 158, 163, 163, 133, 133, 136, 136, 135,
	137, 164, 164, 168, 165, 165, 169, 169, 169, 169,
	172, 172, 173, 173, 173, 170, 170, 170, 167, 167,
	167, 207, 207, 207, 175, 175, 186, 186, 183, 183,
	184, 184, 176, 176, 224, 224, 189, 189, 189, 189,
	189, 189, 189, 189, 191, 191, 190, 190, 190, 187,
	187, 187, 188, 188, 205, 205, 201, 201, 206, 206,
	202, 202, 208, 208, 209, 209, 272, 272, 235, 235,
	282, 282, 236, 236, 283, 283, 285, 285, 280, 280,
	281, 281, 284, 284, 30, 286, 286, 287, 288, 288,
	288, 288, 31, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 291, 292, 196,
	197, 197, 197,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 11, 7,
	9, 5, 5, 15, 11, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 0, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	3, 5, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 4, 3, 2, 4,
	3, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 4, 1, 1, 2, 3, 4,
	3, 3, 3, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 1, 2, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 2, 1, 2,
	1, 2, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 2, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 1, 1, 5,
	1, 3, 2, 5, 4, 3, 3, 3, 5, 3,
	8, 10, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 0, 1, 2, 4, 0,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 4, 4, 4, 4, 4, 3,
	2, 3, 4, 4, 3, 6, 6, 4, 4, 4,
	4, 4, 4, 3, 3, 2, 6, 2, 4, 4,
	4, 5, 7, 6, 5, 4, 2, 4, 3, 2,
	3, 3, 1, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 2, 2, 2, 2, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 7, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 1, 3, 5, 4, 6, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}
var yyChk = [...]int{

	-1000, -289, -1, -2, -7, -8, -9, -10, -11, -13,
	-46, -14, -15, -16, -53, -54, -55, -60, -61, -62,
	-58, -57, -56, -17, -23, -26, -18, -64, -27, -28,
	-29, -30, -31, -3, 6, 7, -68, 9, 10, 30,
	-49, 130, -47, -48, 133, 132, 169, 134, 162, 64,
	225, -63, 228, 229, -294, -194, 167, 168, 136, 212,
	213, 20, 37, 230, 232, 31, 32, -4, -85, -5,
	8, 322, 131, 226, 164, 163, 26, 367, -291, 68,
	-290, 437, -146, 15, -65, -295, -65, -65, -65, -65,
	-65, -251, 105, 68, -188, 143, 86, 313, 139, -195,
	-186, -187, 189, 199, 44, 150, 149, 140, 140, 141,
	143, 313, 139, 177, 176, 140, -104, -208, 71, -199,
	364, 153, 379, 380, 131, 186, 225, 239, 233, 267,
	255, 365, 381, 154, 207, 138, 253, 256, 300, 152,
	200, 382, 289, 295, 210, 80, 228, 309, 383, 155,
	204, 206, 205, 194, 211, 36, 165, 251, 244, 215,
	189, 384, 372, 242, 28, 184, 385, 297, 272, 386,
	369, 296, 247, 243, 136, 387, 156, 150, 179, 388,
	273, 277, 389, 301, 390, 391, 392, 142, 237, 238,
	393, 190, 303, 271, 33, 151, 366, 48, 174, 304,
	38, 275, 37, 288, 394, 270, 265, 281, 395, 396,
	397, 398, 269, 236, 264, 202, 53, 137, 279, 278,
	280, 203, 299, 260, 258, 399, 400, 157, 401, 402,
	245, 18, 403, 404, 307, 168, 405, 42, 406, 407,
	408, 172, 409, 410, 411, 298, 274, 276, 188, 412,
	248, 147, 413, 176, 414, 368, 415, 305, 241, 416,
	158, 232, 173, 167, 308, 417, 213, 418, 419, 420,
	159, 421, 422, 423, 229, 230, 291, 208, 424, 425,
	426, 427, 198, 183, 311, 302, 52, 212, 285, 428,
	235, 149, 214, 429, 226, 43, 180, 7, 201, 292,
	209, 199, 262, 175, 430, 431, 249, 250, 268, 234,
	263, 227, 177, 178, 169, 432, 310, 286, 370, 51,
	257, 254, 181, 261, 433, 143, 434, 182, 231, 306,
	252, 287, 140, 123, 256, 300, 130, 290, 291, 297,
	-245, 298, 176, 179, -212, 140, -178, 289, 182, 71,
	141, 142, 33, 302, 301, 293, -208, 144, 231, -74,
	134, 170, -104, -196, -196, -196, -196, -43, 71, 214,
	-43, 30, 71, 71, 36, 71, 230, 292, 292, 6,
	-67, 5, -176, 143, 145, 227, -86, -90, -210, -208,
	-200, 73, 335, 336, 337, 338, 339, 352, 353, 354,
	340, 341, 355, 356, 357, 342, 343, 358, 359, 361,
	362, 360, 346, 345, 344, 347, 348, 350, 349, 351,
	-2, -156, 17, 16, -71, 54, 55, -66, -79, 114,
	-81, -208, -112, 88, -118, 29, 71, -199, 24, -117,
	-113, -138, -137, -93, 123, 124, 125, 112, 113, 120,
	89, 126, -124, -122, -123, -125, -127, -128, 73, 72,
	81, 74, 75, 76, 77, 82, 83, 84, -201, -135,
	-291, 58, 59, 139, 323, 324, 325, 326, 363, 160,
	327, 91, 47, 312, 321, 320, 319, 317, 318, 314,
	316, 315, 329, 330, 146, 313, 118, 322, 352, 353,
	354, 355, 356, 357, 358, 359, 361, 362, 360, 342,
	335, 336, 337, 338, 339, 340, 341, 343, 344, 345,
	346, 347, 348, 349, 350, 351, -176, -176, 11, -97,
	-98, -104, -107, -208, -165, 227, -172, -169, 301, 302,
	-170, -173, -167, -138, 288, 410, 411, 300, 256, 299,
	-201, -208, -104, -252, -240, -243, -202, 155, -263, -201,
	-198, 152, 71, -199, 135, 161, 87, 371, 23, 25,
	283, 335, 90, 123, 336, 337, 338, 16, 20, 91,
	122, 323, 339, 130, 62, 314, 316, 312, 313, 290,
	29, 10, 26, 163, 193, 22, 116, 132, 94, 95,
	96, 166, 24, 164, 84, 160, 19, 65, 11, 13,
	333, 334, 14, 146, 145, 107, 191, 141, 60, 8,
	126, 27, 104, 56, 340, 341, 375, 45, 376, 58,
	105, 17, 317, 318, 31, 363, 342, 171, 377, 343,
	118, 196, 63, 50, 88, 82, 34, 85, 66, 86,
	15, 192, 61, 331, 195, 378, 106, 133, 322, 59,
	139, 6, 328, 30, 162, 346, 345, 344, 347, 197,
	57, 325, 326, 348, 435, 140, 93, 329, 330, 144,
	83, 5, 44, 32, 9, 64, 67, 319, 320, 321,
	47, 350, 349, 351, 92, 12, 332, 367, 141, -104,
	322, -184, 146, -184, 177, 176, 140, 97, -50, -104,
	-183, 146, -201, -183, -183, -183, -183, -183, -104, 127,
	-104, 71, 30, -182, 105, 12, 313, 139, 71, 176,
	179, 140, 177, 143, -197, -291, -202, -197, -247, 11,
	107, 180, 180, 180, 181, 180, -181, -180, 178, 295,
	296, 292, 294, 12, -82, 105, -197, 71, 230, 144,
	-59, -2, -10, -8, -9, -2, 97, 30, 30, 73,
	51, 30, -38, -37, -39, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 30, -273, 68,
	-235, 288, 71, -286, -287, -108, -104, -65, -6, -4,
	-291, 6, 21, 22, 140, -104, 69, 23, -291, -292,
	70, -157, 19, 31, -121, 74, 77, -147, -150, -81,
	-200, 335, 336, 337, 338, 339, 352, 353, 354, 340,
	341, 355, 356, 357, 342, 343, 358, 359, 361, 362,
	360, 346, 345, 344, 347, 348, 350, 349, 351, -208,
	50, -69, 21, 22, 79, 11, -204, 87, 86, 104,
	-203, 23, 71, -199, -200, 73, 127, -81, -115, 107,
	88, 105, 106, 90, 109, 108, 119, 112, 113, 114,
	115, 116, 117, 118, 110, 111, 122, 97, 98, 99,
	100, 101, 102, 103, -177, -291, -93, -291, 128, 129,
	-118, -118, -118, -118, -118, -118, -118, -118, -291, -2,
	-131, -81, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -141, -81, -291, -296, -126, -291, -296,
	-126, -296, -126, -296, -291, -296, -126, -296, -126, -296,
	-296, -126, -296, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, -291, -106, 27, -104,
	-84, -87, -88, -89, -108, -92, -291, -93, -104, -97,
	-293, 69, 11, 67, -293, 69, 127, 69, -166, -171,
	303, 305, 227, -170, -170, -207, -201, 73, 29, 97,
	30, 127, 70, 69, -243, 155, 152, -214, -218, -220,
	-219, -221, -216, -217, 253, 256, 260, 258, 254, 259,
	123, 257, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 30, 165, 249, 250, 251, 252, 273,
	274, 275, 276, 277, 278, 279, 280, 233, 255, 365,
	234, 235, 236, 237, 238, 239, 241, 242, 243, 244,
	245, 246, 247, 71, -263, 68, -201, 23, 143, 71,
	88, 71, 71, 71, -184, 71, 69, 144, -97, 24,
	66, -99, -104, 71, 71, 71, 71, -209, -208, -198,
	-197, -182, 73, -81, -184, -184, -197, -197, -197, -104,
	-104, -104, -104, -182, -182, -197, -197, -179, 11, 107,
	11, -179, -179, -81, -118, 71, 71, 230, 71, -38,
	-38, 73, -38, 69, 97, -38, 70, -131, -272, 436,
	69, -288, 305, 306, 281, -109, 172, -110, 23, -210,
	64, 145, 65, -71, -2, -65, -104, -197, -90, -92,
	-291, -158, -201, 9, 107, 69, 18, 69, -155, 25,
	26, -155, 127, -119, 51, 74, 77, -185, 49, -104,
	-81, -81, -129, 82, 88, 83, 84, -203, 114, -209,
	-202, -198, -118, -130, -135, -93, 78, 107, 105, 106,
	90, -118, -118, -118, -118, -118, -118, -118, -118, -118,
	-118, -118, -118, -118, -118, -118, -211, 71, 73, 71,
	-117, -117, -201, -69, -292, 69, -292, -2, -77, -80,
	114, -81, -208, -77, -292, -81, -81, -138, 73, -77,
	-138, 73, -77, -77, -77, -69, -139, -140, 92, -138,
	-292, -118, -201, -201, -77, -78, -77, -77, -77, -292,
	-292, -80, -77, -80, -77, -77, -292, -292, -292, -292,
	-69, -69, -77, -77, -77, -69, -77, -77, -69, -77,
	-77, -77, -77, -69, -77, -77, -77, -161, 172, -104,
	30, 69, -100, -102, -101, -103, 56, 60, 62, 57,
	58, 59, 63, -192, 23, -84, -91, 47, -291, -161,
	67, -84, -104, -84, -107, -208, 114, -169, -172, 69,
	304, 306, 307, -166, -228, 122, 66, 85, -81, -202,
	-209, -253, -254, -255, -202, 73, 74, -240, -241, -242,
	-243, -256, 155, -262, 147, 149, 44, -244, 156, 141,
	45, -215, -229, 286, -222, 68, -222, -222, 261, 253,
	256, 254, -222, -222, -222, -222, -222, -227, 256, -227,
	-227, -227, -227, 254, 68, 68, -222, -222, -222, -231,
	68, -231, 248, -232, 68, -232, -232, -232, -232, -263,
	-81, -205, 67, -153, -104, -197, 24, -197, -44, 186,
	161, 68, -104, -104, -104, -104, 69, 71, 71, -248,
	11, 107, -182, -208, -208, -104, -120, 23, -182, -75,
	166, 71, -37, -117, 70, -105, 27, 73, -287, 288,
	306, -291, 34, -210, -110, 141, 141, 141, -69, -292,
	-71, -52, -51, -189, 135, 132, 133, 137, 138, -266,
	283, 131, 256, 80, 29, 15, 323, 172, 370, 71,
	173, -292, 69, 127, 52, -121, -121, -150, -175, 19,
	11, 47, 47, -70, 57, 82, 83, 84, 127, -291,
	-130, -118, -118, -118, -75, 87, -292, -78, -81, -292,
	69, -292, 127, -292, 69, 67, 23, 11, 11, -292,
	11, 11, -292, -292, -292, -77, -142, -140, 94, -81,
	-292, -292, 69, 69, -292, -292, -292, -292, -151, 331,
	-151, -292, -292, -292, -292, -292, -151, -151, -151, -151,
	-77, -77, -292, -292, -292, -77, -292, -292, -77, -292,
	-292, -292, -292, -77, -292, -292, -292, -116, 30, 47,
	-2, -291, -291, -164, -168, -138, -87, -88, -88, -87,
	-88, 56, 56, 56, 61, 56, 61, 56, -101, -210,
	-292, -292, -134, 185, -111, 12, -84, -111, -111, 127,
	-171, -174, 308, 305, 311, 71, 73, 127, 69, -255,
	97, -243, 68, 71, 45, -244, 141, 45, -244, -249,
	71, -249, 45, -233, -225, -226, -234, -237, -223, 82,
	88, 29, 66, 283, 147, 45, 44, 80, -230, 287,
	74, -227, -227, -222, -222, -222, 261, -222, -227, -228,
	30, -228, -228, -228, -228, -227, -238, 73, -238, 74,
	-231, 74, 70, 66, -201, -2, 23, -45, 8, 9,
	10, -274, -275, -276, 71, 107, 191, 192, 144, -197,
	-104, -197, -197, -111, 71, 71, -179, -182, 34, -118,
	-161, 140, -162, -201, -118, -110, -291, -291, -291, -185,
	69, -196, -193, -267, -244, -271, -242, -243, 148, 156,
	147, 172, 155, -193, -267, 155, 152, -244, 156, 148,
	-190, -244, 144, 23, -193, -193, -250, 97, -193, 172,
	23, -201, -201, 53, -104, -76, -154, 114, -202, -78,
	-75, 87, -118, -292, -80, 114, -209, -213, 123, 253,
	165, 251, 244, 271, 258, 285, 249, 286, -211, -213,
	-118, -118, -118, -118, 364, -146, 96, -81, 93, -118,
	-118, -201, -291, -151, -151, -151, -151, -151, -292, -292,
	-152, -151, -152, -152, -292, -152, -152, -292, -152, -152,
	-152, -152, -292, -152, -152, -152, -163, 66, -164, -133,
	-136, -135, -291, -2, -158, -162, -111, 69, 97, -95,
	-94, 66, 67, -96, 66, -94, 56, 56, -160, 68,
	69, -135, -291, -146, -81, -111, 305, 309, 310, -254,
	-255, -258, -257, -201, -262, 156, -249, -249, 68, 82,
	-118, 9, 45, 45, 73, 70, -228, -228, -227, -222,
	-228, 71, 123, -228, 70, 69, 70, 69, 70, 69,
	-114, 385, 88, -104, -153, -153, 66, 70, 69, -214,
	71, 71, 71, -104, -182, -118, -227, -104, -292, 69,
	-110, -192, -159, -201, -159, -159, -70, -51, 68, -239,
	71, -196, -249, -187, 71, 71, -196, 71, 71, -201,
	45, 71, -104, -201, -239, 71, -81, -201, -201, -92,
	127, -111, 11, 69, -79, -292, -118, 127, -292, -222,
	-222, -222, -232, -222, 238, -222, 238, -292, -292, 19,
	19, 19, 19, -291, -73, 328, -81, 69, 69, -146,
	172, -152, -152, -152, -152, -152, 28, -163, 69, -292,
	-292, -292, -292, -146, -168, -81, -81, 68, -81, -159,
	185, -156, 70, 69, -222, -159, -123, -228, -227, 73,
	-227, 74, 74, 385, 68, -2, -104, -277, -278, -279,
	80, 366, 88, 193, 194, 157, 195, 196, 197, -276,
	-214, -214, -214, -280, -181, -109, -201, -210, 69, -292,
	-292, -292, -76, -239, -148, 160, 161, -214, -205, -246,
	-244, 71, -191, 144, 23, 144, -148, -239, 30, 132,
	27, -201, -143, 13, -84, -154, -154, 114, -227, 71,
	-118, -118, -118, -118, -118, -292, 73, -118, -118, -292,
	16, 45, -136, 47, -2, -291, -156, -159, 70, -135,
	-260, -259, 67, 151, 80, -257, -155, 70, -228, -228,
	70, 70, -258, -153, 19, -153, -279, 73, 197, 193,
	197, 197, 197, 197, 198, -281, 38, -283, 39, -110,
	-201, 11, 70, 71, -215, 68, -249, 71, -201, -148,
	29, 29, -291, -144, 14, 16, -111, -79, -292, -292,
	-292, -292, -72, 107, 367, -292, -292, -131, 9, -133,
	-2, 70, -259, 71, -250, 73, 158, 70, 184, -20,
	-2, -8, -9, -10, -11, -13, -46, -14, -15, -21,
	-22, -16, -53, -54, -63, -61, -62, -58, -57, -25,
	-23, -26, -18, -27, -28, -29, -24, 91, 146, 215,
	225, 36, 36, 189, 190, -224, 145, -284, 43, -282,
	-236, 42, 16, -84, -258, -205, -118, -264, -265, 172,
	-145, -81, -200, -132, -83, -81, -200, -143, -154, -292,
	365, 63, 368, -146, -164, -292, 74, -104, -261, -260,
	185, -153, -81, -81, 71, -42, -206, 218, 219, 220,
	-202, -32, -20, -160, 74, -283, 16, -285, 40, 41,
	73, -111, 70, 68, -292, 69, -201, 69, -144, 53,
	366, 369, -292, 68, -149, 187, 188, -33, -34, 92,
	93, 216, 217, 221, -214, 69, 437, 38, 73, 16,
	16, -143, -261, -258, -265, 47, -83, 53, -159, -153,
	71, 71, 96, 94, -34, -81, -32, 19, 19, 19,
	29, -202, 96, -20, 73, 73, -144, 70, 174, 367,
	70, -12, -19, -11, -8, -9, -10, 225, 91, -32,
	93, 437, -43, 74, -2, -41, -40, 74, -43, 223,
	88, 224, 71, -118, -261, 175, 368, -269, -270, 66,
	-153, -32, 437, -32, 96, 94, -35, -36, 95, -20,
	69, 222, -291, 369, -270, 66, -269, 66, 10, 9,
	437, 96, 437, 146, -32, 96, 94, -36, -81, -40,
	-118, 171, -268, 159, 154, 157, 30, -268, 96, 91,
	437, 146, -32, 93, -292, -292, 153, 29, 82, 96,
	437, -32, 146, 96, 437, 146,
}
var yyDef = [...]int{

	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, -2, 527, 527, 527, 527, 527, 527,
	0, -2, 397, 398, 0, 0, 0, 0, -2, 498,
	499, 500, 502, 503, 518, -2, 1339, 1339, 1339, 0,
	184, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 902, 0, 521, 510, 511, 0, 0, 1337,
	1, 3, 844, 0, 536, 529, 0, 902, 902, 0,
	0, 86, 0, 0, 0, 0, 0, 900, 900, 0,
	0, 923, 0, 897, 919, 920, 921, 0, 898, 0,
	898, 898, 898, 898, 898, 0, 450, 620, 932, 933,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 0, 0, 0, 491, 0, 1340, 1340, 465,
	0, 467, 0, 0, 0, 0, 0, 476, 479, 1340,
	348, 349, 350, 495, 496, 485, 497, 0, 0, 0,
	0, 0, 522, 523, 524, 525, 526, 163, 165, 0,
	185, 0, 188, 191, 938, 504, 0, 0, 962, 527,
	0, 531, 0, 0, 903, 501, 44, 45, 0, 604,
	605, 606, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	0, 850, 0, 0, 539, 537, 538, 528, 0, 550,
	559, 0, 629, 0, 634, 636, -2, -2, 0, 677,
	678, 679, 680, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 706, 707, 708, 709, 710, 814, 815,
	816, 817, 818, 819, 820, 821, 638, 639, 811, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 802, 0, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 68, 620, 72, 1288, 0, 874, -2, -2,
	876, 0, 0, 0, -2, -2, -2, -2, 1114, -2,
	811, 0, 87, 0, 225, 226, 0, 1126, 369, 930,
	931, 1116, 926, 927, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 900, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 0,
	451, 1340, 491, 454, 0, 0, 900, 900, 1340, 1340,
	1340, 0, 0, 0, 463, 1341, 1342, 464, 0, 371,
	372, 491, 491, 1340, 1340, 488, 0, 488, 488, 486,
	487, 482, 483, 0, 478, 0, 480, 505, 0, 0,
	512, 514, 515, 516, 517, 513, 0, 0, 0, 167,
	0, 0, 187, 169, 0, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 0, 190, 0,
	936, 939, 509, 954, 955, 0, 623, 536, 41, 51,
	0, 527, 532, 533, 0, 1340, 0, 0, 0, 50,
	1338, 36, 0, 0, 845, 848, 849, 836, 837, 841,
	841, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 0,
	0, 534, 540, 541, 530, 0, 551, 0, 0, 0,
	560, 0, 562, 563, 564, 565, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 635, 0, 649, 0, 0, 0,
	697, 698, 699, 700, 701, 702, 703, 0, 539, 0,
	0, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 803, 0, 756, 765, 0, 757,
	766, 758, 767, 759, 0, 760, 768, 761, 769, 762,
	763, 770, 764, 0, 0, 0, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 539, 0, 0, 0, 539, 0, 0, 539, 0,
	0, 0, 0, 539, 0, 0, 0, 70, 0, 619,
	0, 566, 568, 569, 570, -2, 0, 669, -2, 0,
	0, 0, 62, 63, 0, 0, 0, 0, 73, 75,
	0, 0, 1288, 877, 878, 324, 891, 892, 893, 0,
	889, 0, 386, 0, 227, 0, 0, 235, 312, 243,
	244, 245, 305, 247, 305, 305, 0, 305, 305, 305,
	305, 305, 321, 321, 321, 321, 321, 288, 289, 290,
	291, 292, 0, 0, 265, 305, 305, 305, 269, 295,
	296, 297, 298, 299, 300, 301, 302, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 307, 307, 309, 309,
	309, 309, 309, 0, 368, 0, 924, 84, 0, 1340,
	0, 1340, 0, 0, 0, 119, 0, 0, 442, 899,
	0, 444, 64, 445, 446, 447, 448, 621, 934, 935,
	452, 453, 492, 493, 0, 0, 457, 458, 459, 460,
	461, 462, 373, 468, 469, 470, 475, 491, 0, 0,
	0, 584, 491, 477, 663, 507, 506, 0, 519, 164,
	166, 168, 186, 0, 0, 189, 192, 0, 0, 0,
	0, 957, 958, 960, 0, 577, 1218, 579, 0, 623,
	0, 0, 0, 539, 0, 536, 0, 428, 46, 47,
	0, 0, 859, 851, 0, 0, 0, 0, 839, 842,
	843, 840, 0, 0, 822, 0, 0, 542, 535, 38,
	630, 631, 633, 650, 0, 652, 654, 561, 552, 0,
	812, -2, 640, 641, 665, 666, 667, 0, 0, 0,
	0, 663, 645, 0, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 696, 787, 788, 0,
	694, 695, 704, 671, 668, 0, 869, 0, 0, 673,
	546, 547, 0, 0, 743, 0, 0, 679, 814, 0,
	679, 814, 0, 0, 0, 0, 809, 806, 0, 0,
	774, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 610,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 627,
	0, 627, 67, 627, 69, 0, 622, 875, 0, 0,
	0, 78, 79, 74, 879, 0, 885, 886, 887, 812,
	0, 224, 387, 389, 392, 393, 394, 228, 230, 231,
	232, 0, 1126, 361, 1228, 1268, -2, 355, 1153, -2,
	-2, 234, 314, 313, 246, 0, 321, 321, 305, 305,
	305, 305, 274, 321, 277, 280, 281, 324, 0, 324,
	324, 324, 324, 321, 0, 0, 266, 267, 268, 257,
	0, 258, 307, 260, 0, 261, 262, 263, 264, 367,
	0, 0, 0, 0, 0, 91, 901, 92, 0, 120,
	121, 95, 223, 0, 440, 1340, 0, 1340, 1340, 627,
	0, 0, 471, 489, 490, 488, 491, 0, 474, 481,
	0, 508, 170, 171, 193, 70, 0, 937, 956, 959,
	961, 0, 0, 623, 583, 0, 0, 0, 534, 52,
	539, 399, 400, 1339, -2, 429, 916, 429, 429, 418,
	341, 429, 906, 907, 908, 909, 910, 911, 912, 913,
	0, 0, 0, 0, 0, 846, 847, 838, 0, 894,
	895, 823, 824, 85, 543, 651, 653, 655, 0, 671,
	642, 663, 646, 0, 643, 0, 637, 0, 676, -2,
	0, 741, 0, 742, 0, 0, 0, 0, 0, 780,
	0, 0, 781, 0, 752, 835, 0, 807, 0, 0,
	755, 775, 0, 0, 776, 777, 778, 779, 730, 0,
	731, 0, 0, 0, 0, 0, 737, 738, 739, 740,
	0, 0, 557, 557, 557, 0, 557, 557, 0, 557,
	557, 557, 557, 0, 557, 557, 557, 863, 0, 0,
	854, 0, 0, 627, 871, 0, 567, 598, 600, 0,
	595, 608, 609, 611, 0, 613, 0, 615, 616, 586,
	573, 670, 574, 0, 835, 0, 627, 60, 61, 0,
	76, 77, 0, 0, 83, 325, 326, 0, 0, 390,
	0, 229, 0, 0, 343, 355, 351, 352, 355, 346,
	356, 347, 0, 236, 237, 238, 239, 240, 241, 316,
	0, 0, 0, 320, 0, 328, 330, 0, 242, 315,
	0, 324, 324, 321, 272, 273, 305, 278, 324, 282,
	0, 283, 284, 285, 286, 324, 0, 303, 0, 0,
	259, 0, 383, 0, 925, 84, 84, 0, 122, 123,
	124, 0, 96, 97, 0, 0, 0, 0, 0, 443,
	65, 455, 456, 466, 374, 375, 491, 473, 0, 664,
	321, 0, 0, 590, -2, 582, 0, 0, 0, 542,
	0, 402, 0, 1339, 355, 0, 419, 420, 430, 431,
	432, 433, 0, 0, 1339, 0, 0, 0, 431, 0,
	0, 0, 917, 918, 0, 0, 0, 342, 0, 0,
	0, 861, 860, 852, 37, 627, 0, 553, 813, 0,
	644, 0, 647, 711, 674, 548, 0, 0, 305, 305,
	792, 305, 309, 795, 305, 797, 305, 800, 0, 0,
	0, 0, 0, 0, 0, 804, 754, 810, 0, 0,
	0, 554, 835, 732, 733, 734, 735, 736, 557, 557,
	715, 558, 716, 717, 557, 719, 720, 557, 722, 723,
	724, 725, 557, 727, 728, 729, 53, 0, 863, 853,
	865, 867, 0, 0, 0, 0, 835, 0, 0, 592,
	599, 0, 0, 593, 0, 594, 612, 614, 571, 0,
	0, 575, 0, 844, 628, 59, 80, 81, 82, 388,
	391, 0, 357, 305, 360, 0, 344, 345, 0, 317,
	318, 0, 327, 329, 331, 306, 270, 271, 324, 279,
	275, 322, 323, 287, 321, 0, 321, 0, 310, 0,
	370, 384, 0, 0, 89, 0, 0, 103, 0, 99,
	0, 0, 0, 441, 472, 585, 948, 617, 623, 0,
	580, 0, 0, 588, 0, 0, 85, 401, 0, 425,
	0, 405, 924, 353, 396, 406, 407, 412, 413, 414,
	0, 0, 409, 0, 425, 0, 422, 0, 0, 48,
	0, 825, 0, 85, 85, 712, 648, 0, 744, 789,
	321, 793, 794, 796, 798, 799, 801, 746, 745, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 713, 714, 718, 721, 726, 0, 54, 0, 868,
	-2, 0, 71, 844, 872, 873, 596, 0, 601, 0,
	0, 58, 333, 0, 841, 0, 319, 276, 324, 304,
	324, 0, 0, 385, 0, 84, 0, 84, 104, 105,
	0, 0, 0, 110, 0, 0, 0, 0, 0, 98,
	100, 101, 102, 950, 944, 578, 591, 623, 0, 624,
	625, 626, 0, 0, 404, 426, 0, 235, 0, 355,
	354, 421, 0, 914, 915, 0, 416, 425, 0, 0,
	0, 862, 831, 0, 627, 0, 544, 549, 790, 791,
	0, 0, 0, 0, 782, 753, 805, 0, 0, 555,
	0, 0, 866, 0, 857, 0, 57, 0, 587, 576,
	332, 336, 0, 341, 0, 358, 359, 0, 293, 294,
	308, 311, 0, 90, 0, 0, 106, 107, 108, 109,
	111, 112, 0, 0, 0, 904, 952, -2, 0, 581,
	589, 0, 403, 427, 233, 0, 924, 408, 415, 417,
	0, 424, 0, 42, 0, 0, 825, 85, 747, 749,
	748, 750, 0, 0, 0, 771, 772, 835, 0, 856,
	0, 597, 337, 338, 0, 340, 0, 334, 0, 84,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 0, 0, 0,
	0, 113, 114, 115, 116, 586, 0, 944, 0, 946,
	0, 943, 0, 627, 0, 0, 423, 0, 435, 0,
	832, 833, 834, 826, 827, 829, 830, 831, 545, 751,
	0, 0, 0, 0, 864, -2, 339, 0, 88, 335,
	125, 94, 0, 0, 926, 0, 0, 152, 153, 154,
	928, 0, 194, 35, 0, 951, 0, 949, 0, 0,
	945, 825, 334, 0, 434, 0, 0, 0, 43, 783,
	0, 786, 556, 0, 84, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 150, 0, 0, 905, 953, 0,
	0, 831, 410, 0, 436, 0, 828, 784, 0, 0,
	126, 127, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 929, 117, 195, 947, 941, 40, 334, 0, 0,
	362, 84, 128, 129, 130, 131, 132, 0, 134, 0,
	0, 0, 146, 147, 148, 0, 155, 157, 158, 159,
	0, 161, 162, 151, 411, 0, 0, 363, 364, 0,
	93, 0, 0, 0, 0, 0, 0, 143, 0, 149,
	0, 160, 0, 785, 365, 0, 366, 0, 0, 0,
	0, 0, 138, 139, 0, 0, 0, 144, 0, 156,
	0, 0, 376, 378, 379, 0, 0, 377, 133, 135,
	0, 141, 0, 0, 437, 438, 380, 381, 382, 0,
	0, 0, 140, 0, 145, 142,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 437,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:422
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:427
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:428
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:432
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:465
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:471
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:477
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:490
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:514
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:521
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:530
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:540
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:546
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:550
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:556
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:576
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:588
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:604
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:610
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:620
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:624
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:628
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:642
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:648
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:662
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:667
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:671
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:681
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:688
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:715
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:721
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:725
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:738
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:743
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:762
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:766
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:770
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:774
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:782
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:790
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:794
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			yyVAL.procedureParams = nil
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:813
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:819
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:827
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:831
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:836
		{
			yyVAL.characteristics = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:840
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:850
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:856
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:860
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:864
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:872
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:876
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:898
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:903
		{
			yyVAL.str = ""
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:913
		{
			yyVAL.str = BeforeStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:917
		{
			yyVAL.str = AfterStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.str = InsertStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:927
		{
			yyVAL.str = UpdateStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.str = DeleteStr
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:936
		{
			yyVAL.triggerOrder = nil
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:960
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:966
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:970
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:986
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:992
		{
			conds := []IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 140:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:997
		{
			conds := []IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1002
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 142:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1008
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1026
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1032
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1036
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1040
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1044
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1048
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1052
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1073
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1121
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1131
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1197
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &Resignal{}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1207
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1211
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1223
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.exprs = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.exprs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1290
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1307
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1314
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1319
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1334
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1372
		{
			yyVAL.columnType = ColumnType{}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1403
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1412
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1421
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1711
		{
			yyVAL.sqlVal = nil
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1720
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1724
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1732
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1742
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1750
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1759
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.colKeyOpt = colKey
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1848
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1852
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1857
		{
			yyVAL.indexOptions = nil
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1906
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1910
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.str = yyDollar[1].str
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1992
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 363:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1996
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2000
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2004
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 366:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2008
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2014
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2028
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2057
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.boolean = true
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.boolean = true
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.boolean = false
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = yyDollar[1].str
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2160
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2187
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2194
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2213
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2222
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 411:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2226
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{{Name: string(yyDollar[3].bytes)}}}}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2244
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2248
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2255
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2277
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2286
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2290
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2295
		{
			yyVAL.columnOrder = nil
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2309
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2315
		{
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
		}
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2326
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2342
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2346
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2362
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2370
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2378
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2382
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2390
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2398
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2406
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2414
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2439
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2452
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2465
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2469
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2473
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2477
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2481
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2489
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2497
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2501
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2513
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 472:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2521
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2526
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2536
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2540
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2548
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2572
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2578
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2594
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.str = "full "
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2614
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2628
		{
			yyVAL.showFilter = nil
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2636
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2642
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = SessionStr
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = GlobalStr
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.statement = &Begin{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.statement = &Begin{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.statement = &Commit{}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.statement = &Rollback{}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2700
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2704
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2708
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2712
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2765
		{
			yyVAL.statement = &OtherRead{}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2771
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			setAllowComments(yylex, true)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.bytes2 = nil
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.str = UnionStr
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = UnionAllStr
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.str = UnionDistinctStr
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.byt = 0
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.byt = 1
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2827
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = SQLCacheStr
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.str = ""
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = DistinctStr
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = StraightJoinHint
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2871
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2890
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2894
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2912
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2923
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 556:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2927
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2932
		{
			yyVAL.over = nil
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.over = yyDollar[1].over
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2941
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2945
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2973
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2991
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3034
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3049
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3053
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3072
		{
			yyVAL.expr = nil
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3081
		{
			yyVAL.columns = nil
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3118
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3122
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3126
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3130
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3138
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3148
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3153
		{
			yyVAL.empty = struct{}{}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = JoinStr
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = JoinStr
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = JoinStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = StraightJoinStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = LeftJoinStr
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = LeftJoinStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = RightJoinStr
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = RightJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = NaturalJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3248
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3253
		{
			yyVAL.indexHints = nil
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3257
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3261
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3265
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3342
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3358
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3362
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = IsNullStr
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = IsNotNullStr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = IsTrueStr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = IsNotTrueStr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.str = IsFalseStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3392
		{
			yyVAL.str = IsNotFalseStr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.str = EqualStr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.str = LessThanStr
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.str = GreaterThanStr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.str = LessEqualStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.str = GreaterEqualStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.str = NotEqualStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = nil
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3461
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3467
		{
			yyVAL.selectExprs = nil
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3478
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3484
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3586
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3612
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3616
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3658
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3662
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3698
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3702
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3706
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3727
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3778
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3786
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3790
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3794
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3798
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3802
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3810
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3814
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 753:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3822
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3826
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3830
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3910
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 772:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3914
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3935
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = BooleanModeStr
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = QueryExpansionStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3993
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3997
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4009
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4013
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4023
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.expr = nil
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = string("")
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4071
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4077
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.expr = nil
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4086
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4100
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.expr = &NullVal{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4153
		{
			yyVAL.exprs = nil
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4167
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4182
		{
			yyVAL.expr = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4186
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4201
		{
			yyVAL.orderBy = nil
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4215
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4230
		{
			yyVAL.str = AscScr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.str = AscScr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = DescScr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.limit = nil
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4247
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4251
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4255
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = ForUpdateStr
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = ShareModeStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4304
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4308
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4312
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4331
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4336
		{
			yyVAL.assignExprs = nil
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4340
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4350
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4360
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4392
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4432
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.setScope = SetScope_Global
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			yyVAL.setScope = SetScope_Session
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.setScope = SetScope_Session
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4479
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4483
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.bytes = []byte("charset")
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.expr = &Default{}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.byt = 0
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.byt = 1
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.byt = 0
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4521
		{
			yyVAL.byt = 1
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.byt = 0
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.byt = 1
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.str = IgnoreStr
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.sqlVal = nil
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.empty = struct{}{}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4563
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = UniqueStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = FulltextStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = SpatialStr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.str = yyDollar[1].str
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4583
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4585
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4632
		{
			yyVAL.str = string("")
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.EnclosedBy = nil
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4646
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.sqlVal = nil
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			yyVAL.sqlVal = nil
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4673
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4678
		{
			yyVAL.Fields = nil
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4682
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.Lines = nil
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4691
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4696
		{
			yyVAL.sqlVal = nil
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4700
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4716
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4722
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.lockType = "Read"
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4732
		{
			yyVAL.lockType = "ReadLocal"
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.lockType = "Write"
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4740
		{
			yyVAL.lockType = "LowPriorityWrite"
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			decNesting(yylex)
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5164
		{
			skipToEnd(yylex)
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5169
		{
			skipToEnd(yylex)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			skipToEnd(yylex)
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5177
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
