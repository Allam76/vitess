// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptions               TLSOptions
	accountLimits            AccountLimits
	passwordOptions          PasswordOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTIONAL = 57575
const MAX_QUERIES_PER_HOUR = 57576
const MAX_UPDATES_PER_HOUR = 57577
const MAX_CONNECTIONS_PER_HOUR = 57578
const MAX_USER_CONNECTIONS = 57579
const FAILED_LOGIN_ATTEMPTS = 57580
const PASSWORD_LOCK_TIME = 57581
const UNBOUNDED = 57582
const BEGIN = 57583
const START = 57584
const TRANSACTION = 57585
const COMMIT = 57586
const ROLLBACK = 57587
const SAVEPOINT = 57588
const WORK = 57589
const RELEASE = 57590
const BIT = 57591
const TINYINT = 57592
const SMALLINT = 57593
const MEDIUMINT = 57594
const INT = 57595
const INTEGER = 57596
const BIGINT = 57597
const INTNUM = 57598
const REAL = 57599
const DOUBLE = 57600
const FLOAT_TYPE = 57601
const DECIMAL = 57602
const NUMERIC = 57603
const DEC = 57604
const FIXED = 57605
const PRECISION = 57606
const TIME = 57607
const TIMESTAMP = 57608
const DATETIME = 57609
const YEAR = 57610
const CHAR = 57611
const VARCHAR = 57612
const BOOL = 57613
const CHARACTER = 57614
const VARBINARY = 57615
const NCHAR = 57616
const NVARCHAR = 57617
const NATIONAL = 57618
const VARYING = 57619
const TEXT = 57620
const TINYTEXT = 57621
const MEDIUMTEXT = 57622
const LONGTEXT = 57623
const LONG = 57624
const BLOB = 57625
const TINYBLOB = 57626
const MEDIUMBLOB = 57627
const LONGBLOB = 57628
const JSON = 57629
const ENUM = 57630
const GEOMETRY = 57631
const POINT = 57632
const LINESTRING = 57633
const POLYGON = 57634
const GEOMETRYCOLLECTION = 57635
const MULTIPOINT = 57636
const MULTILINESTRING = 57637
const MULTIPOLYGON = 57638
const LOCAL = 57639
const LOW_PRIORITY = 57640
const NULLX = 57641
const AUTO_INCREMENT = 57642
const APPROXNUM = 57643
const SIGNED = 57644
const UNSIGNED = 57645
const ZEROFILL = 57646
const COLLATION = 57647
const DATABASES = 57648
const SCHEMAS = 57649
const TABLES = 57650
const FULL = 57651
const PROCESSLIST = 57652
const COLUMNS = 57653
const FIELDS = 57654
const ENGINES = 57655
const PLUGINS = 57656
const NAMES = 57657
const CHARSET = 57658
const GLOBAL = 57659
const SESSION = 57660
const ISOLATION = 57661
const LEVEL = 57662
const READ = 57663
const WRITE = 57664
const ONLY = 57665
const REPEATABLE = 57666
const COMMITTED = 57667
const UNCOMMITTED = 57668
const SERIALIZABLE = 57669
const CURRENT_TIMESTAMP = 57670
const DATABASE = 57671
const CURRENT_DATE = 57672
const CURRENT_USER = 57673
const CURRENT_TIME = 57674
const LOCALTIME = 57675
const LOCALTIMESTAMP = 57676
const UTC_DATE = 57677
const UTC_TIME = 57678
const UTC_TIMESTAMP = 57679
const REPLACE = 57680
const CONVERT = 57681
const CAST = 57682
const SUBSTR = 57683
const SUBSTRING = 57684
const TRIM = 57685
const LEADING = 57686
const TRAILING = 57687
const BOTH = 57688
const GROUP_CONCAT = 57689
const SEPARATOR = 57690
const TIMESTAMPADD = 57691
const TIMESTAMPDIFF = 57692
const OVER = 57693
const WINDOW = 57694
const GROUPING = 57695
const GROUPS = 57696
const AVG = 57697
const BIT_AND = 57698
const BIT_OR = 57699
const BIT_XOR = 57700
const COUNT = 57701
const JSON_ARRAYAGG = 57702
const JSON_OBJECTAGG = 57703
const MAX = 57704
const MIN = 57705
const STDDEV_POP = 57706
const STDDEV = 57707
const STD = 57708
const STDDEV_SAMP = 57709
const SUM = 57710
const VAR_POP = 57711
const VARIANCE = 57712
const VAR_SAMP = 57713
const CUME_DIST = 57714
const DENSE_RANK = 57715
const FIRST_VALUE = 57716
const LAG = 57717
const LAST_VALUE = 57718
const LEAD = 57719
const NTH_VALUE = 57720
const NTILE = 57721
const ROW_NUMBER = 57722
const PERCENT_RANK = 57723
const RANK = 57724
const MATCH = 57725
const AGAINST = 57726
const BOOLEAN = 57727
const LANGUAGE = 57728
const WITH = 57729
const QUERY = 57730
const EXPANSION = 57731
const UNUSED = 57732
const ARRAY = 57733
const DESCRIPTION = 57734
const EMPTY = 57735
const EXCEPT = 57736
const JSON_TABLE = 57737
const LATERAL = 57738
const MEMBER = 57739
const RECURSIVE = 57740
const ACTIVE = 57741
const ADMIN = 57742
const BUCKETS = 57743
const CLONE = 57744
const COMPONENT = 57745
const DEFINITION = 57746
const ENFORCED = 57747
const EXCLUDE = 57748
const FOLLOWING = 57749
const GEOMCOLLECTION = 57750
const GET_MASTER_PUBLIC_KEY = 57751
const HISTOGRAM = 57752
const HISTORY = 57753
const INACTIVE = 57754
const INVISIBLE = 57755
const LOCKED = 57756
const MASTER_COMPRESSION_ALGORITHMS = 57757
const MASTER_PUBLIC_KEY_PATH = 57758
const MASTER_TLS_CIPHERSUITES = 57759
const MASTER_ZSTD_COMPRESSION_LEVEL = 57760
const NESTED = 57761
const NETWORK_NAMESPACE = 57762
const NOWAIT = 57763
const NULLS = 57764
const OJ = 57765
const OLD = 57766
const ORDINALITY = 57767
const ORGANIZATION = 57768
const OTHERS = 57769
const PATH = 57770
const PERSIST = 57771
const PERSIST_ONLY = 57772
const PRECEDING = 57773
const PRIVILEGE_CHECKS_USER = 57774
const PROCESS = 57775
const REFERENCE = 57776
const REQUIRE_ROW_FORMAT = 57777
const RESOURCE = 57778
const RESPECT = 57779
const RESTART = 57780
const RETAIN = 57781
const SECONDARY = 57782
const SECONDARY_ENGINE = 57783
const SECONDARY_LOAD = 57784
const SECONDARY_UNLOAD = 57785
const SKIP = 57786
const SRID = 57787
const THREAD_PRIORITY = 57788
const TIES = 57789
const VCPU = 57790
const VISIBLE = 57791
const SYSTEM = 57792
const INFILE = 57793

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTIONAL",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 902,
	-1, 42,
	141, 964,
	142, 990,
	-2, 124,
	-1, 49,
	181, 554,
	182, 554,
	-2, 544,
	-1, 56,
	1, 1440,
	470, 1440,
	-2, 582,
	-1, 472,
	128, 1000,
	-2, 994,
	-1, 473,
	128, 1001,
	-2, 995,
	-1, 577,
	98, 1246,
	128, 1246,
	-2, 948,
	-1, 578,
	98, 1359,
	128, 1359,
	-2, 949,
	-1, 583,
	98, 1269,
	128, 1269,
	-2, 950,
	-1, 584,
	98, 1317,
	128, 1317,
	-2, 951,
	-1, 585,
	98, 1318,
	128, 1318,
	-2, 952,
	-1, 586,
	98, 1197,
	128, 1197,
	-2, 956,
	-1, 588,
	98, 1292,
	128, 1292,
	-2, 958,
	-1, 1022,
	1, 634,
	5, 634,
	12, 634,
	13, 634,
	14, 634,
	15, 634,
	17, 634,
	19, 634,
	30, 634,
	31, 634,
	56, 634,
	57, 634,
	58, 634,
	59, 634,
	60, 634,
	62, 634,
	63, 634,
	66, 634,
	67, 634,
	69, 634,
	70, 634,
	470, 634,
	-2, 664,
	-1, 1026,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1240,
	128, 1003,
	-2, 999,
	-1, 1409,
	68, 393,
	-2, 1158,
	-1, 1412,
	68, 389,
	72, 389,
	-2, 1091,
	-1, 1413,
	68, 390,
	72, 390,
	-2, 1101,
	-1, 1518,
	44, 436,
	148, 438,
	150, 436,
	151, 436,
	-2, 476,
	-1, 1594,
	5, 50,
	-2, 730,
	-1, 1888,
	69, 1137,
	70, 1137,
	128, 1137,
	-2, 589,
	-1, 1911,
	1, 685,
	5, 685,
	12, 685,
	13, 685,
	14, 685,
	15, 685,
	17, 685,
	19, 685,
	30, 685,
	31, 685,
	56, 685,
	57, 685,
	58, 685,
	59, 685,
	60, 685,
	62, 685,
	63, 685,
	66, 685,
	67, 685,
	69, 685,
	70, 685,
	470, 685,
	-2, 664,
	-1, 1992,
	148, 439,
	-2, 437,
	-1, 2055,
	5, 50,
	-2, 922,
	-1, 2214,
	41, 1010,
	-2, 1008,
	-1, 2327,
	5, 50,
	-2, 925,
}

const yyPrivate = 57344

const yyLast = 28976

var yyAct = [...]int{

	535, 80, 2479, 2433, 2454, 2373, 2444, 2344, 2330, 2343,
	2435, 2445, 2262, 7, 2261, 6, 1457, 2260, 5, 2263,
	8, 2317, 2312, 1924, 2230, 2214, 2181, 1455, 1905, 1662,
	478, 1804, 1364, 973, 2067, 2141, 1633, 1414, 1057, 2121,
	2097, 602, 464, 796, 1814, 534, 1881, 1469, 1218, 2331,
	1362, 1925, 1690, 1882, 1813, 1743, 93, 1985, 1385, 457,
	806, 2259, 3, 491, 1396, 1878, 1516, 1634, 1022, 106,
	1410, 398, 401, 1406, 394, 1897, 1358, 1547, 1890, 1395,
	83, 80, 1446, 1211, 1850, 1274, 422, 1497, 1128, 1265,
	1127, 783, 1780, 600, 1402, 1337, 1226, 597, 1197, 1779,
	1341, 1126, 1150, 1170, 1129, 1726, 1019, 1442, 875, 1332,
	579, 1329, 1242, 1348, 1037, 1018, 882, 857, 794, 475,
	460, 836, 582, 878, 991, 596, 1036, 575, 576, 895,
	421, 1028, 395, 396, 397, 571, 568, 835, 2501, 598,
	750, 2497, 456, 2487, 992, 763, 2469, 2467, 2449, 2428,
	2381, 82, 1195, 1959, 85, 2091, 2460, 1430, 480, 2241,
	910, 909, 919, 920, 912, 913, 914, 915, 916, 917,
	918, 911, 69, 35, 921, 2098, 2367, 2443, 2325, 35,
	2206, 35, 1752, 2100, 35, 35, 2416, 72, 38, 39,
	2366, 87, 88, 89, 90, 91, 1871, 1628, 1569, 2047,
	749, 410, 1671, 1919, 762, 1670, 1382, 1383, 1672, 2324,
	1920, 1921, 1512, 886, 1629, 1206, 1207, 118, 114, 115,
	2166, 116, 1360, 869, 1038, 1201, 1039, 470, 1824, 72,
	38, 39, 1381, 810, 811, 81, 35, 809, 72, 38,
	39, 81, 752, 81, 755, 756, 81, 81, 1199, 1200,
	62, 40, 2103, 409, 120, 119, 78, 408, 1709, 1416,
	40, 1511, 854, 2150, 1418, 550, 592, 556, 558, 557,
	554, 555, 553, 552, 551, 1431, 109, 1198, 1422, 1424,
	1436, 1423, 1431, 1443, 2034, 2032, 559, 560, 407, 419,
	388, 2101, 2102, 2104, 2105, 2106, 1182, 1971, 81, 1701,
	2345, 788, 1823, 820, 2297, 1851, 121, 2295, 122, 2114,
	1751, 1749, 412, 2210, 1706, 1705, 1470, 2112, 1974, 99,
	2205, 2458, 2286, 112, 2378, 2452, 2455, 2451, 2439, 2376,
	2377, 2434, 399, 2430, 2204, 2203, 1702, 2202, 2201, 2199,
	2200, 2292, 2293, 2370, 2371, 2437, 1418, 1853, 2332, 2069,
	1654, 1707, 1464, 1694, 1771, 1772, 2257, 803, 804, 1695,
	2442, 42, 74, 46, 45, 48, 795, 795, 805, 787,
	791, 2313, 101, 793, 802, 801, 98, 2287, 816, 2415,
	1463, 795, 111, 110, 807, 391, 808, 810, 811, 754,
	753, 80, 80, 49, 77, 76, 1807, 2255, 1342, 1056,
	47, 402, 1055, 825, 1786, 827, 789, 792, 826, 790,
	389, 113, 2122, 2123, 1056, 864, 84, 1928, 1704, 2493,
	1991, 392, 1056, 872, 117, 107, 1930, 1056, 2502, 2499,
	2488, 1930, 2470, 751, 769, 108, 2299, 418, 817, 818,
	417, 1119, 418, 403, 2134, 1757, 60, 61, 1756, 2288,
	1136, 1134, 824, 828, 822, 1661, 2242, 1660, 1659, 1855,
	2133, 103, 1750, 104, 1859, 747, 1854, 1744, 1852, 1774,
	867, 2294, 930, 1857, 400, 932, 400, 2209, 400, 757,
	2424, 1431, 1973, 2436, 2438, 797, 1856, 1958, 1183, 2289,
	75, 1716, 53, 54, 64, 821, 65, 1445, 2099, 819,
	2483, 1858, 1860, 1745, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 411, 1029, 971, 73, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 2323,
	990, 993, 993, 993, 999, 993, 993, 999, 993, 999,
	1008, 1009, 1010, 1011, 1012, 1013, 873, 1023, 861, 2207,
	1201, 1753, 79, 1421, 2022, 1688, 786, 73, 79, 100,
	79, 109, 2132, 79, 79, 2182, 73, 863, 1703, 400,
	1746, 1747, 360, 1199, 1200, 1688, 2019, 972, 1801, 2184,
	2137, 2011, 1367, 1369, 1604, 1675, 582, 933, 934, 1529,
	1667, 582, 1564, 914, 915, 916, 917, 918, 911, 1481,
	1688, 921, 1691, 1528, 1480, 2481, 1377, 1552, 2482, 1537,
	2480, 1221, 1601, 931, 1049, 79, 1034, 901, 779, 911,
	1386, 1180, 921, 1017, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 1948, 921, 1688, 1171,
	1214, 1488, 799, 894, 1805, 1895, 1533, 1688, 892, 785,
	2183, 1894, 1687, 1050, 1190, 1527, 994, 996, 998, 1000,
	1002, 1004, 1005, 1007, 1368, 894, 1041, 111, 110, 96,
	1249, 1042, 1687, 1115, 1054, 1047, 995, 997, 812, 1001,
	1003, 1032, 1006, 2138, 1027, 1247, 1248, 1246, 1949, 935,
	936, 937, 938, 939, 940, 941, 942, 1687, 829, 2486,
	1800, 758, 933, 934, 1797, 1025, 1525, 1519, 1520, 1608,
	1518, 1873, 1521, 1522, 95, 910, 909, 919, 920, 912,
	913, 914, 915, 916, 917, 918, 911, 1330, 1051, 921,
	933, 934, 1330, 2425, 1617, 1687, 1172, 96, 1489, 800,
	1600, 1796, 1786, 784, 1687, 1024, 1793, 1531, 1534, 1792,
	1795, 1786, 94, 1121, 1936, 1056, 893, 892, 1789, 1787,
	889, 1599, 795, 1598, 2113, 2494, 1788, 1276, 874, 795,
	795, 795, 814, 1498, 894, 1788, 1219, 1220, 1367, 1369,
	2348, 893, 892, 81, 795, 912, 913, 914, 915, 916,
	917, 918, 911, 124, 1245, 921, 2473, 2455, 2472, 894,
	879, 1152, 393, 880, 893, 892, 2328, 910, 909, 919,
	920, 912, 913, 914, 915, 916, 917, 918, 911, 2495,
	2090, 921, 894, 910, 909, 919, 920, 912, 913, 914,
	915, 916, 917, 918, 911, 2089, 570, 921, 893, 892,
	594, 893, 892, 1731, 748, 80, 1149, 1148, 2490, 795,
	1729, 1266, 1210, 1267, 1154, 466, 894, 1710, 760, 894,
	1368, 893, 892, 1673, 1526, 1674, 1193, 2374, 768, 778,
	860, 416, 859, 1166, 1167, 2412, 1169, 833, 1131, 894,
	1153, 2411, 1130, 893, 892, 1138, 1178, 1159, 1160, 1161,
	2427, 1174, 1524, 1175, 874, 2384, 1212, 893, 892, 2382,
	832, 894, 1168, 1130, 2375, 2354, 1203, 1157, 1158, 893,
	892, 1732, 2254, 80, 2211, 894, 1875, 1549, 1550, 1551,
	1209, 2198, 2374, 1240, 2400, 1239, 2399, 894, 893, 892,
	1243, 1530, 2160, 910, 909, 919, 920, 912, 913, 914,
	915, 916, 917, 918, 911, 1223, 894, 921, 1185, 1186,
	2087, 1941, 1188, 1232, 1234, 1235, 975, 1727, 1508, 1233,
	565, 566, 1202, 1187, 1155, 2398, 1472, 1205, 1191, 1224,
	2397, 2296, 1225, 2252, 972, 2224, 1691, 2218, 2130, 2006,
	2002, 1208, 1532, 1993, 1238, 771, 772, 773, 774, 775,
	776, 777, 1975, 1315, 1318, 1969, 1968, 1967, 1765, 1764,
	1502, 1331, 1486, 1485, 1361, 1268, 1236, 1184, 1181, 1023,
	1025, 1146, 1145, 1023, 1144, 1143, 1283, 1308, 1132, 1124,
	1287, 1123, 1177, 919, 920, 912, 913, 914, 915, 916,
	917, 918, 911, 1269, 1270, 921, 1122, 1120, 1281, 1282,
	855, 781, 406, 1244, 404, 1137, 582, 2173, 2417, 1292,
	1293, 1294, 1295, 2078, 2414, 874, 1152, 2360, 874, 1357,
	2078, 2358, 1305, 1307, 2217, 972, 2078, 2356, 2192, 1312,
	2191, 1240, 2216, 1390, 1964, 1893, 1397, 598, 496, 495,
	498, 499, 500, 501, 84, 1372, 1942, 497, 502, 1374,
	1392, 1366, 2078, 2256, 2173, 2248, 2173, 2188, 2173, 874,
	1371, 795, 1029, 795, 2173, 2172, 780, 1370, 2078, 2077,
	84, 1241, 2059, 874, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1115,
	2014, 1403, 1391, 1536, 874, 1417, 2362, 1272, 1306, 2013,
	1663, 1280, 1030, 1379, 1378, 473, 1663, 1384, 1216, 1375,
	1289, 1290, 1393, 1663, 858, 1956, 1955, 1952, 1953, 1400,
	999, 1300, 1025, 868, 1562, 1304, 1030, 1025, 1952, 1951,
	1344, 1025, 1448, 1449, 1450, 1451, 1562, 874, 1345, 874,
	2053, 1327, 1306, 1505, 1306, 874, 1468, 1452, 1453, 1053,
	1052, 80, 1321, 127, 1471, 1444, 127, 2014, 1031, 1215,
	1033, 1333, 127, 1345, 1965, 1879, 1476, 1477, 1893, 1345,
	1893, 1432, 1433, 1434, 1435, 1954, 1907, 1777, 1677, 1459,
	1553, 1461, 1031, 1380, 1029, 127, 1467, 883, 1350, 1353,
	1354, 1355, 1351, 1562, 1352, 1356, 127, 902, 1898, 1899,
	127, 605, 1490, 1240, 127, 1239, 1622, 1496, 1621, 1189,
	1484, 1483, 972, 1217, 1196, 1135, 1133, 1035, 127, 766,
	871, 605, 870, 1478, 81, 1510, 2368, 2357, 1906, 127,
	1501, 2223, 1243, 909, 919, 920, 912, 913, 914, 915,
	916, 917, 918, 911, 1500, 593, 921, 2221, 2092, 1418,
	1504, 1503, 2065, 1514, 1509, 1447, 1935, 1898, 1899, 2464,
	1443, 1535, 1681, 974, 1391, 81, 1465, 1438, 1437, 1116,
	852, 1016, 1456, 1026, 1541, 1499, 989, 2462, 1558, 1539,
	1540, 2446, 1630, 1632, 1963, 1901, 1023, 1023, 1023, 1023,
	1023, 1350, 1353, 1354, 1355, 1351, 1879, 1352, 1356, 1554,
	1733, 1646, 1361, 1140, 1655, 1644, 1647, 81, 1548, 1904,
	1645, 1648, 1023, 1354, 1355, 1635, 1903, 1643, 1560, 1642,
	461, 462, 2394, 1563, 2365, 1811, 1636, 1538, 1565, 1566,
	1227, 2392, 2056, 1571, 1572, 1573, 1574, 1575, 1576, 1658,
	1592, 1579, 1665, 1631, 1666, 1244, 1584, 1585, 1586, 1587,
	582, 1589, 1590, 1591, 1546, 1545, 1513, 2163, 1594, 1595,
	1596, 1597, 2129, 1308, 1693, 2081, 2001, 1603, 887, 888,
	1606, 1607, 2000, 1940, 1939, 1612, 1613, 1685, 2301, 1397,
	1616, 1619, 2304, 1620, 1650, 2353, 1623, 1624, 1664, 1625,
	1626, 2352, 1657, 1638, 1639, 2215, 1641, 885, 80, 2383,
	1678, 1637, 2213, 1692, 1640, 2291, 2290, 405, 1651, 1652,
	1649, 1768, 876, 1720, 1048, 1555, 1556, 1557, 850, 1686,
	1689, 834, 831, 795, 877, 830, 795, 795, 782, 1719,
	1041, 1721, 1722, 1723, 1724, 1668, 2407, 2228, 1680, 1115,
	2227, 1676, 2051, 2139, 1025, 1025, 1025, 1025, 1025, 1507,
	1568, 1570, 1219, 1220, 1460, 1139, 2346, 1763, 2115, 1735,
	1025, 1580, 1581, 1582, 1583, 2116, 127, 1808, 1736, 1495,
	1025, 605, 605, 96, 570, 887, 888, 1142, 1118, 865,
	866, 1544, 2406, 2405, 1728, 2404, 605, 2195, 815, 1543,
	1609, 1610, 1611, 1730, 458, 2386, 2385, 1162, 1163, 1164,
	2350, 2305, 2232, 2148, 1165, 459, 84, 2231, 2142, 1748,
	1831, 1663, 1605, 1156, 127, 1760, 1754, 1711, 1712, 1602,
	1809, 1810, 1173, 127, 1718, 890, 1767, 2465, 1770, 1781,
	1794, 1799, 1778, 2466, 1725, 2245, 1816, 1766, 2466, 2465,
	1176, 1758, 1938, 1213, 1761, 1762, 1240, 1773, 1239, 1775,
	1776, 593, 1791, 1783, 413, 415, 1784, 1130, 1755, 1790,
	86, 1802, 1803, 2273, 52, 1806, 1738, 1739, 1740, 55,
	1884, 80, 898, 1204, 2275, 19, 2274, 18, 2276, 20,
	974, 2277, 21, 1818, 1, 1130, 2272, 15, 1822, 1817,
	2271, 14, 2265, 10, 2111, 1909, 1228, 2284, 30, 1635,
	1913, 1914, 1915, 1892, 1125, 1880, 761, 1826, 2283, 29,
	1636, 1821, 2282, 28, 1212, 1883, 1466, 1829, 2280, 25,
	1229, 1230, 2279, 24, 1147, 1862, 856, 1838, 1839, 1861,
	1912, 2351, 1885, 2300, 1918, 1872, 2281, 26, 1845, 2302,
	1908, 2212, 1849, 2270, 13, 2267, 12, 2266, 11, 2264,
	9, 2117, 2096, 2095, 1887, 1742, 1902, 1741, 851, 1816,
	1194, 1397, 1782, 1397, 1785, 1479, 1769, 2040, 1523, 2311,
	1404, 127, 127, 127, 1910, 1394, 595, 92, 1487, 1933,
	1886, 798, 1934, 1916, 1923, 2127, 368, 605, 1401, 1699,
	2303, 853, 1961, 1962, 1931, 1698, 1929, 1922, 1932, 1708,
	1415, 1697, 1696, 974, 2298, 1700, 1061, 1059, 1313, 1314,
	1943, 1944, 1060, 1058, 1063, 1062, 1452, 1947, 1453, 372,
	1043, 1343, 2338, 1966, 1950, 891, 102, 1820, 56, 2131,
	1798, 1517, 97, 476, 105, 1373, 374, 929, 1542, 1972,
	1832, 1669, 580, 1835, 1836, 1837, 581, 573, 1840, 1210,
	2369, 881, 2314, 1615, 988, 1328, 1338, 910, 909, 919,
	920, 912, 913, 914, 915, 916, 917, 918, 911, 1863,
	1864, 921, 1865, 1866, 1989, 1389, 1867, 479, 1970, 1653,
	2316, 1231, 494, 2012, 1983, 493, 492, 489, 1977, 1876,
	1877, 490, 1990, 1494, 1982, 1988, 1222, 2015, 1978, 1627,
	2005, 903, 1957, 477, 468, 1021, 1994, 1014, 1827, 1828,
	1506, 1945, 2045, 424, 1349, 1833, 1834, 2010, 1347, 1346,
	1141, 569, 1900, 1115, 1911, 1458, 1896, 1841, 1842, 1843,
	1844, 1359, 1846, 1847, 1848, 1130, 1020, 1473, 420, 1474,
	1475, 70, 813, 390, 1454, 2046, 1482, 767, 2240, 37,
	414, 463, 2021, 605, 27, 17, 823, 22, 16, 1515,
	759, 766, 766, 41, 1635, 44, 43, 2016, 1737, 1937,
	1462, 1980, 2337, 2432, 127, 1636, 837, 127, 2030, 1493,
	2453, 2372, 766, 766, 2071, 127, 2052, 605, 2073, 2074,
	2075, 33, 32, 31, 605, 605, 605, 127, 127, 127,
	2026, 2061, 858, 80, 127, 2278, 1397, 1025, 2072, 605,
	2083, 2035, 2036, 2060, 2285, 533, 2076, 2041, 2269, 2268,
	2419, 766, 23, 2039, 2082, 2418, 4, 1678, 862, 71,
	34, 591, 2, 0, 2054, 2055, 1979, 2057, 0, 0,
	2058, 0, 2084, 0, 2085, 883, 2108, 2109, 2110, 0,
	0, 0, 0, 0, 1023, 0, 0, 2126, 0, 0,
	2070, 2107, 0, 0, 2093, 2124, 2125, 0, 0, 0,
	0, 0, 0, 127, 605, 0, 127, 2119, 605, 0,
	0, 2118, 2120, 0, 0, 2135, 0, 2017, 0, 0,
	0, 0, 0, 0, 1884, 2140, 127, 1884, 2168, 2144,
	2145, 2128, 898, 1816, 2136, 0, 1929, 589, 0, 0,
	1909, 601, 0, 910, 909, 919, 920, 912, 913, 914,
	915, 916, 917, 918, 911, 0, 1452, 921, 0, 0,
	2143, 770, 0, 0, 1593, 0, 2042, 2043, 2044, 1883,
	2171, 0, 1883, 2165, 0, 0, 0, 2164, 605, 2086,
	2194, 2088, 2196, 0, 0, 2174, 2193, 0, 1618, 2167,
	2170, 2175, 0, 0, 2018, 0, 0, 2180, 2186, 2187,
	2185, 2147, 2020, 0, 0, 0, 0, 2197, 0, 0,
	2229, 2023, 2024, 0, 0, 2189, 0, 2190, 2025, 0,
	0, 0, 2155, 2156, 2157, 0, 2159, 1366, 0, 2176,
	0, 2208, 2219, 2220, 0, 0, 0, 1884, 0, 80,
	0, 0, 1025, 2233, 605, 605, 2226, 0, 0, 0,
	2222, 127, 2235, 2177, 2178, 2179, 2149, 2234, 0, 127,
	127, 0, 0, 0, 127, 127, 0, 80, 127, 127,
	127, 0, 0, 0, 2258, 0, 0, 2251, 0, 2250,
	0, 0, 1883, 2246, 0, 2253, 0, 1023, 605, 605,
	1419, 1420, 0, 1425, 1426, 1427, 1428, 1429, 0, 0,
	2247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1439, 1440, 1441, 0, 2307, 0, 2309, 0, 1759,
	2308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	899, 2236, 2237, 2238, 2239, 2151, 2152, 2153, 2154, 2319,
	0, 2243, 2244, 2158, 0, 2333, 1635, 2161, 2162, 2320,
	0, 0, 2326, 0, 0, 127, 605, 1636, 605, 0,
	80, 0, 0, 2306, 0, 0, 0, 127, 0, 127,
	127, 766, 766, 766, 0, 0, 127, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 2321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2349, 2347, 0, 0,
	0, 0, 2342, 0, 0, 0, 2355, 127, 127, 127,
	0, 601, 601, 0, 2363, 0, 0, 0, 0, 0,
	2322, 0, 0, 0, 0, 0, 601, 2327, 2251, 0,
	0, 0, 127, 0, 127, 2388, 0, 2390, 0, 0,
	0, 0, 0, 0, 0, 1025, 80, 2379, 2401, 0,
	0, 2389, 80, 2391, 2393, 2403, 2396, 0, 0, 2410,
	0, 2387, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 2395, 0, 1874, 80, 0, 0, 2423,
	2426, 2422, 2413, 0, 2421, 2429, 2420, 0, 0, 0,
	0, 2359, 0, 2441, 2408, 80, 0, 0, 80, 80,
	0, 2364, 0, 80, 2448, 2447, 2410, 2450, 0, 0,
	2456, 0, 0, 2459, 0, 0, 0, 0, 0, 0,
	80, 1917, 2463, 80, 0, 2310, 2461, 2410, 2474, 0,
	0, 2476, 2471, 0, 0, 0, 0, 2431, 80, 2484,
	80, 0, 0, 0, 80, 2410, 0, 2410, 0, 0,
	0, 0, 0, 2489, 0, 0, 0, 0, 80, 0,
	0, 80, 0, 0, 0, 2410, 0, 0, 80, 1960,
	2498, 0, 80, 0, 0, 2410, 0, 0, 0, 2410,
	0, 127, 127, 127, 127, 127, 0, 0, 0, 0,
	2038, 0, 1976, 127, 0, 0, 0, 127, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 127, 0, 0,
	1981, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	767, 589, 0, 0, 0, 0, 589, 1044, 0, 0,
	0, 605, 0, 0, 2003, 0, 0, 0, 0, 0,
	767, 767, 0, 0, 0, 0, 0, 1713, 1714, 1715,
	1717, 0, 0, 0, 0, 0, 0, 2491, 2492, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 466, 383, 0, 0, 0, 0, 0, 767,
	910, 909, 919, 920, 912, 913, 914, 915, 916, 917,
	918, 911, 605, 0, 921, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 0, 2440, 0, 766, 766, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 605, 127,
	766, 605, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 424, 766, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2062, 2063, 0, 0, 2064, 2477, 0, 2066,
	899, 0, 0, 0, 361, 0, 0, 974, 0, 0,
	0, 364, 605, 605, 0, 0, 0, 0, 127, 0,
	0, 373, 381, 382, 0, 2037, 0, 0, 605, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 2094,
	0, 0, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	371, 0, 0, 378, 379, 0, 0, 601, 0, 0,
	0, 1273, 1278, 1279, 601, 601, 601, 0, 1284, 1285,
	1286, 0, 1288, 0, 0, 1291, 0, 0, 0, 601,
	1296, 1297, 1298, 1299, 0, 1301, 1302, 1303, 0, 0,
	0, 0, 0, 1309, 1310, 1311, 605, 0, 605, 1317,
	1320, 0, 1325, 1326, 376, 910, 909, 919, 920, 912,
	913, 914, 915, 916, 917, 918, 911, 0, 424, 921,
	0, 605, 0, 0, 0, 0, 0, 1336, 0, 1339,
	1340, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	0, 605, 0, 605, 601, 605, 0, 605, 601, 1114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1946, 0, 0, 0, 0, 601, 910, 909,
	919, 920, 912, 913, 914, 915, 916, 917, 918, 911,
	0, 0, 921, 375, 365, 366, 0, 386, 0, 127,
	0, 367, 369, 0, 363, 385, 384, 0, 2049, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 1271, 0,
	0, 0, 127, 766, 0, 0, 0, 0, 0, 767,
	767, 767, 466, 0, 0, 0, 974, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 377, 910, 909,
	919, 920, 912, 913, 914, 915, 916, 917, 918, 911,
	605, 1870, 921, 0, 127, 605, 589, 0, 0, 0,
	0, 0, 605, 605, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 1335, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 910, 909, 919, 920, 912,
	913, 914, 915, 916, 917, 918, 911, 2027, 2028, 921,
	2029, 589, 0, 2031, 0, 2033, 0, 0, 0, 2315,
	2318, 2329, 905, 0, 908, 601, 0, 0, 601, 601,
	0, 922, 923, 924, 925, 926, 927, 928, 0, 906,
	907, 904, 910, 909, 919, 920, 912, 913, 914, 915,
	916, 917, 918, 911, 0, 127, 921, 0, 0, 910,
	909, 919, 920, 912, 913, 914, 915, 916, 917, 918,
	911, 0, 605, 921, 2334, 2335, 0, 0, 0, 605,
	605, 605, 2079, 2080, 0, 0, 0, 0, 605, 1561,
	0, 0, 0, 0, 0, 0, 601, 1567, 601, 0,
	0, 605, 1869, 0, 0, 0, 1577, 1578, 0, 0,
	1559, 0, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 910, 909, 919, 920, 912, 913, 914, 915, 916,
	917, 918, 911, 0, 1614, 921, 0, 0, 0, 0,
	2318, 424, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 2402, 0, 910, 909, 919, 920, 912, 913,
	914, 915, 916, 917, 918, 911, 0, 605, 921, 127,
	0, 0, 0, 1868, 0, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 1684,
	910, 909, 919, 920, 912, 913, 914, 915, 916, 917,
	918, 911, 0, 0, 921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 0, 0, 0, 0,
	0, 605, 0, 0, 0, 0, 127, 0, 127, 0,
	0, 0, 0, 2475, 605, 0, 0, 0, 0, 35,
	36, 72, 38, 39, 0, 0, 0, 0, 605, 0,
	0, 767, 0, 62, 0, 767, 767, 0, 0, 78,
	0, 884, 0, 40, 66, 67, 0, 0, 767, 0,
	63, 910, 909, 919, 920, 912, 913, 914, 915, 916,
	917, 918, 911, 767, 0, 921, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 125,
	589, 0, 387, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 589, 0, 0, 0, 467,
	0, 0, 572, 590, 0, 0, 125, 0, 0, 0,
	125, 601, 0, 0, 42, 74, 46, 45, 48, 0,
	59, 0, 127, 0, 125, 0, 0, 605, 0, 605,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 57, 58, 47, 0, 0, 0, 0, 452, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 1992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1083, 605, 0, 0, 0, 601, 60,
	61, 601, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 75, 0, 53, 54, 64, 0, 65,
	0, 0, 601, 601, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 605, 0, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 605, 0, 0, 0, 0, 0,
	601, 0, 0, 767, 0, 1830, 605, 1070, 446, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1684, 0, 0, 1996, 1998, 0, 1084,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 73,
	0, 0, 0, 0, 589, 0, 601, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1891, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 601, 0, 601, 0, 601, 0, 1926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 0, 0, 0, 0,
	125, 0, 0, 424, 0, 0, 0, 0, 0, 125,
	1097, 1100, 1101, 1102, 1103, 1104, 1105, 0, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 0, 1085, 1086, 1087, 1088,
	1064, 1068, 1098, 1065, 1071, 1067, 1069, 1066, 0, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 0, 0,
	426, 427, 428, 429, 430, 434, 435, 439, 440, 449,
	448, 447, 450, 451, 454, 453, 455, 431, 432, 433,
	436, 437, 438, 441, 442, 445, 443, 444, 0, 1070,
	1999, 0, 0, 0, 0, 2004, 0, 0, 1987, 0,
	0, 0, 2008, 2009, 0, 0, 0, 0, 0, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	1986, 1084, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 125, 125,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 424, 0, 0, 589,
	0, 0, 1927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2068, 0, 0, 0, 1927, 0, 0, 2068,
	2068, 2068, 0, 0, 0, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 1097, 1100, 1101, 1102, 1103, 1104, 1105, 446,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 0, 1085, 1086,
	1087, 1088, 1064, 1068, 1098, 1065, 1071, 1067, 1069, 1066,
	0, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 1927, 35, 0,
	72, 38, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 0, 2169, 0, 0, 78, 0,
	125, 2068, 40, 125, 0, 0, 0, 0, 1099, 0,
	0, 1151, 0, 0, 1926, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 125, 125, 0, 0, 1926, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2286, 0, 0, 0, 0, 2500,
	2225, 426, 427, 428, 429, 430, 434, 435, 439, 440,
	449, 448, 447, 450, 451, 454, 453, 455, 431, 432,
	433, 436, 437, 438, 441, 442, 445, 443, 444, 125,
	0, 0, 423, 42, 74, 46, 45, 48, 0, 2249,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 2287,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1683, 1151, 0, 49, 77, 76, 0, 452,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1926, 0, 1926,
	1682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 1277, 1277, 0,
	0, 589, 1277, 1277, 1277, 1277, 1277, 1277, 60, 61,
	1277, 2288, 0, 0, 0, 1277, 1277, 1277, 1277, 0,
	1277, 1277, 1277, 0, 0, 0, 0, 0, 1277, 1277,
	1277, 0, 0, 0, 1277, 1277, 0, 1277, 1277, 0,
	0, 0, 590, 0, 601, 0, 0, 0, 0, 0,
	0, 2289, 75, 0, 53, 54, 64, 0, 65, 0,
	0, 1056, 1277, 1277, 1277, 1277, 0, 125, 0, 2361,
	0, 0, 0, 0, 0, 125, 423, 0, 0, 0,
	125, 125, 0, 0, 125, 1376, 1151, 590, 0, 446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1151, 0, 0, 0, 35, 0, 72, 38, 39,
	0, 0, 0, 1926, 0, 0, 0, 0, 0, 62,
	0, 0, 0, 0, 2068, 78, 0, 0, 0, 40,
	0, 0, 0, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 125, 125, 0, 0, 0,
	0, 2286, 125, 0, 0, 0, 2496, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1491, 1492, 125, 0, 0, 0, 0,
	42, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2287, 0, 125, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 1151, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 428, 429, 430, 434, 435, 439, 440,
	449, 448, 447, 450, 451, 454, 453, 455, 431, 432,
	433, 436, 437, 438, 441, 442, 445, 443, 444, 0,
	0, 0, 0, 0, 0, 60, 61, 0, 2288, 35,
	0, 72, 38, 39, 1277, 0, 0, 0, 0, 0,
	0, 0, 1277, 62, 0, 0, 0, 0, 0, 78,
	0, 1277, 1277, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 1277, 0, 2289, 75,
	0, 53, 54, 64, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 125, 125, 125,
	125, 125, 0, 0, 0, 2286, 0, 0, 0, 423,
	2485, 0, 0, 125, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 74, 46, 45, 48, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	2287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 35, 0, 72, 38, 39, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 62, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 40, 35, 0, 72, 38,
	39, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	62, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	61, 0, 2288, 81, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2286, 81, 2457,
	0, 0, 2468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2289, 75, 0, 53, 54, 64, 0, 65,
	0, 0, 2286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 42, 74, 46, 45,
	48, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 2287, 0, 1277, 0, 1151, 0, 0, 0,
	0, 42, 74, 46, 45, 48, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 452, 2287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 35, 0,
	72, 38, 39, 49, 77, 76, 0, 1113, 0, 0,
	47, 0, 62, 0, 0, 0, 0, 0, 78, 73,
	0, 0, 40, 35, 0, 72, 38, 39, 0, 0,
	590, 60, 61, 0, 2288, 0, 0, 62, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 60, 61, 0, 2288,
	81, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 2289, 75, 0, 53, 54, 64,
	0, 65, 0, 0, 2286, 81, 0, 0, 1056, 2409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2289,
	75, 452, 53, 54, 64, 0, 65, 0, 0, 2286,
	0, 0, 0, 0, 0, 0, 446, 0, 0, 0,
	0, 0, 1986, 42, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 2287,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 74,
	46, 45, 48, 0, 452, 49, 77, 76, 125, 0,
	0, 0, 47, 0, 2287, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 1997, 125, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 60, 61,
	0, 2288, 0, 0, 0, 0, 467, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 60, 61, 0, 2288, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 2289, 75, 0, 53, 54, 64, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2289, 75, 0, 53,
	54, 64, 0, 65, 446, 0, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 427,
	428, 429, 430, 434, 435, 439, 440, 449, 448, 447,
	450, 451, 454, 453, 455, 431, 432, 433, 436, 437,
	438, 441, 442, 445, 443, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 79, 426, 427, 428, 429, 430, 434, 435,
	439, 440, 449, 448, 447, 450, 451, 454, 453, 455,
	431, 432, 433, 436, 437, 438, 441, 442, 445, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 0, 423, 0, 426, 427, 428, 429,
	430, 434, 435, 439, 440, 449, 448, 447, 450, 451,
	454, 453, 455, 431, 432, 433, 436, 437, 438, 441,
	442, 445, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 0, 728, 708,
	323, 664, 731, 634, 651, 743, 653, 656, 696, 619,
	677, 255, 649, 620, 0, 638, 610, 645, 611, 635,
	666, 177, 633, 710, 680, 730, 212, 692, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 729, 672, 0,
	737, 215, 0, 689, 738, 312, 238, 0, 0, 668,
	717, 675, 705, 663, 698, 627, 688, 732, 650, 694,
	733, 0, 0, 0, 0, 2336, 0, 0, 125, 0,
	0, 0, 0, 0, 157, 0, 691, 727, 647, 693,
	695, 608, 690, 0, 614, 621, 742, 723, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 590, 667, 676,
	702, 660, 0, 0, 0, 0, 0, 125, 0, 0,
	639, 0, 686, 0, 0, 0, 622, 615, 0, 0,
	665, 0, 0, 0, 626, 133, 640, 703, 0, 606,
	189, 239, 146, 707, 722, 662, 203, 352, 726, 659,
	658, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 648, 607, 711, 636, 646, 168,
	644, 289, 259, 341, 0, 683, 265, 288, 216, 330,
	279, 339, 340, 193, 746, 349, 354, 0, 673, 624,
	309, 178, 0, 136, 0, 274, 173, 208, 661, 697,
	637, 165, 700, 687, 716, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 2339, 2340, 2341, 0, 0,
	0, 0, 346, 657, 299, 298, 652, 199, 706, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 612, 0, 314, 344, 359, 154, 632, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 630,
	631, 628, 0, 629, 678, 679, 734, 735, 736, 704,
	623, 0, 718, 719, 0, 0, 0, 0, 0, 709,
	724, 725, 699, 744, 654, 655, 613, 616, 617, 618,
	625, 669, 670, 682, 685, 714, 713, 712, 715, 720,
	740, 739, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 128, 142, 214, 745, 281,
	183, 345, 609, 175, 0, 0, 671, 674, 684, 701,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 721, 728, 708, 323, 664, 731, 634, 651, 743,
	653, 656, 696, 619, 677, 255, 649, 620, 0, 638,
	610, 645, 611, 635, 666, 177, 633, 710, 680, 730,
	212, 692, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 729, 672, 0, 737, 215, 0, 689, 738, 312,
	238, 0, 0, 668, 717, 675, 705, 663, 698, 627,
	688, 732, 650, 694, 733, 0, 0, 0, 0, 604,
	0, 1398, 1399, 0, 0, 0, 0, 0, 157, 0,
	691, 727, 647, 693, 695, 608, 690, 0, 614, 621,
	742, 723, 641, 642, 643, 1679, 0, 0, 0, 0,
	0, 0, 667, 676, 702, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 686, 0, 0, 0,
	622, 615, 0, 0, 665, 0, 0, 0, 626, 133,
	640, 703, 0, 606, 189, 239, 146, 707, 722, 662,
	203, 352, 726, 659, 658, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 648, 607,
	711, 636, 646, 168, 644, 289, 259, 341, 0, 683,
	265, 288, 216, 330, 279, 339, 340, 193, 746, 349,
	354, 0, 673, 624, 309, 178, 0, 136, 0, 274,
	173, 208, 661, 697, 637, 165, 700, 687, 716, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 657, 299, 298,
	652, 199, 706, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 338, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 612, 0, 314, 344, 359,
	154, 632, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 630, 631, 628, 0, 629, 678, 679,
	734, 735, 736, 704, 623, 0, 718, 719, 0, 0,
	0, 0, 0, 709, 724, 725, 699, 744, 654, 655,
	613, 616, 617, 618, 625, 669, 670, 682, 685, 714,
	713, 712, 715, 720, 740, 739, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 128,
	142, 214, 745, 281, 183, 345, 609, 175, 0, 0,
	671, 674, 684, 701, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 721, 728, 708, 323, 664,
	731, 634, 651, 743, 653, 656, 696, 619, 677, 255,
	649, 620, 0, 638, 610, 645, 611, 635, 666, 177,
	633, 710, 680, 730, 212, 692, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 729, 672, 0, 737, 215,
	0, 689, 738, 312, 238, 0, 0, 668, 717, 675,
	705, 663, 698, 627, 688, 732, 650, 694, 733, 0,
	0, 0, 0, 604, 0, 1398, 1399, 0, 0, 0,
	0, 0, 157, 0, 691, 727, 647, 693, 695, 608,
	690, 0, 614, 621, 742, 723, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 667, 676, 702, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	686, 0, 0, 0, 622, 615, 0, 0, 665, 0,
	0, 0, 626, 133, 640, 703, 0, 606, 189, 239,
	146, 707, 722, 662, 203, 352, 726, 659, 658, 277,
	0, 317, 192, 213, 150, 130, 144, 161, 191, 250,
	286, 296, 648, 607, 711, 636, 646, 168, 644, 289,
	259, 341, 0, 683, 265, 288, 216, 330, 279, 339,
	340, 193, 746, 349, 354, 0, 673, 624, 309, 178,
	0, 136, 0, 274, 173, 208, 661, 697, 637, 165,
	700, 687, 716, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 657, 299, 298, 652, 199, 706, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 612,
	0, 314, 344, 359, 154, 632, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 630, 631, 628,
	0, 629, 678, 679, 734, 735, 736, 704, 623, 0,
	718, 719, 0, 0, 0, 0, 0, 709, 724, 725,
	699, 744, 654, 655, 613, 616, 617, 618, 625, 669,
	670, 682, 685, 714, 713, 712, 715, 720, 740, 739,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 128, 142, 214, 745, 281, 183, 345,
	609, 175, 0, 0, 671, 674, 684, 701, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 721,
	728, 1888, 323, 664, 731, 634, 651, 743, 653, 656,
	696, 619, 677, 255, 649, 620, 0, 638, 610, 645,
	611, 635, 666, 177, 633, 710, 680, 730, 212, 692,
	0, 167, 220, 218, 0, 0, 0, 261, 322, 729,
	672, 0, 737, 215, 0, 689, 738, 312, 238, 0,
	0, 668, 717, 675, 705, 663, 698, 627, 688, 732,
	650, 694, 733, 81, 0, 874, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 691, 727,
	647, 693, 695, 608, 690, 0, 614, 621, 742, 723,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	667, 676, 702, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 686, 0, 0, 0, 622, 615,
	0, 0, 665, 0, 0, 0, 626, 133, 640, 703,
	0, 606, 189, 239, 146, 707, 722, 662, 203, 352,
	726, 659, 658, 277, 0, 317, 192, 213, 150, 130,
	144, 161, 191, 250, 286, 296, 648, 607, 711, 636,
	646, 168, 644, 289, 259, 341, 0, 683, 265, 288,
	216, 330, 279, 339, 340, 193, 746, 349, 354, 0,
	673, 624, 309, 178, 0, 136, 0, 274, 173, 208,
	661, 697, 637, 165, 700, 687, 716, 308, 328, 152,
	324, 237, 243, 162, 164, 163, 145, 303, 327, 156,
	166, 313, 292, 318, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 657, 299, 298, 652, 199,
	706, 251, 134, 282, 266, 204, 135, 320, 357, 151,
	210, 325, 129, 184, 249, 170, 260, 231, 232, 230,
	233, 185, 267, 342, 137, 321, 338, 158, 300, 301,
	355, 287, 139, 336, 316, 235, 205, 206, 138, 0,
	284, 176, 188, 171, 254, 0, 187, 276, 333, 334,
	169, 358, 147, 348, 141, 148, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 140, 335, 234, 223,
	211, 181, 195, 272, 219, 273, 196, 241, 240, 242,
	221, 225, 0, 612, 0, 314, 344, 359, 154, 632,
	302, 326, 0, 0, 155, 186, 180, 271, 244, 149,
	198, 311, 209, 217, 283, 356, 258, 290, 159, 343,
	310, 630, 631, 628, 0, 629, 678, 679, 734, 735,
	736, 704, 623, 0, 718, 719, 0, 0, 0, 0,
	0, 709, 724, 725, 699, 744, 654, 655, 613, 616,
	617, 618, 625, 669, 670, 682, 685, 714, 713, 712,
	715, 720, 740, 739, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 128, 142, 214,
	1889, 281, 183, 345, 609, 175, 0, 0, 671, 674,
	684, 701, 131, 132, 143, 153, 160, 174, 179, 182,
	190, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 252, 253, 256, 257, 262, 263,
	264, 268, 269, 270, 275, 278, 280, 285, 291, 293,
	294, 295, 297, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 721, 728, 708, 323, 664, 731, 634,
	651, 743, 653, 656, 696, 619, 677, 255, 649, 620,
	0, 638, 610, 645, 611, 635, 666, 177, 633, 710,
	680, 730, 212, 692, 0, 167, 220, 218, 0, 0,
	0, 261, 322, 729, 672, 0, 737, 215, 0, 689,
	738, 312, 238, 0, 0, 668, 717, 675, 705, 663,
	698, 627, 688, 732, 650, 694, 733, 0, 0, 0,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 691, 727, 647, 693, 695, 608, 690, 0,
	614, 621, 742, 723, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 667, 676, 702, 660, 0, 0,
	0, 0, 0, 0, 2146, 0, 639, 0, 686, 0,
	0, 0, 622, 615, 0, 0, 665, 0, 0, 0,
	626, 133, 640, 703, 0, 606, 189, 239, 146, 707,
	722, 662, 203, 352, 726, 659, 658, 277, 0, 317,
	192, 213, 150, 130, 144, 161, 191, 250, 286, 296,
	648, 607, 711, 636, 646, 168, 644, 289, 259, 341,
	0, 683, 265, 288, 216, 330, 279, 339, 340, 193,
	746, 349, 354, 0, 673, 624, 309, 178, 0, 136,
	0, 274, 173, 208, 661, 697, 637, 165, 700, 687,
	716, 308, 328, 152, 324, 237, 243, 162, 164, 163,
	145, 303, 327, 156, 166, 313, 292, 318, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 657,
	299, 298, 652, 199, 706, 251, 134, 282, 266, 204,
	135, 320, 357, 151, 210, 325, 129, 184, 249, 170,
	260, 231, 232, 230, 233, 185, 267, 342, 137, 321,
	338, 158, 300, 301, 355, 287, 139, 336, 316, 235,
	205, 206, 138, 0, 284, 176, 188, 171, 254, 0,
	187, 276, 333, 334, 169, 358, 147, 348, 141, 148,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	140, 335, 234, 223, 211, 181, 195, 272, 219, 273,
	196, 241, 240, 242, 221, 225, 0, 612, 0, 314,
	344, 359, 154, 632, 302, 326, 0, 0, 155, 186,
	180, 271, 244, 149, 198, 311, 209, 217, 283, 356,
	258, 290, 159, 343, 310, 630, 631, 628, 0, 629,
	678, 679, 734, 735, 736, 704, 623, 0, 718, 719,
	0, 0, 0, 0, 0, 709, 724, 725, 699, 744,
	654, 655, 613, 616, 617, 618, 625, 669, 670, 682,
	685, 714, 713, 712, 715, 720, 740, 739, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 128, 142, 214, 745, 281, 183, 345, 609, 175,
	0, 0, 671, 674, 684, 701, 131, 132, 143, 153,
	160, 174, 179, 182, 190, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 252, 253,
	256, 257, 262, 263, 264, 268, 269, 270, 275, 278,
	280, 285, 291, 293, 294, 295, 297, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 721, 728, 708,
	323, 664, 731, 634, 651, 743, 653, 656, 696, 619,
	677, 255, 649, 620, 0, 638, 610, 645, 611, 635,
	666, 177, 633, 710, 680, 730, 212, 692, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 729, 672, 0,
	737, 215, 0, 689, 738, 312, 238, 0, 0, 668,
	717, 675, 705, 663, 698, 627, 688, 732, 650, 694,
	733, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 691, 727, 647, 693,
	695, 608, 690, 0, 614, 621, 742, 723, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 667, 676,
	702, 660, 0, 0, 0, 0, 0, 0, 1825, 0,
	639, 0, 686, 0, 0, 0, 622, 615, 0, 0,
	665, 0, 0, 0, 626, 133, 640, 703, 0, 606,
	189, 239, 146, 707, 722, 662, 203, 352, 726, 659,
	658, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 648, 607, 711, 636, 646, 168,
	644, 289, 259, 341, 0, 683, 265, 288, 216, 330,
	279, 339, 340, 193, 746, 349, 354, 0, 673, 624,
	309, 178, 0, 136, 0, 274, 173, 208, 661, 697,
	637, 165, 700, 687, 716, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 657, 299, 298, 652, 199, 706, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 612, 0, 314, 344, 359, 154, 632, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 630,
	631, 628, 0, 629, 678, 679, 734, 735, 736, 704,
	623, 0, 718, 719, 0, 0, 0, 0, 0, 709,
	724, 725, 699, 744, 654, 655, 613, 616, 617, 618,
	625, 669, 670, 682, 685, 714, 713, 712, 715, 720,
	740, 739, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 128, 142, 214, 745, 281,
	183, 345, 609, 175, 0, 0, 671, 674, 684, 701,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 721, 728, 708, 323, 664, 731, 634, 651, 743,
	653, 656, 696, 619, 677, 255, 649, 620, 0, 638,
	610, 645, 611, 635, 666, 177, 633, 710, 680, 730,
	212, 692, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 729, 672, 0, 737, 215, 0, 689, 738, 312,
	238, 0, 0, 668, 717, 675, 705, 663, 698, 627,
	688, 732, 650, 694, 733, 0, 0, 0, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	691, 727, 647, 693, 695, 608, 690, 0, 614, 621,
	742, 723, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 667, 676, 702, 660, 0, 0, 0, 0,
	0, 0, 1815, 0, 639, 0, 686, 0, 0, 0,
	622, 615, 0, 0, 665, 0, 0, 0, 626, 133,
	640, 703, 0, 606, 189, 239, 146, 707, 722, 662,
	203, 352, 726, 659, 658, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 648, 607,
	711, 636, 646, 168, 644, 289, 259, 341, 0, 683,
	265, 288, 216, 330, 279, 339, 340, 193, 746, 349,
	354, 0, 673, 624, 309, 178, 0, 136, 0, 274,
	173, 208, 661, 697, 637, 165, 700, 687, 716, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 657, 299, 298,
	652, 199, 706, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 338, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 612, 0, 314, 344, 359,
	154, 632, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 630, 631, 628, 0, 629, 678, 679,
	734, 735, 736, 704, 623, 0, 718, 719, 0, 0,
	0, 0, 0, 709, 724, 725, 699, 744, 654, 655,
	613, 616, 617, 618, 625, 669, 670, 682, 685, 714,
	713, 712, 715, 720, 740, 739, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 128,
	142, 214, 745, 281, 183, 345, 609, 175, 0, 0,
	671, 674, 684, 701, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 721, 728, 708, 323, 664,
	731, 634, 651, 743, 653, 656, 696, 619, 677, 255,
	649, 620, 0, 638, 610, 645, 611, 635, 666, 177,
	633, 710, 680, 730, 212, 692, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 729, 672, 0, 737, 215,
	0, 689, 738, 312, 238, 0, 0, 668, 717, 675,
	705, 663, 698, 627, 688, 732, 650, 694, 733, 81,
	0, 0, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 691, 727, 647, 693, 695, 608,
	690, 0, 614, 621, 742, 723, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 667, 676, 702, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	686, 0, 0, 0, 622, 615, 0, 0, 665, 0,
	0, 0, 626, 133, 640, 703, 0, 606, 189, 239,
	146, 707, 722, 662, 203, 352, 726, 659, 658, 277,
	0, 317, 192, 213, 150, 130, 144, 161, 191, 250,
	286, 296, 648, 607, 711, 636, 646, 168, 644, 289,
	259, 341, 0, 683, 265, 288, 216, 330, 279, 339,
	340, 193, 746, 349, 354, 0, 673, 624, 309, 178,
	0, 136, 0, 274, 173, 208, 661, 697, 637, 165,
	700, 687, 716, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 657, 299, 298, 652, 199, 706, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 612,
	0, 314, 344, 359, 154, 632, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 630, 631, 628,
	0, 629, 678, 679, 734, 735, 736, 704, 623, 0,
	718, 719, 0, 0, 0, 0, 0, 709, 724, 725,
	699, 744, 654, 655, 613, 616, 617, 618, 625, 669,
	670, 682, 685, 714, 713, 712, 715, 720, 740, 739,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 128, 142, 214, 745, 281, 183, 345,
	609, 175, 0, 0, 671, 674, 684, 701, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 721,
	728, 708, 323, 664, 731, 634, 651, 743, 653, 656,
	696, 619, 677, 255, 649, 620, 0, 638, 610, 645,
	611, 635, 666, 177, 633, 710, 680, 730, 212, 692,
	0, 167, 220, 218, 0, 0, 0, 261, 322, 729,
	672, 0, 737, 215, 0, 689, 738, 312, 238, 0,
	0, 668, 717, 675, 705, 663, 698, 627, 688, 732,
	650, 694, 733, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 691, 727,
	647, 693, 695, 608, 690, 0, 614, 621, 742, 723,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	667, 676, 702, 660, 0, 0, 0, 0, 0, 0,
	1377, 0, 639, 0, 686, 0, 0, 0, 622, 615,
	0, 0, 665, 0, 0, 0, 626, 133, 640, 703,
	0, 606, 189, 239, 146, 707, 722, 662, 203, 352,
	726, 659, 658, 277, 0, 317, 192, 213, 150, 130,
	144, 161, 191, 250, 286, 296, 648, 607, 711, 636,
	646, 168, 644, 289, 259, 341, 0, 683, 265, 288,
	216, 330, 279, 339, 340, 193, 746, 349, 354, 0,
	673, 624, 309, 178, 0, 136, 0, 274, 173, 208,
	661, 697, 637, 165, 700, 687, 716, 308, 328, 152,
	324, 237, 243, 162, 164, 163, 145, 303, 327, 156,
	166, 313, 292, 318, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 657, 299, 298, 652, 199,
	706, 251, 134, 282, 266, 204, 135, 320, 357, 151,
	210, 325, 129, 184, 249, 170, 260, 231, 232, 230,
	233, 185, 267, 342, 137, 321, 338, 158, 300, 301,
	355, 287, 139, 336, 316, 235, 205, 206, 138, 0,
	284, 176, 188, 171, 254, 0, 187, 276, 333, 334,
	169, 358, 147, 348, 141, 148, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 140, 335, 234, 223,
	211, 181, 195, 272, 219, 273, 196, 241, 240, 242,
	221, 225, 0, 612, 0, 314, 344, 359, 154, 632,
	302, 326, 0, 0, 155, 186, 180, 271, 244, 149,
	198, 311, 209, 217, 283, 356, 258, 290, 159, 343,
	310, 630, 631, 628, 0, 629, 678, 679, 734, 735,
	736, 704, 623, 0, 718, 719, 0, 0, 0, 0,
	0, 709, 724, 725, 699, 744, 654, 655, 613, 616,
	617, 618, 625, 669, 670, 682, 685, 714, 713, 712,
	715, 720, 740, 739, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 128, 142, 214,
	745, 281, 183, 345, 609, 175, 0, 0, 671, 674,
	684, 701, 131, 132, 143, 153, 160, 174, 179, 182,
	190, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 252, 253, 256, 257, 262, 263,
	264, 268, 269, 270, 275, 278, 280, 285, 291, 293,
	294, 295, 297, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 721, 728, 708, 323, 664, 731, 634,
	651, 743, 653, 656, 696, 619, 677, 255, 649, 620,
	0, 638, 610, 645, 611, 635, 666, 177, 633, 710,
	680, 730, 212, 692, 0, 167, 220, 218, 0, 0,
	0, 261, 322, 729, 672, 0, 737, 215, 0, 689,
	738, 312, 238, 0, 0, 668, 717, 675, 705, 663,
	698, 627, 688, 732, 650, 694, 733, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 691, 727, 647, 693, 695, 608, 690, 0,
	614, 621, 742, 723, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 667, 676, 702, 660, 0, 0,
	0, 0, 0, 0, 1237, 0, 639, 0, 686, 0,
	0, 0, 622, 615, 0, 0, 665, 0, 0, 0,
	626, 133, 640, 703, 0, 606, 189, 239, 146, 707,
	722, 662, 203, 352, 726, 659, 658, 277, 0, 317,
	192, 213, 150, 130, 144, 161, 191, 250, 286, 296,
	648, 607, 711, 636, 646, 168, 644, 289, 259, 341,
	0, 683, 265, 288, 216, 330, 279, 339, 340, 193,
	746, 349, 354, 0, 673, 624, 309, 178, 0, 136,
	0, 274, 173, 208, 661, 697, 637, 165, 700, 687,
	716, 308, 328, 152, 324, 237, 243, 162, 164, 163,
	145, 303, 327, 156, 166, 313, 292, 318, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 657,
	299, 298, 652, 199, 706, 251, 134, 282, 266, 204,
	135, 320, 357, 151, 210, 325, 129, 184, 249, 170,
	260, 231, 232, 230, 233, 185, 267, 342, 137, 321,
	338, 158, 300, 301, 355, 287, 139, 336, 316, 235,
	205, 206, 138, 0, 284, 176, 188, 171, 254, 0,
	187, 276, 333, 334, 169, 358, 147, 348, 141, 148,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	140, 335, 234, 223, 211, 181, 195, 272, 219, 273,
	196, 241, 240, 242, 221, 225, 0, 612, 0, 314,
	344, 359, 154, 632, 302, 326, 0, 0, 155, 186,
	180, 271, 244, 149, 198, 311, 209, 217, 283, 356,
	258, 290, 159, 343, 310, 630, 631, 628, 0, 629,
	678, 679, 734, 735, 736, 704, 623, 0, 718, 719,
	0, 0, 0, 0, 0, 709, 724, 725, 699, 744,
	654, 655, 613, 616, 617, 618, 625, 669, 670, 682,
	685, 714, 713, 712, 715, 720, 740, 739, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 128, 142, 214, 745, 281, 183, 345, 609, 175,
	0, 0, 671, 674, 684, 701, 131, 132, 143, 153,
	160, 174, 179, 182, 190, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 252, 253,
	256, 257, 262, 263, 264, 268, 269, 270, 275, 278,
	280, 285, 291, 293, 294, 295, 297, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 721, 728, 708,
	323, 664, 731, 634, 651, 743, 653, 656, 696, 619,
	677, 255, 649, 620, 0, 638, 610, 645, 611, 635,
	666, 177, 633, 710, 680, 730, 212, 692, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 729, 672, 0,
	737, 215, 0, 689, 738, 312, 238, 0, 0, 668,
	717, 675, 705, 663, 698, 627, 688, 732, 650, 694,
	733, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 691, 727, 647, 693,
	695, 608, 690, 0, 614, 621, 742, 723, 641, 642,
	643, 0, 0, 0, 0, 0, 0, 0, 667, 676,
	702, 660, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 686, 0, 0, 0, 622, 615, 0, 0,
	665, 0, 0, 0, 626, 133, 640, 703, 0, 606,
	189, 239, 146, 707, 722, 662, 203, 352, 726, 659,
	658, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 648, 607, 711, 636, 646, 168,
	644, 289, 259, 341, 0, 683, 265, 288, 216, 330,
	279, 339, 340, 193, 746, 349, 354, 0, 673, 624,
	309, 178, 0, 136, 0, 274, 173, 208, 661, 697,
	637, 165, 700, 687, 716, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 657, 299, 298, 652, 199, 706, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 612, 0, 314, 344, 359, 154, 632, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 630,
	631, 628, 0, 629, 678, 679, 734, 735, 736, 704,
	623, 0, 718, 719, 0, 0, 0, 0, 0, 709,
	724, 725, 699, 744, 654, 655, 613, 616, 617, 618,
	625, 669, 670, 682, 685, 714, 713, 712, 715, 720,
	740, 739, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 128, 142, 214, 745, 281,
	183, 345, 609, 175, 0, 0, 671, 674, 684, 701,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 721, 728, 708, 323, 664, 731, 634, 651, 743,
	653, 656, 696, 619, 677, 255, 649, 620, 0, 638,
	610, 645, 611, 635, 666, 177, 633, 710, 680, 730,
	212, 692, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 729, 672, 0, 737, 215, 0, 689, 738, 312,
	238, 0, 0, 668, 717, 675, 705, 663, 698, 627,
	688, 732, 650, 694, 733, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	691, 727, 647, 693, 695, 608, 690, 0, 614, 621,
	742, 723, 641, 642, 643, 0, 0, 0, 0, 0,
	0, 0, 667, 676, 702, 660, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 686, 0, 0, 0,
	622, 615, 0, 0, 665, 0, 0, 0, 626, 133,
	640, 703, 0, 606, 189, 239, 146, 707, 722, 662,
	203, 352, 726, 659, 658, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 648, 607,
	711, 636, 646, 168, 644, 289, 259, 341, 0, 683,
	265, 288, 216, 330, 279, 339, 340, 193, 746, 349,
	354, 0, 673, 624, 309, 178, 0, 136, 0, 274,
	173, 208, 661, 697, 637, 165, 700, 687, 716, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 657, 299, 298,
	652, 199, 706, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 338, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 612, 0, 314, 344, 359,
	154, 632, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 630, 631, 628, 0, 629, 678, 679,
	734, 735, 736, 704, 623, 0, 718, 719, 0, 0,
	0, 0, 0, 709, 724, 725, 699, 744, 654, 655,
	613, 616, 617, 618, 625, 669, 670, 682, 685, 714,
	713, 712, 715, 720, 740, 739, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 681, 128,
	142, 214, 745, 281, 183, 345, 609, 175, 0, 0,
	671, 674, 684, 701, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 721, 728, 708, 323, 664,
	731, 634, 651, 743, 653, 656, 696, 619, 677, 255,
	649, 620, 0, 638, 610, 645, 611, 635, 666, 177,
	633, 710, 680, 730, 212, 692, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 1409, 1413, 0, 737, 215,
	0, 689, 738, 312, 238, 0, 0, 668, 717, 675,
	705, 663, 698, 627, 688, 732, 650, 694, 733, 0,
	0, 0, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 691, 727, 647, 693, 695, 608,
	690, 0, 614, 621, 742, 723, 641, 642, 643, 0,
	0, 0, 0, 0, 0, 0, 667, 676, 702, 660,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	686, 0, 0, 0, 622, 615, 0, 0, 665, 0,
	0, 0, 626, 133, 640, 703, 0, 606, 189, 239,
	146, 707, 722, 1412, 203, 352, 726, 659, 658, 1407,
	0, 1408, 192, 213, 603, 130, 144, 1405, 1411, 250,
	286, 296, 648, 607, 711, 636, 646, 168, 644, 289,
	259, 341, 0, 683, 265, 288, 216, 330, 279, 339,
	340, 193, 746, 349, 354, 0, 673, 624, 309, 178,
	0, 136, 0, 274, 173, 208, 661, 697, 637, 165,
	700, 687, 716, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 657, 299, 298, 652, 199, 706, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 612,
	0, 314, 344, 359, 154, 632, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 630, 631, 628,
	0, 629, 678, 679, 734, 735, 736, 704, 623, 0,
	718, 719, 0, 0, 0, 0, 0, 709, 724, 725,
	699, 744, 654, 655, 613, 616, 617, 618, 625, 669,
	670, 682, 685, 714, 713, 712, 715, 720, 740, 739,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 681, 128, 142, 214, 745, 281, 183, 345,
	609, 175, 0, 0, 671, 674, 684, 701, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 721,
	728, 708, 323, 664, 731, 634, 651, 743, 653, 656,
	696, 619, 677, 255, 649, 620, 0, 638, 610, 645,
	611, 635, 666, 177, 633, 710, 680, 730, 212, 692,
	0, 167, 220, 218, 0, 0, 0, 261, 322, 729,
	672, 0, 737, 215, 0, 689, 738, 312, 238, 0,
	0, 668, 717, 675, 705, 663, 698, 627, 688, 732,
	650, 694, 733, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 691, 727,
	647, 693, 695, 608, 690, 0, 614, 621, 742, 723,
	641, 642, 643, 0, 0, 0, 0, 0, 0, 0,
	667, 676, 702, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 686, 0, 0, 0, 622, 615,
	0, 0, 665, 0, 0, 0, 626, 133, 640, 703,
	0, 606, 189, 239, 146, 707, 722, 662, 203, 352,
	726, 659, 658, 277, 0, 317, 192, 213, 150, 130,
	144, 161, 191, 250, 286, 296, 648, 607, 711, 636,
	646, 168, 644, 289, 259, 341, 0, 683, 265, 288,
	216, 330, 279, 339, 340, 193, 746, 349, 354, 0,
	673, 624, 309, 178, 0, 136, 0, 274, 173, 208,
	661, 697, 637, 165, 700, 687, 716, 308, 328, 152,
	324, 237, 243, 162, 164, 163, 145, 303, 327, 156,
	166, 313, 292, 318, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 657, 299, 298, 652, 199,
	706, 251, 134, 282, 266, 204, 135, 320, 357, 151,
	210, 325, 129, 184, 249, 170, 260, 231, 232, 230,
	233, 185, 267, 342, 137, 321, 338, 158, 300, 301,
	355, 287, 139, 336, 316, 235, 205, 206, 138, 0,
	284, 176, 188, 171, 254, 0, 187, 276, 333, 334,
	169, 358, 147, 348, 141, 148, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 140, 335, 234, 223,
	211, 181, 195, 272, 219, 273, 196, 241, 240, 242,
	221, 225, 0, 612, 0, 314, 344, 359, 154, 632,
	302, 326, 0, 0, 155, 186, 180, 271, 244, 149,
	198, 311, 209, 217, 283, 356, 258, 290, 159, 343,
	310, 630, 631, 628, 0, 629, 678, 679, 734, 735,
	736, 704, 623, 0, 718, 719, 0, 0, 0, 0,
	0, 709, 724, 725, 699, 744, 654, 655, 613, 616,
	617, 618, 625, 669, 670, 682, 685, 714, 713, 712,
	715, 720, 740, 739, 741, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 128, 142, 214,
	745, 281, 183, 345, 609, 175, 0, 0, 671, 674,
	684, 701, 131, 132, 143, 153, 160, 174, 179, 182,
	190, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 252, 253, 256, 257, 262, 263,
	264, 268, 269, 270, 275, 278, 280, 285, 291, 293,
	294, 295, 297, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 721, 728, 708, 323, 664, 731, 634,
	651, 743, 653, 656, 696, 619, 677, 255, 649, 620,
	0, 638, 610, 645, 611, 635, 666, 177, 633, 710,
	680, 730, 212, 692, 0, 167, 220, 218, 0, 0,
	0, 261, 322, 729, 672, 0, 737, 215, 0, 689,
	738, 312, 238, 0, 0, 668, 717, 675, 705, 663,
	698, 627, 688, 732, 650, 694, 733, 0, 0, 0,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 691, 727, 647, 693, 695, 608, 690, 0,
	614, 621, 742, 723, 641, 642, 643, 0, 0, 0,
	0, 0, 0, 0, 667, 676, 702, 660, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 686, 0,
	0, 0, 622, 615, 0, 0, 665, 0, 0, 0,
	626, 133, 640, 703, 0, 606, 189, 239, 146, 707,
	722, 662, 203, 352, 726, 659, 658, 277, 0, 317,
	192, 213, 603, 130, 144, 599, 191, 250, 286, 296,
	648, 607, 711, 636, 646, 168, 644, 289, 259, 341,
	0, 683, 265, 288, 216, 330, 279, 339, 340, 193,
	746, 349, 354, 0, 673, 624, 309, 178, 0, 136,
	0, 274, 173, 208, 661, 697, 637, 165, 700, 687,
	716, 308, 328, 152, 324, 237, 243, 162, 164, 163,
	145, 303, 327, 156, 166, 313, 292, 318, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 657,
	299, 298, 652, 199, 706, 251, 134, 282, 266, 204,
	135, 320, 357, 151, 210, 325, 129, 184, 249, 170,
	260, 231, 232, 230, 233, 185, 267, 342, 137, 321,
	338, 158, 300, 301, 355, 287, 139, 336, 316, 235,
	205, 206, 138, 0, 284, 176, 188, 171, 254, 0,
	187, 276, 333, 334, 169, 358, 147, 348, 141, 148,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	140, 335, 234, 223, 211, 181, 195, 272, 219, 273,
	196, 241, 240, 242, 221, 225, 0, 612, 0, 314,
	344, 359, 154, 632, 302, 326, 0, 0, 155, 186,
	180, 271, 244, 149, 198, 311, 209, 217, 283, 356,
	258, 290, 159, 343, 310, 630, 631, 628, 0, 629,
	678, 679, 734, 735, 736, 704, 623, 0, 718, 719,
	0, 0, 0, 0, 0, 709, 724, 725, 699, 744,
	654, 655, 613, 616, 617, 618, 625, 669, 670, 682,
	685, 714, 713, 712, 715, 720, 740, 739, 741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 128, 142, 214, 745, 281, 183, 345, 609, 175,
	0, 0, 671, 674, 684, 701, 131, 132, 143, 153,
	160, 174, 179, 182, 190, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 252, 253,
	256, 257, 262, 263, 264, 268, 269, 270, 275, 278,
	280, 285, 291, 293, 294, 295, 297, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 721, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 474, 0, 0, 0, 177,
	471, 0, 0, 0, 212, 0, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 549, 215,
	0, 0, 452, 312, 238, 0, 0, 0, 0, 536,
	537, 0, 0, 0, 0, 0, 0, 1387, 0, 81,
	0, 0, 0, 472, 496, 495, 498, 499, 500, 501,
	0, 0, 157, 497, 502, 531, 532, 1388, 0, 0,
	469, 487, 0, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 485, 0, 0, 0, 0,
	563, 0, 486, 0, 0, 481, 482, 483, 488, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 239,
	146, 539, 0, 0, 203, 352, 0, 0, 561, 277,
	0, 317, 192, 213, 150, 130, 144, 161, 191, 250,
	286, 296, 546, 0, 0, 0, 0, 168, 0, 289,
	259, 341, 538, 0, 265, 288, 216, 330, 279, 339,
	340, 193, 446, 349, 354, 0, 0, 0, 309, 178,
	0, 136, 0, 274, 173, 208, 0, 0, 0, 165,
	0, 0, 0, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 299, 298, 0, 199, 0, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 154, 0, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 550, 562, 556,
	558, 557, 554, 555, 553, 552, 551, 564, 540, 541,
	542, 543, 544, 0, 0, 0, 547, 0, 559, 560,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 511,
	512, 516, 517, 525, 524, 523, 526, 527, 529, 528,
	530, 508, 509, 510, 513, 514, 515, 518, 519, 522,
	520, 521, 545, 128, 142, 214, 0, 281, 183, 345,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 35,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 474, 0, 0,
	0, 177, 471, 0, 0, 0, 212, 0, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	549, 215, 0, 0, 452, 312, 238, 0, 0, 0,
	0, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 472, 496, 495, 498, 499,
	500, 501, 0, 0, 157, 497, 502, 531, 532, 0,
	0, 0, 469, 487, 0, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 485, 0, 0,
	0, 0, 563, 0, 486, 0, 0, 481, 482, 483,
	488, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 239, 146, 539, 0, 0, 203, 352, 0, 0,
	561, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 546, 0, 0, 0, 0, 168,
	0, 289, 259, 341, 538, 0, 265, 288, 216, 330,
	279, 339, 340, 193, 446, 349, 354, 0, 0, 0,
	309, 178, 0, 136, 0, 274, 173, 208, 0, 0,
	0, 165, 0, 0, 0, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 299, 298, 0, 199, 0, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 154, 0, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 550,
	562, 556, 558, 557, 554, 555, 553, 552, 551, 564,
	540, 541, 542, 543, 544, 0, 0, 0, 547, 0,
	559, 560, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 511, 512, 516, 517, 525, 524, 523, 526, 527,
	529, 528, 530, 508, 509, 510, 513, 514, 515, 518,
	519, 522, 520, 521, 545, 128, 142, 214, 79, 281,
	183, 345, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 474, 0,
	0, 0, 177, 471, 0, 0, 0, 212, 0, 0,
	167, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 549, 215, 0, 0, 452, 312, 238, 0, 0,
	0, 0, 536, 537, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 472, 496, 495, 498,
	499, 500, 501, 0, 0, 157, 497, 502, 531, 532,
	0, 0, 0, 469, 487, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 485, 465,
	0, 0, 0, 563, 0, 486, 0, 0, 481, 482,
	483, 488, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 239, 146, 539, 0, 0, 203, 352, 0,
	0, 561, 277, 0, 317, 192, 213, 150, 130, 144,
	161, 191, 250, 286, 296, 546, 0, 0, 0, 0,
	168, 0, 289, 259, 341, 538, 0, 265, 288, 216,
	330, 279, 339, 340, 193, 446, 349, 354, 0, 0,
	0, 309, 178, 0, 136, 0, 274, 173, 208, 0,
	0, 0, 165, 0, 0, 0, 308, 328, 152, 324,
	237, 243, 162, 164, 163, 145, 303, 327, 156, 166,
	313, 292, 318, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 299, 298, 0, 199, 0,
	251, 134, 282, 266, 204, 135, 320, 357, 151, 210,
	325, 129, 184, 249, 170, 260, 231, 232, 230, 233,
	185, 267, 342, 137, 321, 338, 158, 300, 301, 355,
	287, 139, 336, 316, 235, 205, 206, 138, 0, 284,
	176, 188, 171, 254, 0, 187, 276, 333, 334, 169,
	358, 147, 348, 141, 148, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 140, 335, 234, 223, 211,
	181, 195, 272, 219, 273, 196, 241, 240, 242, 221,
	225, 0, 0, 0, 314, 344, 359, 154, 0, 302,
	326, 0, 0, 155, 186, 180, 271, 244, 149, 198,
	311, 209, 217, 283, 356, 258, 290, 159, 343, 310,
	550, 562, 556, 558, 557, 554, 555, 553, 552, 551,
	564, 540, 541, 542, 543, 544, 0, 0, 0, 547,
	0, 559, 560, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 511, 512, 516, 517, 525, 524, 523, 526,
	527, 529, 528, 530, 508, 509, 510, 513, 514, 515,
	518, 519, 522, 520, 521, 545, 128, 142, 214, 0,
	281, 183, 345, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 190,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 252, 253, 256, 257, 262, 263, 264,
	268, 269, 270, 275, 278, 280, 285, 291, 293, 294,
	295, 297, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 474,
	0, 0, 0, 177, 471, 0, 0, 0, 212, 0,
	0, 167, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 549, 215, 0, 0, 452, 312, 238, 0,
	0, 0, 0, 536, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 874, 0, 472, 496, 495,
	498, 499, 500, 501, 0, 0, 157, 497, 502, 531,
	532, 0, 0, 0, 469, 487, 0, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 485,
	0, 0, 0, 0, 563, 0, 486, 0, 0, 481,
	482, 483, 488, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 189, 239, 146, 539, 0, 0, 203, 352,
	0, 0, 561, 277, 0, 317, 192, 213, 150, 130,
	144, 161, 191, 250, 286, 296, 546, 0, 0, 0,
	0, 168, 0, 289, 259, 341, 538, 0, 265, 288,
	216, 330, 279, 339, 340, 193, 446, 349, 354, 0,
	0, 0, 309, 178, 0, 136, 0, 274, 173, 208,
	0, 0, 0, 165, 0, 0, 0, 308, 328, 152,
	324, 237, 243, 162, 164, 163, 145, 303, 327, 156,
	166, 313, 292, 318, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 299, 298, 0, 199,
	0, 251, 134, 282, 266, 204, 135, 320, 357, 151,
	210, 325, 129, 184, 249, 170, 260, 231, 232, 230,
	233, 185, 267, 342, 137, 321, 338, 158, 300, 301,
	355, 287, 139, 336, 316, 235, 205, 206, 138, 0,
	284, 176, 188, 171, 254, 0, 187, 276, 333, 334,
	169, 358, 147, 348, 141, 148, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 140, 335, 234, 223,
	211, 181, 195, 272, 219, 273, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 154, 0,
	302, 326, 0, 0, 155, 186, 180, 271, 244, 149,
	198, 311, 209, 217, 283, 356, 258, 290, 159, 343,
	310, 550, 562, 556, 558, 557, 554, 555, 553, 552,
	551, 564, 540, 541, 542, 543, 544, 0, 0, 0,
	547, 0, 559, 560, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 511, 512, 516, 517, 525, 524, 523,
	526, 527, 529, 528, 530, 508, 509, 510, 513, 514,
	515, 518, 519, 522, 520, 521, 545, 128, 142, 214,
	0, 281, 183, 345, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	190, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 252, 253, 256, 257, 262, 263,
	264, 268, 269, 270, 275, 278, 280, 285, 291, 293,
	294, 295, 297, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	474, 0, 0, 0, 177, 471, 0, 0, 0, 212,
	0, 0, 167, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 549, 215, 0, 0, 452, 312, 238,
	0, 0, 0, 0, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 472, 496,
	495, 498, 499, 500, 501, 0, 0, 157, 497, 502,
	531, 532, 0, 0, 0, 469, 487, 0, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 484,
	485, 1275, 0, 0, 0, 563, 0, 486, 0, 0,
	481, 482, 483, 488, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 239, 146, 539, 0, 0, 203,
	352, 0, 0, 561, 277, 0, 317, 192, 213, 150,
	130, 144, 161, 191, 250, 286, 296, 546, 0, 0,
	0, 0, 168, 0, 289, 259, 341, 538, 0, 265,
	288, 216, 330, 279, 339, 340, 193, 446, 349, 354,
	0, 0, 0, 309, 178, 0, 136, 0, 274, 173,
	208, 0, 0, 0, 165, 0, 0, 0, 308, 328,
	152, 324, 237, 243, 162, 164, 163, 145, 303, 327,
	156, 166, 313, 292, 318, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 299, 298, 0,
	199, 0, 251, 134, 282, 266, 204, 135, 320, 357,
	151, 210, 325, 129, 184, 249, 170, 260, 231, 232,
	230, 233, 185, 267, 342, 137, 321, 338, 158, 300,
	301, 355, 287, 139, 336, 316, 235, 205, 206, 138,
	0, 284, 176, 188, 171, 254, 0, 187, 276, 333,
	334, 169, 358, 147, 348, 141, 148, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 140, 335, 234,
	223, 211, 181, 195, 272, 219, 273, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 154,
	0, 302, 326, 0, 0, 155, 186, 180, 271, 244,
	149, 198, 311, 209, 217, 283, 356, 258, 290, 159,
	343, 310, 550, 562, 556, 558, 557, 554, 555, 553,
	552, 551, 564, 540, 541, 542, 543, 544, 0, 0,
	0, 547, 0, 559, 560, 0, 0, 0, 0, 503,
	504, 505, 506, 507, 511, 512, 516, 517, 525, 524,
	523, 526, 527, 529, 528, 530, 508, 509, 510, 513,
	514, 515, 518, 519, 522, 520, 521, 545, 128, 142,
	214, 0, 281, 183, 345, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 190, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 252, 253, 256, 257, 262,
	263, 264, 268, 269, 270, 275, 278, 280, 285, 291,
	293, 294, 295, 297, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 474, 0, 0, 0, 177, 471, 0, 0, 0,
	212, 0, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 549, 215, 0, 0, 452, 312,
	238, 0, 0, 0, 0, 536, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 472,
	496, 1319, 498, 499, 500, 501, 0, 0, 157, 497,
	502, 531, 532, 0, 0, 0, 469, 487, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 485, 1275, 0, 0, 0, 563, 0, 486, 0,
	0, 481, 482, 483, 488, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 239, 146, 539, 0, 0,
	203, 352, 0, 0, 561, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 546, 0,
	0, 0, 0, 168, 0, 289, 259, 341, 538, 0,
	265, 288, 216, 330, 279, 339, 340, 193, 446, 349,
	354, 0, 0, 0, 309, 178, 0, 136, 0, 274,
	173, 208, 0, 0, 0, 165, 0, 0, 0, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 299, 298,
	0, 199, 0, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 338, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	154, 0, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 550, 562, 556, 558, 557, 554, 555,
	553, 552, 551, 564, 540, 541, 542, 543, 544, 0,
	0, 0, 547, 0, 559, 560, 0, 0, 0, 0,
	503, 504, 505, 506, 507, 511, 512, 516, 517, 525,
	524, 523, 526, 527, 529, 528, 530, 508, 509, 510,
	513, 514, 515, 518, 519, 522, 520, 521, 545, 128,
	142, 214, 0, 281, 183, 345, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 177, 471, 0, 0,
	0, 212, 0, 0, 167, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 549, 215, 0, 0, 452,
	312, 238, 0, 0, 0, 0, 536, 537, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	472, 496, 1316, 498, 499, 500, 501, 0, 0, 157,
	497, 502, 531, 532, 0, 0, 0, 469, 487, 0,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 484, 485, 1275, 0, 0, 0, 563, 0, 486,
	0, 0, 481, 482, 483, 488, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 239, 146, 539, 0,
	0, 203, 352, 0, 0, 561, 277, 0, 317, 192,
	213, 150, 130, 144, 161, 191, 250, 286, 296, 546,
	0, 0, 0, 0, 168, 0, 289, 259, 341, 538,
	0, 265, 288, 216, 330, 279, 339, 340, 193, 446,
	349, 354, 0, 0, 0, 309, 178, 0, 136, 0,
	274, 173, 208, 0, 0, 0, 165, 0, 0, 0,
	308, 328, 152, 324, 237, 243, 162, 164, 163, 145,
	303, 327, 156, 166, 313, 292, 318, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 299,
	298, 0, 199, 0, 251, 134, 282, 266, 204, 135,
	320, 357, 151, 210, 325, 129, 184, 249, 170, 260,
	231, 232, 230, 233, 185, 267, 342, 137, 321, 338,
	158, 300, 301, 355, 287, 139, 336, 316, 235, 205,
	206, 138, 0, 284, 176, 188, 171, 254, 0, 187,
	276, 333, 334, 169, 358, 147, 348, 141, 148, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 140,
	335, 234, 223, 211, 181, 195, 272, 219, 273, 196,
	241, 240, 242, 221, 225, 0, 0, 0, 314, 344,
	359, 154, 0, 302, 326, 0, 0, 155, 186, 180,
	271, 244, 149, 198, 311, 209, 217, 283, 356, 258,
	290, 159, 343, 310, 550, 562, 556, 558, 557, 554,
	555, 553, 552, 551, 564, 540, 541, 542, 543, 544,
	0, 0, 0, 547, 0, 559, 560, 0, 0, 0,
	0, 503, 504, 505, 506, 507, 511, 512, 516, 517,
	525, 524, 523, 526, 527, 529, 528, 530, 508, 509,
	510, 513, 514, 515, 518, 519, 522, 520, 521, 545,
	128, 142, 214, 0, 281, 183, 345, 0, 175, 0,
	0, 0, 0, 0, 0, 131, 132, 143, 153, 160,
	174, 179, 182, 190, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 252, 253, 256,
	257, 262, 263, 264, 268, 269, 270, 275, 278, 280,
	285, 291, 293, 294, 295, 297, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 474, 0, 0, 0, 177, 471, 0,
	0, 0, 212, 0, 0, 167, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 549, 215, 0, 0,
	452, 312, 238, 0, 0, 0, 0, 536, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 1192,
	0, 472, 496, 495, 498, 499, 500, 501, 0, 0,
	157, 497, 502, 531, 532, 0, 0, 0, 469, 487,
	0, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 485, 0, 0, 0, 0, 563, 0,
	486, 0, 0, 481, 482, 483, 488, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 189, 239, 146, 539,
	0, 0, 203, 352, 0, 0, 561, 277, 0, 317,
	192, 213, 150, 130, 144, 161, 191, 250, 286, 296,
	546, 0, 0, 0, 0, 168, 0, 289, 259, 341,
	538, 0, 265, 288, 216, 330, 279, 339, 340, 193,
	446, 349, 354, 0, 0, 0, 309, 178, 0, 136,
	0, 274, 173, 208, 0, 0, 0, 165, 0, 0,
	0, 308, 328, 152, 324, 237, 243, 162, 164, 163,
	145, 303, 327, 156, 166, 313, 292, 318, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	299, 298, 0, 199, 0, 251, 134, 282, 266, 204,
	135, 320, 357, 151, 210, 325, 129, 184, 249, 170,
	260, 231, 232, 230, 233, 185, 267, 342, 137, 321,
	338, 158, 300, 301, 355, 287, 139, 336, 316, 235,
	205, 206, 138, 0, 284, 176, 188, 171, 254, 0,
	187, 276, 333, 334, 169, 358, 147, 348, 141, 148,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	140, 335, 234, 223, 211, 181, 195, 272, 219, 273,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 154, 0, 302, 326, 0, 0, 155, 186,
	180, 271, 244, 149, 198, 311, 209, 217, 283, 356,
	258, 290, 159, 343, 310, 550, 562, 556, 558, 557,
	554, 555, 553, 552, 551, 564, 540, 541, 542, 543,
	544, 0, 0, 0, 547, 0, 559, 560, 0, 0,
	0, 0, 503, 504, 505, 506, 507, 511, 512, 516,
	517, 525, 524, 523, 526, 527, 529, 528, 530, 508,
	509, 510, 513, 514, 515, 518, 519, 522, 520, 521,
	545, 128, 142, 214, 0, 281, 183, 345, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 190, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 252, 253,
	256, 257, 262, 263, 264, 268, 269, 270, 275, 278,
	280, 285, 291, 293, 294, 295, 297, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 474, 0, 0, 0, 177, 471,
	0, 0, 0, 212, 0, 0, 167, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 549, 215, 0,
	0, 452, 312, 238, 0, 0, 0, 0, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 472, 496, 495, 498, 499, 500, 501, 0,
	0, 157, 497, 502, 531, 532, 0, 0, 0, 469,
	487, 0, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 485, 0, 0, 0, 0, 563,
	0, 486, 0, 0, 481, 482, 483, 488, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 239, 146,
	539, 0, 0, 203, 352, 0, 0, 561, 277, 0,
	317, 192, 213, 150, 130, 144, 161, 191, 250, 286,
	296, 546, 0, 0, 0, 0, 168, 0, 289, 259,
	341, 538, 0, 265, 288, 216, 330, 279, 339, 340,
	193, 446, 349, 354, 0, 0, 0, 309, 178, 0,
	136, 0, 274, 173, 208, 0, 0, 0, 165, 0,
	0, 0, 308, 328, 152, 324, 237, 243, 162, 164,
	163, 145, 303, 327, 156, 166, 313, 292, 318, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 299, 298, 0, 199, 0, 251, 134, 282, 266,
	204, 135, 320, 357, 151, 210, 325, 129, 184, 249,
	170, 260, 231, 232, 230, 233, 185, 267, 342, 137,
	321, 338, 158, 300, 301, 355, 287, 139, 336, 316,
	235, 205, 206, 138, 0, 284, 176, 188, 171, 254,
	0, 187, 276, 333, 334, 169, 358, 147, 348, 141,
	148, 347, 246, 0, 245, 350, 329, 337, 236, 224,
	0, 140, 335, 234, 223, 211, 181, 195, 272, 219,
	273, 196, 241, 240, 242, 221, 225, 0, 0, 0,
	314, 344, 359, 154, 0, 302, 326, 0, 0, 155,
	186, 180, 271, 244, 149, 198, 311, 209, 217, 283,
	356, 258, 290, 159, 343, 310, 550, 562, 556, 558,
	557, 554, 555, 553, 552, 551, 564, 540, 541, 542,
	543, 544, 0, 0, 0, 547, 0, 559, 560, 0,
	0, 0, 0, 503, 504, 505, 506, 507, 511, 512,
	516, 517, 525, 524, 523, 526, 527, 529, 528, 530,
	508, 509, 510, 513, 514, 515, 518, 519, 522, 520,
	521, 545, 128, 142, 214, 0, 281, 183, 345, 0,
	175, 0, 0, 0, 0, 0, 0, 131, 132, 143,
	153, 160, 174, 179, 182, 190, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 252,
	253, 256, 257, 262, 263, 264, 268, 269, 270, 275,
	278, 280, 285, 291, 293, 294, 295, 297, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 212, 0, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 549, 215,
	0, 0, 452, 312, 238, 0, 0, 0, 0, 536,
	537, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 472, 496, 495, 498, 499, 500, 501,
	0, 0, 157, 497, 502, 531, 532, 0, 0, 0,
	0, 487, 0, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 485, 0, 0, 0, 0,
	563, 0, 486, 0, 0, 481, 482, 483, 488, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 239,
	146, 539, 0, 0, 203, 352, 0, 0, 561, 277,
	0, 317, 192, 213, 150, 130, 144, 161, 191, 250,
	286, 296, 546, 0, 0, 0, 0, 168, 0, 289,
	259, 341, 538, 0, 265, 288, 216, 330, 279, 339,
	340, 193, 446, 349, 354, 0, 0, 0, 309, 178,
	0, 136, 0, 274, 173, 208, 0, 0, 0, 165,
	0, 0, 0, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 299, 298, 0, 199, 0, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 154, 0, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 550, 562, 556,
	558, 557, 554, 555, 553, 552, 551, 564, 540, 541,
	542, 543, 544, 1322, 1323, 1324, 547, 0, 559, 560,
	0, 0, 0, 0, 503, 504, 505, 506, 507, 511,
	512, 516, 517, 525, 524, 523, 526, 527, 529, 528,
	530, 508, 509, 510, 513, 514, 515, 518, 519, 522,
	520, 521, 545, 128, 142, 214, 0, 281, 183, 345,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 212, 0, 0, 167, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 549,
	215, 0, 0, 452, 312, 238, 0, 0, 0, 0,
	536, 537, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 472, 496, 495, 498, 499, 500,
	501, 0, 0, 157, 497, 502, 531, 532, 0, 0,
	0, 0, 487, 0, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 485, 0, 0, 0,
	0, 563, 0, 486, 0, 0, 481, 482, 483, 488,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	239, 146, 539, 0, 0, 203, 352, 0, 0, 561,
	277, 0, 317, 192, 213, 150, 130, 144, 161, 191,
	250, 286, 296, 546, 0, 0, 0, 0, 168, 0,
	289, 259, 341, 538, 2478, 265, 288, 216, 330, 279,
	339, 340, 193, 446, 349, 354, 0, 0, 0, 309,
	178, 0, 136, 0, 274, 173, 208, 0, 0, 0,
	165, 0, 0, 0, 308, 328, 152, 324, 237, 243,
	162, 164, 163, 145, 303, 327, 156, 166, 313, 292,
	318, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 299, 298, 0, 199, 0, 251, 134,
	282, 266, 204, 135, 320, 357, 151, 210, 325, 129,
	184, 249, 170, 260, 231, 232, 230, 233, 185, 267,
	342, 137, 321, 338, 158, 300, 301, 355, 287, 139,
	336, 316, 235, 205, 206, 138, 0, 284, 176, 188,
	171, 254, 0, 187, 276, 333, 334, 169, 358, 147,
	348, 141, 148, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 140, 335, 234, 223, 211, 181, 195,
	272, 219, 273, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 154, 0, 302, 326, 0,
	0, 155, 186, 180, 271, 244, 149, 198, 311, 209,
	217, 283, 356, 258, 290, 159, 343, 310, 550, 562,
	556, 558, 557, 554, 555, 553, 552, 551, 564, 540,
	541, 542, 543, 544, 0, 0, 0, 547, 0, 559,
	560, 0, 0, 0, 0, 503, 504, 505, 506, 507,
	511, 512, 516, 517, 525, 524, 523, 526, 527, 529,
	528, 530, 508, 509, 510, 513, 514, 515, 518, 519,
	522, 520, 521, 545, 128, 142, 214, 0, 281, 183,
	345, 0, 175, 0, 0, 0, 0, 0, 0, 131,
	132, 143, 153, 160, 174, 179, 182, 190, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 252, 253, 256, 257, 262, 263, 264, 268, 269,
	270, 275, 278, 280, 285, 291, 293, 294, 295, 297,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 212, 0, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	549, 215, 0, 0, 452, 312, 238, 0, 0, 0,
	0, 536, 537, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 874, 0, 472, 496, 495, 498, 499,
	500, 501, 0, 0, 157, 497, 502, 531, 532, 0,
	0, 0, 0, 487, 0, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 485, 0, 0,
	0, 0, 563, 0, 486, 0, 0, 481, 482, 483,
	488, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 239, 146, 539, 0, 0, 203, 352, 0, 0,
	561, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 546, 0, 0, 0, 0, 168,
	0, 289, 259, 341, 538, 0, 265, 288, 216, 330,
	279, 339, 340, 193, 446, 349, 354, 0, 0, 0,
	309, 178, 0, 136, 0, 274, 173, 208, 0, 0,
	0, 165, 0, 0, 0, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 299, 298, 0, 199, 0, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 154, 0, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 550,
	562, 556, 558, 557, 554, 555, 553, 552, 551, 564,
	540, 541, 542, 543, 544, 0, 0, 0, 547, 0,
	559, 560, 0, 0, 0, 0, 503, 504, 505, 506,
	507, 511, 512, 516, 517, 525, 524, 523, 526, 527,
	529, 528, 530, 508, 509, 510, 513, 514, 515, 518,
	519, 522, 520, 521, 545, 128, 142, 214, 0, 281,
	183, 345, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 212, 0, 0,
	167, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 549, 215, 0, 0, 452, 312, 238, 0, 0,
	0, 0, 536, 537, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 472, 496, 495, 498,
	499, 500, 501, 0, 0, 157, 497, 502, 531, 532,
	0, 0, 0, 0, 487, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 485, 0,
	0, 0, 0, 563, 0, 486, 0, 0, 481, 482,
	483, 488, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 239, 146, 539, 0, 0, 203, 352, 0,
	0, 561, 277, 0, 317, 192, 213, 150, 130, 144,
	161, 191, 250, 286, 296, 546, 0, 0, 0, 0,
	168, 0, 289, 259, 341, 538, 0, 265, 288, 216,
	330, 279, 339, 340, 193, 446, 349, 354, 0, 0,
	0, 309, 178, 0, 136, 0, 274, 173, 208, 0,
	0, 0, 165, 0, 0, 0, 308, 328, 152, 324,
	237, 243, 162, 164, 163, 145, 303, 327, 156, 166,
	313, 292, 318, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 299, 298, 0, 199, 0,
	251, 134, 282, 266, 204, 135, 320, 357, 151, 210,
	325, 129, 184, 249, 170, 260, 231, 232, 230, 233,
	185, 267, 342, 137, 321, 338, 158, 300, 301, 355,
	287, 139, 336, 316, 235, 205, 206, 138, 0, 284,
	176, 188, 171, 254, 0, 187, 276, 333, 334, 169,
	358, 147, 348, 141, 148, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 140, 335, 234, 223, 211,
	181, 195, 272, 219, 273, 196, 241, 240, 242, 221,
	225, 0, 0, 0, 314, 344, 359, 154, 0, 302,
	326, 0, 0, 155, 186, 180, 271, 244, 149, 198,
	311, 209, 217, 283, 356, 258, 290, 159, 343, 310,
	550, 562, 556, 558, 557, 554, 555, 553, 552, 551,
	564, 540, 541, 542, 543, 544, 0, 0, 0, 547,
	0, 559, 560, 0, 0, 0, 0, 503, 504, 505,
	506, 507, 511, 512, 516, 517, 525, 524, 523, 526,
	527, 529, 528, 530, 508, 509, 510, 513, 514, 515,
	518, 519, 522, 520, 521, 545, 128, 142, 214, 0,
	281, 183, 345, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 190,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 252, 253, 256, 257, 262, 263, 264,
	268, 269, 270, 275, 278, 280, 285, 291, 293, 294,
	295, 297, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 1365, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 212, 0,
	0, 167, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 0, 215, 0, 0, 452, 312, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	1369, 0, 0, 0, 0, 0, 0, 126, 0, 425,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 189, 239, 146, 0, 0, 0, 203, 352,
	0, 1368, 0, 277, 0, 317, 192, 213, 150, 130,
	144, 161, 191, 250, 286, 296, 0, 0, 0, 0,
	0, 168, 0, 289, 259, 341, 0, 0, 265, 288,
	216, 330, 279, 339, 340, 193, 446, 349, 354, 0,
	0, 0, 309, 178, 0, 136, 0, 274, 173, 208,
	0, 0, 0, 165, 0, 0, 0, 308, 328, 152,
	324, 237, 243, 162, 164, 163, 145, 303, 327, 156,
	166, 313, 292, 318, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 299, 298, 0, 199,
	0, 251, 134, 282, 266, 204, 135, 320, 357, 151,
	210, 325, 129, 184, 249, 170, 260, 231, 232, 230,
	233, 185, 267, 342, 137, 321, 338, 158, 300, 301,
	355, 287, 139, 336, 316, 235, 205, 206, 138, 0,
	284, 176, 188, 171, 254, 0, 187, 276, 333, 334,
	169, 358, 147, 348, 141, 148, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 140, 335, 234, 223,
	211, 181, 195, 272, 219, 273, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 154, 0,
	302, 326, 0, 0, 155, 186, 180, 271, 244, 149,
	198, 311, 209, 217, 283, 356, 258, 290, 159, 343,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 427,
	428, 429, 430, 434, 435, 439, 440, 449, 448, 447,
	450, 451, 454, 453, 455, 431, 432, 433, 436, 437,
	438, 441, 442, 445, 443, 444, 0, 128, 142, 214,
	0, 281, 183, 345, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	190, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 252, 253, 256, 257, 262, 263,
	264, 268, 269, 270, 275, 278, 280, 285, 291, 293,
	294, 295, 297, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 1365,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 212,
	0, 0, 167, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 0, 215, 0, 0, 452, 312, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 1369, 0, 0, 0, 0, 0, 0, 126, 0,
	425, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 239, 146, 0, 0, 0, 203,
	352, 0, 1368, 0, 277, 0, 317, 192, 213, 150,
	130, 144, 161, 191, 250, 286, 296, 0, 0, 0,
	0, 0, 168, 0, 289, 259, 341, 0, 0, 1363,
	288, 216, 330, 279, 339, 340, 193, 446, 349, 354,
	0, 0, 0, 309, 178, 0, 136, 0, 274, 173,
	208, 0, 0, 0, 165, 0, 0, 0, 308, 328,
	152, 324, 237, 243, 162, 164, 163, 145, 303, 327,
	156, 166, 313, 292, 318, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 299, 298, 0,
	199, 0, 251, 134, 282, 266, 204, 135, 320, 357,
	151, 210, 325, 129, 184, 249, 170, 260, 231, 232,
	230, 233, 185, 267, 342, 137, 321, 338, 158, 300,
	301, 355, 287, 139, 336, 316, 235, 205, 206, 138,
	0, 284, 176, 188, 171, 254, 0, 187, 276, 333,
	334, 169, 358, 147, 348, 141, 148, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 140, 335, 234,
	223, 211, 181, 195, 272, 219, 273, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 154,
	0, 302, 326, 0, 0, 155, 186, 180, 271, 244,
	149, 198, 311, 209, 217, 283, 356, 258, 290, 159,
	343, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 426,
	427, 428, 429, 430, 434, 435, 439, 440, 449, 448,
	447, 450, 451, 454, 453, 455, 431, 432, 433, 436,
	437, 438, 441, 442, 445, 443, 444, 0, 128, 142,
	214, 0, 281, 183, 345, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 190, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 252, 253, 256, 257, 262,
	263, 264, 268, 269, 270, 275, 278, 280, 285, 291,
	293, 294, 295, 297, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	896, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	212, 0, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 0, 215, 0, 0, 452, 312,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 897,
	0, 900, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 893, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 239, 146, 0, 0, 0,
	203, 352, 0, 0, 0, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 0, 0,
	0, 0, 0, 168, 0, 289, 259, 341, 0, 0,
	265, 288, 216, 330, 279, 339, 340, 193, 446, 349,
	354, 0, 0, 0, 309, 178, 0, 136, 0, 274,
	173, 208, 0, 0, 0, 165, 0, 0, 0, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 299, 298,
	0, 199, 0, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 338, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	154, 0, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 427, 428, 429, 430, 434, 435, 439, 440, 449,
	448, 447, 450, 451, 454, 453, 455, 431, 432, 433,
	436, 437, 438, 441, 442, 445, 443, 444, 0, 128,
	142, 214, 0, 281, 183, 345, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 212, 1656, 0, 167, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 452,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 425, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 239, 146, 0, 0,
	0, 203, 352, 0, 0, 0, 277, 0, 317, 192,
	213, 150, 130, 144, 161, 191, 250, 286, 296, 0,
	0, 0, 0, 0, 168, 0, 289, 259, 341, 0,
	0, 265, 288, 216, 330, 279, 339, 340, 193, 446,
	349, 354, 0, 0, 0, 309, 178, 0, 136, 0,
	274, 173, 208, 0, 0, 0, 165, 0, 0, 0,
	308, 328, 152, 324, 237, 243, 162, 164, 163, 145,
	303, 327, 156, 166, 313, 292, 318, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 299,
	298, 0, 199, 0, 251, 134, 282, 266, 204, 135,
	320, 357, 151, 210, 325, 129, 184, 249, 170, 260,
	231, 232, 230, 233, 185, 267, 342, 137, 321, 338,
	158, 300, 301, 355, 287, 139, 336, 316, 235, 205,
	206, 138, 0, 284, 176, 188, 171, 254, 0, 187,
	276, 333, 334, 169, 358, 147, 348, 141, 148, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 140,
	335, 234, 223, 211, 181, 195, 272, 219, 273, 196,
	241, 240, 242, 221, 225, 0, 0, 0, 314, 344,
	359, 154, 0, 302, 326, 0, 0, 155, 186, 180,
	271, 244, 149, 198, 311, 209, 217, 283, 356, 258,
	290, 159, 343, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 427, 428, 429, 430, 434, 435, 439, 440,
	449, 448, 447, 450, 451, 454, 453, 455, 431, 432,
	433, 436, 437, 438, 441, 442, 445, 443, 444, 0,
	128, 142, 214, 0, 281, 183, 345, 0, 175, 0,
	0, 0, 0, 0, 0, 131, 132, 143, 153, 160,
	174, 179, 182, 190, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 252, 253, 256,
	257, 262, 263, 264, 268, 269, 270, 275, 278, 280,
	285, 291, 293, 294, 295, 297, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 212, 0, 0, 167, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	452, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 764, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 189, 239, 146, 0,
	0, 0, 203, 352, 0, 0, 0, 277, 0, 317,
	192, 213, 150, 130, 144, 161, 191, 250, 286, 296,
	0, 0, 0, 0, 0, 168, 0, 289, 259, 341,
	0, 0, 265, 288, 216, 330, 279, 339, 340, 193,
	446, 349, 354, 0, 0, 0, 309, 178, 0, 136,
	0, 274, 173, 208, 0, 0, 0, 165, 0, 0,
	0, 308, 328, 152, 324, 237, 243, 162, 164, 163,
	145, 303, 327, 156, 166, 313, 292, 318, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	299, 298, 0, 199, 0, 251, 134, 282, 266, 204,
	135, 320, 357, 151, 210, 325, 129, 184, 249, 170,
	260, 231, 232, 230, 233, 185, 267, 342, 137, 321,
	338, 158, 300, 301, 355, 287, 139, 336, 316, 235,
	205, 206, 138, 0, 284, 176, 188, 171, 254, 0,
	187, 276, 333, 334, 169, 358, 147, 348, 141, 148,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	140, 335, 234, 223, 211, 181, 195, 272, 219, 273,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 154, 0, 302, 326, 0, 0, 155, 186,
	180, 271, 244, 149, 198, 311, 209, 217, 283, 356,
	258, 290, 159, 343, 310, 0, 0, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 426, 427, 428, 429, 430, 434, 435, 439,
	440, 449, 448, 447, 450, 451, 454, 453, 455, 431,
	432, 433, 436, 437, 438, 441, 442, 445, 443, 444,
	0, 128, 142, 214, 0, 281, 183, 345, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 190, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 252, 253,
	256, 257, 262, 263, 264, 268, 269, 270, 275, 278,
	280, 285, 291, 293, 294, 295, 297, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 212, 0, 0, 167, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 0, 215, 0,
	0, 452, 312, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 425, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 239, 146,
	0, 0, 0, 203, 352, 0, 0, 0, 277, 0,
	317, 192, 213, 150, 130, 144, 161, 191, 250, 286,
	296, 0, 0, 0, 0, 0, 168, 0, 289, 259,
	341, 0, 0, 265, 288, 216, 330, 279, 339, 340,
	193, 446, 349, 354, 0, 0, 0, 309, 178, 0,
	136, 0, 274, 173, 208, 0, 0, 0, 165, 0,
	0, 0, 308, 328, 152, 324, 237, 243, 162, 164,
	163, 145, 303, 327, 156, 166, 313, 292, 318, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 299, 298, 0, 199, 0, 251, 134, 282, 266,
	204, 135, 320, 357, 151, 210, 325, 129, 184, 249,
	170, 260, 231, 232, 230, 233, 185, 267, 342, 137,
	321, 338, 158, 300, 301, 355, 287, 139, 336, 316,
	235, 205, 206, 138, 0, 284, 176, 188, 171, 254,
	0, 187, 276, 333, 334, 169, 358, 147, 348, 141,
	148, 347, 246, 0, 245, 350, 329, 337, 236, 224,
	0, 140, 335, 234, 223, 211, 181, 195, 272, 219,
	273, 196, 241, 240, 242, 221, 225, 0, 0, 0,
	314, 344, 359, 154, 0, 302, 326, 0, 0, 155,
	186, 180, 271, 244, 149, 198, 311, 209, 217, 283,
	356, 258, 290, 159, 343, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 427, 428, 429, 430, 434, 435,
	439, 440, 449, 448, 447, 450, 451, 454, 453, 455,
	431, 432, 433, 436, 437, 438, 441, 442, 445, 443,
	444, 0, 128, 142, 214, 0, 281, 183, 345, 0,
	175, 0, 0, 0, 0, 0, 0, 131, 132, 143,
	153, 160, 174, 179, 182, 190, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 252,
	253, 256, 257, 262, 263, 264, 268, 269, 270, 275,
	278, 280, 285, 291, 293, 294, 295, 297, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 212, 0, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 0, 215,
	0, 0, 452, 312, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 0, 764, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 239,
	146, 0, 0, 0, 203, 352, 0, 0, 0, 277,
	0, 317, 192, 213, 150, 130, 144, 161, 191, 250,
	286, 296, 0, 0, 0, 0, 0, 168, 0, 289,
	259, 341, 0, 0, 265, 288, 216, 330, 279, 339,
	340, 193, 446, 349, 354, 0, 0, 0, 309, 178,
	0, 136, 0, 274, 173, 208, 0, 0, 0, 165,
	0, 0, 0, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 299, 298, 0, 199, 0, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 154, 0, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 427, 428, 429, 430, 434,
	435, 439, 440, 449, 448, 447, 450, 451, 454, 453,
	455, 431, 432, 433, 436, 437, 438, 441, 442, 445,
	443, 444, 0, 128, 142, 214, 0, 281, 183, 345,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 212, 0, 0, 167, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 0,
	215, 0, 0, 452, 312, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 897, 0, 900, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	239, 146, 0, 0, 0, 203, 352, 0, 0, 0,
	277, 0, 317, 192, 213, 150, 130, 144, 161, 191,
	250, 286, 296, 0, 0, 0, 0, 0, 168, 0,
	289, 259, 341, 0, 0, 265, 288, 216, 330, 279,
	339, 340, 193, 446, 349, 354, 0, 0, 0, 309,
	178, 0, 136, 0, 274, 173, 208, 0, 0, 0,
	165, 0, 0, 0, 308, 328, 152, 324, 237, 243,
	162, 164, 163, 145, 303, 327, 156, 166, 313, 292,
	318, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 299, 298, 0, 199, 0, 251, 134,
	282, 266, 204, 135, 320, 357, 151, 210, 325, 129,
	184, 249, 170, 260, 231, 232, 230, 233, 185, 267,
	342, 137, 321, 338, 158, 300, 301, 355, 287, 139,
	336, 316, 235, 205, 206, 138, 0, 284, 176, 188,
	171, 254, 0, 187, 276, 333, 334, 169, 358, 147,
	348, 141, 148, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 140, 335, 234, 223, 211, 181, 195,
	272, 219, 273, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 154, 0, 302, 326, 0,
	0, 155, 186, 180, 271, 244, 149, 198, 311, 209,
	217, 283, 356, 258, 290, 159, 343, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 426, 427, 428, 429, 430,
	434, 435, 439, 440, 449, 448, 447, 450, 451, 454,
	453, 455, 431, 432, 433, 436, 437, 438, 441, 442,
	445, 443, 444, 0, 128, 142, 214, 0, 281, 183,
	345, 0, 175, 0, 0, 0, 0, 0, 0, 131,
	132, 143, 153, 160, 174, 179, 182, 190, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 252, 253, 256, 257, 262, 263, 264, 268, 269,
	270, 275, 278, 280, 285, 291, 293, 294, 295, 297,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 212, 0, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	0, 215, 0, 0, 452, 312, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 239, 146, 0, 0, 0, 203, 352, 0, 0,
	0, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 0, 0, 0, 0, 0, 168,
	0, 289, 259, 341, 0, 0, 265, 288, 216, 330,
	279, 339, 340, 193, 446, 349, 354, 0, 0, 0,
	309, 178, 0, 136, 0, 274, 173, 208, 0, 0,
	0, 165, 0, 0, 0, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 299, 298, 0, 199, 0, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 154, 0, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 426, 427, 428, 429,
	430, 434, 435, 439, 440, 449, 448, 447, 450, 451,
	454, 453, 455, 431, 432, 433, 436, 437, 438, 441,
	442, 445, 443, 444, 0, 128, 142, 214, 0, 281,
	183, 345, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 212, 452, 0,
	167, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 0, 215, 0, 0, 0, 312, 238, 0, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 910, 909, 919, 920, 912, 913, 914,
	915, 916, 917, 918, 911, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 239, 146, 0, 0, 0, 203, 352, 0,
	0, 0, 277, 0, 317, 192, 213, 150, 130, 144,
	161, 191, 250, 286, 296, 0, 0, 0, 446, 0,
	168, 0, 289, 259, 341, 0, 0, 265, 288, 216,
	330, 279, 339, 340, 193, 0, 349, 354, 0, 0,
	0, 309, 178, 0, 136, 0, 274, 173, 208, 0,
	0, 0, 165, 0, 0, 0, 308, 328, 152, 324,
	237, 243, 162, 164, 163, 145, 303, 327, 156, 166,
	313, 292, 318, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 299, 298, 0, 199, 0,
	251, 134, 282, 266, 204, 135, 320, 357, 151, 210,
	325, 129, 184, 249, 170, 260, 231, 232, 230, 233,
	185, 267, 342, 137, 321, 338, 158, 300, 301, 355,
	287, 139, 336, 316, 235, 205, 206, 138, 0, 284,
	176, 188, 171, 254, 0, 187, 276, 333, 334, 169,
	358, 147, 348, 141, 148, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 140, 335, 234, 223, 211,
	181, 195, 272, 219, 273, 196, 241, 240, 242, 221,
	225, 0, 0, 0, 314, 344, 359, 154, 0, 302,
	326, 0, 0, 155, 186, 180, 271, 244, 149, 198,
	311, 209, 217, 283, 356, 258, 290, 159, 343, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	426, 427, 428, 429, 430, 434, 435, 439, 440, 449,
	448, 447, 450, 451, 454, 453, 455, 431, 432, 433,
	436, 437, 438, 441, 442, 445, 443, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 142, 214, 0,
	281, 183, 345, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 190,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 252, 253, 256, 257, 262, 263, 264,
	268, 269, 270, 275, 278, 280, 285, 291, 293, 294,
	295, 297, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 35, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 212,
	0, 0, 167, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 1360, 215, 0, 0, 0, 312, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 239, 146, 0, 0, 0, 203,
	352, 0, 0, 0, 277, 0, 317, 192, 213, 150,
	130, 144, 161, 191, 250, 286, 296, 0, 0, 0,
	0, 0, 168, 0, 289, 259, 341, 0, 0, 265,
	288, 216, 330, 279, 339, 340, 193, 0, 349, 354,
	0, 0, 0, 309, 178, 0, 136, 0, 274, 173,
	208, 0, 0, 0, 165, 0, 0, 0, 308, 328,
	152, 324, 237, 243, 162, 164, 163, 145, 303, 327,
	156, 166, 313, 292, 318, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 299, 298, 0,
	199, 0, 251, 134, 282, 266, 204, 135, 320, 357,
	151, 210, 325, 129, 184, 249, 170, 260, 231, 232,
	230, 233, 185, 267, 342, 137, 321, 338, 158, 300,
	301, 355, 287, 139, 336, 316, 235, 205, 206, 138,
	0, 284, 176, 188, 171, 254, 0, 187, 276, 333,
	334, 169, 358, 147, 348, 141, 148, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 140, 335, 234,
	223, 211, 181, 195, 272, 219, 273, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 154,
	0, 302, 326, 0, 0, 155, 186, 180, 271, 244,
	149, 198, 311, 209, 217, 283, 356, 258, 290, 159,
	343, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 142,
	214, 79, 281, 183, 345, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 190, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 252, 253, 256, 257, 262,
	263, 264, 268, 269, 270, 275, 278, 280, 285, 291,
	293, 294, 295, 297, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 1046, 0, 0, 0,
	212, 0, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 0, 215, 0, 0, 0, 312,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 604,
	0, 1045, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 239, 146, 0, 0, 0,
	203, 352, 0, 0, 0, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 0, 0,
	0, 0, 0, 168, 0, 289, 259, 341, 0, 0,
	265, 288, 216, 330, 279, 339, 340, 193, 0, 349,
	354, 0, 0, 0, 309, 178, 0, 136, 0, 274,
	173, 208, 0, 0, 0, 165, 0, 0, 0, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 299, 298,
	0, 199, 0, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 338, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	154, 0, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	142, 214, 0, 281, 183, 345, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 212, 0, 0, 167, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 0,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 239, 146, 0, 0,
	0, 203, 352, 0, 0, 0, 277, 0, 317, 192,
	213, 150, 130, 144, 161, 191, 250, 286, 296, 0,
	0, 0, 0, 0, 168, 0, 289, 259, 341, 0,
	0, 265, 288, 216, 330, 279, 339, 340, 193, 0,
	349, 354, 0, 0, 0, 309, 178, 0, 136, 0,
	274, 173, 208, 0, 0, 0, 165, 0, 0, 0,
	308, 328, 152, 324, 237, 243, 162, 164, 163, 145,
	303, 327, 156, 166, 313, 292, 318, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 299,
	298, 0, 199, 0, 251, 134, 282, 266, 204, 135,
	320, 357, 151, 210, 325, 129, 184, 249, 170, 260,
	231, 232, 230, 233, 185, 267, 342, 137, 321, 338,
	158, 300, 301, 355, 287, 139, 336, 316, 235, 205,
	206, 138, 0, 284, 176, 188, 171, 254, 0, 187,
	276, 333, 334, 169, 358, 147, 348, 141, 148, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 140,
	335, 234, 223, 211, 181, 195, 272, 219, 273, 196,
	241, 240, 242, 221, 225, 0, 0, 0, 314, 344,
	359, 154, 0, 302, 326, 0, 0, 155, 186, 180,
	271, 244, 149, 198, 311, 209, 217, 283, 356, 258,
	290, 159, 343, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 142, 214, 0, 281, 183, 345, 0, 175, 0,
	0, 0, 0, 0, 0, 131, 132, 143, 153, 160,
	174, 179, 182, 190, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 252, 253, 256,
	257, 262, 263, 264, 268, 269, 270, 275, 278, 280,
	285, 291, 293, 294, 295, 297, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 212, 0, 0, 167, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	0, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 189, 239, 146, 0,
	0, 0, 203, 352, 0, 0, 0, 277, 0, 317,
	192, 213, 150, 130, 144, 161, 191, 250, 286, 296,
	0, 0, 0, 0, 0, 168, 0, 289, 259, 341,
	0, 0, 265, 288, 216, 330, 279, 339, 340, 193,
	0, 349, 354, 0, 0, 0, 309, 178, 0, 136,
	0, 274, 173, 208, 0, 0, 0, 165, 0, 0,
	0, 308, 328, 152, 324, 237, 243, 162, 164, 163,
	145, 303, 327, 156, 166, 313, 292, 318, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	299, 298, 0, 199, 0, 251, 134, 282, 266, 204,
	135, 320, 357, 151, 210, 325, 129, 184, 249, 170,
	260, 231, 232, 230, 233, 185, 267, 342, 137, 321,
	338, 158, 300, 301, 355, 287, 139, 336, 316, 235,
	205, 206, 138, 0, 284, 176, 188, 171, 254, 0,
	187, 276, 333, 334, 169, 358, 147, 348, 141, 148,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	140, 335, 234, 223, 211, 181, 195, 272, 219, 273,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 154, 0, 302, 326, 0, 0, 155, 186,
	180, 271, 244, 149, 198, 311, 209, 217, 283, 356,
	258, 290, 159, 343, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 142, 214, 0, 281, 183, 345, 0, 175,
	0, 0, 0, 0, 0, 0, 131, 132, 143, 153,
	160, 174, 179, 182, 190, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 252, 253,
	256, 257, 262, 263, 264, 268, 269, 270, 275, 278,
	280, 285, 291, 293, 294, 295, 297, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 1015, 177, 0,
	0, 0, 0, 212, 0, 0, 167, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 0, 215, 0,
	0, 0, 312, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 189, 239, 146,
	0, 0, 0, 203, 352, 0, 0, 0, 277, 0,
	317, 192, 213, 150, 130, 144, 161, 191, 250, 286,
	296, 0, 0, 0, 0, 0, 168, 0, 289, 259,
	341, 0, 0, 265, 288, 216, 330, 279, 339, 340,
	193, 0, 349, 354, 0, 0, 0, 309, 178, 0,
	136, 0, 274, 173, 208, 0, 0, 0, 165, 0,
	0, 0, 308, 328, 152, 324, 237, 243, 162, 164,
	163, 145, 303, 327, 156, 166, 313, 292, 318, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 299, 298, 0, 199, 0, 251, 134, 282, 266,
	204, 135, 320, 357, 151, 210, 325, 129, 184, 249,
	170, 260, 231, 232, 230, 233, 185, 267, 342, 137,
	321, 338, 158, 300, 301, 355, 287, 139, 336, 316,
	235, 205, 206, 138, 0, 284, 176, 188, 171, 254,
	0, 187, 276, 333, 334, 169, 358, 147, 348, 141,
	148, 347, 246, 0, 245, 350, 329, 337, 236, 224,
	0, 140, 335, 234, 223, 211, 181, 195, 272, 219,
	273, 196, 241, 240, 242, 221, 225, 0, 0, 0,
	314, 344, 359, 154, 0, 302, 326, 0, 0, 155,
	186, 180, 271, 244, 149, 198, 311, 209, 217, 283,
	356, 258, 290, 159, 343, 310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 142, 214, 0, 281, 183, 345, 0,
	175, 0, 0, 0, 0, 0, 0, 131, 132, 143,
	153, 160, 174, 179, 182, 190, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 252,
	253, 256, 257, 262, 263, 264, 268, 269, 270, 275,
	278, 280, 285, 291, 293, 294, 295, 297, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 323, 0,
	0, 0, 567, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 212, 0, 0, 167, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 0, 215,
	0, 0, 0, 312, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 189, 239,
	146, 0, 0, 0, 203, 352, 0, 0, 0, 277,
	0, 317, 192, 213, 150, 130, 144, 161, 191, 250,
	286, 296, 0, 0, 0, 0, 0, 168, 0, 289,
	259, 341, 0, 0, 265, 288, 216, 330, 279, 339,
	340, 193, 0, 349, 354, 0, 0, 0, 309, 178,
	0, 136, 0, 274, 173, 208, 0, 0, 0, 165,
	0, 0, 0, 308, 328, 152, 324, 237, 243, 162,
	164, 163, 145, 303, 327, 156, 166, 313, 292, 318,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 299, 298, 0, 199, 0, 251, 134, 282,
	266, 204, 135, 320, 357, 151, 210, 325, 129, 184,
	249, 170, 260, 231, 232, 230, 233, 185, 267, 342,
	137, 321, 338, 158, 300, 301, 355, 287, 139, 336,
	316, 235, 205, 206, 138, 0, 284, 176, 188, 171,
	254, 0, 187, 276, 333, 334, 169, 358, 147, 348,
	141, 148, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 140, 335, 234, 223, 211, 181, 195, 272,
	219, 273, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 154, 0, 302, 326, 0, 0,
	155, 186, 180, 271, 244, 149, 198, 311, 209, 217,
	283, 356, 258, 290, 159, 343, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 142, 214, 0, 281, 183, 345,
	0, 175, 0, 0, 0, 0, 0, 0, 131, 132,
	143, 153, 160, 174, 179, 182, 190, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	252, 253, 256, 257, 262, 263, 264, 268, 269, 270,
	275, 278, 280, 285, 291, 293, 294, 295, 297, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 212, 0, 0, 167, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 0,
	215, 0, 0, 0, 312, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 189,
	239, 146, 0, 123, 0, 203, 352, 0, 0, 0,
	277, 0, 317, 192, 213, 150, 130, 144, 161, 191,
	250, 286, 296, 0, 0, 0, 0, 0, 168, 0,
	289, 259, 341, 0, 0, 265, 288, 216, 330, 279,
	339, 340, 193, 0, 349, 354, 0, 0, 0, 309,
	178, 0, 136, 0, 274, 173, 208, 0, 0, 0,
	165, 0, 0, 0, 308, 328, 152, 324, 237, 243,
	162, 164, 163, 145, 303, 327, 156, 166, 313, 292,
	318, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 299, 298, 0, 199, 0, 251, 134,
	282, 266, 204, 135, 320, 357, 151, 210, 325, 129,
	184, 249, 170, 260, 231, 232, 230, 233, 185, 267,
	342, 137, 321, 338, 158, 300, 301, 355, 287, 139,
	336, 316, 235, 205, 206, 138, 0, 284, 176, 188,
	171, 254, 0, 187, 276, 333, 334, 169, 358, 147,
	348, 141, 148, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 140, 335, 234, 223, 211, 181, 195,
	272, 219, 273, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 154, 0, 302, 326, 0,
	0, 155, 186, 180, 271, 244, 149, 198, 311, 209,
	217, 283, 356, 258, 290, 159, 343, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 142, 214, 0, 281, 183,
	345, 0, 175, 0, 0, 0, 0, 0, 0, 131,
	132, 143, 153, 160, 174, 179, 182, 190, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 252, 253, 256, 257, 262, 263, 264, 268, 269,
	270, 275, 278, 280, 285, 291, 293, 294, 295, 297,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 212, 0, 0, 167,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	0, 215, 0, 0, 0, 312, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	189, 239, 146, 0, 0, 0, 203, 352, 0, 0,
	0, 277, 0, 317, 192, 213, 150, 130, 144, 161,
	191, 250, 286, 296, 0, 0, 0, 0, 0, 168,
	0, 289, 259, 341, 0, 0, 265, 288, 216, 330,
	279, 339, 340, 193, 0, 349, 354, 0, 0, 0,
	309, 178, 0, 136, 0, 274, 173, 208, 0, 0,
	0, 165, 0, 0, 0, 308, 328, 152, 324, 237,
	243, 162, 164, 163, 145, 303, 327, 156, 166, 313,
	292, 318, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 299, 298, 0, 199, 0, 251,
	134, 282, 266, 204, 135, 320, 357, 151, 210, 325,
	129, 184, 249, 170, 260, 231, 232, 230, 233, 185,
	267, 342, 137, 321, 338, 158, 300, 301, 355, 287,
	139, 336, 316, 235, 205, 206, 138, 0, 284, 176,
	188, 171, 254, 0, 187, 276, 333, 334, 169, 358,
	147, 348, 141, 148, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 140, 335, 234, 223, 211, 181,
	195, 272, 219, 273, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 154, 0, 302, 326,
	0, 0, 155, 186, 180, 271, 244, 149, 198, 311,
	209, 217, 283, 356, 258, 290, 159, 343, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 142, 214, 0, 281,
	183, 345, 0, 175, 0, 0, 0, 0, 0, 0,
	131, 132, 143, 153, 160, 174, 179, 182, 190, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 252, 253, 256, 257, 262, 263, 264, 268,
	269, 270, 275, 278, 280, 285, 291, 293, 294, 295,
	297, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 212, 0, 0,
	167, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 0, 215, 0, 0, 0, 312, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 0, 0, 0,
	0, 189, 239, 146, 0, 0, 0, 203, 352, 0,
	0, 0, 277, 0, 317, 192, 213, 150, 130, 144,
	161, 191, 250, 286, 296, 0, 0, 0, 0, 0,
	168, 0, 289, 259, 341, 0, 0, 265, 288, 216,
	330, 279, 339, 340, 193, 0, 349, 354, 0, 0,
	0, 309, 178, 0, 136, 0, 274, 173, 208, 0,
	0, 0, 165, 0, 0, 0, 308, 328, 152, 324,
	237, 243, 162, 164, 163, 145, 303, 327, 156, 166,
	313, 292, 318, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 299, 298, 0, 199, 0,
	251, 134, 282, 266, 204, 135, 320, 357, 151, 210,
	325, 129, 184, 249, 170, 260, 231, 232, 230, 233,
	185, 267, 342, 137, 321, 338, 158, 300, 301, 355,
	287, 139, 336, 316, 235, 205, 206, 138, 0, 284,
	176, 188, 171, 254, 0, 187, 276, 333, 334, 169,
	358, 147, 348, 141, 148, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 140, 335, 234, 223, 211,
	181, 195, 272, 219, 273, 196, 241, 240, 242, 221,
	225, 0, 0, 0, 314, 344, 359, 154, 0, 302,
	326, 0, 0, 155, 186, 180, 271, 244, 149, 198,
	311, 209, 217, 283, 356, 258, 290, 159, 343, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 142, 214, 0,
	281, 183, 345, 0, 175, 0, 0, 0, 0, 0,
	0, 131, 132, 143, 153, 160, 174, 179, 182, 190,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 252, 253, 256, 257, 262, 263, 264,
	268, 269, 270, 275, 278, 280, 285, 291, 293, 294,
	295, 297, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 212, 0,
	0, 167, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 0, 215, 0, 0, 0, 312, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 189, 239, 146, 0, 0, 0, 203, 352,
	0, 0, 0, 277, 0, 317, 192, 213, 150, 130,
	144, 161, 191, 250, 286, 296, 0, 0, 0, 0,
	0, 168, 0, 289, 259, 341, 0, 0, 265, 288,
	216, 330, 279, 339, 340, 193, 0, 349, 354, 0,
	0, 0, 309, 178, 0, 136, 0, 274, 173, 208,
	0, 0, 0, 165, 0, 0, 0, 308, 328, 152,
	324, 237, 243, 162, 164, 163, 145, 303, 327, 156,
	166, 313, 292, 318, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 299, 298, 0, 199,
	0, 251, 134, 282, 266, 204, 135, 320, 357, 151,
	210, 325, 129, 184, 249, 170, 260, 231, 232, 230,
	233, 185, 267, 342, 137, 321, 338, 158, 300, 301,
	355, 287, 139, 336, 316, 235, 205, 206, 138, 0,
	284, 176, 188, 171, 254, 0, 187, 276, 333, 334,
	169, 358, 147, 348, 141, 148, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 140, 335, 234, 223,
	211, 181, 195, 272, 219, 273, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 154, 0,
	302, 326, 0, 0, 155, 186, 180, 271, 244, 149,
	198, 311, 209, 217, 283, 356, 258, 290, 159, 343,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 142, 214,
	0, 281, 183, 345, 0, 175, 0, 0, 0, 0,
	0, 0, 131, 132, 143, 153, 160, 174, 179, 182,
	190, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 252, 253, 256, 257, 262, 263,
	264, 268, 269, 270, 275, 278, 280, 285, 291, 293,
	294, 295, 297, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 212,
	0, 0, 167, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 0, 215, 0, 0, 0, 312, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 189, 239, 146, 0, 0, 0, 203,
	352, 0, 0, 0, 277, 0, 317, 192, 213, 150,
	130, 144, 161, 191, 250, 286, 296, 0, 0, 0,
	0, 0, 168, 0, 289, 259, 341, 0, 0, 265,
	288, 216, 330, 279, 339, 340, 193, 0, 349, 354,
	0, 0, 0, 309, 178, 0, 136, 0, 274, 173,
	208, 0, 0, 0, 165, 0, 0, 0, 308, 328,
	152, 324, 237, 243, 162, 164, 163, 145, 303, 327,
	156, 166, 313, 292, 318, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 299, 298, 0,
	199, 0, 251, 134, 282, 266, 204, 135, 320, 357,
	151, 210, 325, 129, 184, 249, 170, 260, 231, 232,
	230, 233, 185, 267, 342, 137, 321, 338, 158, 300,
	301, 355, 287, 139, 336, 316, 235, 205, 206, 138,
	0, 284, 176, 188, 171, 254, 0, 187, 276, 333,
	334, 169, 358, 147, 348, 141, 587, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 140, 335, 234,
	223, 211, 181, 195, 272, 219, 273, 196, 241, 240,
	242, 583, 225, 0, 0, 0, 314, 344, 359, 154,
	0, 302, 326, 0, 0, 155, 186, 180, 271, 588,
	586, 577, 578, 209, 217, 283, 356, 258, 290, 159,
	343, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 142,
	214, 0, 281, 183, 345, 0, 175, 0, 0, 0,
	0, 0, 0, 131, 132, 143, 153, 160, 174, 179,
	182, 190, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 252, 253, 256, 257, 262,
	263, 264, 268, 584, 585, 275, 278, 280, 285, 291,
	293, 294, 295, 297, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	212, 0, 0, 167, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 0, 215, 0, 0, 0, 312,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 189, 239, 146, 0, 0, 0,
	203, 352, 0, 0, 0, 277, 0, 317, 192, 213,
	150, 130, 144, 161, 191, 250, 286, 296, 0, 0,
	0, 0, 0, 168, 0, 289, 259, 341, 0, 0,
	265, 288, 216, 330, 279, 339, 340, 193, 0, 349,
	354, 0, 0, 0, 309, 178, 0, 136, 0, 274,
	173, 208, 0, 0, 0, 165, 0, 0, 0, 308,
	328, 152, 324, 237, 243, 162, 164, 163, 145, 303,
	327, 156, 166, 313, 292, 318, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 299, 298,
	0, 199, 0, 251, 134, 282, 266, 204, 135, 320,
	357, 151, 210, 325, 129, 184, 249, 170, 260, 231,
	232, 230, 233, 185, 267, 342, 137, 321, 1040, 158,
	300, 301, 355, 287, 139, 336, 316, 235, 205, 206,
	138, 0, 284, 176, 188, 171, 254, 0, 187, 276,
	333, 334, 169, 358, 147, 348, 141, 148, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 140, 335,
	234, 223, 211, 181, 195, 272, 219, 273, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	154, 0, 302, 326, 0, 0, 155, 186, 180, 271,
	244, 149, 198, 311, 209, 217, 283, 356, 258, 290,
	159, 343, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	142, 214, 0, 281, 183, 345, 0, 175, 0, 0,
	0, 0, 0, 0, 131, 132, 143, 153, 160, 174,
	179, 182, 190, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 252, 253, 256, 257,
	262, 263, 264, 268, 269, 270, 275, 278, 280, 285,
	291, 293, 294, 295, 297, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 212, 0, 0, 167, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 0,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 0, 0, 189, 239, 146, 0, 0,
	0, 203, 352, 0, 0, 0, 277, 0, 317, 192,
	213, 150, 130, 144, 161, 191, 250, 286, 296, 0,
	0, 0, 0, 0, 168, 0, 289, 259, 341, 0,
	0, 265, 288, 216, 330, 279, 339, 340, 193, 0,
	349, 354, 0, 0, 0, 309, 178, 0, 136, 0,
	274, 173, 208, 0, 0, 0, 165, 0, 0, 0,
	308, 328, 152, 324, 237, 243, 162, 164, 163, 145,
	303, 327, 156, 166, 313, 292, 318, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 299,
	298, 0, 199, 0, 251, 134, 282, 266, 204, 135,
	320, 357, 151, 210, 325, 129, 184, 249, 170, 260,
	231, 232, 230, 233, 185, 267, 342, 137, 321, 574,
	158, 300, 301, 355, 287, 139, 336, 316, 235, 205,
	206, 138, 0, 284, 176, 188, 171, 254, 0, 187,
	276, 333, 334, 169, 358, 147, 348, 141, 587, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 140,
	335, 234, 223, 211, 181, 195, 272, 219, 273, 196,
	241, 240, 242, 583, 225, 0, 0, 0, 314, 344,
	359, 154, 0, 302, 326, 0, 0, 155, 186, 180,
	271, 588, 586, 577, 578, 209, 217, 283, 356, 258,
	290, 159, 343, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 142, 214, 0, 281, 183, 345, 0, 175, 0,
	0, 0, 0, 0, 0, 131, 132, 143, 153, 160,
	174, 179, 182, 190, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 252, 253, 256,
	257, 262, 263, 264, 268, 584, 585, 275, 278, 280,
	285, 291, 293, 294, 295, 297, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353,
}
var yyPact = [...]int{

	3243, -1000, -319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1551, -1000, -1000, -1000, -1000, -1000,
	-1000, 666, 232, -1000, -1000, 182, 77, 25742, 451, 2570,
	26664, -1000, -1000, -1000, 145, 250, 26664, -1000, -1000, -1000,
	260, 371, 992, 1431, 990, 24, -69, -73, 126, -1000,
	1608, 1610, -1000, -1000, 296, 28, -1000, -1000, -1000, 20670,
	178, -1000, -1000, 1537, 1549, 1326, -1000, 13294, 291, 291,
	25281, 28508, -1000, 1605, 26664, 11909, -1000, 323, 26664, -156,
	286, 286, 212, 286, 286, 338, -1000, 623, -1000, -1000,
	-1000, -1000, 26664, 21131, 287, 26203, 287, 287, 287, 287,
	287, 287, 287, 26664, -1000, 510, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26664, 989, 1458, 657, 229, 8661, 8661, -1000, 651, -1000,
	194, 193, 176, 187, 58, 686, 1529, 1216, 1537, 1537,
	8661, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 231, 309,
	179, 178, 620, -1000, -1000, -1000, -1000, -1000, 1455, 1452,
	846, 1451, 440, 1448, 1262, -53, -1000, 988, 26664, -1000,
	-1000, 817, 815, -1000, 1299, 1518, 329, 26664, -1000, -116,
	1213, -1000, 1257, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1005, 1453, 745, 16060,
	1407, -1000, -1000, 700, 1574, -1000, 19287, 509, -1000, 16060,
	2933, 1216, -1000, -1000, 1216, -1000, -1000, -1000, 478, -1000,
	-1000, 17904, 17904, 17904, 17904, 17904, 17904, 17904, 17904, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, -1000, -1000, 1216, -1000, 12833, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 16060, 1216,
	1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216, 1216,
	1216, 1216, 1216, 1216, 1216, 24820, 23898, 26664, 1175, 1151,
	-1000, -1000, 508, 1208, -113, 28047, -1000, -1000, -1000, -1000,
	27125, 23437, 597, -1000, -1000, -1000, -1000, 1444, -1000, -1000,
	506, -1000, 1551, -1000, -1000, 1140, 246, -1000, 3645, 4805,
	-1000, -1000, -1000, 1261, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 26203, 1515, 297,
	985, 684, 984, 969, 967, 21131, 21131, 286, 966, 1207,
	306, 1206, 305, 994, -1000, -1000, -1000, -1000, 26664, 1491,
	1297, 26664, 963, 962, 960, 959, 21131, 21131, -1000, 11445,
	-1000, 8661, 657, -1000, 910, 16060, 286, 286, 8661, 8661,
	8661, 26664, 26664, 26664, -1000, -1000, -1000, -1000, 26664, -1000,
	-1000, 657, 657, 8661, 657, 648, 1571, 648, -1000, 648,
	-1000, -1000, 16060, -1000, 17904, 20209, 526, -1000, -1000, -1000,
	-1000, 956, 224, -1000, -1000, -1000, -1000, -1000, -1000, 955,
	440, 440, -1000, 909, 440, 1200, -1000, 576, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	440, -1000, 15599, -317, -1000, -1000, 1205, -1000, 254, -1000,
	-1000, 1326, -1000, -1000, 178, -1000, -1000, 26664, 8661, -125,
	20670, 1216, 10053, -1000, -1000, -1000, 1594, 552, 1150, -1000,
	-1000, 1204, -1000, 771, 503, 914, 1341, -1000, -1000, -1000,
	26664, -1000, 16060, 16060, 890, -1000, 21592, -1000, -1000, -1000,
	-1000, 9589, 558, 17904, 735, 599, 17904, 17904, 17904, 17904,
	17904, 17904, 17904, 17904, 17904, 17904, 17904, 17904, 17904, 17904,
	17904, 799, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	953, -1000, 178, 1025, 1025, 534, 534, 534, 534, 534,
	534, 534, 22514, 1514, 14216, 14216, 14216, 1514, 1005, 1005,
	14216, 14216, 14216, 14216, 14216, 14216, 1514, 1514, 14216, 1005,
	1005, 1005, 1005, 14216, 14216, 14216, 14216, 1514, 14216, 14216,
	14216, 1514, 1005, 1135, 689, 12833, 14216, 14216, 14216, 1005,
	16060, 16060, 15138, 14677, 16521, 14216, 14216, 1514, 654, 689,
	27125, -1000, -1000, 17443, -1000, -1000, -1000, -1000, -1000, 1005,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26203, 26203,
	14216, 14216, 14216, 14216, 225, 26664, -1000, 1160, 1295, -1000,
	-1000, -1000, 1510, 22976, 18826, -1000, 225, 1053, 23898, 26664,
	-1000, -1000, 23898, 26664, 9125, 27586, 1174, -1000, -106, -134,
	-113, -1000, -1000, 517, -1000, -1000, -1000, 12371, -1000, 10517,
	1537, 1326, 6341, 10981, -1000, 4805, 1261, -1000, -62, -1000,
	-1000, -1000, 1241, -1000, 1241, 278, -9, 1241, 1241, 1241,
	1241, 1241, -15, -15, -15, -15, -8, -1000, -1000, -1000,
	-1000, -1000, 1260, 1259, -1000, 1241, 1241, 1241, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1252, 215, 1247, 1247,
	1247, 1247, 1247, 261, 261, -1000, 16060, 1265, -1000, 26664,
	8661, 1490, 8661, 190, 1258, 1177, -1000, 86, 1145, -1000,
	915, 26664, -1000, 26664, 26664, 21131, 21131, 21131, 464, -1000,
	26664, 1202, -1000, -1000, -1000, -1000, -1000, 1201, -1000, 1145,
	-1000, -1000, -1000, -1000, -1000, -1000, 689, 951, 950, -1000,
	-1000, -1000, -1000, -1000, -1000, 650, -1000, -1000, -1000, -1000,
	657, 26664, 26664, 26664, 1506, 657, 689, 626, 1268, 1216,
	1005, -1000, -1000, 948, -1000, 1200, 1200, -1000, 1200, 440,
	1025, 1200, -1000, 1133, 1482, 904, 26664, -1000, 20670, -54,
	-1000, -128, 1514, 1005, 594, -1000, -1000, -1000, -1000, -1000,
	175, 1084, 501, -1000, 1335, 745, 745, 16060, -1000, -1000,
	-1000, 10517, 1530, -1000, 1368, 1367, 1311, -1000, -1000, 558,
	580, -1000, -1000, 854, -1000, -1000, -1000, -1000, 499, 1216,
	-1000, 3055, -1000, -1000, -1000, -1000, 735, 17904, 17904, 17904,
	626, 3055, 3022, 932, 1183, 534, 498, 498, 519, 519,
	519, 519, 519, 692, 692, -1000, -1000, -1000, 1005, -1000,
	-1000, -1000, 14216, 1127, -1000, -1000, 689, 484, 1127, 1127,
	14216, -171, -171, 1005, 1127, 1127, 1127, 1005, 1127, 14216,
	14216, 1127, -171, -171, -171, -171, 1127, 1127, 1127, 1127,
	14216, 1127, 1127, 1127, 14216, -1000, 16060, -1000, 1005, 1127,
	1127, 1127, -1000, 714, 737, 621, 1568, 1127, 593, 1561,
	1127, 718, 17904, 17904, 17904, 1127, 1127, 14216, 659, -1000,
	16060, 1005, -1000, 844, 1199, 1197, 1127, 1005, 1184, 1127,
	1127, 167, 1216, -1000, 10517, 23898, 23898, 23898, 23898, 23898,
	-1000, 1323, 1321, -1000, 1309, 1305, 1315, 20670, 1129, 1005,
	161, 22976, -1000, 1216, -1000, 19748, 538, 316, 315, 313,
	1559, 23898, 1154, -1000, 1154, -1000, 482, -1000, -1000, 27125,
	-113, -137, -1000, -1000, 1174, -1000, 811, -1000, -1000, 689,
	-1000, 477, 1453, 1514, 1169, 5877, -1000, -1000, -1000, -1000,
	246, -1000, -1000, -1000, 1254, 4128, -1000, 1392, 530, 550,
	924, 1379, -1000, -1000, 270, -64, -1000, -1000, 802, -15,
	-15, 1241, 1241, 196, 1241, -1000, -15, -1000, -1000, -1000,
	517, 1443, 517, 517, 517, 517, -15, 903, 903, -1000,
	-1000, -1000, -1000, 795, -1000, 1252, -1000, 788, -1000, -1000,
	-1000, -1000, -1000, -1000, 861, 1294, 26203, 178, 1505, -1000,
	-1000, -1000, 1618, -1000, -1000, 395, -1000, 21131, 80, 222,
	166, 21131, 21131, -1000, 303, -1000, 300, -1000, -1000, -1000,
	-1000, -1000, 8661, 26664, 21131, 8661, 8661, 1559, 947, 946,
	-1000, -1000, -1000, 648, 657, 1437, -1000, -1000, 17904, 21131,
	-1000, 171, -1000, -1000, -1000, -1000, 225, 328, -1000, -1000,
	-91, -1000, -1000, 1341, -1000, 1168, -1000, -1000, 622, 613,
	575, 255, 255, -1000, 566, 255, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 223, 1504, 10053, 10053, 1332, -1000,
	-1000, -1000, 26664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8197, 14216, -1000, 626, 3055, 2886, -1000, 17904,
	-1000, 1127, 14216, -171, 7733, -171, -171, 1127, -1000, 24359,
	-1000, -171, -171, -171, -171, -171, -171, 1127, 1127, -171,
	-1000, -1000, -1000, -1000, -171, -171, -171, -171, 1127, -171,
	-171, -171, 1005, 689, -1000, -1000, -1000, -1000, 181, 799,
	181, 17904, 17904, -1000, 17904, 17904, -1000, -1000, 17904, 3172,
	3091, 2950, -206, -1000, 1115, 634, -1000, 16060, 842, -1000,
	-1000, 17904, 17904, -1000, -1000, -1000, -1000, 1290, 10517, 1216,
	6805, -1000, 26203, 1161, -1000, 573, 567, 1295, 1251, 1279,
	1192, -1000, -1000, -1000, -1000, 1320, -1000, 1313, -1000, -1000,
	1220, -1000, -1000, 1167, 1216, 26203, 17904, 538, -1000, 1216,
	1216, 1216, 1551, 16060, 1154, -1000, -1000, 511, -1000, -1000,
	-136, -133, -1000, -1000, -1000, 10053, -1000, 6341, -1000, 6341,
	-1000, 22053, 269, 530, 274, -1000, 924, -1000, -1000, 924,
	-1000, -1000, -1000, 1248, -1000, 691, -1000, -1000, -1000, -1000,
	-1000, 17904, 1593, -1000, 1389, -1000, 1388, 897, -1000, -1000,
	1036, 517, 517, -15, -1000, -1000, 1241, -1000, 517, -1000,
	584, -1000, -1000, -1000, -1000, 517, 1119, -1000, 1108, 1166,
	-1000, 1106, 64, 26664, -1000, -1000, -1000, 1278, -1000, -1000,
	-1000, 1024, 1155, -1000, 3645, 945, 944, 943, -1000, 21131,
	56, 86, 244, 940, -1000, -1000, 26664, 21131, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 657, -1000, 17904, 3055,
	1145, -1000, -1000, -15, 26664, -1000, 1311, 594, -1000, 3738,
	-1000, 924, 537, -1000, -1000, 272, -1000, 1379, -1000, 3367,
	931, -1000, 22497, 4973, 26203, 1387, 1381, 928, 26664, 26203,
	-1000, -1000, 4920, 927, 16060, -1000, 26203, 26203, 1216, 473,
	-1000, -1000, -1000, 1148, 13294, -1000, -1000, 1005, -1000, 17904,
	3055, -171, -1000, -1000, -1000, -1000, 468, -1000, -1000, -171,
	-1000, 401, -1000, -1000, -1000, -1000, -1000, -1000, -171, -171,
	-1000, -1000, -1000, -1000, -1000, -171, -1000, -1000, -1000, -1000,
	1005, 1241, 1241, -1000, 1241, 1247, -1000, 1241, 13, 1241,
	12, 1005, 1005, 2696, 2501, 1964, 1708, 844, 17904, 17904,
	17904, 1216, -167, -1000, 689, 16060, 2839, 2769, -1000, 1474,
	1159, 1131, -1000, -1000, 13755, 1005, 1345, 1084, -1000, 20670,
	1063, -1000, 1551, 10517, 16060, 16060, -1000, -1000, 16060, 1244,
	-1000, 16060, -1000, -1000, -1000, -1000, 26203, 160, -1000, 16060,
	1063, 734, -1000, 26203, 26203, 26203, 1537, 689, -1000, -1000,
	-1000, -1000, 5877, -1000, 1059, -1000, 1241, 1241, 1380, -1000,
	1379, 924, -1000, -1000, -1000, 26203, -1000, 3055, -81, -1000,
	-1000, -1000, -1000, -1000, -1000, 517, -1000, -1000, -1000, -1000,
	-1000, -15, 896, -15, 780, -1000, 765, -1000, -1000, -268,
	1240, -1000, 178, 26664, 94, 395, -1000, 3645, 3645, 3645,
	1145, 87, 696, 70, -1000, 1502, -1000, -1000, -1000, 3055,
	-96, -1000, -1000, -1000, 4920, 251, 3645, 3645, -1000, 1265,
	530, 1377, 274, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	926, -1000, 437, -1000, 299, 251, 4920, 689, 570, 1476,
	-1000, 10053, 1555, 23898, -1000, -1000, -1000, 3055, -1000, 7269,
	-1000, 1005, 1547, -1000, -1000, -1000, -1000, -1000, 191, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 17904, 17904, 17904,
	17904, -1000, 844, 844, 844, 17904, 1005, 878, 689, 17904,
	17904, 1372, -1000, 1216, -1000, -1000, 1216, 173, -1000, 26203,
	1537, -1000, 689, 689, 689, 26203, 689, 1055, -1000, 1216,
	18365, -1000, 20670, 1049, 1049, 1049, -1000, 518, 22053, 1487,
	1487, -1000, -1000, 1047, -1000, -1000, 517, -1000, 517, 1020,
	1018, -1000, 22053, -1000, 1528, -1000, 94, -1000, 867, 138,
	143, -1000, 137, 136, 134, 133, 118, -1000, -1000, -1000,
	-1000, -1000, 164, 86, -1000, 239, 860, 1424, 1416, 1081,
	1014, -1000, -1000, 925, -1000, -1000, 1239, 924, -1000, 1223,
	-1000, 923, -1000, -1000, 26203, -1000, 251, 1471, 1468, 1216,
	-1000, 1553, 1546, 1154, 13294, -1000, -1000, -1000, 16060, -1000,
	-1000, 844, 844, 844, 844, -1000, -1000, -1000, 51, -1000,
	-1000, 844, 844, 1586, -1000, 1131, 1216, -1000, 178, -1000,
	-1000, 1045, -1000, 26203, -1000, -1000, 538, -1000, -1000, -1000,
	518, -1000, 921, 566, 858, -1000, -1000, -1000, 238, -1000,
	-1000, -1000, -1000, 1043, -1000, 168, 4887, -1000, -1000, -1000,
	-1000, -1000, -1000, 1430, 1429, 148, 233, 919, -1000, 65,
	-1000, -1000, 290, 1395, 1400, 1545, 23898, -1000, -1000, 270,
	270, 22053, 1265, 22053, -1000, -1000, -1000, 17904, -1000, 198,
	-1000, 16060, 16060, 1555, -1000, 1089, -1000, -1000, -1000, -1000,
	1005, 146, -228, -1000, -1000, 10517, 1131, 1005, -1000, -1000,
	-1000, -1000, -1000, 751, -1000, 26664, 518, 159, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16060, 16060, 5413, 4887,
	-1000, -1000, -1000, -1000, 61, -1000, 1493, -1000, 1220, 725,
	1416, 1544, 1411, 1404, -1000, 851, 1154, 1017, 1219, 1011,
	3055, 1008, -1000, 26203, -1000, 689, 1087, -1000, 689, 1553,
	-1000, 1005, -1000, 1331, -214, -231, 1026, -1000, -1000, 1218,
	-1000, 518, 152, -1000, 794, 830, 109, 99, 3423, -1000,
	-1000, -1000, -1000, -320, -1000, -1000, 845, -1000, 1421, -1000,
	841, -1000, 1540, 1539, -1000, 1555, 518, 22053, 518, -1000,
	198, 1344, 16060, -1000, -1000, -1000, 1329, -1000, 26203, -1000,
	918, 913, 849, -1000, 16060, 4887, 1526, 1524, 1523, 1467,
	10053, 4862, -1000, -1000, -1000, 827, 821, 1553, -1000, 1004,
	-1000, -1000, 204, -1000, -219, 998, 221, -1000, -1000, 661,
	4887, -1000, 816, -321, 258, 178, 256, 17904, -1000, -1000,
	-1000, -1000, -1000, -1000, 518, 184, -229, 1275, -1000, -1000,
	-1000, -1000, -1000, -1000, 4887, -1000, -322, 4887, 230, -1000,
	-1000, -1000, 4710, -1000, -1000, -1000, -1000, 95, -1000, -1000,
	3055, -1000, 1216, -251, 1271, 1253, 1589, -1000, -323, 4685,
	-324, 285, 4887, 721, -1000, 16060, -1000, 256, -1000, 16982,
	-1000, -1000, 1584, -1000, 1577, 470, 470, 4533, 627, 4887,
	-1000, -327, 283, 4887, -1000, 774, -1000, 844, 1005, -1000,
	-1000, -1000, 265, 756, -1000, -1000, -1000, 4319, -1000, -329,
	4887, -1000, -1000, -1000, -1000, -1000, 282, 4012, -332, -1000,
	281, 4887, -1000,
}
var yyPgo = [...]int{

	0, 1992, 1991, 61, 1990, 172, 1989, 1988, 1986, 17,
	14, 12, 19, 1985, 1709, 1707, 1705, 1703, 1982, 1696,
	1980, 7, 1979, 1978, 1682, 1974, 1965, 1678, 1672, 1668,
	1657, 1953, 1952, 1951, 9, 1941, 5, 1940, 4, 121,
	137, 1936, 3, 1933, 1932, 10, 1930, 1928, 1652, 1926,
	1925, 1923, 1920, 66, 1919, 1650, 1646, 1918, 1917, 1641,
	1638, 1916, 1915, 1636, 1634, 1623, 1914, 154, 1911, 1910,
	1909, 213, 77, 120, 1908, 1905, 1903, 87, 54, 1816,
	95, 42, 85, 787, 1902, 21, 76, 1901, 1898, 115,
	106, 1896, 130, 1891, 68, 158, 75, 1886, 1882, 136,
	1881, 1880, 1879, 113, 1878, 1874, 765, 1870, 1867, 135,
	1865, 50, 32, 29, 1864, 1863, 1862, 1861, 1859, 119,
	227, 1856, 1853, 123, 1851, 63, 1847, 1846, 144, 1845,
	1842, 1841, 112, 33, 1840, 46, 1839, 45, 53, 1837,
	30, 1815, 111, 1814, 1813, 35, 24, 1812, 80, 1811,
	39, 1810, 116, 228, 302, 16, 44, 48, 59, 108,
	83, 34, 28, 100, 78, 65, 36, 1807, 126, 1806,
	67, 128, 110, 114, 127, 1802, 1801, 1798, 891, 1797,
	103, 60, 1796, 91, 888, 140, 96, 1794, 69, 1792,
	1791, 1790, 1789, 56, 99, 1788, 1786, 74, 118, 41,
	1165, 1793, 1975, 43, 129, 1785, 27, 1782, 1780, 3271,
	102, 86, 89, 1779, 84, 38, 37, 1775, 1774, 1773,
	1772, 1767, 1766, 1155, 1765, 1764, 1762, 1761, 157, 58,
	1760, 1759, 107, 82, 1755, 1751, 1750, 1749, 105, 57,
	125, 1748, 94, 97, 70, 1746, 1745, 1741, 1738, 52,
	31, 1737, 1736, 1735, 79, 64, 1730, 51, 23, 26,
	49, 8, 73, 93, 1729, 22, 1728, 92, 2, 6,
	11, 1725, 1724, 1722, 1720, 1718, 1717, 1715, 55, 1713,
	1712, 40, 1711, 1701, 1699, 25, 1693, 1691, 1686, 117,
	98, 90, 104, 1684, 88, 1676, 1666, 145, 101, 1664,
	47, 1654, 1644, 0, 109, 131, 124, 1629, 1620,
}
var yyR1 = [...]int{

	0, 302, 302, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 66, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 88, 88, 92, 92, 6,
	6, 7, 7, 9, 9, 70, 70, 10, 11, 11,
	11, 11, 305, 305, 101, 101, 99, 99, 100, 100,
	163, 163, 12, 12, 12, 168, 168, 173, 173, 173,
	176, 176, 176, 176, 155, 156, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 295, 295,
	2, 276, 276, 277, 277, 278, 278, 278, 278, 279,
	279, 280, 280, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 25, 196, 196, 297, 297, 297, 297,
	291, 291, 291, 293, 293, 292, 292, 292, 294, 294,
	298, 298, 298, 298, 298, 300, 300, 300, 300, 300,
	300, 301, 301, 301, 299, 299, 46, 46, 47, 47,
	47, 151, 151, 151, 13, 13, 13, 13, 13, 20,
	22, 22, 35, 35, 36, 23, 23, 23, 23, 37,
	37, 38, 26, 26, 26, 26, 26, 26, 44, 44,
	44, 43, 43, 42, 42, 42, 42, 42, 42, 24,
	24, 24, 24, 45, 45, 40, 40, 39, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 19, 275, 275, 275,
	34, 34, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 51,
	251, 252, 252, 252, 252, 252, 252, 252, 252, 239,
	239, 240, 216, 216, 216, 216, 216, 216, 216, 216,
	215, 215, 215, 215, 219, 219, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 218, 218, 218, 218, 218,
	218, 218, 218, 220, 220, 220, 220, 220, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 222, 222, 222, 222, 222, 222, 222,
	222, 238, 238, 223, 223, 232, 232, 233, 233, 233,
	230, 230, 231, 231, 226, 227, 234, 228, 228, 228,
	229, 229, 229, 237, 237, 237, 237, 224, 241, 241,
	261, 261, 260, 260, 259, 259, 259, 250, 250, 256,
	256, 256, 256, 256, 256, 256, 245, 245, 245, 244,
	244, 246, 246, 249, 249, 258, 258, 257, 257, 242,
	242, 242, 262, 262, 262, 262, 262, 243, 243, 243,
	243, 263, 247, 247, 248, 248, 248, 269, 270, 268,
	268, 268, 268, 268, 116, 116, 116, 253, 253, 253,
	254, 254, 254, 255, 255, 255, 273, 273, 272, 272,
	48, 48, 49, 54, 54, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 150, 150, 150, 50, 194, 194, 267, 267,
	266, 264, 264, 265, 265, 15, 15, 52, 52, 296,
	296, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	271, 271, 271, 17, 17, 55, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 84, 182, 182, 181, 181, 180, 180,
	180, 183, 183, 183, 213, 213, 213, 57, 57, 62,
	62, 65, 65, 65, 63, 64, 28, 29, 29, 29,
	29, 30, 195, 195, 60, 60, 61, 61, 61, 61,
	76, 76, 307, 307, 59, 59, 58, 58, 18, 308,
	67, 68, 68, 69, 69, 69, 186, 186, 73, 73,
	73, 71, 71, 71, 72, 72, 78, 78, 82, 82,
	82, 82, 81, 81, 81, 81, 153, 153, 153, 154,
	154, 205, 205, 205, 204, 204, 204, 204, 86, 86,
	89, 89, 90, 90, 90, 90, 93, 136, 136, 110,
	110, 111, 111, 111, 111, 111, 122, 122, 162, 162,
	161, 161, 164, 164, 91, 91, 91, 91, 96, 96,
	97, 97, 98, 98, 193, 193, 211, 211, 211, 102,
	102, 102, 104, 103, 103, 103, 103, 105, 105, 107,
	108, 108, 106, 106, 109, 112, 112, 112, 112, 113,
	113, 83, 83, 83, 83, 83, 83, 83, 179, 179,
	115, 115, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 131, 131, 131, 131, 131, 131, 117, 117,
	117, 117, 117, 117, 117, 77, 77, 132, 132, 132,
	95, 94, 94, 80, 80, 79, 79, 133, 133, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 126, 126, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 306, 306, 128, 127, 127, 127, 127, 127,
	127, 74, 74, 74, 74, 74, 212, 212, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 143, 143, 75, 75, 141, 141, 142, 144, 144,
	140, 140, 140, 119, 119, 119, 119, 119, 119, 119,
	119, 121, 121, 121, 145, 145, 134, 134, 85, 146,
	146, 147, 148, 148, 149, 149, 152, 157, 157, 157,
	158, 158, 158, 158, 123, 123, 159, 159, 159, 118,
	118, 118, 118, 118, 118, 118, 160, 160, 160, 160,
	165, 165, 135, 135, 138, 138, 137, 139, 166, 166,
	170, 170, 167, 167, 171, 171, 171, 171, 174, 174,
	175, 175, 175, 172, 172, 172, 169, 169, 169, 208,
	208, 208, 177, 177, 187, 187, 184, 184, 185, 185,
	178, 178, 225, 225, 190, 190, 190, 190, 190, 190,
	190, 190, 192, 192, 191, 191, 191, 188, 188, 188,
	189, 189, 206, 206, 202, 202, 207, 207, 203, 203,
	209, 209, 210, 210, 274, 274, 235, 235, 284, 284,
	236, 236, 285, 285, 287, 287, 282, 282, 283, 283,
	286, 286, 31, 288, 288, 289, 289, 290, 290, 290,
	290, 32, 33, 33, 33, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 303, 304,
	197, 198, 198, 198,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 1, 3, 3, 6, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 5, 5, 15, 11, 5, 4, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 0, 3, 1, 1, 1, 1,
	3, 2, 1, 1, 3, 3, 2, 1, 1, 3,
	1, 2, 5, 4, 6, 4, 3, 3, 6, 5,
	5, 4, 3, 5, 1, 3, 1, 1, 1, 1,
	1, 0, 2, 2, 1, 1, 1, 1, 1, 4,
	5, 8, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 3, 5, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 4, 3, 2, 4, 3, 0, 2, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 0, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	4, 3, 4, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 0, 1, 3,
	1, 2, 3, 1, 1, 1, 0, 2, 0, 2,
	1, 1, 5, 1, 3, 2, 5, 4, 3, 3,
	3, 5, 3, 8, 10, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 8, 0, 1, 2, 4, 0, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 6, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 3, 6,
	6, 4, 4, 4, 4, 4, 4, 3, 3, 2,
	6, 2, 4, 4, 4, 5, 7, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 6, 6,
	3, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 1, 1, 2, 1, 1,
	1, 2, 4, 4, 1, 1, 2, 3, 4, 4,
	5, 3, 1, 1, 3, 3, 1, 1, 1, 1,
	0, 3, 1, 1, 2, 2, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 4, 7, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 3,
	2, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -302, -1, -3, -8, -9, -10, -11, -12, -14,
	-48, -15, -16, -17, -55, -56, -57, -62, -63, -64,
	-60, -59, -58, -18, -24, -27, -19, -66, -28, -29,
	-30, -31, -32, -33, -4, 6, 7, -70, 9, 10,
	30, -51, 131, -49, -50, 134, 133, 170, 135, 163,
	64, 259, -65, 262, 263, -307, -195, 168, 169, 137,
	216, 217, 20, 37, 264, 266, 31, 32, 185, -5,
	-87, -6, 8, 356, 132, 260, 165, 164, 26, 405,
	-303, 68, 470, -148, 15, -67, -308, -67, -67, -67,
	-67, -67, -251, -193, 106, 68, 23, -189, 144, 87,
	347, 140, -196, 229, 231, -187, -188, 193, 203, 44,
	151, 150, 141, 229, 141, 142, 144, 347, 140, 178,
	177, 229, 231, 141, -106, -209, 72, -200, 402, 247,
	154, 417, 418, 132, 237, 241, 190, 259, 273, 267,
	301, 289, 403, 419, 155, 211, 139, 287, 290, 334,
	153, 244, 204, 420, 323, 329, 214, 81, 262, 343,
	421, 156, 208, 210, 209, 198, 215, 36, 166, 285,
	250, 278, 219, 193, 422, 410, 276, 28, 188, 423,
	331, 306, 424, 407, 248, 256, 330, 281, 277, 137,
	425, 157, 151, 180, 426, 307, 311, 427, 335, 234,
	428, 429, 430, 143, 240, 271, 272, 431, 194, 337,
	245, 305, 33, 152, 404, 48, 175, 338, 38, 309,
	37, 315, 432, 304, 299, 316, 433, 434, 435, 436,
	254, 252, 253, 255, 303, 270, 298, 206, 53, 138,
	313, 312, 314, 207, 333, 294, 292, 437, 438, 249,
	158, 236, 439, 440, 279, 18, 441, 442, 341, 169,
	251, 42, 443, 444, 445, 173, 239, 257, 446, 447,
	448, 332, 308, 310, 192, 449, 282, 148, 450, 177,
	451, 406, 238, 339, 275, 452, 159, 266, 174, 168,
	342, 453, 217, 454, 455, 456, 160, 457, 232, 231,
	263, 264, 325, 212, 458, 459, 460, 461, 202, 187,
	345, 336, 52, 216, 320, 462, 269, 150, 218, 463,
	242, 260, 43, 7, 205, 246, 326, 213, 203, 296,
	176, 464, 465, 283, 284, 302, 268, 297, 261, 178,
	179, 170, 258, 344, 321, 408, 229, 291, 288, 182,
	295, 466, 144, 467, 183, 265, 340, 243, 286, 322,
	141, 124, 290, 334, 131, 324, 325, 331, -245, 332,
	177, 180, -213, 141, -182, 323, 234, 377, 183, 184,
	72, 142, 143, 33, 336, 335, 327, -209, 145, 265,
	-76, 135, 171, -106, -197, -197, -197, -197, -45, 72,
	218, -45, 30, 72, 72, 36, 72, 264, 326, 326,
	75, 406, 186, 6, -69, 5, -178, 144, 146, 261,
	-88, -92, -211, -209, -201, 74, 373, 374, 375, 376,
	377, 390, 391, 392, 378, 379, 393, 394, 395, 380,
	381, 396, 397, 399, 400, 398, 181, 384, 383, 382,
	385, 386, 51, 388, 387, 389, -3, -158, 17, 16,
	-73, 54, 55, -68, -81, 115, -83, -209, -114, 89,
	-120, 29, 72, -200, 24, -119, -201, -115, -140, -139,
	-95, 124, 125, 126, 113, 114, 121, 90, 127, -126,
	-124, -125, -127, -129, -130, 74, 73, 82, 75, 76,
	77, 78, 83, 373, 374, 375, 376, 377, 390, 391,
	392, 378, 379, 393, 394, 395, 380, 381, 396, 397,
	399, 400, 398, 384, 383, 382, 385, 386, 388, 387,
	389, 84, 85, -202, -137, -303, 58, 59, 171, 140,
	357, 358, 359, 360, 361, 401, 161, 365, 92, 47,
	346, 355, 354, 353, 351, 352, 348, 350, 349, 367,
	368, 147, 347, 119, 356, -178, -178, 11, -99, -100,
	-106, -109, -209, -167, 261, -174, -171, 335, 336, -172,
	-175, -169, -140, 315, 447, 448, 334, 290, 333, -202,
	-209, -2, -5, 6, -106, -252, -240, -243, -203, 156,
	-263, -202, -199, 153, 72, -200, 136, 162, 88, 409,
	23, 25, 318, 373, 91, 124, 374, 375, 376, 16,
	20, 92, 123, 357, 186, 377, 131, 62, 348, 350,
	346, 347, 324, 29, 10, 26, 164, 197, 22, 117,
	133, 95, 96, 97, 167, 24, 165, 85, 161, 19,
	65, 11, 233, 13, 371, 372, 14, 230, 147, 146,
	108, 195, 142, 60, 8, 127, 27, 105, 56, 378,
	379, 413, 45, 185, 414, 58, 106, 17, 351, 352,
	31, 401, 380, 172, 415, 381, 119, 200, 63, 50,
	89, 83, 34, 86, 66, 87, 15, 196, 61, 369,
	199, 416, 107, 134, 356, 59, 235, 140, 6, 366,
	30, 163, 384, 383, 382, 385, 201, 57, 359, 360,
	386, 468, 141, 94, 367, 368, 145, 84, 5, 44,
	32, 9, 64, 67, 353, 354, 355, 47, 51, 388,
	387, 389, 93, 12, 370, 405, 181, 142, -106, 356,
	-185, 147, -185, 178, 177, -185, -185, 141, 98, -52,
	-106, -296, -291, -297, 74, 72, -200, -201, -184, 147,
	-202, -184, -184, -184, -184, -184, -184, -184, -106, 128,
	-106, 72, 30, -183, 106, 12, 347, 140, 72, 177,
	180, 141, 178, 144, -198, -303, -203, -198, -247, 11,
	108, 181, 181, 181, 182, 181, -181, 326, 328, 179,
	329, 330, 12, -84, 106, 19, -303, -158, -158, -198,
	72, 264, 145, -61, -3, -11, -9, -10, -3, 98,
	30, 30, 74, 51, 30, -40, -39, -41, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	30, -275, 68, -235, 315, 72, -288, -289, -106, 75,
	75, -67, -7, -5, -303, 21, 22, 141, -106, 339,
	69, 23, -303, -304, 70, -159, 19, 31, -123, 75,
	78, -149, -152, -83, -209, 50, -71, 21, 22, 80,
	11, -205, 88, 87, 105, -204, 23, 72, -200, -201,
	74, 128, -83, -117, 108, 89, 106, 107, 91, 110,
	109, 120, 113, 114, 115, 116, 117, 118, 119, 111,
	112, 123, 98, 99, 100, 101, 102, 103, 104, -179,
	-303, -95, -303, 129, 130, -120, -120, -120, -120, -120,
	-120, -120, -120, -303, -303, -303, -303, -303, -303, -303,
	-303, -303, -303, -303, -303, -303, -303, -303, -303, -303,
	-303, -303, -303, -303, -303, -303, -303, -303, -303, -303,
	-303, -303, -3, -133, -83, -303, -303, -303, -303, -303,
	-303, -303, -303, -303, -303, -303, -303, -303, -143, -83,
	-303, -306, -128, -303, -306, -128, -306, -128, -306, -303,
	-306, -128, -306, -128, -306, -306, -128, -306, -303, -303,
	-303, -303, -303, -303, -108, 27, -106, -86, -89, -90,
	-91, -110, -94, -303, -106, -95, -106, -99, -305, 69,
	11, 67, -305, 69, 128, 69, -168, -173, 337, 339,
	261, -172, -172, -208, -202, 74, 29, 98, 30, 128,
	-148, -67, 70, 69, -243, 156, 153, -215, -219, -221,
	-220, -222, -217, -218, 287, 290, 294, 292, 288, 293,
	124, 291, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 30, 166, 283, 284, 285, 286, 307,
	308, 309, 310, 311, 312, 313, 314, 267, 289, 403,
	268, 269, 270, 271, 272, 273, 275, 276, 277, 278,
	279, 280, 281, 72, -201, -263, 68, -202, 23, 144,
	72, 89, 72, 72, 72, -299, -298, -291, -294, -292,
	-297, -185, 72, 69, 145, 69, 145, 71, -99, 24,
	66, -101, -106, 72, 72, 72, 72, -293, -291, -294,
	-210, -209, -199, -198, -183, 74, -83, -185, -185, -198,
	-198, -198, -106, -106, -106, -106, -183, -183, -198, -183,
	-180, 11, 108, 11, -180, -180, -83, -120, -291, 349,
	115, 72, 72, 264, 72, -40, -40, 74, -40, 69,
	98, -40, 70, -133, -274, 469, 69, -290, 23, 339,
	340, 316, -73, -3, -106, -198, 340, 341, -92, -94,
	-303, -160, -203, 9, 108, 69, 18, 69, -157, 25,
	26, 128, -121, 51, 75, 78, -186, 49, -106, -83,
	-83, -131, 83, 89, 84, 85, -204, 115, -210, -203,
	-199, -120, -132, -137, -95, 79, 108, 106, 107, 91,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -212, 72, 74, 72, -119,
	-119, -202, -71, -79, -82, 115, -83, -209, -79, -79,
	-71, -304, -304, -82, -79, -79, -79, -82, -79, -71,
	-71, -79, -304, -304, -304, -304, -79, -79, -79, -79,
	-71, -79, -79, -79, -71, -304, 69, -304, -3, -79,
	-79, -79, -304, -83, -83, -140, 74, -79, -140, 74,
	-79, -120, 362, 363, 364, -79, -79, -71, -141, -142,
	93, -140, -304, -120, -202, -202, -79, -80, -79, -79,
	-79, -163, 173, -106, 30, 69, -102, -104, -103, -105,
	56, 60, 62, 57, 58, 59, 63, -193, -86, -93,
	47, -303, -111, 173, -112, 23, -211, 64, 146, 65,
	-163, 67, -86, -106, -86, -109, -209, 115, -171, -174,
	69, 338, 340, 341, -168, -229, 123, 66, 86, -83,
	-203, -210, -158, -73, -253, -254, -255, -203, 74, 75,
	-240, -241, -242, -243, -256, 156, -262, 148, 150, 44,
	-244, 157, 142, 45, -216, -230, 321, -223, 68, -223,
	-223, 295, 287, 290, 288, -223, -223, -223, -223, -223,
	-228, 290, -228, -228, -228, -228, 288, 68, 68, -223,
	-223, -223, -232, 68, -232, 282, -233, 68, -233, -233,
	-233, -233, -263, -263, -83, -206, 67, -155, -106, -198,
	24, -198, -46, 190, 162, 68, -295, 69, 29, -300,
	230, 69, 71, -106, -106, -106, -291, -291, -297, -271,
	160, 155, -106, 69, 69, 72, 72, -248, 11, 108,
	-183, -209, -209, -106, -122, 23, -183, -77, 167, 67,
	-306, -304, 72, -39, -119, 70, -107, 27, 74, -289,
	-211, 315, 340, -71, -304, -54, -53, -190, 136, 133,
	134, 138, 139, -266, 318, 132, 290, 81, 29, 15,
	357, 173, 408, 72, 174, -304, 69, 128, 52, -123,
	-123, -152, -177, 19, 11, 47, 47, -72, 57, 83,
	84, 85, 128, -303, -132, -120, -120, -120, -77, 88,
	-304, -79, 69, -304, 128, -304, -304, -79, -153, 369,
	-153, -304, -304, -304, -304, -304, -304, -79, -79, -304,
	-153, -153, -153, -153, -304, -304, -304, -304, -79, -304,
	-304, -304, -80, -83, -304, -304, -304, -304, 69, 67,
	23, 11, 11, -304, 11, 11, -304, -304, 11, -120,
	-120, -120, -304, -304, -79, -144, -142, 95, -83, -304,
	-304, 69, 69, -304, -304, -304, -304, -118, 30, 47,
	-303, -3, -303, -166, -170, -140, -199, -89, -90, -90,
	-89, -90, 56, 56, 56, 61, 56, 61, 56, -103,
	-211, -304, -304, -136, 189, -303, 34, -211, -112, 142,
	142, 142, -113, 12, -86, -113, -113, 128, -173, -176,
	342, 339, 345, 72, 74, 128, -159, 69, -255, 98,
	-243, 68, 72, 44, -201, 45, -244, 142, 45, -244,
	-249, 72, -249, 45, 83, 89, -226, -227, -234, -237,
	-224, 29, 66, 318, 148, 45, 44, 81, -231, 322,
	75, -228, -228, -223, -223, -223, 295, -223, -228, -229,
	30, -229, -229, -229, -229, -228, -238, 74, -238, 75,
	-232, 75, 70, 66, -202, -3, 23, -47, 8, 9,
	10, -276, -277, -278, 72, 108, 195, 196, -298, 231,
	240, 88, 16, 405, -292, -297, 145, 145, -198, -106,
	-291, -198, -198, -113, 72, 72, -180, -183, 34, -120,
	-294, 183, 184, -163, 141, -290, -186, 69, -197, -194,
	-267, -244, -273, -242, -243, -272, 149, 157, 173, 156,
	-194, -267, 156, 153, -244, 157, 148, 149, -191, -244,
	145, 23, -194, -194, -250, 98, -194, 173, 23, -203,
	-203, 53, -106, -78, -156, 115, -203, -80, -77, 88,
	-120, -304, -82, -154, -153, 115, -210, -154, -154, -304,
	-202, -303, -153, -154, -154, -153, -153, -153, -304, -304,
	-153, -154, -154, -154, -154, -304, -154, -154, -154, -304,
	-214, 124, 287, 166, 285, 278, 305, 292, 320, 283,
	321, -212, -214, -120, -120, -120, -120, -120, 11, 11,
	11, 402, -148, 97, -83, 94, -120, -120, -165, 66,
	-166, -135, -138, -137, -303, -3, -304, -160, 6, 405,
	-164, -202, -113, 69, 98, 98, -97, -96, 66, 67,
	-98, 66, -96, 56, 56, -162, 68, 69, -137, -303,
	-164, -120, -112, -303, -303, -303, -148, -83, -113, 339,
	343, 344, -254, -255, -258, -257, -202, -201, 148, -262,
	157, -244, -262, -249, -249, 68, 83, -120, 9, 45,
	45, 74, 70, -229, -229, -228, -223, -229, 72, 124,
	-229, 70, 69, 70, 69, 70, 69, -116, 423, 89,
	-106, -155, -155, 66, 70, 69, -215, 72, 72, 72,
	-294, 241, -300, 238, 74, 72, -106, -291, -183, -120,
	-228, -106, -72, -53, 68, -239, 72, -201, -197, -249,
	-188, 148, 72, 72, -197, 72, -201, 72, -201, -202,
	45, 45, 72, -106, -202, -239, 72, -83, -202, -202,
	-94, 128, -113, 11, 69, -81, -304, -120, -154, 128,
	-154, -148, 173, -154, -154, -154, -304, -223, -223, -223,
	-233, -223, 272, -223, 272, -304, -304, 19, 19, 19,
	19, -304, -120, -120, -120, -303, -75, 366, -83, 69,
	69, 28, -165, 69, -304, -304, 47, -304, -304, 69,
	-148, -170, -83, -83, -83, 68, -83, -161, -202, 189,
	-304, -112, -193, -161, -161, -161, -158, 70, 69, -223,
	-223, 45, -249, -161, -125, -229, -228, 74, -228, 75,
	75, 423, 68, -3, -106, -279, -280, -281, 81, 404,
	89, 197, 198, 158, 199, 200, 201, -278, -215, -215,
	-215, -301, 230, 88, 239, 16, 23, -282, -181, -78,
	-239, -150, 161, 162, -215, -215, -206, -246, -244, 45,
	72, -192, 145, 23, 145, -150, -239, 30, 133, 27,
	-203, -145, 13, -86, -156, -156, 115, -304, 16, -228,
	72, -120, -120, -120, -120, -304, -304, -304, -120, -304,
	74, -120, -120, 45, -138, -135, 47, -3, -303, -202,
	-158, -161, 70, 69, -137, -111, -211, -304, -304, -304,
	-260, -259, 67, 152, 81, -257, -157, -157, 70, -229,
	-229, 70, 70, -258, -155, 19, -155, -281, 74, 201,
	197, 201, 201, 201, 201, 202, 16, 405, -300, 238,
	74, 74, -283, 38, -285, 39, 11, 70, 72, -216,
	-216, 68, -249, 68, 72, -202, -150, 29, 29, -303,
	-146, 14, 16, -113, -81, -133, -304, -304, -304, -304,
	-74, 108, 405, -304, -304, 9, -135, -3, 70, -202,
	-112, -259, 72, -250, 74, 159, 70, 188, -21, -3,
	-9, -10, -11, -12, -14, -48, -15, -16, -22, -23,
	-17, -55, -56, -65, -63, -64, -60, -59, -26, -24,
	-27, -19, -28, -29, -30, -25, 92, 147, 219, 259,
	36, 36, 193, 194, 238, 74, 72, 239, -225, 146,
	-286, 43, -284, -236, 42, 16, -86, -258, -206, -258,
	-120, -264, -265, 173, -147, -83, -134, -85, -83, -145,
	-156, -148, -304, 403, 63, 406, -166, -304, 75, -106,
	-261, -260, 189, -155, -83, -83, 72, -44, -207, 222,
	223, 224, -203, -34, -21, 239, 23, -162, 75, -285,
	16, -287, 40, 41, 74, -113, 70, 68, 70, -304,
	69, -202, 69, -146, -304, 53, 404, 407, 68, -151,
	191, 192, -35, -36, 93, 94, 220, 221, 225, -215,
	69, 470, 74, 38, 74, 16, 16, -145, -261, -258,
	-261, -265, 47, -85, 53, -161, -155, 72, 72, 97,
	95, -36, -83, -34, 19, 19, 19, 29, -203, 97,
	-21, 74, 74, -146, 70, 175, 405, 70, -13, -20,
	-12, -9, -10, -11, 259, 92, -34, 94, 470, -45,
	75, -3, -43, -42, 75, -45, 227, 89, 228, 72,
	-120, -261, 176, 406, -269, -270, 66, -155, -34, 470,
	-34, 97, 95, -37, -38, 96, -21, 69, 226, -303,
	407, -270, 66, -269, 66, 10, 9, 470, 97, 470,
	147, -34, 97, 95, -38, -83, -42, -120, 172, -268,
	160, 155, 158, 30, -268, 97, 92, 470, 147, -34,
	94, -304, -304, 154, 29, 83, 97, 470, -34, 147,
	97, 470, 147,
}
var yyDef = [...]int{

	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 589, 589, 589, 589, 589,
	589, 664, -2, 440, 441, 0, 0, 0, 0, -2,
	558, 559, 560, 564, 565, 580, -2, 1440, 1440, 1440,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 39,
	0, 0, 55, 56, 970, 0, 583, 572, 573, 0,
	0, 1438, 2, 910, 0, 598, 591, 0, 970, 970,
	0, 0, 86, 0, 0, 0, 665, 0, 0, 0,
	968, 968, 0, 968, 968, 0, 991, 0, 965, 987,
	988, 989, 0, 0, 966, 0, 966, 966, 966, 966,
	966, 966, 966, 0, 504, 682, 1000, 1001, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	0, 0, 0, 551, 0, 1441, 1441, 519, 0, 521,
	0, 0, 0, 0, 0, 531, 534, 0, 910, 910,
	1441, 386, 387, 388, 555, 556, 545, 557, 0, 0,
	0, 0, 0, 584, 585, 586, 587, 588, 199, 201,
	0, 221, 0, 224, 227, 1006, 566, 0, 0, 1031,
	1032, 0, 0, 589, 0, 593, 0, 0, 971, 561,
	44, 45, 0, 666, 667, 668, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 0, 916, 0, 0,
	601, 599, 600, 590, 0, 612, 621, 0, 691, 0,
	696, 698, -2, -2, 0, 739, 740, 741, 742, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	769, 770, 771, 772, 773, 883, 884, 885, 886, 887,
	888, 889, 890, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1435, 1436,
	1437, 700, 701, 880, 937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	842, 842, 842, 842, 842, 842, 842, 842, 842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 68, 682, 72, 1386, 0, 942, -2, -2, 944,
	0, 0, 0, -2, -2, -2, -2, 1196, -2, 880,
	0, 87, 902, 589, 88, 0, 261, 262, 0, 1209,
	410, 998, 999, 1198, 994, 995, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 968, 0, 485,
	0, 486, 0, 132, 126, 127, 128, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	505, 1441, 551, 508, 0, 0, 968, 968, 1441, 1441,
	1441, 0, 0, 0, 517, 1442, 1443, 518, 0, 412,
	413, 551, 551, 1441, 551, 548, 0, 548, 528, 548,
	546, 547, 0, 533, 0, 0, 0, 540, 541, 542,
	567, 0, 0, 574, 576, 577, 578, 579, 575, 0,
	0, 0, 203, 0, 0, 223, 205, 0, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 226, 0, 1004, 1007, 571, 1022, 1023, 0, 1033,
	1034, 598, 41, 51, 0, 594, 595, 0, 1441, 0,
	0, 0, 0, 50, 1439, 36, 0, 0, 911, 914,
	915, 903, 904, 907, 0, 0, 596, 602, 603, 592,
	0, 613, 0, 0, 0, 622, 0, 624, 625, 626,
	627, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 719, 720, 721, 722, 723, 724, 697,
	0, 711, 0, 0, 0, 760, 761, 762, 763, 764,
	765, 766, 0, 601, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 601, 0, 0, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 872,
	0, 825, 834, 0, 826, 835, 827, 836, 828, 0,
	829, 837, 830, 838, 831, 832, 839, 833, 0, 0,
	0, 733, 0, 0, 70, 0, 681, 0, 628, 630,
	631, 632, -2, 0, 685, 731, -2, 0, 0, 0,
	62, 63, 0, 0, 0, 0, 73, 75, 0, 0,
	1386, 945, 946, 360, 959, 960, 961, 0, 957, 0,
	910, 598, 427, 0, 263, 0, 0, 272, 350, 281,
	282, 283, 343, 285, 343, 343, 0, 343, 343, 343,
	343, 343, 357, 357, 357, 357, 357, 326, 327, 328,
	329, 330, 0, 0, 303, 343, 343, 343, 307, 333,
	334, 335, 336, 337, 338, 339, 340, 286, 287, 288,
	289, 290, 291, 292, 293, 294, 345, 345, 347, 347,
	347, 347, 347, 0, 0, 409, 0, 992, 84, 0,
	1441, 0, 1441, 0, 0, 98, 154, 140, 97, 138,
	137, 0, 125, 0, 0, 0, 0, 131, 500, 967,
	0, 493, 64, 494, 495, 496, 497, 498, 133, 499,
	683, 1002, 1003, 506, 507, 552, 553, 0, 0, 511,
	512, 513, 514, 515, 516, 414, 522, 523, 524, 530,
	551, 0, 0, 0, 646, 551, 532, 725, 535, 842,
	0, 569, 568, 0, 581, 200, 202, 204, 222, 0,
	0, 225, 228, 0, 0, 0, 0, 1025, 0, 1027,
	1029, 0, 601, 0, 0, 475, 562, 563, 46, 47,
	0, 0, 926, 917, 0, 0, 0, 0, 906, 908,
	909, 0, 0, 891, 0, 0, 604, 597, 38, 692,
	693, 695, 712, 0, 714, 716, 623, 614, 0, 881,
	-2, 702, 703, 727, 728, 729, 0, 0, 0, 0,
	725, 707, 0, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 759, 856, 857, 0, 757,
	758, 767, 0, 0, 735, 608, 609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 730, 0, 936, 0, 0,
	0, 0, 807, 0, 0, 742, 883, 0, 742, 883,
	0, 0, 0, 0, 0, 0, 0, 0, 878, 875,
	0, 0, 843, 0, 0, 0, 0, 0, 734, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 0, 0,
	669, 0, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 1313, 641, 0, 685, 0, 0, 0,
	689, 0, 689, 67, 689, 69, 0, 684, 943, 0,
	0, 0, 78, 79, 74, 947, 0, 953, 954, 955,
	881, 0, 916, 601, 260, 428, 430, 433, 434, 435,
	264, 266, 267, 268, 0, 1209, 401, 1325, 1365, -2,
	393, 1239, -2, -2, 271, 352, 351, 284, 0, 357,
	357, 343, 343, 343, 343, 312, 357, 315, 318, 319,
	360, 0, 360, 360, 360, 360, 357, 0, 0, 304,
	305, 306, 295, 0, 296, 345, 298, 0, 299, 300,
	301, 302, 407, 408, 0, 0, 0, 0, 0, 92,
	969, 93, 0, 156, 157, 101, 96, 0, 0, 141,
	0, 0, 136, 259, 0, 487, 0, 489, 130, 491,
	501, 502, 1441, 0, 0, 1441, 1441, 689, 0, 0,
	525, 549, 550, 548, 551, 0, 529, 543, 0, 0,
	536, 0, 570, 206, 207, 229, 70, 0, 1005, 1024,
	0, 1028, 1030, 596, 52, 442, 443, 1440, -2, 476,
	984, 476, 476, 463, 377, 476, 974, 975, 976, 977,
	978, 979, 980, 981, 0, 0, 0, 0, 0, 912,
	913, 905, 0, 962, 963, 892, 893, 85, 605, 713,
	715, 717, 0, 733, 704, 725, 708, 0, 705, 0,
	699, 0, 0, 619, 0, 619, 619, 0, 793, 0,
	794, 0, 619, 619, 0, 0, 0, 0, 0, 0,
	800, 801, 802, 803, 619, 619, 619, 619, 0, 619,
	619, 619, 0, 738, -2, 804, 805, 806, 0, 0,
	0, 0, 0, 849, 0, 0, 850, 815, 0, 0,
	0, 0, 0, 821, 902, 0, 876, 0, 0, 824,
	844, 0, 0, 845, 846, 847, 848, 930, 0, 0,
	0, 921, 0, 689, 938, 0, 0, 629, 660, 662,
	0, 657, 670, 671, 673, 0, 675, 0, 677, 678,
	648, 635, 732, 636, 0, 0, 0, 685, 645, 0,
	0, 0, 902, 0, 689, 60, 61, 0, 76, 77,
	0, 0, 83, 361, 362, 0, 100, 0, 431, 0,
	265, 0, 0, 0, 0, 379, 393, 389, 390, 393,
	384, 394, 385, 0, 273, 0, 275, 276, 277, 278,
	279, 0, 0, 356, 0, 364, 366, 0, 280, 353,
	0, 360, 360, 357, 310, 311, 343, 316, 360, 320,
	0, 321, 322, 323, 324, 360, 0, 341, 0, 0,
	297, 0, 424, 0, 993, 84, 84, 0, 158, 159,
	160, 0, 102, 103, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 139, 135, 0, 0, 492, 65,
	134, 509, 510, 520, 415, 416, 551, 527, 0, 726,
	537, 538, 539, 357, 0, 1026, 604, 0, 445, 0,
	1440, 393, 0, 464, 465, 0, 477, 478, 479, 0,
	0, 1440, 0, 0, 0, 478, 0, 0, 0, 0,
	985, 986, 0, 0, 0, 378, 0, 0, 0, 928,
	927, 918, 37, 689, 0, 615, 882, 0, 706, 0,
	709, 619, 736, 778, 620, 610, 0, 779, 780, 619,
	616, 902, 795, 782, 783, 796, 797, 798, 619, 619,
	799, 787, 786, 785, 788, 619, 791, 790, 792, 774,
	0, 343, 343, 861, 343, 347, 864, 343, 866, 343,
	869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 873, 823, 879, 0, 0, 0, 53, 0,
	930, 919, 932, 934, 0, 0, 0, 0, -2, 1174,
	0, 652, 902, 0, 0, 0, 654, 661, 0, 0,
	655, 0, 656, 674, 676, 633, 0, 0, 637, 0,
	0, -2, 644, 0, 0, 0, 910, 690, 59, 80,
	81, 82, 429, 432, 0, 395, 343, 343, 0, 399,
	0, 393, 400, 381, 383, 0, 274, 354, 0, 363,
	365, 367, 344, 308, 309, 360, 317, 313, 358, 359,
	325, 357, 0, 357, 0, 348, 0, 411, 425, 0,
	0, 90, 0, 0, 109, 0, 105, 0, 0, 0,
	99, 0, 143, 0, 146, 147, 488, 490, 526, 647,
	1016, 679, 85, 444, 0, 472, 0, 0, 448, 992,
	391, 0, -2, 449, 450, 455, 456, 457, 458, 459,
	0, 470, 0, 452, 0, 472, 0, 467, 0, 0,
	48, 0, 894, 0, 85, 85, 775, 710, 777, 0,
	781, 0, 0, 776, 784, 789, 808, 858, 357, 862,
	863, 865, 867, 868, 870, 810, 809, 0, 0, 0,
	0, 816, 0, 0, 0, 0, 0, 0, 877, 0,
	0, 0, 54, 0, 935, -2, 0, 0, 71, 0,
	910, 939, 940, 941, 658, 0, 663, 0, 650, 0,
	685, 642, 0, 0, 0, 0, 58, 369, 0, 907,
	907, 380, 382, 0, 355, 314, 360, 342, 360, 0,
	0, 426, 0, 84, 0, 84, 110, 111, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 104, 106, 107,
	108, 142, 0, 0, 145, 0, 0, 1018, 1012, 0,
	0, 447, 473, 0, 272, 272, 0, 393, 392, 0,
	466, 0, 982, 983, 0, 461, 472, 0, 0, 0,
	929, 899, 0, 689, 0, 606, 611, 617, 0, 859,
	860, 0, 0, 0, 0, 817, 818, 819, 851, 822,
	874, 0, 0, 0, 933, 920, 0, 924, 0, 653,
	57, 0, 649, 0, 638, 640, 685, 686, 687, 688,
	368, 372, 0, 377, 0, 396, 397, 398, 0, 331,
	332, 346, 349, 0, 91, 0, 0, 112, 113, 114,
	115, 117, 118, 0, 0, 0, 0, 0, 144, 0,
	149, 150, 972, 1020, -2, 0, 0, 446, 474, 269,
	270, 0, 992, 0, 451, 460, 462, 0, 469, 0,
	42, 0, 0, 894, 85, 902, 811, 813, 812, 814,
	0, 0, 0, 840, 841, 0, 923, 0, 659, 651,
	643, 373, 374, 0, 376, 0, 370, 0, 84, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 0, 0, 0, 0,
	119, 120, 121, 122, 0, 152, 0, 148, 648, 0,
	1012, 0, 1014, 0, 1011, 0, 689, 0, 0, 0,
	468, 0, 481, 0, 900, 901, 895, 896, 898, 899,
	607, 0, 820, 0, 0, 0, 931, -2, 375, 0,
	89, 371, 161, 95, 0, 0, 994, 0, 0, 188,
	189, 190, 996, 0, 230, 151, 0, 35, 0, 1019,
	0, 1017, 0, 0, 1013, 894, 370, 0, 370, 480,
	0, 0, 0, 43, 618, 852, 0, 855, 0, 84,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 186,
	0, 0, 153, 973, 1021, 0, 0, 899, 453, 0,
	471, 482, 0, 897, 853, 0, 0, 162, 163, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 997, 123,
	231, 1015, 1009, 40, 370, 0, 0, 402, 84, 164,
	165, 166, 167, 168, 0, 170, 0, 0, 0, 182,
	183, 184, 0, 191, 193, 194, 195, 0, 197, 198,
	187, 454, 0, 0, 403, 404, 0, 94, 0, 0,
	0, 0, 0, 0, 179, 0, 185, 0, 196, 0,
	854, 405, 0, 406, 0, 0, 0, 0, 0, 174,
	175, 0, 0, 0, 180, 0, 192, 0, 0, 417,
	419, 420, 0, 0, 418, 169, 171, 0, 177, 0,
	0, 483, 484, 421, 422, 423, 0, 0, 0, 176,
	0, 181, 178,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 470,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:455
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:496
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:502
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:508
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:515
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:521
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:532
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:539
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:552
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:561
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:577
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:581
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:591
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:619
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:641
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:647
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:651
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:659
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:698
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:702
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:712
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:719
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:728
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:742
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:752
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:756
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:769
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:774
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:789
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:794
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:799
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:811
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:819
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:827
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:831
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:835
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:843
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:852
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:863
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:871
		{
			yyVAL.procedureParams = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:891
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:908
		{
			yyVAL.characteristics = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:912
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:922
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:952
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:956
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:964
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:970
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:975
		{
			yyVAL.str = ""
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1011
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1015
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1025
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1057
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1075
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1079
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1083
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1093
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1101
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1105
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1109
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1115
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1123
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.str = BeforeStr
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.str = AfterStr
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.str = InsertStr
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1153
		{
			yyVAL.str = UpdateStr
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.str = DeleteStr
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.triggerOrder = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1192
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 171:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1196
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1212
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1218
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 176:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1223
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 177:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1228
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 178:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1234
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1242
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1252
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1258
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1262
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1266
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1270
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1278
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1329
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1339
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1411
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.statement = &Resignal{}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1433
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1437
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1445
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1449
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1460
		{
			yyVAL.exprs = nil
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.exprs = nil
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1468
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1516
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1533
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1560
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1565
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1569
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1573
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1606
		{
			yyVAL.columnType = ColumnType{}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1610
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1646
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1655
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1686
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 331:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1954
		{
			yyVAL.sqlVal = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1958
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1967
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1985
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1993
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2002
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2018
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.colKeyOpt = colKey
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2080
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2084
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2089
		{
			yyVAL.indexOptions = nil
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2138
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2146
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2187
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2226
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 402:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2240
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 403:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2244
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 404:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2248
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 405:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2252
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 406:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2256
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2280
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = ""
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.boolean = true
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.boolean = true
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			yyVAL.boolean = false
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = yyDollar[1].str
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = string("")
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2421
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2438
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2448
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2455
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2474
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2483
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 454:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2487
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2501
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2515
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2548
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2553
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2557
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2561
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2569
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnOrder = nil
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2590
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2596
		{
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
		}
	case 480:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2606
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2616
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2622
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2626
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2646
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2658
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2664
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2672
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2676
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2684
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2692
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2700
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2708
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2716
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2724
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2733
		{

		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2747
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2756
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2767
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2775
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2779
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2784
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2788
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2792
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2796
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2800
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2804
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2820
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2824
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2828
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2832
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2836
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2840
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2844
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2849
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2858
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2862
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2870
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2884
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2888
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2893
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2897
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2902
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2906
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2914
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2924
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.boolean = false
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.boolean = true
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2956
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2970
		{
			yyVAL.showFilter = nil
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = SessionStr
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = GlobalStr
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.statement = &Begin{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.statement = &Begin{}
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3022
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3026
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.statement = &Commit{}
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.statement = &Rollback{}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3054
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3058
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3062
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.statement = &OtherRead{}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3135
		{
			setAllowComments(yylex, true)
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3145
		{
			yyVAL.bytes2 = nil
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = UnionStr
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = UnionAllStr
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = UnionDistinctStr
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3168
		{
			yyVAL.byt = 0
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.byt = 1
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = SQLCacheStr
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = ""
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = DistinctStr
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = ""
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = StraightJoinHint
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3221
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3240
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3244
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3262
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3273
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3277
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3282
		{
			yyVAL.over = nil
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.over = yyDollar[1].over
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3291
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3357
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3373
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 640:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3384
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3399
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 643:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3403
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3407
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = nil
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3431
		{
			yyVAL.columns = nil
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3445
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3468
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3472
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3476
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3486
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3488
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3492
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3500
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.empty = struct{}{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = JoinStr
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = JoinStr
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = JoinStr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = StraightJoinStr
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = LeftJoinStr
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = LeftJoinStr
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = RightJoinStr
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = RightJoinStr
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3558
		{
			yyVAL.str = NaturalJoinStr
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3603
		{
			yyVAL.indexHints = nil
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3607
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3611
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3615
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = nil
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3634
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3638
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 710:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = IsNullStr
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = IsNotNullStr
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = IsTrueStr
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = IsNotTrueStr
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = IsFalseStr
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			yyVAL.str = IsNotFalseStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = EqualStr
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = LessThanStr
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = GreaterThanStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = LessEqualStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = GreaterEqualStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = NotEqualStr
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = nil
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3801
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3811
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3817
		{
			yyVAL.selectExprs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3828
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3872
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3912
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3916
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3928
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3962
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3990
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3994
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4008
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4016
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4040
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4044
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4048
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 789:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4056
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4060
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4085
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4089
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4093
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4097
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4101
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4105
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4109
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4117
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4144
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4148
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4152
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 811:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4156
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 812:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4160
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 813:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4164
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 814:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4168
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4172
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4176
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4180
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4184
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4188
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 820:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4192
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4196
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 822:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4200
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4204
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4208
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4222
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4226
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4261
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4265
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 840:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 841:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4303
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4313
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4317
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4321
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4325
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4329
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4333
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = BooleanModeStr
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4347
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 854:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = QueryExpansionStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4401
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4413
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4426
		{
			yyVAL.expr = nil
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = string("")
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4455
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.expr = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4464
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4478
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.expr = &NullVal{}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4531
		{
			yyVAL.exprs = nil
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4535
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.expr = nil
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4560
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4571
		{
			yyVAL.orderBy = nil
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4596
		{
			yyVAL.str = AscScr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.str = AscScr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.str = DescScr
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4609
		{
			yyVAL.limit = nil
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4617
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4621
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = ForUpdateStr
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = ShareModeStr
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4661
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4674
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4678
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4682
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4693
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4701
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4706
		{
			yyVAL.assignExprs = nil
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4710
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4730
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4736
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4756
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4762
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4775
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4792
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.setScope = SetScope_Global
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.setScope = SetScope_Session
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.setScope = SetScope_Session
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4856
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4863
		{
			yyVAL.bytes = []byte("charset")
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4874
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = &Default{}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.byt = 0
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.byt = 1
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4892
		{
			yyVAL.byt = 0
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4894
		{
			yyVAL.byt = 1
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4897
		{
			yyVAL.byt = 0
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4899
		{
			yyVAL.byt = 1
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4902
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = IgnoreStr
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4907
		{
			yyVAL.sqlVal = nil
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4913
		{
			yyVAL.empty = struct{}{}
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.empty = struct{}{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4917
		{
			yyVAL.empty = struct{}{}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4919
		{
			yyVAL.empty = struct{}{}
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4921
		{
			yyVAL.empty = struct{}{}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4923
		{
			yyVAL.empty = struct{}{}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4925
		{
			yyVAL.empty = struct{}{}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4927
		{
			yyVAL.empty = struct{}{}
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			yyVAL.empty = struct{}{}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.empty = struct{}{}
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4936
		{
			yyVAL.empty = struct{}{}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.empty = struct{}{}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4940
		{
			yyVAL.empty = struct{}{}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.str = UniqueStr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = FulltextStr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.str = SpatialStr
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4951
		{
			yyVAL.str = ""
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4956
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4958
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4962
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4966
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4983
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5000
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = string("")
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5007
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5010
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5015
		{
			yyVAL.EnclosedBy = nil
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5019
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5024
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5033
		{
			yyVAL.sqlVal = nil
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5037
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5042
		{
			yyVAL.sqlVal = nil
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5051
		{
			yyVAL.Fields = nil
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5055
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5060
		{
			yyVAL.Lines = nil
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5064
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5069
		{
			yyVAL.sqlVal = nil
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5073
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5079
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5089
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5095
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5099
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5105
		{
			yyVAL.lockType = LockRead
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5109
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5113
		{
			yyVAL.lockType = LockWrite
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5117
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5123
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5133
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5137
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5579
		{
			decNesting(yylex)
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5584
		{
			skipToEnd(yylex)
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5589
		{
			skipToEnd(yylex)
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			skipToEnd(yylex)
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
