// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824
const NVAR = 57825
const PASSWORD_LOCK = 57826

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1038,
	-1, 43,
	147, 1102,
	148, 1120,
	-2, 231,
	-1, 49,
	186, 673,
	187, 673,
	-2, 663,
	-1, 547,
	135, 1130,
	-2, 1124,
	-1, 548,
	135, 1131,
	-2, 1125,
	-1, 652,
	98, 1408,
	135, 1408,
	-2, 1086,
	-1, 653,
	98, 1526,
	135, 1526,
	-2, 1087,
	-1, 658,
	98, 1432,
	135, 1432,
	-2, 1088,
	-1, 659,
	98, 1479,
	135, 1479,
	-2, 1089,
	-1, 660,
	98, 1480,
	135, 1480,
	-2, 1090,
	-1, 661,
	98, 1358,
	135, 1358,
	-2, 1094,
	-1, 663,
	98, 1456,
	135, 1456,
	-2, 1096,
	-1, 1175,
	1, 770,
	5, 770,
	12, 770,
	13, 770,
	14, 770,
	15, 770,
	17, 770,
	19, 770,
	30, 770,
	31, 770,
	56, 770,
	57, 770,
	58, 770,
	59, 770,
	60, 770,
	62, 770,
	63, 770,
	66, 770,
	67, 770,
	69, 770,
	70, 770,
	405, 770,
	503, 770,
	-2, 800,
	-1, 1179,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1424,
	135, 1133,
	-2, 1129,
	-1, 1589,
	44, 522,
	-2, 1370,
	-1, 1593,
	68, 522,
	-2, 1320,
	-1, 1596,
	68, 518,
	72, 518,
	-2, 1238,
	-1, 1597,
	68, 519,
	72, 519,
	-2, 1248,
	-1, 1714,
	44, 565,
	154, 567,
	156, 565,
	157, 565,
	-2, 600,
	-1, 1788,
	5, 51,
	-2, 866,
	-1, 2084,
	69, 1295,
	70, 1295,
	135, 1295,
	-2, 704,
	-1, 2107,
	1, 821,
	5, 821,
	12, 821,
	13, 821,
	14, 821,
	15, 821,
	17, 821,
	19, 821,
	30, 821,
	31, 821,
	56, 821,
	57, 821,
	58, 821,
	59, 821,
	60, 821,
	62, 821,
	63, 821,
	66, 821,
	67, 821,
	69, 821,
	70, 821,
	405, 821,
	503, 821,
	-2, 800,
	-1, 2209,
	154, 568,
	-2, 566,
	-1, 2270,
	5, 51,
	-2, 1058,
	-1, 2472,
	41, 1140,
	-2, 1138,
	-1, 2608,
	5, 51,
	-2, 1061,
}

const yyPrivate = 57344

const yyLast = 34626

var yyAct = [...]int{
	614, 80, 2803, 2753, 2768, 2625, 2777, 870, 2767, 2611,
	2026, 2657, 2492, 2590, 2755, 2624, 2672, 419, 2650, 548,
	1641, 2525, 7, 2524, 6, 2523, 5, 2526, 8, 550,
	2595, 2588, 2419, 2282, 2379, 2655, 1823, 2472, 2522, 3,
	2120, 2101, 1130, 677, 2000, 1210, 1852, 2009, 1639, 2077,
	1542, 1873, 539, 613, 2360, 1598, 2474, 1548, 2169, 1300,
	83, 555, 2331, 2337, 1651, 2315, 2121, 127, 2612, 1546,
	127, 553, 402, 405, 444, 444, 127, 1402, 2078, 465,
	2297, 80, 1590, 2203, 902, 450, 447, 447, 2008, 675,
	532, 1933, 2193, 1580, 566, 1824, 1614, 93, 2074, 127,
	106, 1713, 1579, 1395, 1449, 2086, 2093, 1677, 1737, 2048,
	127, 1302, 1630, 1978, 127, 680, 1521, 1410, 127, 531,
	1345, 1586, 1525, 1458, 886, 1280, 1318, 1626, 672, 1581,
	1916, 1028, 127, 447, 654, 680, 1172, 1190, 1515, 1299,
	1532, 1171, 1426, 127, 1031, 1035, 1175, 1146, 952, 931,
	1189, 646, 671, 650, 651, 2018, 464, 535, 1048, 1693,
	1350, 422, 2298, 657, 421, 643, 930, 1181, 857, 85,
	2825, 2821, 1147, 869, 2811, 2793, 2791, 2772, 2748, 2680,
	82, 437, 1343, 431, 442, 425, 462, 2451, 69, 2154,
	2309, 414, 2784, 2666, 2766, 2606, 2316, 1664, 1664, 1569,
	2736, 2641, 2166, 2449, 2318, 2665, 432, 87, 88, 89,
	90, 91, 2069, 36, 36, 36, 2568, 1460, 2452, 2506,
	2464, 36, 2591, 1759, 2264, 673, 109, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 1818,
	1944, 1074, 856, 2115, 2661, 1861, 2116, 2117, 1860, 2019,
	1692, 1862, 1566, 1567, 2404, 1544, 1819, 1391, 1392, 1039,
	36, 1349, 72, 39, 40, 1021, 2605, 890, 891, 99,
	859, 893, 862, 863, 1565, 81, 81, 81, 2658, 2321,
	905, 1366, 667, 81, 1347, 1348, 1191, 627, 1192, 633,
	635, 634, 631, 632, 630, 629, 628, 906, 907, 980,
	413, 412, 2049, 2662, 892, 541, 1899, 416, 2301, 2302,
	988, 2661, 1600, 424, 423, 426, 454, 2319, 2320, 2322,
	2323, 2324, 81, 430, 1691, 949, 1346, 2656, 101, 72,
	39, 40, 98, 1606, 1608, 1620, 1607, 1615, 111, 110,
	434, 1615, 2251, 2051, 438, 2658, 2249, 396, 1330, 1891,
	1602, 41, 915, 411, 461, 1975, 1387, 1386, 441, 1385,
	1384, 1383, 1382, 964, 1896, 1895, 984, 985, 1967, 2332,
	2662, 1939, 2761, 995, 2477, 455, 996, 2335, 2192, 1002,
	107, 2338, 2339, 2340, 2341, 2682, 1892, 912, 127, 1972,
	108, 2333, 2334, 1704, 1602, 2681, 2176, 2631, 1943, 80,
	80, 1897, 1627, 1884, 2570, 2390, 2572, 2349, 2356, 1885,
	2446, 2450, 1705, 2688, 1377, 1941, 103, 112, 104, 1652,
	920, 2347, 922, 2781, 921, 2677, 403, 118, 114, 115,
	2444, 116, 127, 2443, 1012, 2167, 2442, 919, 923, 2629,
	2562, 2170, 2171, 2172, 2173, 2174, 2675, 2676, 2441, 427,
	428, 429, 435, 1356, 439, 440, 443, 903, 1017, 904,
	906, 907, 2440, 120, 119, 2438, 1025, 1721, 1715, 1716,
	2439, 1714, 1717, 1718, 1894, 1209, 406, 2520, 913, 914,
	2702, 2558, 2559, 127, 2053, 2669, 2670, 2613, 2284, 2057,
	2468, 2052, 1844, 2050, 901, 397, 2764, 2179, 2055, 2817,
	964, 1958, 1959, 889, 113, 899, 900, 1722, 1008, 898,
	897, 2054, 2731, 1646, 962, 121, 2518, 122, 407, 987,
	2170, 2171, 2172, 2173, 2174, 399, 2056, 2058, 861, 860,
	1007, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1013, 2750,
	1645, 2361, 2362, 1984, 1209, 2564, 2759, 1083, 1986, 2754,
	1085, 2507, 2807, 2124, 2317, 1942, 2153, 415, 1209, 2208,
	400, 1051, 1986, 2757, 100, 963, 2826, 997, 2194, 1698,
	964, 2447, 109, 2569, 1331, 1518, 2659, 404, 916, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1084, 1906, 1128, 2744, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1014, 1145, 1148, 1148,
	1148, 1154, 1148, 1148, 1154, 1148, 1154, 1163, 1164, 1165,
	1166, 2604, 1176, 2659, 2465, 73, 1016, 79, 79, 79,
	1023, 1629, 971, 1129, 1349, 79, 1605, 433, 1615, 2467,
	127, 127, 127, 117, 1945, 2563, 2178, 2630, 974, 404,
	1351, 1182, 1209, 1893, 2823, 1208, 680, 1347, 1348, 2420,
	2812, 1720, 1934, 2805, 111, 110, 2806, 404, 2804, 2794,
	858, 872, 1170, 2422, 79, 2574, 2371, 404, 1551, 1553,
	460, 2372, 960, 1178, 1966, 1353, 2756, 2758, 1352, 1963,
	969, 1947, 73, 1878, 1946, 1699, 1288, 1286, 1935, 917,
	545, 1273, 657, 1878, 1851, 1878, 1878, 657, 1203, 1850,
	1849, 854, 1961, 1997, 1020, 864, 970, 368, 966, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 1797, 1036, 1881, 2375, 1878, 1086, 1087, 2234, 1794,
	2226, 1965, 1055, 1661, 1269, 1964, 1865, 1857, 1660, 2567,
	2421, 1754, 967, 968, 1742, 1727, 1149, 1151, 1153, 1155,
	1157, 1159, 1160, 1162, 959, 1194, 1552, 1405, 1202, 1187,
	1195, 1067, 1068, 1069, 1070, 1071, 1064, 1054, 882, 1074,
	1207, 1150, 1152, 2143, 1156, 1158, 1064, 1161, 1180, 1074,
	1936, 1937, 1185, 1570, 1074, 871, 1877, 2188, 1561, 1328,
	1319, 551, 1992, 1984, 2370, 2589, 1877, 1989, 1877, 1877,
	1988, 1991, 1131, 1984, 2703, 2704, 2454, 1209, 1204, 2386,
	1985, 1986, 2003, 1144, 2601, 2600, 1063, 1062, 1072, 1073,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 1877, 1526,
	1074, 1996, 2144, 1433, 2376, 1993, 2700, 2701, 1398, 1047,
	2455, 444, 1046, 1045, 680, 1668, 1086, 1087, 1431, 1432,
	1430, 1282, 447, 447, 1086, 1087, 895, 1792, 444, 1791,
	1047, 127, 2001, 888, 127, 2797, 2778, 2796, 1301, 447,
	447, 467, 127, 1678, 1045, 2091, 96, 1046, 1045, 1046,
	1045, 127, 127, 127, 127, 2090, 2814, 1320, 2071, 908,
	1516, 1047, 1281, 1403, 1404, 1047, 1304, 1047, 1338, 1200,
	924, 447, 874, 875, 876, 877, 878, 879, 880, 965,
	972, 973, 975, 976, 977, 978, 979, 865, 981, 982,
	983, 95, 986, 2810, 989, 990, 991, 992, 993, 2745,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 444, 1801,
	1074, 1326, 1669, 2673, 1275, 2712, 2734, 2711, 459, 447,
	447, 447, 1793, 896, 680, 1046, 1045, 887, 2348, 94,
	1341, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1064, 1375, 1047, 1074, 1516, 2342, 1809, 1046, 1045,
	1305, 1046, 1045, 910, 447, 2747, 2818, 2673, 80, 447,
	447, 1359, 1314, 1315, 1316, 1317, 1047, 2131, 1027, 1047,
	1322, 1922, 1323, 1283, 1046, 1045, 2724, 1290, 2634, 2626,
	127, 2674, 127, 1046, 1045, 680, 1046, 1045, 1046, 1045,
	2073, 81, 1047, 1739, 1740, 1741, 1389, 1042, 1308, 1309,
	1381, 1047, 1429, 127, 1047, 2609, 1047, 640, 641, 1051,
	2819, 2462, 2461, 1407, 1063, 1062, 1072, 1073, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1064, 80, 2460, 1074, 1416,
	1418, 1419, 1333, 1334, 2627, 1417, 1336, 1408, 1424, 1357,
	1409, 1032, 1289, 2459, 1033, 2453, 1307, 1026, 2308, 2307,
	1921, 1427, 1339, 1919, 2565, 680, 1453, 1454, 1354, 1428,
	1900, 955, 1358, 1355, 1129, 954, 1324, 571, 570, 573,
	574, 575, 576, 1132, 2723, 928, 572, 577, 2685, 1380,
	2628, 2683, 680, 680, 2640, 1072, 1073, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1064, 1396, 1376, 1074, 927, 1379,
	2566, 1450, 1863, 1451, 1864, 1131, 1422, 2561, 2560, 2517,
	2469, 1496, 1388, 2437, 2400, 2345, 2344, 1545, 2343, 1393,
	2305, 2199, 1176, 2136, 1423, 1917, 1176, 1688, 127, 1335,
	1306, 2710, 2709, 2571, 2515, 2486, 127, 127, 1881, 2480,
	2368, 127, 127, 2237, 2222, 127, 127, 127, 1420, 2218,
	1502, 1505, 2210, 2180, 2164, 1129, 2163, 1517, 2162, 1952,
	1951, 1682, 1666, 1665, 1452, 680, 680, 1332, 1468, 1329,
	1298, 1304, 1556, 1473, 1297, 1296, 1558, 1295, 1178, 1284,
	1278, 1277, 1276, 1178, 1274, 950, 1424, 1178, 1534, 1537,
	1538, 1539, 1535, 884, 1536, 1540, 410, 1550, 2094, 2095,
	657, 408, 994, 1413, 1414, 2411, 2737, 2293, 2730, 2647,
	1027, 2293, 2645, 1541, 2293, 2643, 1027, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 467, 2293, 2519, 2411, 2511,
	2411, 2427, 1853, 127, 1576, 2411, 1027, 1658, 1269, 2411,
	2410, 2479, 1554, 127, 2431, 127, 127, 447, 447, 447,
	2293, 2292, 127, 2430, 1575, 2274, 1027, 1726, 1027, 2151,
	2150, 2147, 2148, 1616, 1617, 1618, 1619, 2159, 1154, 2228,
	1853, 2137, 1574, 2147, 2146, 1587, 673, 960, 1559, 127,
	127, 127, 1563, 1562, 1568, 1752, 1027, 1656, 1657, 1529,
	1131, 1529, 1027, 1853, 1500, 1501, 1456, 1636, 1637, 1584,
	1464, 1183, 1577, 1052, 127, 96, 127, 1183, 1684, 1594,
	680, 1475, 1476, 1650, 680, 1528, 1632, 1633, 1634, 1635,
	81, 1027, 1701, 1700, 1488, 1494, 1685, 2229, 1492, 1628,
	1494, 1027, 1206, 1205, 2478, 1724, 680, 2075, 2695, 680,
	2089, 84, 1513, 1555, 2089, 1182, 1551, 1553, 1494, 1601,
	2089, 2667, 999, 1649, 1529, 2652, 2268, 1184, 1573, 1186,
	1400, 1664, 2160, 1184, 1743, 1182, 1690, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 998,
	2149, 1074, 958, 1670, 957, 2103, 1977, 958, 1676, 1424,
	1867, 1564, 2229, 1752, 1781, 1752, 1178, 1780, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	960, 1399, 1074, 1337, 1663, 1680, 1401, 1022, 1360, 1378,
	1344, 1363, 1364, 1365, 1427, 1367, 1368, 1683, 1638, 1369,
	1287, 1285, 1428, 1689, 1552, 1370, 1268, 1188, 668, 1371,
	1372, 2644, 1373, 1374, 1534, 1537, 1538, 1539, 1535, 2102,
	1536, 1540, 2485, 2483, 1696, 2310, 1640, 1575, 1602, 2280,
	612, 1631, 2130, 2094, 2095, 1679, 1820, 1822, 1627, 1871,
	1176, 1176, 1176, 1176, 1176, 1423, 1703, 964, 1647, 1706,
	1622, 1723, 1748, 1621, 1729, 1730, 1545, 1731, 1845, 127,
	127, 127, 127, 127, 1270, 947, 1176, 418, 1728, 2788,
	81, 127, 2786, 2769, 1821, 127, 2158, 2097, 2075, 127,
	1923, 1292, 1826, 1744, 1000, 127, 961, 956, 1836, 1838,
	1834, 1538, 1539, 1837, 1496, 1835, 1738, 2100, 2099, 1833,
	1832, 1178, 1178, 1178, 1178, 1178, 536, 537, 2706, 680,
	1825, 2664, 2006, 1855, 1411, 1856, 1854, 1178, 1848, 1786,
	1040, 1041, 664, 2694, 2271, 1736, 676, 1178, 1735, 1036,
	2401, 1840, 2367, 2296, 2217, 449, 2216, 1883, 2135, 1847,
	2134, 1325, 1875, 2579, 2126, 657, 873, 2576, 2639, 1038,
	2638, 2473, 80, 2684, 2471, 1880, 1882, 2557, 1710, 2556,
	409, 1955, 1029, 1808, 2456, 2457, 1910, 1201, 945, 929,
	680, 926, 925, 2719, 1030, 885, 2490, 1828, 1829, 447,
	1831, 1827, 2489, 1868, 1830, 2266, 2377, 1465, 1466, 1269,
	1925, 1839, 1687, 127, 447, 1403, 1404, 444, 2350, 1643,
	1478, 1479, 1480, 1481, 1291, 2351, 2696, 1957, 1194, 447,
	1901, 1902, 1858, 2632, 2475, 1493, 1495, 1908, 1866, 1281,
	1926, 1499, 1787, 1870, 1950, 1758, 1760, 1915, 1675, 447,
	96, 680, 1040, 1041, 1949, 80, 1394, 447, 1772, 1773,
	1774, 1775, 1272, 1734, 1810, 1018, 1019, 2718, 2717, 2716,
	2434, 1733, 1709, 911, 533, 2687, 680, 680, 2686, 2636,
	2580, 2498, 127, 1918, 2494, 1876, 1879, 1920, 534, 84,
	2027, 2493, 680, 1129, 2380, 1853, 1928, 1929, 1930, 2790,
	2789, 458, 2197, 1973, 1971, 1940, 1970, 1425, 1798, 680,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1795, 1707, 1321, 1424, 1954,
	1953, 1043, 2789, 2790, 2508, 2133, 1397, 668, 456, 1960,
	86, 1962, 2536, 52, 1909, 55, 1911, 1912, 1913, 1914,
	2080, 80, 2538, 19, 2537, 18, 2539, 20, 1976, 1987,
	1, 1998, 1999, 2540, 21, 2002, 1981, 2535, 15, 1968,
	680, 1697, 680, 1982, 467, 2105, 1361, 1974, 2534, 14,
	2109, 2110, 2111, 2013, 2330, 2076, 2004, 2005, 2329, 2081,
	2012, 1508, 1826, 2528, 10, 680, 2021, 2070, 2336, 1519,
	2088, 1052, 2011, 2079, 2551, 34, 2017, 1979, 1990, 1995,
	2165, 1702, 2549, 33, 1423, 680, 2168, 680, 1938, 680,
	1825, 680, 2548, 32, 2547, 28, 2346, 2059, 2104, 2546,
	27, 2114, 1279, 2060, 1681, 2108, 2545, 26, 2543, 23,
	2445, 2022, 2023, 2112, 2542, 22, 2544, 24, 2533, 13,
	2029, 2030, 2530, 12, 2083, 2529, 11, 868, 2128, 2527,
	9, 2129, 2037, 2038, 2039, 2040, 1648, 2098, 951, 2044,
	2045, 2046, 2637, 127, 2575, 2577, 2156, 2157, 2470, 444,
	1396, 2106, 2352, 2314, 2313, 2125, 1932, 2127, 1931, 2175,
	946, 447, 1636, 2119, 1637, 1711, 127, 447, 1342, 1980,
	2118, 1725, 1983, 1659, 1719, 2587, 1708, 1001, 1588, 1578,
	2161, 127, 670, 447, 92, 680, 447, 1667, 894, 376,
	447, 447, 1585, 447, 1889, 2011, 2578, 948, 1888, 467,
	2140, 1898, 1599, 1887, 1886, 2573, 1890, 2182, 2177, 1214,
	680, 1212, 2028, 1213, 127, 680, 2031, 2032, 2033, 1211,
	1216, 2036, 680, 680, 1215, 380, 1196, 2072, 1750, 2619,
	1268, 2206, 2236, 1753, 1044, 102, 56, 2369, 1755, 1756,
	1994, 452, 453, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 97, 105, 1771, 382, 2227, 1082, 2185, 1776, 1777,
	1778, 1779, 2230, 1732, 1859, 1783, 1784, 1785, 655, 656,
	2262, 2113, 1788, 1789, 1790, 1269, 648, 1024, 2183, 2201,
	1796, 2207, 2221, 1799, 1800, 2200, 2599, 2649, 1805, 2668,
	1034, 2592, 1807, 1811, 1143, 1812, 1813, 1814, 1514, 1815,
	1816, 2138, 2139, 2187, 554, 127, 2191, 1843, 2142, 2385,
	2195, 2196, 2594, 2198, 1415, 2145, 569, 568, 1841, 1842,
	567, 564, 680, 565, 2660, 1674, 1406, 1817, 1056, 680,
	680, 680, 1522, 1826, 2152, 552, 543, 1174, 680, 1167,
	1686, 1533, 1531, 2288, 2289, 2290, 1530, 1293, 644, 2275,
	680, 2096, 1745, 1746, 1747, 2092, 1543, 1173, 80, 70,
	2257, 1825, 909, 398, 2299, 2286, 2247, 2263, 467, 2505,
	38, 664, 2233, 457, 538, 2267, 664, 1197, 127, 25,
	2235, 17, 918, 16, 1712, 2276, 866, 42, 44, 1927,
	2238, 2239, 1644, 2618, 2752, 932, 2311, 2776, 2671, 2242,
	31, 30, 29, 2291, 2541, 2287, 2550, 2532, 2326, 2327,
	2328, 2531, 1868, 2739, 2738, 4, 1015, 447, 2223, 71,
	35, 666, 2, 0, 0, 0, 0, 541, 2300, 1176,
	1802, 1803, 1804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2304, 0, 2306, 680, 0, 127, 0,
	2363, 2364, 2325, 0, 680, 2365, 0, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 2080,
	2353, 1074, 2080, 2406, 0, 0, 2373, 2382, 2383, 2381,
	2354, 0, 0, 0, 2355, 2105, 2359, 0, 2366, 2358,
	1178, 2265, 2125, 0, 680, 0, 0, 0, 1131, 1636,
	680, 0, 1122, 1123, 0, 127, 2374, 127, 2277, 2278,
	0, 2405, 2279, 680, 2409, 2281, 0, 0, 0, 0,
	0, 2403, 2079, 1131, 0, 2079, 0, 2016, 0, 0,
	680, 1177, 2433, 2024, 2435, 0, 0, 2357, 2412, 0,
	2303, 0, 2389, 0, 0, 2034, 2035, 2402, 0, 2426,
	0, 2432, 0, 0, 0, 2413, 2378, 0, 2043, 0,
	2423, 2418, 2047, 467, 2011, 1550, 2408, 2414, 0, 0,
	0, 467, 2424, 2425, 0, 1271, 0, 0, 2491, 124,
	2436, 0, 0, 0, 0, 0, 0, 0, 401, 0,
	0, 0, 680, 2448, 0, 0, 2082, 0, 0, 1956,
	2458, 2463, 0, 0, 0, 2080, 0, 80, 0, 0,
	0, 1874, 2476, 2466, 0, 0, 0, 0, 2484, 2481,
	2482, 0, 645, 0, 0, 0, 669, 0, 2495, 2488,
	855, 680, 0, 0, 0, 2496, 80, 0, 0, 0,
	0, 2521, 0, 0, 867, 2510, 2497, 0, 0, 0,
	0, 2514, 0, 0, 2509, 881, 0, 0, 2079, 0,
	0, 0, 0, 0, 0, 0, 2516, 0, 0, 0,
	2015, 0, 2513, 0, 0, 0, 0, 0, 0, 1176,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 0, 127, 0,
	0, 2041, 2042, 680, 2428, 680, 2429, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 2062, 0, 2063, 2064,
	0, 0, 2065, 0, 2583, 0, 2585, 0, 0, 2582,
	2597, 0, 0, 2584, 0, 2581, 0, 0, 127, 0,
	1178, 2602, 2614, 0, 2598, 2607, 676, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 680, 676, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 680,
	2653, 680, 2132, 2635, 0, 2633, 1455, 0, 0, 0,
	0, 0, 0, 0, 2243, 0, 0, 1603, 1604, 2642,
	1609, 1610, 1611, 1612, 1613, 2252, 2253, 2663, 0, 0,
	0, 2258, 0, 1486, 1487, 2514, 0, 0, 1623, 1624,
	1625, 0, 0, 2690, 0, 2692, 2269, 2270, 0, 2272,
	0, 0, 2273, 0, 680, 2678, 664, 2698, 2699, 0,
	0, 0, 0, 0, 0, 80, 2184, 2689, 0, 2693,
	0, 80, 2285, 2697, 2623, 2691, 2722, 680, 2713, 2708,
	2715, 0, 2705, 2123, 0, 0, 444, 2027, 0, 680,
	883, 2707, 2729, 0, 0, 0, 2728, 2733, 447, 664,
	0, 2593, 2596, 80, 2732, 680, 1131, 0, 80, 0,
	0, 0, 0, 676, 0, 680, 676, 676, 2746, 0,
	2743, 2749, 2742, 0, 2741, 2232, 2740, 0, 0, 0,
	2763, 0, 0, 2762, 953, 80, 2765, 2256, 80, 80,
	0, 0, 0, 80, 2722, 0, 2751, 0, 2779, 2770,
	2771, 0, 0, 2773, 0, 2783, 0, 0, 0, 444,
	2615, 2616, 2785, 80, 0, 0, 80, 2787, 2722, 2782,
	0, 447, 2255, 2798, 2800, 0, 0, 2259, 2260, 2261,
	0, 2795, 80, 2808, 80, 0, 0, 2722, 80, 2722,
	2205, 0, 0, 0, 0, 0, 0, 1874, 0, 2720,
	2212, 2214, 80, 2813, 2254, 80, 0, 2722, 0, 0,
	2205, 0, 80, 0, 0, 0, 80, 2722, 0, 0,
	2822, 2722, 0, 391, 0, 2395, 2396, 2397, 0, 2399,
	0, 0, 0, 0, 1063, 1062, 1072, 1073, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1064, 0, 0, 1074, 0,
	0, 0, 0, 0, 2415, 2416, 2417, 0, 0, 0,
	2596, 1695, 0, 0, 0, 1695, 0, 0, 0, 1063,
	1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1064, 2714, 0, 1074, 0, 0, 0, 1695, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 467, 0, 0,
	0, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 0, 0, 1074, 676, 0, 0, 0,
	0, 369, 0, 0, 0, 0, 0, 0, 372, 0,
	0, 0, 0, 0, 0, 0, 0, 381, 389, 390,
	2241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2387, 2388, 2499, 2500, 0, 0, 2501, 2502, 2503,
	2504, 0, 1169, 0, 1179, 2391, 2392, 2393, 2394, 0,
	0, 0, 378, 2398, 0, 379, 0, 0, 387, 388,
	0, 0, 0, 0, 0, 0, 2799, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0,
	0, 1074, 0, 0, 2240, 1903, 1904, 1905, 1907, 0,
	0, 0, 0, 0, 2205, 0, 0, 0, 2068, 0,
	0, 0, 1037, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 2205, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 2067, 0, 1074, 0, 0, 0, 0,
	125, 2603, 0, 395, 664, 0, 2608, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 0, 0, 467, 0, 467,
	0, 0, 466, 0, 0, 2123, 0, 0, 0, 0,
	542, 0, 0, 647, 665, 370, 0, 125, 0, 0,
	0, 125, 2123, 1063, 1062, 1072, 1073, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1064, 125, 0, 1074, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 383, 373,
	374, 1924, 394, 2646, 0, 0, 375, 377, 0, 371,
	393, 392, 0, 0, 0, 2654, 2066, 0, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	0, 0, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 0, 1294, 0, 0, 0,
	2586, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 1310, 1311, 1312, 1313, 0, 0, 0,
	1457, 1462, 1463, 0, 0, 0, 1467, 0, 1469, 1470,
	1471, 1472, 0, 1474, 0, 0, 1477, 676, 676, 0,
	0, 1482, 1483, 1484, 1485, 0, 0, 0, 1489, 1490,
	1491, 0, 0, 676, 0, 0, 1497, 1498, 0, 0,
	0, 1504, 1507, 0, 1512, 676, 0, 0, 0, 0,
	2025, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 2014, 0, 1074, 1520, 0, 1523, 1524,
	0, 0, 0, 0, 0, 2123, 0, 2123, 0, 0,
	0, 0, 0, 0, 0, 0, 2141, 0, 0, 0,
	0, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 0, 0, 1074, 0, 0, 526, 664,
	0, 676, 0, 2087, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 2209,
	0, 0, 0, 0, 0, 0, 2087, 0, 530, 0,
	0, 0, 0, 0, 0, 1412, 0, 2815, 2816, 0,
	0, 0, 0, 0, 482, 0, 676, 0, 676, 0,
	676, 0, 2122, 0, 1058, 0, 1061, 0, 0, 0,
	0, 125, 490, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	0, 1059, 1060, 1057, 0, 0, 0, 0, 0, 0,
	0, 1063, 1062, 1072, 1073, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1064, 0, 0, 1074, 0, 0, 0, 0,
	2760, 0, 0, 0, 0, 125, 1209, 0, 0, 0,
	0, 0, 0, 0, 488, 470, 0, 0, 0, 2244,
	2245, 0, 2246, 0, 492, 2248, 2123, 2250, 0, 0,
	0, 0, 0, 517, 0, 0, 483, 0, 477, 0,
	0, 0, 0, 491, 0, 0, 2190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 466, 0, 0, 0,
	1527, 0, 0, 0, 2801, 0, 0, 0, 0, 0,
	0, 2215, 0, 0, 1557, 0, 2220, 495, 493, 0,
	0, 0, 496, 2224, 2225, 0, 0, 0, 504, 471,
	0, 508, 2294, 2295, 0, 0, 0, 0, 0, 469,
	1749, 0, 0, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 510, 0, 0, 0, 0, 0,
	0, 484, 485, 487, 514, 0, 516, 522, 1063, 1062,
	1072, 1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064,
	0, 0, 1074, 2679, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 1757, 0, 0,
	0, 0, 0, 0, 0, 1642, 0, 0, 1769, 1770,
	664, 0, 0, 0, 0, 1653, 0, 1654, 1655, 0,
	0, 1782, 0, 2283, 1662, 0, 0, 0, 0, 0,
	2283, 2283, 2283, 0, 0, 0, 0, 0, 0, 676,
	472, 0, 0, 0, 0, 1223, 1806, 0, 0, 494,
	0, 2283, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 125, 125, 125, 953, 0, 0, 0,
	0, 0, 0, 665, 0, 0, 1237, 0, 665, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 1063, 1062, 1072, 1073, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1064, 0, 0, 1074, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 0, 0, 0, 676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 509,
	0, 0, 0, 0, 0, 2407, 0, 0, 0, 0,
	0, 2283, 0, 0, 0, 0, 0, 1237, 0, 0,
	0, 0, 0, 0, 2122, 1250, 1253, 1254, 1255, 1256,
	1257, 1258, 0, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 2122, 1238, 1239, 1240, 1241, 1217, 1221, 1251, 1218,
	1224, 1220, 1222, 1219, 0, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 125, 125, 125, 0, 0,
	0, 0, 2512, 0, 0, 0, 1250, 1253, 1254, 1255,
	1256, 1257, 1258, 0, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1252, 1238, 1239, 1240, 1241, 1217, 1221, 1251,
	1218, 1224, 1220, 1222, 1219, 0, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 1252, 0, 676, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2648, 0, 2651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1461, 1461, 1461, 0, 0, 0, 1461, 1461, 1461, 1461,
	1461, 1461, 1461, 1461, 0, 0, 1461, 0, 0, 0,
	0, 1461, 1461, 1461, 1461, 0, 0, 0, 1461, 1461,
	1461, 0, 0, 0, 0, 2122, 1461, 1461, 0, 0,
	0, 1461, 1461, 0, 1461, 0, 0, 0, 665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2283, 0,
	0, 0, 0, 0, 0, 0, 1461, 1461, 1461, 1461,
	676, 125, 0, 0, 0, 0, 0, 0, 0, 125,
	466, 0, 0, 0, 125, 125, 2651, 0, 125, 1560,
	1303, 665, 0, 0, 0, 0, 2735, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2155, 0, 0, 0, 0,
	2202, 0, 0, 0, 2204, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 2181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 2186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 125, 125,
	0, 0, 0, 0, 0, 125, 2219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1671, 1672, 125, 0, 0, 0, 0, 488,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 125, 517, 466,
	0, 483, 0, 477, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 493, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 504, 471, 0, 508, 0, 1303, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 510,
	0, 0, 0, 0, 0, 0, 484, 485, 487, 514,
	0, 516, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1461,
	2312, 0, 0, 0, 0, 0, 0, 1461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1461, 1461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1461, 526, 0, 0, 1461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 472, 1461, 0, 0, 0,
	0, 0, 530, 0, 494, 0, 0, 0, 0, 0,
	0, 665, 125, 125, 125, 125, 125, 0, 482, 0,
	0, 0, 0, 0, 466, 0, 0, 0, 125, 0,
	0, 0, 466, 0, 0, 0, 490, 0, 125, 0,
	0, 0, 0, 0, 523, 524, 665, 0, 0, 480,
	473, 474, 475, 476, 478, 497, 498, 502, 503, 520,
	519, 518, 521, 525, 528, 527, 529, 479, 481, 489,
	499, 500, 501, 505, 506, 515, 511, 513, 0, 0,
	1209, 0, 0, 0, 0, 0, 0, 0, 488, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 0, 0,
	483, 0, 477, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 509, 0, 125, 0, 0, 0,
	0, 495, 493, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 504, 471, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 510, 0,
	0, 0, 0, 0, 0, 484, 485, 487, 514, 0,
	516, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1461, 0, 0, 0,
	0, 0, 0, 0, 0, 1461, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 472, 0, 0, 1267, 0, 0,
	0, 0, 0, 494, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2610, 665, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 0, 0,
	0, 0, 0, 0, 1209, 0, 0, 0, 0, 0,
	0, 0, 488, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 0, 0, 483, 0, 477, 0, 0, 0,
	0, 491, 0, 512, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 509, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 0,
	496, 0, 0, 0, 125, 0, 504, 471, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 486, 510, 0, 0, 0, 0, 125, 0, 484,
	485, 487, 514, 0, 516, 522, 2204, 0, 0, 0,
	0, 0, 542, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 466, 0,
	0, 0, 665, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 0, 0, 483, 0, 477, 0, 523, 524, 0,
	491, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 125, 0, 0, 495, 493, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 504, 471, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 510, 0, 0, 0, 0, 0, 512, 484, 485,
	487, 514, 0, 516, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 509, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 466, 0,
	466, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 480, 473, 474, 475, 476, 478, 497, 498, 502,
	503, 520, 519, 518, 521, 525, 528, 527, 529, 479,
	481, 489, 499, 500, 501, 505, 506, 515, 511, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 811, 330, 756,
	838, 714, 740, 851, 744, 748, 791, 697, 769, 256,
	736, 698, 0, 718, 687, 728, 688, 715, 758, 176,
	713, 813, 772, 837, 213, 786, 0, 166, 221, 219,
	0, 125, 0, 263, 329, 836, 764, 0, 845, 216,
	0, 781, 846, 317, 240, 0, 0, 760, 822, 767,
	809, 755, 793, 706, 780, 840, 737, 788, 841, 0,
	0, 665, 0, 2617, 0, 0, 0, 0, 0, 0,
	0, 125, 701, 0, 784, 834, 731, 787, 790, 685,
	783, 0, 692, 699, 850, 829, 721, 722, 723, 0,
	0, 0, 0, 0, 0, 0, 759, 768, 803, 752,
	349, 267, 284, 305, 746, 275, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 778, 0, 0,
	0, 700, 693, 0, 0, 757, 0, 0, 0, 705,
	684, 720, 805, 0, 682, 241, 144, 810, 828, 754,
	204, 360, 832, 751, 750, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 802, 299, 733, 683,
	814, 716, 729, 167, 725, 291, 260, 348, 738, 775,
	290, 217, 338, 798, 833, 347, 742, 817, 357, 362,
	724, 765, 703, 314, 177, 0, 133, 735, 274, 172,
	209, 753, 792, 717, 164, 800, 779, 816, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 2620, 2621,
	2622, 747, 739, 0, 0, 353, 749, 302, 301, 743,
	199, 808, 782, 689, 283, 795, 205, 132, 327, 365,
	150, 211, 332, 681, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 730, 797, 807,
	281, 304, 334, 152, 321, 726, 727, 732, 804, 293,
	815, 826, 839, 224, 179, 182, 193, 200, 789, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 690, 0, 319, 351, 367, 154,
	712, 307, 333, 741, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 710, 711, 708, 0, 709, 770, 771, 842,
	843, 844, 806, 702, 0, 823, 824, 0, 0, 0,
	0, 0, 812, 830, 831, 794, 852, 745, 707, 691,
	694, 695, 696, 704, 761, 762, 774, 777, 820, 819,
	818, 821, 825, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 131, 140,
	215, 853, 282, 185, 352, 686, 174, 0, 763, 766,
	776, 801, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 799, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	827, 0, 785, 796, 835, 811, 330, 756, 838, 714,
	740, 851, 744, 748, 791, 697, 769, 256, 736, 698,
	0, 718, 687, 728, 688, 715, 758, 176, 713, 813,
	772, 837, 213, 786, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 836, 764, 0, 845, 216, 0, 781,
	846, 317, 240, 0, 0, 760, 822, 767, 809, 755,
	793, 706, 780, 840, 737, 788, 841, 0, 0, 0,
	0, 679, 0, 1582, 1583, 0, 0, 0, 0, 0,
	701, 0, 784, 834, 731, 787, 790, 685, 783, 0,
	692, 699, 850, 829, 721, 722, 723, 1869, 0, 0,
	0, 0, 0, 0, 759, 768, 803, 752, 349, 267,
	284, 305, 746, 275, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 778, 0, 0, 0, 700,
	693, 0, 0, 757, 0, 0, 0, 705, 684, 720,
	805, 0, 682, 241, 144, 810, 828, 754, 204, 360,
	832, 751, 750, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 802, 299, 733, 683, 814, 716,
	729, 167, 725, 291, 260, 348, 738, 775, 290, 217,
	338, 798, 833, 347, 742, 817, 357, 362, 724, 765,
	703, 314, 177, 0, 133, 735, 274, 172, 209, 753,
	792, 717, 164, 800, 779, 816, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 747,
	739, 0, 0, 353, 749, 302, 301, 743, 199, 808,
	782, 689, 283, 795, 205, 132, 327, 365, 150, 211,
	332, 681, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 730, 797, 807, 281, 304,
	334, 152, 321, 726, 727, 732, 804, 293, 815, 826,
	839, 224, 179, 182, 193, 200, 789, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 690, 0, 319, 351, 367, 154, 712, 307,
	333, 741, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	710, 711, 708, 0, 709, 770, 771, 842, 843, 844,
	806, 702, 0, 823, 824, 0, 0, 0, 0, 0,
	812, 830, 831, 794, 852, 745, 707, 691, 694, 695,
	696, 704, 761, 762, 774, 777, 820, 819, 818, 821,
	825, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 131, 140, 215, 853,
	282, 185, 352, 686, 174, 0, 763, 766, 776, 801,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 799, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 827, 0,
	785, 796, 835, 811, 330, 756, 838, 714, 740, 851,
	744, 748, 791, 697, 769, 256, 736, 698, 0, 718,
	687, 728, 688, 715, 758, 176, 713, 813, 772, 837,
	213, 786, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 836, 764, 0, 845, 216, 0, 781, 846, 317,
	240, 0, 0, 760, 822, 767, 809, 755, 793, 706,
	780, 840, 737, 788, 841, 0, 0, 0, 0, 679,
	0, 1582, 1583, 0, 0, 0, 0, 0, 701, 0,
	784, 834, 731, 787, 790, 685, 783, 0, 692, 699,
	850, 829, 721, 722, 723, 0, 0, 0, 0, 0,
	0, 0, 759, 768, 803, 752, 349, 267, 284, 305,
	746, 275, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 778, 0, 0, 0, 700, 693, 0,
	0, 757, 0, 0, 0, 705, 684, 720, 805, 0,
	682, 241, 144, 810, 828, 754, 204, 360, 832, 751,
	750, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 802, 299, 733, 683, 814, 716, 729, 167,
	725, 291, 260, 348, 738, 775, 290, 217, 338, 798,
	833, 347, 742, 817, 357, 362, 724, 765, 703, 314,
	177, 0, 133, 735, 274, 172, 209, 753, 792, 717,
	164, 800, 779, 816, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 747, 739, 0,
	0, 353, 749, 302, 301, 743, 199, 808, 782, 689,
	283, 795, 205, 132, 327, 365, 150, 211, 332, 681,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 730, 797, 807, 281, 304, 334, 152,
	321, 726, 727, 732, 804, 293, 815, 826, 839, 224,
	179, 182, 193, 200, 789, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	690, 0, 319, 351, 367, 154, 712, 307, 333, 741,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 710, 711,
	708, 0, 709, 770, 771, 842, 843, 844, 806, 702,
	0, 823, 824, 0, 0, 0, 0, 0, 812, 830,
	831, 794, 852, 745, 707, 691, 694, 695, 696, 704,
	761, 762, 774, 777, 820, 819, 818, 821, 825, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 131, 140, 215, 853, 282, 185,
	352, 686, 174, 0, 763, 766, 776, 801, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 799,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 827, 0, 785, 796,
	835, 2084, 330, 756, 838, 714, 740, 851, 744, 748,
	791, 697, 769, 256, 736, 698, 0, 718, 687, 728,
	688, 715, 758, 176, 713, 813, 772, 837, 213, 786,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 836,
	764, 0, 845, 216, 0, 781, 846, 317, 240, 0,
	0, 760, 822, 767, 809, 755, 793, 706, 780, 840,
	737, 788, 841, 81, 0, 1027, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 784, 834,
	731, 787, 790, 685, 783, 0, 692, 699, 850, 829,
	721, 722, 723, 0, 0, 0, 0, 0, 0, 0,
	759, 768, 803, 752, 349, 267, 284, 305, 746, 275,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 778, 0, 0, 0, 700, 693, 0, 0, 757,
	0, 0, 0, 705, 684, 720, 805, 0, 682, 241,
	144, 810, 828, 754, 204, 360, 832, 751, 750, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	802, 299, 733, 683, 814, 716, 729, 167, 725, 291,
	260, 348, 738, 775, 290, 217, 338, 798, 833, 347,
	742, 817, 357, 362, 724, 765, 703, 314, 177, 0,
	133, 735, 274, 172, 209, 753, 792, 717, 164, 800,
	779, 816, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 747, 739, 0, 0, 353,
	749, 302, 301, 743, 199, 808, 782, 689, 283, 795,
	205, 132, 327, 365, 150, 211, 332, 681, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 730, 797, 807, 281, 304, 334, 152, 321, 726,
	727, 732, 804, 293, 815, 826, 839, 224, 179, 182,
	193, 200, 789, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 690, 0,
	319, 351, 367, 154, 712, 307, 333, 741, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 710, 711, 708, 0,
	709, 770, 771, 842, 843, 844, 806, 702, 0, 823,
	824, 0, 0, 0, 0, 0, 812, 830, 831, 794,
	852, 745, 707, 691, 694, 695, 696, 704, 761, 762,
	774, 777, 820, 819, 818, 821, 825, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 131, 140, 215, 2085, 282, 185, 352, 686,
	174, 0, 763, 766, 776, 801, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 799, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 827, 0, 785, 796, 835, 811,
	330, 756, 838, 714, 740, 851, 744, 748, 791, 697,
	769, 256, 736, 698, 0, 718, 687, 728, 688, 715,
	758, 176, 713, 813, 772, 837, 213, 786, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 836, 764, 0,
	845, 216, 0, 781, 846, 317, 240, 0, 0, 760,
	822, 767, 809, 755, 793, 706, 780, 840, 737, 788,
	841, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 784, 834, 731, 787,
	790, 685, 783, 0, 692, 699, 850, 829, 721, 722,
	723, 0, 0, 0, 0, 0, 0, 0, 759, 768,
	803, 752, 349, 267, 284, 305, 746, 275, 734, 0,
	0, 0, 0, 0, 0, 2384, 0, 719, 0, 778,
	0, 0, 0, 700, 693, 0, 0, 757, 0, 0,
	0, 705, 684, 720, 805, 0, 682, 241, 144, 810,
	828, 754, 204, 360, 832, 751, 750, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 802, 299,
	733, 683, 814, 716, 729, 167, 725, 291, 260, 348,
	738, 775, 290, 217, 338, 798, 833, 347, 742, 817,
	357, 362, 724, 765, 703, 314, 177, 0, 133, 735,
	274, 172, 209, 753, 792, 717, 164, 800, 779, 816,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 747, 739, 0, 0, 353, 749, 302,
	301, 743, 199, 808, 782, 689, 283, 795, 205, 132,
	327, 365, 150, 211, 332, 681, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 730,
	797, 807, 281, 304, 334, 152, 321, 726, 727, 732,
	804, 293, 815, 826, 839, 224, 179, 182, 193, 200,
	789, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 690, 0, 319, 351,
	367, 154, 712, 307, 333, 741, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 710, 711, 708, 0, 709, 770,
	771, 842, 843, 844, 806, 702, 0, 823, 824, 0,
	0, 0, 0, 0, 812, 830, 831, 794, 852, 745,
	707, 691, 694, 695, 696, 704, 761, 762, 774, 777,
	820, 819, 818, 821, 825, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	131, 140, 215, 853, 282, 185, 352, 686, 174, 0,
	763, 766, 776, 801, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 799, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 827, 0, 785, 796, 835, 811, 330, 756,
	838, 714, 740, 851, 744, 748, 791, 697, 769, 256,
	736, 698, 0, 718, 687, 728, 688, 715, 758, 176,
	713, 813, 772, 837, 213, 786, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 836, 764, 0, 845, 216,
	0, 781, 846, 317, 240, 0, 0, 760, 822, 767,
	809, 755, 793, 706, 780, 840, 737, 788, 841, 0,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 784, 834, 731, 787, 790, 685,
	783, 0, 692, 699, 850, 829, 721, 722, 723, 0,
	0, 0, 0, 0, 0, 0, 759, 768, 803, 752,
	349, 267, 284, 305, 746, 275, 734, 0, 0, 0,
	0, 0, 0, 2020, 0, 719, 0, 778, 0, 0,
	0, 700, 693, 0, 0, 757, 0, 0, 0, 705,
	684, 720, 805, 0, 682, 241, 144, 810, 828, 754,
	204, 360, 832, 751, 750, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 802, 299, 733, 683,
	814, 716, 729, 167, 725, 291, 260, 348, 738, 775,
	290, 217, 338, 798, 833, 347, 742, 817, 357, 362,
	724, 765, 703, 314, 177, 0, 133, 735, 274, 172,
	209, 753, 792, 717, 164, 800, 779, 816, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 747, 739, 0, 0, 353, 749, 302, 301, 743,
	199, 808, 782, 689, 283, 795, 205, 132, 327, 365,
	150, 211, 332, 681, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 730, 797, 807,
	281, 304, 334, 152, 321, 726, 727, 732, 804, 293,
	815, 826, 839, 224, 179, 182, 193, 200, 789, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 690, 0, 319, 351, 367, 154,
	712, 307, 333, 741, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 710, 711, 708, 0, 709, 770, 771, 842,
	843, 844, 806, 702, 0, 823, 824, 0, 0, 0,
	0, 0, 812, 830, 831, 794, 852, 745, 707, 691,
	694, 695, 696, 704, 761, 762, 774, 777, 820, 819,
	818, 821, 825, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 131, 140,
	215, 853, 282, 185, 352, 686, 174, 0, 763, 766,
	776, 801, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 799, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	827, 0, 785, 796, 835, 811, 330, 756, 838, 714,
	740, 851, 744, 748, 791, 697, 769, 256, 736, 698,
	0, 718, 687, 728, 688, 715, 758, 176, 713, 813,
	772, 837, 213, 786, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 836, 764, 0, 845, 216, 0, 781,
	846, 317, 240, 0, 0, 760, 822, 767, 809, 755,
	793, 706, 780, 840, 737, 788, 841, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 784, 834, 731, 787, 790, 685, 783, 0,
	692, 699, 850, 829, 721, 722, 723, 0, 0, 0,
	0, 0, 0, 0, 759, 768, 803, 752, 349, 267,
	284, 305, 746, 275, 734, 0, 0, 0, 0, 0,
	0, 2010, 0, 719, 0, 778, 0, 0, 0, 700,
	693, 0, 0, 757, 0, 0, 0, 705, 684, 720,
	805, 0, 682, 241, 144, 810, 828, 754, 204, 360,
	832, 751, 750, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 802, 299, 733, 683, 814, 716,
	729, 167, 725, 291, 260, 348, 738, 775, 290, 217,
	338, 798, 833, 347, 742, 817, 357, 362, 724, 765,
	703, 314, 177, 0, 133, 735, 274, 172, 209, 753,
	792, 717, 164, 800, 779, 816, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 747,
	739, 0, 0, 353, 749, 302, 301, 743, 199, 808,
	782, 689, 283, 795, 205, 132, 327, 365, 150, 211,
	332, 681, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 730, 797, 807, 281, 304,
	334, 152, 321, 726, 727, 732, 804, 293, 815, 826,
	839, 224, 179, 182, 193, 200, 789, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 690, 0, 319, 351, 367, 154, 712, 307,
	333, 741, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	710, 711, 708, 0, 709, 770, 771, 842, 843, 844,
	806, 702, 0, 823, 824, 0, 0, 0, 0, 0,
	812, 830, 831, 794, 852, 745, 707, 691, 694, 695,
	696, 704, 761, 762, 774, 777, 820, 819, 818, 821,
	825, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 131, 140, 215, 853,
	282, 185, 352, 686, 174, 0, 763, 766, 776, 801,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 799, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 827, 0,
	785, 796, 835, 811, 330, 756, 838, 714, 740, 851,
	744, 748, 791, 697, 769, 256, 736, 698, 0, 718,
	687, 728, 688, 715, 758, 176, 713, 813, 772, 837,
	213, 786, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 836, 764, 0, 845, 216, 0, 781, 846, 317,
	240, 0, 0, 760, 822, 767, 809, 755, 793, 706,
	780, 840, 737, 788, 841, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	784, 834, 731, 787, 790, 685, 783, 0, 692, 699,
	850, 829, 721, 722, 723, 0, 0, 0, 0, 0,
	0, 0, 759, 768, 803, 752, 349, 267, 284, 305,
	746, 275, 734, 0, 0, 0, 0, 0, 0, 1561,
	0, 719, 0, 778, 0, 0, 0, 700, 693, 0,
	0, 757, 0, 0, 0, 705, 684, 720, 805, 0,
	682, 241, 144, 810, 828, 754, 204, 360, 832, 751,
	750, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 802, 299, 733, 683, 814, 716, 729, 167,
	725, 291, 260, 348, 738, 775, 290, 217, 338, 798,
	833, 347, 742, 817, 357, 362, 724, 765, 703, 314,
	177, 0, 133, 735, 274, 172, 209, 753, 792, 717,
	164, 800, 779, 816, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 747, 739, 0,
	0, 353, 749, 302, 301, 743, 199, 808, 782, 689,
	283, 795, 205, 132, 327, 365, 150, 211, 332, 681,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 730, 797, 807, 281, 304, 334, 152,
	321, 726, 727, 732, 804, 293, 815, 826, 839, 224,
	179, 182, 193, 200, 789, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	690, 0, 319, 351, 367, 154, 712, 307, 333, 741,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 710, 711,
	708, 0, 709, 770, 771, 842, 843, 844, 806, 702,
	0, 823, 824, 0, 0, 0, 0, 0, 812, 830,
	831, 794, 852, 745, 707, 691, 694, 695, 696, 704,
	761, 762, 774, 777, 820, 819, 818, 821, 825, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 131, 140, 215, 853, 282, 185,
	352, 686, 174, 0, 763, 766, 776, 801, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 799,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 827, 0, 785, 796,
	835, 811, 330, 756, 838, 714, 740, 851, 744, 748,
	791, 697, 769, 256, 736, 698, 0, 718, 687, 728,
	688, 715, 758, 176, 713, 813, 772, 837, 213, 786,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 836,
	764, 0, 845, 216, 0, 781, 846, 317, 240, 0,
	0, 760, 822, 767, 809, 755, 793, 706, 780, 840,
	737, 788, 841, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 784, 834,
	731, 787, 790, 685, 783, 0, 692, 699, 850, 829,
	721, 722, 723, 0, 0, 0, 0, 0, 0, 0,
	759, 768, 803, 752, 349, 267, 284, 305, 746, 275,
	734, 0, 0, 0, 0, 0, 0, 1421, 0, 719,
	0, 778, 0, 0, 0, 700, 693, 0, 0, 757,
	0, 0, 0, 705, 684, 720, 805, 0, 682, 241,
	144, 810, 828, 754, 204, 360, 832, 751, 750, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	802, 299, 733, 683, 814, 716, 729, 167, 725, 291,
	260, 348, 738, 775, 290, 217, 338, 798, 833, 347,
	742, 817, 357, 362, 724, 765, 703, 314, 177, 0,
	133, 735, 274, 172, 209, 753, 792, 717, 164, 800,
	779, 816, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 747, 739, 0, 0, 353,
	749, 302, 301, 743, 199, 808, 782, 689, 283, 795,
	205, 132, 327, 365, 150, 211, 332, 681, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 730, 797, 807, 281, 304, 334, 152, 321, 726,
	727, 732, 804, 293, 815, 826, 839, 224, 179, 182,
	193, 200, 789, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 690, 0,
	319, 351, 367, 154, 712, 307, 333, 741, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 710, 711, 708, 0,
	709, 770, 771, 842, 843, 844, 806, 702, 0, 823,
	824, 0, 0, 0, 0, 0, 812, 830, 831, 794,
	852, 745, 707, 691, 694, 695, 696, 704, 761, 762,
	774, 777, 820, 819, 818, 821, 825, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 131, 140, 215, 853, 282, 185, 352, 686,
	174, 0, 763, 766, 776, 801, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 799, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 827, 0, 785, 796, 835, 811,
	330, 756, 838, 714, 740, 851, 744, 748, 791, 697,
	769, 256, 736, 698, 0, 718, 687, 728, 688, 715,
	758, 176, 713, 813, 772, 837, 213, 786, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 836, 764, 0,
	845, 216, 0, 781, 846, 317, 240, 0, 0, 760,
	822, 767, 809, 755, 793, 706, 780, 840, 737, 788,
	841, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 701, 0, 784, 834, 731, 787,
	790, 685, 783, 0, 692, 699, 850, 829, 721, 722,
	723, 0, 0, 0, 0, 0, 0, 0, 759, 768,
	803, 752, 349, 267, 284, 305, 746, 275, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 778,
	0, 0, 0, 700, 693, 0, 0, 757, 0, 0,
	0, 705, 684, 720, 805, 0, 682, 241, 144, 810,
	828, 754, 204, 360, 832, 751, 750, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 802, 299,
	733, 683, 814, 716, 729, 167, 725, 291, 260, 348,
	738, 775, 290, 217, 338, 798, 833, 347, 742, 817,
	357, 362, 724, 765, 703, 314, 177, 0, 133, 735,
	274, 172, 209, 753, 792, 717, 164, 800, 779, 816,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 747, 739, 0, 0, 353, 749, 302,
	301, 743, 199, 808, 782, 689, 283, 795, 205, 132,
	327, 365, 150, 211, 332, 681, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 730,
	797, 807, 281, 304, 334, 152, 321, 726, 727, 732,
	804, 293, 815, 826, 839, 224, 179, 182, 193, 200,
	789, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 690, 0, 319, 351,
	367, 154, 712, 307, 333, 741, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 710, 711, 708, 0, 709, 770,
	771, 842, 843, 844, 806, 702, 0, 823, 824, 0,
	0, 0, 0, 0, 812, 830, 831, 794, 852, 745,
	707, 691, 694, 695, 696, 704, 761, 762, 774, 777,
	820, 819, 818, 821, 825, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 773,
	131, 140, 215, 853, 282, 185, 352, 686, 174, 0,
	763, 766, 776, 801, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 799, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 827, 0, 785, 796, 835, 811, 330, 756,
	838, 714, 740, 851, 744, 748, 791, 697, 769, 256,
	736, 698, 0, 718, 687, 728, 688, 715, 758, 176,
	713, 813, 772, 837, 213, 786, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 836, 764, 0, 845, 216,
	0, 781, 846, 317, 240, 0, 0, 760, 822, 767,
	809, 755, 793, 706, 780, 840, 737, 788, 841, 0,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 701, 0, 784, 834, 731, 787, 790, 685,
	783, 0, 692, 699, 850, 829, 721, 722, 723, 0,
	0, 0, 0, 0, 0, 0, 759, 768, 803, 752,
	349, 267, 284, 305, 746, 275, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 778, 0, 0,
	0, 700, 693, 0, 0, 757, 0, 0, 0, 705,
	684, 720, 805, 0, 682, 241, 144, 810, 828, 754,
	204, 360, 832, 751, 750, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 802, 299, 733, 683,
	814, 716, 729, 167, 725, 291, 260, 348, 738, 775,
	290, 217, 338, 798, 833, 347, 742, 817, 357, 362,
	724, 765, 703, 314, 177, 0, 133, 735, 274, 172,
	209, 753, 792, 717, 164, 800, 779, 816, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 747, 739, 0, 0, 353, 749, 302, 301, 743,
	199, 808, 782, 689, 283, 795, 205, 132, 327, 365,
	150, 211, 332, 681, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 730, 797, 807,
	281, 304, 334, 152, 321, 726, 727, 732, 804, 293,
	815, 826, 839, 224, 179, 182, 193, 200, 789, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 690, 0, 319, 351, 367, 154,
	712, 307, 333, 741, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 710, 711, 708, 0, 709, 770, 771, 842,
	843, 844, 806, 702, 0, 823, 824, 0, 0, 0,
	0, 0, 812, 830, 831, 794, 852, 745, 707, 691,
	694, 695, 696, 704, 761, 762, 774, 777, 820, 819,
	818, 821, 825, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 131, 140,
	215, 853, 282, 185, 352, 686, 174, 0, 763, 766,
	776, 801, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 799, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	827, 0, 785, 796, 835, 811, 330, 756, 838, 714,
	740, 851, 744, 748, 791, 697, 769, 256, 736, 698,
	0, 718, 687, 728, 688, 715, 758, 176, 713, 813,
	772, 837, 213, 786, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 1593, 1597, 0, 845, 216, 0, 781,
	846, 317, 240, 0, 0, 760, 822, 767, 809, 755,
	793, 706, 780, 840, 737, 788, 841, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	701, 0, 784, 834, 731, 787, 790, 685, 783, 0,
	692, 699, 850, 829, 721, 722, 723, 0, 0, 0,
	0, 0, 0, 0, 759, 768, 803, 752, 349, 267,
	284, 305, 746, 275, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 778, 0, 0, 0, 700,
	693, 0, 0, 757, 0, 0, 0, 705, 684, 720,
	805, 0, 682, 241, 144, 810, 828, 1596, 204, 360,
	832, 751, 750, 1591, 0, 1592, 192, 214, 678, 128,
	142, 1589, 1595, 252, 802, 299, 733, 683, 814, 716,
	729, 167, 725, 291, 260, 348, 738, 775, 290, 217,
	338, 798, 833, 347, 742, 817, 357, 362, 724, 765,
	703, 314, 177, 0, 133, 735, 274, 172, 209, 753,
	792, 717, 164, 800, 779, 816, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 747,
	739, 0, 0, 353, 749, 302, 301, 743, 199, 808,
	782, 689, 283, 795, 205, 132, 327, 365, 150, 211,
	332, 681, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 730, 797, 807, 281, 304,
	334, 152, 321, 726, 727, 732, 804, 293, 815, 826,
	839, 224, 179, 182, 193, 200, 789, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 690, 0, 319, 351, 367, 154, 712, 307,
	333, 741, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	710, 711, 708, 0, 709, 770, 771, 842, 843, 844,
	806, 702, 0, 823, 824, 0, 0, 0, 0, 0,
	812, 830, 831, 794, 852, 745, 707, 691, 694, 695,
	696, 704, 761, 762, 774, 777, 820, 819, 818, 821,
	825, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 131, 140, 215, 853,
	282, 185, 352, 686, 174, 0, 763, 766, 776, 801,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 799, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 827, 0,
	785, 796, 835, 811, 330, 756, 838, 714, 740, 851,
	744, 748, 791, 697, 769, 256, 736, 698, 0, 718,
	687, 728, 688, 715, 758, 176, 713, 813, 772, 837,
	213, 786, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 836, 764, 0, 845, 216, 0, 781, 846, 317,
	240, 0, 0, 760, 822, 767, 809, 755, 793, 706,
	780, 840, 737, 788, 841, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	784, 834, 731, 787, 790, 685, 783, 0, 692, 699,
	850, 829, 721, 722, 723, 0, 0, 0, 0, 0,
	0, 0, 759, 768, 803, 752, 349, 267, 284, 305,
	746, 275, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 778, 0, 0, 0, 700, 693, 0,
	0, 757, 0, 0, 0, 705, 684, 720, 805, 0,
	682, 241, 144, 810, 828, 754, 204, 360, 832, 751,
	750, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 802, 299, 733, 683, 814, 716, 729, 167,
	725, 291, 260, 348, 738, 775, 290, 217, 338, 798,
	833, 347, 742, 817, 357, 362, 724, 765, 703, 314,
	177, 0, 133, 735, 274, 172, 209, 753, 792, 717,
	164, 800, 779, 816, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 747, 739, 0,
	0, 353, 749, 302, 301, 743, 199, 808, 782, 689,
	283, 795, 205, 132, 327, 365, 150, 211, 332, 681,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 730, 797, 807, 281, 304, 334, 152,
	321, 726, 727, 732, 804, 293, 815, 826, 839, 224,
	179, 182, 193, 200, 789, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	690, 0, 319, 351, 367, 154, 712, 307, 333, 741,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 710, 711,
	708, 0, 709, 770, 771, 842, 843, 844, 806, 702,
	0, 823, 824, 0, 0, 0, 0, 0, 812, 830,
	831, 794, 852, 745, 707, 691, 694, 695, 696, 704,
	761, 762, 774, 777, 820, 819, 818, 821, 825, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 773, 131, 140, 215, 853, 282, 185,
	352, 686, 174, 0, 763, 766, 776, 801, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 799,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 827, 0, 785, 796,
	835, 811, 330, 756, 838, 714, 740, 851, 744, 748,
	791, 697, 769, 256, 736, 698, 0, 718, 687, 728,
	688, 715, 758, 176, 713, 813, 772, 837, 213, 786,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 836,
	764, 0, 845, 216, 0, 781, 846, 317, 240, 0,
	0, 760, 822, 767, 809, 755, 793, 706, 780, 840,
	737, 788, 841, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 784, 834,
	731, 787, 790, 685, 783, 0, 692, 699, 850, 829,
	721, 722, 723, 0, 0, 0, 0, 0, 0, 0,
	759, 768, 803, 752, 349, 267, 284, 305, 746, 275,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 778, 0, 0, 0, 700, 693, 0, 0, 757,
	0, 0, 0, 705, 684, 720, 805, 0, 682, 241,
	144, 810, 828, 754, 204, 360, 832, 751, 750, 277,
	0, 324, 192, 214, 678, 128, 142, 674, 191, 252,
	802, 299, 733, 683, 814, 716, 729, 167, 725, 291,
	260, 348, 738, 775, 290, 217, 338, 798, 833, 347,
	742, 817, 357, 362, 724, 765, 703, 314, 177, 0,
	133, 735, 274, 172, 209, 753, 792, 717, 164, 800,
	779, 816, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 747, 739, 0, 0, 353,
	749, 302, 301, 743, 199, 808, 782, 689, 283, 795,
	205, 132, 327, 365, 150, 211, 332, 681, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 730, 797, 807, 281, 304, 334, 152, 321, 726,
	727, 732, 804, 293, 815, 826, 839, 224, 179, 182,
	193, 200, 789, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 690, 0,
	319, 351, 367, 154, 712, 307, 333, 741, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 710, 711, 708, 0,
	709, 770, 771, 842, 843, 844, 806, 702, 0, 823,
	824, 0, 0, 0, 0, 0, 812, 830, 831, 794,
	852, 745, 707, 691, 694, 695, 696, 704, 761, 762,
	774, 777, 820, 819, 818, 821, 825, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 773, 131, 140, 215, 853, 282, 185, 352, 686,
	174, 0, 763, 766, 776, 801, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 799, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 827, 330, 785, 796, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 176, 546, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 626, 216, 0, 0, 526,
	317, 240, 0, 0, 0, 0, 615, 616, 0, 0,
	0, 0, 0, 0, 1571, 0, 81, 0, 0, 0,
	547, 571, 570, 573, 574, 575, 576, 0, 0, 530,
	572, 577, 610, 611, 1572, 0, 0, 544, 562, 0,
	625, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 490, 0, 0, 0, 0, 559, 560,
	0, 0, 0, 0, 638, 0, 561, 0, 0, 556,
	557, 558, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 617, 0, 0, 204, 360, 0,
	0, 636, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 585, 470, 0, 0, 0,
	167, 0, 291, 260, 348, 587, 0, 290, 217, 338,
	0, 0, 347, 0, 517, 357, 362, 483, 0, 477,
	314, 177, 0, 133, 491, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 495, 493,
	0, 0, 353, 496, 302, 301, 0, 199, 0, 504,
	471, 283, 508, 205, 132, 327, 365, 150, 211, 332,
	469, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 486, 510, 0, 281, 304, 334,
	152, 321, 484, 485, 487, 514, 293, 516, 522, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 472, 0, 319, 351, 367, 154, 0, 307, 333,
	494, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 627,
	637, 633, 635, 634, 631, 632, 630, 629, 628, 639,
	618, 619, 620, 621, 622, 0, 0, 0, 624, 0,
	604, 605, 0, 0, 0, 480, 578, 579, 580, 581,
	582, 588, 589, 593, 594, 602, 601, 600, 603, 606,
	608, 607, 609, 583, 584, 586, 590, 591, 592, 595,
	596, 599, 597, 598, 623, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	512, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 36, 330, 507,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 176,
	546, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 626, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 547, 571, 570, 573, 574, 575, 576,
	0, 0, 530, 572, 577, 610, 611, 0, 0, 0,
	544, 562, 0, 625, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 0, 0, 0, 0, 638, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 617, 0, 0,
	204, 360, 0, 0, 636, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 585, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 587, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 627, 637, 633, 635, 634, 631, 632, 630,
	629, 628, 639, 618, 619, 620, 621, 622, 0, 0,
	0, 624, 0, 604, 605, 0, 0, 0, 480, 578,
	579, 580, 581, 582, 588, 589, 593, 594, 602, 601,
	600, 603, 606, 608, 607, 609, 583, 584, 586, 590,
	591, 592, 595, 596, 599, 597, 598, 623, 131, 140,
	215, 79, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 176, 546, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	626, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 547, 571, 570, 573, 574,
	575, 576, 0, 0, 530, 572, 577, 610, 611, 0,
	0, 0, 544, 562, 0, 625, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 540, 0, 0, 0, 638,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 617,
	0, 0, 204, 360, 0, 0, 636, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	585, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	587, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 627, 637, 633, 635, 634, 631,
	632, 630, 629, 628, 639, 618, 619, 620, 621, 622,
	0, 0, 0, 624, 0, 604, 605, 0, 0, 0,
	480, 578, 579, 580, 581, 582, 588, 589, 593, 594,
	602, 601, 600, 603, 606, 608, 607, 609, 583, 584,
	586, 590, 591, 592, 595, 596, 599, 597, 598, 623,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 626, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1027, 0, 547, 571, 570,
	573, 574, 575, 576, 0, 0, 530, 572, 577, 610,
	611, 0, 0, 0, 544, 562, 0, 625, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 638, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 617, 0, 0, 204, 360, 0, 0, 636, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 585, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 587, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 627, 637, 633, 635,
	634, 631, 632, 630, 629, 628, 639, 618, 619, 620,
	621, 622, 0, 0, 0, 624, 0, 604, 605, 0,
	0, 0, 480, 578, 579, 580, 581, 582, 588, 589,
	593, 594, 602, 601, 600, 603, 606, 608, 607, 609,
	583, 584, 586, 590, 591, 592, 595, 596, 599, 597,
	598, 623, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 176, 546, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 626, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 547,
	571, 570, 573, 574, 575, 576, 0, 0, 530, 572,
	577, 610, 611, 0, 0, 0, 544, 562, 0, 625,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 559, 560, 1459,
	0, 0, 0, 638, 0, 561, 0, 0, 556, 557,
	558, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 617, 0, 0, 204, 360, 0, 0,
	636, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 585, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 587, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 627, 637,
	633, 635, 634, 631, 632, 630, 629, 628, 639, 618,
	619, 620, 621, 622, 0, 0, 0, 624, 0, 604,
	605, 0, 0, 0, 480, 578, 579, 580, 581, 582,
	588, 589, 593, 594, 602, 601, 600, 603, 606, 608,
	607, 609, 583, 584, 586, 590, 591, 592, 595, 596,
	599, 597, 598, 623, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 176, 546, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 626, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 547, 571, 1506, 573, 574, 575, 576, 0, 0,
	530, 572, 577, 610, 611, 0, 0, 0, 544, 562,
	0, 625, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 559,
	560, 1459, 0, 0, 0, 638, 0, 561, 0, 0,
	556, 557, 558, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 617, 0, 0, 204, 360,
	0, 0, 636, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 585, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 587, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	627, 637, 633, 635, 634, 631, 632, 630, 629, 628,
	639, 618, 619, 620, 621, 622, 0, 0, 0, 624,
	0, 604, 605, 0, 0, 0, 480, 578, 579, 580,
	581, 582, 588, 589, 593, 594, 602, 601, 600, 603,
	606, 608, 607, 609, 583, 584, 586, 590, 591, 592,
	595, 596, 599, 597, 598, 623, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 176,
	546, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 626, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 547, 571, 1503, 573, 574, 575, 576,
	0, 0, 530, 572, 577, 610, 611, 0, 0, 0,
	544, 562, 0, 625, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 1459, 0, 0, 0, 638, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 617, 0, 0,
	204, 360, 0, 0, 636, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 585, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 587, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 627, 637, 633, 635, 634, 631, 632, 630,
	629, 628, 639, 618, 619, 620, 621, 622, 0, 0,
	0, 624, 0, 604, 605, 0, 0, 0, 480, 578,
	579, 580, 581, 582, 588, 589, 593, 594, 602, 601,
	600, 603, 606, 608, 607, 609, 583, 584, 586, 590,
	591, 592, 595, 596, 599, 597, 598, 623, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 176, 546, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	626, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 1340, 0, 547, 571, 570, 573, 574,
	575, 576, 0, 0, 530, 572, 577, 610, 611, 0,
	0, 0, 544, 562, 0, 625, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 638,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 617,
	0, 0, 204, 360, 0, 0, 636, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	585, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	587, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 627, 637, 633, 635, 634, 631,
	632, 630, 629, 628, 639, 618, 619, 620, 621, 622,
	0, 0, 0, 624, 0, 604, 605, 0, 0, 0,
	480, 578, 579, 580, 581, 582, 588, 589, 593, 594,
	602, 601, 600, 603, 606, 608, 607, 609, 583, 584,
	586, 590, 591, 592, 595, 596, 599, 597, 598, 623,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 176, 546, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 626, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 615, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 547, 571, 570,
	573, 574, 575, 576, 0, 0, 530, 572, 577, 610,
	611, 0, 0, 0, 544, 562, 0, 625, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 638, 0, 561, 0, 0, 556, 557, 558, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 617, 0, 0, 204, 360, 0, 0, 636, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 585, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 587, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 627, 637, 633, 635,
	634, 631, 632, 630, 629, 628, 639, 618, 619, 620,
	621, 622, 0, 0, 0, 624, 0, 604, 605, 0,
	0, 0, 480, 578, 579, 580, 581, 582, 588, 589,
	593, 594, 602, 601, 600, 603, 606, 608, 607, 609,
	583, 584, 586, 590, 591, 592, 595, 596, 599, 597,
	598, 623, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 626, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 615, 616, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 547,
	571, 570, 573, 574, 575, 576, 0, 0, 530, 572,
	577, 610, 611, 0, 0, 0, 0, 562, 0, 625,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 638, 0, 561, 0, 0, 556, 557,
	558, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 617, 0, 0, 204, 360, 0, 0,
	636, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 585, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 587, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 627, 637,
	633, 635, 634, 631, 632, 630, 629, 628, 639, 618,
	619, 620, 621, 622, 1509, 1510, 1511, 624, 0, 604,
	605, 0, 0, 0, 480, 578, 579, 580, 581, 582,
	588, 589, 593, 594, 602, 601, 600, 603, 606, 608,
	607, 609, 583, 584, 586, 590, 591, 592, 595, 596,
	599, 597, 598, 623, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 626, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 615, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 547, 571, 570, 573, 574, 575, 576, 0, 0,
	530, 572, 577, 610, 611, 0, 0, 0, 0, 562,
	0, 625, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 559,
	560, 0, 0, 0, 0, 638, 0, 561, 0, 0,
	556, 557, 558, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 617, 0, 0, 204, 360,
	0, 0, 636, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 585, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 587, 2802, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	627, 637, 633, 635, 634, 631, 632, 630, 629, 628,
	639, 618, 619, 620, 621, 622, 0, 0, 0, 624,
	0, 604, 605, 0, 0, 0, 480, 578, 579, 580,
	581, 582, 588, 589, 593, 594, 602, 601, 600, 603,
	606, 608, 607, 609, 583, 584, 586, 590, 591, 592,
	595, 596, 599, 597, 598, 623, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 626, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 615,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 1027, 0, 547, 571, 570, 573, 574, 575, 576,
	0, 0, 530, 572, 577, 610, 611, 0, 0, 0,
	0, 562, 0, 625, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 559, 560, 0, 0, 0, 0, 638, 0, 561,
	0, 0, 556, 557, 558, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 617, 0, 0,
	204, 360, 0, 0, 636, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 585, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 587, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 627, 637, 633, 635, 634, 631, 632, 630,
	629, 628, 639, 618, 619, 620, 621, 622, 0, 0,
	0, 624, 0, 604, 605, 0, 0, 0, 480, 578,
	579, 580, 581, 582, 588, 589, 593, 594, 602, 601,
	600, 603, 606, 608, 607, 609, 583, 584, 586, 590,
	591, 592, 595, 596, 599, 597, 598, 623, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	626, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 615, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 547, 571, 570, 573, 574,
	575, 576, 0, 0, 530, 572, 577, 610, 611, 0,
	0, 0, 0, 562, 0, 625, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 638,
	0, 561, 0, 0, 556, 557, 558, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 617,
	0, 0, 204, 360, 0, 0, 636, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	585, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	587, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 627, 637, 633, 635, 634, 631,
	632, 630, 629, 628, 639, 618, 619, 620, 621, 622,
	0, 0, 0, 624, 0, 604, 605, 0, 0, 0,
	480, 578, 579, 580, 581, 582, 588, 589, 593, 594,
	602, 601, 600, 603, 606, 608, 607, 609, 583, 584,
	586, 590, 591, 592, 595, 596, 599, 597, 598, 623,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1551,
	1553, 0, 0, 0, 0, 0, 0, 126, 0, 468,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 1552, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1551, 1553, 0, 0, 0, 0, 0, 0, 126,
	0, 468, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 1547, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 1552,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 1049, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 1053, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 1046, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 1047, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 526, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 468, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 488, 470,
	0, 0, 0, 167, 0, 291, 260, 348, 492, 0,
	290, 217, 338, 0, 0, 347, 0, 517, 357, 362,
	483, 0, 477, 314, 177, 0, 133, 491, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 495, 493, 0, 0, 353, 496, 302, 301, 0,
	199, 0, 504, 471, 283, 508, 205, 132, 327, 365,
	150, 211, 332, 469, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 486, 510, 0,
	281, 304, 334, 152, 321, 484, 485, 487, 514, 293,
	516, 522, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 472, 0, 319, 351, 367, 154,
	0, 307, 333, 494, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 480, 473,
	474, 475, 476, 478, 497, 498, 502, 503, 520, 519,
	518, 521, 525, 528, 527, 529, 479, 481, 489, 499,
	500, 501, 505, 506, 515, 511, 513, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 463, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 512, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 507, 509, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 1846, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 526, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 468, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	488, 470, 0, 0, 0, 167, 0, 291, 260, 348,
	492, 0, 290, 217, 338, 0, 0, 347, 0, 517,
	357, 362, 483, 0, 477, 314, 177, 0, 133, 491,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 495, 493, 0, 0, 353, 496, 302,
	301, 0, 199, 0, 504, 471, 283, 508, 205, 132,
	327, 365, 150, 211, 332, 469, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 486,
	510, 0, 281, 304, 334, 152, 321, 484, 485, 487,
	514, 293, 516, 522, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 472, 0, 319, 351,
	367, 154, 0, 307, 333, 494, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	480, 473, 474, 475, 476, 478, 497, 498, 502, 503,
	520, 519, 518, 521, 525, 528, 527, 529, 479, 481,
	489, 499, 500, 501, 505, 506, 515, 511, 513, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 512, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 330, 0, 507, 509, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 329, 0,
	0, 0, 0, 216, 0, 0, 526, 317, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 468,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 349, 267, 284, 305, 0, 275,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 360, 0, 0, 0, 277,
	0, 324, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 299, 488, 470, 0, 0, 0, 167, 0, 291,
	260, 348, 492, 0, 290, 217, 338, 0, 0, 347,
	0, 517, 357, 362, 483, 0, 477, 314, 177, 0,
	133, 491, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 313, 336, 151, 331, 239, 245, 161, 163,
	162, 143, 308, 335, 156, 165, 318, 295, 325, 171,
	0, 0, 0, 0, 0, 495, 493, 0, 0, 353,
	496, 302, 301, 0, 199, 0, 504, 471, 283, 508,
	205, 132, 327, 365, 150, 211, 332, 469, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 486, 510, 0, 281, 304, 334, 152, 321, 484,
	485, 487, 514, 293, 516, 522, 0, 224, 179, 182,
	193, 200, 0, 288, 322, 354, 0, 145, 134, 328,
	346, 157, 303, 306, 363, 289, 137, 344, 323, 237,
	206, 207, 135, 0, 136, 286, 175, 189, 170, 255,
	0, 188, 276, 341, 342, 168, 366, 146, 356, 139,
	147, 355, 248, 0, 247, 358, 337, 345, 238, 226,
	0, 138, 343, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 472, 0,
	319, 351, 367, 154, 0, 307, 333, 494, 280, 155,
	187, 180, 271, 246, 148, 198, 316, 210, 218, 285,
	364, 259, 292, 158, 350, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 480, 473, 474, 475, 476, 478, 497, 498,
	502, 503, 520, 519, 518, 521, 525, 528, 527, 529,
	479, 481, 489, 499, 500, 501, 505, 506, 515, 511,
	513, 0, 131, 140, 215, 0, 282, 185, 352, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 512, 287, 294,
	296, 297, 298, 300, 309, 310, 311, 312, 320, 326,
	339, 340, 359, 361, 330, 0, 507, 509, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	329, 0, 0, 0, 0, 216, 0, 0, 526, 317,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 1053, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 349, 267, 284, 305,
	0, 275, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 360, 0, 0,
	0, 277, 0, 324, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 299, 488, 470, 0, 0, 0, 167,
	0, 291, 260, 348, 492, 0, 290, 217, 338, 0,
	0, 347, 0, 517, 357, 362, 483, 0, 477, 314,
	177, 0, 133, 491, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 313, 336, 151, 331, 239, 245,
	161, 163, 162, 143, 308, 335, 156, 165, 318, 295,
	325, 171, 0, 0, 0, 0, 0, 495, 493, 0,
	0, 353, 496, 302, 301, 0, 199, 0, 504, 471,
	283, 508, 205, 132, 327, 365, 150, 211, 332, 469,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 486, 510, 0, 281, 304, 334, 152,
	321, 484, 485, 487, 514, 293, 516, 522, 0, 224,
	179, 182, 193, 200, 0, 288, 322, 354, 0, 145,
	134, 328, 346, 157, 303, 306, 363, 289, 137, 344,
	323, 237, 206, 207, 135, 0, 136, 286, 175, 189,
	170, 255, 0, 188, 276, 341, 342, 168, 366, 146,
	356, 139, 147, 355, 248, 0, 247, 358, 337, 345,
	238, 226, 0, 138, 343, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	472, 0, 319, 351, 367, 154, 0, 307, 333, 494,
	280, 155, 187, 180, 271, 246, 148, 198, 316, 210,
	218, 285, 364, 259, 292, 158, 350, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 480, 473, 474, 475, 476, 478,
	497, 498, 502, 503, 520, 519, 518, 521, 525, 528,
	527, 529, 479, 481, 489, 499, 500, 501, 505, 506,
	515, 511, 513, 0, 131, 140, 215, 0, 282, 185,
	352, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 512,
	287, 294, 296, 297, 298, 300, 309, 310, 311, 312,
	320, 326, 339, 340, 359, 361, 330, 0, 507, 509,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	526, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 299, 488, 470, 0, 0,
	0, 167, 0, 291, 260, 348, 492, 0, 290, 217,
	338, 0, 0, 347, 0, 517, 357, 362, 483, 0,
	477, 314, 177, 0, 133, 491, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 495,
	493, 0, 0, 353, 496, 302, 301, 0, 199, 0,
	504, 471, 283, 508, 205, 132, 327, 365, 150, 211,
	332, 469, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 486, 510, 0, 281, 304,
	334, 152, 321, 484, 485, 487, 514, 293, 516, 522,
	0, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 472, 0, 319, 351, 367, 154, 0, 307,
	333, 494, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 512, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 0, 0,
	507, 509, 437, 330, 431, 442, 425, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 448, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 432, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 423, 426, 0, 0, 0,
	241, 144, 0, 0, 430, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 434, 299, 0, 0, 438, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 441,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 451, 304, 334, 152, 321,
	427, 428, 429, 435, 436, 439, 440, 443, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 433, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 437, 330, 431, 442, 425,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	432, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 329, 0, 0, 0, 0, 216, 0, 0,
	0, 317, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 446, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 349, 267,
	284, 305, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 423, 426,
	0, 0, 0, 241, 144, 0, 0, 430, 204, 360,
	0, 0, 0, 277, 0, 324, 192, 214, 149, 128,
	142, 160, 191, 252, 434, 299, 0, 0, 438, 0,
	0, 167, 0, 291, 260, 348, 0, 0, 290, 217,
	338, 0, 441, 347, 0, 0, 357, 362, 0, 0,
	0, 314, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 313, 336, 151, 331,
	239, 245, 161, 163, 162, 143, 308, 335, 156, 165,
	318, 295, 325, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 302, 301, 0, 199, 0,
	0, 0, 283, 0, 205, 132, 327, 365, 150, 211,
	332, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 420, 304,
	334, 152, 321, 427, 428, 429, 435, 436, 439, 440,
	443, 224, 179, 182, 193, 200, 0, 288, 322, 354,
	0, 145, 134, 328, 346, 157, 303, 306, 363, 289,
	137, 344, 323, 237, 206, 207, 135, 0, 136, 286,
	175, 189, 170, 255, 0, 188, 276, 341, 342, 168,
	366, 146, 356, 139, 147, 355, 248, 0, 247, 358,
	337, 345, 238, 226, 0, 138, 343, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 319, 351, 367, 154, 0, 307,
	333, 0, 280, 155, 187, 180, 271, 246, 148, 198,
	316, 210, 218, 285, 364, 259, 292, 158, 350, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	282, 185, 352, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 433, 287, 294, 296, 297, 298, 300, 309, 310,
	311, 312, 320, 326, 339, 340, 359, 361, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 329, 0, 0, 0, 0, 216,
	0, 0, 0, 317, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	349, 267, 284, 305, 0, 275, 0, 1063, 1062, 1072,
	1073, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1064, 0,
	0, 1074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 360, 0, 0, 0, 277, 0, 324, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 299, 0, 0,
	0, 0, 0, 167, 0, 291, 260, 348, 0, 0,
	290, 217, 338, 0, 0, 347, 0, 0, 357, 362,
	0, 0, 0, 314, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 313, 336,
	151, 331, 239, 245, 161, 163, 162, 143, 308, 335,
	156, 165, 318, 295, 325, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 302, 301, 0,
	199, 0, 0, 0, 283, 0, 205, 132, 327, 365,
	150, 211, 332, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	281, 304, 334, 152, 321, 0, 0, 0, 0, 293,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 288,
	322, 354, 0, 145, 134, 328, 346, 157, 303, 306,
	363, 289, 137, 344, 323, 237, 206, 207, 135, 0,
	136, 286, 175, 189, 170, 255, 0, 188, 276, 341,
	342, 168, 366, 146, 356, 139, 147, 355, 248, 0,
	247, 358, 337, 345, 238, 226, 0, 138, 343, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 319, 351, 367, 154,
	0, 307, 333, 0, 280, 155, 187, 180, 271, 246,
	148, 198, 316, 210, 218, 285, 364, 259, 292, 158,
	350, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 282, 185, 352, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 287, 294, 296, 297, 298, 300,
	309, 310, 311, 312, 320, 326, 339, 340, 359, 361,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 2727, 0, 0, 0, 0, 0,
	0, 176, 2725, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 329, 0, 0, 0,
	0, 216, 0, 0, 0, 317, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 446, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 349, 267, 284, 305, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 360, 0, 0, 0, 277, 0, 324,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 299,
	0, 0, 0, 0, 0, 167, 0, 291, 260, 348,
	0, 0, 290, 217, 338, 0, 0, 347, 0, 0,
	357, 362, 0, 0, 0, 314, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	313, 336, 151, 331, 239, 245, 161, 163, 162, 143,
	308, 335, 156, 165, 318, 295, 325, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 302,
	301, 0, 199, 0, 2726, 0, 283, 0, 205, 132,
	327, 365, 150, 211, 332, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 281, 304, 334, 152, 321, 0, 0, 0,
	0, 293, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 288, 322, 354, 0, 145, 134, 328, 346, 157,
	303, 306, 363, 289, 137, 344, 323, 237, 206, 207,
	135, 0, 136, 286, 175, 189, 170, 255, 0, 188,
	276, 341, 342, 168, 366, 146, 356, 139, 147, 355,
	248, 0, 247, 358, 337, 345, 238, 226, 0, 138,
	343, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 319, 351,
	367, 154, 0, 307, 333, 0, 280, 155, 187, 180,
	271, 246, 148, 198, 316, 210, 218, 285, 364, 259,
	292, 158, 350, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 282, 185, 352, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 287, 294, 296, 297,
	298, 300, 309, 310, 311, 312, 320, 326, 339, 340,
	359, 361, 36, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 1544, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 79, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	446, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 1199,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 1198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 446, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 2189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 642, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 147,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 246, 148, 198, 316, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 123, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 346, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 346, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 147, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 246, 148, 198, 316,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 329, 0, 0, 0, 0, 216, 0,
	0, 0, 317, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 349,
	267, 284, 305, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	360, 0, 0, 0, 277, 0, 324, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 299, 0, 0, 0,
	0, 0, 167, 0, 291, 260, 348, 0, 0, 290,
	217, 338, 0, 0, 347, 0, 0, 357, 362, 0,
	0, 0, 314, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 313, 336, 151,
	331, 239, 245, 161, 163, 162, 143, 308, 335, 156,
	165, 318, 295, 325, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 302, 301, 0, 199,
	0, 0, 0, 283, 0, 205, 132, 327, 365, 150,
	211, 332, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 281,
	304, 334, 152, 321, 0, 0, 0, 0, 293, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 288, 322,
	354, 0, 145, 134, 328, 346, 157, 303, 306, 363,
	289, 137, 344, 323, 237, 206, 207, 135, 0, 136,
	286, 175, 189, 170, 255, 0, 188, 276, 341, 342,
	168, 366, 146, 356, 139, 147, 355, 248, 0, 247,
	358, 337, 345, 238, 226, 0, 138, 343, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 319, 351, 367, 154, 0,
	307, 333, 0, 280, 155, 187, 180, 271, 246, 148,
	198, 316, 210, 218, 285, 364, 259, 292, 158, 350,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 140, 215,
	0, 282, 185, 352, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 287, 294, 296, 297, 298, 300, 309,
	310, 311, 312, 320, 326, 339, 340, 359, 361, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 329, 0, 0, 0, 0,
	216, 0, 0, 0, 317, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 349, 267, 284, 305, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 360, 0, 0, 0, 277, 0, 324, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 299, 0,
	0, 0, 0, 0, 167, 0, 291, 260, 348, 0,
	0, 290, 217, 338, 0, 0, 347, 0, 0, 357,
	362, 0, 0, 0, 314, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 313,
	336, 151, 331, 239, 245, 161, 163, 162, 143, 308,
	335, 156, 165, 318, 295, 325, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 302, 301,
	0, 199, 0, 0, 0, 283, 0, 205, 132, 327,
	365, 150, 211, 332, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 281, 304, 334, 152, 321, 0, 0, 0, 0,
	293, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	288, 322, 354, 0, 145, 134, 328, 346, 157, 303,
	306, 363, 289, 137, 344, 323, 237, 206, 207, 135,
	0, 136, 286, 175, 189, 170, 255, 0, 188, 276,
	341, 342, 168, 366, 146, 356, 139, 147, 355, 248,
	0, 247, 358, 337, 345, 238, 226, 0, 138, 343,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 319, 351, 367,
	154, 0, 307, 333, 0, 280, 155, 187, 180, 271,
	246, 148, 198, 316, 210, 218, 285, 364, 259, 292,
	158, 350, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	140, 215, 0, 282, 185, 352, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 287, 294, 296, 297, 298,
	300, 309, 310, 311, 312, 320, 326, 339, 340, 359,
	361, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 329, 0, 0,
	0, 0, 216, 0, 0, 0, 317, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 349, 267, 284, 305, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 360, 0, 0, 0, 277, 0,
	324, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	299, 0, 0, 0, 0, 0, 167, 0, 291, 260,
	348, 0, 0, 290, 217, 338, 0, 0, 347, 0,
	0, 357, 362, 0, 0, 0, 314, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 313, 336, 151, 331, 239, 245, 161, 163, 162,
	143, 308, 335, 156, 165, 318, 295, 325, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 0,
	302, 301, 0, 199, 0, 0, 0, 283, 0, 205,
	132, 327, 365, 150, 211, 332, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 281, 304, 334, 152, 321, 0, 0,
	0, 0, 293, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 288, 322, 354, 0, 145, 134, 328, 346,
	157, 303, 306, 363, 289, 137, 344, 323, 237, 206,
	207, 135, 0, 136, 286, 175, 189, 170, 255, 0,
	188, 276, 341, 342, 168, 366, 146, 356, 139, 662,
	355, 248, 0, 247, 358, 337, 345, 238, 226, 0,
	138, 343, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 658, 227, 0, 0, 0, 319,
	351, 367, 154, 0, 307, 333, 0, 280, 155, 187,
	180, 271, 663, 661, 652, 653, 210, 218, 285, 364,
	259, 292, 158, 350, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 282, 185, 352, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 659, 660, 278, 0, 287, 294, 296,
	297, 298, 300, 309, 310, 311, 312, 320, 326, 339,
	340, 359, 361, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 329,
	0, 0, 0, 0, 216, 0, 0, 0, 317, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 349, 267, 284, 305, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 360, 0, 0, 0,
	277, 0, 324, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 299, 0, 0, 0, 0, 0, 167, 0,
	291, 260, 348, 0, 0, 290, 217, 338, 0, 0,
	347, 0, 0, 357, 362, 0, 0, 0, 314, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 313, 336, 151, 331, 239, 245, 161,
	163, 162, 143, 308, 335, 156, 165, 318, 295, 325,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 0, 302, 301, 0, 199, 0, 0, 0, 283,
	0, 205, 132, 327, 365, 150, 211, 332, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 281, 304, 334, 152, 321,
	0, 0, 0, 0, 293, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 288, 322, 354, 0, 145, 134,
	328, 1193, 157, 303, 306, 363, 289, 137, 344, 323,
	237, 206, 207, 135, 0, 136, 286, 175, 189, 170,
	255, 0, 188, 276, 341, 342, 168, 366, 146, 356,
	139, 147, 355, 248, 0, 247, 358, 337, 345, 238,
	226, 0, 138, 343, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 319, 351, 367, 154, 0, 307, 333, 0, 280,
	155, 187, 180, 271, 246, 148, 198, 316, 210, 218,
	285, 364, 259, 292, 158, 350, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 282, 185, 352,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 287,
	294, 296, 297, 298, 300, 309, 310, 311, 312, 320,
	326, 339, 340, 359, 361, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 329, 0, 0, 0, 0, 216, 0, 0, 0,
	317, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 349, 267, 284,
	305, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 360, 0,
	0, 0, 277, 0, 324, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 299, 0, 0, 0, 0, 0,
	167, 0, 291, 260, 348, 0, 0, 290, 217, 338,
	0, 0, 347, 0, 0, 357, 362, 0, 0, 0,
	314, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 313, 336, 151, 331, 239,
	245, 161, 163, 162, 143, 308, 335, 156, 165, 318,
	295, 325, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 302, 301, 0, 199, 0, 0,
	0, 283, 0, 205, 132, 327, 365, 150, 211, 332,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 281, 304, 334,
	152, 321, 0, 0, 0, 0, 293, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 288, 322, 354, 0,
	145, 134, 328, 649, 157, 303, 306, 363, 289, 137,
	344, 323, 237, 206, 207, 135, 0, 136, 286, 175,
	189, 170, 255, 0, 188, 276, 341, 342, 168, 366,
	146, 356, 139, 662, 355, 248, 0, 247, 358, 337,
	345, 238, 226, 0, 138, 343, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 658, 227,
	0, 0, 0, 319, 351, 367, 154, 0, 307, 333,
	0, 280, 155, 187, 180, 271, 663, 661, 652, 653,
	210, 218, 285, 364, 259, 292, 158, 350, 315, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2213, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 282,
	185, 352, 0, 174, 0, 490, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 659, 660, 278,
	0, 287, 294, 296, 297, 298, 300, 309, 310, 311,
	312, 320, 326, 339, 340, 359, 361, 488, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 0, 0, 483,
	0, 477, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 493, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 504, 471, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	526, 0, 0, 0, 0, 0, 486, 510, 0, 0,
	0, 0, 0, 0, 484, 485, 487, 514, 0, 516,
	522, 2211, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 0, 0, 483, 0,
	477, 0, 523, 524, 0, 491, 0, 480, 473, 474,
	475, 476, 478, 497, 498, 502, 503, 520, 519, 518,
	521, 525, 528, 527, 529, 479, 481, 489, 499, 500,
	501, 505, 506, 515, 511, 513, 0, 0, 0, 495,
	493, 0, 0, 36, 496, 72, 39, 40, 0, 0,
	504, 471, 0, 508, 0, 0, 0, 59, 0, 0,
	0, 469, 0, 78, 0, 0, 0, 41, 0, 0,
	0, 0, 0, 0, 0, 486, 510, 0, 0, 0,
	0, 0, 512, 484, 485, 487, 514, 0, 516, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 509, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2552,
	0, 0, 2775, 2778, 2774, 36, 37, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 41,
	63, 64, 472, 0, 0, 0, 60, 0, 0, 0,
	0, 494, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2553, 0, 0, 50, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 523, 524, 47, 0, 0, 480, 473, 474, 475,
	476, 478, 497, 498, 502, 503, 520, 519, 518, 521,
	525, 528, 527, 529, 479, 481, 489, 499, 500, 501,
	505, 506, 515, 511, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2554, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 68, 0, 0, 47, 0, 0, 0, 0,
	507, 509, 0, 0, 0, 0, 0, 0, 36, 65,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	2555, 75, 59, 53, 54, 61, 0, 62, 78, 0,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 0, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	81, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2552, 0, 0, 0, 0, 2824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 51, 75, 0, 53, 54, 61, 73, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2552, 0, 0, 0, 0, 2820,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	43, 74, 46, 45, 48, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 2553, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 41,
	73, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 0, 57, 58, 36, 2554, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	66, 0, 67, 0, 0, 78, 0, 81, 0, 41,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 57, 58, 0, 2554, 68, 0, 0,
	0, 2552, 0, 0, 0, 0, 2809, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 81, 0, 0,
	36, 0, 72, 39, 40, 2555, 75, 0, 53, 54,
	61, 0, 62, 0, 59, 0, 0, 68, 0, 0,
	78, 2552, 0, 0, 41, 0, 2792, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2553, 0, 0, 2555, 75, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 81, 2780, 0, 47, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2553, 0, 0, 0, 2552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 73, 0, 47, 0, 0, 0, 0,
	57, 58, 0, 2554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 2553, 0, 0,
	57, 58, 79, 2554, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 66, 0, 67,
	47, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 2555, 75, 0, 53, 54, 61, 0, 62,
	59, 0, 79, 0, 68, 0, 78, 0, 0, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 2554, 0,
	0, 0, 2555, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 66, 0, 67, 0, 0, 0, 81, 0,
	0, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 68,
	0, 78, 2552, 0, 0, 41, 0, 2721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 2555, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 2553, 0, 0, 0, 2552, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 2553, 0,
	0, 57, 58, 0, 2554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 66, 0,
	67, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2554,
	0, 0, 0, 2555, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2555, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	33479, -1000, -323, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1744, -1000, -1000, -1000, -1000,
	-1000, -1000, 883, 182, -1000, 270, 281, 29666, 590, 2800,
	30650, -1000, -1000, -1000, 196, 383, 30650, 354, 446, 1189,
	1614, 1184, 55, -60, -61, 116, 23269, 22776, 25, -1000,
	1802, 1766, -1000, -1000, 548, 59, -1000, -1000, -1000, 20311,
	215, -1000, -1000, 1727, 1742, 1542, -1000, 13423, 548, 548,
	29174, 32618, -1000, 1801, 30650, 11945, -1000, 583, 30650, -149,
	537, 537, 346, 537, 537, 588, -1000, 849, -1000, -1000,
	-1000, -1000, 30650, 26222, 538, 30158, 538, 538, 538, 538,
	538, 538, 538, 30650, -1000, 663, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30650, 1181,
	1635, 881, 121, -1000, -1000, -1000, 875, -1000, 324, 323,
	319, 308, 96, 907, 1724, -1000, 1312, 1727, 1727, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 280, 568, 254, 215,
	832, -1000, 1632, 1631, 1084, 1629, 530, 1628, 1487, -25,
	-1000, 1173, 30650, -1000, -1000, 1050, 1046, 1511, 1378, 633,
	1510, -1000, -1000, 295, 502, 1469, 432, 1469, 1469, 1469,
	1469, 1469, -62, 1469, 1469, 1469, 94, 1469, 160, 1469,
	1469, 1469, 1469, 1469, 1191, -1000, -1000, -1000, 307, 1373,
	1401, 1508, 248, -1000, -1000, -1000, -1000, 1492, 1714, 587,
	-1000, -109, 1408, 21295, -1000, 1312, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1206, 1633, 1026, 16375, 1589, -1000, -1000, 977, 1790,
	-1000, 19819, 662, -1000, 16375, 3305, 1312, -1000, -1000, 1312,
	-1000, -1000, -1000, 620, -1000, -1000, 18343, 18343, 18343, 18343,
	18343, 18343, 18343, 18343, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1312, 1312,
	1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312,
	1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312,
	1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312,
	-1000, -1000, 1312, -1000, 12931, 1312, 1312, 1312, 1312, 1312,
	1312, 1312, 1312, 1312, 1312, 16375, 1312, 1312, 1312, 1312,
	1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312, 1312,
	28682, 26714, 30650, 1356, 1350, -1000, -1000, 654, 1428, -86,
	32126, -1000, -1000, -1000, -1000, 31142, 25730, 831, -1000, -1000,
	-1000, -1000, 1627, -1000, -1000, 653, -1000, 1744, -1000, -1000,
	1323, 513, -1000, 3635, 4755, -1000, -1000, -1000, 1486, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30158, 1709, 571, 1172, 885, 1170,
	1169, 1168, 26222, 26222, 537, 1167, 1422, 566, 1421, 565,
	1031, 30650, 1670, 1505, 30650, 1165, 1163, 1162, 1158, 26222,
	26222, -1000, 11447, -1000, -1000, 881, -1000, 1116, 16375, 537,
	537, 30650, 30650, 30650, 30650, -1000, -1000, 881, 881, 881,
	881, 809, 1786, 809, -1000, 809, -1000, -1000, 16375, -1000,
	18343, 25238, 697, -1000, -1000, -1000, 1157, 276, -1000, -1000,
	-1000, -1000, -1000, -1000, 1155, 530, 530, -1000, 1115, 530,
	1404, -1000, 830, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 530, -1000, 15883, -318, -1000,
	-1000, 1411, -1000, 303, -1000, -1000, 523, 523, 175, 26222,
	26222, 26222, -1000, 1469, 30158, -1000, 1469, 1469, 1469, -80,
	1469, 1469, -1000, -1000, 1469, -1000, -1000, -1000, -1000, -1000,
	1469, -1000, -1000, -1000, 1469, 1469, -1000, 1469, 1469, -1000,
	-1000, -1000, -1000, -1000, 26222, 523, 176, 1410, 523, 26222,
	26222, -1000, 80, 79, 78, 77, -1000, -1000, -1000, -1000,
	75, 74, -1000, -1000, 1542, -1000, -1000, 215, -1000, -1000,
	30650, -118, 21295, 1408, 1703, 9953, -1000, -1000, -1000, 1797,
	760, 1402, -1000, -1000, 1407, -1000, 898, 652, 1022, 1555,
	-1000, -1000, -1000, 30650, -1000, 16375, 16375, 1006, -1000, 21787,
	-1000, -1000, -1000, -1000, 9455, 764, 18343, 983, 772, 18343,
	18343, 18343, 18343, 18343, 18343, 18343, 18343, 18343, 18343, 18343,
	18343, 18343, 18343, 18343, 1089, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1152, -1000, 215, 1054, 1054, 684, 684,
	684, 684, 684, 684, 684, 23761, 1701, 14407, 14407, 14407,
	1701, 1206, 1206, 14407, 14407, 14407, 14407, 14407, 14407, 14407,
	14407, 1701, 1701, 14407, 1206, 1206, 1206, 1206, 14407, 14407,
	14407, 14407, 30158, 30158, 1701, 14407, 14407, 14407, 1701, 1206,
	1321, 785, 12931, 14407, 14407, 1206, 16375, 16375, 15391, 14899,
	16867, 14407, 1701, 827, 785, 31142, -1000, -1000, 17851, -1000,
	-1000, -1000, -1000, -1000, 1206, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14407, 14407, 14407, 14407, 749, 30650, -1000,
	1345, 1448, -1000, -1000, -1000, 1697, 24746, 19327, -1000, 749,
	1336, 26714, 30650, -1000, -1000, 26714, 30650, 8957, 31634, 1382,
	-1000, -99, -123, -86, -1000, -1000, 683, -1000, -1000, -1000,
	12438, -1000, 10451, 1727, 1542, 6467, 10949, -1000, 4755, 1486,
	-1000, -44, -1000, -1000, -1000, 1450, -1000, 1450, 326, 11,
	1450, 1450, 1450, 1450, 1450, 16, 16, 16, 16, 12,
	-1000, -1000, -1000, -1000, -1000, 1475, 1472, -1000, 1450, 1450,
	1450, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1460, 334, 1453, 1453, 1453, 1453, 1453, 316, 316, -1000,
	16375, 1449, -1000, 30650, -1000, 1665, -1000, 345, 1470, 1344,
	-1000, 184, 1268, 30650, -1000, 30650, 30650, 26222, 26222, 26222,
	602, -1000, 30650, 1405, -1000, -1000, -1000, -1000, -1000, 1352,
	-1000, 1268, -1000, -1000, -1000, -1000, -1000, 785, 1151, 1150,
	-1000, -1000, -1000, 864, -1000, -1000, -1000, -1000, 881, 30650,
	30650, 30650, 1695, 881, 785, 730, 1458, 1312, 1206, -1000,
	-1000, 1149, -1000, 1404, 1404, -1000, 1404, 530, 1054, 1404,
	-1000, 1316, 1655, 1113, 30650, -1000, 21295, -26, -1000, -125,
	28190, -1000, -1000, -1000, 28190, -1000, 94, 129, -1000, 564,
	-1000, 1313, -1000, -1000, -1000, -1000, 1469, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28190, 137, 174, 28190,
	1352, 1785, -1000, -1000, -1000, -1000, 1723, -1000, 1701, 1206,
	328, -1000, -1000, -1000, 1312, 1248, 640, -1000, 1506, 1026,
	1026, 16375, -1000, -1000, -1000, 10451, 1722, -1000, 1571, 1568,
	1529, -1000, -1000, 764, 816, -1000, -1000, 970, -1000, -1000,
	-1000, -1000, 639, 1312, -1000, 3607, -1000, -1000, -1000, -1000,
	983, 18343, 18343, 18343, 730, 3607, 3452, 1027, 874, 684,
	669, 669, 679, 679, 679, 679, 679, 840, 840, -1000,
	-1000, -1000, 1206, -1000, -1000, -1000, 14407, 1276, -1000, -1000,
	785, 636, 1276, 1276, 14407, -181, -181, 1276, 1206, 1276,
	1276, 1276, 1276, 1206, 1276, 14407, 14407, 1276, -181, -181,
	-181, -181, 1276, 1276, 1276, 1276, 1388, 1385, 14407, 1276,
	1276, 1276, 14407, -1000, 16375, -1000, 1206, 1276, 1276, -1000,
	820, 959, 748, 1784, 1276, 740, 1767, 1276, 958, 18343,
	18343, 18343, 1276, 14407, 912, -1000, 16375, 1206, -1000, 1311,
	1276, 1206, 1384, 1276, 1276, 209, 1312, -1000, 10451, 26714,
	26714, 26714, 26714, 26714, -1000, 1534, 1533, -1000, 1524, 1522,
	1523, 21295, 1282, 1206, 298, 24746, -1000, 1312, -1000, 20803,
	634, 582, 581, 576, 1753, 26714, 1280, -1000, 1280, -1000,
	632, -1000, -1000, 31142, -86, -129, -1000, -1000, 1382, -1000,
	1090, -1000, -1000, 785, -1000, 631, 1633, 1701, 1381, 5969,
	-1000, -1000, -1000, -1000, 513, -1000, -1000, -1000, 1461, 4471,
	-1000, 1587, 680, 681, 1126, 1582, -1000, -1000, 320, -51,
	-1000, -1000, 1045, 16, 16, 1450, 1450, 282, 1450, -1000,
	16, -1000, -1000, -1000, 683, 1626, 683, 683, 683, 683,
	16, 1111, 1111, -1000, -1000, -1000, -1000, 1038, -1000, 1460,
	-1000, 1035, -1000, -1000, -1000, -1000, -1000, -1000, 961, 1504,
	30158, 215, 1687, -1000, 1758, -1000, -1000, 610, 103, 26222,
	179, 310, 224, -1000, 563, -1000, 560, -1000, -1000, -1000,
	-1000, -1000, -1000, 30650, 26222, -1000, -1000, 1753, 1148, 1147,
	-1000, -1000, -1000, 809, 881, 1617, -1000, -1000, 18343, 26222,
	-1000, 313, -1000, -1000, -1000, -1000, 749, 585, -1000, -1000,
	-90, -1000, -1000, 558, 630, 626, 553, -1000, 109, 26222,
	-1000, 30158, -1000, 1765, 1763, 133, 1762, 26222, -1000, 63,
	1555, -1000, 1377, -1000, 678, 668, 710, 388, 388, -1000,
	794, 388, 732, -1000, 208, -1000, 9953, 9953, 1549, -1000,
	-1000, -1000, 30650, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8459, 14407, -1000, 730, 3607, 3205, -1000, 18343,
	-1000, 1276, 14407, -181, 7961, -181, -181, 1276, -1000, 27698,
	-1000, -1000, -181, -1000, -181, -181, -181, -181, -181, 1276,
	1276, -181, -1000, -1000, -1000, -1000, -181, -181, -181, -181,
	18343, 18343, 1276, -181, -181, -181, 1206, 785, -1000, -1000,
	-1000, 171, 1089, 171, 18343, 18343, -1000, 18343, 18343, -1000,
	-1000, 18343, 3165, 3062, 3017, -225, 1386, 821, -1000, 16375,
	956, -1000, -1000, -1000, -1000, -1000, -1000, 1502, 10451, 1312,
	6965, -1000, 30158, 1341, -1000, 817, 807, 1448, 1457, 1501,
	1192, -1000, -1000, -1000, -1000, 1532, -1000, 1531, -1000, -1000,
	1441, -1000, -1000, 1376, 1312, 30158, 18343, 634, -1000, 1312,
	1312, 1312, 1744, 16375, 1280, -1000, -1000, 696, -1000, -1000,
	-131, -132, -1000, -1000, -1000, 9953, -1000, 6467, -1000, 6467,
	-1000, 22279, 399, 1590, 385, -1000, 1126, -1000, -1000, 1126,
	-1000, -1000, -1000, 1454, -1000, 944, -1000, -1000, -1000, -1000,
	-1000, 18343, 1796, -1000, 1585, -1000, 1583, 1109, -1000, -1000,
	1261, 683, 683, 16, -1000, -1000, 1450, -1000, 683, -1000,
	731, -1000, -1000, -1000, -1000, 683, 1264, -1000, 1252, 1371,
	-1000, 1250, 100, 30650, -1000, -1000, -1000, 1500, -1000, -1000,
	-1000, 1257, 1353, -1000, 3635, 1146, 1144, 1142, -238, 194,
	-1000, 26222, 150, 184, 423, 1141, 30650, 26222, -1000, -1000,
	-1000, -1000, -1000, 881, -1000, 18343, 3607, 1268, -1000, -1000,
	16, 30650, -1000, 26222, 695, 27206, 26222, 122, 128, -1000,
	26222, 26222, 1761, 26222, 1352, 1107, 1529, 328, 4192, 1126,
	528, -1000, -1000, 405, -1000, 3287, 1582, 1140, 33159, 32950,
	30158, 1581, 1579, 1137, 30650, 30158, -1000, -1000, 4964, 1132,
	16375, -1000, 30158, 30158, 625, -1000, -1000, -1000, 1318, 13423,
	-1000, -1000, 1206, -1000, 18343, 3607, -181, -1000, -1000, -1000,
	-1000, 623, -1000, -1000, -181, -1000, -1000, 1131, -1000, -1000,
	-1000, -1000, -1000, -1000, -181, -181, -1000, -1000, -1000, -1000,
	-1000, 2945, 2881, -181, -1000, -1000, -1000, -1000, 1206, 1450,
	1450, -1000, 1450, 1453, -1000, 1450, 40, 1450, 36, 1206,
	1206, 2795, 2763, 2728, 2141, 1311, 18343, 18343, 18343, 1312,
	-177, -1000, 785, 16375, -1000, 1647, 1331, 1347, -1000, -1000,
	13915, 1206, 1567, 1248, -1000, 20311, 1246, -1000, 1744, 10451,
	16375, 16375, -1000, -1000, 16375, 1451, -1000, 16375, -1000, -1000,
	-1000, -1000, 30158, 294, -1000, 16375, 1246, 1342, -1000, 30158,
	30158, 30158, 1727, 785, -1000, -1000, -1000, -1000, 5969, -1000,
	1241, -1000, 1450, 1450, 1578, -1000, 680, -1000, -1000, -1000,
	30158, -1000, 3607, -94, -1000, -1000, -1000, -1000, -1000, -1000,
	683, -1000, -1000, -1000, -1000, -1000, 16, 1106, 16, 1034,
	-1000, 1033, -1000, -1000, -266, 1447, -1000, 215, 30650, 115,
	610, -1000, 3635, 3635, 3635, 125, 120, -1000, 918, -1000,
	-1000, -1000, 1104, 1102, 1101, 1268, 186, 900, 163, -1000,
	1672, -1000, -1000, -1000, 3607, -67, -1000, 128, -1000, -1000,
	-1000, 128, -1000, -1000, 170, 1352, 1352, 26222, 1352, -1000,
	-1000, -1000, 4964, 374, 3635, 3635, 1449, 680, 1577, 385,
	-1000, -1000, -1000, -1000, -1000, -1000, 1128, -1000, 673, -1000,
	550, 374, 4964, 785, 724, 1649, 9953, 1751, 26714, -1000,
	-1000, -1000, 3607, -1000, 7463, -1000, 729, -1000, -1000, -1000,
	18343, 18343, -1000, -1000, -1000, 333, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18343, 18343, 18343, 18343, -1000, 1311,
	1311, 1311, 18343, 1206, 1100, 785, 1575, -1000, 1312, -1000,
	-1000, 1312, 207, -1000, 30158, 1727, -1000, 785, 785, 785,
	30158, 785, 1230, -1000, 1312, 18835, -1000, 21295, 1226, 1226,
	1226, -1000, 612, 22279, 1660, 1660, -1000, 1126, -1000, 1221,
	-1000, 1312, 1312, -1000, 683, -1000, 683, 1243, 1234, -1000,
	22279, -1000, 1721, -1000, 115, -1000, 1099, 259, 268, -1000,
	256, 242, 230, 227, 223, -1000, -1000, -1000, -1000, 329,
	125, -1000, -50, 1030, 761, 1623, 120, -1000, 1028, 1012,
	997, 996, 273, -1000, -1000, -1000, -1000, 204, 184, -1000,
	416, 1096, 1606, 1602, 1681, 1681, 118, 1352, 1383, 1231,
	-1000, -1000, 1127, -1000, -1000, 1445, 1126, 1444, -1000, 1123,
	-1000, -1000, 30158, -1000, 374, 1643, 1637, 1312, -1000, 1747,
	1738, 1280, 13423, -1000, -1000, 1744, 1735, 1311, 1311, -1000,
	-1000, 1311, 1311, 1311, 1311, -1000, -1000, -1000, 111, -1000,
	-1000, 1795, -1000, 1347, 1312, -1000, 215, -1000, -1000, 1219,
	-1000, 30158, -1000, -1000, 634, -1000, -1000, -1000, 612, -1000,
	1122, 794, 1095, -1000, -1000, -1000, -1000, 351, -1000, -1000,
	-1000, -1000, 1217, -1000, 284, 34185, -1000, -1000, -1000, -1000,
	-1000, -1000, 1613, 1611, 283, -1000, 1094, 1093, -1000, 411,
	1085, 635, -191, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 330, 1121, -1000, 162, -1000, -1000,
	543, 1594, 1591, 1734, -1000, 26222, -1000, -1000, 26714, -1000,
	-1000, 320, 320, 22279, 1449, 22279, -1000, -1000, -1000, 18343,
	-1000, 715, -183, 16375, 16375, 1751, -1000, 733, 16375, -1000,
	-1000, -1000, -1000, -1000, -1000, 1206, 203, -246, 10451, 1347,
	1206, -1000, -1000, -1000, -1000, -1000, 990, -1000, 30650, 612,
	293, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16375, 16375, 5471, 34185, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 964, -1000, -1000, 1065, 410, 153,
	-1000, 1680, -1000, 1441, 963, 1602, 1733, 1600, 1597, -1000,
	1070, -239, 1280, 1205, 1433, 1202, 3607, 1200, -1000, 30158,
	-1000, 30158, -1000, 785, 1346, -1000, 785, 1747, -1000, 1206,
	236, 236, 1339, -1000, 1548, -234, -249, 1335, -1000, -1000,
	1343, -1000, 612, 289, -1000, 924, 947, 221, 195, 3514,
	-1000, -1000, -1000, -1000, -324, -1000, 140, -1000, 130, -1000,
	-1000, -1000, 1067, -1000, 1605, -1000, 1064, -1000, 1732, 1729,
	-1000, 177, 1751, 612, 22279, 612, -1000, 715, 1566, 1329,
	-1000, 1673, 16375, -183, -1000, -1000, 169, -1000, 752, 286,
	720, -1000, 1054, -1000, -1000, 1545, -1000, 30158, -1000, 1120,
	1119, 880, -1000, 16375, 34185, 1720, 1719, 1718, 1634, 9953,
	34120, -1000, -1000, -1000, -1000, -1000, 1060, 962, 24253, 1747,
	-1000, 1198, -1000, -1000, 332, 30158, 1312, -1000, -1000, 888,
	-1000, -1000, -1000, -1000, -1000, 30158, -240, 1196, 321, -1000,
	-1000, 867, 34185, -1000, 921, -325, 464, 215, 474, 18343,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 114, 1268, -183,
	612, 315, -1000, -1000, 169, -1000, -247, 1497, -1000, -1000,
	-1000, -1000, -1000, -1000, 34185, -1000, -326, 34185, 33387, -1000,
	-1000, -1000, 33944, -1000, -1000, -1000, -1000, 192, -1000, -1000,
	3607, 26222, -1000, -1000, 1312, -1000, -250, 1496, 1493, 1760,
	-1000, -327, 33879, -328, 536, 34185, 800, -1000, 16375, -1000,
	474, -1000, 1268, 17359, -1000, -1000, 1794, -1000, 1792, 522,
	522, 33839, 861, 34185, -1000, -329, 527, 34185, -1000, 822,
	-1000, 1311, 1206, -1000, -1000, -1000, 339, 987, -1000, -1000,
	-1000, 33702, -1000, -332, 34185, -1000, -1000, -1000, -1000, -1000,
	521, 33662, -333, -1000, 413, 34185, -1000,
}

var yyPgo = [...]int{
	0, 2222, 2221, 38, 2220, 188, 2219, 2216, 2215, 25,
	23, 21, 27, 2214, 1929, 1925, 1922, 1918, 1916, 2213,
	5, 2211, 2207, 1914, 2206, 2204, 1908, 1906, 1899, 1894,
	2202, 2201, 2200, 1892, 1882, 1874, 15, 2198, 16, 2197,
	6, 149, 166, 2195, 3, 2194, 2193, 14, 2192, 2189,
	1863, 2188, 2187, 2186, 101, 2184, 1848, 1837, 2183, 1833,
	1826, 2182, 2181, 1824, 1822, 1812, 2179, 169, 2174, 2173,
	2170, 259, 108, 157, 2169, 2167, 2163, 107, 88, 2132,
	116, 52, 123, 217, 2162, 30, 50, 186, 2159, 141,
	136, 2157, 156, 2156, 146, 61, 106, 2155, 2151, 165,
	2148, 2147, 2146, 140, 2142, 2141, 2331, 2140, 2139, 151,
	2137, 69, 57, 46, 2136, 2135, 2134, 2128, 2127, 29,
	720, 2126, 2125, 144, 2124, 2123, 94, 2121, 2120, 172,
	2117, 2116, 2114, 142, 42, 2112, 2109, 49, 2107, 53,
	78, 2104, 71, 2098, 138, 2094, 2092, 34, 12, 2091,
	60, 2090, 54, 2089, 145, 249, 155, 2087, 13, 18,
	10, 2086, 35, 11, 20, 47, 77, 90, 131, 103,
	2077, 33, 41, 122, 105, 98, 36, 2076, 150, 2069,
	95, 154, 134, 137, 153, 2068, 2064, 2063, 978, 2056,
	126, 84, 2054, 124, 815, 168, 117, 2052, 100, 2051,
	2042, 2041, 2040, 2037, 97, 113, 2036, 2035, 43, 19,
	821, 1520, 129, 158, 2034, 48, 2032, 2029, 2026, 3032,
	111, 79, 104, 2025, 109, 45, 55, 2024, 2020, 2019,
	2013, 2011, 2009, 1409, 2006, 2005, 2004, 2003, 96, 199,
	2002, 2001, 127, 112, 1998, 1997, 1996, 1994, 130, 83,
	152, 1992, 121, 128, 162, 1989, 80, 1988, 1987, 51,
	44, 1984, 1982, 1979, 102, 93, 1978, 66, 40, 32,
	68, 9, 1977, 1976, 82, 89, 1975, 31, 1974, 2,
	8, 4, 1973, 1972, 1969, 1968, 1960, 1958, 1956, 91,
	1954, 1953, 65, 1952, 1948, 1945, 37, 1944, 1942, 1938,
	148, 120, 59, 161, 139, 17, 1936, 1927, 7, 1910,
	125, 1902, 64, 1896, 58, 1888, 1886, 63, 1880, 1868,
	62, 1858, 1854, 164, 1557, 514, 1846, 160, 159, 56,
	92, 1841, 1830, 0, 575, 167, 147, 1815, 1810,
}

var yyR1 = [...]int{
	0, 332, 332, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 92,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 335, 335, 101, 101, 99, 99, 100,
	100, 173, 173, 12, 12, 12, 178, 178, 183, 183,
	183, 186, 186, 186, 186, 164, 165, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 306,
	306, 315, 315, 315, 316, 316, 314, 314, 314, 314,
	314, 318, 318, 319, 319, 317, 317, 317, 317, 321,
	321, 322, 322, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 309, 309, 309,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 324, 324, 325, 325, 326, 326, 327, 327, 327,
	327, 328, 328, 328, 328, 328, 329, 329, 329, 329,
	329, 329, 329, 330, 330, 331, 331, 2, 287, 287,
	288, 288, 289, 289, 289, 289, 290, 290, 291, 291,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	24, 207, 207, 308, 308, 308, 302, 302, 302, 304,
	304, 303, 303, 303, 305, 305, 310, 310, 310, 310,
	310, 312, 312, 312, 312, 312, 312, 313, 313, 313,
	311, 311, 48, 48, 49, 49, 49, 153, 153, 153,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 286, 286, 286, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 261,
	262, 262, 262, 262, 262, 262, 262, 262, 249, 249,
	250, 226, 226, 226, 226, 226, 226, 226, 226, 225,
	225, 225, 225, 229, 229, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 228, 228, 228, 228, 228,
	228, 228, 228, 230, 230, 230, 230, 230, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 232, 232, 232, 232,
	232, 248, 248, 233, 233, 242, 242, 243, 243, 243,
	240, 240, 241, 241, 236, 237, 244, 238, 238, 238,
	239, 239, 239, 247, 247, 247, 247, 234, 35, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 200, 200, 201, 201, 251, 251, 271,
	271, 270, 270, 269, 269, 269, 260, 260, 266, 266,
	266, 266, 266, 266, 266, 255, 255, 255, 254, 254,
	256, 256, 259, 259, 268, 268, 267, 267, 252, 252,
	252, 274, 274, 274, 274, 274, 253, 253, 253, 253,
	275, 257, 257, 258, 258, 258, 280, 281, 279, 279,
	279, 279, 279, 116, 116, 116, 263, 263, 263, 264,
	264, 264, 265, 265, 265, 284, 284, 283, 283, 50,
	51, 55, 55, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 152, 152, 152,
	205, 205, 278, 276, 276, 277, 277, 15, 15, 53,
	53, 307, 307, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 282, 282, 282, 17, 17, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 84, 192, 192, 191, 191, 190, 190, 190,
	193, 193, 193, 223, 223, 223, 58, 58, 62, 62,
	65, 65, 65, 63, 64, 27, 28, 28, 28, 28,
	29, 206, 206, 60, 60, 61, 61, 61, 61, 76,
	76, 337, 337, 59, 338, 67, 68, 68, 69, 69,
	69, 196, 196, 73, 73, 73, 71, 71, 71, 72,
	72, 78, 78, 82, 82, 82, 82, 81, 81, 81,
	81, 155, 155, 160, 216, 216, 136, 136, 156, 156,
	161, 161, 161, 162, 162, 163, 163, 163, 163, 163,
	158, 158, 157, 157, 159, 124, 124, 214, 214, 214,
	213, 213, 213, 213, 86, 86, 89, 89, 90, 90,
	90, 90, 93, 138, 138, 110, 110, 111, 111, 111,
	111, 111, 122, 122, 172, 172, 171, 171, 174, 174,
	91, 91, 91, 91, 96, 96, 97, 97, 98, 98,
	204, 204, 221, 221, 221, 102, 102, 102, 104, 103,
	103, 103, 103, 105, 105, 107, 108, 108, 106, 106,
	109, 112, 112, 112, 112, 113, 113, 83, 83, 83,
	83, 83, 83, 83, 189, 189, 115, 115, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 132, 132,
	132, 132, 132, 132, 117, 117, 117, 117, 117, 117,
	117, 77, 77, 133, 133, 133, 95, 94, 94, 80,
	80, 79, 79, 134, 134, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	127, 127, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 336, 336,
	129, 128, 128, 128, 128, 128, 128, 74, 74, 74,
	74, 74, 222, 222, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 145, 145, 75,
	75, 143, 143, 144, 146, 146, 142, 142, 142, 119,
	119, 119, 119, 119, 119, 119, 119, 121, 121, 121,
	147, 147, 135, 135, 85, 148, 148, 149, 150, 150,
	151, 151, 154, 166, 166, 166, 167, 167, 167, 167,
	123, 123, 168, 168, 168, 118, 118, 118, 118, 118,
	118, 118, 170, 170, 169, 169, 169, 169, 175, 175,
	137, 137, 140, 140, 139, 141, 176, 176, 180, 180,
	177, 177, 181, 181, 181, 181, 184, 184, 185, 185,
	185, 182, 182, 182, 179, 179, 179, 218, 218, 218,
	187, 187, 197, 197, 194, 194, 195, 195, 188, 188,
	235, 235, 203, 203, 202, 202, 202, 198, 198, 198,
	199, 199, 215, 215, 211, 211, 217, 217, 212, 212,
	219, 219, 220, 220, 285, 285, 245, 245, 295, 295,
	246, 246, 296, 296, 298, 298, 293, 293, 294, 294,
	297, 297, 30, 299, 299, 300, 300, 301, 301, 301,
	301, 31, 32, 32, 32, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	333, 334,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 3, 2, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -332, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -337, -206, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-333, 68, 503, -150, 15, -67, -338, -67, -67, -67,
	-67, -67, -261, -204, 106, 68, 23, -199, 150, 87,
	382, 146, -207, 234, 236, -197, -198, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -106, -219, 72, -209, 160, 451,
	259, 437, 246, 195, 293, 307, 309, 301, 336, 324,
	438, 452, 161, 216, 145, 292, 322, 325, 369, 159,
	249, 209, 272, 453, 358, 364, 219, 296, 378, 454,
	162, 213, 215, 214, 203, 220, 36, 172, 320, 255,
	313, 224, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 163, 157, 285, 458, 342, 346, 459, 370, 239,
	286, 460, 461, 462, 149, 245, 305, 306, 463, 199,
	372, 250, 340, 33, 158, 439, 48, 180, 373, 38,
	344, 37, 350, 464, 282, 339, 334, 351, 465, 466,
	467, 468, 263, 261, 262, 264, 338, 304, 333, 211,
	53, 144, 348, 347, 349, 212, 368, 329, 327, 469,
	470, 254, 164, 471, 472, 314, 18, 473, 474, 376,
	175, 256, 257, 42, 475, 476, 477, 110, 478, 479,
	480, 367, 343, 345, 197, 114, 317, 154, 481, 260,
	363, 269, 441, 243, 111, 374, 310, 483, 288, 300,
	179, 174, 377, 278, 484, 222, 485, 486, 487, 166,
	488, 237, 236, 297, 270, 112, 298, 360, 217, 489,
	490, 491, 492, 207, 192, 380, 371, 52, 221, 355,
	493, 273, 289, 303, 156, 223, 494, 247, 294, 43,
	7, 210, 251, 361, 271, 218, 208, 331, 181, 495,
	496, 318, 319, 337, 302, 332, 295, 184, 176, 109,
	379, 356, 443, 234, 290, 326, 323, 187, 330, 497,
	150, 498, 188, 299, 375, 248, 321, 357, 147, 131,
	325, 369, 138, 359, 360, 366, -255, 367, 182, 185,
	-223, 147, -192, 358, 239, 260, 412, 188, 189, 148,
	149, 33, 371, 370, 362, -219, 151, 299, -76, 142,
	177, -106, -47, 72, 223, -47, 30, 72, 72, 36,
	72, 298, 361, 361, 75, 441, 191, 21, -324, -305,
	269, -323, -303, 139, 138, 10, 140, 274, 275, 276,
	148, 8, 31, 482, 165, 277, 278, 6, 169, 279,
	280, 183, 9, 281, -308, 74, 72, -209, 21, -324,
	-305, 269, -201, -200, 291, 350, 6, -69, 5, -188,
	152, 295, -87, 450, -92, -221, -219, -210, 74, 252,
	168, 242, 353, 408, 409, 410, 411, 191, 412, 425,
	407, 426, 97, 189, 274, 275, 266, 276, 167, 427,
	115, 196, 177, 231, 362, 230, 235, 413, 414, 428,
	429, 430, 415, 416, 241, 431, 432, 501, 244, 502,
	267, 434, 482, 435, 277, 433, 279, 186, 419, 418,
	417, 420, 280, 402, 403, 421, 51, 423, 422, 424,
	81, -3, -167, 17, 16, -73, 54, 55, -68, -81,
	122, -83, -219, -114, 89, -120, 29, 72, -209, 24,
	-119, -210, -115, -142, -141, -95, 131, 132, 133, 120,
	121, 128, 90, 134, -127, -125, -126, -128, -130, -131,
	74, 73, 82, 75, 76, 77, 78, 83, 408, 409,
	410, 411, 412, 425, 426, 167, 427, 177, 413, 414,
	428, 429, 430, 415, 416, 431, 432, 434, 435, 433,
	419, 418, 417, 420, 402, 403, 421, 423, 422, 424,
	84, 85, -211, -139, -333, 58, 59, 146, 392, 393,
	394, 395, 396, 436, 400, 92, 47, 381, 390, 389,
	388, 386, 387, 383, 385, 384, 153, 382, 126, 391,
	-188, -188, 11, -99, -100, -106, -109, -219, -177, 295,
	-184, -181, 370, 371, -182, -185, -179, -142, 350, 479,
	480, 369, 325, 368, -211, -219, -2, -5, 6, -106,
	-262, -250, -253, -212, 162, -275, -211, -208, 159, 72,
	-209, 252, 143, 168, 139, 88, 444, 23, 25, 242,
	353, 408, 91, 131, 409, 410, 411, 16, 20, 92,
	130, 81, 392, 191, 412, 138, 62, 407, 383, 385,
	381, 382, 359, 29, 10, 26, 170, 202, 22, 124,
	140, 95, 96, 97, 189, 173, 274, 275, 24, 171,
	266, 85, 276, 167, 115, 196, 19, 65, 177, 231,
	11, 362, 185, 238, 13, 406, 113, 230, 14, 235,
	153, 152, 108, 200, 148, 60, 8, 134, 27, 105,
	56, 413, 414, 447, 45, 190, 448, 58, 106, 17,
	386, 387, 31, 436, 415, 178, 449, 416, 126, 205,
	63, 50, 241, 89, 83, 501, 34, 86, 66, 287,
	87, 15, 201, 61, 404, 244, 502, 267, 182, 482,
	204, 450, 165, 107, 277, 141, 391, 268, 240, 59,
	146, 6, 401, 30, 169, 279, 206, 186, 419, 418,
	417, 420, 57, 394, 395, 421, 280, 499, 147, 94,
	402, 403, 151, 183, 84, 5, 44, 32, 9, 281,
	64, 67, 388, 389, 390, 47, 51, 423, 422, 424,
	93, 12, 405, 440, 148, -106, 391, -195, 153, -195,
	183, 182, -195, -195, 147, 98, -53, -106, -307, -302,
	-308, -194, 153, -211, -194, -194, -194, -194, -194, -194,
	-194, -106, 135, -106, 72, 30, -193, 106, 12, 382,
	146, 147, 183, 150, -257, 11, 108, 186, 186, 186,
	187, 186, -191, 361, 363, 184, 364, 365, 12, -84,
	106, 19, -333, -167, -167, 72, 298, 151, -61, -3,
	-11, -9, -10, -3, 98, 30, 30, 74, 51, 30,
	-42, -41, -43, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 30, -286, 68, -245, 350,
	72, -299, -300, -106, 75, 75, 66, 66, 69, 151,
	69, 66, -325, 270, 68, -325, 236, 270, 271, 208,
	234, 150, -325, -325, 236, -325, -325, -325, -325, -325,
	361, -325, -325, -325, 272, 273, -325, 359, 150, -325,
	-325, -325, -325, -325, 71, 66, 69, 260, 66, 11,
	66, -272, 131, 283, 284, 285, 286, 282, 260, 287,
	288, 289, 186, 290, -67, -7, -5, -333, 21, 22,
	147, 374, 69, -87, -170, -333, -334, 70, -168, 19,
	31, -123, 75, 78, -151, -154, -83, -219, 50, -71,
	21, 22, 80, 11, -214, 88, 87, 105, -213, 23,
	72, -209, -210, 74, 135, -83, -117, 108, 89, 106,
	107, 91, 117, 116, 127, 120, 121, 122, 123, 124,
	125, 126, 118, 119, 130, 98, 99, 100, 101, 102,
	103, 104, -189, -333, -95, -333, 136, 137, -120, -120,
	-120, -120, -120, -120, -120, -120, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -3,
	-134, -83, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -145, -83, -333, -336, -129, -333, -336,
	-129, -336, -129, -336, -333, -336, -129, -336, -129, -336,
	-336, -129, -336, -333, -333, -333, -333, -108, 27, -106,
	-86, -89, -90, -91, -110, -94, -333, -106, -95, -106,
	-99, -335, 69, 11, 67, -335, 69, 135, 69, -178,
	-183, 372, 374, 295, -182, -182, -218, -211, 74, 29,
	98, 30, 135, -150, -67, 70, 69, -253, 162, 159,
	-225, -229, -231, -230, -232, -227, -228, 322, 325, 329,
	327, 323, 328, 131, 326, 331, 332, 333, 334, 335,
	336, 337, 338, 339, 340, 341, 30, 172, 318, 319,
	320, 321, 342, 343, 344, 345, 346, 347, 348, 349,
	301, 324, 438, 302, 303, 304, 305, 306, 307, 309,
	310, 311, 312, 313, 314, 315, 316, 72, -210, -275,
	68, -211, 23, 150, 72, 89, 72, 72, 72, -311,
	-310, -302, -305, -195, 72, 69, 151, 69, 151, 71,
	-99, 24, 66, -101, -106, 72, 72, 72, 72, -304,
	-302, -305, -220, -219, -208, -193, 74, -83, -195, -195,
	-106, -106, -106, -106, -193, -193, -193, -193, -190, 11,
	108, 11, -190, -190, -83, -120, -302, 384, 122, 72,
	72, 298, 72, -42, -42, 74, -42, 69, 98, -42,
	70, -134, -285, 500, 69, -301, 23, 374, 375, 351,
	-327, 147, 185, 182, -327, -323, 278, -304, -303, -302,
	-325, -326, -211, -325, -325, -325, 361, -325, -325, -325,
	-325, -325, -325, -325, -325, -308, -327, 238, 69, -327,
	-304, -302, 282, 282, 282, 282, 282, 282, -73, -3,
	-106, 375, 376, -92, 23, -169, -212, 9, 108, 69,
	18, 69, -166, 25, 26, 135, -121, 51, 75, 78,
	-196, 49, -106, -83, -83, -132, 83, 89, 84, 85,
	-213, 122, -220, -212, -208, -120, -133, -139, -95, 79,
	108, 106, 107, 91, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -222,
	72, 74, 72, -119, -119, -211, -71, -79, -82, 122,
	-83, -219, -79, -79, -71, -334, -334, -79, -82, -79,
	-79, -79, -79, -82, -79, -71, -71, -79, -334, -334,
	-334, -334, -79, -79, -79, -79, -211, -211, -71, -79,
	-79, -79, -71, -334, 69, -334, -3, -79, -79, -334,
	-83, -83, -142, 74, -79, -142, 74, -79, -120, 397,
	398, 399, -79, -71, -143, -144, 93, -142, -334, -120,
	-79, -80, -79, -79, -79, -173, 110, -106, 30, 69,
	-102, -104, -103, -105, 56, 60, 62, 57, 58, 59,
	63, -204, -86, -93, 47, -333, -111, 110, -112, 23,
	-221, 64, 152, 65, -173, 67, -86, -106, -86, -109,
	-219, 122, -181, -184, 69, 373, 375, 376, -178, -239,
	130, 66, 86, -83, -212, -220, -167, -73, -263, -264,
	-265, -212, 74, 75, -250, -251, -252, -253, -266, 162,
	-274, 154, 156, 44, -254, 163, 148, 45, -226, -240,
	356, -233, 68, -233, -233, 330, 322, 325, 323, -233,
	-233, -233, -233, -233, -238, 325, -238, -238, -238, -238,
	323, 68, 68, -233, -233, -233, -242, 68, -242, 317,
	-243, 68, -243, -243, -243, -243, -275, -275, -83, -215,
	67, -164, -106, 24, -48, 195, 168, 68, -306, 69,
	29, -312, 235, -106, -106, -106, -302, -302, -308, -282,
	166, 161, -106, 69, 69, 72, 72, -258, 11, 108,
	-193, -219, -219, -106, -122, 23, -193, -77, 173, 67,
	-336, -334, 72, -41, -119, 70, -107, 27, 74, -300,
	-221, 350, 375, -328, 122, -211, -328, -331, 440, 151,
	70, 69, -325, -328, 256, 238, -328, 11, -273, 19,
	-71, -334, -55, -54, 143, 140, 141, 144, 145, -278,
	353, 139, 179, -94, -333, -334, 69, 135, 52, -123,
	-123, -154, -187, 19, 11, 47, 47, -72, 57, 83,
	84, 85, 135, -333, -133, -120, -120, -120, -77, 88,
	-334, -79, 69, -334, 135, -334, -334, -79, -155, 404,
	-155, -334, -334, -334, -334, -334, -334, -334, -334, -79,
	-79, -334, -155, -155, -155, -155, -334, -334, -334, -334,
	69, 69, -79, -334, -334, -334, -80, -83, -334, -334,
	-334, 69, 67, 23, 11, 11, -334, 11, 11, -334,
	-334, 11, -120, -120, -120, -334, -79, -146, -144, 95,
	-83, -334, -334, -334, -334, -334, -334, -118, 30, 47,
	-333, -3, -333, -176, -180, -142, -208, -89, -90, -90,
	-89, -90, 56, 56, 56, 61, 56, 61, 56, -103,
	-221, -334, -334, -138, 194, -333, 34, -221, -112, 148,
	148, 148, -113, 12, -86, -113, -113, 135, -183, -186,
	377, 374, 380, 72, 74, 135, -168, 69, -265, 98,
	-253, 68, 72, -259, -210, 45, -254, 148, 45, -254,
	-259, 72, -259, 45, 83, 89, -236, -237, -244, -247,
	-234, 29, 66, 353, 154, 45, 44, 81, -241, 357,
	75, -238, -238, -233, -233, -233, 330, -233, -238, -239,
	30, -239, -239, -239, -239, -238, -248, 74, -248, 75,
	-242, 75, 70, 66, -211, -3, 23, -49, 8, 9,
	10, -287, -288, -289, 72, 108, 200, 201, -315, 268,
	-310, 236, 245, 88, 16, 440, 151, 151, -106, -302,
	-113, 72, 72, -190, -193, 34, -120, -305, 188, 189,
	-173, 147, -301, 151, 135, 135, 151, 259, -304, -211,
	11, 11, 256, 11, -304, 292, -196, 69, -205, -254,
	-284, -252, -253, -283, 155, 162, 163, -205, 162, 159,
	-254, 163, 154, 155, -202, -254, 151, 23, -205, -205,
	-260, 98, -205, 110, -212, -212, 53, -106, -78, -165,
	122, -212, -80, -77, 88, -120, -334, -82, -156, -155,
	122, -220, -156, -156, -334, -211, -160, -333, -155, -156,
	-156, -155, -155, -155, -334, -334, -155, -156, -156, -156,
	-156, -120, -120, -334, -156, -156, -156, -334, -224, 131,
	322, 172, 320, 313, 340, 327, 355, 318, 356, -222,
	-224, -120, -120, -120, -120, -120, 11, 11, 11, 437,
	-150, 97, -83, 94, -175, 66, -176, -137, -140, -139,
	-333, -3, -334, -169, 6, 440, -174, -211, -113, 69,
	98, 98, -97, -96, 66, 67, -98, 66, -96, 56,
	56, -172, 68, 69, -139, -333, -174, -120, -112, -333,
	-333, -333, -150, -83, -113, 374, 378, 379, -264, -265,
	-268, -267, -211, -210, 154, -274, 44, -274, -259, -259,
	68, 83, -120, 9, 45, 45, 74, 70, -239, -239,
	-238, -233, -239, 72, 131, -239, 70, 69, 70, 69,
	70, 69, -116, 456, 89, -106, -164, -164, 66, 70,
	69, -225, 72, 72, 72, -318, 440, 241, -316, -314,
	247, 248, 249, 250, 251, -305, 246, -312, 243, 74,
	72, -106, -302, -193, -120, -238, -106, -304, 122, 122,
	-211, -304, 256, -330, 440, -304, -304, 11, -304, 74,
	-72, -54, 68, -249, 72, -210, -259, -198, 154, 72,
	72, 72, -210, 72, -210, -211, 45, 45, 72, -106,
	-211, -249, 72, -83, -211, -211, 135, -113, 11, 69,
	-81, -334, -120, -156, 135, -156, -216, 72, -156, -156,
	69, 69, -156, -334, -233, -233, -233, -243, -233, 306,
	-233, 306, -334, -334, 19, 19, 19, 19, -334, -120,
	-120, -120, -333, -75, 401, -83, 28, -175, 69, -334,
	-334, 47, -334, -334, 69, -150, -180, -83, -83, -83,
	68, -83, -171, -211, 194, -334, -112, -204, -171, -171,
	-171, -167, 70, 69, -233, -233, 45, -256, -254, -171,
	-126, 402, 403, -239, -238, 74, -238, 75, 75, 456,
	68, -3, -106, -290, -291, -292, 81, 439, 89, 202,
	203, 164, 204, 205, 206, -289, -225, -225, -225, -321,
	-322, -320, 244, 266, 267, 252, -319, -317, 261, 262,
	263, 264, 88, 74, 74, 74, -313, 235, 88, 244,
	16, 23, -293, -191, -330, -330, 238, -304, -78, -249,
	-152, 167, 168, -225, -225, -215, -256, 45, 72, -203,
	151, 23, 151, -152, -249, 30, 140, 27, -212, -147,
	13, -86, -165, -165, 122, -136, 110, -120, -120, -238,
	72, -120, -120, -120, -120, -334, -334, -334, -120, -334,
	74, 45, -140, -137, 47, -3, -333, -211, -167, -171,
	70, 69, -139, -111, -221, -334, -334, -334, -270, -269,
	67, 158, 81, -267, -166, -166, -259, 70, -239, -239,
	70, 70, -268, -164, 19, -164, -292, 74, 206, 202,
	206, 206, 206, 206, 207, -309, 81, 242, -320, 253,
	461, 237, 268, 75, 75, 109, 31, 32, -317, 75,
	75, 75, 75, -314, 16, 440, -312, 243, 74, 74,
	-294, 38, -296, 39, -329, 23, -329, 256, 11, 70,
	72, -226, -226, 68, -259, 68, 72, -211, -152, 29,
	29, -333, -148, 14, 16, -113, -81, -150, 16, -334,
	-334, -334, -334, -334, -334, -74, 108, 440, 9, -137,
	-3, 70, -211, -112, -269, 72, -260, 74, 165, 70,
	193, -20, -3, -9, -10, -11, -12, -14, -50, -15,
	-16, -21, -22, -17, -56, -57, -65, -63, -64, -60,
	-59, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, -35, 92, 153, 224, 293, 36, 36, 198, 199,
	74, 74, 29, 254, 134, 29, 75, 134, 407, 243,
	74, 72, 244, -235, 152, -297, 43, -295, -246, 42,
	16, -302, -86, -268, -215, -268, -120, -276, -277, 110,
	-158, 405, -149, -83, -135, -85, -83, -147, -165, -161,
	112, 111, -134, -334, 438, 63, 441, -176, -334, 75,
	-106, -271, -270, 194, -164, -83, -83, 72, -46, -217,
	227, 228, 229, -212, -36, -20, 75, 29, 75, 29,
	257, 244, 23, -172, 75, -296, 16, -298, 40, 41,
	74, 440, -113, 70, 68, 70, -334, 69, -211, -157,
	-159, -211, 69, -148, -334, -162, 91, -163, 109, 407,
	-124, 75, 134, -162, 53, 439, 442, 68, -153, 196,
	197, -37, -38, 93, 94, 225, 226, 230, -225, 69,
	503, 255, 255, 74, 38, 74, 16, 16, 236, -147,
	-271, -268, -271, -277, 47, 69, 23, -85, -158, -163,
	114, 115, 194, 114, 115, -119, 53, -171, -164, 72,
	72, 97, 95, -38, -83, -36, 19, 19, 19, 29,
	-212, 97, -20, 74, 74, 29, 241, 21, -305, -148,
	70, 180, -159, -160, 88, -211, 440, 70, -13, -19,
	-12, -9, -10, -11, 293, 92, -36, 94, 503, -47,
	75, -3, -45, -44, 75, -47, 232, 89, 233, 72,
	-120, 258, -158, -271, 181, -163, 441, -280, -281, 66,
	-164, -36, 503, -36, 97, 95, -39, -40, 96, -20,
	69, 231, -305, -333, 442, -281, 66, -280, 66, 10,
	9, 503, 97, 503, 153, -36, 97, 95, -40, -83,
	-44, -120, 178, -279, 166, 161, 164, 30, -279, 97,
	92, 503, 153, -36, 94, -334, -334, 160, 29, 83,
	97, 503, -36, 153, 97, 503, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 704, 704, 704, 704,
	704, 704, 800, -2, 569, 0, 0, 0, 0, -2,
	677, 678, 679, 683, 684, 699, 701, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 40,
	0, 0, 56, 57, 1108, 0, 702, 691, 692, 0,
	0, 1640, 2, 1046, 0, 713, 706, 0, 1108, 1108,
	0, 0, 87, 0, 0, 0, 801, 0, 0, 0,
	1106, 1106, 0, 1106, 1106, 0, 1121, 0, 1103, 1117,
	1118, 1119, 0, 0, 1104, 0, 1104, 1104, 1104, 1104,
	1104, 1104, 1104, 0, 626, 818, 1130, 1131, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 0, 0,
	0, 670, 0, 636, 637, 638, 0, 640, 0, 0,
	0, 0, 0, 650, 653, 657, 0, 1046, 1046, 515,
	516, 517, 674, 675, 664, 676, 0, 0, 0, 0,
	0, 703, 305, 307, 0, 327, 0, 330, 333, 1136,
	685, 0, 0, 1161, 1162, 0, 0, 0, 0, 0,
	1491, 181, 244, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 0, 183, 183, 183, 1503, 183, 0, 183,
	183, 183, 183, 183, 243, 233, 234, 235, 0, 0,
	0, 1491, 0, 496, 493, 494, 704, 0, 708, 0,
	1109, 680, 45, 0, 47, 1062, 802, 803, 804, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 0, 1052, 0, 0, 716, 714, 715, 705, 0,
	727, 757, 0, 827, 0, 832, 834, -2, -2, 0,
	875, 876, 877, 878, 879, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 904, 905, 906, 907, 908, 909,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1582, 1583,
	1584, 1585, 1587, 1588, 1590, 1597, 1598, 1601, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1614, 1615, 1620, 1622, 1624,
	1627, 1628, 1629, 1630, 1632, 1633, 1634, 1636, 1637, 1638,
	836, 837, 1016, 1075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1007, 0, 978, 978, 978,
	978, 978, 978, 978, 978, 978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 69, 818, 73, 1556,
	0, 1080, -2, -2, 1082, 0, 0, 0, -2, -2,
	-2, -2, 1357, -2, 1016, 0, 88, 1038, 704, 89,
	0, 370, 371, 0, 1370, 539, 1128, 1129, 1359, 1124,
	1125, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 607, 0, 608, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 625, 0, 627, 628, 670, 630, 0, 0, 1106,
	1106, 0, 0, 0, 0, 541, 542, 670, 670, 670,
	670, 667, 0, 667, 647, 667, 665, 666, 0, 652,
	0, 0, 0, 660, 661, 686, 0, 0, 693, 695,
	696, 697, 698, 694, 0, 0, 0, 309, 0, 0,
	329, 311, 0, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 325, 0, 332, 0, 1134, 1137,
	690, 1152, 1153, 0, 1163, 1164, 187, 187, 0, 0,
	0, 0, 150, 183, 0, 152, 183, 183, 183, 0,
	183, 183, 159, 160, 183, 162, 163, 164, 165, 166,
	183, 168, 169, 170, 183, 183, 173, 183, 183, 176,
	177, 178, 179, 180, 242, 187, 0, 0, 187, 0,
	0, 478, 0, 0, 0, 0, 483, 484, 485, 486,
	0, 0, 489, 490, 713, 42, 52, 0, 709, 710,
	0, 0, 0, 46, 0, 0, 51, 1641, 37, 0,
	0, 1047, 1050, 1051, 1039, 1040, 1043, 0, 0, 711,
	717, 718, 707, 0, 728, 0, 0, 0, 758, 0,
	760, 761, 762, 763, 0, 830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 855, 856, 857, 858,
	859, 860, 833, 0, 847, 0, 0, 0, 896, 897,
	898, 899, 900, 901, 902, 0, 716, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 716, 0,
	0, 873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 1008, 0, 961, 970, 0, 962,
	971, 963, 972, 964, 0, 965, 973, 966, 974, 967,
	968, 975, 969, 0, 869, 0, 0, 71, 0, 817,
	0, 764, 766, 767, 768, -2, 0, 821, 867, -2,
	0, 0, 0, 63, 64, 0, 0, 0, 0, 74,
	76, 0, 0, 1556, 1083, 1084, 470, 1097, 1098, 1099,
	0, 1095, 0, 1046, 713, 556, 0, 372, 0, 0,
	381, 460, 390, 391, 392, 453, 394, 453, 453, 0,
	453, 453, 453, 453, 453, 467, 467, 467, 467, 467,
	436, 437, 438, 439, 440, 0, 0, 413, 453, 453,
	453, 417, 443, 444, 445, 446, 447, 448, 449, 450,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	455, 455, 457, 457, 457, 457, 457, 0, 0, 538,
	0, 1122, 85, 0, 93, 0, 94, 0, 0, 99,
	260, 246, 98, 0, 232, 0, 0, 0, 0, 237,
	622, 1105, 0, 615, 65, 616, 617, 618, 619, 620,
	239, 621, 819, 1132, 1133, 629, 671, 672, 0, 0,
	633, 634, 635, 543, 641, 642, 643, 649, 670, 0,
	0, 0, 782, 670, 651, 861, 654, 978, 0, 688,
	687, 0, 700, 306, 308, 310, 328, 0, 0, 331,
	334, 0, 0, 0, 0, 1155, 0, 1157, 1159, 0,
	0, 188, 189, 190, 0, 182, 0, 205, 245, 0,
	151, 0, 185, 153, 154, 155, 183, 157, 158, 161,
	167, 171, 172, 174, 175, 241, 0, 0, 0, 0,
	148, 0, 479, 480, 481, 482, 491, 488, 716, 0,
	0, 681, 682, 48, 0, 0, 1064, 1053, 0, 0,
	0, 0, 1042, 1044, 1045, 0, 0, 1027, 0, 0,
	719, 712, 39, 828, 829, 831, 848, 0, 850, 852,
	759, 729, 0, 1017, -2, 838, 839, 863, 864, 865,
	0, 0, 0, 0, 861, 843, 0, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 895,
	992, 993, 0, 893, 894, 903, 0, 0, 871, 723,
	724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 866, 0, 1074, 0, 0, 0, 943,
	0, 0, 878, 1019, 0, 878, 1019, 0, 0, 0,
	0, 0, 0, 0, 1014, 1011, 0, 0, 979, 0,
	0, 0, 870, 0, 0, 0, 0, 816, 0, 0,
	0, 0, 0, 0, 805, 0, 0, 808, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 1477, 777, 0,
	821, 0, 0, 0, 825, 0, 825, 68, 825, 70,
	0, 820, 1081, 0, 0, 0, 79, 80, 75, 1085,
	0, 1091, 1092, 1093, 1017, 0, 1052, 716, 369, 557,
	559, 562, 563, 564, 373, 375, 376, 377, 0, -2,
	530, 1487, 1534, -2, 522, 1401, -2, -2, 380, 462,
	461, 393, 0, 467, 467, 453, 453, 453, 453, 422,
	467, 425, 428, 429, 470, 0, 470, 470, 470, 470,
	467, 0, 0, 414, 415, 416, 405, 0, 406, 455,
	408, 0, 409, 410, 411, 412, 536, 537, 0, 0,
	0, 0, 0, 1107, 0, 262, 263, 208, 101, 0,
	0, 247, 0, 368, 0, 609, 0, 611, 236, 613,
	623, 624, 614, 0, 0, 631, 632, 825, 0, 0,
	644, 668, 669, 667, 670, 0, 648, 662, 0, 0,
	655, 0, 689, 312, 313, 335, 71, 0, 1135, 1154,
	0, 1158, 1160, 0, 191, 193, 0, 142, 0, 0,
	184, 0, 156, 0, 0, 0, 0, 0, 487, 0,
	711, 53, 570, 571, -2, 600, 1114, 600, 600, 588,
	506, 600, 0, 49, 0, 1063, 0, 0, 0, 1048,
	1049, 1041, 0, 1100, 1101, 1028, 1029, 86, 720, 849,
	851, 853, 0, 869, 840, 861, 844, 0, 841, 0,
	835, 0, 0, 738, 0, 738, 738, 0, 929, 0,
	930, 957, 0, 942, 738, 738, 0, 0, 0, 0,
	0, 0, 936, 937, 938, 939, 738, 738, 738, 738,
	0, 0, 0, 738, 738, 738, 0, 874, -2, 940,
	941, 0, 0, 0, 0, 0, 985, 0, 0, 986,
	951, 0, 0, 0, 0, 0, 1038, 0, 1012, 0,
	0, 960, 980, 981, 982, 983, 984, 1068, 0, 0,
	0, 1057, 0, 825, 1076, 0, 0, 765, 796, 798,
	0, 793, 806, 807, 809, 0, 811, 0, 813, 814,
	784, 771, 868, 772, 0, 0, 0, 821, 781, 0,
	0, 0, 1038, 0, 825, 61, 62, 0, 77, 78,
	0, 0, 84, 471, 472, 0, 207, 0, 560, 0,
	374, 0, 523, 0, 0, 508, 522, 518, 519, 522,
	513, 523, 514, 0, 382, 0, 384, 385, 386, 387,
	388, 0, 0, 466, 0, 474, 476, 0, 389, 463,
	0, 470, 470, 467, 420, 421, 453, 426, 470, 430,
	0, 431, 432, 433, 434, 470, 0, 451, 0, 0,
	407, 0, 553, 0, 1123, 85, 85, 0, 264, 265,
	266, 0, 209, 210, 0, 0, 0, 0, 111, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 66, 240,
	639, 544, 545, 670, 646, 0, 862, 656, 658, 659,
	467, 0, 1156, 0, 0, 0, 0, 0, 203, 186,
	0, 0, 0, 0, 149, 0, 719, 0, 0, 522,
	0, 589, 590, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 1116, 0, 0,
	0, 507, 0, 0, 1066, 1065, 1054, 38, 825, 0,
	730, 1018, 0, 842, 0, 845, 738, 872, 914, 739,
	725, 0, 915, 916, 738, 731, 732, 734, 931, 918,
	919, 932, 933, 934, 738, 738, 935, 923, 922, 921,
	924, 0, 0, 738, 927, 926, 928, 910, 0, 453,
	453, 997, 453, 457, 1000, 453, 1002, 453, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1009, 959, 1015, 0, 54, 0, 1068, 1055, 1070, 1072,
	0, 0, 0, 0, -2, 1337, 0, 788, 1038, 0,
	0, 0, 790, 797, 0, 0, 791, 0, 792, 810,
	812, 769, 0, 0, 773, 0, 0, -2, 780, 0,
	0, 0, 1046, 826, 60, 81, 82, 83, 558, 561,
	0, 524, 453, 453, 0, 528, 520, 529, 510, 512,
	0, 383, 464, 0, 473, 475, 477, 454, 418, 419,
	470, 427, 423, 468, 469, 435, 467, 0, 467, 0,
	458, 0, 540, 554, 0, 0, 91, 0, 0, 216,
	0, 212, 0, 0, 0, 119, 0, 102, 103, 104,
	106, 107, 0, 0, 0, 100, 0, 249, 0, 252,
	253, 610, 612, 645, 783, 1146, 815, 203, 192, 194,
	195, 203, 206, 143, 0, 144, 146, 0, 145, 492,
	86, 572, 0, 597, 0, 0, 1122, 520, 0, -2,
	575, 580, 581, 582, 583, 584, 0, 595, 0, 577,
	0, 597, 0, 592, 0, 0, 0, 1030, 0, 86,
	86, 911, 846, 913, 0, 917, 736, 735, 912, 920,
	0, 0, 925, 944, 994, 467, 998, 999, 1001, 1003,
	1004, 1006, 946, 945, 0, 0, 0, 0, 952, 0,
	0, 0, 0, 0, 0, 1013, 0, 55, 0, 1073,
	-2, 0, 0, 72, 0, 1046, 1077, 1078, 1079, 794,
	0, 799, 0, 786, 0, 821, 778, 0, 0, 0,
	0, 59, 498, 0, 1043, 1043, 509, 522, 521, 0,
	465, 0, 0, 424, 470, 452, 470, 0, 0, 555,
	0, 85, 0, 85, 217, 218, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 211, 213, 214, 215, 137,
	120, 121, 0, 0, 0, 0, 112, 113, 0, 0,
	0, 0, 0, 108, 109, 110, 248, 0, 0, 251,
	0, 0, 1148, 1142, 196, 196, 0, 147, 0, 0,
	574, 598, 0, 381, 381, 0, 522, 0, 591, 0,
	1112, 1113, 0, 586, 597, 0, 0, 0, 1067, 1035,
	0, 825, 0, 721, 726, 1038, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 953, 954, 955, 987, 958,
	1010, 0, 1071, 1056, 0, 1060, 0, 789, 58, 0,
	785, 0, 774, 776, 821, 822, 823, 824, 497, 501,
	0, 506, 0, 525, 526, 527, 511, 0, 441, 442,
	456, 459, 0, 92, 0, 0, 219, 220, 221, 222,
	224, 225, 0, 0, 0, 97, 0, 0, 122, 0,
	0, 0, 0, 132, 133, 134, 135, 136, 114, 115,
	116, 117, 118, 105, 0, 0, 250, 0, 255, 256,
	1110, 1150, -2, 0, 140, 0, 141, 204, 0, 573,
	599, 378, 379, 0, 1122, 0, 576, 585, 587, 0,
	594, 0, 750, 0, 0, 1030, 86, 740, 0, 976,
	977, 947, 949, 948, 950, 0, 0, 0, 0, 1059,
	0, 795, 787, 779, 502, 503, 0, 505, 0, 499,
	0, 85, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 0, 0, 0, 0, 226, 227, 228, 229,
	138, 139, 123, 124, 0, 126, 127, 0, 0, 0,
	258, 0, 254, 784, 0, 1142, 0, 1144, 0, 1141,
	0, 197, 825, 0, 0, 0, 593, 0, 603, 0,
	43, 0, 1036, 1037, 1031, 1032, 1034, 1035, 722, 0,
	0, 0, 737, 956, 0, 0, 0, 1069, -2, 504,
	0, 90, 500, 267, 96, 0, 0, 1124, 0, 0,
	294, 295, 296, 1126, 0, 336, 0, 128, 0, 130,
	131, 257, 0, 36, 0, 1149, 0, 1147, 0, 0,
	1143, 0, 1030, 499, 0, 499, 602, 0, 0, 751,
	752, 0, 0, 750, 733, 741, 0, 744, 0, 0,
	0, 755, 0, 742, 988, 0, 991, 0, 85, 0,
	0, 0, 278, 0, 0, 0, 0, 0, 292, 0,
	0, 125, 129, 259, 1111, 1151, 0, 0, 0, 1035,
	578, 0, 596, 604, 0, 0, 0, 1033, 44, 0,
	745, 746, 747, 748, 749, 0, 989, 0, 0, 268,
	269, 0, 0, 279, 0, 0, 0, 0, 0, 0,
	1127, 230, 337, 1145, 1139, 198, 199, 200, 202, 750,
	499, 0, 753, 754, 0, 756, 0, 531, 85, 270,
	271, 272, 273, 274, 0, 276, 0, 0, 0, 288,
	289, 290, 0, 297, 299, 300, 301, 0, 303, 304,
	293, 0, 41, 579, 0, 743, 0, 532, 533, 0,
	95, 0, 0, 0, 0, 0, 0, 285, 0, 291,
	0, 302, 201, 0, 990, 534, 0, 535, 0, 0,
	0, 0, 0, 280, 281, 0, 0, 0, 286, 0,
	298, 0, 0, 546, 548, 549, 0, 0, 547, 275,
	277, 0, 283, 0, 0, 605, 606, 550, 551, 552,
	0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 503,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:486
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:493
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:528
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:534
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:540
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:553
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:564
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:577
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:584
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:593
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:603
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:613
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:639
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:651
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:673
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:679
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:683
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:687
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:691
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:734
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:740
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:744
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:751
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:764
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:770
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:801
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:806
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:812
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:831
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:835
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:839
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:843
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:851
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:859
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:863
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:867
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:886
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:904
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:922
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:940
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:949
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:963
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:977
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:986
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1000
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1006
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1014
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1026
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1030
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1034
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1038
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1078
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1083
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1087
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1091
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1097
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1102
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1106
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1110
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1114
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1118
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1124
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1148
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1259
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1304
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1374
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1411
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1421
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1425
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1447
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1473
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1510
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1574
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1582
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1588
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1600
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1604
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1608
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1614
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1622
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1669
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1685
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1691
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1695
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1717
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1722
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1727
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1733
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1751
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1856
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1872
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2018
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2034
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2057
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2061
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2138
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2459
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2490
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2498
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2507
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2517
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = yyDollar[1].str
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2657
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.indexOptions = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2690
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2695
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2715
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2723
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = yyDollar[1].str
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2778
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2802
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 531:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2822
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 532:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2826
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 533:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2830
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 534:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2834
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 535:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2838
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2862
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2891
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.boolean = false
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2980
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = string("")
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3002
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3025
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3032
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3043
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3052
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 579:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3056
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3084
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3095
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3117
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3126
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3130
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3138
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3145
		{
			yyVAL.columnOrder = nil
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3158
		{
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3164
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3174
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3180
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3184
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3204
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3216
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3222
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3230
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3234
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3242
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3250
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3258
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3266
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3274
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3282
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3291
		{

		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3305
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3333
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3337
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3365
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3373
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3377
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3381
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3385
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3389
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 646:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3394
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3403
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3407
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3415
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3433
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3442
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3451
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3455
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3475
		{
			yyVAL.boolean = false
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.boolean = true
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
			yyVAL.showFilter = nil
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = ""
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = SessionStr
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = GlobalStr
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.statement = &Begin{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.statement = &Begin{}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3561
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3565
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.statement = &Commit{}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Rollback{}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3597
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3601
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3617
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3655
		{
			setAllowComments(yylex, true)
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.bytes2 = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = UnionStr
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = UnionAllStr
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = UnionDistinctStr
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3688
		{
			yyVAL.byt = 0
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.byt = 1
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = SQLCacheStr
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = DistinctStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = StraightJoinHint
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3741
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3764
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3782
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3798
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3803
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3811
		{
			yyVAL.exprs = nil
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3815
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3820
		{
			yyVAL.over = nil
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.over = yyDollar[1].over
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3829
		{
			yyVAL.frame = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3886
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3909
		{
			yyVAL.window = nil
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.window = yyDollar[2].window
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3927
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3981
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3995
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4011
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4017
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4023
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4027
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4038
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4053
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4057
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.expr = nil
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4085
		{
			yyVAL.columns = nil
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4089
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4109
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4122
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4126
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4130
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4134
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4142
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4146
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = JoinStr
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = JoinStr
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = JoinStr
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = StraightJoinStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = LeftJoinStr
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = LeftJoinStr
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = RightJoinStr
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = RightJoinStr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = NaturalJoinStr
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4226
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4257
		{
			yyVAL.indexHints = nil
		}
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4261
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4265
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4269
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.expr = nil
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4334
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4342
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4346
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4350
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4358
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4362
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4366
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = IsNullStr
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = IsNotNullStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = IsTrueStr
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = IsNotTrueStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = IsFalseStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = IsNotFalseStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = EqualStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = LessThanStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = GreaterThanStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = LessEqualStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = GreaterEqualStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = NotEqualStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4431
		{
			yyVAL.expr = nil
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4471
		{
			yyVAL.selectExprs = nil
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4582
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4586
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4594
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4658
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4798
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4806
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 947:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4810
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4814
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4822
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4826
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 953:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 955:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 956:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = ""
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = BooleanModeStr
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 990:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = QueryExpansionStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5029
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5037
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5041
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5045
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = nil
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5089
		{
			yyVAL.str = string("")
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5093
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5103
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5109
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5114
		{
			yyVAL.expr = nil
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5128
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5132
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &NullVal{}
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{
			yyVAL.exprs = nil
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5195
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5199
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = nil
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5225
		{
			yyVAL.orderBy = nil
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5229
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5239
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5245
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = AscScr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = AscScr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = DescScr
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5263
		{
			yyVAL.limit = nil
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5271
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5275
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = ForUpdateStr
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = ShareModeStr
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5311
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5315
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5323
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5328
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5332
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5336
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5342
		{
			yyVAL.columns = nil
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5346
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5352
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5356
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5360
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5364
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
			yyVAL.assignExprs = nil
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5373
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5383
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5399
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5419
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5425
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5455
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5468
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5481
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5511
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5541
		{
			yyVAL.expr = &Default{}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5550
		{
			yyVAL.byt = 0
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.byt = 1
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5555
		{
			yyVAL.byt = 0
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5557
		{
			yyVAL.byt = 1
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5560
		{
			yyVAL.byt = 0
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5562
		{
			yyVAL.byt = 1
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = IgnoreStr
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5570
		{
			yyVAL.sqlVal = nil
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			yyVAL.empty = struct{}{}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.empty = struct{}{}
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.empty = struct{}{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.empty = struct{}{}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = UniqueStr
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.str = FulltextStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = SpatialStr
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5596
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5601
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5603
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5607
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5621
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = string("")
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5655
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5660
		{
			yyVAL.EnclosedBy = nil
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5664
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5669
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5673
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5678
		{
			yyVAL.sqlVal = nil
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5682
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5687
		{
			yyVAL.sqlVal = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5696
		{
			yyVAL.Fields = nil
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5700
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5705
		{
			yyVAL.Lines = nil
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5709
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.sqlVal = nil
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5724
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5734
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5740
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5744
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.lockType = LockRead
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5754
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.lockType = LockWrite
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5762
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5768
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5774
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6294
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6303
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
