// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const ROUTINE = 57589
const TABLESPACE = 57590
const CLIENT = 57591
const SLAVE = 57592
const EVENT = 57593
const EXECUTE = 57594
const FILE = 57595
const RELOAD = 57596
const REPLICATION = 57597
const SHUTDOWN = 57598
const SUPER = 57599
const USAGE = 57600
const BEGIN = 57601
const START = 57602
const TRANSACTION = 57603
const COMMIT = 57604
const ROLLBACK = 57605
const SAVEPOINT = 57606
const WORK = 57607
const RELEASE = 57608
const BIT = 57609
const TINYINT = 57610
const SMALLINT = 57611
const MEDIUMINT = 57612
const INT = 57613
const INTEGER = 57614
const BIGINT = 57615
const INTNUM = 57616
const SERIAL = 57617
const REAL = 57618
const DOUBLE = 57619
const FLOAT_TYPE = 57620
const DECIMAL = 57621
const NUMERIC = 57622
const DEC = 57623
const FIXED = 57624
const PRECISION = 57625
const TIME = 57626
const TIMESTAMP = 57627
const DATETIME = 57628
const YEAR = 57629
const CHAR = 57630
const VARCHAR = 57631
const BOOL = 57632
const CHARACTER = 57633
const VARBINARY = 57634
const NCHAR = 57635
const NVARCHAR = 57636
const NATIONAL = 57637
const VARYING = 57638
const TEXT = 57639
const TINYTEXT = 57640
const MEDIUMTEXT = 57641
const LONGTEXT = 57642
const LONG = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const LOCAL = 57658
const LOW_PRIORITY = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const COLLATION = 57666
const DATABASES = 57667
const SCHEMAS = 57668
const TABLES = 57669
const FULL = 57670
const PROCESSLIST = 57671
const COLUMNS = 57672
const FIELDS = 57673
const ENGINES = 57674
const PLUGINS = 57675
const NAMES = 57676
const CHARSET = 57677
const GLOBAL = 57678
const SESSION = 57679
const ISOLATION = 57680
const LEVEL = 57681
const READ = 57682
const WRITE = 57683
const ONLY = 57684
const REPEATABLE = 57685
const COMMITTED = 57686
const UNCOMMITTED = 57687
const SERIALIZABLE = 57688
const CURRENT_TIMESTAMP = 57689
const DATABASE = 57690
const CURRENT_DATE = 57691
const CURRENT_USER = 57692
const CURRENT_TIME = 57693
const LOCALTIME = 57694
const LOCALTIMESTAMP = 57695
const UTC_DATE = 57696
const UTC_TIME = 57697
const UTC_TIMESTAMP = 57698
const REPLACE = 57699
const CONVERT = 57700
const CAST = 57701
const SUBSTR = 57702
const SUBSTRING = 57703
const TRIM = 57704
const LEADING = 57705
const TRAILING = 57706
const BOTH = 57707
const GROUP_CONCAT = 57708
const SEPARATOR = 57709
const TIMESTAMPADD = 57710
const TIMESTAMPDIFF = 57711
const OVER = 57712
const WINDOW = 57713
const GROUPING = 57714
const GROUPS = 57715
const CURRENT = 57716
const ROWS = 57717
const RANGE = 57718
const AVG = 57719
const BIT_AND = 57720
const BIT_OR = 57721
const BIT_XOR = 57722
const COUNT = 57723
const JSON_ARRAYAGG = 57724
const JSON_OBJECTAGG = 57725
const MAX = 57726
const MIN = 57727
const STDDEV_POP = 57728
const STDDEV = 57729
const STD = 57730
const STDDEV_SAMP = 57731
const SUM = 57732
const VAR_POP = 57733
const VARIANCE = 57734
const VAR_SAMP = 57735
const CUME_DIST = 57736
const DENSE_RANK = 57737
const FIRST_VALUE = 57738
const LAG = 57739
const LAST_VALUE = 57740
const LEAD = 57741
const NTH_VALUE = 57742
const NTILE = 57743
const ROW_NUMBER = 57744
const PERCENT_RANK = 57745
const RANK = 57746
const MATCH = 57747
const AGAINST = 57748
const BOOLEAN = 57749
const LANGUAGE = 57750
const WITH = 57751
const QUERY = 57752
const EXPANSION = 57753
const UNUSED = 57754
const ARRAY = 57755
const DESCRIPTION = 57756
const EMPTY = 57757
const JSON_TABLE = 57758
const LATERAL = 57759
const MEMBER = 57760
const RECURSIVE = 57761
const ACTIVE = 57762
const BUCKETS = 57763
const CLONE = 57764
const COMPONENT = 57765
const DEFINITION = 57766
const ENFORCED = 57767
const EXCLUDE = 57768
const FOLLOWING = 57769
const GEOMCOLLECTION = 57770
const GET_MASTER_PUBLIC_KEY = 57771
const HISTOGRAM = 57772
const HISTORY = 57773
const INACTIVE = 57774
const INVISIBLE = 57775
const LOCKED = 57776
const MASTER_COMPRESSION_ALGORITHMS = 57777
const MASTER_PUBLIC_KEY_PATH = 57778
const MASTER_TLS_CIPHERSUITES = 57779
const MASTER_ZSTD_COMPRESSION_LEVEL = 57780
const NESTED = 57781
const NETWORK_NAMESPACE = 57782
const NOWAIT = 57783
const NULLS = 57784
const OJ = 57785
const OLD = 57786
const ORDINALITY = 57787
const ORGANIZATION = 57788
const OTHERS = 57789
const PATH = 57790
const PERSIST = 57791
const PERSIST_ONLY = 57792
const PRECEDING = 57793
const PRIVILEGE_CHECKS_USER = 57794
const PROCESS = 57795
const REFERENCE = 57796
const REQUIRE_ROW_FORMAT = 57797
const RESOURCE = 57798
const RESPECT = 57799
const RESTART = 57800
const RETAIN = 57801
const SECONDARY = 57802
const SECONDARY_ENGINE = 57803
const SECONDARY_LOAD = 57804
const SECONDARY_UNLOAD = 57805
const SKIP = 57806
const SRID = 57807
const THREAD_PRIORITY = 57808
const TIES = 57809
const VCPU = 57810
const VISIBLE = 57811
const SYSTEM = 57812
const INFILE = 57813

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 34,
	5, 49,
	-2, 1010,
	-1, 42,
	141, 1074,
	142, 1092,
	-2, 230,
	-1, 48,
	181, 653,
	182, 653,
	-2, 643,
	-1, 500,
	128, 1102,
	-2, 1096,
	-1, 501,
	128, 1103,
	-2, 1097,
	-1, 605,
	98, 1367,
	128, 1367,
	-2, 1058,
	-1, 606,
	98, 1481,
	128, 1481,
	-2, 1059,
	-1, 611,
	98, 1390,
	128, 1390,
	-2, 1060,
	-1, 612,
	98, 1436,
	128, 1436,
	-2, 1061,
	-1, 613,
	98, 1437,
	128, 1437,
	-2, 1062,
	-1, 614,
	98, 1320,
	128, 1320,
	-2, 1066,
	-1, 616,
	98, 1413,
	128, 1413,
	-2, 1068,
	-1, 1106,
	1, 742,
	5, 742,
	12, 742,
	13, 742,
	14, 742,
	15, 742,
	17, 742,
	19, 742,
	30, 742,
	31, 742,
	56, 742,
	57, 742,
	58, 742,
	59, 742,
	60, 742,
	62, 742,
	63, 742,
	66, 742,
	67, 742,
	69, 742,
	70, 742,
	490, 742,
	-2, 772,
	-1, 1110,
	67, 66,
	69, 66,
	-2, 70,
	-1, 1349,
	128, 1105,
	-2, 1101,
	-1, 1514,
	44, 502,
	-2, 1332,
	-1, 1518,
	68, 502,
	-2, 1282,
	-1, 1521,
	68, 498,
	72, 498,
	-2, 1204,
	-1, 1522,
	68, 499,
	72, 499,
	-2, 1214,
	-1, 1637,
	44, 545,
	148, 547,
	150, 545,
	151, 545,
	-2, 580,
	-1, 1707,
	5, 50,
	-2, 838,
	-1, 2005,
	69, 1258,
	70, 1258,
	128, 1258,
	-2, 684,
	-1, 2028,
	1, 793,
	5, 793,
	12, 793,
	13, 793,
	14, 793,
	15, 793,
	17, 793,
	19, 793,
	30, 793,
	31, 793,
	56, 793,
	57, 793,
	58, 793,
	59, 793,
	60, 793,
	62, 793,
	63, 793,
	66, 793,
	67, 793,
	69, 793,
	70, 793,
	490, 793,
	-2, 772,
	-1, 2129,
	148, 548,
	-2, 546,
	-1, 2190,
	5, 50,
	-2, 1030,
	-1, 2390,
	41, 1112,
	-2, 1110,
	-1, 2531,
	5, 50,
	-2, 1033,
}

const yyPrivate = 57344

const yyLast = 31108

var yyAct = [...]int{
	563, 78, 2707, 2659, 2681, 2548, 2671, 2661, 814, 2672,
	407, 1566, 2519, 2534, 2445, 7, 2202, 2589, 2444, 6,
	2547, 1506, 2443, 5, 2507, 2041, 2512, 2446, 8, 503,
	2410, 2337, 2022, 2517, 2390, 1141, 2297, 1746, 1564, 1922,
	1998, 2392, 492, 2255, 1931, 2249, 1057, 562, 1775, 1231,
	2233, 1473, 2090, 1327, 2278, 1471, 2042, 1576, 630, 1523,
	2442, 3, 1999, 506, 390, 393, 2535, 485, 2114, 1230,
	1515, 2217, 846, 519, 432, 432, 1930, 469, 2123, 78,
	1467, 1856, 91, 1995, 1505, 628, 1796, 1747, 1504, 81,
	1636, 1555, 104, 1660, 2007, 1320, 1511, 1967, 1335, 1374,
	1602, 1450, 1383, 1211, 480, 1446, 1276, 1233, 1551, 1839,
	1494, 1249, 625, 2014, 959, 626, 1900, 1102, 1438, 607,
	1121, 1351, 1457, 966, 1106, 1618, 501, 1441, 962, 896,
	875, 1120, 603, 624, 604, 1103, 488, 599, 979, 484,
	479, 830, 409, 2729, 874, 410, 83, 1281, 2725, 2715,
	1539, 596, 1112, 610, 2697, 2695, 2676, 2654, 2218, 1075,
	2597, 813, 508, 801, 80, 425, 970, 419, 430, 413,
	1274, 1385, 1076, 125, 477, 67, 125, 2579, 2576, 2369,
	2227, 35, 125, 85, 86, 87, 88, 89, 35, 2688,
	420, 2583, 435, 435, 35, 2367, 70, 38, 39, 35,
	2670, 2578, 2575, 2529, 125, 1741, 2075, 2642, 35, 2564,
	2370, 2382, 1867, 2087, 2582, 125, 1988, 2416, 2417, 125,
	633, 2487, 1742, 125, 402, 1682, 2182, 800, 1617, 2322,
	70, 38, 39, 2037, 2038, 2036, 1589, 125, 435, 2528,
	633, 1589, 1122, 79, 1123, 1280, 1491, 1492, 125, 1469,
	79, 2234, 40, 1316, 1317, 952, 79, 494, 1490, 2236,
	1297, 79, 924, 803, 401, 806, 807, 620, 1278, 1279,
	79, 849, 578, 400, 584, 586, 585, 582, 583, 581,
	580, 579, 1822, 116, 112, 113, 932, 114, 850, 851,
	412, 411, 414, 587, 588, 1525, 1277, 1616, 893, 2523,
	2523, 418, 1784, 1531, 1533, 1783, 1532, 1545, 1785, 1540,
	1540, 107, 2169, 2167, 384, 1941, 2518, 399, 422, 1261,
	118, 117, 426, 1644, 1638, 1639, 476, 1637, 2239, 1640,
	1641, 928, 929, 908, 463, 404, 2372, 429, 2424, 994,
	993, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 2524, 2524, 1005, 97, 2129, 1862, 1890, 1527, 2667,
	1527, 2395, 2113, 2306, 1895, 1645, 1629, 2237, 2238, 2240,
	2241, 2242, 119, 2599, 120, 856, 2097, 834, 835, 2598,
	1552, 837, 2256, 2257, 2258, 2259, 2554, 78, 78, 2491,
	2267, 2250, 2605, 2274, 2481, 1630, 2368, 859, 1308, 2253,
	2685, 864, 1864, 1577, 2552, 866, 2594, 99, 2265, 865,
	2362, 96, 2251, 2252, 2357, 836, 110, 109, 108, 2592,
	2593, 2361, 939, 2586, 2587, 940, 1571, 2360, 415, 416,
	417, 423, 1287, 427, 428, 431, 1140, 847, 2577, 848,
	850, 851, 2359, 857, 858, 2358, 2356, 863, 867, 2088,
	2477, 2478, 385, 2669, 1570, 2091, 2092, 2093, 2094, 2095,
	105, 2536, 2440, 2364, 457, 2091, 2092, 2093, 2094, 2095,
	106, 2489, 2386, 948, 2100, 2204, 1866, 1767, 908, 845,
	394, 956, 842, 125, 841, 931, 2520, 2520, 2665, 843,
	844, 2660, 2483, 2438, 2656, 2640, 101, 2508, 102, 2650,
	1014, 1881, 1882, 1016, 111, 2663, 391, 805, 804, 115,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 395, 2373, 2157, 1925, 1451, 125, 1643, 1262,
	907, 2721, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	2074, 1140, 1055, 71, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 403, 1074, 1077,
	1077, 1077, 1083, 1077, 1077, 1083, 1077, 1083, 1092, 1093,
	1094, 1095, 1096, 1097, 2115, 1107, 2235, 71, 1968, 1623,
	1540, 2527, 77, 833, 1829, 125, 1530, 860, 1280, 77,
	1814, 941, 957, 1554, 2482, 77, 2521, 2521, 945, 2365,
	77, 982, 2383, 1868, 1056, 1819, 1818, 2553, 1865, 77,
	421, 1278, 1279, 98, 392, 2488, 2385, 392, 2099, 908,
	1970, 918, 2711, 2662, 2664, 2279, 2280, 1815, 947, 2045,
	2128, 1140, 392, 954, 1140, 1908, 2730, 2425, 1908, 967,
	1140, 1906, 1820, 1139, 1807, 1015, 2727, 610, 392, 986,
	1808, 1857, 610, 1282, 1113, 1101, 107, 2716, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 2698, 1858, 802, 1284,
	1134, 2338, 1283, 1200, 816, 915, 2493, 2289, 387, 475,
	125, 125, 125, 1125, 2290, 2340, 1476, 1478, 1126, 1817,
	1889, 1886, 1870, 904, 1869, 1058, 633, 1138, 1624, 1078,
	1080, 1082, 1084, 1086, 1088, 1089, 1091, 1111, 1073, 1801,
	1116, 1801, 1079, 1081, 388, 1085, 1087, 1109, 1090, 1219,
	1586, 1217, 861, 1204, 1774, 1585, 1773, 2709, 1135, 1801,
	2710, 1972, 2708, 1772, 913, 798, 1976, 1801, 1971, 1884,
	1969, 951, 109, 108, 1919, 1974, 808, 356, 1017, 1018,
	1717, 2154, 2486, 1714, 1859, 1860, 2339, 2293, 1973, 2146,
	914, 94, 910, 1940, 1804, 1888, 1801, 1887, 1477, 903,
	1788, 1780, 1677, 1975, 1977, 1665, 432, 1650, 1213, 1330,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 2064, 432, 1005, 1232, 911, 912, 1133, 2288,
	1118, 985, 1476, 1478, 826, 1495, 1800, 995, 1800, 1005,
	1005, 2109, 1914, 1906, 498, 1906, 1212, 1911, 1486, 1140,
	1910, 1913, 1907, 1908, 1259, 1358, 1800, 998, 999, 1000,
	1001, 1002, 995, 1250, 1800, 1005, 1323, 1593, 1603, 839,
	1356, 1357, 1355, 832, 2065, 1235, 852, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 976,
	2294, 1005, 978, 1800, 1923, 1257, 1918, 2012, 1017, 1018,
	1915, 1017, 1018, 432, 977, 976, 978, 2011, 1816, 1712,
	2590, 1711, 815, 1713, 1477, 633, 977, 976, 1328, 1329,
	977, 976, 978, 435, 435, 1269, 94, 2718, 1272, 977,
	976, 1990, 125, 1131, 978, 125, 868, 1306, 978, 78,
	435, 435, 2590, 125, 2621, 1290, 2620, 978, 809, 1253,
	1439, 1254, 125, 125, 125, 125, 1439, 1221, 1730, 2714,
	1251, 1236, 1214, 1288, 1594, 2651, 840, 831, 1321, 1206,
	854, 93, 435, 1245, 1246, 1247, 1248, 977, 976, 2613,
	977, 976, 977, 976, 1312, 2266, 2260, 1239, 1240, 2653,
	2052, 2701, 2682, 2700, 1238, 978, 504, 1348, 978, 1314,
	978, 1845, 474, 1311, 1264, 1265, 79, 78, 1267, 92,
	1341, 1343, 1344, 973, 1255, 2722, 1342, 1354, 977, 976,
	435, 435, 435, 2557, 1270, 633, 1352, 818, 819, 820,
	821, 822, 823, 824, 1349, 1286, 978, 1378, 1379, 1285,
	1289, 996, 997, 998, 999, 1000, 1001, 1002, 995, 963,
	1059, 1005, 964, 1058, 2550, 435, 2549, 977, 976, 2484,
	435, 435, 436, 436, 2591, 2532, 2633, 1056, 125, 2723,
	125, 2380, 1313, 633, 482, 978, 2379, 1307, 977, 976,
	1310, 2378, 2377, 1347, 1318, 1992, 1662, 1663, 1664, 593,
	594, 125, 2371, 2226, 2225, 1844, 978, 982, 1470, 1375,
	2551, 1376, 1332, 1107, 1842, 2485, 1823, 1107, 436, 1345,
	1417, 899, 898, 524, 523, 526, 527, 528, 529, 872,
	1424, 1427, 525, 530, 2632, 2619, 1333, 1392, 1440, 1334,
	1786, 1396, 1787, 2602, 2600, 2563, 2480, 2479, 1338, 1339,
	2437, 1353, 871, 633, 2387, 1499, 2355, 2316, 2263, 626,
	1390, 1391, 2262, 2261, 2223, 2057, 1840, 1613, 1056, 1266,
	1237, 1401, 1402, 1403, 1404, 2618, 2490, 1235, 2435, 2404,
	1804, 2398, 2286, 610, 1414, 1416, 2142, 2138, 2130, 1466,
	2101, 1421, 1349, 1481, 1381, 2085, 2084, 1483, 1389, 2083,
	1875, 1874, 1501, 1607, 1591, 1590, 1377, 1398, 1399, 1263,
	1260, 1229, 1479, 1475, 1228, 1227, 1226, 1215, 1409, 633,
	633, 1209, 1413, 1208, 1207, 1200, 125, 1205, 894, 1583,
	828, 1058, 398, 396, 125, 125, 1422, 1423, 1436, 125,
	125, 1500, 1220, 125, 125, 125, 2329, 2643, 2213, 2639,
	1512, 938, 1488, 1526, 1487, 1484, 1493, 2570, 958, 1083,
	2213, 2568, 958, 633, 633, 2213, 2566, 2397, 1581, 1582,
	1109, 1509, 1502, 2213, 2439, 1109, 2329, 2431, 2349, 1109,
	2329, 2345, 2329, 958, 1561, 1562, 1557, 1558, 1559, 1560,
	2329, 2328, 2213, 2212, 2194, 958, 1519, 1649, 958, 1609,
	1114, 1553, 1776, 1498, 2148, 1776, 2072, 2071, 1541, 1542,
	1543, 1544, 2068, 2069, 2068, 2067, 1675, 958, 1454, 958,
	1647, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 125, 2396, 1005, 1626, 1625, 1415, 1610, 1415, 958,
	2348, 125, 1114, 125, 125, 435, 435, 435, 1996, 1666,
	125, 2010, 1348, 1137, 1136, 2080, 1115, 2058, 1117, 1454,
	1776, 82, 2149, 904, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 942, 1563, 1575, 902, 2010, 125, 125, 125,
	1453, 2185, 1615, 1480, 2572, 1113, 2188, 1606, 1721, 1349,
	2149, 1595, 1325, 1415, 901, 1589, 1601, 902, 1115, 1608,
	1113, 2081, 125, 1352, 125, 1614, 943, 2070, 633, 2024,
	1899, 1621, 633, 1790, 1574, 1675, 1489, 2010, 1605, 1454,
	1675, 994, 993, 1003, 1004, 996, 997, 998, 999, 1000,
	1001, 1002, 995, 1628, 633, 1005, 1631, 633, 1500, 1735,
	1734, 1268, 1634, 1324, 1646, 1588, 621, 958, 1648, 1326,
	1654, 1743, 1745, 1652, 1653, 1107, 1107, 1107, 1107, 1107,
	1671, 953, 1309, 1275, 904, 1218, 1216, 1119, 79, 2584,
	2567, 1470, 2023, 1768, 2403, 2401, 2228, 1667, 1527, 2200,
	1633, 1107, 1109, 1556, 2051, 482, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 967, 1552,
	1005, 983, 2015, 2016, 1565, 1673, 1794, 908, 79, 1572,
	1676, 1744, 1749, 1547, 1546, 1678, 1679, 1748, 1353, 1705,
	1684, 1685, 1686, 1687, 1688, 1689, 1201, 1771, 1692, 891,
	1778, 1417, 1779, 1697, 1698, 1699, 1700, 1604, 1702, 1703,
	1704, 2692, 406, 2690, 2673, 1707, 1708, 1709, 1710, 2079,
	2018, 1996, 610, 1846, 1716, 1223, 1729, 1719, 1720, 944,
	905, 1777, 1725, 1726, 900, 1661, 2021, 78, 1732, 2020,
	1733, 1763, 1750, 1736, 1737, 1753, 1738, 1739, 1756, 1770,
	1755, 125, 125, 125, 125, 125, 2615, 1706, 1762, 1791,
	2581, 1751, 1752, 125, 1754, 1764, 1765, 125, 1759, 1757,
	1200, 125, 1928, 1760, 1758, 1803, 1805, 125, 1125, 468,
	1781, 1731, 1651, 432, 1336, 1880, 1789, 1109, 1109, 1109,
	1109, 1109, 1793, 1761, 1212, 1463, 1464, 1848, 489, 490,
	2611, 633, 2191, 1109, 1199, 1659, 1658, 971, 972, 1872,
	2319, 1873, 2285, 1109, 2216, 2137, 2136, 2047, 78, 1806,
	1832, 2056, 1834, 1835, 1836, 1837, 2055, 1841, 1459, 1462,
	1463, 1464, 1460, 1843, 1461, 1465, 969, 1798, 2015, 2016,
	2495, 1926, 1927, 2498, 2562, 2561, 1799, 1802, 1863, 1824,
	1825, 2391, 2601, 1948, 2389, 2476, 1831, 1933, 2475, 397,
	1878, 960, 633, 1833, 1891, 1132, 1838, 2374, 2375, 1348,
	889, 435, 1897, 961, 873, 870, 1681, 1683, 1056, 1256,
	1876, 869, 829, 1883, 2628, 125, 435, 1693, 1694, 1695,
	1696, 2408, 1885, 1459, 1462, 1463, 1464, 1460, 2407, 1461,
	1465, 435, 1898, 2186, 1903, 2295, 1349, 1328, 1329, 2268,
	1612, 1877, 1568, 2001, 78, 1222, 2269, 2555, 2393, 1849,
	1904, 435, 1600, 633, 94, 1909, 1319, 1920, 1921, 435,
	1203, 1924, 971, 972, 486, 1321, 949, 950, 2026, 1935,
	2627, 2626, 1934, 2030, 2031, 2032, 633, 633, 1939, 1997,
	1657, 2625, 125, 2352, 855, 1943, 561, 2604, 1656, 2603,
	2000, 2559, 633, 2499, 2412, 2009, 1901, 1912, 1917, 2304,
	1749, 487, 1938, 82, 2002, 1748, 2411, 2298, 1946, 633,
	1933, 1979, 1978, 436, 436, 2025, 1776, 1989, 1955, 1956,
	2694, 2693, 2029, 1851, 1852, 1853, 2035, 2118, 1896, 1962,
	436, 436, 1894, 1966, 1893, 1718, 1715, 1632, 1252, 2004,
	974, 2693, 1350, 2694, 2428, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	2077, 2078, 436, 2027, 2054, 2033, 2046, 2019, 2048, 1322,
	633, 2003, 633, 432, 621, 2096, 617, 2040, 471, 2039,
	629, 1561, 473, 1562, 2456, 51, 2049, 2458, 19, 2050,
	2457, 18, 84, 2082, 54, 633, 2459, 20, 2460, 21,
	817, 1, 1991, 2455, 15, 2454, 14, 2448, 10, 1622,
	436, 436, 436, 2469, 33, 633, 1292, 633, 2248, 633,
	2103, 633, 2247, 1430, 2098, 2468, 32, 2467, 28, 2466,
	27, 2254, 1442, 2465, 26, 2059, 2060, 2463, 23, 2462,
	22, 2086, 2063, 2464, 24, 436, 2453, 13, 2034, 2066,
	436, 436, 2450, 12, 2449, 11, 2108, 2447, 9, 2112,
	482, 2089, 1861, 2116, 2117, 2264, 2119, 1210, 2363, 812,
	1573, 895, 2560, 125, 2150, 2494, 2496, 2061, 2388, 2147,
	2270, 2232, 2231, 1855, 1854, 890, 1273, 983, 2126, 2180,
	2121, 435, 2120, 1200, 1902, 2127, 125, 435, 1905, 2141,
	1949, 1584, 1642, 1952, 1953, 1954, 2506, 1513, 1957, 1503,
	623, 125, 90, 435, 1592, 633, 435, 838, 2104, 364,
	435, 435, 1510, 435, 1812, 2497, 892, 1811, 1821, 1524,
	1810, 1809, 2492, 1813, 2106, 1145, 1143, 1144, 1142, 633,
	1147, 1146, 2184, 125, 633, 368, 1127, 2208, 2209, 2210,
	2542, 633, 633, 975, 100, 55, 2287, 1916, 95, 103,
	370, 1013, 2151, 1655, 2165, 1782, 608, 609, 2219, 1749,
	601, 955, 2415, 2585, 1748, 965, 2509, 1728, 1072, 78,
	2206, 2187, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 2143, 2161, 1005, 1437, 2196, 2195,
	507, 2211, 1447, 494, 1766, 2156, 2170, 2171, 2511, 1340,
	522, 2207, 2176, 521, 520, 482, 517, 518, 2522, 2244,
	2245, 2246, 1599, 1331, 1791, 1740, 987, 2073, 2220, 2189,
	2190, 505, 2192, 125, 496, 2193, 1105, 1098, 1611, 2229,
	1458, 1456, 1455, 1224, 597, 2017, 1199, 2013, 1468, 1107,
	633, 1104, 68, 853, 386, 2205, 2181, 633, 633, 633,
	2281, 2282, 2423, 2243, 2183, 2283, 633, 37, 2296, 472,
	491, 25, 2221, 1058, 17, 862, 1933, 2272, 633, 2271,
	16, 2273, 1635, 2197, 2198, 810, 41, 2199, 2275, 2001,
	2201, 43, 2001, 2324, 2300, 2301, 2291, 2276, 1058, 2284,
	2046, 2277, 1850, 1569, 2541, 2026, 125, 2658, 876, 2680,
	2588, 1668, 1669, 1670, 31, 1561, 30, 2327, 2222, 29,
	2224, 2292, 2461, 2470, 2452, 436, 436, 436, 2451, 2299,
	2645, 2644, 2321, 4, 946, 69, 2000, 34, 619, 2000,
	2, 2351, 0, 2353, 0, 435, 2303, 0, 0, 0,
	0, 2320, 2330, 2323, 2350, 0, 0, 0, 0, 0,
	0, 2331, 0, 2326, 0, 0, 0, 0, 2342, 2343,
	2341, 0, 968, 633, 0, 125, 0, 0, 0, 2336,
	0, 633, 0, 2354, 482, 0, 1722, 1723, 1724, 0,
	0, 0, 0, 0, 2366, 0, 2409, 0, 2376, 0,
	0, 0, 0, 0, 2344, 2311, 2312, 2313, 0, 2315,
	1475, 1109, 2332, 2381, 2305, 2394, 0, 0, 0, 123,
	0, 633, 383, 2001, 2384, 78, 0, 633, 123, 0,
	0, 0, 125, 2346, 125, 2347, 2333, 2334, 2335, 0,
	633, 2399, 2400, 2414, 0, 0, 0, 2406, 2413, 0,
	481, 2418, 0, 0, 78, 633, 0, 0, 495, 2441,
	0, 600, 618, 2429, 0, 123, 0, 0, 2434, 123,
	2000, 2402, 0, 0, 0, 0, 0, 0, 0, 2436,
	0, 0, 0, 123, 2433, 2430, 0, 0, 0, 0,
	617, 0, 0, 0, 123, 617, 1128, 1107, 0, 0,
	0, 0, 1528, 1529, 0, 1534, 1535, 1536, 1537, 1538,
	0, 0, 0, 0, 0, 0, 0, 633, 0, 0,
	0, 0, 0, 1548, 1549, 1550, 0, 2502, 0, 2504,
	0, 0, 0, 0, 0, 2419, 2420, 2421, 2422, 0,
	0, 2503, 0, 2500, 0, 2426, 2427, 0, 0, 0,
	2514, 2525, 0, 2537, 0, 0, 633, 0, 1879, 2515,
	0, 0, 0, 0, 0, 0, 2530, 0, 0, 0,
	0, 0, 494, 482, 0, 78, 1058, 2501, 0, 0,
	0, 482, 1944, 1945, 0, 0, 0, 1749, 0, 1950,
	1951, 0, 1748, 0, 0, 2546, 0, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 0, 1963, 1964, 1965, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	435, 1797, 1005, 125, 0, 2556, 0, 1937, 633, 2558,
	633, 2574, 0, 0, 0, 0, 0, 0, 906, 0,
	0, 0, 0, 2516, 0, 2573, 0, 0, 0, 0,
	2565, 2526, 0, 0, 2580, 0, 0, 0, 2531, 1109,
	0, 0, 0, 0, 0, 125, 0, 2434, 0, 1980,
	1981, 0, 1982, 1983, 0, 0, 1984, 0, 2595, 0,
	2607, 436, 2609, 2510, 2513, 1202, 0, 0, 0, 1993,
	1994, 0, 78, 2608, 0, 2610, 436, 2617, 78, 2612,
	633, 2616, 2606, 2631, 0, 0, 2622, 0, 0, 0,
	0, 436, 2624, 0, 432, 0, 2637, 0, 2629, 0,
	0, 0, 78, 0, 2028, 0, 2641, 78, 0, 123,
	0, 436, 2649, 2655, 2569, 633, 2648, 2638, 0, 436,
	2647, 0, 2652, 2538, 2539, 2646, 0, 0, 0, 0,
	0, 78, 0, 2668, 78, 78, 2674, 0, 0, 78,
	2631, 0, 0, 0, 2683, 0, 0, 0, 0, 2053,
	2687, 2675, 0, 123, 2677, 0, 432, 78, 2686, 2691,
	78, 2689, 2631, 0, 0, 2702, 0, 2657, 2704, 0,
	0, 0, 0, 0, 633, 1293, 78, 2712, 78, 0,
	2699, 2631, 78, 2631, 0, 0, 0, 633, 0, 0,
	0, 633, 0, 0, 0, 0, 78, 0, 0, 78,
	0, 2631, 2717, 633, 0, 0, 78, 0, 0, 0,
	78, 2631, 435, 2105, 0, 2631, 0, 0, 0, 2726,
	0, 379, 2153, 629, 2513, 0, 0, 0, 0, 0,
	2155, 481, 0, 0, 0, 0, 0, 0, 0, 2158,
	2159, 0, 2623, 0, 0, 0, 2160, 0, 0, 0,
	0, 0, 629, 0, 0, 958, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 1827, 1828, 1830, 0, 0,
	0, 2152, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1380, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 0, 0, 1005, 0,
	0, 0, 357, 2719, 2720, 0, 0, 0, 0, 360,
	2177, 2178, 2179, 0, 0, 0, 0, 0, 0, 369,
	377, 378, 0, 0, 2703, 0, 0, 0, 0, 0,
	0, 617, 0, 0, 0, 0, 123, 123, 123, 0,
	0, 436, 0, 0, 0, 0, 618, 436, 0, 1443,
	1444, 618, 1108, 0, 0, 366, 0, 0, 367, 0,
	2175, 375, 376, 436, 0, 0, 436, 0, 0, 0,
	436, 436, 0, 436, 0, 0, 617, 2125, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 2132, 2134, 0,
	629, 0, 0, 629, 629, 0, 0, 2125, 0, 122,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 0,
	0, 909, 916, 917, 919, 920, 921, 922, 923, 0,
	925, 926, 927, 373, 930, 0, 933, 934, 935, 936,
	937, 598, 0, 0, 0, 622, 0, 0, 0, 799,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 0, 811, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2307, 2308, 2309,
	2310, 0, 0, 0, 0, 2314, 0, 0, 0, 2317,
	2318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 361, 362, 0, 382, 0, 0, 0, 363, 365,
	0, 359, 381, 380, 0, 0, 0, 0, 1620, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2062, 2174, 0, 0, 0, 123, 0,
	0, 123, 0, 0, 1620, 0, 0, 1620, 0, 1234,
	0, 0, 0, 0, 0, 0, 0, 374, 123, 123,
	123, 123, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 0, 2125,
	0, 1382, 1387, 1388, 0, 0, 0, 0, 1393, 1394,
	1395, 0, 1397, 0, 0, 1400, 0, 0, 0, 2125,
	1405, 1406, 1407, 1408, 0, 1410, 1411, 1412, 0, 0,
	0, 0, 0, 1418, 1419, 1420, 0, 0, 0, 1426,
	1429, 0, 1434, 1435, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 1448,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 482, 0, 0, 0, 0, 0,
	2044, 0, 2162, 2163, 123, 2164, 481, 0, 2166, 0,
	2168, 0, 0, 0, 0, 2044, 0, 0, 0, 827,
	617, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 2505, 0, 0, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 0, 617, 0, 0, 0, 0,
	0, 0, 0, 897, 0, 0, 2122, 0, 0, 0,
	2124, 629, 0, 0, 0, 0, 0, 2214, 2215, 0,
	0, 1386, 1386, 1386, 0, 0, 0, 1386, 1386, 1386,
	1386, 1386, 1386, 0, 0, 1386, 0, 0, 0, 0,
	1386, 1386, 1386, 1386, 0, 1386, 1386, 1386, 0, 0,
	2173, 0, 0, 1386, 1386, 1386, 0, 0, 0, 1386,
	1386, 0, 1386, 1386, 0, 0, 0, 618, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1386, 1386, 1386,
	1386, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	123, 481, 0, 0, 0, 123, 123, 0, 0, 123,
	1485, 1234, 618, 0, 0, 0, 0, 0, 0, 457,
	436, 0, 0, 0, 0, 0, 1234, 0, 2044, 0,
	2044, 0, 0, 1892, 0, 0, 0, 0, 0, 463,
	994, 993, 1003, 1004, 996, 997, 998, 999, 1000, 1001,
	1002, 995, 0, 0, 1005, 0, 629, 629, 0, 0,
	1795, 0, 0, 0, 0, 0, 1291, 0, 0, 1294,
	1295, 1296, 629, 1298, 1299, 0, 0, 1300, 0, 0,
	0, 0, 0, 1301, 629, 0, 2172, 1302, 1303, 1947,
	1304, 1305, 0, 0, 0, 0, 1100, 123, 1110, 0,
	0, 0, 0, 2666, 1674, 1987, 0, 123, 0, 123,
	123, 0, 1680, 0, 0, 0, 123, 0, 0, 0,
	0, 1690, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 1140, 0, 1596, 1597, 123, 0, 0, 617, 0,
	629, 0, 2008, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 2705, 0, 0, 0, 0, 0, 123, 457,
	481, 0, 0, 0, 0, 2008, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 0,
	1005, 0, 0, 0, 2044, 629, 0, 629, 0, 629,
	0, 2043, 0, 994, 993, 1003, 1004, 996, 997, 998,
	999, 1000, 1001, 1002, 995, 0, 0, 1005, 0, 0,
	0, 0, 0, 1234, 0, 0, 0, 0, 1167, 0,
	0, 0, 436, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 0, 0, 0, 0, 0, 2596, 0, 0,
	0, 0, 0, 0, 1386, 0, 0, 0, 0, 0,
	0, 0, 1386, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 1386, 463, 436, 2111, 0, 0, 0, 0,
	0, 0, 1386, 0, 0, 0, 1386, 0, 0, 0,
	0, 0, 0, 0, 2124, 0, 0, 0, 598, 2135,
	0, 1225, 1154, 0, 2140, 0, 0, 0, 0, 1386,
	0, 2144, 2145, 0, 0, 0, 0, 0, 1241, 1242,
	1243, 1244, 0, 0, 0, 0, 618, 123, 123, 123,
	123, 123, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 1986, 0, 123, 1168, 0, 0, 481, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 618, 0, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 0, 457, 0, 0, 0, 0, 0, 0,
	2203, 0, 0, 0, 0, 0, 463, 2203, 2203, 2203,
	0, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 1627, 1198, 2203, 994,
	993, 1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002,
	995, 0, 0, 1005, 0, 0, 0, 1337, 1985, 0,
	0, 123, 0, 1181, 1184, 1185, 1186, 1187, 1188, 1189,
	0, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 0,
	1169, 1170, 1171, 1172, 1148, 1152, 1182, 1149, 1155, 1151,
	1153, 1150, 0, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 0, 0, 0, 0, 0, 0, 1140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 0, 1386,
	0, 629, 0, 0, 0, 0, 457, 0, 1386, 0,
	1234, 0, 0, 1167, 463, 0, 994, 993, 1003, 1004,
	996, 997, 998, 999, 1000, 1001, 1002, 995, 0, 0,
	1005, 0, 0, 0, 0, 2133, 0, 0, 0, 0,
	0, 2325, 1452, 0, 0, 0, 0, 2203, 0, 0,
	0, 0, 0, 0, 0, 0, 1482, 0, 0, 0,
	2043, 0, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 618, 2043, 0, 437, 438, 439,
	440, 441, 445, 446, 450, 451, 460, 459, 458, 461,
	462, 465, 464, 466, 442, 443, 444, 447, 448, 449,
	452, 453, 456, 454, 455, 0, 0, 1154, 994, 993,
	1003, 1004, 996, 997, 998, 999, 1000, 1001, 1002, 995,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2405, 0, 0,
	0, 0, 0, 0, 457, 0, 0, 1567, 0, 1168,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 1579,
	1580, 1936, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2432, 0, 0, 123,
	0, 0, 994, 993, 1003, 1004, 996, 997, 998, 999,
	1000, 1001, 1002, 995, 0, 1598, 1005, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 897, 0,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 2043, 123,
	2043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 1181, 1184,
	1185, 1186, 1187, 1188, 1189, 617, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 0, 1169, 1170, 1171, 1172, 1148,
	1152, 1182, 1149, 1155, 1151, 1153, 1150, 0, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 0, 0, 0,
	629, 0, 0, 0, 463, 0, 0, 0, 0, 0,
	0, 0, 35, 0, 70, 38, 39, 0, 0, 481,
	0, 0, 0, 618, 0, 2131, 58, 0, 0, 0,
	0, 0, 76, 0, 0, 2571, 40, 0, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 0, 0, 35,
	0, 70, 38, 39, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 1183, 76,
	0, 0, 123, 40, 2043, 0, 0, 0, 2471, 0,
	0, 2679, 2682, 2678, 0, 0, 0, 2614, 0, 0,
	0, 2203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 629, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 457, 0, 0, 42, 72, 45,
	44, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2472, 0, 2471, 1672, 0, 0, 0,
	2728, 123, 0, 0, 0, 0, 0, 0, 0, 48,
	75, 74, 0, 0, 0, 0, 46, 994, 993, 1003,
	1004, 996, 997, 998, 999, 1000, 1001, 1002, 995, 0,
	0, 1005, 0, 0, 42, 72, 45, 44, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2472, 1871, 0, 0, 0, 0, 0, 0, 481, 0,
	481, 0, 56, 57, 0, 2473, 48, 75, 74, 0,
	0, 0, 0, 46, 989, 0, 992, 0, 0, 65,
	0, 66, 0, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	0, 990, 991, 988, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 56,
	57, 0, 2473, 2474, 73, 0, 52, 53, 60, 0,
	61, 0, 0, 0, 0, 0, 65, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2474, 73, 0, 52, 53, 60, 0, 61, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 0, 0, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 71, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 778, 755, 319, 703, 781, 667, 689,
	794, 692, 695, 736, 650, 716, 248, 687, 651, 2139,
	671, 640, 680, 641, 668, 705, 173, 666, 757, 719,
	780, 206, 732, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 779, 711, 0, 788, 209, 0, 728, 789,
	307, 232, 0, 0, 707, 765, 714, 753, 702, 738,
	659, 727, 783, 688, 734, 784, 0, 0, 0, 0,
	2540, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 731, 777, 683, 733, 735, 638, 730, 0, 645,
	652, 793, 772, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 706, 715, 747, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 259, 280, 210, 327, 742, 776, 336, 690, 797,
	345, 350, 2230, 712, 656, 304, 174, 0, 131, 0,
	266, 169, 202, 700, 737, 670, 161, 744, 726, 764,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	2543, 2544, 2545, 0, 0, 0, 0, 342, 696, 292,
	291, 691, 193, 752, 729, 642, 274, 740, 198, 130,
	316, 353, 147, 204, 321, 634, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 682, 741,
	338, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 694,
	660, 295, 275, 644, 647, 648, 649, 657, 708, 709,
	721, 724, 762, 761, 760, 763, 768, 791, 790, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 129, 138, 208, 796, 273, 180, 341, 639,
	171, 0, 710, 713, 723, 745, 127, 139, 150, 156,
	170, 175, 179, 686, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 743,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 770, 0, 0, 0,
	0, 778, 755, 319, 703, 781, 667, 689, 794, 692,
	695, 736, 650, 716, 248, 687, 651, 0, 671, 640,
	680, 641, 668, 705, 173, 666, 757, 719, 780, 206,
	732, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	779, 711, 0, 788, 209, 0, 728, 789, 307, 232,
	0, 2533, 707, 765, 714, 753, 702, 738, 659, 727,
	783, 688, 734, 784, 0, 0, 0, 0, 632, 0,
	1507, 1508, 0, 0, 0, 0, 0, 654, 0, 731,
	777, 683, 733, 735, 638, 730, 0, 645, 652, 793,
	772, 674, 675, 676, 1792, 0, 0, 0, 0, 0,
	0, 706, 715, 747, 699, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 259,
	280, 210, 327, 742, 776, 336, 690, 797, 345, 350,
	0, 712, 656, 304, 174, 0, 131, 0, 266, 169,
	202, 700, 737, 670, 161, 744, 726, 764, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 696, 292, 291, 691,
	193, 752, 729, 642, 274, 740, 198, 130, 316, 353,
	147, 204, 321, 634, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 682, 741, 338, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 694, 660, 295,
	275, 644, 647, 648, 649, 657, 708, 709, 721, 724,
	762, 761, 760, 763, 768, 791, 790, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	129, 138, 208, 796, 273, 180, 341, 639, 171, 0,
	710, 713, 723, 745, 127, 139, 150, 156, 170, 175,
	179, 686, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 743, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 770, 778, 755, 319, 703, 781,
	667, 689, 794, 692, 695, 736, 650, 716, 248, 687,
	651, 0, 671, 640, 680, 641, 668, 705, 173, 666,
	757, 719, 780, 206, 732, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 779, 711, 0, 788, 209, 0,
	728, 789, 307, 232, 0, 0, 707, 765, 714, 753,
	702, 738, 659, 727, 783, 688, 734, 784, 0, 0,
	0, 0, 632, 0, 1507, 1508, 0, 0, 0, 0,
	0, 654, 0, 731, 777, 683, 733, 735, 638, 730,
	0, 645, 652, 793, 772, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 706, 715, 747, 699, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 259, 280, 210, 327, 742, 776, 336,
	690, 797, 345, 350, 0, 712, 656, 304, 174, 0,
	131, 0, 266, 169, 202, 700, 737, 670, 161, 744,
	726, 764, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	696, 292, 291, 691, 193, 752, 729, 642, 274, 740,
	198, 130, 316, 353, 147, 204, 321, 634, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	682, 741, 338, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 694, 660, 295, 275, 644, 647, 648, 649, 657,
	708, 709, 721, 724, 762, 761, 760, 763, 768, 791,
	790, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 129, 138, 208, 796, 273, 180,
	341, 639, 171, 0, 710, 713, 723, 745, 127, 139,
	150, 156, 170, 175, 179, 686, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 743, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 770, 778,
	2005, 319, 703, 781, 667, 689, 794, 692, 695, 736,
	650, 716, 248, 687, 651, 0, 671, 640, 680, 641,
	668, 705, 173, 666, 757, 719, 780, 206, 732, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 779, 711,
	0, 788, 209, 0, 728, 789, 307, 232, 0, 0,
	707, 765, 714, 753, 702, 738, 659, 727, 783, 688,
	734, 784, 79, 0, 958, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 731, 777, 683,
	733, 735, 638, 730, 0, 645, 652, 793, 772, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 706,
	715, 747, 699, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 259, 280, 210,
	327, 742, 776, 336, 690, 797, 345, 350, 0, 712,
	656, 304, 174, 0, 131, 0, 266, 169, 202, 700,
	737, 670, 161, 744, 726, 764, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 696, 292, 291, 691, 193, 752,
	729, 642, 274, 740, 198, 130, 316, 353, 147, 204,
	321, 634, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 682, 741, 338, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 694, 660, 295, 275, 644,
	647, 648, 649, 657, 708, 709, 721, 724, 762, 761,
	760, 763, 768, 791, 790, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 129, 138,
	208, 2006, 273, 180, 341, 639, 171, 0, 710, 713,
	723, 745, 127, 139, 150, 156, 170, 175, 179, 686,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 743, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 770, 778, 755, 319, 703, 781, 667, 689,
	794, 692, 695, 736, 650, 716, 248, 687, 651, 0,
	671, 640, 680, 641, 668, 705, 173, 666, 757, 719,
	780, 206, 732, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 779, 711, 0, 788, 209, 0, 728, 789,
	307, 232, 0, 0, 707, 765, 714, 753, 702, 738,
	659, 727, 783, 688, 734, 784, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 731, 777, 683, 733, 735, 638, 730, 0, 645,
	652, 793, 772, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 706, 715, 747, 699, 0, 0, 0,
	0, 0, 0, 2302, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 259, 280, 210, 327, 742, 776, 336, 690, 797,
	345, 350, 0, 712, 656, 304, 174, 0, 131, 0,
	266, 169, 202, 700, 737, 670, 161, 744, 726, 764,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 696, 292,
	291, 691, 193, 752, 729, 642, 274, 740, 198, 130,
	316, 353, 147, 204, 321, 634, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 682, 741,
	338, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 694,
	660, 295, 275, 644, 647, 648, 649, 657, 708, 709,
	721, 724, 762, 761, 760, 763, 768, 791, 790, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 129, 138, 208, 796, 273, 180, 341, 639,
	171, 0, 710, 713, 723, 745, 127, 139, 150, 156,
	170, 175, 179, 686, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 743,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 770, 778, 755, 319,
	703, 781, 667, 689, 794, 692, 695, 736, 650, 716,
	248, 687, 651, 0, 671, 640, 680, 641, 668, 705,
	173, 666, 757, 719, 780, 206, 732, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 779, 711, 0, 788,
	209, 0, 728, 789, 307, 232, 0, 0, 707, 765,
	714, 753, 702, 738, 659, 727, 783, 688, 734, 784,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 731, 777, 683, 733, 735,
	638, 730, 0, 645, 652, 793, 772, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 706, 715, 747,
	699, 0, 0, 0, 0, 0, 0, 1942, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 259, 280, 210, 327, 742,
	776, 336, 690, 797, 345, 350, 0, 712, 656, 304,
	174, 0, 131, 0, 266, 169, 202, 700, 737, 670,
	161, 744, 726, 764, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 696, 292, 291, 691, 193, 752, 729, 642,
	274, 740, 198, 130, 316, 353, 147, 204, 321, 634,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 682, 741, 338, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 694, 660, 295, 275, 644, 647, 648,
	649, 657, 708, 709, 721, 724, 762, 761, 760, 763,
	768, 791, 790, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 129, 138, 208, 796,
	273, 180, 341, 639, 171, 0, 710, 713, 723, 745,
	127, 139, 150, 156, 170, 175, 179, 686, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 743, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	770, 778, 755, 319, 703, 781, 667, 689, 794, 692,
	695, 736, 650, 716, 248, 687, 651, 0, 671, 640,
	680, 641, 668, 705, 173, 666, 757, 719, 780, 206,
	732, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	779, 711, 0, 788, 209, 0, 728, 789, 307, 232,
	0, 0, 707, 765, 714, 753, 702, 738, 659, 727,
	783, 688, 734, 784, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 731,
	777, 683, 733, 735, 638, 730, 0, 645, 652, 793,
	772, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 706, 715, 747, 699, 0, 0, 0, 0, 0,
	0, 1932, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 701, 197,
	348, 775, 698, 697, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 259,
	280, 210, 327, 742, 776, 336, 690, 797, 345, 350,
	0, 712, 656, 304, 174, 0, 131, 0, 266, 169,
	202, 700, 737, 670, 161, 744, 726, 764, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 696, 292, 291, 691,
	193, 752, 729, 642, 274, 740, 198, 130, 316, 353,
	147, 204, 321, 634, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 682, 741, 338, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 694, 660, 295,
	275, 644, 647, 648, 649, 657, 708, 709, 721, 724,
	762, 761, 760, 763, 768, 791, 790, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	129, 138, 208, 796, 273, 180, 341, 639, 171, 0,
	710, 713, 723, 745, 127, 139, 150, 156, 170, 175,
	179, 686, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 743, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 770, 778, 755, 319, 703, 781,
	667, 689, 794, 692, 695, 736, 650, 716, 248, 687,
	651, 0, 671, 640, 680, 641, 668, 705, 173, 666,
	757, 719, 780, 206, 732, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 779, 711, 0, 788, 209, 0,
	728, 789, 307, 232, 0, 0, 707, 765, 714, 753,
	702, 738, 659, 727, 783, 688, 734, 784, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 731, 777, 683, 733, 735, 638, 730,
	0, 645, 652, 793, 772, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 706, 715, 747, 699, 0,
	0, 0, 0, 0, 0, 1486, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 259, 280, 210, 327, 742, 776, 336,
	690, 797, 345, 350, 0, 712, 656, 304, 174, 0,
	131, 0, 266, 169, 202, 700, 737, 670, 161, 744,
	726, 764, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	696, 292, 291, 691, 193, 752, 729, 642, 274, 740,
	198, 130, 316, 353, 147, 204, 321, 634, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	682, 741, 338, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 694, 660, 295, 275, 644, 647, 648, 649, 657,
	708, 709, 721, 724, 762, 761, 760, 763, 768, 791,
	790, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 129, 138, 208, 796, 273, 180,
	341, 639, 171, 0, 710, 713, 723, 745, 127, 139,
	150, 156, 170, 175, 179, 686, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 743, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 770, 778,
	755, 319, 703, 781, 667, 689, 794, 692, 695, 736,
	650, 716, 248, 687, 651, 0, 671, 640, 680, 641,
	668, 705, 173, 666, 757, 719, 780, 206, 732, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 779, 711,
	0, 788, 209, 0, 728, 789, 307, 232, 0, 0,
	707, 765, 714, 753, 702, 738, 659, 727, 783, 688,
	734, 784, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 731, 777, 683,
	733, 735, 638, 730, 0, 645, 652, 793, 772, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 706,
	715, 747, 699, 0, 0, 0, 0, 0, 0, 1346,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 259, 280, 210,
	327, 742, 776, 336, 690, 797, 345, 350, 0, 712,
	656, 304, 174, 0, 131, 0, 266, 169, 202, 700,
	737, 670, 161, 744, 726, 764, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 696, 292, 291, 691, 193, 752,
	729, 642, 274, 740, 198, 130, 316, 353, 147, 204,
	321, 634, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 682, 741, 338, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 694, 660, 295, 275, 644,
	647, 648, 649, 657, 708, 709, 721, 724, 762, 761,
	760, 763, 768, 791, 790, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 129, 138,
	208, 796, 273, 180, 341, 639, 171, 0, 710, 713,
	723, 745, 127, 139, 150, 156, 170, 175, 179, 686,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 743, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 770, 778, 755, 319, 703, 781, 667, 689,
	794, 692, 695, 736, 650, 716, 248, 687, 651, 0,
	671, 640, 680, 641, 668, 705, 173, 666, 757, 719,
	780, 206, 732, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 779, 711, 0, 788, 209, 0, 728, 789,
	307, 232, 0, 0, 707, 765, 714, 753, 702, 738,
	659, 727, 783, 688, 734, 784, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 731, 777, 683, 733, 735, 638, 730, 0, 645,
	652, 793, 772, 674, 675, 676, 0, 0, 0, 0,
	0, 0, 0, 706, 715, 747, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 725, 0, 0,
	0, 653, 646, 0, 0, 704, 0, 0, 0, 658,
	637, 673, 749, 0, 635, 185, 233, 142, 754, 771,
	701, 197, 348, 775, 698, 697, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 746, 289, 685,
	636, 758, 669, 681, 164, 677, 281, 252, 337, 0,
	722, 259, 280, 210, 327, 742, 776, 336, 690, 797,
	345, 350, 0, 712, 656, 304, 174, 0, 131, 0,
	266, 169, 202, 700, 737, 670, 161, 744, 726, 764,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 696, 292,
	291, 691, 193, 752, 729, 642, 274, 740, 198, 130,
	316, 353, 147, 204, 321, 634, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 682, 741,
	338, 751, 272, 294, 323, 149, 311, 678, 679, 684,
	748, 283, 759, 769, 782, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 643, 0, 309, 340, 355,
	151, 665, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 663, 664, 661, 0, 662, 717, 718,
	785, 786, 787, 750, 655, 0, 766, 767, 0, 0,
	0, 0, 0, 756, 773, 774, 739, 795, 693, 694,
	660, 295, 275, 644, 647, 648, 649, 657, 708, 709,
	721, 724, 762, 761, 760, 763, 768, 791, 790, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 129, 138, 208, 796, 273, 180, 341, 639,
	171, 0, 710, 713, 723, 745, 127, 139, 150, 156,
	170, 175, 179, 686, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 743,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 770, 778, 755, 319,
	703, 781, 667, 689, 794, 692, 695, 736, 650, 716,
	248, 687, 651, 0, 671, 640, 680, 641, 668, 705,
	173, 666, 757, 719, 780, 206, 732, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 779, 711, 0, 788,
	209, 0, 728, 789, 307, 232, 0, 0, 707, 765,
	714, 753, 702, 738, 659, 727, 783, 688, 734, 784,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 731, 777, 683, 733, 735,
	638, 730, 0, 645, 652, 793, 772, 674, 675, 676,
	0, 0, 0, 0, 0, 0, 0, 706, 715, 747,
	699, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 725, 0, 0, 0, 653, 646, 0, 0, 704,
	0, 0, 0, 658, 637, 673, 749, 0, 635, 185,
	233, 142, 754, 771, 701, 197, 348, 775, 698, 697,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 746, 289, 685, 636, 758, 669, 681, 164, 677,
	281, 252, 337, 0, 722, 259, 280, 210, 327, 742,
	776, 336, 690, 797, 345, 350, 0, 712, 656, 304,
	174, 0, 131, 0, 266, 169, 202, 700, 737, 670,
	161, 744, 726, 764, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 696, 292, 291, 691, 193, 752, 729, 642,
	274, 740, 198, 130, 316, 353, 147, 204, 321, 634,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 682, 741, 338, 751, 272, 294, 323, 149,
	311, 678, 679, 684, 748, 283, 759, 769, 782, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 643,
	0, 309, 340, 355, 151, 665, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 663, 664, 661,
	0, 662, 717, 718, 785, 786, 787, 750, 655, 0,
	766, 767, 0, 0, 0, 0, 0, 756, 773, 774,
	739, 795, 693, 694, 660, 295, 275, 644, 647, 648,
	649, 657, 708, 709, 721, 724, 762, 761, 760, 763,
	768, 791, 790, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 129, 138, 208, 796,
	273, 180, 341, 639, 171, 0, 710, 713, 723, 745,
	127, 139, 150, 156, 170, 175, 179, 686, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 743, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	770, 778, 755, 319, 703, 781, 667, 689, 794, 692,
	695, 736, 650, 716, 248, 687, 651, 0, 671, 640,
	680, 641, 668, 705, 173, 666, 757, 719, 780, 206,
	732, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	1518, 1522, 0, 788, 209, 0, 728, 789, 307, 232,
	0, 0, 707, 765, 714, 753, 702, 738, 659, 727,
	783, 688, 734, 784, 0, 0, 0, 0, 632, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 731,
	777, 683, 733, 735, 638, 730, 0, 645, 652, 793,
	772, 674, 675, 676, 0, 0, 0, 0, 0, 0,
	0, 706, 715, 747, 699, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 725, 0, 0, 0, 653,
	646, 0, 0, 704, 0, 0, 0, 658, 637, 673,
	749, 0, 635, 185, 233, 142, 754, 771, 1521, 197,
	348, 775, 698, 697, 1516, 0, 1517, 187, 207, 631,
	126, 140, 1514, 1520, 244, 746, 289, 685, 636, 758,
	669, 681, 164, 677, 281, 252, 337, 0, 722, 259,
	280, 210, 327, 742, 776, 336, 690, 797, 345, 350,
	0, 712, 656, 304, 174, 0, 131, 0, 266, 169,
	202, 700, 737, 670, 161, 744, 726, 764, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 696, 292, 291, 691,
	193, 752, 729, 642, 274, 740, 198, 130, 316, 353,
	147, 204, 321, 634, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 682, 741, 338, 751,
	272, 294, 323, 149, 311, 678, 679, 684, 748, 283,
	759, 769, 782, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 643, 0, 309, 340, 355, 151, 665,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 663, 664, 661, 0, 662, 717, 718, 785, 786,
	787, 750, 655, 0, 766, 767, 0, 0, 0, 0,
	0, 756, 773, 774, 739, 795, 693, 694, 660, 295,
	275, 644, 647, 648, 649, 657, 708, 709, 721, 724,
	762, 761, 760, 763, 768, 791, 790, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	129, 138, 208, 796, 273, 180, 341, 639, 171, 0,
	710, 713, 723, 745, 127, 139, 150, 156, 170, 175,
	179, 686, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 743, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 770, 778, 755, 319, 703, 781,
	667, 689, 794, 692, 695, 736, 650, 716, 248, 687,
	651, 0, 671, 640, 680, 641, 668, 705, 173, 666,
	757, 719, 780, 206, 732, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 779, 711, 0, 788, 209, 0,
	728, 789, 307, 232, 0, 0, 707, 765, 714, 753,
	702, 738, 659, 727, 783, 688, 734, 784, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 731, 777, 683, 733, 735, 638, 730,
	0, 645, 652, 793, 772, 674, 675, 676, 0, 0,
	0, 0, 0, 0, 0, 706, 715, 747, 699, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 725,
	0, 0, 0, 653, 646, 0, 0, 704, 0, 0,
	0, 658, 637, 673, 749, 0, 635, 185, 233, 142,
	754, 771, 701, 197, 348, 775, 698, 697, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 746,
	289, 685, 636, 758, 669, 681, 164, 677, 281, 252,
	337, 0, 722, 259, 280, 210, 327, 742, 776, 336,
	690, 797, 345, 350, 0, 712, 656, 304, 174, 0,
	131, 0, 266, 169, 202, 700, 737, 670, 161, 744,
	726, 764, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	696, 292, 291, 691, 193, 752, 729, 642, 274, 740,
	198, 130, 316, 353, 147, 204, 321, 634, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	682, 741, 338, 751, 272, 294, 323, 149, 311, 678,
	679, 684, 748, 283, 759, 769, 782, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 643, 0, 309,
	340, 355, 151, 665, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 663, 664, 661, 0, 662,
	717, 718, 785, 786, 787, 750, 655, 0, 766, 767,
	0, 0, 0, 0, 0, 756, 773, 774, 739, 795,
	693, 694, 660, 295, 275, 644, 647, 648, 649, 657,
	708, 709, 721, 724, 762, 761, 760, 763, 768, 791,
	790, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 129, 138, 208, 796, 273, 180,
	341, 639, 171, 0, 710, 713, 723, 745, 127, 139,
	150, 156, 170, 175, 179, 686, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 743, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 770, 778,
	755, 319, 703, 781, 667, 689, 794, 692, 695, 736,
	650, 716, 248, 687, 651, 0, 671, 640, 680, 641,
	668, 705, 173, 666, 757, 719, 780, 206, 732, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 779, 711,
	0, 788, 209, 0, 728, 789, 307, 232, 0, 0,
	707, 765, 714, 753, 702, 738, 659, 727, 783, 688,
	734, 784, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 731, 777, 683,
	733, 735, 638, 730, 0, 645, 652, 793, 772, 674,
	675, 676, 0, 0, 0, 0, 0, 0, 0, 706,
	715, 747, 699, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 725, 0, 0, 0, 653, 646, 0,
	0, 704, 0, 0, 0, 658, 637, 673, 749, 0,
	635, 185, 233, 142, 754, 771, 701, 197, 348, 775,
	698, 697, 269, 0, 313, 187, 207, 631, 126, 140,
	627, 186, 244, 746, 289, 685, 636, 758, 669, 681,
	164, 677, 281, 252, 337, 0, 722, 259, 280, 210,
	327, 742, 776, 336, 690, 797, 345, 350, 0, 712,
	656, 304, 174, 0, 131, 0, 266, 169, 202, 700,
	737, 670, 161, 744, 726, 764, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 696, 292, 291, 691, 193, 752,
	729, 642, 274, 740, 198, 130, 316, 353, 147, 204,
	321, 634, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 682, 741, 338, 751, 272, 294,
	323, 149, 311, 678, 679, 684, 748, 283, 759, 769,
	782, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 643, 0, 309, 340, 355, 151, 665, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 663,
	664, 661, 0, 662, 717, 718, 785, 786, 787, 750,
	655, 0, 766, 767, 0, 0, 0, 0, 0, 756,
	773, 774, 739, 795, 693, 694, 660, 295, 275, 644,
	647, 648, 649, 657, 708, 709, 721, 724, 762, 761,
	760, 763, 768, 791, 790, 792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 129, 138,
	208, 796, 273, 180, 341, 639, 171, 0, 710, 713,
	723, 745, 127, 139, 150, 156, 170, 175, 179, 686,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 743, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 770, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 173, 499, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 577, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	0, 0, 1496, 0, 79, 0, 0, 0, 500, 524,
	523, 526, 527, 528, 529, 0, 0, 0, 525, 530,
	559, 560, 1497, 0, 0, 497, 515, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 0, 0, 0,
	575, 0, 587, 588, 0, 0, 0, 0, 0, 295,
	275, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 35, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 173, 499, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 577, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	500, 524, 523, 526, 527, 528, 529, 0, 0, 0,
	525, 530, 559, 560, 0, 0, 0, 497, 515, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 578, 590, 584, 586, 585, 582, 583,
	581, 580, 579, 592, 568, 569, 570, 571, 572, 0,
	0, 0, 575, 0, 587, 588, 0, 0, 0, 0,
	0, 295, 275, 531, 532, 533, 534, 535, 539, 540,
	544, 545, 553, 552, 551, 554, 555, 557, 556, 558,
	536, 537, 538, 541, 542, 543, 546, 547, 550, 548,
	549, 573, 129, 138, 208, 77, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 173, 499, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 577, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	0, 525, 530, 559, 560, 0, 0, 0, 497, 515,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 493, 0, 0, 0, 591, 0,
	514, 0, 0, 509, 510, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 567,
	0, 0, 197, 348, 0, 0, 589, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	574, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	566, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 568, 569, 570, 571, 572,
	0, 0, 0, 575, 0, 587, 588, 0, 0, 0,
	0, 0, 295, 275, 531, 532, 533, 534, 535, 539,
	540, 544, 545, 553, 552, 551, 554, 555, 557, 556,
	558, 536, 537, 538, 541, 542, 543, 546, 547, 550,
	548, 549, 573, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 173, 499,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 577, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 564, 565,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	958, 0, 500, 524, 523, 526, 527, 528, 529, 0,
	0, 0, 525, 530, 559, 560, 0, 0, 0, 497,
	515, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 513, 0, 0, 0, 0, 591,
	0, 514, 0, 0, 509, 510, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	567, 0, 0, 197, 348, 0, 0, 589, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 574, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 566, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 578, 590, 584, 586, 585,
	582, 583, 581, 580, 579, 592, 568, 569, 570, 571,
	572, 0, 0, 0, 575, 0, 587, 588, 0, 0,
	0, 0, 0, 295, 275, 531, 532, 533, 534, 535,
	539, 540, 544, 545, 553, 552, 551, 554, 555, 557,
	556, 558, 536, 537, 538, 541, 542, 543, 546, 547,
	550, 548, 549, 573, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 173,
	499, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 577, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 500, 524, 523, 526, 527, 528, 529,
	0, 0, 0, 525, 530, 559, 560, 0, 0, 0,
	497, 515, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 513, 1384, 0, 0, 0,
	591, 0, 514, 0, 0, 509, 510, 511, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 567, 0, 0, 197, 348, 0, 0, 589, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 574, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 566, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 568, 569, 570,
	571, 572, 0, 0, 0, 575, 0, 587, 588, 0,
	0, 0, 0, 0, 295, 275, 531, 532, 533, 534,
	535, 539, 540, 544, 545, 553, 552, 551, 554, 555,
	557, 556, 558, 536, 537, 538, 541, 542, 543, 546,
	547, 550, 548, 549, 573, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	173, 499, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 577,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	564, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 500, 524, 1428, 526, 527, 528,
	529, 0, 0, 0, 525, 530, 559, 560, 0, 0,
	0, 497, 515, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 1384, 0, 0,
	0, 591, 0, 514, 0, 0, 509, 510, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 567, 0, 0, 197, 348, 0, 0, 589,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 574, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 566, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 578, 590, 584,
	586, 585, 582, 583, 581, 580, 579, 592, 568, 569,
	570, 571, 572, 0, 0, 0, 575, 0, 587, 588,
	0, 0, 0, 0, 0, 295, 275, 531, 532, 533,
	534, 535, 539, 540, 544, 545, 553, 552, 551, 554,
	555, 557, 556, 558, 536, 537, 538, 541, 542, 543,
	546, 547, 550, 548, 549, 573, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 173, 499, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	577, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 564, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 500, 524, 1425, 526, 527,
	528, 529, 0, 0, 0, 525, 530, 559, 560, 0,
	0, 0, 497, 515, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 513, 1384, 0,
	0, 0, 591, 0, 514, 0, 0, 509, 510, 511,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 567, 0, 0, 197, 348, 0, 0,
	589, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 574, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 566, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 568,
	569, 570, 571, 572, 0, 0, 0, 575, 0, 587,
	588, 0, 0, 0, 0, 0, 295, 275, 531, 532,
	533, 534, 535, 539, 540, 544, 545, 553, 552, 551,
	554, 555, 557, 556, 558, 536, 537, 538, 541, 542,
	543, 546, 547, 550, 548, 549, 573, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 173, 499, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 577, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 564, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 1271, 0, 500, 524, 523, 526,
	527, 528, 529, 0, 0, 0, 525, 530, 559, 560,
	0, 0, 0, 497, 515, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 0, 591, 0, 514, 0, 0, 509, 510,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 567, 0, 0, 197, 348, 0,
	0, 589, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 574, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 566, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 578,
	590, 584, 586, 585, 582, 583, 581, 580, 579, 592,
	568, 569, 570, 571, 572, 0, 0, 0, 575, 0,
	587, 588, 0, 0, 0, 0, 0, 295, 275, 531,
	532, 533, 534, 535, 539, 540, 544, 545, 553, 552,
	551, 554, 555, 557, 556, 558, 536, 537, 538, 541,
	542, 543, 546, 547, 550, 548, 549, 573, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 173, 499, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 577, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 564, 565, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 500, 524, 523,
	526, 527, 528, 529, 0, 0, 0, 525, 530, 559,
	560, 0, 0, 0, 497, 515, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 0, 591, 0, 514, 0, 0, 509,
	510, 511, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 567, 0, 0, 197, 348,
	0, 0, 589, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 574, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 566, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 568, 569, 570, 571, 572, 0, 0, 0, 575,
	0, 587, 588, 0, 0, 0, 0, 0, 295, 275,
	531, 532, 533, 534, 535, 539, 540, 544, 545, 553,
	552, 551, 554, 555, 557, 556, 558, 536, 537, 538,
	541, 542, 543, 546, 547, 550, 548, 549, 573, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 577, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 500, 524,
	523, 526, 527, 528, 529, 0, 0, 0, 525, 530,
	559, 560, 0, 0, 0, 0, 515, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 591, 0, 514, 0, 0,
	509, 510, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 567, 0, 0, 197,
	348, 0, 0, 589, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 574, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 566, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 578, 590, 584, 586, 585, 582, 583, 581, 580,
	579, 592, 568, 569, 570, 571, 572, 1431, 1432, 1433,
	575, 0, 587, 588, 0, 0, 0, 0, 0, 295,
	275, 531, 532, 533, 534, 535, 539, 540, 544, 545,
	553, 552, 551, 554, 555, 557, 556, 558, 536, 537,
	538, 541, 542, 543, 546, 547, 550, 548, 549, 573,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 577, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 564, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 500,
	524, 523, 526, 527, 528, 529, 0, 0, 0, 525,
	530, 559, 560, 0, 0, 0, 0, 515, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 513, 0, 0, 0, 0, 591, 0, 514, 0,
	0, 509, 510, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 567, 0, 0,
	197, 348, 0, 0, 589, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 574, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 566, 2706,
	259, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 568, 569, 570, 571, 572, 0, 0,
	0, 575, 0, 587, 588, 0, 0, 0, 0, 0,
	295, 275, 531, 532, 533, 534, 535, 539, 540, 544,
	545, 553, 552, 551, 554, 555, 557, 556, 558, 536,
	537, 538, 541, 542, 543, 546, 547, 550, 548, 549,
	573, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 577, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 564, 565, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 958, 0,
	500, 524, 523, 526, 527, 528, 529, 0, 0, 0,
	525, 530, 559, 560, 0, 0, 0, 0, 515, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 591, 0, 514,
	0, 0, 509, 510, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 567, 0,
	0, 197, 348, 0, 0, 589, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 574,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 566,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 578, 590, 584, 586, 585, 582, 583,
	581, 580, 579, 592, 568, 569, 570, 571, 572, 0,
	0, 0, 575, 0, 587, 588, 0, 0, 0, 0,
	0, 295, 275, 531, 532, 533, 534, 535, 539, 540,
	544, 545, 553, 552, 551, 554, 555, 557, 556, 558,
	536, 537, 538, 541, 542, 543, 546, 547, 550, 548,
	549, 573, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 0, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 577, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 564, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 500, 524, 523, 526, 527, 528, 529, 0, 0,
	0, 525, 530, 559, 560, 0, 0, 0, 0, 515,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 0, 0, 0, 0, 591, 0,
	514, 0, 0, 509, 510, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 567,
	0, 0, 197, 348, 0, 0, 589, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	574, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	566, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 568, 569, 570, 571, 572,
	0, 0, 0, 575, 0, 587, 588, 0, 0, 0,
	0, 0, 295, 275, 531, 532, 533, 534, 535, 539,
	540, 544, 545, 553, 552, 551, 554, 555, 557, 556,
	558, 536, 537, 538, 541, 542, 543, 546, 547, 550,
	548, 549, 573, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 425, 319, 419,
	430, 413, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 467, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 420, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 411, 414, 0, 0, 0, 185, 233,
	142, 0, 0, 418, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	422, 289, 0, 0, 426, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 429,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 470, 294, 323, 149, 311,
	415, 416, 417, 423, 424, 427, 428, 431, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 275, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 421, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 425,
	319, 419, 430, 413, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 405, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 420, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 434, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 411, 414, 0, 0, 0,
	185, 233, 142, 0, 0, 418, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 422, 289, 0, 0, 426, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 429, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 408, 294, 323,
	149, 311, 415, 416, 417, 423, 424, 427, 428, 431,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 421, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 1474, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1476, 1478,
	0, 0, 0, 0, 0, 0, 124, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	1477, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 275, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 1474, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 463, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1476,
	1478, 0, 0, 0, 0, 0, 0, 124, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 1477, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 1472, 280,
	210, 327, 0, 0, 336, 0, 457, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 275,
	437, 438, 439, 440, 441, 445, 446, 450, 451, 460,
	459, 458, 461, 462, 465, 464, 466, 442, 443, 444,
	447, 448, 449, 452, 453, 456, 454, 455, 0, 129,
	138, 208, 0, 273, 180, 341, 0, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 980,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	0, 0, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 463, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 981, 0,
	984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 977, 976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 457, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 144, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	215, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 238, 145,
	192, 306, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	275, 437, 438, 439, 440, 441, 445, 446, 450, 451,
	460, 459, 458, 461, 462, 465, 464, 466, 442, 443,
	444, 447, 448, 449, 452, 453, 456, 454, 455, 0,
	129, 138, 208, 0, 273, 180, 341, 0, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 261, 262, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 2636, 0,
	0, 0, 0, 0, 0, 173, 2634, 0, 0, 0,
	206, 0, 0, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 463, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 457, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 2635, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 275, 437, 438, 439, 440, 441, 445, 446, 450,
	451, 460, 459, 458, 461, 462, 465, 464, 466, 442,
	443, 444, 447, 448, 449, 452, 453, 456, 454, 455,
	0, 129, 138, 208, 0, 273, 180, 341, 0, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 0, 0, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 463,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 457,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 275, 437, 438, 439, 440, 441, 445, 446,
	450, 451, 460, 459, 458, 461, 462, 465, 464, 466,
	442, 443, 444, 447, 448, 449, 452, 453, 456, 454,
	455, 0, 129, 138, 208, 0, 273, 180, 341, 0,
	171, 0, 0, 0, 0, 478, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 1769, 0, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	463, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	457, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 275, 437, 438, 439, 440, 441, 445,
	446, 450, 451, 460, 459, 458, 461, 462, 465, 464,
	466, 442, 443, 444, 447, 448, 449, 452, 453, 456,
	454, 455, 0, 129, 138, 208, 0, 273, 180, 341,
	0, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 0, 0, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 463, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 434, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 0, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 457, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 275, 437, 438, 439, 440, 441,
	445, 446, 450, 451, 460, 459, 458, 461, 462, 465,
	464, 466, 442, 443, 444, 447, 448, 449, 452, 453,
	456, 454, 455, 0, 129, 138, 208, 0, 273, 180,
	341, 0, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 0, 0, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 463, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 434, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 457, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 295, 275, 437, 438, 439, 440,
	441, 445, 446, 450, 451, 460, 459, 458, 461, 462,
	465, 464, 466, 442, 443, 444, 447, 448, 449, 452,
	453, 456, 454, 455, 0, 129, 138, 208, 0, 273,
	180, 341, 0, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 0, 0, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 463, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 457, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 275, 437, 438, 439,
	440, 441, 445, 446, 450, 451, 460, 459, 458, 461,
	462, 465, 464, 466, 442, 443, 444, 447, 448, 449,
	452, 453, 456, 454, 455, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 463, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 981, 0, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 457, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 275, 437, 438,
	439, 440, 441, 445, 446, 450, 451, 460, 459, 458,
	461, 462, 465, 464, 466, 442, 443, 444, 447, 448,
	449, 452, 453, 456, 454, 455, 0, 129, 138, 208,
	0, 273, 180, 341, 0, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 0, 0,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 463, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 457, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 275, 437,
	438, 439, 440, 441, 445, 446, 450, 451, 460, 459,
	458, 461, 462, 465, 464, 466, 442, 443, 444, 447,
	448, 449, 452, 453, 456, 454, 455, 0, 129, 138,
	208, 0, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 0,
	0, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 993, 1003, 1004, 996, 997,
	998, 999, 1000, 1001, 1002, 995, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 335, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	35, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 295, 275,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 1469, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 79, 273, 180, 341, 124, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 335, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 144, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 215, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 238, 145, 192, 306,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 1130, 0, 0, 0, 206, 295, 275, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 138,
	208, 77, 273, 180, 341, 632, 171, 1129, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 261, 262, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 295, 275, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	79, 273, 180, 341, 124, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 206, 295, 275, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	79, 273, 180, 341, 632, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 0, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 206, 0, 0, 163,
	214, 212, 0, 0, 0, 255, 318, 0, 0, 0,
	0, 209, 0, 0, 0, 307, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 233, 142, 0, 0, 0, 197, 348, 0, 0,
	0, 269, 0, 313, 187, 207, 146, 126, 140, 157,
	186, 244, 0, 289, 0, 0, 0, 0, 0, 164,
	0, 281, 252, 337, 0, 0, 259, 280, 210, 327,
	0, 0, 336, 0, 0, 345, 350, 0, 0, 0,
	304, 174, 0, 131, 0, 266, 169, 202, 0, 0,
	0, 161, 0, 0, 0, 303, 325, 148, 320, 231,
	237, 158, 160, 159, 141, 298, 324, 153, 162, 308,
	285, 314, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 292, 291, 0, 193, 0, 0,
	0, 274, 0, 198, 130, 316, 353, 147, 204, 321,
	0, 181, 243, 166, 253, 254, 178, 128, 271, 225,
	226, 224, 227, 0, 0, 338, 0, 272, 294, 323,
	149, 311, 0, 0, 0, 0, 283, 0, 0, 0,
	132, 317, 335, 154, 293, 296, 351, 279, 135, 333,
	312, 229, 199, 200, 133, 0, 134, 277, 172, 184,
	167, 247, 0, 183, 268, 330, 331, 165, 354, 143,
	344, 137, 144, 343, 240, 0, 239, 346, 326, 334,
	230, 218, 0, 136, 332, 228, 217, 205, 177, 189,
	264, 213, 265, 190, 235, 234, 236, 215, 219, 0,
	0, 0, 309, 340, 355, 151, 0, 297, 322, 0,
	0, 152, 182, 176, 263, 238, 145, 192, 306, 203,
	211, 276, 352, 251, 282, 155, 339, 305, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	173, 0, 0, 0, 0, 206, 295, 275, 163, 214,
	212, 0, 0, 0, 255, 318, 0, 0, 0, 0,
	209, 0, 0, 0, 307, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 138, 208,
	0, 273, 180, 341, 124, 171, 0, 0, 0, 0,
	0, 127, 139, 150, 156, 170, 175, 179, 0, 188,
	191, 194, 195, 196, 201, 216, 220, 221, 222, 223,
	241, 242, 245, 246, 249, 250, 256, 257, 258, 260,
	261, 262, 267, 270, 0, 278, 284, 286, 287, 288,
	290, 299, 300, 301, 302, 310, 315, 328, 329, 347,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	233, 142, 0, 0, 0, 197, 348, 0, 0, 0,
	269, 0, 313, 187, 207, 146, 126, 140, 157, 186,
	244, 0, 289, 0, 0, 0, 0, 0, 164, 0,
	281, 252, 337, 0, 0, 259, 280, 210, 327, 0,
	0, 336, 0, 0, 345, 350, 0, 0, 0, 304,
	174, 0, 131, 0, 266, 169, 202, 0, 0, 0,
	161, 0, 0, 0, 303, 325, 148, 320, 231, 237,
	158, 160, 159, 141, 298, 324, 153, 162, 308, 285,
	314, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 292, 291, 0, 193, 0, 0, 0,
	274, 0, 198, 130, 316, 353, 147, 204, 321, 0,
	181, 243, 166, 253, 254, 178, 128, 271, 225, 226,
	224, 227, 0, 0, 338, 0, 272, 294, 323, 149,
	311, 0, 0, 0, 0, 283, 0, 0, 0, 132,
	317, 335, 154, 293, 296, 351, 279, 135, 333, 312,
	229, 199, 200, 133, 0, 134, 277, 172, 184, 167,
	247, 0, 183, 268, 330, 331, 165, 354, 143, 344,
	137, 144, 343, 240, 0, 239, 346, 326, 334, 230,
	218, 0, 136, 332, 228, 217, 205, 177, 189, 264,
	213, 265, 190, 235, 234, 236, 215, 219, 0, 0,
	0, 309, 340, 355, 151, 0, 297, 322, 0, 0,
	152, 182, 176, 263, 238, 145, 192, 306, 203, 211,
	276, 352, 251, 282, 155, 339, 305, 0, 319, 0,
	0, 0, 595, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 0, 206, 295, 275, 163, 214, 212,
	0, 0, 0, 255, 318, 0, 0, 0, 0, 209,
	0, 0, 0, 307, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 138, 208, 0,
	273, 180, 341, 124, 171, 0, 0, 0, 0, 0,
	127, 139, 150, 156, 170, 175, 179, 0, 188, 191,
	194, 195, 196, 201, 216, 220, 221, 222, 223, 241,
	242, 245, 246, 249, 250, 256, 257, 258, 260, 261,
	262, 267, 270, 0, 278, 284, 286, 287, 288, 290,
	299, 300, 301, 302, 310, 315, 328, 329, 347, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 233,
	142, 0, 0, 0, 197, 348, 0, 0, 0, 269,
	0, 313, 187, 207, 146, 126, 140, 157, 186, 244,
	0, 289, 0, 0, 0, 0, 0, 164, 0, 281,
	252, 337, 0, 0, 259, 280, 210, 327, 0, 0,
	336, 0, 0, 345, 350, 0, 0, 0, 304, 174,
	0, 131, 0, 266, 169, 202, 0, 0, 0, 161,
	0, 0, 0, 303, 325, 148, 320, 231, 237, 158,
	160, 159, 141, 298, 324, 153, 162, 308, 285, 314,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 292, 291, 0, 193, 0, 0, 0, 274,
	0, 198, 130, 316, 353, 147, 204, 321, 0, 181,
	243, 166, 253, 254, 178, 128, 271, 225, 226, 224,
	227, 0, 0, 338, 0, 272, 294, 323, 149, 311,
	0, 0, 0, 0, 283, 0, 0, 0, 132, 317,
	335, 154, 293, 296, 351, 279, 135, 333, 312, 229,
	199, 200, 133, 0, 134, 277, 172, 184, 167, 247,
	0, 183, 268, 330, 331, 165, 354, 143, 344, 137,
	144, 343, 240, 0, 239, 346, 326, 334, 230, 218,
	0, 136, 332, 228, 217, 205, 177, 189, 264, 213,
	265, 190, 235, 234, 236, 215, 219, 0, 0, 0,
	309, 340, 355, 151, 0, 297, 322, 0, 0, 152,
	182, 176, 263, 238, 145, 192, 306, 203, 211, 276,
	352, 251, 282, 155, 339, 305, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 206, 295, 275, 163, 214, 212, 0,
	0, 0, 255, 318, 0, 0, 0, 0, 209, 0,
	0, 0, 307, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 138, 208, 0, 273,
	180, 341, 124, 171, 0, 0, 0, 0, 0, 127,
	139, 150, 156, 170, 175, 179, 0, 188, 191, 194,
	195, 196, 201, 216, 220, 221, 222, 223, 241, 242,
	245, 246, 249, 250, 256, 257, 258, 260, 261, 262,
	267, 270, 0, 278, 284, 286, 287, 288, 290, 299,
	300, 301, 302, 310, 315, 328, 329, 347, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 233, 142,
	0, 121, 0, 197, 348, 0, 0, 0, 269, 0,
	313, 187, 207, 146, 126, 140, 157, 186, 244, 0,
	289, 0, 0, 0, 0, 0, 164, 0, 281, 252,
	337, 0, 0, 259, 280, 210, 327, 0, 0, 336,
	0, 0, 345, 350, 0, 0, 0, 304, 174, 0,
	131, 0, 266, 169, 202, 0, 0, 0, 161, 0,
	0, 0, 303, 325, 148, 320, 231, 237, 158, 160,
	159, 141, 298, 324, 153, 162, 308, 285, 314, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 292, 291, 0, 193, 0, 0, 0, 274, 0,
	198, 130, 316, 353, 147, 204, 321, 0, 181, 243,
	166, 253, 254, 178, 128, 271, 225, 226, 224, 227,
	0, 0, 338, 0, 272, 294, 323, 149, 311, 0,
	0, 0, 0, 283, 0, 0, 0, 132, 317, 335,
	154, 293, 296, 351, 279, 135, 333, 312, 229, 199,
	200, 133, 0, 134, 277, 172, 184, 167, 247, 0,
	183, 268, 330, 331, 165, 354, 143, 344, 137, 144,
	343, 240, 0, 239, 346, 326, 334, 230, 218, 0,
	136, 332, 228, 217, 205, 177, 189, 264, 213, 265,
	190, 235, 234, 236, 215, 219, 0, 0, 0, 309,
	340, 355, 151, 0, 297, 322, 0, 0, 152, 182,
	176, 263, 238, 145, 192, 306, 203, 211, 276, 352,
	251, 282, 155, 339, 305, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 206, 295, 275, 163, 214, 212, 0, 0,
	0, 255, 318, 0, 0, 0, 0, 209, 0, 0,
	0, 307, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 138, 208, 0, 273, 180,
	341, 632, 171, 0, 0, 0, 0, 0, 127, 139,
	150, 156, 170, 175, 179, 0, 188, 191, 194, 195,
	196, 201, 216, 220, 221, 222, 223, 241, 242, 245,
	246, 249, 250, 256, 257, 258, 260, 261, 262, 267,
	270, 0, 278, 284, 286, 287, 288, 290, 299, 300,
	301, 302, 310, 315, 328, 329, 347, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 233, 142, 0,
	0, 0, 197, 348, 0, 0, 0, 269, 0, 313,
	187, 207, 146, 126, 140, 157, 186, 244, 0, 289,
	0, 0, 0, 0, 0, 164, 0, 281, 252, 337,
	0, 0, 259, 280, 210, 327, 0, 0, 336, 0,
	0, 345, 350, 0, 0, 0, 304, 174, 0, 131,
	0, 266, 169, 202, 0, 0, 0, 161, 0, 0,
	0, 303, 325, 148, 320, 231, 237, 158, 160, 159,
	141, 298, 324, 153, 162, 308, 285, 314, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	292, 291, 0, 193, 0, 0, 0, 274, 0, 198,
	130, 316, 353, 147, 204, 321, 0, 181, 243, 166,
	253, 254, 178, 128, 271, 225, 226, 224, 227, 0,
	0, 338, 0, 272, 294, 323, 149, 311, 0, 0,
	0, 0, 283, 0, 0, 0, 132, 317, 335, 154,
	293, 296, 351, 279, 135, 333, 312, 229, 199, 200,
	133, 0, 134, 277, 172, 184, 167, 247, 0, 183,
	268, 330, 331, 165, 354, 143, 344, 137, 144, 343,
	240, 0, 239, 346, 326, 334, 230, 218, 0, 136,
	332, 228, 217, 205, 177, 189, 264, 213, 265, 190,
	235, 234, 236, 215, 219, 0, 0, 0, 309, 340,
	355, 151, 0, 297, 322, 0, 0, 152, 182, 176,
	263, 238, 145, 192, 306, 203, 211, 276, 352, 251,
	282, 155, 339, 305, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 206, 295, 275, 163, 214, 212, 0, 0, 0,
	255, 318, 0, 0, 0, 0, 209, 0, 0, 0,
	307, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 138, 208, 0, 273, 180, 341,
	124, 171, 0, 0, 0, 0, 0, 127, 139, 150,
	156, 170, 175, 179, 0, 188, 191, 194, 195, 196,
	201, 216, 220, 221, 222, 223, 241, 242, 245, 246,
	249, 250, 256, 257, 258, 260, 261, 262, 267, 270,
	0, 278, 284, 286, 287, 288, 290, 299, 300, 301,
	302, 310, 315, 328, 329, 347, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 233, 142, 0, 0,
	0, 197, 348, 0, 0, 0, 269, 0, 313, 187,
	207, 146, 126, 140, 157, 186, 244, 0, 289, 0,
	0, 0, 0, 0, 164, 0, 281, 252, 337, 0,
	0, 259, 280, 210, 327, 0, 0, 336, 0, 0,
	345, 350, 0, 0, 0, 304, 174, 0, 131, 0,
	266, 169, 202, 0, 0, 0, 161, 0, 0, 0,
	303, 325, 148, 320, 231, 237, 158, 160, 159, 141,
	298, 324, 153, 162, 308, 285, 314, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 292,
	291, 0, 193, 0, 0, 0, 274, 0, 198, 130,
	316, 353, 147, 204, 321, 0, 181, 243, 166, 253,
	254, 178, 128, 271, 225, 226, 224, 227, 0, 0,
	338, 0, 272, 294, 323, 149, 311, 0, 0, 0,
	0, 283, 0, 0, 0, 132, 317, 335, 154, 293,
	296, 351, 279, 135, 333, 312, 229, 199, 200, 133,
	0, 134, 277, 172, 184, 167, 247, 0, 183, 268,
	330, 331, 165, 354, 143, 344, 137, 144, 343, 240,
	0, 239, 346, 326, 334, 230, 218, 0, 136, 332,
	228, 217, 205, 177, 189, 264, 213, 265, 190, 235,
	234, 236, 215, 219, 0, 0, 0, 309, 340, 355,
	151, 0, 297, 322, 0, 0, 152, 182, 176, 263,
	238, 145, 192, 306, 203, 211, 276, 352, 251, 282,
	155, 339, 305, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	206, 295, 275, 163, 214, 212, 0, 0, 0, 255,
	318, 0, 0, 0, 0, 209, 0, 0, 0, 307,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 138, 208, 0, 273, 180, 341, 500,
	171, 0, 0, 0, 0, 0, 127, 139, 150, 156,
	170, 175, 179, 0, 188, 191, 194, 195, 196, 201,
	216, 220, 221, 222, 223, 241, 242, 245, 246, 249,
	250, 256, 257, 258, 260, 261, 262, 267, 270, 0,
	278, 284, 286, 287, 288, 290, 299, 300, 301, 302,
	310, 315, 328, 329, 347, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 233, 142, 0, 0, 0,
	197, 348, 0, 0, 0, 269, 0, 313, 187, 207,
	146, 126, 140, 157, 186, 244, 0, 289, 0, 0,
	0, 0, 0, 164, 0, 281, 252, 337, 0, 0,
	259, 280, 210, 327, 0, 0, 336, 0, 0, 345,
	350, 0, 0, 0, 304, 174, 0, 131, 0, 266,
	169, 202, 0, 0, 0, 161, 0, 0, 0, 303,
	325, 148, 320, 231, 237, 158, 160, 159, 141, 298,
	324, 153, 162, 308, 285, 314, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 292, 291,
	0, 193, 0, 0, 0, 274, 0, 198, 130, 316,
	353, 147, 204, 321, 0, 181, 243, 166, 253, 254,
	178, 128, 271, 225, 226, 224, 227, 0, 0, 338,
	0, 272, 294, 323, 149, 311, 0, 0, 0, 0,
	283, 0, 0, 0, 132, 317, 335, 154, 293, 296,
	351, 279, 135, 333, 312, 229, 199, 200, 133, 0,
	134, 277, 172, 184, 167, 247, 0, 183, 268, 330,
	331, 165, 354, 143, 344, 137, 144, 343, 240, 0,
	239, 346, 326, 334, 230, 218, 0, 136, 332, 228,
	217, 205, 177, 189, 264, 213, 265, 190, 235, 234,
	236, 215, 219, 0, 0, 0, 309, 340, 355, 151,
	0, 297, 322, 0, 0, 152, 182, 176, 263, 238,
	145, 192, 306, 203, 211, 276, 352, 251, 282, 155,
	339, 305, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 206,
	295, 275, 163, 214, 212, 0, 0, 0, 255, 318,
	0, 0, 0, 0, 209, 0, 0, 0, 307, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 138, 208, 0, 273, 180, 341, 500, 171,
	0, 0, 0, 0, 0, 127, 139, 150, 156, 170,
	175, 179, 0, 188, 191, 194, 195, 196, 201, 216,
	220, 221, 222, 223, 241, 242, 245, 246, 249, 250,
	256, 257, 258, 260, 261, 262, 267, 270, 0, 278,
	284, 286, 287, 288, 290, 299, 300, 301, 302, 310,
	315, 328, 329, 347, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 233, 142, 0, 0, 0, 197,
	348, 0, 0, 0, 269, 0, 313, 187, 207, 146,
	126, 140, 157, 186, 244, 0, 289, 0, 0, 0,
	0, 0, 164, 0, 281, 252, 337, 0, 0, 259,
	280, 210, 327, 0, 0, 336, 0, 0, 345, 350,
	0, 0, 0, 304, 174, 0, 131, 0, 266, 169,
	202, 0, 0, 0, 161, 0, 0, 0, 303, 325,
	148, 320, 231, 237, 158, 160, 159, 141, 298, 324,
	153, 162, 308, 285, 314, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 292, 291, 0,
	193, 0, 0, 0, 274, 0, 198, 130, 316, 353,
	147, 204, 321, 0, 181, 243, 166, 253, 254, 178,
	128, 271, 225, 226, 224, 227, 0, 0, 338, 0,
	272, 294, 323, 149, 311, 0, 0, 0, 0, 283,
	0, 0, 0, 132, 317, 335, 154, 293, 296, 351,
	279, 135, 333, 312, 229, 199, 200, 133, 0, 134,
	277, 172, 184, 167, 247, 0, 183, 268, 330, 331,
	165, 354, 143, 344, 137, 615, 343, 240, 0, 239,
	346, 326, 334, 230, 218, 0, 136, 332, 228, 217,
	205, 177, 189, 264, 213, 265, 190, 235, 234, 236,
	611, 219, 0, 0, 0, 309, 340, 355, 151, 0,
	297, 322, 0, 0, 152, 182, 176, 263, 616, 614,
	605, 606, 203, 211, 276, 352, 251, 282, 155, 339,
	305, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 0, 0, 0, 0, 206, 295,
	275, 163, 214, 212, 0, 0, 0, 255, 318, 0,
	0, 0, 0, 209, 0, 0, 0, 307, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 138, 208, 0, 273, 180, 341, 500, 171, 0,
	0, 0, 0, 0, 127, 139, 150, 156, 170, 175,
	179, 0, 188, 191, 194, 195, 196, 201, 216, 220,
	221, 222, 223, 241, 242, 245, 246, 249, 250, 256,
	257, 258, 260, 612, 613, 267, 270, 0, 278, 284,
	286, 287, 288, 290, 299, 300, 301, 302, 310, 315,
	328, 329, 347, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 233, 142, 0, 0, 0, 197, 348,
	0, 0, 0, 269, 0, 313, 187, 207, 146, 126,
	140, 157, 186, 244, 0, 289, 0, 0, 0, 0,
	0, 164, 0, 281, 252, 337, 0, 0, 259, 280,
	210, 327, 0, 0, 336, 0, 0, 345, 350, 0,
	0, 0, 304, 174, 0, 131, 0, 266, 169, 202,
	0, 0, 0, 161, 0, 0, 0, 303, 325, 148,
	320, 231, 237, 158, 160, 159, 141, 298, 324, 153,
	162, 308, 285, 314, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 292, 291, 0, 193,
	0, 0, 0, 274, 0, 198, 130, 316, 353, 147,
	204, 321, 0, 181, 243, 166, 253, 254, 178, 128,
	271, 225, 226, 224, 227, 0, 0, 338, 0, 272,
	294, 323, 149, 311, 0, 0, 0, 0, 283, 0,
	0, 0, 132, 317, 1124, 154, 293, 296, 351, 279,
	135, 333, 312, 229, 199, 200, 133, 0, 134, 277,
	172, 184, 167, 247, 0, 183, 268, 330, 331, 165,
	354, 143, 344, 137, 144, 343, 240, 0, 239, 346,
	326, 334, 230, 218, 0, 136, 332, 228, 217, 205,
	177, 189, 264, 213, 265, 190, 235, 234, 236, 215,
	219, 0, 0, 0, 309, 340, 355, 151, 0, 297,
	322, 0, 0, 152, 182, 176, 263, 238, 145, 192,
	306, 203, 211, 276, 352, 251, 282, 155, 339, 305,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 0, 206, 295, 275,
	163, 214, 212, 0, 0, 0, 255, 318, 0, 0,
	0, 0, 209, 0, 0, 0, 307, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	138, 208, 0, 273, 180, 341, 500, 171, 0, 0,
	0, 0, 0, 127, 139, 150, 156, 170, 175, 179,
	0, 188, 191, 194, 195, 196, 201, 216, 220, 221,
	222, 223, 241, 242, 245, 246, 249, 250, 256, 257,
	258, 260, 261, 262, 267, 270, 0, 278, 284, 286,
	287, 288, 290, 299, 300, 301, 302, 310, 315, 328,
	329, 347, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 233, 142, 0, 0, 0, 197, 348, 0,
	0, 0, 269, 0, 313, 187, 207, 146, 126, 140,
	157, 186, 244, 0, 289, 0, 0, 0, 0, 0,
	164, 0, 281, 252, 337, 0, 0, 259, 280, 210,
	327, 0, 0, 336, 0, 0, 345, 350, 0, 0,
	0, 304, 174, 0, 131, 0, 266, 169, 202, 0,
	0, 0, 161, 0, 0, 0, 303, 325, 148, 320,
	231, 237, 158, 160, 159, 141, 298, 324, 153, 162,
	308, 285, 314, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 292, 291, 0, 193, 0,
	0, 0, 274, 0, 198, 130, 316, 353, 147, 204,
	321, 0, 181, 243, 166, 253, 254, 178, 128, 271,
	225, 226, 224, 227, 0, 0, 338, 0, 272, 294,
	323, 149, 311, 0, 0, 0, 0, 283, 0, 0,
	0, 132, 317, 602, 154, 293, 296, 351, 279, 135,
	333, 312, 229, 199, 200, 133, 0, 134, 277, 172,
	184, 167, 247, 0, 183, 268, 330, 331, 165, 354,
	143, 344, 137, 615, 343, 240, 0, 239, 346, 326,
	334, 230, 218, 0, 136, 332, 228, 217, 205, 177,
	189, 264, 213, 265, 190, 235, 234, 236, 611, 219,
	0, 0, 0, 309, 340, 355, 151, 0, 297, 322,
	0, 0, 152, 182, 176, 263, 616, 614, 605, 606,
	203, 211, 276, 352, 251, 282, 155, 339, 305, 35,
	36, 70, 38, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 40, 62, 63, 0, 295, 275, 0,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 129, 138,
	208, 79, 273, 180, 341, 0, 171, 0, 0, 0,
	0, 0, 127, 139, 150, 156, 170, 175, 179, 0,
	188, 191, 194, 195, 196, 201, 216, 220, 221, 222,
	223, 241, 242, 245, 246, 249, 250, 256, 257, 258,
	260, 612, 613, 267, 270, 0, 278, 284, 286, 287,
	288, 290, 299, 300, 301, 302, 310, 315, 328, 329,
	347, 349, 0, 0, 42, 72, 45, 44, 47, 0,
	0, 35, 0, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 40, 48, 75, 74, 0,
	0, 0, 0, 46, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	57, 0, 0, 0, 0, 0, 0, 2471, 0, 0,
	0, 35, 2724, 70, 38, 39, 65, 0, 66, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 72, 45, 44,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 73, 2472, 52, 53, 60, 0, 61, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 0, 0, 46, 0, 35, 0, 70,
	38, 39, 0, 0, 0, 0, 0, 2471, 0, 0,
	0, 58, 2713, 0, 0, 0, 0, 76, 0, 0,
	0, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 57, 0, 2473, 0, 42, 72, 45, 44,
	47, 0, 0, 0, 0, 0, 0, 0, 65, 79,
	66, 0, 2472, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 75,
	74, 0, 0, 2471, 0, 46, 0, 0, 2696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 73, 0, 52, 53, 60, 0, 61,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 42, 72, 45, 44, 47, 0, 0, 0,
	0, 56, 57, 0, 2473, 0, 0, 0, 2472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 48, 75, 74, 0, 0, 0,
	35, 46, 70, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 40, 0, 0, 0, 0, 0,
	0, 0, 2474, 73, 0, 52, 53, 60, 0, 61,
	71, 0, 0, 0, 0, 0, 0, 56, 57, 0,
	2473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 2684, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 35, 0, 70, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 2471, 0, 58, 0,
	0, 0, 77, 0, 76, 0, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2474, 73,
	0, 52, 53, 60, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 72, 45, 44, 47,
	71, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 2472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	2471, 0, 0, 0, 46, 2630, 35, 0, 70, 38,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	58, 0, 77, 0, 0, 0, 76, 0, 0, 0,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	72, 45, 44, 47, 0, 0, 71, 0, 0, 0,
	56, 57, 0, 2473, 0, 2472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 79, 66,
	0, 48, 75, 74, 0, 0, 0, 0, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2471, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2474, 73, 0, 52, 53, 60, 0, 61, 0,
	0, 0, 0, 0, 56, 57, 0, 2473, 0, 0,
	0, 42, 72, 45, 44, 47, 0, 0, 0, 0,
	0, 65, 0, 66, 0, 0, 0, 2472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 48, 75, 74, 0, 0, 0, 0,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2474, 73, 0, 52, 53,
	60, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 56, 57, 0, 2473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 65, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2474, 73, 0,
	52, 53, 60, 71, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77,
}

var yyPact = [...]int{
	30053, -1000, -326, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1788, -1000, -1000, -1000, -1000, -1000,
	-1000, 913, 267, -1000, 275, 143, 27540, 646, 2708, 28258,
	-1000, -1000, -1000, 169, 583, 28258, 434, 450, 1161, 1653,
	1160, 35, -72, -81, 149, 18293, 17811, -1000, 1872, 1877,
	-1000, -1000, 573, 47, -1000, -1000, -1000, 20698, 193, -1000,
	-1000, 1747, 1785, 1574, -1000, 12519, 573, 573, 27181, 29694,
	-1000, 1868, 28258, 11074, -1000, 633, 28258, -148, 561, 561,
	330, 561, 561, 645, -1000, 860, -1000, -1000, -1000, -1000,
	28258, 22141, 567, 27899, 567, 567, 567, 567, 567, 567,
	567, 28258, -1000, 716, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 28258, 1158, 1682, 871,
	237, -1000, -1000, -1000, 868, -1000, 303, 301, 308, 298,
	92, 874, 1765, -1000, 1400, 1747, 1747, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 325, 617, 188, 193, 848, -1000,
	1681, 1675, 1078, 1674, 306, 1670, 1461, -36, -1000, 1156,
	28258, -1000, -1000, 1047, 1046, 1498, 1328, 664, 1494, -1000,
	-1000, 265, 571, 1439, 410, 1439, 1439, 1439, 1439, 1439,
	-83, 1439, 1439, 1439, 64, 1439, 142, 1439, 1439, 1439,
	1439, 1439, 1180, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 356, 1306, 1395,
	1493, -1000, 1440, 1745, 640, -1000, -103, 1392, 22622, -1000,
	1400, -1000, -1000, -1000, 1192, 1672, 984, 15405, 1616, -1000,
	-1000, 943, 1829, -1000, 19736, 713, -1000, 15405, 4405, 1400,
	-1000, -1000, 1400, -1000, -1000, -1000, 659, -1000, -1000, 17329,
	17329, 17329, 17329, 17329, 17329, 17329, 17329, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400,
	1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400,
	1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, -1000,
	-1000, 1400, -1000, 12038, 1400, 1400, 1400, 1400, 1400, 1400,
	1400, 1400, 1400, 1400, 1400, 1400, 15405, 1400, 1400, 1400,
	1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 1400,
	1400, 1400, 1400, 26822, 25142, 28258, 1331, 1289, -1000, -1000,
	712, 1398, -114, 29335, -1000, -1000, -1000, -1000, 28617, 24783,
	845, -1000, -1000, -1000, -1000, 1665, -1000, -1000, 710, -1000,
	1788, -1000, -1000, 1284, 507, -1000, 3923, 3765, -1000, -1000,
	-1000, 1458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27899, 1737,
	619, 1155, 890, 1152, 1151, 1149, 22141, 22141, 561, 1145,
	1397, 616, 1396, 614, 1171, 28258, 1721, 1489, 28258, 1144,
	1143, 1142, 1139, 22141, 22141, -1000, 10590, -1000, -1000, 871,
	-1000, 1096, 15405, 561, 561, 28258, 28258, 28258, 28258, -1000,
	-1000, 871, 871, 871, 871, 862, 1827, 862, -1000, 862,
	-1000, -1000, 15405, -1000, 17329, 21660, 749, -1000, -1000, -1000,
	1138, 247, -1000, -1000, -1000, -1000, -1000, -1000, 1137, 306,
	306, -1000, 1095, 306, 1372, -1000, 837, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 306,
	-1000, 14924, -319, -1000, -1000, 1394, -1000, 273, -1000, -1000,
	532, 532, 159, 22141, 22141, 22141, -1000, 1439, 27899, -1000,
	1439, 1439, 1439, -85, 1439, 1439, -1000, -1000, 1439, -1000,
	-1000, -1000, -1000, -1000, 1439, -1000, -1000, -1000, 1439, 1439,
	-1000, 1439, 1439, -1000, -1000, -1000, -1000, -1000, 22141, 532,
	165, 1393, 532, 22141, 22141, 1574, -1000, -1000, 193, -1000,
	-1000, 28258, -106, 22622, 1392, 1733, 9138, -1000, -1000, -1000,
	1860, 768, 1374, -1000, -1000, 1380, -1000, 903, 691, 1061,
	1565, -1000, -1000, -1000, 28258, -1000, 15405, 15405, 937, -1000,
	23103, -1000, -1000, -1000, -1000, 8654, 797, 17329, 948, 774,
	17329, 17329, 17329, 17329, 17329, 17329, 17329, 17329, 17329, 17329,
	17329, 17329, 17329, 17329, 17329, 1037, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1134, -1000, 193, 1050, 1050, 726,
	726, 726, 726, 726, 726, 726, 24065, 1741, 13481, 13481,
	13481, 1741, 1192, 1192, 13481, 13481, 13481, 13481, 13481, 13481,
	1741, 1741, 13481, 1192, 1192, 1192, 1192, 13481, 13481, 13481,
	13481, 1741, 13481, 13481, 13481, 1741, 1192, 1269, 839, 12038,
	13481, 13481, 13481, 1192, 15405, 15405, 14443, 13962, 15886, 13481,
	13481, 1741, 867, 839, 28617, -1000, -1000, 16848, -1000, -1000,
	-1000, -1000, -1000, 1192, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 27899, 27899, 13481, 13481, 13481, 13481, 353, 28258,
	-1000, 1350, 1667, -1000, -1000, -1000, 1731, 24424, 19255, -1000,
	353, 1316, 25142, 28258, -1000, -1000, 25142, 28258, 8170, 28976,
	1347, -1000, -99, -113, -114, -1000, -1000, 722, -1000, -1000,
	-1000, 11556, -1000, 9622, 1747, 1574, 5750, 10106, -1000, 3765,
	1458, -1000, -45, -1000, -1000, -1000, 1410, -1000, 1410, 292,
	-3, 1410, 1410, 1410, 1410, 1410, 1, 1, 1, 1,
	0, -1000, -1000, -1000, -1000, -1000, 1446, 1445, -1000, 1410,
	1410, 1410, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1431, 312, 1415, 1415, 1415, 1415, 1415, 408, 408,
	-1000, 15405, 1437, -1000, 28258, -1000, 1718, -1000, 264, 1441,
	1345, -1000, 173, 1294, 28258, -1000, 28258, 28258, 22141, 22141,
	22141, 605, -1000, 28258, 1376, -1000, -1000, -1000, -1000, -1000,
	1326, -1000, 1294, -1000, -1000, -1000, -1000, -1000, 839, 1133,
	1132, -1000, -1000, -1000, 866, -1000, -1000, -1000, -1000, 871,
	28258, 28258, 28258, 1729, 871, 839, 711, 1470, 1400, 1192,
	-1000, -1000, 1131, -1000, 1372, 1372, -1000, 1372, 306, 1050,
	1372, -1000, 1267, 1713, 1093, 28258, -1000, 22622, -37, -1000,
	-131, 26463, -1000, -1000, -1000, 26463, -1000, 64, 172, -1000,
	593, -1000, 1265, -1000, -1000, -1000, -1000, 1439, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 26463, 115, 162,
	26463, 1326, 1826, 1741, 1192, 191, -1000, -1000, -1000, 1400,
	1228, 689, -1000, 1560, 984, 984, 15405, -1000, -1000, -1000,
	9622, 1769, -1000, 1589, 1588, 1508, -1000, -1000, 797, 811,
	-1000, -1000, 1013, -1000, -1000, -1000, -1000, 687, 1400, -1000,
	3939, -1000, -1000, -1000, -1000, 948, 17329, 17329, 17329, 711,
	3939, 4328, 1210, 2399, 726, 752, 752, 727, 727, 727,
	727, 727, 938, 938, -1000, -1000, -1000, 1192, -1000, -1000,
	-1000, 13481, 1247, -1000, -1000, 839, 684, 1247, 1247, 13481,
	-163, -163, 1192, 1247, 1247, 1247, 1192, 1247, 13481, 13481,
	1247, -163, -163, -163, -163, 1247, 1247, 1247, 1247, 13481,
	1247, 1247, 1247, 13481, -1000, 15405, -1000, 1192, 1247, 1247,
	1247, -1000, 852, 900, 782, 1825, 1247, 779, 1824, 1247,
	1377, 17329, 17329, 17329, 1247, 1247, 13481, 873, -1000, 15405,
	1192, -1000, 2705, 1371, 1370, 1247, 1192, 1351, 1247, 1247,
	175, 1400, -1000, 9622, 25142, 25142, 25142, 25142, 25142, -1000,
	1524, 1522, -1000, 1543, 1542, 1567, 22622, 1249, 1192, 288,
	24424, -1000, 1400, -1000, 21179, 662, 631, 624, 622, 1804,
	25142, 1290, -1000, 1290, -1000, 683, -1000, -1000, 28617, -114,
	-56, -1000, -1000, 1347, -1000, 1068, -1000, -1000, 839, -1000,
	682, 1672, 1741, 1344, 5266, -1000, -1000, -1000, -1000, 507,
	-1000, -1000, -1000, 1438, 3368, -1000, 1622, 724, 732, 1108,
	1604, -1000, -1000, 581, -59, -1000, -1000, 1041, 1, 1,
	1410, 1410, 290, 1410, -1000, 1, -1000, -1000, -1000, 722,
	1663, 722, 722, 722, 722, 1, 1092, 1092, -1000, -1000,
	-1000, -1000, 1039, -1000, 1431, -1000, 1030, -1000, -1000, -1000,
	-1000, -1000, -1000, 941, 1487, 27899, 193, 1726, -1000, 1815,
	-1000, -1000, 599, 93, 22141, 171, 388, 196, -1000, 589,
	-1000, 587, -1000, -1000, -1000, -1000, -1000, -1000, 28258, 22141,
	-1000, -1000, 1804, 1129, 1128, -1000, -1000, -1000, 862, 871,
	1656, -1000, -1000, 17329, 22141, -1000, 318, -1000, -1000, -1000,
	-1000, 353, 638, -1000, -1000, -90, -1000, -1000, 586, 679,
	677, 585, -1000, 103, 22141, -1000, 27899, -1000, 1823, 1821,
	113, 1817, 22141, 1565, -1000, 1341, -1000, 706, 704, 761,
	512, 512, -1000, 806, 512, 352, -1000, 202, -1000, 9138,
	9138, 1549, -1000, -1000, -1000, 28258, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7686, 13481, -1000, 711, 3939,
	4013, -1000, 17329, -1000, 1247, 13481, -163, 7202, -163, -163,
	1247, -1000, 25982, -1000, -163, -163, -163, -163, -163, -163,
	1247, 1247, -163, -1000, -1000, -1000, -1000, -163, -163, -163,
	-163, 1247, -163, -163, -163, 1192, 839, -1000, -1000, -1000,
	-1000, 474, 1037, 474, 17329, 17329, -1000, 17329, 17329, -1000,
	-1000, 17329, 3847, 3730, 3474, -208, -1000, 1346, 844, -1000,
	15405, 1001, -1000, -1000, 17329, 17329, -1000, -1000, -1000, -1000,
	1485, 9622, 1400, 6234, -1000, 27899, 1348, -1000, 819, 809,
	1667, 1436, 1484, 1602, -1000, -1000, -1000, -1000, 1513, -1000,
	1510, -1000, -1000, 1404, -1000, -1000, 1340, 1400, 27899, 17329,
	662, -1000, 1400, 1400, 1400, 1788, 15405, 1290, -1000, -1000,
	743, -1000, -1000, -123, -129, -1000, -1000, -1000, 9138, -1000,
	5750, -1000, 5750, -1000, 23584, 501, 1603, 498, -1000, 1108,
	-1000, -1000, 1108, -1000, -1000, -1000, 1416, -1000, 917, -1000,
	-1000, -1000, -1000, -1000, 17329, 1855, -1000, 1611, -1000, 1606,
	1091, -1000, -1000, 1287, 722, 722, 1, -1000, -1000, 1410,
	-1000, 722, -1000, 760, -1000, -1000, -1000, -1000, 722, 1245,
	-1000, 1243, 1338, -1000, 1237, 117, 28258, -1000, -1000, -1000,
	1483, -1000, -1000, -1000, 1285, 1332, -1000, 3923, 1127, 1124,
	1123, -214, 213, -1000, 22141, 135, 173, 400, 1118, 28258,
	22141, -1000, -1000, -1000, -1000, -1000, 871, -1000, 17329, 3939,
	1294, -1000, -1000, 1, 28258, -1000, 22141, 736, 25623, 22141,
	111, 167, -1000, 22141, 22141, 1816, 22141, 1326, 1508, 191,
	3218, 1108, 632, -1000, -1000, 502, -1000, 283, 1604, 1116,
	4213, 3903, 27899, 1601, 1600, 1115, 28258, 27899, -1000, -1000,
	3622, 1114, 15405, -1000, 27899, 27899, 671, -1000, -1000, -1000,
	1293, 12519, -1000, -1000, 1192, -1000, 17329, 3939, -163, -1000,
	-1000, -1000, -1000, 663, -1000, -1000, -163, -1000, 351, -1000,
	-1000, -1000, -1000, -1000, -1000, -163, -163, -1000, -1000, -1000,
	-1000, -1000, -163, -1000, -1000, -1000, -1000, 1192, 1410, 1410,
	-1000, 1410, 1415, -1000, 1410, 23, 1410, 22, 1192, 1192,
	3447, 3311, 3065, 2871, 2705, 17329, 17329, 17329, 1400, -159,
	-1000, 839, 15405, 1973, 1312, -1000, 1705, 1282, 1317, -1000,
	-1000, 13000, 1192, 1585, 1228, -1000, 20698, 1225, -1000, 1788,
	9622, 15405, 15405, -1000, -1000, 15405, 1411, -1000, 15405, -1000,
	-1000, -1000, -1000, 27899, 286, -1000, 15405, 1225, 778, -1000,
	27899, 27899, 27899, 1747, 839, -1000, -1000, -1000, -1000, 5266,
	-1000, 1223, -1000, 1410, 1410, 1599, -1000, 724, -1000, -1000,
	-1000, 27899, -1000, 3939, -93, -1000, -1000, -1000, -1000, -1000,
	-1000, 722, -1000, -1000, -1000, -1000, -1000, 1, 1090, 1,
	1029, -1000, 1028, -1000, -1000, -263, 1408, -1000, 193, 28258,
	170, 599, -1000, 3923, 3923, 3923, 152, 126, -1000, 908,
	-1000, -1000, -1000, 1089, 1088, 1084, 1294, 178, 907, 151,
	-1000, 1723, -1000, -1000, -1000, 3939, -60, -1000, 167, -1000,
	-1000, -1000, 167, -1000, -1000, 160, 1326, 1326, 22141, 1326,
	-1000, -1000, 3622, 484, 3923, 3923, 1437, 724, 1597, 498,
	-1000, -1000, -1000, -1000, -1000, -1000, 1110, -1000, 694, -1000,
	579, 484, 3622, 839, 767, 1708, 9138, 1794, 25142, -1000,
	-1000, -1000, 3939, -1000, 6718, -1000, 1788, 1783, -1000, -1000,
	-1000, -1000, -1000, 291, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17329, 17329, 17329, 17329, -1000, 2705, 2705, 2705,
	17329, 1192, 1083, 839, 17329, 17329, 1595, -1000, 1400, -1000,
	-1000, 1400, 182, -1000, 27899, 1747, -1000, 839, 839, 839,
	27899, 839, 1221, -1000, 1400, 18774, -1000, 22622, 1213, 1213,
	1213, -1000, 644, 23584, 1712, 1712, -1000, 1108, -1000, 1211,
	-1000, -1000, 722, -1000, 722, 1270, 1208, -1000, 23584, -1000,
	1764, -1000, 170, -1000, 1082, 245, 217, -1000, 244, 241,
	226, 220, 208, -1000, -1000, -1000, -1000, 382, 152, -1000,
	-53, 1027, 261, 1666, 126, -1000, 1017, 1016, 1011, 1006,
	223, -1000, -1000, -1000, -1000, 195, 173, -1000, 398, 1080,
	1646, 1642, 1725, 1725, 110, 1326, 1321, 1197, -1000, -1000,
	1109, -1000, -1000, 1407, 1108, 1406, -1000, 1107, -1000, -1000,
	27899, -1000, 484, 1699, 1692, 1400, -1000, 1792, 1778, 1290,
	12519, -1000, -1000, -176, 15405, -1000, -1000, 2705, 2705, 2705,
	2705, -1000, -1000, -1000, 230, -1000, -1000, 2705, 2705, 1835,
	-1000, 1317, 1400, -1000, 193, -1000, -1000, 1207, -1000, 27899,
	-1000, -1000, 662, -1000, -1000, -1000, 644, -1000, 1106, 806,
	1076, -1000, -1000, -1000, -1000, 334, -1000, -1000, -1000, -1000,
	1204, -1000, 274, 30680, -1000, -1000, -1000, -1000, -1000, -1000,
	1652, 1649, 257, -1000, 1073, 1072, -1000, 365, 1040, 665,
	-171, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 397, 1104, -1000, 150, -1000, -1000, 570, 1627,
	1631, 1777, -1000, 22141, -1000, -1000, 25142, -1000, -1000, 581,
	581, 23584, 1437, 23584, -1000, -1000, -1000, 17329, -1000, 324,
	-1000, 15405, 15405, 1794, -1000, 1192, 225, 225, 1324, -1000,
	-1000, -1000, -1000, 1192, 176, -225, -1000, -1000, 9622, 1317,
	1192, -1000, -1000, -1000, -1000, -1000, 1000, -1000, 28258, 644,
	272, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15405, 15405, 4778, 30680, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 991, -1000, -1000, 1035, 375, 147, -1000,
	1724, -1000, 1404, 958, 1642, 1775, 1635, 1633, -1000, 1071,
	-218, 1290, 1196, 1402, 1191, 3939, 1188, -1000, 27899, -1000,
	839, 1315, -1000, 839, 1792, -1000, -1000, -1000, 224, -1000,
	-267, 249, -268, -1000, 1050, -1000, -1000, 1537, -212, -238,
	1307, -1000, -1000, 1401, -1000, 644, 232, -1000, 827, 980,
	199, 181, 3578, -1000, -1000, -1000, -1000, -330, -1000, 129,
	-1000, 123, -1000, -1000, -1000, 1070, -1000, 1644, -1000, 1069,
	-1000, 1773, 1771, -1000, 161, 1794, 644, 23584, 644, -1000,
	324, 1583, 15405, -1000, 901, -1000, -1000, -1000, -1000, -1000,
	27899, -1000, 1533, -1000, 27899, -1000, 1103, 1063, 859, -1000,
	15405, 30680, 1762, 1752, 1751, 1685, 9138, 30588, -1000, -1000,
	-1000, -1000, -1000, 1060, 1002, 20217, 1792, -1000, 1179, -1000,
	-1000, 320, -1000, 224, -1000, -220, 1177, 222, -1000, -1000,
	883, 30680, -1000, 905, -333, 419, 193, 416, 17329, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 106, 1294, -1000, 644,
	277, -1000, -228, 1478, -1000, -1000, -1000, -1000, -1000, -1000,
	30680, -1000, -334, 30680, 4266, -1000, -1000, -1000, 30514, -1000,
	-1000, -1000, -1000, 174, -1000, -1000, 3939, 22141, -1000, 1400,
	-240, 1477, 1475, 1811, -1000, -335, 30351, -336, 559, 30680,
	906, -1000, 15405, -1000, 416, -1000, 1294, 16367, -1000, -1000,
	1834, -1000, 1831, 612, 612, 30275, 877, 30680, -1000, -341,
	530, 30680, -1000, 843, -1000, 2705, 1192, -1000, -1000, -1000,
	377, 996, -1000, -1000, -1000, 30185, -1000, -342, 30680, -1000,
	-1000, -1000, -1000, -1000, 519, 4323, -347, -1000, 509, 30680,
	-1000,
}

var yyPgo = [...]int{
	0, 2240, 2238, 60, 2237, 175, 2235, 2234, 2233, 22,
	18, 14, 27, 2231, 1957, 1954, 1952, 1946, 1943, 2230,
	5, 2228, 2224, 1939, 2223, 2222, 1937, 1933, 1929, 1927,
	2219, 2216, 2214, 1925, 1913, 20, 2210, 17, 2209, 4,
	130, 144, 2208, 3, 2207, 2204, 7, 2203, 2202, 1907,
	2191, 2186, 2185, 90, 2182, 1905, 1903, 2180, 1898, 1896,
	2175, 2174, 1890, 1887, 1884, 2171, 146, 2170, 2169, 2167,
	166, 93, 136, 2162, 2156, 2154, 100, 76, 2102, 105,
	42, 102, 171, 2153, 26, 80, 174, 2152, 117, 135,
	2151, 140, 2148, 124, 162, 113, 2147, 2145, 151, 2144,
	2143, 2142, 122, 2141, 2140, 2882, 2138, 2137, 137, 2136,
	55, 51, 48, 2134, 2131, 2127, 2126, 2125, 29, 854,
	2123, 2122, 128, 2118, 2117, 73, 2116, 2114, 172, 2113,
	2110, 2109, 121, 46, 2108, 2105, 40, 2104, 47, 62,
	2100, 63, 2097, 118, 2078, 2077, 36, 30, 2076, 89,
	2075, 54, 2073, 123, 315, 803, 2072, 33, 12, 11,
	44, 53, 67, 114, 95, 2071, 16, 32, 101, 94,
	83, 37, 2070, 131, 2067, 87, 134, 119, 120, 132,
	2066, 2065, 2063, 1012, 2061, 111, 72, 2060, 141, 922,
	163, 98, 2059, 92, 2058, 2057, 2056, 82, 116, 2055,
	2054, 58, 126, 1006, 1786, 21, 138, 2053, 38, 2050,
	2046, 2272, 107, 104, 99, 2045, 97, 35, 59, 2041,
	2040, 2038, 2037, 2036, 2035, 1253, 2033, 2032, 2031, 2030,
	150, 110, 2029, 2028, 108, 91, 2027, 2026, 2025, 2024,
	109, 78, 133, 2022, 96, 112, 158, 2019, 71, 2017,
	2014, 86, 39, 2012, 2010, 2009, 88, 84, 2007, 56,
	25, 31, 66, 13, 70, 85, 2006, 24, 2002, 2,
	6, 9, 2001, 1998, 1994, 1986, 1985, 1984, 1983, 81,
	1982, 1981, 50, 1980, 1978, 1976, 34, 1975, 1972, 1971,
	129, 106, 49, 145, 69, 10, 1970, 1969, 8, 1968,
	103, 1967, 57, 1965, 52, 1962, 1961, 43, 1941, 1931,
	45, 1922, 1918, 142, 1542, 2538, 1916, 147, 125, 41,
	68, 1909, 1901, 0, 127, 152, 159, 1894, 1892,
}

var yyR1 = [...]int{
	0, 322, 322, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 65, 3, 3, 8, 4,
	4, 4, 5, 5, 87, 87, 86, 86, 91, 6,
	6, 7, 7, 9, 9, 69, 69, 10, 11, 11,
	11, 11, 325, 325, 100, 100, 98, 98, 99, 99,
	168, 168, 12, 12, 12, 173, 173, 178, 178, 178,
	181, 181, 181, 181, 159, 160, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 296, 296,
	305, 305, 305, 306, 306, 304, 304, 304, 304, 304,
	308, 308, 309, 309, 307, 307, 307, 307, 311, 311,
	312, 312, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 299, 299, 299, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 34, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	314, 314, 315, 315, 316, 316, 317, 317, 317, 317,
	318, 318, 318, 318, 318, 319, 319, 319, 319, 319,
	319, 319, 320, 320, 321, 321, 2, 277, 277, 278,
	278, 279, 279, 279, 279, 280, 280, 281, 281, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 24,
	200, 200, 298, 298, 298, 298, 292, 292, 292, 294,
	294, 293, 293, 293, 295, 295, 300, 300, 300, 300,
	300, 302, 302, 302, 302, 302, 302, 303, 303, 303,
	301, 301, 47, 47, 48, 48, 48, 152, 152, 152,
	13, 13, 13, 13, 13, 19, 21, 21, 36, 36,
	37, 22, 22, 22, 22, 38, 38, 39, 25, 25,
	25, 25, 25, 25, 45, 45, 45, 44, 44, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 46,
	46, 41, 41, 40, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 26, 26, 26, 26,
	26, 26, 18, 276, 276, 276, 35, 35, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 51, 253, 254,
	254, 254, 254, 254, 254, 254, 254, 241, 241, 242,
	218, 218, 218, 218, 218, 218, 218, 218, 217, 217,
	217, 217, 221, 221, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 220, 220, 220, 220, 220, 220,
	220, 220, 222, 222, 222, 222, 222, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 224, 224, 224, 224, 224, 224, 224, 224,
	240, 240, 225, 225, 234, 234, 235, 235, 235, 232,
	232, 233, 233, 228, 229, 236, 230, 230, 230, 231,
	231, 231, 239, 239, 239, 239, 226, 243, 243, 263,
	263, 262, 262, 261, 261, 261, 252, 252, 258, 258,
	258, 258, 258, 258, 258, 247, 247, 247, 246, 246,
	248, 248, 251, 251, 260, 260, 259, 259, 244, 244,
	244, 264, 264, 264, 264, 264, 245, 245, 245, 245,
	265, 249, 249, 250, 250, 250, 270, 271, 269, 269,
	269, 269, 269, 115, 115, 115, 255, 255, 255, 256,
	256, 256, 257, 257, 257, 274, 274, 273, 273, 49,
	50, 54, 54, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 151, 151, 151,
	198, 198, 268, 266, 266, 267, 267, 15, 15, 52,
	52, 297, 297, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 272, 272, 272, 17, 17, 55, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 83, 187, 187, 186, 186, 185, 185, 185,
	188, 188, 188, 215, 215, 215, 57, 57, 61, 61,
	64, 64, 64, 62, 63, 27, 28, 28, 28, 28,
	29, 199, 199, 59, 59, 60, 60, 60, 60, 75,
	75, 327, 327, 58, 328, 66, 67, 67, 68, 68,
	68, 191, 191, 72, 72, 72, 70, 70, 70, 71,
	71, 77, 77, 81, 81, 81, 81, 80, 80, 80,
	80, 154, 154, 135, 135, 155, 155, 156, 156, 156,
	157, 157, 158, 158, 158, 158, 158, 123, 123, 207,
	207, 207, 206, 206, 206, 206, 85, 85, 88, 88,
	89, 89, 89, 89, 92, 137, 137, 109, 109, 110,
	110, 110, 110, 110, 121, 121, 167, 167, 166, 166,
	169, 169, 90, 90, 90, 90, 95, 95, 96, 96,
	97, 97, 197, 197, 213, 213, 213, 101, 101, 101,
	103, 102, 102, 102, 102, 104, 104, 106, 107, 107,
	105, 105, 108, 111, 111, 111, 111, 112, 112, 82,
	82, 82, 82, 82, 82, 82, 184, 184, 114, 114,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	131, 131, 131, 131, 131, 131, 116, 116, 116, 116,
	116, 116, 116, 76, 76, 132, 132, 132, 94, 93,
	93, 79, 79, 78, 78, 133, 133, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 126, 126, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	326, 326, 128, 127, 127, 127, 127, 127, 127, 73,
	73, 73, 73, 73, 214, 214, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 144,
	144, 74, 74, 142, 142, 143, 145, 145, 141, 141,
	141, 118, 118, 118, 118, 118, 118, 118, 118, 120,
	120, 120, 146, 146, 134, 134, 84, 147, 147, 148,
	149, 149, 150, 150, 153, 161, 161, 161, 162, 162,
	162, 162, 122, 122, 163, 163, 163, 117, 117, 117,
	117, 117, 117, 117, 165, 165, 164, 164, 164, 164,
	170, 170, 136, 136, 139, 139, 138, 140, 171, 171,
	175, 175, 172, 172, 176, 176, 176, 176, 179, 179,
	180, 180, 180, 177, 177, 177, 174, 174, 174, 210,
	210, 210, 182, 182, 192, 192, 189, 189, 190, 190,
	183, 183, 227, 227, 196, 196, 195, 195, 195, 193,
	193, 193, 194, 194, 208, 208, 204, 204, 209, 209,
	205, 205, 211, 211, 212, 212, 275, 275, 237, 237,
	285, 285, 238, 238, 286, 286, 288, 288, 283, 283,
	284, 284, 287, 287, 30, 289, 289, 290, 290, 291,
	291, 291, 291, 31, 32, 32, 32, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 323, 324,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 11, 4, 7, 5, 1,
	13, 3, 10, 12, 2, 3, 1, 3, 4, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 2, 3, 3, 11,
	7, 9, 4, 4, 15, 11, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	0, 3, 1, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 2, 1, 2, 1, 2, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 6, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -322, -1, -3, -8, -9, -10, -11, -12, -14,
	-49, -15, -16, -17, -55, -56, -57, -61, -62, -63,
	-59, -58, -23, -26, -18, -65, -27, -28, -29, -30,
	-31, -32, -33, -34, -4, 6, 7, -69, 9, 10,
	30, -51, 131, -50, 134, 133, 170, 135, 163, 64,
	277, -64, 280, 281, -327, -199, 216, 217, 20, 37,
	282, 284, 31, 32, 185, 233, 235, -5, -87, -6,
	8, 375, 132, 278, 165, 164, 26, 427, -323, 68,
	490, -149, 15, -66, -328, -66, -66, -66, -66, -66,
	-253, -197, 106, 68, 23, -194, 144, 87, 366, 140,
	-200, 229, 231, -192, -193, 193, 203, 44, 151, 150,
	141, 229, 141, 142, 144, 366, 140, 178, 177, 229,
	231, 141, -105, -211, 72, -202, 154, 438, 254, 424,
	241, 190, 277, 291, 293, 285, 320, 308, 425, 439,
	155, 211, 139, 306, 309, 353, 153, 244, 204, 267,
	440, 342, 348, 214, 280, 362, 441, 156, 208, 210,
	209, 198, 215, 36, 166, 304, 250, 297, 219, 193,
	442, 432, 295, 28, 188, 443, 350, 325, 253, 444,
	429, 248, 349, 300, 296, 137, 157, 151, 446, 326,
	330, 447, 354, 234, 448, 449, 450, 143, 240, 289,
	290, 451, 194, 356, 245, 324, 33, 152, 426, 48,
	175, 357, 38, 328, 37, 334, 452, 323, 318, 335,
	453, 454, 455, 456, 258, 256, 257, 259, 322, 288,
	317, 206, 53, 138, 332, 331, 333, 207, 352, 313,
	311, 457, 458, 249, 158, 459, 460, 298, 18, 461,
	462, 360, 169, 251, 252, 42, 463, 464, 465, 173,
	466, 467, 468, 351, 327, 329, 192, 469, 301, 148,
	470, 255, 264, 428, 238, 394, 358, 294, 472, 284,
	174, 168, 361, 273, 473, 217, 474, 475, 476, 160,
	477, 232, 231, 281, 265, 393, 282, 344, 212, 478,
	479, 480, 481, 202, 187, 364, 355, 52, 216, 339,
	482, 268, 287, 150, 218, 483, 242, 278, 43, 7,
	205, 246, 345, 266, 213, 203, 315, 176, 484, 485,
	302, 303, 321, 286, 316, 279, 179, 170, 262, 363,
	340, 430, 229, 310, 307, 182, 314, 486, 144, 487,
	183, 283, 359, 243, 305, 341, 141, 124, 309, 353,
	131, 343, 344, 350, -247, 351, 177, 180, -215, 141,
	-187, 342, 234, 255, 399, 183, 184, 142, 143, 33,
	355, 354, 346, -211, 145, 283, -75, 135, 171, -105,
	-46, 72, 218, -46, 30, 72, 72, 36, 72, 282,
	345, 345, 75, 428, 186, 21, -314, -295, 264, -313,
	-293, 132, 131, 10, 133, 269, 270, 271, 142, 8,
	31, 471, 159, 272, 273, 6, 163, 274, 275, 178,
	9, 276, -298, 74, 72, -202, -203, 395, 396, 397,
	398, 399, 412, 413, 414, 400, 401, 415, 416, 417,
	402, 403, 418, 419, 421, 422, 420, 181, 406, 405,
	404, 407, 408, 51, 410, 409, 411, 21, -314, -295,
	264, 6, -68, 5, -183, 146, 279, -86, 437, -91,
	-213, -211, -203, 74, -3, -162, 17, 16, -72, 54,
	55, -67, -80, 115, -82, -211, -113, 89, -119, 29,
	72, -202, 24, -118, -203, -114, -141, -140, -94, 124,
	125, 126, 113, 114, 121, 90, 127, -126, -124, -125,
	-127, -129, -130, 74, 73, 82, 75, 76, 77, 78,
	83, 395, 396, 397, 398, 399, 412, 413, 414, 400,
	401, 415, 416, 417, 402, 403, 418, 419, 421, 422,
	420, 406, 405, 404, 407, 408, 410, 409, 411, 84,
	85, -204, -138, -323, 58, 59, 171, 140, 376, 377,
	378, 379, 380, 423, 161, 384, 92, 47, 365, 374,
	373, 372, 370, 371, 367, 369, 368, 386, 387, 147,
	366, 119, 375, -183, -183, 11, -98, -99, -105, -108,
	-211, -172, 279, -179, -176, 354, 355, -177, -180, -174,
	-141, 334, 467, 468, 353, 309, 352, -204, -211, -2,
	-5, 6, -105, -254, -242, -245, -205, 156, -265, -204,
	-201, 153, 72, -202, 247, 136, 162, 132, 88, 431,
	23, 25, 237, 337, 395, 91, 124, 396, 397, 398,
	16, 20, 92, 123, 81, 376, 186, 399, 131, 62,
	392, 367, 369, 365, 366, 343, 29, 10, 26, 164,
	197, 22, 117, 133, 95, 96, 97, 167, 269, 270,
	24, 165, 260, 85, 271, 161, 445, 19, 65, 11,
	180, 233, 13, 390, 391, 14, 230, 147, 146, 108,
	195, 142, 60, 8, 127, 27, 105, 56, 400, 401,
	434, 45, 185, 435, 58, 106, 17, 370, 371, 31,
	423, 402, 172, 436, 403, 119, 200, 63, 50, 236,
	89, 83, 34, 86, 66, 87, 15, 196, 61, 388,
	239, 261, 177, 471, 199, 437, 159, 107, 272, 134,
	375, 263, 235, 59, 140, 6, 385, 30, 163, 274,
	406, 405, 404, 407, 201, 57, 378, 379, 408, 275,
	488, 141, 94, 386, 387, 145, 178, 84, 5, 44,
	32, 9, 276, 64, 67, 372, 373, 374, 47, 51,
	410, 409, 411, 93, 12, 389, 427, 181, 142, -105,
	375, -190, 147, -190, 178, 177, -190, -190, 141, 98,
	-52, -105, -297, -292, -298, -189, 147, -204, -189, -189,
	-189, -189, -189, -189, -189, -105, 128, -105, 72, 30,
	-188, 106, 12, 366, 140, 141, 178, 144, -249, 11,
	108, 181, 181, 181, 182, 181, -186, 345, 347, 179,
	348, 349, 12, -83, 106, 19, -323, -162, -162, 72,
	282, 145, -60, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -41, -40, -42, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 30,
	-276, 68, -237, 334, 72, -289, -290, -105, 75, 75,
	66, 66, 69, 145, 69, 66, -315, 265, 68, -315,
	231, 265, 266, 203, 229, 144, -315, -315, 231, -315,
	-315, -315, -315, -315, 345, -315, -315, -315, 267, 268,
	-315, 343, 144, -315, -315, -315, -315, -315, 71, 66,
	69, 255, 66, 11, 66, -66, -7, -5, -323, 21,
	22, 141, 358, 69, -86, -165, -323, -324, 70, -163,
	19, 31, -122, 75, 78, -150, -153, -82, -211, 50,
	-70, 21, 22, 80, 11, -207, 88, 87, 105, -206,
	23, 72, -202, -203, 74, 128, -82, -116, 108, 89,
	106, 107, 91, 110, 109, 120, 113, 114, 115, 116,
	117, 118, 119, 111, 112, 123, 98, 99, 100, 101,
	102, 103, 104, -184, -323, -94, -323, 129, 130, -119,
	-119, -119, -119, -119, -119, -119, -119, -323, -323, -323,
	-323, -323, -323, -323, -323, -323, -323, -323, -323, -323,
	-323, -323, -323, -323, -323, -323, -323, -323, -323, -323,
	-323, -323, -323, -323, -323, -323, -3, -133, -82, -323,
	-323, -323, -323, -323, -323, -323, -323, -323, -323, -323,
	-323, -323, -144, -82, -323, -326, -128, -323, -326, -128,
	-326, -128, -326, -323, -326, -128, -326, -128, -326, -326,
	-128, -326, -323, -323, -323, -323, -323, -323, -107, 27,
	-105, -85, -88, -89, -90, -109, -93, -323, -105, -94,
	-105, -98, -325, 69, 11, 67, -325, 69, 128, 69,
	-173, -178, 356, 358, 279, -177, -177, -210, -204, 74,
	29, 98, 30, 128, -149, -66, 70, 69, -245, 156,
	153, -217, -221, -223, -222, -224, -219, -220, 306, 309,
	313, 311, 307, 312, 124, 310, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 30, 166, 302,
	303, 304, 305, 326, 327, 328, 329, 330, 331, 332,
	333, 285, 308, 425, 286, 287, 288, 289, 290, 291,
	293, 294, 295, 296, 297, 298, 299, 300, 72, -203,
	-265, 68, -204, 23, 144, 72, 89, 72, 72, 72,
	-301, -300, -292, -295, -190, 72, 69, 145, 69, 145,
	71, -98, 24, 66, -100, -105, 72, 72, 72, 72,
	-294, -292, -295, -212, -211, -201, -188, 74, -82, -190,
	-190, -105, -105, -105, -105, -188, -188, -188, -188, -185,
	11, 108, 11, -185, -185, -82, -119, -292, 368, 115,
	72, 72, 282, 72, -41, -41, 74, -41, 69, 98,
	-41, 70, -133, -275, 489, 69, -291, 23, 358, 359,
	335, -317, 141, 180, 177, -317, -313, 273, -294, -293,
	-292, -315, -316, -204, -315, -315, -315, 345, -315, -315,
	-315, -315, -315, -315, -315, -315, -298, -317, 233, 69,
	-317, -294, -292, -72, -3, -105, 359, 360, -91, 23,
	-164, -205, 9, 108, 69, 18, 69, -161, 25, 26,
	128, -120, 51, 75, 78, -191, 49, -105, -82, -82,
	-131, 83, 89, 84, 85, -206, 115, -212, -205, -201,
	-119, -132, -138, -94, 79, 108, 106, 107, 91, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -214, 72, 74, 72, -118, -118,
	-204, -70, -78, -81, 115, -82, -211, -78, -78, -70,
	-324, -324, -81, -78, -78, -78, -81, -78, -70, -70,
	-78, -324, -324, -324, -324, -78, -78, -78, -78, -70,
	-78, -78, -78, -70, -324, 69, -324, -3, -78, -78,
	-78, -324, -82, -82, -141, 74, -78, -141, 74, -78,
	-119, 381, 382, 383, -78, -78, -70, -142, -143, 93,
	-141, -324, -119, -204, -204, -78, -79, -78, -78, -78,
	-168, 173, -105, 30, 69, -101, -103, -102, -104, 56,
	60, 62, 57, 58, 59, 63, -197, -85, -92, 47,
	-323, -110, 173, -111, 23, -213, 64, 146, 65, -168,
	67, -85, -105, -85, -108, -211, 115, -176, -179, 69,
	357, 359, 360, -173, -231, 123, 66, 86, -82, -205,
	-212, -162, -72, -255, -256, -257, -205, 74, 75, -242,
	-243, -244, -245, -258, 156, -264, 148, 150, 44, -246,
	157, 142, 45, -218, -232, 340, -225, 68, -225, -225,
	314, 306, 309, 307, -225, -225, -225, -225, -225, -230,
	309, -230, -230, -230, -230, 307, 68, 68, -225, -225,
	-225, -234, 68, -234, 301, -235, 68, -235, -235, -235,
	-235, -265, -265, -82, -208, 67, -159, -105, 24, -47,
	190, 162, 68, -296, 69, 29, -302, 230, -105, -105,
	-105, -292, -292, -298, -272, 160, 155, -105, 69, 69,
	72, 72, -250, 11, 108, -188, -211, -211, -105, -121,
	23, -188, -76, 167, 67, -326, -324, 72, -40, -118,
	70, -106, 27, 74, -290, -213, 334, 359, -318, 115,
	-204, -318, -321, 427, 145, 70, 69, -315, -318, 251,
	233, -318, 11, -70, -324, -54, -53, 136, 133, 134,
	138, 139, -268, 337, 132, 174, -93, -323, -324, 69,
	128, 52, -122, -122, -153, -182, 19, 11, 47, 47,
	-71, 57, 83, 84, 85, 128, -323, -132, -119, -119,
	-119, -76, 88, -324, -78, 69, -324, 128, -324, -324,
	-78, -154, 388, -154, -324, -324, -324, -324, -324, -324,
	-78, -78, -324, -154, -154, -154, -154, -324, -324, -324,
	-324, -78, -324, -324, -324, -79, -82, -324, -324, -324,
	-324, 69, 67, 23, 11, 11, -324, 11, 11, -324,
	-324, 11, -119, -119, -119, -324, -324, -78, -145, -143,
	95, -82, -324, -324, 69, 69, -324, -324, -324, -324,
	-117, 30, 47, -323, -3, -323, -171, -175, -141, -201,
	-88, -89, -89, -88, -89, 56, 56, 56, 61, 56,
	61, 56, -102, -213, -324, -324, -137, 189, -323, 34,
	-213, -111, 142, 142, 142, -112, 12, -85, -112, -112,
	128, -178, -181, 361, 358, 364, 72, 74, 128, -163,
	69, -257, 98, -245, 68, 72, -251, -203, 45, -246,
	142, 45, -246, -251, 72, -251, 45, 83, 89, -228,
	-229, -236, -239, -226, 29, 66, 337, 148, 45, 44,
	81, -233, 341, 75, -230, -230, -225, -225, -225, 314,
	-225, -230, -231, 30, -231, -231, -231, -231, -230, -240,
	74, -240, 75, -234, 75, 70, 66, -204, -3, 23,
	-48, 8, 9, 10, -277, -278, -279, 72, 108, 195,
	196, -305, 263, -300, 231, 240, 88, 16, 427, 145,
	145, -105, -292, -112, 72, 72, -185, -188, 34, -119,
	-295, 183, 184, -168, 141, -291, 145, 128, 128, 145,
	254, -294, -204, 11, 11, 251, 11, -294, -191, 69,
	-198, -246, -274, -244, -245, -273, 149, 156, 157, -198,
	156, 153, -246, 157, 148, 149, -195, -246, 145, 23,
	-198, -198, -252, 98, -198, 173, -205, -205, 53, -105,
	-77, -160, 115, -205, -79, -76, 88, -119, -324, -81,
	-155, -154, 115, -212, -155, -155, -324, -204, -323, -154,
	-155, -155, -154, -154, -154, -324, -324, -154, -155, -155,
	-155, -155, -324, -155, -155, -155, -324, -216, 124, 306,
	166, 304, 297, 324, 311, 339, 302, 340, -214, -216,
	-119, -119, -119, -119, -119, 11, 11, 11, 424, -149,
	97, -82, 94, -119, -119, -170, 66, -171, -136, -139,
	-138, -323, -3, -324, -164, 6, 427, -169, -204, -112,
	69, 98, 98, -96, -95, 66, 67, -97, 66, -95,
	56, 56, -167, 68, 69, -138, -323, -169, -119, -111,
	-323, -323, -323, -149, -82, -112, 358, 362, 363, -256,
	-257, -260, -259, -204, -203, 148, -264, 44, -264, -251,
	-251, 68, 83, -119, 9, 45, 45, 74, 70, -231,
	-231, -230, -225, -231, 72, 124, -231, 70, 69, 70,
	69, 70, 69, -115, 443, 89, -105, -159, -159, 66,
	70, 69, -217, 72, 72, 72, -308, 427, 236, -306,
	-304, 242, 243, 244, 245, 246, -295, 241, -302, 238,
	74, 72, -105, -292, -188, -119, -230, -105, -294, 115,
	115, -204, -294, 251, -320, 427, -294, -294, 11, -294,
	-71, -53, 68, -241, 72, -203, -251, -193, 148, 72,
	72, 72, -203, 72, -203, -204, 45, 45, 72, -105,
	-204, -241, 72, -82, -204, -204, 128, -112, 11, 69,
	-80, -324, -119, -155, 128, -155, -135, 173, -155, -155,
	-155, -324, -225, -225, -225, -235, -225, 290, -225, 290,
	-324, -324, 19, 19, 19, 19, -324, -119, -119, -119,
	-323, -74, 385, -82, 69, 69, 28, -170, 69, -324,
	-324, 47, -324, -324, 69, -149, -175, -82, -82, -82,
	68, -82, -166, -204, 189, -324, -111, -197, -166, -166,
	-166, -162, 70, 69, -225, -225, 45, -248, -246, -166,
	-125, -231, -230, 74, -230, 75, 75, 443, 68, -3,
	-105, -280, -281, -282, 81, 426, 89, 197, 198, 158,
	199, 200, 201, -279, -217, -217, -217, -311, -312, -310,
	239, 260, 261, 247, -309, -307, 256, 257, 258, 259,
	88, 74, 74, 74, -303, 230, 88, 239, 16, 23,
	-283, -186, -320, -320, 233, -294, -77, -241, -151, 161,
	162, -217, -217, -208, -248, 45, 72, -196, 145, 23,
	145, -151, -241, 30, 133, 27, -205, -146, 13, -85,
	-160, -160, 115, -149, 16, -230, 72, -119, -119, -119,
	-119, -324, -324, -324, -119, -324, 74, -119, -119, 45,
	-139, -136, 47, -3, -323, -204, -162, -166, 70, 69,
	-138, -110, -213, -324, -324, -324, -262, -261, 67, 152,
	81, -259, -161, -161, -251, 70, -231, -231, 70, 70,
	-260, -159, 19, -159, -282, 74, 201, 197, 201, 201,
	201, 201, 202, -299, 81, 237, -310, 248, 449, 232,
	263, 75, 75, 262, 31, 32, -307, 75, 75, 75,
	75, -304, 16, 427, -302, 238, 74, 74, -284, 38,
	-286, 39, -319, 23, -319, 251, 11, 70, 72, -218,
	-218, 68, -251, 68, 72, -204, -151, 29, 29, -323,
	-147, 14, 16, -112, -80, -156, 393, 394, -133, -324,
	-324, -324, -324, -73, 108, 427, -324, -324, 9, -136,
	-3, 70, -204, -111, -261, 72, -252, 74, 159, 70,
	188, -20, -3, -9, -10, -11, -12, -14, -49, -15,
	-16, -21, -22, -17, -55, -56, -64, -62, -63, -59,
	-58, -25, -23, -26, -18, -27, -28, -29, -33, -34,
	-24, 92, 147, 219, 277, 36, 36, 193, 194, 74,
	74, 29, 249, 127, 29, 75, 127, 392, 238, 74,
	72, 239, -227, 146, -287, 43, -285, -238, 42, 16,
	-292, -85, -260, -208, -260, -119, -266, -267, 173, -148,
	-82, -134, -84, -82, -146, -160, -324, -157, 91, -158,
	262, 392, -123, 75, 127, -157, -324, 425, 63, 428,
	-171, -324, 75, -105, -263, -262, 189, -159, -82, -82,
	72, -45, -209, 222, 223, 224, -205, -35, -20, 75,
	29, 75, 29, 252, 239, 23, -167, 75, -286, 16,
	-288, 40, 41, 74, 427, -112, 70, 68, 70, -324,
	69, -204, 69, -147, -158, 469, 445, 189, 469, 445,
	-118, 53, 426, 429, 68, -152, 191, 192, -36, -37,
	93, 94, 220, 221, 225, -217, 69, 490, 250, 250,
	74, 38, 74, 16, 16, 231, -146, -263, -260, -263,
	-267, 47, -84, 88, -204, 53, -166, -159, 72, 72,
	97, 95, -37, -82, -35, 19, 19, 19, 29, -205,
	97, -20, 74, 74, 29, 236, 21, -295, -147, 70,
	175, -158, 427, 70, -13, -19, -12, -9, -10, -11,
	277, 92, -35, 94, 490, -46, 75, -3, -44, -43,
	75, -46, 227, 89, 228, 72, -119, 253, -263, 176,
	428, -270, -271, 66, -159, -35, 490, -35, 97, 95,
	-38, -39, 96, -20, 69, 226, -295, -323, 429, -271,
	66, -270, 66, 10, 9, 490, 97, 490, 147, -35,
	97, 95, -39, -82, -43, -119, 172, -269, 160, 155,
	158, 30, -269, 97, 92, 490, 147, -35, 94, -324,
	-324, 154, 29, 83, 97, 490, -35, 147, 97, 490,
	147,
}

var yyDef = [...]int{
	34, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, -2, 684, 684, 684, 684, 684,
	684, 772, -2, 549, 0, 0, 0, 0, -2, 657,
	658, 659, 663, 664, 679, 681, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	55, 56, 1080, 0, 682, 671, 672, 0, 0, 1561,
	2, 1018, 0, 693, 686, 0, 1080, 1080, 0, 0,
	86, 0, 0, 0, 773, 0, 0, 0, 1078, 1078,
	0, 1078, 1078, 0, 1093, 0, 1075, 1089, 1090, 1091,
	0, 0, 1076, 0, 1076, 1076, 1076, 1076, 1076, 1076,
	1076, 0, 606, 790, 1102, 1103, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 0, 0, 0, 650,
	0, 616, 617, 618, 0, 620, 0, 0, 0, 0,
	0, 630, 633, 637, 0, 1018, 1018, 495, 496, 497,
	654, 655, 644, 656, 0, 0, 0, 0, 0, 683,
	305, 307, 0, 327, 0, 330, 333, 1108, 665, 0,
	0, 1133, 1134, 0, 0, 0, 0, 0, 1447, 180,
	244, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	0, 182, 182, 182, 1458, 182, 0, 182, 182, 182,
	182, 182, 243, 232, 233, 234, 235, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 0, 0, 0,
	1447, 684, 0, 688, 0, 1081, 660, 44, 0, 46,
	1034, 774, 775, 776, 0, 1024, 0, 0, 696, 694,
	695, 685, 0, 707, 729, 0, 799, 0, 804, 806,
	-2, -2, 0, 847, 848, 849, 850, 851, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 877, 878,
	879, 880, 881, 991, 992, 993, 994, 995, 996, 997,
	998, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 808,
	809, 988, 1047, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 979, 0, 950, 950,
	950, 950, 950, 950, 950, 950, 950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 68,
	790, 72, 1510, 0, 1052, -2, -2, 1054, 0, 0,
	0, -2, -2, -2, -2, 1319, -2, 988, 0, 87,
	1010, 684, 88, 0, 369, 370, 0, 1332, 519, 1100,
	1101, 1321, 1096, 1097, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1078, 0,
	587, 0, 588, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 0, 607, 608, 650,
	610, 0, 0, 1078, 1078, 0, 0, 0, 0, 521,
	522, 650, 650, 650, 650, 647, 0, 647, 627, 647,
	645, 646, 0, 632, 0, 0, 0, 640, 641, 666,
	0, 0, 673, 675, 676, 677, 678, 674, 0, 0,
	0, 309, 0, 0, 329, 311, 0, 314, 315, 316,
	317, 318, 319, 320, 321, 322, 323, 324, 325, 0,
	332, 0, 1106, 1109, 670, 1124, 1125, 0, 1135, 1136,
	186, 186, 0, 0, 0, 0, 149, 182, 0, 151,
	182, 182, 182, 0, 182, 182, 158, 159, 182, 161,
	162, 163, 164, 165, 182, 167, 168, 169, 182, 182,
	172, 182, 182, 175, 176, 177, 178, 179, 242, 186,
	0, 0, 186, 0, 0, 693, 41, 51, 0, 689,
	690, 0, 0, 0, 45, 0, 0, 50, 1562, 36,
	0, 0, 1019, 1022, 1023, 1011, 1012, 1015, 0, 0,
	691, 697, 698, 687, 0, 708, 0, 0, 0, 730,
	0, 732, 733, 734, 735, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 827, 828, 829,
	830, 831, 832, 805, 0, 819, 0, 0, 0, 868,
	869, 870, 871, 872, 873, 874, 0, 696, 0, 0,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 0, 0, 696, 0, 0, 845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 696, 0, 980, 0, 933, 942, 0, 934, 943,
	935, 944, 936, 0, 937, 945, 938, 946, 939, 940,
	947, 941, 0, 0, 0, 841, 0, 0, 70, 0,
	789, 0, 736, 738, 739, 740, -2, 0, 793, 839,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 0,
	73, 75, 0, 0, 1510, 1055, 1056, 469, 1069, 1070,
	1071, 0, 1067, 0, 1018, 693, 536, 0, 371, 0,
	0, 380, 459, 389, 390, 391, 452, 393, 452, 452,
	0, 452, 452, 452, 452, 452, 466, 466, 466, 466,
	466, 435, 436, 437, 438, 439, 0, 0, 412, 452,
	452, 452, 416, 442, 443, 444, 445, 446, 447, 448,
	449, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 454, 454, 456, 456, 456, 456, 456, 0, 0,
	518, 0, 1094, 84, 0, 92, 0, 93, 0, 0,
	98, 260, 246, 97, 0, 231, 0, 0, 0, 0,
	237, 602, 1077, 0, 595, 64, 596, 597, 598, 599,
	600, 239, 601, 791, 1104, 1105, 609, 651, 652, 0,
	0, 613, 614, 615, 523, 621, 622, 623, 629, 650,
	0, 0, 0, 754, 650, 631, 833, 634, 950, 0,
	668, 667, 0, 680, 306, 308, 310, 328, 0, 0,
	331, 334, 0, 0, 0, 0, 1127, 0, 1129, 1131,
	0, 0, 187, 188, 189, 0, 181, 0, 204, 245,
	0, 150, 0, 184, 152, 153, 154, 182, 156, 157,
	160, 166, 170, 171, 173, 174, 241, 0, 0, 0,
	0, 147, 0, 696, 0, 0, 661, 662, 47, 0,
	0, 1036, 1025, 0, 0, 0, 0, 1014, 1016, 1017,
	0, 0, 999, 0, 0, 699, 692, 38, 800, 801,
	803, 820, 0, 822, 824, 731, 709, 0, 989, -2,
	810, 811, 835, 836, 837, 0, 0, 0, 0, 833,
	815, 0, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 867, 964, 965, 0, 865, 866,
	875, 0, 0, 843, 703, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 841, 838, 0, 1046, 0, 0, 0,
	0, 915, 0, 0, 850, 991, 0, 850, 991, 0,
	0, 0, 0, 0, 0, 0, 0, 986, 983, 0,
	0, 951, 0, 0, 0, 0, 0, 842, 0, 0,
	0, 0, 788, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 1434, 749, 0, 793, 0, 0, 0, 797,
	0, 797, 67, 797, 69, 0, 792, 1053, 0, 0,
	0, 78, 79, 74, 1057, 0, 1063, 1064, 1065, 989,
	0, 1024, 696, 368, 537, 539, 542, 543, 544, 372,
	374, 375, 376, 0, -2, 510, 1444, 1488, -2, 502,
	1361, -2, -2, 379, 461, 460, 392, 0, 466, 466,
	452, 452, 452, 452, 421, 466, 424, 427, 428, 469,
	0, 469, 469, 469, 469, 466, 0, 0, 413, 414,
	415, 404, 0, 405, 454, 407, 0, 408, 409, 410,
	411, 516, 517, 0, 0, 0, 0, 0, 1079, 0,
	262, 263, 207, 100, 0, 0, 247, 0, 367, 0,
	589, 0, 591, 236, 593, 603, 604, 594, 0, 0,
	611, 612, 797, 0, 0, 624, 648, 649, 647, 650,
	0, 628, 642, 0, 0, 635, 0, 669, 312, 313,
	335, 70, 0, 1107, 1126, 0, 1130, 1132, 0, 190,
	192, 0, 141, 0, 0, 183, 0, 155, 0, 0,
	0, 0, 0, 691, 52, 550, 551, -2, 580, 1086,
	580, 580, 568, 486, 580, 0, 48, 0, 1035, 0,
	0, 0, 1020, 1021, 1013, 0, 1072, 1073, 1000, 1001,
	85, 700, 821, 823, 825, 0, 841, 812, 833, 816,
	0, 813, 0, 807, 0, 0, 715, 0, 715, 715,
	0, 901, 0, 902, 0, 715, 715, 0, 0, 0,
	0, 0, 0, 908, 909, 910, 911, 715, 715, 715,
	715, 0, 715, 715, 715, 0, 846, -2, 912, 913,
	914, 0, 0, 0, 0, 0, 957, 0, 0, 958,
	923, 0, 0, 0, 0, 0, 929, 1010, 0, 984,
	0, 0, 932, 952, 0, 0, 953, 954, 955, 956,
	1040, 0, 0, 0, 1029, 0, 797, 1048, 0, 0,
	737, 768, 770, 0, 765, 778, 779, 781, 0, 783,
	0, 785, 786, 756, 743, 840, 744, 0, 0, 0,
	793, 753, 0, 0, 0, 1010, 0, 797, 60, 61,
	0, 76, 77, 0, 0, 83, 470, 471, 0, 206,
	0, 540, 0, 373, 0, 503, 0, 0, 488, 502,
	498, 499, 502, 493, 503, 494, 0, 381, 0, 383,
	384, 385, 386, 387, 0, 0, 465, 0, 473, 475,
	0, 388, 462, 0, 469, 469, 466, 419, 420, 452,
	425, 469, 429, 0, 430, 431, 432, 433, 469, 0,
	450, 0, 0, 406, 0, 533, 0, 1095, 84, 84,
	0, 264, 265, 266, 0, 208, 209, 0, 0, 0,
	0, 110, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 65, 240, 619, 524, 525, 650, 626, 0, 834,
	636, 638, 639, 466, 0, 1128, 0, 0, 0, 0,
	0, 202, 185, 0, 0, 0, 0, 148, 699, 0,
	0, 502, 0, 569, 570, 0, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1087, 1088,
	0, 0, 0, 487, 0, 0, 1038, 1037, 1026, 37,
	797, 0, 710, 990, 0, 814, 0, 817, 715, 844,
	886, 716, 705, 0, 887, 888, 715, 711, 713, 903,
	890, 891, 904, 905, 906, 715, 715, 907, 895, 894,
	893, 896, 715, 899, 898, 900, 882, 0, 452, 452,
	969, 452, 456, 972, 452, 974, 452, 977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 981,
	931, 987, 0, 0, 0, 53, 0, 1040, 1027, 1042,
	1044, 0, 0, 0, 0, -2, 1299, 0, 760, 1010,
	0, 0, 0, 762, 769, 0, 0, 763, 0, 764,
	782, 784, 741, 0, 0, 745, 0, 0, -2, 752,
	0, 0, 0, 1018, 798, 59, 80, 81, 82, 538,
	541, 0, 504, 452, 452, 0, 508, 500, 509, 490,
	492, 0, 382, 463, 0, 472, 474, 476, 453, 417,
	418, 469, 426, 422, 467, 468, 434, 466, 0, 466,
	0, 457, 0, 520, 534, 0, 0, 90, 0, 0,
	215, 0, 211, 0, 0, 0, 118, 0, 101, 102,
	103, 105, 106, 0, 0, 0, 99, 0, 249, 0,
	252, 253, 590, 592, 625, 755, 1118, 787, 202, 191,
	193, 194, 202, 205, 142, 0, 143, 145, 0, 144,
	85, 552, 0, 577, 0, 0, 1094, 500, 0, -2,
	555, 560, 561, 562, 563, 564, 0, 575, 0, 557,
	0, 577, 0, 572, 0, 0, 0, 1002, 0, 85,
	85, 883, 818, 885, 0, 889, 1010, 0, 884, 892,
	897, 916, 966, 466, 970, 971, 973, 975, 976, 978,
	918, 917, 0, 0, 0, 0, 924, 0, 0, 0,
	0, 0, 0, 985, 0, 0, 0, 54, 0, 1045,
	-2, 0, 0, 71, 0, 1018, 1049, 1050, 1051, 766,
	0, 771, 0, 758, 0, 793, 750, 0, 0, 0,
	0, 58, 478, 0, 1015, 1015, 489, 502, 501, 0,
	464, 423, 469, 451, 469, 0, 0, 535, 0, 84,
	0, 84, 216, 217, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 210, 212, 213, 214, 136, 119, 120,
	0, 0, 0, 0, 111, 112, 0, 0, 0, 0,
	0, 107, 108, 109, 248, 0, 0, 251, 0, 0,
	1120, 1114, 195, 195, 0, 146, 0, 0, 554, 578,
	0, 380, 380, 0, 502, 0, 571, 0, 1084, 1085,
	0, 566, 577, 0, 0, 0, 1039, 1007, 0, 797,
	0, 701, 706, 717, 0, 967, 968, 0, 0, 0,
	0, 925, 926, 927, 959, 930, 982, 0, 0, 0,
	1043, 1028, 0, 1032, 0, 761, 57, 0, 757, 0,
	746, 748, 793, 794, 795, 796, 477, 481, 0, 486,
	0, 505, 506, 507, 491, 0, 440, 441, 455, 458,
	0, 91, 0, 0, 218, 219, 220, 221, 223, 224,
	0, 0, 0, 96, 0, 0, 121, 0, 0, 0,
	0, 131, 132, 133, 134, 135, 113, 114, 115, 116,
	117, 104, 0, 0, 250, 0, 255, 256, 1082, 1122,
	-2, 0, 139, 0, 140, 203, 0, 553, 579, 377,
	378, 0, 1094, 0, 556, 565, 567, 0, 574, 0,
	42, 0, 0, 1002, 85, 0, 0, 0, 714, 919,
	921, 920, 922, 0, 0, 0, 948, 949, 0, 1031,
	0, 767, 759, 751, 482, 483, 0, 485, 0, 479,
	0, 84, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 0, 0, 0, 0, 225, 226, 227, 228, 137,
	138, 122, 123, 0, 125, 126, 0, 0, 0, 258,
	0, 254, 756, 0, 1114, 0, 1116, 0, 1113, 0,
	196, 797, 0, 0, 0, 573, 0, 583, 0, 1008,
	1009, 1003, 1004, 1006, 1007, 702, 712, 718, 0, 721,
	0, 0, 0, 727, 0, 719, 928, 0, 0, 0,
	1041, -2, 484, 0, 89, 480, 267, 95, 0, 0,
	1096, 0, 0, 294, 295, 296, 1098, 0, 336, 0,
	127, 0, 129, 130, 257, 0, 35, 0, 1121, 0,
	1119, 0, 0, 1115, 0, 1002, 479, 0, 479, 582,
	0, 0, 0, 43, 0, 722, 723, 724, 725, 726,
	0, 960, 0, 963, 0, 84, 0, 0, 0, 278,
	0, 0, 0, 0, 0, 292, 0, 0, 124, 128,
	259, 1083, 1123, 0, 0, 0, 1007, 558, 0, 576,
	584, 0, 1005, 0, 728, 961, 0, 0, 268, 269,
	0, 0, 279, 0, 0, 0, 0, 0, 0, 1099,
	229, 337, 1117, 1111, 197, 198, 199, 201, 40, 479,
	0, 720, 0, 511, 84, 270, 271, 272, 273, 274,
	0, 276, 0, 0, 0, 288, 289, 290, 0, 297,
	299, 300, 301, 0, 303, 304, 293, 0, 559, 0,
	0, 512, 513, 0, 94, 0, 0, 0, 0, 0,
	0, 285, 0, 291, 0, 302, 200, 0, 962, 514,
	0, 515, 0, 0, 0, 0, 0, 280, 281, 0,
	0, 0, 286, 0, 298, 0, 0, 526, 528, 529,
	0, 0, 527, 275, 277, 0, 283, 0, 0, 585,
	586, 530, 531, 532, 0, 0, 0, 282, 0, 287,
	284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 490,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:472
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:513
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:519
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:525
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:532
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:538
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:549
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:556
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 42:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:578
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:582
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:592
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:598
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:604
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:608
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:624
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:636
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:648
		{
			yyVAL.str = InsertStr
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.str = ReplaceStr
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:658
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:668
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:672
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:676
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:715
		{
			yyVAL.partitions = nil
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:719
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:729
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:736
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:749
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:786
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:791
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:806
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:820
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:824
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:836
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:844
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:848
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:852
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:871
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.accountNames = nil
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.tlsOptionItems = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:897
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:913
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:917
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:934
		{
			yyVAL.accountLimitItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:958
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:971
		{
			yyVAL.passLockItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:999
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1011
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1015
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1019
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1023
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1048
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1063
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1068
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1072
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1076
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1082
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1087
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1091
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1095
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1099
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1103
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1193
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.strs = nil
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1254
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantAssumption = nil
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1331
		{
			yyVAL.boolean = false
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.boolean = true
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.boolean = false
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.boolean = true
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.procedureParams = nil
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1383
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1396
		{
			yyVAL.characteristics = nil
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1410
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1436
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1444
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1458
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1499
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1563
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1567
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1571
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1577
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1589
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1593
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1597
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1603
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1611
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1650
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1674
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1694
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1700
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1706
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1711
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1716
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1722
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1746
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1750
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1758
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1766
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1791
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1845
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1948
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2006
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2022
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2045
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2049
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2076
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = ColumnType{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2108
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.sqlVal = nil
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2460
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2468
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2478
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2486
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = ""
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.colKeyOpt = colKey
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2573
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2577
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2582
		{
			yyVAL.indexOptions = nil
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2617
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2631
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2639
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = yyDollar[1].str
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2738
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 512:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2742
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 513:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2746
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 514:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2750
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 515:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2754
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2778
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2840
		{
			yyVAL.boolean = true
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.boolean = true
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.boolean = false
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = yyDollar[1].str
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string("")
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2918
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2941
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2948
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2959
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 558:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2968
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 559:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2972
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3000
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3004
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3011
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3038
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3042
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3054
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.columnOrder = nil
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3069
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3074
		{
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
		}
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3080
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3096
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3100
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3120
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3132
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3138
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3146
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3158
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3166
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3174
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3182
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3190
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3198
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3207
		{

		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3225
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3241
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3249
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3253
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3257
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3261
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3265
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3281
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3289
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3293
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3297
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3301
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3305
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3310
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3319
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3323
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3327
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3331
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3345
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3354
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3358
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3367
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3371
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3391
		{
			yyVAL.boolean = false
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.boolean = true
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = ""
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3425
		{
			yyVAL.showFilter = nil
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3429
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3433
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = SessionStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = GlobalStr
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &Begin{}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.statement = &Begin{}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3477
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3481
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3487
		{
			yyVAL.statement = &Commit{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.statement = &Rollback{}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3509
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3513
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3517
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3529
		{
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3566
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3571
		{
			setAllowComments(yylex, true)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3581
		{
			yyVAL.bytes2 = nil
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = UnionStr
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = UnionAllStr
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = UnionDistinctStr
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3604
		{
			yyVAL.byt = 0
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.byt = 1
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3613
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3621
		{
			yyVAL.str = SQLCacheStr
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.str = DistinctStr
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = StraightJoinHint
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3649
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3657
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3680
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3698
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3708
		{
			p := yyDollar[3].exprs
			o := yyDollar[4].orderBy
			f := yyDollar[5].frame
			if p == nil && o == nil && f != nil {
				yylex.Error("window definition with frame must include OVER BY or PARTITION BY")
				return 1
			}
			yyVAL.over = &Over{PartitionBy: p, OrderBy: o, Frame: f}
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3721
		{
			yyVAL.exprs = nil
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3730
		{
			yyVAL.over = nil
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3734
		{
			yyVAL.over = yyDollar[1].over
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3739
		{
			yyVAL.frame = nil
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3754
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3800
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3908
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3912
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3918
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 748:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3923
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3938
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 751:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3942
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3950
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.expr = nil
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3965
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3970
		{
			yyVAL.columns = nil
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3990
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4007
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4011
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4015
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4027
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4037
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4042
		{
			yyVAL.empty = struct{}{}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = JoinStr
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = JoinStr
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = JoinStr
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = StraightJoinStr
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4079
		{
			yyVAL.str = LeftJoinStr
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4083
		{
			yyVAL.str = LeftJoinStr
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = RightJoinStr
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = RightJoinStr
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.str = NaturalJoinStr
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4111
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4117
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4131
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4137
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.indexHints = nil
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4146
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4150
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4154
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4159
		{
			yyVAL.expr = nil
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4185
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4193
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = ""
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4227
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4231
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4235
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4243
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4247
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4251
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = IsNullStr
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = IsNotNullStr
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = IsTrueStr
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = IsNotTrueStr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = IsFalseStr
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = IsNotFalseStr
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = EqualStr
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = LessThanStr
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = GreaterThanStr
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = LessEqualStr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = GreaterEqualStr
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = NotEqualStr
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = nil
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4340
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4350
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.selectExprs = nil
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4431
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4459
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4463
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4471
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4475
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4479
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4487
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4501
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4533
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4543
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4547
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4555
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4571
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4603
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4683
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4687
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4691
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4699
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4703
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 922:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4707
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4711
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4715
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4719
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 926:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4723
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 927:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4727
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 928:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 930:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4765
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4775
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4795
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4823
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 949:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4831
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = ""
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.str = BooleanModeStr
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4886
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 962:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4890
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.str = QueryExpansionStr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4910
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4926
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4960
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4965
		{
			yyVAL.expr = nil
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4974
		{
			yyVAL.str = string("")
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4978
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4988
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4994
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4999
		{
			yyVAL.expr = nil
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5003
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5017
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.expr = &NullVal{}
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5061
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5065
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5070
		{
			yyVAL.exprs = nil
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5074
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5084
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5090
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = nil
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5105
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5110
		{
			yyVAL.orderBy = nil
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5114
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5130
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5135
		{
			yyVAL.str = AscScr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.str = AscScr
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.str = DescScr
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5148
		{
			yyVAL.limit = nil
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5152
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5156
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5160
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = ""
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = ForUpdateStr
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = ShareModeStr
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5196
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5200
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5204
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5208
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5213
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5217
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5221
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5227
		{
			yyVAL.columns = nil
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5231
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5245
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5249
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5254
		{
			yyVAL.assignExprs = nil
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5258
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5264
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5268
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5274
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5284
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5290
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5300
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5304
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5310
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5313
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5323
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5340
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5353
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5366
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5382
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5386
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5396
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5400
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5404
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5411
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.expr = &Default{}
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5435
		{
			yyVAL.byt = 0
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.byt = 1
		}
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5440
		{
			yyVAL.byt = 0
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5442
		{
			yyVAL.byt = 1
		}
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5445
		{
			yyVAL.byt = 0
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5447
		{
			yyVAL.byt = 1
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = ""
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = IgnoreStr
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5455
		{
			yyVAL.sqlVal = nil
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5457
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.empty = struct{}{}
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.empty = struct{}{}
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5466
		{
			yyVAL.empty = struct{}{}
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5468
		{
			yyVAL.empty = struct{}{}
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.empty = struct{}{}
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = UniqueStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5476
		{
			yyVAL.str = FulltextStr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = SpatialStr
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = ""
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5486
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5488
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5535
		{
			yyVAL.str = string("")
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5537
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5540
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5545
		{
			yyVAL.EnclosedBy = nil
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5549
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5554
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5563
		{
			yyVAL.sqlVal = nil
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5572
		{
			yyVAL.sqlVal = nil
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.Fields = nil
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5585
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5590
		{
			yyVAL.Lines = nil
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5594
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5599
		{
			yyVAL.sqlVal = nil
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5603
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5609
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5619
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5625
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5629
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.lockType = LockRead
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5639
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5643
		{
			yyVAL.lockType = LockWrite
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5647
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5653
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5659
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5663
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5667
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6121
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
