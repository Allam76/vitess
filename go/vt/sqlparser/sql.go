// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

//line sql.y:58
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	flushOptions             []*FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_BINARY = 57457
const UNDERSCORE_UTF8MB4 = 57458
const INTERVAL = 57459
const JSON_EXTRACT_OP = 57460
const JSON_UNQUOTE_EXTRACT_OP = 57461
const CREATE = 57462
const ALTER = 57463
const DROP = 57464
const RENAME = 57465
const ANALYZE = 57466
const ADD = 57467
const MODIFY = 57468
const CHANGE = 57469
const SCHEMA = 57470
const TABLE = 57471
const INDEX = 57472
const INDEXES = 57473
const VIEW = 57474
const TO = 57475
const IGNORE = 57476
const IF = 57477
const PRIMARY = 57478
const COLUMN = 57479
const SPATIAL = 57480
const FULLTEXT = 57481
const KEY_BLOCK_SIZE = 57482
const CHECK = 57483
const ACTION = 57484
const CASCADE = 57485
const CONSTRAINT = 57486
const FOREIGN = 57487
const NO = 57488
const REFERENCES = 57489
const RESTRICT = 57490
const FIRST = 57491
const AFTER = 57492
const SHOW = 57493
const DESCRIBE = 57494
const EXPLAIN = 57495
const DATE = 57496
const ESCAPE = 57497
const REPAIR = 57498
const OPTIMIZE = 57499
const TRUNCATE = 57500
const FORMAT = 57501
const MAXVALUE = 57502
const REORGANIZE = 57503
const LESS = 57504
const THAN = 57505
const PROCEDURE = 57506
const TRIGGER = 57507
const TRIGGERS = 57508
const FUNCTION = 57509
const STATUS = 57510
const VARIABLES = 57511
const WARNINGS = 57512
const ERRORS = 57513
const KILL = 57514
const CONNECTION = 57515
const SEQUENCE = 57516
const EACH = 57517
const ROW = 57518
const BEFORE = 57519
const FOLLOWS = 57520
const PRECEDES = 57521
const DEFINER = 57522
const INVOKER = 57523
const INOUT = 57524
const OUT = 57525
const DETERMINISTIC = 57526
const CONTAINS = 57527
const READS = 57528
const MODIFIES = 57529
const SQL = 57530
const SECURITY = 57531
const TEMPORARY = 57532
const CLASS_ORIGIN = 57533
const SUBCLASS_ORIGIN = 57534
const MESSAGE_TEXT = 57535
const MYSQL_ERRNO = 57536
const CONSTRAINT_CATALOG = 57537
const CONSTRAINT_SCHEMA = 57538
const CONSTRAINT_NAME = 57539
const CATALOG_NAME = 57540
const SCHEMA_NAME = 57541
const TABLE_NAME = 57542
const COLUMN_NAME = 57543
const CURSOR_NAME = 57544
const SIGNAL = 57545
const RESIGNAL = 57546
const SQLSTATE = 57547
const DECLARE = 57548
const CONDITION = 57549
const CURSOR = 57550
const CONTINUE = 57551
const EXIT = 57552
const UNDO = 57553
const HANDLER = 57554
const FOUND = 57555
const SQLWARNING = 57556
const SQLEXCEPTION = 57557
const USER = 57558
const IDENTIFIED = 57559
const ROLE = 57560
const REUSE = 57561
const GRANT = 57562
const GRANTS = 57563
const REVOKE = 57564
const NONE = 57565
const ATTRIBUTE = 57566
const RANDOM = 57567
const PASSWORD = 57568
const INITIAL = 57569
const AUTHENTICATION = 57570
const SSL = 57571
const X509 = 57572
const CIPHER = 57573
const ISSUER = 57574
const SUBJECT = 57575
const ACCOUNT = 57576
const EXPIRE = 57577
const NEVER = 57578
const DAY = 57579
const OPTION = 57580
const OPTIONAL = 57581
const EXCEPT = 57582
const ADMIN = 57583
const PRIVILEGES = 57584
const MAX_QUERIES_PER_HOUR = 57585
const MAX_UPDATES_PER_HOUR = 57586
const MAX_CONNECTIONS_PER_HOUR = 57587
const MAX_USER_CONNECTIONS = 57588
const FLUSH = 57589
const FAILED_LOGIN_ATTEMPTS = 57590
const PASSWORD_LOCK_TIME = 57591
const REQUIRE = 57592
const PROXY = 57593
const ROUTINE = 57594
const TABLESPACE = 57595
const CLIENT = 57596
const SLAVE = 57597
const EVENT = 57598
const EXECUTE = 57599
const FILE = 57600
const RELOAD = 57601
const REPLICATION = 57602
const SHUTDOWN = 57603
const SUPER = 57604
const USAGE = 57605
const LOGS = 57606
const ENGINE = 57607
const ERROR = 57608
const GENERAL = 57609
const HOSTS = 57610
const OPTIMIZER_COSTS = 57611
const RELAY = 57612
const SLOW = 57613
const USER_RESOURCES = 57614
const NO_WRITE_TO_BINLOG = 57615
const CHANNEL = 57616
const BEGIN = 57617
const START = 57618
const TRANSACTION = 57619
const COMMIT = 57620
const ROLLBACK = 57621
const SAVEPOINT = 57622
const WORK = 57623
const RELEASE = 57624
const BIT = 57625
const TINYINT = 57626
const SMALLINT = 57627
const MEDIUMINT = 57628
const INT = 57629
const INTEGER = 57630
const BIGINT = 57631
const INTNUM = 57632
const SERIAL = 57633
const REAL = 57634
const DOUBLE = 57635
const FLOAT_TYPE = 57636
const DECIMAL = 57637
const NUMERIC = 57638
const DEC = 57639
const FIXED = 57640
const PRECISION = 57641
const TIME = 57642
const TIMESTAMP = 57643
const DATETIME = 57644
const YEAR = 57645
const CHAR = 57646
const VARCHAR = 57647
const BOOL = 57648
const CHARACTER = 57649
const VARBINARY = 57650
const NCHAR = 57651
const NVARCHAR = 57652
const NATIONAL = 57653
const VARYING = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const LONG = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const LOCAL = 57674
const LOW_PRIORITY = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const COLLATION = 57682
const DATABASES = 57683
const SCHEMAS = 57684
const TABLES = 57685
const FULL = 57686
const PROCESSLIST = 57687
const COLUMNS = 57688
const FIELDS = 57689
const ENGINES = 57690
const PLUGINS = 57691
const NAMES = 57692
const CHARSET = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_USER = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const REPLACE = 57715
const CONVERT = 57716
const CAST = 57717
const SUBSTR = 57718
const SUBSTRING = 57719
const TRIM = 57720
const LEADING = 57721
const TRAILING = 57722
const BOTH = 57723
const GROUP_CONCAT = 57724
const SEPARATOR = 57725
const TIMESTAMPADD = 57726
const TIMESTAMPDIFF = 57727
const OVER = 57728
const WINDOW = 57729
const GROUPING = 57730
const CURRENT = 57731
const AVG = 57732
const BIT_AND = 57733
const BIT_OR = 57734
const BIT_XOR = 57735
const COUNT = 57736
const JSON_ARRAYAGG = 57737
const JSON_OBJECTAGG = 57738
const MAX = 57739
const MIN = 57740
const STDDEV_POP = 57741
const STDDEV = 57742
const STD = 57743
const STDDEV_SAMP = 57744
const SUM = 57745
const VAR_POP = 57746
const VARIANCE = 57747
const VAR_SAMP = 57748
const CUME_DIST = 57749
const DENSE_RANK = 57750
const FIRST_VALUE = 57751
const LAG = 57752
const LAST_VALUE = 57753
const LEAD = 57754
const NTH_VALUE = 57755
const NTILE = 57756
const ROW_NUMBER = 57757
const PERCENT_RANK = 57758
const RANK = 57759
const MATCH = 57760
const AGAINST = 57761
const BOOLEAN = 57762
const LANGUAGE = 57763
const WITH = 57764
const QUERY = 57765
const EXPANSION = 57766
const UNUSED = 57767
const ARRAY = 57768
const DESCRIPTION = 57769
const EMPTY = 57770
const JSON_TABLE = 57771
const LATERAL = 57772
const MEMBER = 57773
const RECURSIVE = 57774
const ACTIVE = 57775
const BUCKETS = 57776
const CLONE = 57777
const COMPONENT = 57778
const DEFINITION = 57779
const ENFORCED = 57780
const EXCLUDE = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRIVILEGE_CHECKS_USER = 57805
const PROCESS = 57806
const REFERENCE = 57807
const REQUIRE_ROW_FORMAT = 57808
const RESOURCE = 57809
const RESPECT = 57810
const RESTART = 57811
const RETAIN = 57812
const SECONDARY = 57813
const SECONDARY_ENGINE = 57814
const SECONDARY_LOAD = 57815
const SECONDARY_UNLOAD = 57816
const SKIP = 57817
const SRID = 57818
const THREAD_PRIORITY = 57819
const TIES = 57820
const VCPU = 57821
const VISIBLE = 57822
const SYSTEM = 57823
const INFILE = 57824

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 50,
	-2, 1041,
	-1, 43,
	147, 1105,
	148, 1123,
	-2, 231,
	-1, 49,
	186, 676,
	187, 676,
	-2, 666,
	-1, 515,
	135, 1133,
	-2, 1127,
	-1, 516,
	135, 1134,
	-2, 1128,
	-1, 620,
	98, 1403,
	135, 1403,
	-2, 1089,
	-1, 621,
	98, 1520,
	135, 1520,
	-2, 1090,
	-1, 626,
	98, 1427,
	135, 1427,
	-2, 1091,
	-1, 627,
	98, 1474,
	135, 1474,
	-2, 1092,
	-1, 628,
	98, 1475,
	135, 1475,
	-2, 1093,
	-1, 629,
	98, 1353,
	135, 1353,
	-2, 1097,
	-1, 631,
	98, 1451,
	135, 1451,
	-2, 1099,
	-1, 1137,
	1, 773,
	5, 773,
	12, 773,
	13, 773,
	14, 773,
	15, 773,
	17, 773,
	19, 773,
	30, 773,
	31, 773,
	56, 773,
	57, 773,
	58, 773,
	59, 773,
	60, 773,
	62, 773,
	63, 773,
	66, 773,
	67, 773,
	69, 773,
	70, 773,
	405, 773,
	501, 773,
	-2, 803,
	-1, 1141,
	67, 67,
	69, 67,
	-2, 71,
	-1, 1387,
	135, 1136,
	-2, 1132,
	-1, 1552,
	44, 525,
	-2, 1365,
	-1, 1556,
	68, 525,
	-2, 1315,
	-1, 1559,
	68, 521,
	72, 521,
	-2, 1235,
	-1, 1560,
	68, 522,
	72, 522,
	-2, 1245,
	-1, 1677,
	44, 568,
	154, 570,
	156, 568,
	157, 568,
	-2, 603,
	-1, 1747,
	5, 51,
	-2, 869,
	-1, 2047,
	69, 1290,
	70, 1290,
	135, 1290,
	-2, 707,
	-1, 2070,
	1, 824,
	5, 824,
	12, 824,
	13, 824,
	14, 824,
	15, 824,
	17, 824,
	19, 824,
	30, 824,
	31, 824,
	56, 824,
	57, 824,
	58, 824,
	59, 824,
	60, 824,
	62, 824,
	63, 824,
	66, 824,
	67, 824,
	69, 824,
	70, 824,
	405, 824,
	501, 824,
	-2, 803,
	-1, 2172,
	154, 571,
	-2, 569,
	-1, 2233,
	5, 51,
	-2, 1061,
	-1, 2433,
	41, 1143,
	-2, 1141,
	-1, 2569,
	5, 51,
	-2, 1064,
}

const yyPrivate = 57344

const yyLast = 33345

var yyAct = [...]int{
	578, 80, 2764, 2714, 2738, 2586, 2618, 830, 1604, 2716,
	2728, 2486, 7, 2611, 2729, 2585, 2485, 6, 1989, 1544,
	2551, 516, 2453, 2633, 2572, 2484, 5, 2487, 8, 2556,
	2549, 518, 2616, 2340, 2083, 2245, 2380, 1786, 2433, 1815,
	1088, 2064, 418, 1963, 507, 645, 1602, 2040, 1972, 1511,
	1836, 1561, 2435, 577, 1614, 2132, 2298, 1505, 521, 2292,
	2321, 1262, 1365, 2573, 83, 2276, 2084, 401, 404, 127,
	2041, 2166, 127, 464, 443, 443, 1509, 862, 127, 500,
	1553, 80, 1971, 643, 2260, 106, 1896, 534, 446, 446,
	93, 1787, 1577, 2037, 1172, 1543, 1676, 1532, 1593, 1700,
	2049, 127, 2483, 3, 523, 1542, 2056, 1358, 1421, 2156,
	449, 846, 127, 1264, 1640, 641, 127, 648, 1484, 1941,
	127, 1549, 1307, 1373, 640, 1261, 1242, 2009, 1280, 1412,
	1879, 1589, 1488, 990, 127, 446, 622, 648, 2261, 1133,
	1152, 1495, 1476, 997, 1389, 127, 1137, 912, 1001, 1656,
	625, 891, 639, 1151, 963, 503, 1010, 1134, 993, 618,
	890, 817, 463, 85, 619, 421, 1312, 614, 420, 611,
	1143, 2786, 2782, 2772, 1982, 829, 2754, 1106, 2752, 2733,
	2709, 2641, 82, 499, 1305, 461, 69, 2270, 2277, 1423,
	1107, 36, 2412, 72, 39, 40, 2279, 2745, 2627, 36,
	36, 87, 88, 89, 90, 91, 36, 436, 2410, 430,
	441, 424, 413, 36, 2727, 2567, 2697, 2602, 2425, 2129,
	1907, 2626, 2030, 2413, 1781, 2117, 2529, 2552, 1722, 2225,
	816, 1311, 431, 2079, 2080, 72, 39, 40, 519, 1655,
	2365, 1782, 1627, 1627, 2078, 2566, 1824, 1507, 983, 1823,
	1529, 1530, 1825, 81, 1309, 1310, 1328, 41, 1354, 1355,
	1528, 81, 81, 819, 865, 822, 823, 940, 81, 850,
	851, 2282, 1153, 853, 1154, 81, 412, 509, 948, 2465,
	635, 866, 867, 2622, 1308, 2622, 411, 1025, 1024, 1034,
	1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 2617,
	109, 1036, 1862, 1563, 453, 1578, 852, 1654, 909, 2280,
	2281, 2283, 2284, 2285, 1583, 2010, 1578, 2619, 466, 2619,
	1684, 1678, 1679, 2212, 1677, 1680, 1681, 2210, 415, 593,
	410, 599, 601, 600, 597, 598, 596, 595, 594, 423,
	422, 425, 2623, 99, 2623, 1569, 1571, 1565, 1570, 429,
	602, 603, 460, 1938, 1565, 1350, 2012, 1349, 1348, 1347,
	1685, 1346, 395, 454, 1345, 1902, 433, 1930, 2349, 2293,
	437, 944, 945, 924, 1590, 2438, 2722, 2296, 2299, 2300,
	2301, 2302, 2155, 1935, 440, 1667, 872, 2643, 2642, 127,
	2139, 2294, 2295, 2592, 2533, 2310, 2590, 2317, 80, 80,
	1292, 875, 101, 118, 114, 115, 98, 116, 1668, 880,
	1339, 2649, 111, 110, 882, 1904, 2411, 2400, 2130, 2742,
	2523, 1615, 2308, 881, 2133, 2134, 2135, 2136, 2137, 2405,
	112, 2636, 2637, 127, 955, 2638, 2404, 956, 2403, 120,
	119, 863, 2402, 864, 866, 867, 2133, 2134, 2135, 2136,
	2137, 2401, 2399, 2725, 107, 2630, 2631, 979, 2519, 2520,
	2663, 2574, 1609, 2247, 108, 987, 873, 874, 2531, 1807,
	405, 2481, 1906, 924, 861, 426, 427, 428, 434, 1318,
	438, 439, 442, 858, 127, 2429, 2142, 947, 2407, 1608,
	103, 121, 104, 122, 1313, 1921, 1922, 2014, 857, 402,
	879, 883, 2018, 2711, 2013, 849, 2011, 859, 860, 2479,
	396, 2016, 406, 2720, 2692, 1045, 2715, 113, 1047, 2778,
	2705, 821, 820, 1171, 2015, 2525, 2768, 2322, 2323, 1315,
	2718, 1013, 1314, 2087, 1683, 1947, 2171, 1171, 1171, 2017,
	2019, 1949, 1949, 2787, 2333, 2784, 2278, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 923, 73, 1086, 414, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 2116, 1105, 1108, 1108, 1108, 1114, 1108, 1108,
	1114, 1108, 1114, 1123, 1124, 1125, 1126, 1127, 1128, 1869,
	1138, 2466, 1311, 2157, 1661, 2620, 1568, 2620, 73, 976,
	2565, 1578, 1046, 1592, 2591, 79, 1293, 876, 957, 1905,
	127, 127, 127, 79, 79, 1309, 1310, 2530, 100, 117,
	79, 934, 2426, 978, 1908, 2524, 648, 79, 985, 2408,
	403, 403, 924, 964, 2428, 2141, 2381, 2766, 398, 1144,
	2767, 2773, 2765, 403, 403, 1514, 1516, 1132, 1897, 1854,
	2383, 2755, 1171, 2717, 2719, 1170, 818, 625, 832, 2535,
	459, 1087, 625, 432, 1859, 1858, 109, 920, 2332, 1929,
	1926, 1479, 998, 399, 1910, 1909, 1662, 1250, 1248, 877,
	1165, 466, 1017, 1235, 1898, 1814, 1855, 1813, 974, 1812,
	814, 1841, 1841, 1924, 1140, 982, 824, 367, 2336, 1048,
	1049, 1860, 1841, 1847, 1841, 1757, 1231, 2197, 2189, 1848,
	1928, 2528, 1754, 1927, 931, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 2382, 1014, 1844,
	1828, 1624, 1820, 1515, 1717, 1156, 1623, 1705, 1690, 1368,
	1157, 1164, 1960, 1149, 1169, 1016, 842, 1533, 1089, 919,
	2151, 1036, 1109, 1111, 1113, 1115, 1117, 1119, 1120, 1122,
	1142, 1104, 970, 1147, 1841, 1110, 1112, 2106, 1116, 1118,
	1026, 1121, 929, 1036, 1857, 1524, 1899, 1900, 111, 110,
	1166, 2550, 1290, 2347, 969, 965, 966, 967, 968, 971,
	972, 973, 975, 2415, 1840, 1840, 2331, 831, 930, 1361,
	926, 1955, 1947, 2664, 2665, 1840, 1952, 1840, 2337, 1951,
	1954, 443, 2661, 2662, 1947, 1966, 648, 1489, 1171, 2562,
	2561, 1948, 1949, 513, 446, 446, 2107, 2416, 443, 1753,
	1048, 1049, 1396, 127, 927, 928, 127, 1048, 1049, 1009,
	1964, 446, 446, 1281, 127, 1007, 1244, 1394, 1395, 1393,
	989, 1631, 2054, 127, 127, 127, 127, 855, 1008, 1007,
	2053, 1230, 1009, 1263, 1243, 2775, 1300, 1840, 1266, 2032,
	1959, 1162, 884, 446, 1956, 848, 1009, 2758, 2739, 2757,
	390, 1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1026, 1008, 1007, 1036, 1025, 1024, 1034, 1035,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 443, 868,
	1036, 1009, 825, 1288, 834, 835, 836, 837, 838, 839,
	840, 446, 446, 446, 1477, 2771, 648, 2706, 1303, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1026, 1267, 1641, 1036,
	1282, 2634, 1337, 2673, 1752, 2672, 1751, 1237, 1632, 1276,
	1277, 1278, 1279, 1477, 856, 1770, 446, 1366, 1367, 2695,
	80, 446, 446, 1321, 1008, 1007, 1245, 2309, 2303, 847,
	1008, 1007, 1284, 1856, 1285, 1008, 1007, 2708, 368, 458,
	2779, 1252, 1009, 2094, 127, 371, 127, 1359, 1009, 648,
	81, 1270, 1271, 1009, 380, 388, 389, 1008, 1007, 1008,
	1007, 1392, 1343, 870, 2635, 2634, 1885, 127, 1004, 96,
	1702, 1703, 1704, 1013, 2595, 1009, 1386, 1009, 1269, 1008,
	1007, 2587, 2570, 1008, 1007, 1319, 1295, 1296, 80, 377,
	1298, 2423, 378, 2422, 2780, 386, 387, 1009, 1286, 2421,
	994, 1009, 1387, 995, 2588, 2526, 1301, 1029, 1030, 1031,
	1032, 1033, 1026, 1390, 95, 1036, 1008, 1007, 1370, 648,
	1416, 1417, 1352, 2034, 1316, 1342, 1320, 1317, 608, 609,
	2685, 1090, 2420, 2414, 1009, 2269, 2268, 1089, 1379, 1381,
	1382, 1413, 1371, 1414, 1380, 1372, 383, 1884, 1882, 1863,
	2589, 2527, 94, 1826, 915, 1827, 2684, 1344, 914, 1981,
	2646, 2644, 1338, 2601, 1391, 1341, 888, 384, 2522, 2521,
	1385, 2478, 1351, 539, 538, 541, 542, 543, 544, 1508,
	2430, 2398, 540, 545, 1138, 648, 648, 1356, 1138, 887,
	1087, 2359, 127, 2306, 2305, 2304, 1462, 1465, 2266, 2162,
	127, 127, 2099, 1880, 1478, 127, 127, 1651, 1383, 127,
	127, 127, 1297, 1268, 1430, 2671, 2670, 2532, 1434, 2476,
	2447, 1844, 2441, 2329, 1537, 2200, 2185, 2181, 641, 648,
	648, 988, 369, 1455, 2173, 1266, 2143, 1376, 1377, 2127,
	2126, 1519, 2125, 1915, 1914, 1521, 1645, 1419, 1629, 625,
	1387, 1427, 1628, 1513, 1415, 1294, 1291, 1260, 1259, 1258,
	1436, 1437, 1257, 466, 1246, 382, 372, 373, 1504, 393,
	1240, 1447, 1239, 374, 376, 1451, 370, 392, 391, 1238,
	1236, 1087, 910, 1140, 844, 1539, 409, 96, 1140, 407,
	1014, 1474, 1140, 1251, 1231, 2372, 2698, 127, 954, 1621,
	2256, 2691, 2608, 989, 2256, 2606, 989, 127, 2440, 127,
	127, 446, 446, 446, 1517, 1145, 127, 2392, 1538, 385,
	1089, 1579, 1580, 1581, 1582, 1460, 1461, 2391, 1514, 1516,
	1114, 2256, 2604, 1550, 2256, 2480, 2372, 2472, 2372, 2388,
	2372, 989, 1816, 127, 127, 127, 2122, 1557, 2100, 1531,
	1526, 1619, 1620, 1599, 1600, 1525, 1522, 920, 1761, 2372,
	2371, 1547, 1540, 2439, 1595, 1596, 1597, 1598, 127, 2656,
	127, 1146, 1647, 1148, 648, 2256, 2255, 84, 648, 2052,
	1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1026, 1536, 1816, 1036, 1591, 2237, 989, 1687, 1492,
	648, 1689, 989, 648, 2029, 2114, 2113, 1453, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1515, 989, 466, 2110,
	2111, 2192, 1653, 2110, 2109, 2191, 1816, 1706, 1386, 1715,
	989, 1715, 1633, 1492, 989, 1664, 1663, 1639, 1024, 1034,
	1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 1230,
	2052, 1036, 1453, 1648, 1387, 1453, 989, 1168, 1167, 1613,
	2613, 1491, 1601, 1025, 1024, 1034, 1035, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1026, 1363, 2231, 1036, 1497, 1500,
	1501, 1502, 1498, 2192, 1499, 1503, 1627, 1390, 2057, 2058,
	2038, 1646, 959, 2052, 1652, 1518, 2123, 1144, 958, 1612,
	1492, 918, 1140, 2112, 2066, 917, 1659, 1643, 918, 1025,
	1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1026, 1940, 1538, 1036, 1830, 1145, 1362, 1527, 1666, 1783,
	1785, 1669, 1715, 1138, 1138, 1138, 1138, 1138, 1391, 1775,
	1673, 1774, 1299, 1626, 1686, 1364, 984, 1340, 1694, 1508,
	920, 1808, 1711, 1306, 127, 127, 127, 127, 127, 1138,
	1249, 1692, 1693, 1247, 1150, 636, 127, 81, 2628, 2605,
	127, 2065, 2446, 2444, 127, 2271, 1565, 1789, 1707, 2243,
	127, 1146, 417, 1144, 1594, 2093, 1590, 466, 2057, 2058,
	1788, 1834, 924, 1610, 998, 1585, 1584, 1232, 907, 1818,
	1603, 1819, 1642, 1811, 648, 1497, 1500, 1501, 1502, 1498,
	1745, 1499, 1503, 2749, 2747, 1374, 1817, 2730, 1803, 2121,
	2060, 2038, 1886, 1254, 960, 625, 1810, 81, 921, 916,
	1799, 1784, 1701, 2063, 2062, 1800, 1796, 1140, 1140, 1140,
	1140, 1140, 1795, 1721, 1723, 80, 2667, 1843, 1845, 2625,
	448, 1455, 1969, 1140, 1733, 1734, 1735, 1736, 1769, 1797,
	504, 505, 2362, 1140, 1798, 648, 1801, 1691, 1501, 1502,
	2655, 2234, 1790, 1564, 446, 1793, 1231, 1699, 1831, 1698,
	1002, 1003, 576, 1746, 2328, 1802, 2259, 2180, 127, 446,
	443, 1791, 1792, 2179, 1794, 1846, 2098, 2097, 1838, 1864,
	1865, 2089, 2540, 1156, 446, 2537, 1871, 1771, 1821, 1000,
	1913, 2600, 1833, 1829, 1243, 1872, 1878, 1874, 1875, 1876,
	1877, 2599, 2434, 2645, 446, 1920, 648, 2432, 80, 1912,
	2518, 2517, 446, 408, 1839, 1842, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 1918, 1888, 1036, 1967,
	1968, 648, 648, 1873, 1287, 1163, 1881, 127, 2417, 2418,
	991, 905, 889, 1990, 1883, 1974, 886, 648, 885, 845,
	2338, 2680, 992, 2451, 632, 2450, 2229, 1386, 644, 1903,
	1366, 1367, 2657, 466, 648, 1650, 2311, 1606, 1253, 1917,
	2593, 466, 2436, 2312, 1889, 1428, 1429, 1638, 833, 1002,
	1003, 2679, 96, 1387, 1357, 1916, 1439, 1440, 1441, 1442,
	1234, 980, 981, 1697, 2678, 2677, 1925, 2395, 1672, 1452,
	1454, 1696, 1923, 2043, 80, 871, 1459, 501, 1931, 2648,
	1087, 1837, 2647, 2597, 2541, 2459, 1937, 1939, 1950, 1944,
	1961, 1962, 1945, 1359, 1965, 648, 2455, 648, 2068, 502,
	84, 2454, 2341, 2072, 2073, 2074, 1942, 1953, 1958, 2039,
	1816, 2751, 2750, 1976, 1980, 1975, 2051, 1789, 2160, 1936,
	648, 1984, 2031, 1891, 1892, 1893, 2042, 1934, 1933, 1758,
	1788, 1755, 1670, 1283, 1005, 2750, 2751, 2469, 1974, 2096,
	648, 1360, 648, 636, 648, 455, 648, 2077, 457, 86,
	2071, 2067, 1388, 2497, 52, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	2075, 2021, 2020, 2499, 19, 55, 2044, 2498, 18, 2028,
	2091, 2046, 1, 2092, 2500, 20, 1660, 2119, 2120, 1991,
	2061, 1323, 1994, 1995, 1996, 2501, 21, 1999, 127, 2069,
	2496, 15, 443, 2495, 14, 2291, 2088, 2290, 2090, 1599,
	2297, 1600, 2489, 10, 2512, 34, 446, 2128, 2082, 2510,
	33, 127, 446, 2509, 32, 2131, 2081, 2508, 28, 2507,
	27, 2506, 26, 1468, 2504, 23, 127, 2138, 446, 1901,
	648, 446, 1480, 2503, 22, 446, 446, 2307, 446, 2103,
	2033, 2140, 2101, 2102, 2505, 24, 2494, 13, 1241, 2105,
	2491, 12, 2145, 2490, 11, 648, 2108, 1139, 2406, 127,
	648, 828, 1644, 2488, 9, 1611, 911, 648, 648, 2598,
	2536, 2538, 2124, 2169, 1025, 1024, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 2076, 2431, 1036, 2313,
	2275, 2190, 2274, 1895, 1894, 906, 2148, 2193, 1304, 1943,
	1946, 1622, 1682, 2548, 1671, 124, 961, 962, 2146, 2170,
	1551, 2223, 1231, 2184, 400, 1541, 638, 2164, 92, 2163,
	1630, 854, 375, 1548, 1674, 1852, 2539, 908, 1851, 1861,
	1688, 1562, 2150, 1850, 1849, 2154, 2534, 1853, 1176, 2158,
	2159, 1174, 2161, 1175, 1173, 1178, 1177, 379, 613, 1158,
	127, 2580, 637, 2086, 2199, 1006, 815, 102, 56, 2330,
	1957, 451, 452, 97, 105, 381, 1044, 648, 1695, 1822,
	827, 623, 624, 616, 648, 648, 648, 986, 1789, 2560,
	2610, 841, 2629, 648, 996, 2553, 1768, 1713, 2251, 2252,
	2253, 1788, 1716, 2208, 1103, 648, 2238, 1718, 1719, 1475,
	2249, 80, 1724, 1725, 1726, 1727, 1728, 1729, 522, 2262,
	1732, 1806, 2346, 2230, 2555, 1737, 1738, 1739, 1740, 1378,
	1742, 1743, 1744, 127, 2239, 537, 536, 1747, 1748, 1749,
	1750, 535, 532, 2186, 533, 2254, 1756, 2621, 1637, 1759,
	1760, 2250, 509, 1369, 1765, 1766, 1780, 1018, 2115, 520,
	1772, 511, 1773, 1136, 1129, 1776, 1777, 1831, 1778, 1779,
	2168, 1649, 446, 1496, 2263, 1494, 1493, 1837, 1255, 612,
	2175, 2177, 1138, 2059, 2055, 1506, 1135, 1804, 1805, 70,
	2168, 2264, 2265, 869, 2267, 397, 2224, 2464, 38, 2339,
	2286, 648, 456, 127, 506, 25, 2326, 1974, 17, 648,
	2287, 2288, 2289, 2272, 2226, 878, 2314, 16, 1675, 2218,
	826, 42, 2043, 1089, 44, 2043, 2367, 2320, 1708, 1709,
	1710, 2343, 2344, 2240, 2241, 2334, 2319, 2242, 2068, 2342,
	2244, 1890, 1607, 2088, 2579, 2327, 1599, 2335, 1089, 648,
	2315, 632, 2324, 2325, 2316, 648, 632, 1159, 2713, 892,
	127, 2737, 127, 2632, 31, 30, 29, 2502, 648, 2370,
	2511, 2394, 2364, 2396, 2493, 2042, 2318, 466, 2042, 2492,
	1485, 2700, 2699, 648, 4, 977, 1140, 71, 35, 2348,
	634, 2373, 2363, 2, 0, 0, 2393, 0, 0, 0,
	0, 2387, 0, 1762, 1763, 1764, 0, 0, 2369, 2379,
	2385, 2386, 1513, 2384, 2375, 2374, 1025, 1024, 1034, 1035,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 2366, 2452,
	1036, 2397, 0, 0, 0, 843, 0, 0, 0, 0,
	0, 2409, 0, 0, 2419, 648, 0, 0, 0, 2424,
	0, 0, 0, 2389, 2427, 2390, 2043, 0, 80, 2437,
	0, 0, 0, 0, 0, 0, 2442, 2443, 2445, 0,
	0, 0, 2456, 0, 0, 0, 0, 0, 2457, 913,
	0, 0, 0, 0, 648, 2228, 2449, 80, 0, 0,
	0, 0, 2482, 0, 2168, 0, 1979, 0, 0, 0,
	0, 2458, 1987, 2470, 0, 0, 2475, 0, 0, 2042,
	0, 0, 1997, 1998, 2168, 2474, 2477, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 2008, 0, 0,
	1138, 0, 1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1026, 0, 0, 1036, 1233, 446, 0,
	0, 127, 0, 0, 0, 0, 648, 0, 648, 0,
	2471, 0, 0, 0, 0, 2045, 0, 0, 0, 2544,
	0, 2546, 0, 0, 0, 1919, 0, 466, 0, 466,
	2558, 2575, 2545, 0, 0, 2086, 0, 2543, 2542, 0,
	2563, 127, 0, 0, 0, 0, 2559, 2568, 0, 0,
	2086, 0, 0, 0, 0, 1789, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 509, 0, 2584, 0, 648, 0, 0,
	0, 0, 0, 0, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 648, 0, 648, 2596, 2594, 0, 0, 0,
	0, 2614, 0, 2603, 0, 0, 1131, 0, 1141, 0,
	0, 0, 0, 0, 0, 2624, 0, 0, 2022, 2023,
	0, 2024, 2025, 0, 0, 2026, 0, 0, 0, 0,
	2475, 0, 0, 0, 0, 0, 0, 0, 2035, 2036,
	0, 0, 0, 0, 2660, 0, 0, 648, 0, 2651,
	644, 2653, 0, 0, 0, 2659, 80, 2650, 2669, 2654,
	2652, 0, 80, 2658, 2554, 2557, 0, 2683, 0, 1089,
	648, 2676, 0, 2070, 0, 2666, 2674, 443, 1990, 644,
	2681, 0, 648, 0, 2668, 0, 0, 2194, 0, 0,
	2693, 446, 0, 2690, 80, 2639, 2694, 0, 648, 80,
	0, 2704, 0, 2086, 0, 2086, 2703, 2710, 648, 2707,
	0, 0, 2689, 0, 0, 2702, 0, 2701, 2095, 0,
	1418, 2204, 2726, 2576, 2577, 0, 80, 0, 2731, 80,
	80, 2723, 2213, 2214, 80, 2683, 2724, 0, 2219, 2740,
	0, 2732, 0, 0, 2734, 0, 2744, 0, 0, 0,
	443, 0, 0, 0, 80, 2232, 2233, 80, 2235, 2683,
	2748, 2236, 2759, 2746, 446, 2761, 0, 0, 632, 0,
	0, 0, 2756, 80, 2769, 80, 0, 0, 2683, 80,
	2683, 2248, 2147, 0, 0, 2743, 1481, 1482, 0, 0,
	0, 0, 0, 80, 2774, 0, 80, 0, 2683, 0,
	0, 2712, 0, 80, 0, 0, 0, 80, 2683, 0,
	0, 2783, 2683, 632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2557, 0, 0, 0, 644, 0, 613,
	644, 644, 1256, 1566, 1567, 0, 1572, 1573, 1574, 1575,
	1576, 2195, 0, 0, 2675, 0, 0, 2227, 0, 1272,
	1273, 1274, 1275, 0, 1586, 1587, 1588, 0, 1985, 1986,
	0, 0, 0, 0, 2086, 1992, 1993, 0, 922, 0,
	0, 0, 0, 0, 0, 0, 0, 2000, 2001, 2002,
	2003, 0, 2005, 2006, 2007, 2217, 0, 0, 0, 0,
	0, 2220, 2221, 2222, 1025, 1024, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 0, 0, 1036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 999,
	0, 0, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2354, 2355, 2356, 0, 2358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2215, 0, 2760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2376, 2377, 2378, 0, 125, 0, 0,
	394, 0, 0, 0, 0, 1658, 125, 0, 0, 1658,
	1353, 0, 1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1026, 2027, 0, 1036, 0, 0, 465,
	0, 1658, 0, 1375, 1658, 0, 0, 510, 0, 0,
	615, 633, 0, 0, 125, 0, 0, 0, 125, 1025,
	1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1026, 644, 125, 1036, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 1025, 1024, 1034, 1035, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1026, 0, 0, 1036, 0,
	0, 0, 2460, 2461, 2462, 2463, 0, 0, 0, 0,
	0, 0, 2467, 2468, 0, 0, 0, 0, 0, 2350,
	2351, 2352, 2353, 0, 0, 0, 0, 2357, 0, 0,
	0, 2360, 2361, 0, 0, 0, 0, 0, 0, 1025,
	1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1026, 0, 0, 1036, 0, 0, 0, 0, 0, 2196,
	0, 0, 0, 0, 0, 0, 0, 2198, 1490, 1977,
	0, 0, 0, 0, 0, 0, 0, 2201, 2202, 0,
	0, 0, 1520, 0, 2203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 0, 1025, 1024, 1034,
	1035, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 0,
	0, 1036, 0, 0, 0, 0, 2564, 0, 1712, 0,
	0, 0, 0, 2569, 0, 0, 0, 0, 0, 632,
	1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1026, 0, 0, 1036, 644, 1025, 1024, 1034, 1035,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1026, 0, 0,
	1036, 0, 1866, 1867, 1868, 1870, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1616, 0, 1617, 1618, 0, 0, 0,
	0, 0, 1625, 0, 0, 0, 0, 0, 0, 0,
	2607, 0, 0, 0, 0, 0, 1887, 0, 0, 0,
	0, 0, 2615, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 925, 932, 933, 935, 936, 937, 938, 939,
	0, 941, 942, 943, 913, 946, 0, 949, 950, 951,
	952, 953, 0, 0, 2547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 1020, 0,
	1023, 125, 0, 0, 0, 0, 0, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 0, 1021, 1022, 1019, 0, 0,
	0, 0, 644, 644, 0, 1025, 1024, 1034, 1035, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1026, 0, 644, 1036,
	1420, 1425, 1426, 0, 0, 0, 0, 1431, 1432, 1433,
	644, 1435, 465, 0, 1438, 1988, 0, 0, 0, 1443,
	1444, 1445, 1446, 0, 1448, 1449, 1450, 0, 0, 0,
	0, 0, 1456, 1457, 1458, 0, 0, 0, 1464, 1467,
	0, 1472, 1473, 0, 0, 0, 0, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 1483, 78, 1486, 1487,
	0, 41, 0, 0, 632, 0, 644, 0, 2050, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2050, 0, 0, 2776, 2777, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 0, 644, 0, 644, 0, 2085, 0, 0,
	0, 0, 0, 2513, 0, 0, 2736, 2739, 2735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 125, 125,
	125, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	0, 0, 0, 633, 2721, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 2153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2762, 0,
	0, 0, 0, 0, 0, 0, 2178, 0, 0, 0,
	0, 2183, 0, 0, 1911, 0, 0, 0, 2187, 2188,
	0, 0, 57, 58, 0, 2515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 36, 37, 72, 39, 40,
	0, 0, 0, 0, 2205, 2206, 0, 2207, 0, 59,
	2209, 0, 2211, 0, 0, 78, 68, 0, 0, 41,
	63, 64, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2516, 75, 0, 53, 54, 61,
	0, 62, 0, 50, 0, 632, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2246, 0,
	1714, 0, 0, 0, 0, 2246, 2246, 2246, 1720, 2257,
	2258, 0, 0, 0, 644, 0, 0, 1730, 1731, 0,
	0, 125, 0, 0, 125, 0, 2246, 0, 1741, 0,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 125, 125, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1767, 0, 43, 74, 46,
	45, 48, 1322, 0, 0, 1325, 1326, 1327, 0, 1329,
	1330, 0, 73, 1331, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 1333, 1334, 0, 1335, 1336, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 644, 0, 0, 0, 0, 0, 0, 0,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 0, 0, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2368, 0, 125, 0, 465, 0, 2246, 2144, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 2085,
	0, 0, 2149, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 1265, 0, 0, 0,
	0, 0, 51, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 2182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	1424, 1424, 0, 0, 0, 1424, 1424, 1424, 1424, 1424,
	1424, 0, 0, 1424, 0, 0, 2448, 0, 1424, 1424,
	1424, 1424, 0, 1424, 1424, 1424, 0, 0, 0, 0,
	0, 1424, 1424, 1424, 0, 0, 0, 1424, 1424, 0,
	1424, 1424, 0, 0, 0, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2473, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 1424, 1424, 1424, 1424, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 125, 465,
	0, 0, 0, 125, 125, 0, 0, 125, 1523, 1265,
	633, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1265, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 0, 2085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 125, 125, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1665, 0, 1198,
	0, 1634, 1635, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2609, 0, 2612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 465, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1265, 0,
	0, 2246, 0, 0, 0, 0, 0, 0, 0, 0,
	1185, 0, 0, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	0, 1199, 0, 0, 0, 0, 0, 1424, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 1424, 0, 0,
	1185, 0, 0, 0, 0, 0, 0, 1424, 0, 0,
	0, 1424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1424, 0, 0, 0, 0, 0,
	0, 1199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 125, 125, 125, 125, 125, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 125, 0,
	0, 0, 465, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 1215, 1216, 1217, 1218, 1219, 1220, 2571, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 0, 1200, 1201, 1202,
	1203, 1179, 1183, 1213, 1180, 1186, 1182, 1184, 1181, 0,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1212, 1215, 1216, 1217, 1218, 1219, 1220, 0, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 125, 1200, 1201, 1202,
	1203, 1179, 1183, 1213, 1180, 1186, 1182, 1184, 1181, 0,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 0, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 1424, 0, 0, 0,
	0, 0, 0, 59, 0, 1424, 0, 1265, 0, 78,
	0, 81, 0, 41, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2513, 0, 1214, 0, 0,
	2785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 0, 0, 0, 2513, 0, 0, 0, 0,
	2781, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 57, 58, 36, 2515, 72, 39,
	40, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	59, 66, 0, 67, 0, 0, 78, 0, 0, 0,
	41, 0, 36, 0, 72, 39, 40, 0, 0, 125,
	0, 0, 0, 0, 57, 58, 59, 2515, 68, 0,
	0, 0, 78, 0, 125, 0, 41, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 81, 0,
	0, 36, 0, 72, 39, 40, 2516, 75, 0, 53,
	54, 61, 0, 62, 0, 59, 0, 125, 68, 0,
	0, 78, 2513, 0, 81, 41, 0, 2770, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2516, 75, 2513, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2514, 0, 0, 0, 2513, 0, 0,
	0, 0, 2753, 0, 43, 74, 46, 45, 48, 49,
	77, 76, 0, 0, 73, 0, 47, 0, 465, 2514,
	0, 0, 633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 77, 76, 0, 0,
	0, 0, 47, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 2514, 0,
	0, 57, 58, 79, 2515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 77, 76, 0, 66, 0,
	67, 47, 0, 0, 0, 0, 0, 57, 58, 0,
	2515, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 66, 68, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2515,
	0, 68, 0, 2516, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2516,
	75, 125, 53, 54, 61, 0, 62, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2516, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 125,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 633,
	0, 2578, 0, 0, 0, 0, 0, 0, 0, 125,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 2581, 2582, 2583, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	771, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 796, 726,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 0, 0, 0, 0, 647, 0, 1545, 1546,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 1832, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 716, 204, 359, 792, 713, 712, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 813, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 0,
	0, 647, 0, 1545, 1546, 0, 0, 0, 0, 0,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	2047, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 796, 726,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 81, 0, 989, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 0, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 716, 204, 359, 792, 713, 712, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 2048, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 2345, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	771, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 796, 726,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 0, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 1983, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 716, 204, 359, 792, 713, 712, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 813, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 1973, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	771, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 796, 726,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 0, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 1524, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 716, 204, 359, 792, 713, 712, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 813, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 0,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 1384, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	771, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 796, 726,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 0, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 716, 204, 359, 792, 713, 712, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 813, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 0,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	771, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 1556, 1560,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 0, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 1559, 204, 359, 792, 713, 712, 1554, 0,
	1555, 192, 214, 646, 128, 142, 1552, 1558, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 813, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 795, 771, 329, 718, 798, 682,
	704, 811, 707, 710, 752, 665, 731, 256, 702, 666,
	0, 686, 655, 695, 656, 683, 720, 176, 681, 773,
	734, 797, 213, 747, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 796, 726, 0, 805, 216, 0, 743,
	806, 316, 240, 0, 0, 722, 782, 729, 769, 717,
	754, 674, 742, 800, 703, 749, 801, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 746, 794, 698, 748, 751, 653, 745, 0,
	660, 667, 810, 789, 689, 690, 691, 0, 0, 0,
	0, 0, 0, 0, 721, 730, 763, 714, 348, 267,
	283, 304, 709, 275, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 687, 0, 740, 0, 0, 0, 668,
	661, 0, 0, 719, 0, 0, 0, 673, 652, 688,
	765, 0, 650, 241, 144, 770, 788, 716, 204, 359,
	792, 713, 712, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 762, 298, 700, 651, 774, 684,
	696, 167, 692, 290, 260, 347, 0, 737, 289, 217,
	337, 758, 793, 346, 705, 776, 356, 361, 0, 727,
	671, 313, 177, 0, 133, 0, 274, 172, 209, 715,
	753, 685, 164, 760, 741, 781, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 711, 301, 300, 706, 199, 768,
	744, 657, 282, 756, 205, 132, 326, 364, 150, 211,
	331, 649, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 697, 757, 767, 280, 303,
	333, 152, 320, 693, 694, 699, 764, 292, 775, 786,
	799, 224, 179, 182, 193, 200, 750, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 658, 0, 318, 350, 366, 154, 680, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	678, 679, 676, 0, 677, 732, 733, 802, 803, 804,
	766, 670, 0, 783, 784, 0, 0, 0, 0, 0,
	772, 790, 791, 755, 812, 708, 675, 659, 662, 663,
	664, 672, 723, 724, 736, 739, 779, 778, 777, 780,
	785, 808, 807, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 131, 140, 215, 813,
	281, 185, 351, 654, 174, 0, 725, 728, 738, 761,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 759, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 787, 795,
	771, 329, 718, 798, 682, 704, 811, 707, 710, 752,
	665, 731, 256, 702, 666, 0, 686, 655, 695, 656,
	683, 720, 176, 681, 773, 734, 797, 213, 747, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 796, 726,
	0, 805, 216, 0, 743, 806, 316, 240, 0, 0,
	722, 782, 729, 769, 717, 754, 674, 742, 800, 703,
	749, 801, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 746, 794, 698,
	748, 751, 653, 745, 0, 660, 667, 810, 789, 689,
	690, 691, 0, 0, 0, 0, 0, 0, 0, 721,
	730, 763, 714, 348, 267, 283, 304, 709, 275, 701,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	740, 0, 0, 0, 668, 661, 0, 0, 719, 0,
	0, 0, 673, 652, 688, 765, 0, 650, 241, 144,
	770, 788, 716, 204, 359, 792, 713, 712, 277, 0,
	323, 192, 214, 646, 128, 142, 642, 191, 252, 762,
	298, 700, 651, 774, 684, 696, 167, 692, 290, 260,
	347, 0, 737, 289, 217, 337, 758, 793, 346, 705,
	776, 356, 361, 0, 727, 671, 313, 177, 0, 133,
	0, 274, 172, 209, 715, 753, 685, 164, 760, 741,
	781, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 711,
	301, 300, 706, 199, 768, 744, 657, 282, 756, 205,
	132, 326, 364, 150, 211, 331, 649, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	697, 757, 767, 280, 303, 333, 152, 320, 693, 694,
	699, 764, 292, 775, 786, 799, 224, 179, 182, 193,
	200, 750, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 658, 0, 318,
	350, 366, 154, 680, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 678, 679, 676, 0, 677,
	732, 733, 802, 803, 804, 766, 670, 0, 783, 784,
	0, 0, 0, 0, 0, 772, 790, 791, 755, 812,
	708, 675, 659, 662, 663, 664, 672, 723, 724, 736,
	739, 779, 778, 777, 780, 785, 808, 807, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 131, 140, 215, 813, 281, 185, 351, 654, 174,
	0, 725, 728, 738, 761, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 759, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 787, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 517, 0, 0, 0, 176, 514, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	328, 0, 0, 0, 592, 216, 0, 0, 494, 316,
	240, 0, 0, 0, 0, 579, 580, 0, 0, 0,
	0, 0, 0, 1534, 0, 81, 0, 0, 0, 515,
	539, 538, 541, 542, 543, 544, 0, 0, 498, 540,
	545, 574, 575, 1535, 0, 0, 512, 530, 0, 591,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 267, 283, 304,
	0, 275, 0, 0, 0, 0, 0, 527, 528, 0,
	0, 0, 0, 606, 0, 529, 0, 0, 524, 525,
	526, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 582, 0, 0, 204, 359, 0, 0,
	604, 277, 0, 323, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 298, 589, 0, 0, 0, 0, 167,
	0, 290, 260, 347, 581, 0, 289, 217, 337, 0,
	0, 346, 0, 488, 356, 361, 0, 0, 0, 313,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 312, 335, 151, 330, 239, 245,
	161, 163, 162, 143, 307, 334, 156, 165, 317, 294,
	324, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 301, 300, 0, 199, 0, 0, 0,
	282, 0, 205, 132, 326, 364, 150, 211, 331, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 280, 303, 333, 152,
	320, 0, 0, 0, 0, 292, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 287, 321, 353, 0, 145,
	134, 327, 345, 157, 302, 305, 362, 288, 137, 343,
	322, 237, 206, 207, 135, 0, 136, 285, 175, 189,
	170, 255, 0, 188, 276, 340, 341, 168, 365, 146,
	355, 139, 147, 354, 248, 0, 247, 357, 336, 344,
	238, 226, 0, 138, 342, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 318, 350, 366, 154, 0, 306, 332, 0,
	0, 155, 187, 180, 271, 246, 148, 198, 315, 210,
	218, 284, 363, 259, 291, 158, 349, 314, 593, 605,
	599, 601, 600, 597, 598, 596, 595, 594, 607, 583,
	584, 585, 586, 587, 0, 0, 0, 590, 0, 602,
	603, 0, 0, 0, 0, 546, 547, 548, 549, 550,
	554, 555, 559, 560, 568, 567, 566, 569, 570, 572,
	571, 573, 551, 552, 553, 556, 557, 558, 561, 562,
	565, 563, 564, 588, 131, 140, 215, 0, 281, 185,
	351, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	286, 293, 295, 296, 297, 299, 308, 309, 310, 311,
	319, 325, 338, 339, 358, 360, 36, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 517, 0, 0, 0, 176, 514,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 328, 0, 0, 0, 592, 216, 0,
	0, 494, 316, 240, 0, 0, 0, 0, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 515, 539, 538, 541, 542, 543, 544, 0,
	0, 498, 540, 545, 574, 575, 0, 0, 0, 512,
	530, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	267, 283, 304, 0, 275, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 0, 606, 0, 529, 0,
	0, 524, 525, 526, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 582, 0, 0, 204,
	359, 0, 0, 604, 277, 0, 323, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 298, 589, 0, 0,
	0, 0, 167, 0, 290, 260, 347, 581, 0, 289,
	217, 337, 0, 0, 346, 0, 488, 356, 361, 0,
	0, 0, 313, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 312, 335, 151,
	330, 239, 245, 161, 163, 162, 143, 307, 334, 156,
	165, 317, 294, 324, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 301, 300, 0, 199,
	0, 0, 0, 282, 0, 205, 132, 326, 364, 150,
	211, 331, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 280,
	303, 333, 152, 320, 0, 0, 0, 0, 292, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 287, 321,
	353, 0, 145, 134, 327, 345, 157, 302, 305, 362,
	288, 137, 343, 322, 237, 206, 207, 135, 0, 136,
	285, 175, 189, 170, 255, 0, 188, 276, 340, 341,
	168, 365, 146, 355, 139, 147, 354, 248, 0, 247,
	357, 336, 344, 238, 226, 0, 138, 342, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 318, 350, 366, 154, 0,
	306, 332, 0, 0, 155, 187, 180, 271, 246, 148,
	198, 315, 210, 218, 284, 363, 259, 291, 158, 349,
	314, 593, 605, 599, 601, 600, 597, 598, 596, 595,
	594, 607, 583, 584, 585, 586, 587, 0, 0, 0,
	590, 0, 602, 603, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 554, 555, 559, 560, 568, 567, 566,
	569, 570, 572, 571, 573, 551, 552, 553, 556, 557,
	558, 561, 562, 565, 563, 564, 588, 131, 140, 215,
	79, 281, 185, 351, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 286, 293, 295, 296, 297, 299, 308,
	309, 310, 311, 319, 325, 338, 339, 358, 360, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 517, 0, 0, 0,
	176, 514, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 328, 0, 0, 0, 592,
	216, 0, 0, 494, 316, 240, 0, 0, 0, 0,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 515, 539, 538, 541, 542, 543,
	544, 0, 0, 498, 540, 545, 574, 575, 0, 0,
	0, 512, 530, 0, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 267, 283, 304, 0, 275, 0, 0, 0,
	0, 0, 527, 528, 508, 0, 0, 0, 606, 0,
	529, 0, 0, 524, 525, 526, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 582, 0,
	0, 204, 359, 0, 0, 604, 277, 0, 323, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 298, 589,
	0, 0, 0, 0, 167, 0, 290, 260, 347, 581,
	0, 289, 217, 337, 0, 0, 346, 0, 488, 356,
	361, 0, 0, 0, 313, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 312,
	335, 151, 330, 239, 245, 161, 163, 162, 143, 307,
	334, 156, 165, 317, 294, 324, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 301, 300,
	0, 199, 0, 0, 0, 282, 0, 205, 132, 326,
	364, 150, 211, 331, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 280, 303, 333, 152, 320, 0, 0, 0, 0,
	292, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	287, 321, 353, 0, 145, 134, 327, 345, 157, 302,
	305, 362, 288, 137, 343, 322, 237, 206, 207, 135,
	0, 136, 285, 175, 189, 170, 255, 0, 188, 276,
	340, 341, 168, 365, 146, 355, 139, 147, 354, 248,
	0, 247, 357, 336, 344, 238, 226, 0, 138, 342,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 318, 350, 366,
	154, 0, 306, 332, 0, 0, 155, 187, 180, 271,
	246, 148, 198, 315, 210, 218, 284, 363, 259, 291,
	158, 349, 314, 593, 605, 599, 601, 600, 597, 598,
	596, 595, 594, 607, 583, 584, 585, 586, 587, 0,
	0, 0, 590, 0, 602, 603, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 554, 555, 559, 560, 568,
	567, 566, 569, 570, 572, 571, 573, 551, 552, 553,
	556, 557, 558, 561, 562, 565, 563, 564, 588, 131,
	140, 215, 0, 281, 185, 351, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 286, 293, 295, 296, 297,
	299, 308, 309, 310, 311, 319, 325, 338, 339, 358,
	360, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 517, 0,
	0, 0, 176, 514, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 0, 0,
	0, 592, 216, 0, 0, 494, 316, 240, 0, 0,
	0, 0, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 989, 0, 515, 539, 538, 541,
	542, 543, 544, 0, 0, 498, 540, 545, 574, 575,
	0, 0, 0, 512, 530, 0, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 267, 283, 304, 0, 275, 0,
	0, 0, 0, 0, 527, 528, 0, 0, 0, 0,
	606, 0, 529, 0, 0, 524, 525, 526, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	582, 0, 0, 204, 359, 0, 0, 604, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	298, 589, 0, 0, 0, 0, 167, 0, 290, 260,
	347, 581, 0, 289, 217, 337, 0, 0, 346, 0,
	488, 356, 361, 0, 0, 0, 313, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	301, 300, 0, 199, 0, 0, 0, 282, 0, 205,
	132, 326, 364, 150, 211, 331, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 280, 303, 333, 152, 320, 0, 0,
	0, 0, 292, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 318,
	350, 366, 154, 0, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 593, 605, 599, 601, 600,
	597, 598, 596, 595, 594, 607, 583, 584, 585, 586,
	587, 0, 0, 0, 590, 0, 602, 603, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 554, 555, 559,
	560, 568, 567, 566, 569, 570, 572, 571, 573, 551,
	552, 553, 556, 557, 558, 561, 562, 565, 563, 564,
	588, 131, 140, 215, 0, 281, 185, 351, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	517, 0, 0, 0, 176, 514, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 328,
	0, 0, 0, 592, 216, 0, 0, 494, 316, 240,
	0, 0, 0, 0, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 515, 539,
	538, 541, 542, 543, 544, 0, 0, 498, 540, 545,
	574, 575, 0, 0, 0, 512, 530, 0, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 267, 283, 304, 0,
	275, 0, 0, 0, 0, 0, 527, 528, 1422, 0,
	0, 0, 606, 0, 529, 0, 0, 524, 525, 526,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 582, 0, 0, 204, 359, 0, 0, 604,
	277, 0, 323, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 298, 589, 0, 0, 0, 0, 167, 0,
	290, 260, 347, 581, 0, 289, 217, 337, 0, 0,
	346, 0, 488, 356, 361, 0, 0, 0, 313, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 312, 335, 151, 330, 239, 245, 161,
	163, 162, 143, 307, 334, 156, 165, 317, 294, 324,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 301, 300, 0, 199, 0, 0, 0, 282,
	0, 205, 132, 326, 364, 150, 211, 331, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 280, 303, 333, 152, 320,
	0, 0, 0, 0, 292, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 287, 321, 353, 0, 145, 134,
	327, 345, 157, 302, 305, 362, 288, 137, 343, 322,
	237, 206, 207, 135, 0, 136, 285, 175, 189, 170,
	255, 0, 188, 276, 340, 341, 168, 365, 146, 355,
	139, 147, 354, 248, 0, 247, 357, 336, 344, 238,
	226, 0, 138, 342, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 318, 350, 366, 154, 0, 306, 332, 0, 0,
	155, 187, 180, 271, 246, 148, 198, 315, 210, 218,
	284, 363, 259, 291, 158, 349, 314, 593, 605, 599,
	601, 600, 597, 598, 596, 595, 594, 607, 583, 584,
	585, 586, 587, 0, 0, 0, 590, 0, 602, 603,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 554,
	555, 559, 560, 568, 567, 566, 569, 570, 572, 571,
	573, 551, 552, 553, 556, 557, 558, 561, 562, 565,
	563, 564, 588, 131, 140, 215, 0, 281, 185, 351,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 286,
	293, 295, 296, 297, 299, 308, 309, 310, 311, 319,
	325, 338, 339, 358, 360, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 517, 0, 0, 0, 176, 514, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 328, 0, 0, 0, 592, 216, 0, 0, 494,
	316, 240, 0, 0, 0, 0, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	515, 539, 1466, 541, 542, 543, 544, 0, 0, 498,
	540, 545, 574, 575, 0, 0, 0, 512, 530, 0,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 267, 283,
	304, 0, 275, 0, 0, 0, 0, 0, 527, 528,
	1422, 0, 0, 0, 606, 0, 529, 0, 0, 524,
	525, 526, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 582, 0, 0, 204, 359, 0,
	0, 604, 277, 0, 323, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 298, 589, 0, 0, 0, 0,
	167, 0, 290, 260, 347, 581, 0, 289, 217, 337,
	0, 0, 346, 0, 488, 356, 361, 0, 0, 0,
	313, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 312, 335, 151, 330, 239,
	245, 161, 163, 162, 143, 307, 334, 156, 165, 317,
	294, 324, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 301, 300, 0, 199, 0, 0,
	0, 282, 0, 205, 132, 326, 364, 150, 211, 331,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 280, 303, 333,
	152, 320, 0, 0, 0, 0, 292, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 287, 321, 353, 0,
	145, 134, 327, 345, 157, 302, 305, 362, 288, 137,
	343, 322, 237, 206, 207, 135, 0, 136, 285, 175,
	189, 170, 255, 0, 188, 276, 340, 341, 168, 365,
	146, 355, 139, 147, 354, 248, 0, 247, 357, 336,
	344, 238, 226, 0, 138, 342, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 318, 350, 366, 154, 0, 306, 332,
	0, 0, 155, 187, 180, 271, 246, 148, 198, 315,
	210, 218, 284, 363, 259, 291, 158, 349, 314, 593,
	605, 599, 601, 600, 597, 598, 596, 595, 594, 607,
	583, 584, 585, 586, 587, 0, 0, 0, 590, 0,
	602, 603, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 554, 555, 559, 560, 568, 567, 566, 569, 570,
	572, 571, 573, 551, 552, 553, 556, 557, 558, 561,
	562, 565, 563, 564, 588, 131, 140, 215, 0, 281,
	185, 351, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 286, 293, 295, 296, 297, 299, 308, 309, 310,
	311, 319, 325, 338, 339, 358, 360, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 517, 0, 0, 0, 176, 514,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 328, 0, 0, 0, 592, 216, 0,
	0, 494, 316, 240, 0, 0, 0, 0, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 515, 539, 1463, 541, 542, 543, 544, 0,
	0, 498, 540, 545, 574, 575, 0, 0, 0, 512,
	530, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	267, 283, 304, 0, 275, 0, 0, 0, 0, 0,
	527, 528, 1422, 0, 0, 0, 606, 0, 529, 0,
	0, 524, 525, 526, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 582, 0, 0, 204,
	359, 0, 0, 604, 277, 0, 323, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 298, 589, 0, 0,
	0, 0, 167, 0, 290, 260, 347, 581, 0, 289,
	217, 337, 0, 0, 346, 0, 488, 356, 361, 0,
	0, 0, 313, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 312, 335, 151,
	330, 239, 245, 161, 163, 162, 143, 307, 334, 156,
	165, 317, 294, 324, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 301, 300, 0, 199,
	0, 0, 0, 282, 0, 205, 132, 326, 364, 150,
	211, 331, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 280,
	303, 333, 152, 320, 0, 0, 0, 0, 292, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 287, 321,
	353, 0, 145, 134, 327, 345, 157, 302, 305, 362,
	288, 137, 343, 322, 237, 206, 207, 135, 0, 136,
	285, 175, 189, 170, 255, 0, 188, 276, 340, 341,
	168, 365, 146, 355, 139, 147, 354, 248, 0, 247,
	357, 336, 344, 238, 226, 0, 138, 342, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 318, 350, 366, 154, 0,
	306, 332, 0, 0, 155, 187, 180, 271, 246, 148,
	198, 315, 210, 218, 284, 363, 259, 291, 158, 349,
	314, 593, 605, 599, 601, 600, 597, 598, 596, 595,
	594, 607, 583, 584, 585, 586, 587, 0, 0, 0,
	590, 0, 602, 603, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 554, 555, 559, 560, 568, 567, 566,
	569, 570, 572, 571, 573, 551, 552, 553, 556, 557,
	558, 561, 562, 565, 563, 564, 588, 131, 140, 215,
	0, 281, 185, 351, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 286, 293, 295, 296, 297, 299, 308,
	309, 310, 311, 319, 325, 338, 339, 358, 360, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 517, 0, 0, 0,
	176, 514, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 328, 0, 0, 0, 592,
	216, 0, 0, 494, 316, 240, 0, 0, 0, 0,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1302, 0, 515, 539, 538, 541, 542, 543,
	544, 0, 0, 498, 540, 545, 574, 575, 0, 0,
	0, 512, 530, 0, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 267, 283, 304, 0, 275, 0, 0, 0,
	0, 0, 527, 528, 0, 0, 0, 0, 606, 0,
	529, 0, 0, 524, 525, 526, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 582, 0,
	0, 204, 359, 0, 0, 604, 277, 0, 323, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 298, 589,
	0, 0, 0, 0, 167, 0, 290, 260, 347, 581,
	0, 289, 217, 337, 0, 0, 346, 0, 488, 356,
	361, 0, 0, 0, 313, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 312,
	335, 151, 330, 239, 245, 161, 163, 162, 143, 307,
	334, 156, 165, 317, 294, 324, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 301, 300,
	0, 199, 0, 0, 0, 282, 0, 205, 132, 326,
	364, 150, 211, 331, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 280, 303, 333, 152, 320, 0, 0, 0, 0,
	292, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	287, 321, 353, 0, 145, 134, 327, 345, 157, 302,
	305, 362, 288, 137, 343, 322, 237, 206, 207, 135,
	0, 136, 285, 175, 189, 170, 255, 0, 188, 276,
	340, 341, 168, 365, 146, 355, 139, 147, 354, 248,
	0, 247, 357, 336, 344, 238, 226, 0, 138, 342,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 318, 350, 366,
	154, 0, 306, 332, 0, 0, 155, 187, 180, 271,
	246, 148, 198, 315, 210, 218, 284, 363, 259, 291,
	158, 349, 314, 593, 605, 599, 601, 600, 597, 598,
	596, 595, 594, 607, 583, 584, 585, 586, 587, 0,
	0, 0, 590, 0, 602, 603, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 554, 555, 559, 560, 568,
	567, 566, 569, 570, 572, 571, 573, 551, 552, 553,
	556, 557, 558, 561, 562, 565, 563, 564, 588, 131,
	140, 215, 0, 281, 185, 351, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 286, 293, 295, 296, 297,
	299, 308, 309, 310, 311, 319, 325, 338, 339, 358,
	360, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 517, 0,
	0, 0, 176, 514, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 0, 0,
	0, 592, 216, 0, 0, 494, 316, 240, 0, 0,
	0, 0, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 515, 539, 538, 541,
	542, 543, 544, 0, 0, 498, 540, 545, 574, 575,
	0, 0, 0, 512, 530, 0, 591, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 267, 283, 304, 0, 275, 0,
	0, 0, 0, 0, 527, 528, 0, 0, 0, 0,
	606, 0, 529, 0, 0, 524, 525, 526, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	582, 0, 0, 204, 359, 0, 0, 604, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	298, 589, 0, 0, 0, 0, 167, 0, 290, 260,
	347, 581, 0, 289, 217, 337, 0, 0, 346, 0,
	488, 356, 361, 0, 0, 0, 313, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	301, 300, 0, 199, 0, 0, 0, 282, 0, 205,
	132, 326, 364, 150, 211, 331, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 280, 303, 333, 152, 320, 0, 0,
	0, 0, 292, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 318,
	350, 366, 154, 0, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 593, 605, 599, 601, 600,
	597, 598, 596, 595, 594, 607, 583, 584, 585, 586,
	587, 0, 0, 0, 590, 0, 602, 603, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 554, 555, 559,
	560, 568, 567, 566, 569, 570, 572, 571, 573, 551,
	552, 553, 556, 557, 558, 561, 562, 565, 563, 564,
	588, 131, 140, 215, 0, 281, 185, 351, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 328,
	0, 0, 0, 592, 216, 0, 0, 494, 316, 240,
	0, 0, 0, 0, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 515, 539,
	538, 541, 542, 543, 544, 0, 0, 498, 540, 545,
	574, 575, 0, 0, 0, 0, 530, 0, 591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 267, 283, 304, 0,
	275, 0, 0, 0, 0, 0, 527, 528, 0, 0,
	0, 0, 606, 0, 529, 0, 0, 524, 525, 526,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 582, 0, 0, 204, 359, 0, 0, 604,
	277, 0, 323, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 298, 589, 0, 0, 0, 0, 167, 0,
	290, 260, 347, 581, 0, 289, 217, 337, 0, 0,
	346, 0, 488, 356, 361, 0, 0, 0, 313, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 312, 335, 151, 330, 239, 245, 161,
	163, 162, 143, 307, 334, 156, 165, 317, 294, 324,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 301, 300, 0, 199, 0, 0, 0, 282,
	0, 205, 132, 326, 364, 150, 211, 331, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 280, 303, 333, 152, 320,
	0, 0, 0, 0, 292, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 287, 321, 353, 0, 145, 134,
	327, 345, 157, 302, 305, 362, 288, 137, 343, 322,
	237, 206, 207, 135, 0, 136, 285, 175, 189, 170,
	255, 0, 188, 276, 340, 341, 168, 365, 146, 355,
	139, 147, 354, 248, 0, 247, 357, 336, 344, 238,
	226, 0, 138, 342, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 318, 350, 366, 154, 0, 306, 332, 0, 0,
	155, 187, 180, 271, 246, 148, 198, 315, 210, 218,
	284, 363, 259, 291, 158, 349, 314, 593, 605, 599,
	601, 600, 597, 598, 596, 595, 594, 607, 583, 584,
	585, 586, 587, 1469, 1470, 1471, 590, 0, 602, 603,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 554,
	555, 559, 560, 568, 567, 566, 569, 570, 572, 571,
	573, 551, 552, 553, 556, 557, 558, 561, 562, 565,
	563, 564, 588, 131, 140, 215, 0, 281, 185, 351,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 286,
	293, 295, 296, 297, 299, 308, 309, 310, 311, 319,
	325, 338, 339, 358, 360, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 328, 0, 0, 0, 592, 216, 0, 0, 494,
	316, 240, 0, 0, 0, 0, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	515, 539, 538, 541, 542, 543, 544, 0, 0, 498,
	540, 545, 574, 575, 0, 0, 0, 0, 530, 0,
	591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 267, 283,
	304, 0, 275, 0, 0, 0, 0, 0, 527, 528,
	0, 0, 0, 0, 606, 0, 529, 0, 0, 524,
	525, 526, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 582, 0, 0, 204, 359, 0,
	0, 604, 277, 0, 323, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 298, 589, 0, 0, 0, 0,
	167, 0, 290, 260, 347, 581, 2763, 289, 217, 337,
	0, 0, 346, 0, 488, 356, 361, 0, 0, 0,
	313, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 312, 335, 151, 330, 239,
	245, 161, 163, 162, 143, 307, 334, 156, 165, 317,
	294, 324, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 301, 300, 0, 199, 0, 0,
	0, 282, 0, 205, 132, 326, 364, 150, 211, 331,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 280, 303, 333,
	152, 320, 0, 0, 0, 0, 292, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 287, 321, 353, 0,
	145, 134, 327, 345, 157, 302, 305, 362, 288, 137,
	343, 322, 237, 206, 207, 135, 0, 136, 285, 175,
	189, 170, 255, 0, 188, 276, 340, 341, 168, 365,
	146, 355, 139, 147, 354, 248, 0, 247, 357, 336,
	344, 238, 226, 0, 138, 342, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 318, 350, 366, 154, 0, 306, 332,
	0, 0, 155, 187, 180, 271, 246, 148, 198, 315,
	210, 218, 284, 363, 259, 291, 158, 349, 314, 593,
	605, 599, 601, 600, 597, 598, 596, 595, 594, 607,
	583, 584, 585, 586, 587, 0, 0, 0, 590, 0,
	602, 603, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 554, 555, 559, 560, 568, 567, 566, 569, 570,
	572, 571, 573, 551, 552, 553, 556, 557, 558, 561,
	562, 565, 563, 564, 588, 131, 140, 215, 0, 281,
	185, 351, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 286, 293, 295, 296, 297, 299, 308, 309, 310,
	311, 319, 325, 338, 339, 358, 360, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 328, 0, 0, 0, 592, 216, 0,
	0, 494, 316, 240, 0, 0, 0, 0, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	989, 0, 515, 539, 538, 541, 542, 543, 544, 0,
	0, 498, 540, 545, 574, 575, 0, 0, 0, 0,
	530, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	267, 283, 304, 0, 275, 0, 0, 0, 0, 0,
	527, 528, 0, 0, 0, 0, 606, 0, 529, 0,
	0, 524, 525, 526, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 582, 0, 0, 204,
	359, 0, 0, 604, 277, 0, 323, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 298, 589, 0, 0,
	0, 0, 167, 0, 290, 260, 347, 581, 0, 289,
	217, 337, 0, 0, 346, 0, 488, 356, 361, 0,
	0, 0, 313, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 312, 335, 151,
	330, 239, 245, 161, 163, 162, 143, 307, 334, 156,
	165, 317, 294, 324, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 301, 300, 0, 199,
	0, 0, 0, 282, 0, 205, 132, 326, 364, 150,
	211, 331, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 280,
	303, 333, 152, 320, 0, 0, 0, 0, 292, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 287, 321,
	353, 0, 145, 134, 327, 345, 157, 302, 305, 362,
	288, 137, 343, 322, 237, 206, 207, 135, 0, 136,
	285, 175, 189, 170, 255, 0, 188, 276, 340, 341,
	168, 365, 146, 355, 139, 147, 354, 248, 0, 247,
	357, 336, 344, 238, 226, 0, 138, 342, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 318, 350, 366, 154, 0,
	306, 332, 0, 0, 155, 187, 180, 271, 246, 148,
	198, 315, 210, 218, 284, 363, 259, 291, 158, 349,
	314, 593, 605, 599, 601, 600, 597, 598, 596, 595,
	594, 607, 583, 584, 585, 586, 587, 0, 0, 0,
	590, 0, 602, 603, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 554, 555, 559, 560, 568, 567, 566,
	569, 570, 572, 571, 573, 551, 552, 553, 556, 557,
	558, 561, 562, 565, 563, 564, 588, 131, 140, 215,
	0, 281, 185, 351, 0, 174, 0, 0, 0, 0,
	0, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 286, 293, 295, 296, 297, 299, 308,
	309, 310, 311, 319, 325, 338, 339, 358, 360, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 0, 0, 166, 221,
	219, 0, 0, 0, 263, 328, 0, 0, 0, 592,
	216, 0, 0, 494, 316, 240, 0, 0, 0, 0,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 515, 539, 538, 541, 542, 543,
	544, 0, 0, 498, 540, 545, 574, 575, 0, 0,
	0, 0, 530, 0, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 267, 283, 304, 0, 275, 0, 0, 0,
	0, 0, 527, 528, 0, 0, 0, 0, 606, 0,
	529, 0, 0, 524, 525, 526, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 582, 0,
	0, 204, 359, 0, 0, 604, 277, 0, 323, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 298, 589,
	0, 0, 0, 0, 167, 0, 290, 260, 347, 581,
	0, 289, 217, 337, 0, 0, 346, 0, 488, 356,
	361, 0, 0, 0, 313, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 312,
	335, 151, 330, 239, 245, 161, 163, 162, 143, 307,
	334, 156, 165, 317, 294, 324, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 301, 300,
	0, 199, 0, 0, 0, 282, 0, 205, 132, 326,
	364, 150, 211, 331, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 280, 303, 333, 152, 320, 0, 0, 0, 0,
	292, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	287, 321, 353, 0, 145, 134, 327, 345, 157, 302,
	305, 362, 288, 137, 343, 322, 237, 206, 207, 135,
	0, 136, 285, 175, 189, 170, 255, 0, 188, 276,
	340, 341, 168, 365, 146, 355, 139, 147, 354, 248,
	0, 247, 357, 336, 344, 238, 226, 0, 138, 342,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 318, 350, 366,
	154, 0, 306, 332, 0, 0, 155, 187, 180, 271,
	246, 148, 198, 315, 210, 218, 284, 363, 259, 291,
	158, 349, 314, 593, 605, 599, 601, 600, 597, 598,
	596, 595, 594, 607, 583, 584, 585, 586, 587, 0,
	0, 0, 590, 0, 602, 603, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 554, 555, 559, 560, 568,
	567, 566, 569, 570, 572, 571, 573, 551, 552, 553,
	556, 557, 558, 561, 562, 565, 563, 564, 588, 131,
	140, 215, 0, 281, 185, 351, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 286, 293, 295, 296, 297,
	299, 308, 309, 310, 311, 319, 325, 338, 339, 358,
	360, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 0, 0,
	0, 0, 216, 0, 0, 494, 316, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 1516,
	0, 0, 0, 0, 0, 0, 126, 0, 467, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 267, 283, 304, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 359, 0, 1515, 0, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	298, 0, 0, 0, 0, 0, 167, 0, 290, 260,
	347, 0, 0, 289, 217, 337, 0, 0, 346, 0,
	488, 356, 361, 0, 0, 0, 313, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	301, 300, 0, 199, 0, 0, 0, 282, 0, 205,
	132, 326, 364, 150, 211, 331, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 280, 303, 333, 152, 320, 0, 0,
	0, 0, 292, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 318,
	350, 366, 154, 0, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 469, 470, 471, 472, 476, 477, 481,
	482, 491, 490, 489, 492, 493, 496, 495, 497, 473,
	474, 475, 478, 479, 480, 483, 484, 487, 485, 486,
	0, 131, 140, 215, 0, 281, 185, 351, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 1512,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 328,
	0, 0, 0, 0, 216, 0, 0, 494, 316, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 1516, 0, 0, 0, 0, 0, 0, 126, 0,
	467, 0, 0, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 1510, 283, 304, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 359, 0, 1515, 0,
	277, 0, 323, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 298, 0, 0, 0, 0, 0, 167, 0,
	290, 260, 347, 0, 0, 289, 217, 337, 0, 0,
	346, 0, 488, 356, 361, 0, 0, 0, 313, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 312, 335, 151, 330, 239, 245, 161,
	163, 162, 143, 307, 334, 156, 165, 317, 294, 324,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 301, 300, 0, 199, 0, 0, 0, 282,
	0, 205, 132, 326, 364, 150, 211, 331, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 280, 303, 333, 152, 320,
	0, 0, 0, 0, 292, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 287, 321, 353, 0, 145, 134,
	327, 345, 157, 302, 305, 362, 288, 137, 343, 322,
	237, 206, 207, 135, 0, 136, 285, 175, 189, 170,
	255, 0, 188, 276, 340, 341, 168, 365, 146, 355,
	139, 147, 354, 248, 0, 247, 357, 336, 344, 238,
	226, 0, 138, 342, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 318, 350, 366, 154, 0, 306, 332, 0, 0,
	155, 187, 180, 271, 246, 148, 198, 315, 210, 218,
	284, 363, 259, 291, 158, 349, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 469, 470, 471, 472, 476,
	477, 481, 482, 491, 490, 489, 492, 493, 496, 495,
	497, 473, 474, 475, 478, 479, 480, 483, 484, 487,
	485, 486, 0, 131, 140, 215, 0, 281, 185, 351,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 286,
	293, 295, 296, 297, 299, 308, 309, 310, 311, 319,
	325, 338, 339, 358, 360, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 1011, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 328, 0, 0, 0, 0, 216, 0, 0, 494,
	316, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1012, 0, 1015, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 1008, 1007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1009, 0, 0, 0, 348, 267, 283,
	304, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 359, 0,
	0, 0, 277, 0, 323, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 298, 0, 0, 0, 0, 0,
	167, 0, 290, 260, 347, 0, 0, 289, 217, 337,
	0, 0, 346, 0, 488, 356, 361, 0, 0, 0,
	313, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 312, 335, 151, 330, 239,
	245, 161, 163, 162, 143, 307, 334, 156, 165, 317,
	294, 324, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 301, 300, 0, 199, 0, 0,
	0, 282, 0, 205, 132, 326, 364, 150, 211, 331,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 280, 303, 333,
	152, 320, 0, 0, 0, 0, 292, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 287, 321, 353, 0,
	145, 134, 327, 345, 157, 302, 305, 362, 288, 137,
	343, 322, 237, 206, 207, 135, 0, 136, 285, 175,
	189, 170, 255, 0, 188, 276, 340, 341, 168, 365,
	146, 355, 139, 147, 354, 248, 0, 247, 357, 336,
	344, 238, 226, 0, 138, 342, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 318, 350, 366, 154, 0, 306, 332,
	0, 0, 155, 187, 180, 271, 246, 148, 198, 315,
	210, 218, 284, 363, 259, 291, 158, 349, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 469, 470, 471,
	472, 476, 477, 481, 482, 491, 490, 489, 492, 493,
	496, 495, 497, 473, 474, 475, 478, 479, 480, 483,
	484, 487, 485, 486, 0, 131, 140, 215, 0, 281,
	185, 351, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 286, 293, 295, 296, 297, 299, 308, 309, 310,
	311, 319, 325, 338, 339, 358, 360, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 0, 213, 0, 0, 166, 221, 219, 0,
	0, 0, 263, 328, 0, 0, 0, 0, 216, 0,
	0, 494, 316, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 467, 0, 0, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	267, 283, 304, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 144, 0, 0, 0, 204,
	359, 0, 0, 0, 277, 0, 323, 192, 214, 149,
	128, 142, 160, 191, 252, 0, 298, 0, 0, 0,
	0, 0, 167, 0, 290, 260, 347, 0, 0, 289,
	217, 337, 0, 0, 346, 0, 488, 356, 361, 0,
	0, 0, 313, 177, 0, 133, 0, 274, 172, 209,
	0, 0, 0, 164, 0, 0, 0, 312, 335, 151,
	330, 239, 245, 161, 163, 162, 143, 307, 334, 156,
	165, 317, 294, 324, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 352, 0, 301, 300, 0, 199,
	0, 0, 0, 282, 0, 205, 132, 326, 364, 150,
	211, 331, 0, 186, 251, 169, 261, 262, 183, 130,
	279, 233, 234, 232, 235, 190, 0, 0, 0, 280,
	303, 333, 152, 320, 0, 0, 0, 0, 292, 0,
	0, 0, 224, 179, 182, 193, 200, 0, 287, 321,
	353, 0, 145, 134, 327, 345, 157, 302, 305, 362,
	288, 137, 343, 322, 237, 206, 207, 135, 0, 136,
	285, 175, 189, 170, 255, 0, 188, 276, 340, 341,
	168, 365, 146, 355, 139, 147, 354, 248, 0, 247,
	357, 336, 344, 238, 226, 0, 138, 342, 236, 225,
	212, 181, 195, 272, 220, 273, 196, 243, 242, 244,
	222, 227, 0, 0, 0, 318, 350, 366, 154, 0,
	306, 332, 0, 0, 155, 187, 180, 271, 246, 148,
	198, 315, 210, 218, 284, 363, 259, 291, 158, 349,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 469,
	470, 471, 472, 476, 477, 481, 482, 491, 490, 489,
	492, 493, 496, 495, 497, 473, 474, 475, 478, 479,
	480, 483, 484, 487, 485, 486, 0, 131, 140, 215,
	0, 281, 185, 351, 0, 174, 0, 0, 0, 0,
	462, 129, 141, 153, 159, 173, 178, 184, 194, 197,
	201, 202, 203, 208, 223, 228, 229, 230, 231, 249,
	250, 253, 254, 257, 258, 264, 265, 266, 268, 269,
	270, 278, 0, 286, 293, 295, 296, 297, 299, 308,
	309, 310, 311, 319, 325, 338, 339, 358, 360, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 213, 1809, 0, 166, 221,
	219, 0, 0, 0, 263, 328, 0, 0, 0, 0,
	216, 0, 0, 494, 316, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 467, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 267, 283, 304, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 144, 0, 0,
	0, 204, 359, 0, 0, 0, 277, 0, 323, 192,
	214, 149, 128, 142, 160, 191, 252, 0, 298, 0,
	0, 0, 0, 0, 167, 0, 290, 260, 347, 0,
	0, 289, 217, 337, 0, 0, 346, 0, 488, 356,
	361, 0, 0, 0, 313, 177, 0, 133, 0, 274,
	172, 209, 0, 0, 0, 164, 0, 0, 0, 312,
	335, 151, 330, 239, 245, 161, 163, 162, 143, 307,
	334, 156, 165, 317, 294, 324, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 352, 0, 301, 300,
	0, 199, 0, 0, 0, 282, 0, 205, 132, 326,
	364, 150, 211, 331, 0, 186, 251, 169, 261, 262,
	183, 130, 279, 233, 234, 232, 235, 190, 0, 0,
	0, 280, 303, 333, 152, 320, 0, 0, 0, 0,
	292, 0, 0, 0, 224, 179, 182, 193, 200, 0,
	287, 321, 353, 0, 145, 134, 327, 345, 157, 302,
	305, 362, 288, 137, 343, 322, 237, 206, 207, 135,
	0, 136, 285, 175, 189, 170, 255, 0, 188, 276,
	340, 341, 168, 365, 146, 355, 139, 147, 354, 248,
	0, 247, 357, 336, 344, 238, 226, 0, 138, 342,
	236, 225, 212, 181, 195, 272, 220, 273, 196, 243,
	242, 244, 222, 227, 0, 0, 0, 318, 350, 366,
	154, 0, 306, 332, 0, 0, 155, 187, 180, 271,
	246, 148, 198, 315, 210, 218, 284, 363, 259, 291,
	158, 349, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 469, 470, 471, 472, 476, 477, 481, 482, 491,
	490, 489, 492, 493, 496, 495, 497, 473, 474, 475,
	478, 479, 480, 483, 484, 487, 485, 486, 0, 131,
	140, 215, 0, 281, 185, 351, 0, 174, 0, 0,
	0, 0, 0, 129, 141, 153, 159, 173, 178, 184,
	194, 197, 201, 202, 203, 208, 223, 228, 229, 230,
	231, 249, 250, 253, 254, 257, 258, 264, 265, 266,
	268, 269, 270, 278, 0, 286, 293, 295, 296, 297,
	299, 308, 309, 310, 311, 319, 325, 338, 339, 358,
	360, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 0, 0,
	0, 0, 216, 0, 0, 494, 316, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 467, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 267, 283, 304, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 144,
	0, 0, 0, 204, 359, 0, 0, 0, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 0,
	298, 0, 0, 0, 0, 0, 167, 0, 290, 260,
	347, 0, 0, 289, 217, 337, 0, 0, 346, 0,
	488, 356, 361, 0, 0, 0, 313, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	301, 300, 0, 199, 0, 0, 0, 282, 0, 205,
	132, 326, 364, 150, 211, 331, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 280, 303, 333, 152, 320, 0, 0,
	0, 0, 292, 0, 0, 0, 224, 179, 182, 193,
	200, 0, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 318,
	350, 366, 154, 0, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 469, 470, 471, 472, 476, 477, 481,
	482, 491, 490, 489, 492, 493, 496, 495, 497, 473,
	474, 475, 478, 479, 480, 483, 484, 487, 485, 486,
	0, 131, 140, 215, 0, 281, 185, 351, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 0, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 328,
	0, 0, 0, 0, 216, 0, 0, 494, 316, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	1015, 0, 0, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 267, 283, 304, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 359, 0, 0, 0,
	277, 0, 323, 192, 214, 149, 128, 142, 160, 191,
	252, 0, 298, 0, 0, 0, 0, 0, 167, 0,
	290, 260, 347, 0, 0, 289, 217, 337, 0, 0,
	346, 0, 488, 356, 361, 0, 0, 0, 313, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 312, 335, 151, 330, 239, 245, 161,
	163, 162, 143, 307, 334, 156, 165, 317, 294, 324,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 301, 300, 0, 199, 0, 0, 0, 282,
	0, 205, 132, 326, 364, 150, 211, 331, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 280, 303, 333, 152, 320,
	0, 0, 0, 0, 292, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 287, 321, 353, 0, 145, 134,
	327, 345, 157, 302, 305, 362, 288, 137, 343, 322,
	237, 206, 207, 135, 0, 136, 285, 175, 189, 170,
	255, 0, 188, 276, 340, 341, 168, 365, 146, 355,
	139, 147, 354, 248, 0, 247, 357, 336, 344, 238,
	226, 0, 138, 342, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 318, 350, 366, 154, 0, 306, 332, 0, 0,
	155, 187, 180, 271, 246, 148, 198, 315, 210, 218,
	284, 363, 259, 291, 158, 349, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 469, 470, 471, 472, 476,
	477, 481, 482, 491, 490, 489, 492, 493, 496, 495,
	497, 473, 474, 475, 478, 479, 480, 483, 484, 487,
	485, 486, 0, 131, 140, 215, 0, 281, 185, 351,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 286,
	293, 295, 296, 297, 299, 308, 309, 310, 311, 319,
	325, 338, 339, 358, 360, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 328, 0, 0, 0, 0, 216, 0, 0, 494,
	316, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 267, 283,
	304, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 359, 0,
	0, 0, 277, 0, 323, 192, 214, 149, 128, 142,
	160, 191, 252, 0, 298, 0, 0, 0, 0, 0,
	167, 0, 290, 260, 347, 0, 0, 289, 217, 337,
	0, 0, 346, 0, 488, 356, 361, 0, 0, 0,
	313, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 312, 335, 151, 330, 239,
	245, 161, 163, 162, 143, 307, 334, 156, 165, 317,
	294, 324, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 301, 300, 0, 199, 0, 0,
	0, 282, 0, 205, 132, 326, 364, 150, 211, 331,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 280, 303, 333,
	152, 320, 0, 0, 0, 0, 292, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 287, 321, 353, 0,
	145, 134, 327, 345, 157, 302, 305, 362, 288, 137,
	343, 322, 237, 206, 207, 135, 0, 136, 285, 175,
	189, 170, 255, 0, 188, 276, 340, 341, 168, 365,
	146, 355, 139, 147, 354, 248, 0, 247, 357, 336,
	344, 238, 226, 0, 138, 342, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 318, 350, 366, 154, 0, 306, 332,
	0, 0, 155, 187, 180, 271, 246, 148, 198, 315,
	210, 218, 284, 363, 259, 291, 158, 349, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 469, 470, 471,
	472, 476, 477, 481, 482, 491, 490, 489, 492, 493,
	496, 495, 497, 473, 474, 475, 478, 479, 480, 483,
	484, 487, 485, 486, 0, 131, 140, 215, 0, 281,
	185, 351, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 286, 293, 295, 296, 297, 299, 308, 309, 310,
	311, 319, 325, 338, 339, 358, 360, 436, 329, 430,
	441, 424, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 431, 0, 213, 0, 494, 166, 221, 219,
	0, 0, 0, 263, 328, 0, 0, 0, 0, 216,
	0, 0, 0, 316, 240, 0, 0, 2172, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 445, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 267, 283, 304, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 423,
	422, 425, 0, 0, 1171, 241, 144, 0, 0, 429,
	204, 359, 0, 0, 0, 277, 0, 323, 192, 214,
	149, 128, 142, 160, 191, 252, 433, 298, 0, 0,
	437, 488, 0, 167, 0, 290, 260, 347, 0, 0,
	289, 217, 337, 0, 440, 346, 0, 0, 356, 361,
	0, 0, 0, 313, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 312, 335,
	151, 330, 239, 245, 161, 163, 162, 143, 307, 334,
	156, 165, 317, 294, 324, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 301, 300, 0,
	199, 0, 0, 0, 282, 0, 205, 132, 326, 364,
	150, 211, 331, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	450, 303, 333, 152, 320, 426, 427, 428, 434, 435,
	438, 439, 442, 224, 179, 182, 193, 200, 0, 287,
	321, 353, 0, 145, 134, 327, 345, 157, 302, 305,
	362, 288, 137, 343, 322, 237, 206, 207, 135, 0,
	136, 285, 175, 189, 170, 255, 0, 188, 276, 340,
	341, 168, 365, 146, 355, 139, 147, 354, 248, 0,
	247, 357, 336, 344, 238, 226, 0, 138, 342, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 318, 350, 366, 154,
	0, 306, 332, 0, 0, 155, 187, 180, 271, 246,
	148, 198, 315, 210, 218, 284, 363, 259, 291, 158,
	349, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 469, 470, 471, 472, 476, 477,
	481, 482, 491, 490, 489, 492, 493, 496, 495, 497,
	473, 474, 475, 478, 479, 480, 483, 484, 487, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 281, 185, 351, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 432, 286, 293, 295, 296, 297, 299,
	308, 309, 310, 311, 319, 325, 338, 339, 358, 360,
	436, 329, 430, 441, 424, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 431, 0, 213, 0, 0,
	166, 221, 219, 0, 0, 0, 263, 328, 0, 0,
	0, 494, 216, 0, 0, 0, 316, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2165, 0,
	0, 0, 2167, 0, 0, 0, 445, 0, 444, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 348, 267, 283, 304, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 423, 422, 425, 0, 0, 0, 241, 144,
	0, 0, 429, 204, 359, 0, 0, 0, 277, 0,
	323, 192, 214, 149, 128, 142, 160, 191, 252, 433,
	298, 0, 0, 437, 0, 0, 167, 0, 290, 260,
	347, 0, 0, 289, 217, 337, 488, 440, 346, 0,
	0, 356, 361, 0, 0, 0, 313, 177, 0, 133,
	0, 274, 172, 209, 0, 0, 0, 164, 0, 0,
	0, 312, 335, 151, 330, 239, 245, 161, 163, 162,
	143, 307, 334, 156, 165, 317, 294, 324, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	301, 300, 0, 199, 0, 0, 0, 282, 0, 205,
	132, 326, 364, 150, 211, 331, 0, 186, 251, 169,
	261, 262, 183, 130, 279, 233, 234, 232, 235, 190,
	0, 0, 0, 419, 303, 333, 152, 320, 426, 427,
	428, 434, 435, 438, 439, 442, 224, 179, 182, 193,
	200, 0, 287, 321, 353, 0, 145, 134, 327, 345,
	157, 302, 305, 362, 288, 137, 343, 322, 237, 206,
	207, 135, 0, 136, 285, 175, 189, 170, 255, 0,
	188, 276, 340, 341, 168, 365, 146, 355, 139, 147,
	354, 248, 0, 247, 357, 336, 344, 238, 226, 0,
	138, 342, 236, 225, 212, 181, 195, 272, 220, 273,
	196, 243, 242, 244, 222, 227, 0, 0, 0, 318,
	350, 366, 154, 0, 306, 332, 0, 0, 155, 187,
	180, 271, 246, 148, 198, 315, 210, 218, 284, 363,
	259, 291, 158, 349, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 469,
	470, 471, 472, 476, 477, 481, 482, 491, 490, 489,
	492, 493, 496, 495, 497, 473, 474, 475, 478, 479,
	480, 483, 484, 487, 485, 486, 0, 0, 0, 0,
	0, 131, 140, 215, 0, 281, 185, 351, 0, 174,
	0, 0, 0, 0, 0, 129, 141, 153, 159, 173,
	178, 184, 194, 197, 201, 202, 203, 208, 223, 228,
	229, 230, 231, 249, 250, 253, 254, 257, 258, 264,
	265, 266, 268, 269, 270, 278, 432, 286, 293, 295,
	296, 297, 299, 308, 309, 310, 311, 319, 325, 338,
	339, 358, 360, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 494, 0, 0, 213,
	0, 0, 166, 221, 219, 0, 0, 0, 263, 328,
	0, 0, 0, 0, 216, 0, 0, 1835, 316, 240,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 348, 267, 283, 304, 0,
	275, 0, 1025, 1024, 1034, 1035, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1026, 0, 0, 1036, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	241, 144, 0, 0, 0, 204, 359, 0, 0, 0,
	277, 0, 323, 192, 214, 149, 128, 142, 160, 191,
	252, 488, 298, 0, 0, 0, 0, 0, 167, 0,
	290, 260, 347, 0, 0, 289, 217, 337, 0, 0,
	346, 0, 0, 356, 361, 0, 0, 0, 313, 177,
	0, 133, 0, 274, 172, 209, 0, 0, 0, 164,
	0, 0, 0, 312, 335, 151, 330, 239, 245, 161,
	163, 162, 143, 307, 334, 156, 165, 317, 294, 324,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 301, 300, 0, 199, 0, 0, 0, 282,
	0, 205, 132, 326, 364, 150, 211, 331, 0, 186,
	251, 169, 261, 262, 183, 130, 279, 233, 234, 232,
	235, 190, 0, 0, 0, 280, 303, 333, 152, 320,
	0, 0, 0, 0, 292, 0, 0, 0, 224, 179,
	182, 193, 200, 0, 287, 321, 353, 0, 145, 134,
	327, 345, 157, 302, 305, 362, 288, 137, 343, 322,
	237, 206, 207, 135, 0, 136, 285, 175, 189, 170,
	255, 0, 188, 276, 340, 341, 168, 365, 146, 355,
	139, 147, 354, 248, 0, 247, 357, 336, 344, 238,
	226, 0, 138, 342, 236, 225, 212, 181, 195, 272,
	220, 273, 196, 243, 242, 244, 222, 227, 0, 0,
	0, 318, 350, 366, 154, 0, 306, 332, 0, 0,
	155, 187, 180, 271, 246, 148, 198, 315, 210, 218,
	284, 363, 259, 291, 158, 349, 314, 0, 0, 0,
	0, 0, 0, 468, 469, 470, 471, 472, 476, 477,
	481, 482, 491, 490, 489, 492, 493, 496, 495, 497,
	473, 474, 475, 478, 479, 480, 483, 484, 487, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 140, 215, 0, 281, 185, 351,
	0, 174, 0, 0, 0, 0, 0, 129, 141, 153,
	159, 173, 178, 184, 194, 197, 201, 202, 203, 208,
	223, 228, 229, 230, 231, 249, 250, 253, 254, 257,
	258, 264, 265, 266, 268, 269, 270, 278, 0, 286,
	293, 295, 296, 297, 299, 308, 309, 310, 311, 319,
	325, 338, 339, 358, 360, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 2688,
	0, 0, 0, 0, 0, 0, 176, 2686, 494, 0,
	0, 213, 0, 0, 166, 221, 219, 0, 0, 0,
	263, 328, 0, 0, 0, 0, 216, 0, 0, 1229,
	316, 240, 0, 0, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	445, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 348, 267, 283,
	304, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 241, 144, 0, 0, 0, 204, 359, 0,
	0, 0, 277, 0, 323, 192, 214, 149, 128, 142,
	160, 191, 252, 488, 298, 0, 0, 0, 0, 0,
	167, 0, 290, 260, 347, 0, 0, 289, 217, 337,
	0, 0, 346, 0, 0, 356, 361, 0, 0, 0,
	313, 177, 0, 133, 0, 274, 172, 209, 0, 0,
	0, 164, 0, 0, 0, 312, 335, 151, 330, 239,
	245, 161, 163, 162, 143, 307, 334, 156, 165, 317,
	294, 324, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 352, 0, 301, 300, 0, 199, 0, 2687,
	0, 282, 0, 205, 132, 326, 364, 150, 211, 331,
	0, 186, 251, 169, 261, 262, 183, 130, 279, 233,
	234, 232, 235, 190, 0, 0, 0, 280, 303, 333,
	152, 320, 0, 0, 0, 0, 292, 0, 0, 0,
	224, 179, 182, 193, 200, 0, 287, 321, 353, 0,
	145, 134, 327, 345, 157, 302, 305, 362, 288, 137,
	343, 322, 237, 206, 207, 135, 0, 136, 285, 175,
	189, 170, 255, 0, 188, 276, 340, 341, 168, 365,
	146, 355, 139, 147, 354, 248, 0, 247, 357, 336,
	344, 238, 226, 0, 138, 342, 236, 225, 212, 181,
	195, 272, 220, 273, 196, 243, 242, 244, 222, 227,
	0, 0, 0, 318, 350, 366, 154, 0, 306, 332,
	0, 0, 155, 187, 180, 271, 246, 148, 198, 315,
	210, 218, 284, 363, 259, 291, 158, 349, 314, 0,
	0, 0, 0, 0, 0, 468, 469, 470, 471, 472,
	476, 477, 481, 482, 491, 490, 489, 492, 493, 496,
	495, 497, 473, 474, 475, 478, 479, 480, 483, 484,
	487, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 140, 215, 0, 281,
	185, 351, 0, 174, 0, 0, 0, 0, 0, 129,
	141, 153, 159, 173, 178, 184, 194, 197, 201, 202,
	203, 208, 223, 228, 229, 230, 231, 249, 250, 253,
	254, 257, 258, 264, 265, 266, 268, 269, 270, 278,
	0, 286, 293, 295, 296, 297, 299, 308, 309, 310,
	311, 319, 325, 338, 339, 358, 360, 36, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 494, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 328, 0, 0, 0, 1507, 216,
	0, 0, 2167, 316, 240, 0, 0, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 267, 283, 304, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 359, 0, 0, 0, 277, 0, 323, 192, 214,
	149, 128, 142, 160, 191, 252, 488, 298, 0, 0,
	0, 0, 0, 167, 0, 290, 260, 347, 0, 0,
	289, 217, 337, 0, 0, 346, 0, 0, 356, 361,
	0, 0, 0, 313, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 312, 335,
	151, 330, 239, 245, 161, 163, 162, 143, 307, 334,
	156, 165, 317, 294, 324, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 301, 300, 0,
	199, 0, 0, 0, 282, 0, 205, 132, 326, 364,
	150, 211, 331, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	280, 303, 333, 152, 320, 0, 0, 0, 0, 292,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 287,
	321, 353, 0, 145, 134, 327, 345, 157, 302, 305,
	362, 288, 137, 343, 322, 237, 206, 207, 135, 0,
	136, 285, 175, 189, 170, 255, 0, 188, 276, 340,
	341, 168, 365, 146, 355, 139, 147, 354, 248, 0,
	247, 357, 336, 344, 238, 226, 0, 138, 342, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 318, 350, 366, 154,
	0, 306, 332, 0, 0, 155, 187, 180, 271, 246,
	148, 198, 315, 210, 218, 284, 363, 259, 291, 158,
	349, 314, 0, 0, 0, 0, 0, 0, 468, 469,
	470, 471, 472, 476, 477, 481, 482, 491, 490, 489,
	492, 493, 496, 495, 497, 473, 474, 475, 478, 479,
	480, 483, 484, 487, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 79, 281, 185, 351, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 286, 293, 295, 296, 297, 299,
	308, 309, 310, 311, 319, 325, 338, 339, 358, 360,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 494, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 328, 0, 0, 0,
	0, 216, 0, 0, 2176, 316, 240, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 445, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 267, 283, 304, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 359, 0, 0, 0, 277, 0, 323,
	192, 214, 149, 128, 142, 160, 191, 252, 488, 298,
	0, 0, 0, 0, 0, 167, 0, 290, 260, 347,
	0, 0, 289, 217, 337, 0, 0, 346, 0, 0,
	356, 361, 0, 0, 0, 313, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	312, 335, 151, 330, 239, 245, 161, 163, 162, 143,
	307, 334, 156, 165, 317, 294, 324, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 301,
	300, 0, 199, 0, 0, 0, 282, 0, 205, 132,
	326, 364, 150, 211, 331, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 280, 303, 333, 152, 320, 0, 0, 0,
	0, 292, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 287, 321, 353, 0, 145, 134, 327, 345, 157,
	302, 305, 362, 288, 137, 343, 322, 237, 206, 207,
	135, 0, 136, 285, 175, 189, 170, 255, 0, 188,
	276, 340, 341, 168, 365, 146, 355, 139, 147, 354,
	248, 0, 247, 357, 336, 344, 238, 226, 0, 138,
	342, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 318, 350,
	366, 154, 0, 306, 332, 0, 0, 155, 187, 180,
	271, 246, 148, 198, 315, 210, 218, 284, 363, 259,
	291, 158, 349, 314, 0, 0, 0, 1289, 0, 0,
	468, 469, 470, 471, 472, 476, 477, 481, 482, 491,
	490, 489, 492, 493, 496, 495, 497, 473, 474, 475,
	478, 479, 480, 483, 484, 487, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 281, 185, 351, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 286, 293, 295, 296,
	297, 299, 308, 309, 310, 311, 319, 325, 338, 339,
	358, 360, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 1161, 494, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 328, 0,
	0, 0, 0, 216, 0, 0, 2174, 316, 240, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 267, 283, 304, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 359, 0, 0, 0, 277,
	0, 323, 192, 214, 149, 128, 142, 160, 191, 252,
	488, 298, 0, 0, 0, 0, 0, 167, 0, 290,
	260, 347, 0, 0, 289, 217, 337, 0, 0, 346,
	0, 0, 356, 361, 0, 0, 0, 313, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 312, 335, 151, 330, 239, 245, 161, 163,
	162, 143, 307, 334, 156, 165, 317, 294, 324, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 301, 300, 0, 199, 0, 0, 0, 282, 0,
	205, 132, 326, 364, 150, 211, 331, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 280, 303, 333, 152, 320, 0,
	0, 0, 0, 292, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 287, 321, 353, 0, 145, 134, 327,
	345, 157, 302, 305, 362, 288, 137, 343, 322, 237,
	206, 207, 135, 0, 136, 285, 175, 189, 170, 255,
	0, 188, 276, 340, 341, 168, 365, 146, 355, 139,
	147, 354, 248, 0, 247, 357, 336, 344, 238, 226,
	0, 138, 342, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	318, 350, 366, 154, 0, 306, 332, 0, 0, 155,
	187, 180, 271, 246, 148, 198, 315, 210, 218, 284,
	363, 259, 291, 158, 349, 314, 0, 0, 0, 0,
	0, 0, 468, 469, 470, 471, 472, 476, 477, 481,
	482, 491, 490, 489, 492, 493, 496, 495, 497, 473,
	474, 475, 478, 479, 480, 483, 484, 487, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 281, 185, 351, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 286, 293,
	295, 296, 297, 299, 308, 309, 310, 311, 319, 325,
	338, 339, 358, 360, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	328, 0, 0, 0, 0, 216, 0, 0, 0, 316,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 445,
	0, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 267, 283, 304,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 359, 0, 0,
	0, 277, 0, 323, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 298, 0, 0, 0, 0, 0, 167,
	0, 290, 260, 347, 0, 0, 289, 217, 337, 0,
	0, 346, 0, 0, 356, 361, 0, 0, 0, 313,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 312, 335, 151, 330, 239, 245,
	161, 163, 162, 143, 307, 334, 156, 165, 317, 294,
	324, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 301, 300, 0, 199, 0, 0, 0,
	282, 0, 205, 132, 326, 364, 150, 211, 331, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 280, 303, 333, 152,
	320, 0, 0, 0, 0, 292, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 287, 321, 353, 0, 145,
	134, 327, 345, 157, 302, 305, 362, 288, 137, 343,
	322, 237, 206, 207, 135, 0, 136, 285, 175, 189,
	170, 255, 0, 188, 276, 340, 341, 168, 365, 146,
	355, 139, 147, 354, 248, 0, 247, 357, 336, 344,
	238, 226, 0, 138, 342, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 318, 350, 366, 154, 0, 306, 332, 0,
	0, 155, 187, 180, 271, 246, 148, 198, 315, 210,
	218, 284, 363, 259, 291, 158, 349, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 281, 185,
	351, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	286, 293, 295, 296, 297, 299, 308, 309, 310, 311,
	319, 325, 338, 339, 358, 360, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 0, 0, 0, 0, 216, 0, 0,
	0, 316, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 267,
	283, 304, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 359,
	0, 0, 0, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 298, 0, 0, 0, 0,
	0, 167, 0, 290, 260, 347, 0, 0, 289, 217,
	337, 0, 0, 346, 0, 0, 356, 361, 0, 0,
	0, 313, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 301, 300, 0, 199, 0,
	0, 0, 282, 0, 205, 132, 326, 364, 150, 211,
	331, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 280, 303,
	333, 152, 320, 0, 0, 0, 0, 292, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 318, 350, 366, 154, 0, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	281, 185, 351, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 328, 0, 0, 0, 0, 216,
	0, 0, 0, 316, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 267, 283, 304, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 2152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 359, 0, 0, 0, 277, 0, 323, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 298, 0, 0,
	0, 0, 0, 167, 0, 290, 260, 347, 0, 0,
	289, 217, 337, 0, 0, 346, 0, 0, 356, 361,
	0, 0, 0, 313, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 312, 335,
	151, 330, 239, 245, 161, 163, 162, 143, 307, 334,
	156, 165, 317, 294, 324, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 301, 300, 0,
	199, 0, 0, 0, 282, 0, 205, 132, 326, 364,
	150, 211, 331, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	280, 303, 333, 152, 320, 0, 0, 0, 0, 292,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 287,
	321, 353, 0, 145, 134, 327, 345, 157, 302, 305,
	362, 288, 137, 343, 322, 237, 206, 207, 135, 0,
	136, 285, 175, 189, 170, 255, 0, 188, 276, 340,
	341, 168, 365, 146, 355, 139, 147, 354, 248, 0,
	247, 357, 336, 344, 238, 226, 0, 138, 342, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 318, 350, 366, 154,
	0, 306, 332, 0, 0, 155, 187, 180, 271, 246,
	148, 198, 315, 210, 218, 284, 363, 259, 291, 158,
	349, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 281, 185, 351, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 286, 293, 295, 296, 297, 299,
	308, 309, 310, 311, 319, 325, 338, 339, 358, 360,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 328, 0, 0, 0,
	0, 216, 0, 0, 0, 316, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 267, 283, 304, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 359, 0, 0, 0, 277, 0, 323,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 298,
	0, 0, 0, 0, 0, 167, 0, 290, 260, 347,
	0, 0, 289, 217, 337, 0, 0, 346, 0, 0,
	356, 361, 0, 0, 0, 313, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	312, 335, 151, 330, 239, 245, 161, 163, 162, 143,
	307, 334, 156, 165, 317, 294, 324, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 301,
	300, 0, 199, 0, 0, 0, 282, 0, 205, 132,
	326, 364, 150, 211, 331, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 280, 303, 333, 152, 320, 0, 0, 0,
	0, 292, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 287, 321, 353, 0, 145, 134, 327, 345, 157,
	302, 305, 362, 288, 137, 343, 322, 237, 206, 207,
	135, 0, 136, 285, 175, 189, 170, 255, 0, 188,
	276, 340, 341, 168, 365, 146, 355, 139, 147, 354,
	248, 0, 247, 357, 336, 344, 238, 226, 0, 138,
	342, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 318, 350,
	366, 154, 0, 306, 332, 0, 0, 155, 187, 180,
	271, 246, 148, 198, 315, 210, 218, 284, 363, 259,
	291, 158, 349, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 281, 185, 351, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 286, 293, 295, 296,
	297, 299, 308, 309, 310, 311, 319, 325, 338, 339,
	358, 360, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 328, 0,
	0, 0, 0, 216, 0, 0, 0, 316, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 267, 283, 304, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 359, 0, 0, 0, 277,
	0, 323, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 298, 0, 0, 0, 0, 0, 167, 0, 290,
	260, 347, 0, 0, 289, 217, 337, 0, 0, 346,
	0, 0, 356, 361, 0, 0, 0, 313, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 312, 335, 151, 330, 239, 245, 161, 163,
	162, 143, 307, 334, 156, 165, 317, 294, 324, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 301, 300, 0, 199, 0, 0, 0, 282, 0,
	205, 132, 326, 364, 150, 211, 331, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 280, 303, 333, 152, 320, 0,
	0, 0, 0, 292, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 287, 321, 353, 0, 145, 134, 327,
	345, 157, 302, 305, 362, 288, 137, 343, 322, 237,
	206, 207, 135, 0, 136, 285, 175, 189, 170, 255,
	0, 188, 276, 340, 341, 168, 365, 146, 355, 139,
	147, 354, 248, 0, 247, 357, 336, 344, 238, 226,
	0, 138, 342, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	318, 350, 366, 154, 0, 306, 332, 0, 0, 155,
	187, 180, 271, 246, 148, 198, 315, 210, 218, 284,
	363, 259, 291, 158, 349, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 281, 185, 351, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 286, 293,
	295, 296, 297, 299, 308, 309, 310, 311, 319, 325,
	338, 339, 358, 360, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 1130, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	328, 0, 0, 0, 0, 216, 0, 0, 0, 316,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 267, 283, 304,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 359, 0, 0,
	0, 277, 0, 323, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 298, 0, 0, 0, 0, 0, 167,
	0, 290, 260, 347, 0, 0, 289, 217, 337, 0,
	0, 346, 0, 0, 356, 361, 0, 0, 0, 313,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 312, 335, 151, 330, 239, 245,
	161, 163, 162, 143, 307, 334, 156, 165, 317, 294,
	324, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 301, 300, 0, 199, 0, 0, 0,
	282, 0, 205, 132, 326, 364, 150, 211, 331, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 280, 303, 333, 152,
	320, 0, 0, 0, 0, 292, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 287, 321, 353, 0, 145,
	134, 327, 345, 157, 302, 305, 362, 288, 137, 343,
	322, 237, 206, 207, 135, 0, 136, 285, 175, 189,
	170, 255, 0, 188, 276, 340, 341, 168, 365, 146,
	355, 139, 147, 354, 248, 0, 247, 357, 336, 344,
	238, 226, 0, 138, 342, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 318, 350, 366, 154, 0, 306, 332, 0,
	0, 155, 187, 180, 271, 246, 148, 198, 315, 210,
	218, 284, 363, 259, 291, 158, 349, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 281, 185,
	351, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	286, 293, 295, 296, 297, 299, 308, 309, 310, 311,
	319, 325, 338, 339, 358, 360, 329, 0, 0, 0,
	610, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 0, 0, 0, 0, 216, 0, 0,
	0, 316, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 267,
	283, 304, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 359,
	0, 0, 0, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 298, 0, 0, 0, 0,
	0, 167, 0, 290, 260, 347, 0, 0, 289, 217,
	337, 0, 0, 346, 0, 0, 356, 361, 0, 0,
	0, 313, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 301, 300, 0, 199, 0,
	0, 0, 282, 0, 205, 132, 326, 364, 150, 211,
	331, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 280, 303,
	333, 152, 320, 0, 0, 0, 0, 292, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 147, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 222,
	227, 0, 0, 0, 318, 350, 366, 154, 0, 306,
	332, 0, 0, 155, 187, 180, 271, 246, 148, 198,
	315, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	281, 185, 351, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 269, 270,
	278, 0, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 328, 0, 0, 0, 0, 216,
	0, 0, 0, 316, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 267, 283, 304, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 123, 0,
	204, 359, 0, 0, 0, 277, 0, 323, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 298, 0, 0,
	0, 0, 0, 167, 0, 290, 260, 347, 0, 0,
	289, 217, 337, 0, 0, 346, 0, 0, 356, 361,
	0, 0, 0, 313, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 312, 335,
	151, 330, 239, 245, 161, 163, 162, 143, 307, 334,
	156, 165, 317, 294, 324, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 301, 300, 0,
	199, 0, 0, 0, 282, 0, 205, 132, 326, 364,
	150, 211, 331, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	280, 303, 333, 152, 320, 0, 0, 0, 0, 292,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 287,
	321, 353, 0, 145, 134, 327, 345, 157, 302, 305,
	362, 288, 137, 343, 322, 237, 206, 207, 135, 0,
	136, 285, 175, 189, 170, 255, 0, 188, 276, 340,
	341, 168, 365, 146, 355, 139, 147, 354, 248, 0,
	247, 357, 336, 344, 238, 226, 0, 138, 342, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 318, 350, 366, 154,
	0, 306, 332, 0, 0, 155, 187, 180, 271, 246,
	148, 198, 315, 210, 218, 284, 363, 259, 291, 158,
	349, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 281, 185, 351, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 286, 293, 295, 296, 297, 299,
	308, 309, 310, 311, 319, 325, 338, 339, 358, 360,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 328, 0, 0, 0,
	0, 216, 0, 0, 0, 316, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 267, 283, 304, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 359, 0, 0, 0, 277, 0, 323,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 298,
	0, 0, 0, 0, 0, 167, 0, 290, 260, 347,
	0, 0, 289, 217, 337, 0, 0, 346, 0, 0,
	356, 361, 0, 0, 0, 313, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	312, 335, 151, 330, 239, 245, 161, 163, 162, 143,
	307, 334, 156, 165, 317, 294, 324, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 301,
	300, 0, 199, 0, 0, 0, 282, 0, 205, 132,
	326, 364, 150, 211, 331, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 280, 303, 333, 152, 320, 0, 0, 0,
	0, 292, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 287, 321, 353, 0, 145, 134, 327, 345, 157,
	302, 305, 362, 288, 137, 343, 322, 237, 206, 207,
	135, 0, 136, 285, 175, 189, 170, 255, 0, 188,
	276, 340, 341, 168, 365, 146, 355, 139, 147, 354,
	248, 0, 247, 357, 336, 344, 238, 226, 0, 138,
	342, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 222, 227, 0, 0, 0, 318, 350,
	366, 154, 0, 306, 332, 0, 0, 155, 187, 180,
	271, 246, 148, 198, 315, 210, 218, 284, 363, 259,
	291, 158, 349, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 281, 185, 351, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 269, 270, 278, 0, 286, 293, 295, 296,
	297, 299, 308, 309, 310, 311, 319, 325, 338, 339,
	358, 360, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 213, 0,
	0, 166, 221, 219, 0, 0, 0, 263, 328, 0,
	0, 0, 0, 216, 0, 0, 0, 316, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 348, 267, 283, 304, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	144, 0, 0, 0, 204, 359, 0, 0, 0, 277,
	0, 323, 192, 214, 149, 128, 142, 160, 191, 252,
	0, 298, 0, 0, 0, 0, 0, 167, 0, 290,
	260, 347, 0, 0, 289, 217, 337, 0, 0, 346,
	0, 0, 356, 361, 0, 0, 0, 313, 177, 0,
	133, 0, 274, 172, 209, 0, 0, 0, 164, 0,
	0, 0, 312, 335, 151, 330, 239, 245, 161, 163,
	162, 143, 307, 334, 156, 165, 317, 294, 324, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 301, 300, 0, 199, 0, 0, 0, 282, 0,
	205, 132, 326, 364, 150, 211, 331, 0, 186, 251,
	169, 261, 262, 183, 130, 279, 233, 234, 232, 235,
	190, 0, 0, 0, 280, 303, 333, 152, 320, 0,
	0, 0, 0, 292, 0, 0, 0, 224, 179, 182,
	193, 200, 0, 287, 321, 353, 0, 145, 134, 327,
	345, 157, 302, 305, 362, 288, 137, 343, 322, 237,
	206, 207, 135, 0, 136, 285, 175, 189, 170, 255,
	0, 188, 276, 340, 341, 168, 365, 146, 355, 139,
	147, 354, 248, 0, 247, 357, 336, 344, 238, 226,
	0, 138, 342, 236, 225, 212, 181, 195, 272, 220,
	273, 196, 243, 242, 244, 222, 227, 0, 0, 0,
	318, 350, 366, 154, 0, 306, 332, 0, 0, 155,
	187, 180, 271, 246, 148, 198, 315, 210, 218, 284,
	363, 259, 291, 158, 349, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 140, 215, 0, 281, 185, 351, 0,
	174, 0, 0, 0, 0, 0, 129, 141, 153, 159,
	173, 178, 184, 194, 197, 201, 202, 203, 208, 223,
	228, 229, 230, 231, 249, 250, 253, 254, 257, 258,
	264, 265, 266, 268, 269, 270, 278, 0, 286, 293,
	295, 296, 297, 299, 308, 309, 310, 311, 319, 325,
	338, 339, 358, 360, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	213, 0, 0, 166, 221, 219, 0, 0, 0, 263,
	328, 0, 0, 0, 0, 216, 0, 0, 0, 316,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 348, 267, 283, 304,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 144, 0, 0, 0, 204, 359, 0, 0,
	0, 277, 0, 323, 192, 214, 149, 128, 142, 160,
	191, 252, 0, 298, 0, 0, 0, 0, 0, 167,
	0, 290, 260, 347, 0, 0, 289, 217, 337, 0,
	0, 346, 0, 0, 356, 361, 0, 0, 0, 313,
	177, 0, 133, 0, 274, 172, 209, 0, 0, 0,
	164, 0, 0, 0, 312, 335, 151, 330, 239, 245,
	161, 163, 162, 143, 307, 334, 156, 165, 317, 294,
	324, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 352, 0, 301, 300, 0, 199, 0, 0, 0,
	282, 0, 205, 132, 326, 364, 150, 211, 331, 0,
	186, 251, 169, 261, 262, 183, 130, 279, 233, 234,
	232, 235, 190, 0, 0, 0, 280, 303, 333, 152,
	320, 0, 0, 0, 0, 292, 0, 0, 0, 224,
	179, 182, 193, 200, 0, 287, 321, 353, 0, 145,
	134, 327, 345, 157, 302, 305, 362, 288, 137, 343,
	322, 237, 206, 207, 135, 0, 136, 285, 175, 189,
	170, 255, 0, 188, 276, 340, 341, 168, 365, 146,
	355, 139, 147, 354, 248, 0, 247, 357, 336, 344,
	238, 226, 0, 138, 342, 236, 225, 212, 181, 195,
	272, 220, 273, 196, 243, 242, 244, 222, 227, 0,
	0, 0, 318, 350, 366, 154, 0, 306, 332, 0,
	0, 155, 187, 180, 271, 246, 148, 198, 315, 210,
	218, 284, 363, 259, 291, 158, 349, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 140, 215, 0, 281, 185,
	351, 0, 174, 0, 0, 0, 0, 0, 129, 141,
	153, 159, 173, 178, 184, 194, 197, 201, 202, 203,
	208, 223, 228, 229, 230, 231, 249, 250, 253, 254,
	257, 258, 264, 265, 266, 268, 269, 270, 278, 0,
	286, 293, 295, 296, 297, 299, 308, 309, 310, 311,
	319, 325, 338, 339, 358, 360, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 0, 213, 0, 0, 166, 221, 219, 0, 0,
	0, 263, 328, 0, 0, 0, 0, 216, 0, 0,
	0, 316, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 348, 267,
	283, 304, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 144, 0, 0, 0, 204, 359,
	0, 0, 0, 277, 0, 323, 192, 214, 149, 128,
	142, 160, 191, 252, 0, 298, 0, 0, 0, 0,
	0, 167, 0, 290, 260, 347, 0, 0, 289, 217,
	337, 0, 0, 346, 0, 0, 356, 361, 0, 0,
	0, 313, 177, 0, 133, 0, 274, 172, 209, 0,
	0, 0, 164, 0, 0, 0, 312, 335, 151, 330,
	239, 245, 161, 163, 162, 143, 307, 334, 156, 165,
	317, 294, 324, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 301, 300, 0, 199, 0,
	0, 0, 282, 0, 205, 132, 326, 364, 150, 211,
	331, 0, 186, 251, 169, 261, 262, 183, 130, 279,
	233, 234, 232, 235, 190, 0, 0, 0, 280, 303,
	333, 152, 320, 0, 0, 0, 0, 292, 0, 0,
	0, 224, 179, 182, 193, 200, 0, 287, 321, 353,
	0, 145, 134, 327, 345, 157, 302, 305, 362, 288,
	137, 343, 322, 237, 206, 207, 135, 0, 136, 285,
	175, 189, 170, 255, 0, 188, 276, 340, 341, 168,
	365, 146, 355, 139, 630, 354, 248, 0, 247, 357,
	336, 344, 238, 226, 0, 138, 342, 236, 225, 212,
	181, 195, 272, 220, 273, 196, 243, 242, 244, 626,
	227, 0, 0, 0, 318, 350, 366, 154, 0, 306,
	332, 0, 0, 155, 187, 180, 271, 631, 629, 620,
	621, 210, 218, 284, 363, 259, 291, 158, 349, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 140, 215, 0,
	281, 185, 351, 0, 174, 0, 0, 0, 0, 0,
	129, 141, 153, 159, 173, 178, 184, 194, 197, 201,
	202, 203, 208, 223, 228, 229, 230, 231, 249, 250,
	253, 254, 257, 258, 264, 265, 266, 268, 627, 628,
	278, 0, 286, 293, 295, 296, 297, 299, 308, 309,
	310, 311, 319, 325, 338, 339, 358, 360, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 0, 213, 0, 0, 166, 221, 219,
	0, 0, 0, 263, 328, 0, 0, 0, 0, 216,
	0, 0, 0, 316, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	348, 267, 283, 304, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 144, 0, 0, 0,
	204, 359, 0, 0, 0, 277, 0, 323, 192, 214,
	149, 128, 142, 160, 191, 252, 0, 298, 0, 0,
	0, 0, 0, 167, 0, 290, 260, 347, 0, 0,
	289, 217, 337, 0, 0, 346, 0, 0, 356, 361,
	0, 0, 0, 313, 177, 0, 133, 0, 274, 172,
	209, 0, 0, 0, 164, 0, 0, 0, 312, 335,
	151, 330, 239, 245, 161, 163, 162, 143, 307, 334,
	156, 165, 317, 294, 324, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 352, 0, 301, 300, 0,
	199, 0, 0, 0, 282, 0, 205, 132, 326, 364,
	150, 211, 331, 0, 186, 251, 169, 261, 262, 183,
	130, 279, 233, 234, 232, 235, 190, 0, 0, 0,
	280, 303, 333, 152, 320, 0, 0, 0, 0, 292,
	0, 0, 0, 224, 179, 182, 193, 200, 0, 287,
	321, 353, 0, 145, 134, 327, 1155, 157, 302, 305,
	362, 288, 137, 343, 322, 237, 206, 207, 135, 0,
	136, 285, 175, 189, 170, 255, 0, 188, 276, 340,
	341, 168, 365, 146, 355, 139, 147, 354, 248, 0,
	247, 357, 336, 344, 238, 226, 0, 138, 342, 236,
	225, 212, 181, 195, 272, 220, 273, 196, 243, 242,
	244, 222, 227, 0, 0, 0, 318, 350, 366, 154,
	0, 306, 332, 0, 0, 155, 187, 180, 271, 246,
	148, 198, 315, 210, 218, 284, 363, 259, 291, 158,
	349, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 140,
	215, 0, 281, 185, 351, 0, 174, 0, 0, 0,
	0, 0, 129, 141, 153, 159, 173, 178, 184, 194,
	197, 201, 202, 203, 208, 223, 228, 229, 230, 231,
	249, 250, 253, 254, 257, 258, 264, 265, 266, 268,
	269, 270, 278, 0, 286, 293, 295, 296, 297, 299,
	308, 309, 310, 311, 319, 325, 338, 339, 358, 360,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 0, 213, 0, 0, 166,
	221, 219, 0, 0, 0, 263, 328, 0, 0, 0,
	0, 216, 0, 0, 0, 316, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 348, 267, 283, 304, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 144, 0,
	0, 0, 204, 359, 0, 0, 0, 277, 0, 323,
	192, 214, 149, 128, 142, 160, 191, 252, 0, 298,
	0, 0, 0, 0, 0, 167, 0, 290, 260, 347,
	0, 0, 289, 217, 337, 0, 0, 346, 0, 0,
	356, 361, 0, 0, 0, 313, 177, 0, 133, 0,
	274, 172, 209, 0, 0, 0, 164, 0, 0, 0,
	312, 335, 151, 330, 239, 245, 161, 163, 162, 143,
	307, 334, 156, 165, 317, 294, 324, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 352, 0, 301,
	300, 0, 199, 0, 0, 0, 282, 0, 205, 132,
	326, 364, 150, 211, 331, 0, 186, 251, 169, 261,
	262, 183, 130, 279, 233, 234, 232, 235, 190, 0,
	0, 0, 280, 303, 333, 152, 320, 0, 0, 0,
	0, 292, 0, 0, 0, 224, 179, 182, 193, 200,
	0, 287, 321, 353, 0, 145, 134, 327, 617, 157,
	302, 305, 362, 288, 137, 343, 322, 237, 206, 207,
	135, 0, 136, 285, 175, 189, 170, 255, 0, 188,
	276, 340, 341, 168, 365, 146, 355, 139, 630, 354,
	248, 0, 247, 357, 336, 344, 238, 226, 0, 138,
	342, 236, 225, 212, 181, 195, 272, 220, 273, 196,
	243, 242, 244, 626, 227, 0, 0, 0, 318, 350,
	366, 154, 0, 306, 332, 0, 0, 155, 187, 180,
	271, 631, 629, 620, 621, 210, 218, 284, 363, 259,
	291, 158, 349, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 140, 215, 0, 281, 185, 351, 0, 174, 0,
	0, 0, 0, 0, 129, 141, 153, 159, 173, 178,
	184, 194, 197, 201, 202, 203, 208, 223, 228, 229,
	230, 231, 249, 250, 253, 254, 257, 258, 264, 265,
	266, 268, 627, 628, 278, 0, 286, 293, 295, 296,
	297, 299, 308, 309, 310, 311, 319, 325, 338, 339,
	358, 360, 36, 0, 72, 39, 40, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 59, 0, 0, 0,
	0, 0, 78, 0, 59, 0, 41, 0, 0, 0,
	78, 0, 0, 0, 41, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 2741, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	0, 0, 0, 0, 0, 0, 2513, 0, 0, 0,
	0, 2682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 2514,
	0, 0, 0, 0, 0, 0, 0, 2514, 0, 0,
	0, 0, 0, 0, 0, 49, 77, 76, 0, 0,
	0, 0, 47, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2515, 0, 0, 0, 0, 57, 58, 0, 2515, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2516,
	75, 0, 53, 54, 61, 0, 62, 2516, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	3629, -1000, -319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1795, -1000, -1000, -1000, -1000,
	-1000, -1000, 1006, 256, -1000, 283, 257, 29451, 570, 867,
	30435, -1000, -1000, -1000, 211, 516, 30435, 427, 440, 1177,
	1657, 1174, 32, -75, -85, 137, 23054, 22561, 13, -1000,
	1849, 1853, -1000, -1000, 528, 57, -1000, -1000, -1000, 20100,
	207, -1000, -1000, 1770, 1793, 1566, -1000, 13212, 528, 528,
	28959, 32403, -1000, 1847, 30435, 11734, -1000, 562, 30435, -161,
	523, 523, 339, 523, 523, 569, -1000, 834, -1000, -1000,
	-1000, -1000, 30435, 26007, 525, 29943, 525, 525, 525, 525,
	525, 525, 525, 30435, -1000, 631, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 30435, 1172, 1699,
	883, 123, -1000, -1000, -1000, 866, -1000, 312, 297, 321,
	288, 80, 917, 1766, -1000, 1459, 1770, 1770, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 329, 548, 185, 207, 794,
	-1000, 1698, 1696, 1075, 1692, 526, 1691, 1490, -42, -1000,
	1170, 30435, -1000, -1000, 1043, 1039, 1523, 1399, 618, 1522,
	-1000, -1000, 305, 584, 1484, 405, 1484, 1484, 1484, 1484,
	1484, -94, 1484, 1484, 1484, 99, 1484, 128, 1484, 1484,
	1484, 1484, 1484, 1187, -1000, -1000, -1000, 368, 1392, 1441,
	1518, 522, -1000, -1000, -1000, -1000, 1519, 1750, 568, -1000,
	-126, 1437, 21084, -1000, 1459, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1196,
	1701, 985, 16164, 1619, -1000, -1000, 948, 1833, -1000, 19608,
	630, -1000, 16164, 3219, 1459, -1000, -1000, 1459, -1000, -1000,
	-1000, 583, -1000, -1000, 18132, 18132, 18132, 18132, 18132, 18132,
	18132, 18132, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1459, 1459, 1459, 1459,
	1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459,
	1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459,
	1459, 1459, 1459, 1459, -1000, -1000, 1459, -1000, 12720, 1459,
	1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459,
	1459, 16164, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459,
	1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 28467, 26499,
	30435, 1474, 1264, -1000, -1000, 628, 1455, -100, 31911, -1000,
	-1000, -1000, -1000, 30927, 25515, 793, -1000, -1000, -1000, -1000,
	1685, -1000, -1000, 626, -1000, 1795, -1000, -1000, 1348, 513,
	-1000, 4209, 24017, -1000, -1000, -1000, 1489, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29943, 1747, 553, 1168, 878, 1167,
	1160, 1158, 26007, 26007, 523, 1152, 1454, 547, 1451, 546,
	1182, 30435, 1724, 1517, 30435, 1150, 1147, 1146, 1145, 26007,
	26007, -1000, 11239, -1000, -1000, 883, -1000, 1099, 16164, 523,
	523, 30435, 30435, 30435, 30435, -1000, -1000, 883, 883, 883,
	883, 852, 1832, 852, -1000, 852, -1000, -1000, 16164, -1000,
	18132, 25023, 680, -1000, -1000, -1000, 1144, 328, -1000, -1000,
	-1000, -1000, -1000, -1000, 1143, 526, 526, -1000, 1098, 526,
	1433, -1000, 788, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 526, -1000, 15672, -316, -1000,
	-1000, 1444, -1000, 261, -1000, -1000, 347, 347, 201, 26007,
	26007, 26007, -1000, 1484, 29943, -1000, 1484, 1484, 1484, -105,
	1484, 1484, -1000, -1000, 1484, -1000, -1000, -1000, -1000, -1000,
	1484, -1000, -1000, -1000, 1484, 1484, -1000, 1484, 1484, -1000,
	-1000, -1000, -1000, -1000, 26007, 347, 172, 1438, 347, 26007,
	26007, -1000, 522, -1000, 82, 79, 77, 76, -1000, -1000,
	-1000, -1000, 75, 73, -1000, -1000, 1566, -1000, -1000, 207,
	-1000, -1000, 30435, -117, 21084, 1437, 1741, 9754, -1000, -1000,
	-1000, 1842, 711, 1417, -1000, -1000, 1436, -1000, 952, 624,
	1027, 1526, -1000, -1000, -1000, 30435, -1000, 16164, 16164, 1015,
	-1000, 21576, -1000, -1000, -1000, -1000, 9259, 754, 18132, 942,
	761, 18132, 18132, 18132, 18132, 18132, 18132, 18132, 18132, 18132,
	18132, 18132, 18132, 18132, 18132, 18132, 1029, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1142, -1000, 207, 1060, 1060,
	641, 641, 641, 641, 641, 641, 641, 23546, 1738, 14196,
	14196, 14196, 1738, 1196, 1196, 14196, 14196, 14196, 14196, 14196,
	14196, 1738, 1738, 14196, 1196, 1196, 1196, 1196, 14196, 14196,
	14196, 14196, 1738, 14196, 14196, 14196, 1738, 1196, 1346, 908,
	12720, 14196, 14196, 14196, 1196, 16164, 16164, 15180, 14688, 16656,
	14196, 14196, 1738, 851, 908, 30927, -1000, -1000, 17640, -1000,
	-1000, -1000, -1000, -1000, 1196, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 29943, 29943, 14196, 14196, 14196, 14196, 727,
	30435, -1000, 1391, 1509, -1000, -1000, -1000, 1739, 24531, 19116,
	-1000, 727, 1388, 26499, 30435, -1000, -1000, 26499, 30435, 8764,
	31419, 1418, -1000, -113, -125, -100, -1000, -1000, 637, -1000,
	-1000, -1000, 12227, -1000, 10249, 1770, 1566, 6289, 10744, -1000,
	24017, 1489, -1000, -53, -1000, -1000, -1000, 1468, -1000, 1468,
	286, 23, 1468, 1468, 1468, 1468, 1468, -20, -20, -20,
	-20, -9, -1000, -1000, -1000, -1000, -1000, 1488, 1487, -1000,
	1468, 1468, 1468, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1478, 306, 1476, 1476, 1476, 1476, 1476, 364,
	364, -1000, 16164, 1493, -1000, 30435, -1000, 1723, -1000, 294,
	1485, 1390, -1000, 186, 1248, 30435, -1000, 30435, 30435, 26007,
	26007, 26007, 590, -1000, 30435, 1434, -1000, -1000, -1000, -1000,
	-1000, 1377, -1000, 1248, -1000, -1000, -1000, -1000, -1000, 908,
	1140, 1136, -1000, -1000, -1000, 860, -1000, -1000, -1000, -1000,
	883, 30435, 30435, 30435, 1734, 883, 908, 785, 1495, 1459,
	1196, -1000, -1000, 1134, -1000, 1433, 1433, -1000, 1433, 526,
	1060, 1433, -1000, 1343, 1718, 1093, 30435, -1000, 21084, -43,
	-1000, -136, 27975, -1000, -1000, -1000, 27975, -1000, 99, 174,
	-1000, 545, -1000, 1326, -1000, -1000, -1000, -1000, 1484, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27975, 129,
	170, 27975, 1377, 1831, -1000, -1000, -1000, -1000, -1000, 1759,
	-1000, 1738, 1196, 181, -1000, -1000, -1000, 1459, 1292, 623,
	-1000, 1575, 985, 985, 16164, -1000, -1000, -1000, 10249, 1762,
	-1000, 1592, 1590, 1535, -1000, -1000, 754, 777, -1000, -1000,
	947, -1000, -1000, -1000, -1000, 622, 1459, -1000, 3054, -1000,
	-1000, -1000, -1000, 942, 18132, 18132, 18132, 785, 3054, 3070,
	1578, 1281, 641, 945, 945, 663, 663, 663, 663, 663,
	829, 829, -1000, -1000, -1000, 1196, -1000, -1000, -1000, 14196,
	1320, -1000, -1000, 908, 619, 1320, 1320, 14196, -176, -176,
	1196, 1320, 1320, 1320, 1196, 1320, 14196, 14196, 1320, -176,
	-176, -176, -176, 1320, 1320, 1320, 1320, 14196, 1320, 1320,
	1320, 14196, -1000, 16164, -1000, 1196, 1320, 1320, 1320, -1000,
	897, 826, 721, 1830, 1320, 714, 1828, 1320, 1307, 18132,
	18132, 18132, 1320, 1320, 14196, 880, -1000, 16164, 1196, -1000,
	800, 1432, 1430, 1320, 1196, 1423, 1320, 1320, 194, 1459,
	-1000, 10249, 26499, 26499, 26499, 26499, 26499, -1000, 1546, 1540,
	-1000, 1563, 1534, 1570, 21084, 1324, 1196, 275, 24531, -1000,
	1459, -1000, 20592, 601, 561, 559, 557, 1808, 26499, 1290,
	-1000, 1290, -1000, 617, -1000, -1000, 30927, -100, -128, -1000,
	-1000, 1418, -1000, 1041, -1000, -1000, 908, -1000, 615, 1701,
	1738, 1415, 5794, -1000, -1000, -1000, -1000, 513, -1000, -1000,
	-1000, 1483, 23525, -1000, 1613, 666, 677, 1109, 1610, -1000,
	-1000, 640, -55, -1000, -1000, 1034, -20, -20, 1468, 1468,
	279, 1468, -1000, -20, -1000, -1000, -1000, 637, 1683, 637,
	637, 637, 637, -20, 1089, 1089, -1000, -1000, -1000, -1000,
	1033, -1000, 1478, -1000, 1032, -1000, -1000, -1000, -1000, -1000,
	-1000, 956, 1516, 29943, 207, 1731, -1000, 1825, -1000, -1000,
	596, 97, 26007, 179, 384, 204, -1000, 544, -1000, 543,
	-1000, -1000, -1000, -1000, -1000, -1000, 30435, 26007, -1000, -1000,
	1808, 1132, 1131, -1000, -1000, -1000, 852, 883, 1672, -1000,
	-1000, 18132, 26007, -1000, 307, -1000, -1000, -1000, -1000, 727,
	566, -1000, -1000, -120, -1000, -1000, 539, 598, 595, 538,
	-1000, 108, 26007, -1000, 29943, -1000, 1827, 1826, 127, 1818,
	26007, -1000, 61, 1526, -1000, 1412, -1000, 679, 667, 739,
	380, 380, -1000, 762, 380, 725, -1000, 200, -1000, 9754,
	9754, 1559, -1000, -1000, -1000, 30435, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8269, 14196, -1000, 785, 3054,
	3021, -1000, 18132, -1000, 1320, 14196, -176, 7774, -176, -176,
	1320, -1000, 27483, -1000, -176, -176, -176, -176, -176, -176,
	1320, 1320, -176, -1000, -1000, -1000, -1000, -176, -176, -176,
	-176, 1320, -176, -176, -176, 1196, 908, -1000, -1000, -1000,
	-1000, 184, 1029, 184, 18132, 18132, -1000, 18132, 18132, -1000,
	-1000, 18132, 2963, 1878, 1353, -215, -1000, 1322, 792, -1000,
	16164, 989, -1000, -1000, 18132, 18132, -1000, -1000, -1000, -1000,
	1515, 10249, 1459, 6784, -1000, 29943, 1341, -1000, 782, 774,
	1509, 1482, 1514, 1382, -1000, -1000, -1000, -1000, 1538, -1000,
	1537, -1000, -1000, 1463, -1000, -1000, 1395, 1459, 29943, 18132,
	601, -1000, 1459, 1459, 1459, 1795, 16164, 1290, -1000, -1000,
	673, -1000, -1000, -130, -145, -1000, -1000, -1000, 9754, -1000,
	6289, -1000, 6289, -1000, 22068, 379, 1617, 378, -1000, 1109,
	-1000, -1000, 1109, -1000, -1000, -1000, 1477, -1000, 920, -1000,
	-1000, -1000, -1000, -1000, 18132, 1840, -1000, 1612, -1000, 1611,
	1088, -1000, -1000, 1238, 637, 637, -20, -1000, -1000, 1468,
	-1000, 637, -1000, 715, -1000, -1000, -1000, -1000, 637, 1314,
	-1000, 1310, 1394, -1000, 1296, 136, 30435, -1000, -1000, -1000,
	1513, -1000, -1000, -1000, 1236, 1387, -1000, 4209, 1130, 1128,
	1127, -221, 177, -1000, 26007, 144, 186, 412, 1124, 30435,
	26007, -1000, -1000, -1000, -1000, -1000, 883, -1000, 18132, 3054,
	1248, -1000, -1000, -20, 30435, -1000, 26007, 648, 26991, 26007,
	126, 173, -1000, 26007, 26007, 1817, 26007, 1377, 1085, 1535,
	181, 23050, 1109, 642, -1000, -1000, 382, -1000, 22545, 1610,
	1122, 25494, 25002, 29943, 1608, 1602, 1115, 30435, 29943, -1000,
	-1000, 24510, 1114, 16164, -1000, 29943, 29943, 593, -1000, -1000,
	-1000, 1374, 13212, -1000, -1000, 1196, -1000, 18132, 3054, -176,
	-1000, -1000, -1000, -1000, 592, -1000, -1000, -176, -1000, -1000,
	1113, -1000, -1000, -1000, -1000, -1000, -1000, -176, -176, -1000,
	-1000, -1000, -1000, -1000, -176, -1000, -1000, -1000, -1000, 1196,
	1468, 1468, -1000, 1468, 1476, -1000, 1468, 21, 1468, 17,
	1196, 1196, 2908, 2883, 2846, 2210, 800, 18132, 18132, 18132,
	1459, -172, -1000, 908, 16164, 2758, 2326, -1000, 1708, 1384,
	1367, -1000, -1000, 13704, 1196, 1584, 1292, -1000, 20100, 1287,
	-1000, 1795, 10249, 16164, 16164, -1000, -1000, 16164, 1471, -1000,
	16164, -1000, -1000, -1000, -1000, 29943, 269, -1000, 16164, 1287,
	1224, -1000, 29943, 29943, 29943, 1770, 908, -1000, -1000, -1000,
	-1000, 5794, -1000, 1266, -1000, 1468, 1468, 1601, -1000, 666,
	-1000, -1000, -1000, 29943, -1000, 3054, -52, -1000, -1000, -1000,
	-1000, -1000, -1000, 637, -1000, -1000, -1000, -1000, -1000, -20,
	1084, -20, 1021, -1000, 1020, -1000, -1000, -269, 1467, -1000,
	207, 30435, 107, 596, -1000, 4209, 4209, 4209, 125, 117,
	-1000, 900, -1000, -1000, -1000, 1081, 1080, 1079, 1248, 187,
	899, 151, -1000, 1730, -1000, -1000, -1000, 3054, -83, -1000,
	173, -1000, -1000, -1000, 173, -1000, -1000, 159, 1377, 1377,
	26007, 1377, -1000, -1000, -1000, 24510, 360, 4209, 4209, 1493,
	666, 1599, 378, -1000, -1000, -1000, -1000, -1000, -1000, 1111,
	-1000, 665, -1000, 393, 360, 24510, 908, 688, 1703, 9754,
	1799, 26499, -1000, -1000, -1000, 3054, -1000, 7279, -1000, 693,
	-1000, -1000, -1000, -1000, -1000, -1000, 296, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 18132, 18132, 18132, 18132, -1000,
	800, 800, 800, 18132, 1196, 1077, 908, 18132, 18132, 1577,
	-1000, 1459, -1000, -1000, 1459, 193, -1000, 29943, 1770, -1000,
	908, 908, 908, 29943, 908, 1250, -1000, 1459, 18624, -1000,
	21084, 1231, 1231, 1231, -1000, 589, 22068, 1715, 1715, -1000,
	1109, -1000, 1229, -1000, -1000, 637, -1000, 637, 1217, 1207,
	-1000, 22068, -1000, 1758, -1000, 107, -1000, 1067, 246, 215,
	-1000, 245, 236, 232, 230, 222, -1000, -1000, -1000, -1000,
	407, 125, -1000, -45, 1018, 738, 1687, 117, -1000, 1017,
	984, 978, 976, 199, -1000, -1000, -1000, -1000, 202, 186,
	-1000, 411, 1066, 1649, 1643, 1729, 1729, 119, 1377, 1312,
	1198, -1000, -1000, 1110, -1000, -1000, 1465, 1109, 1464, -1000,
	1108, -1000, -1000, 29943, -1000, 360, 1706, 1704, 1459, -1000,
	1797, 1790, 1290, 13212, -1000, -1000, 1795, 1779, -1000, -1000,
	800, 800, 800, 800, -1000, -1000, -1000, 171, -1000, -1000,
	800, 800, 1838, -1000, 1367, 1459, -1000, 207, -1000, -1000,
	1227, -1000, 29943, -1000, -1000, 601, -1000, -1000, -1000, 589,
	-1000, 1107, 762, 1057, -1000, -1000, -1000, -1000, 344, -1000,
	-1000, -1000, -1000, 1225, -1000, 278, 4796, -1000, -1000, -1000,
	-1000, -1000, -1000, 1655, 1654, 260, -1000, 1055, 1054, -1000,
	391, 1036, 597, -181, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 394, 1105, -1000, 150, -1000,
	-1000, 527, 1622, 1620, 1778, -1000, 26007, -1000, -1000, 26499,
	-1000, -1000, 640, 640, 22068, 1493, 22068, -1000, -1000, -1000,
	18132, -1000, 691, -178, 16164, 16164, 1799, -1000, 728, 16164,
	-1000, -1000, -1000, -1000, 1196, 182, -226, -1000, -1000, 10249,
	1367, 1196, -1000, -1000, -1000, -1000, -1000, 967, -1000, 30435,
	589, 267, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16164, 16164, 5299, 4796, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 966, -1000, -1000, 1035, 367,
	149, -1000, 1727, -1000, 1463, 959, 1643, 1777, 1641, 1630,
	-1000, 1049, -223, 1290, 1222, 1461, 1195, 3054, 1193, -1000,
	29943, -1000, 29943, -1000, 908, 1351, -1000, 908, 1797, -1000,
	1196, 208, 208, 1298, -1000, 1556, -218, -244, 1270, -1000,
	-1000, 1460, -1000, 589, 259, -1000, 932, 930, 206, 205,
	4149, -1000, -1000, -1000, -1000, -320, -1000, 133, -1000, 132,
	-1000, -1000, -1000, 1047, -1000, 1645, -1000, 1046, -1000, 1776,
	1773, -1000, 175, 1799, 589, 22068, 589, -1000, 691, 1583,
	1260, -1000, 1719, 16164, -178, -1000, -1000, 210, -1000, 718,
	266, 709, -1000, 1060, -1000, -1000, 1553, -1000, 29943, -1000,
	1104, 1103, 868, -1000, 16164, 4796, 1756, 1755, 1742, 1702,
	9754, 32904, -1000, -1000, -1000, -1000, -1000, 1042, 1016, 24038,
	1797, -1000, 1191, -1000, -1000, 334, 29943, 1459, -1000, -1000,
	891, -1000, -1000, -1000, -1000, -1000, 29943, -224, 1186, 227,
	-1000, -1000, 855, 4796, -1000, 903, -321, 428, 207, 441,
	18132, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 118, 1248,
	-178, 589, 272, -1000, -1000, 210, -1000, -227, 1511, -1000,
	-1000, -1000, -1000, -1000, -1000, 4796, -1000, -322, 4796, 3391,
	-1000, -1000, -1000, 32896, -1000, -1000, -1000, -1000, 188, -1000,
	-1000, 3054, 26007, -1000, -1000, 1459, -1000, -245, 1508, 1507,
	1812, -1000, -323, 4835, -325, 518, 4796, 802, -1000, 16164,
	-1000, 441, -1000, 1248, 17148, -1000, -1000, 1837, -1000, 1835,
	496, 496, 4770, 853, 4796, -1000, -328, 508, 4796, -1000,
	791, -1000, 800, 1196, -1000, -1000, -1000, 359, 971, -1000,
	-1000, -1000, 4593, -1000, -329, 4796, -1000, -1000, -1000, -1000,
	-1000, 392, 4553, -330, -1000, 390, 4796, -1000,
}

var yyPgo = [...]int{
	0, 2303, 2300, 102, 2298, 186, 2297, 2295, 2294, 25,
	16, 11, 27, 2292, 1983, 1973, 1970, 1966, 1964, 2291,
	5, 2289, 2284, 1953, 2280, 2277, 1944, 1941, 1939, 1937,
	2276, 2275, 2274, 1933, 1929, 1924, 15, 2273, 23, 2271,
	4, 151, 160, 2269, 3, 2268, 2254, 9, 2252, 2251,
	1922, 2234, 2231, 2230, 96, 2228, 1913, 1910, 2227, 1905,
	1894, 2225, 2218, 1887, 1883, 1863, 2215, 163, 2214, 2212,
	2208, 148, 99, 155, 2207, 2206, 2205, 114, 82, 2290,
	118, 44, 108, 189, 2203, 29, 57, 185, 2199, 139,
	157, 2196, 162, 2195, 146, 104, 106, 2194, 2193, 169,
	2189, 2188, 2186, 141, 2185, 2183, 1977, 2181, 2174, 167,
	2173, 76, 49, 39, 2171, 2169, 2168, 2167, 2166, 31,
	843, 2163, 2158, 158, 2157, 2154, 87, 2152, 2151, 190,
	2146, 2145, 2139, 144, 40, 2134, 2132, 47, 2131, 53,
	70, 2128, 58, 2119, 142, 2114, 2106, 33, 22, 2105,
	64, 2104, 60, 2102, 143, 174, 1119, 2100, 20, 13,
	18, 2099, 32, 6, 8, 48, 62, 79, 133, 107,
	2097, 35, 41, 132, 100, 93, 37, 2093, 153, 2092,
	91, 164, 136, 140, 159, 2091, 2089, 2088, 999, 2086,
	128, 77, 2085, 111, 817, 161, 123, 2084, 85, 2083,
	2082, 2081, 2080, 2079, 90, 119, 2078, 2077, 45, 21,
	238, 1642, 19, 156, 2075, 46, 2074, 2071, 2069, 2899,
	113, 73, 129, 2067, 127, 94, 51, 2066, 2065, 2064,
	2063, 2061, 2058, 1633, 2057, 2056, 2054, 2053, 92, 97,
	2051, 2049, 131, 98, 2048, 2047, 2046, 2045, 130, 71,
	152, 2043, 121, 124, 138, 2042, 84, 2041, 2040, 50,
	43, 2038, 2036, 2035, 105, 95, 2030, 66, 34, 36,
	63, 24, 154, 2027, 2026, 2024, 80, 83, 2023, 30,
	2022, 2, 10, 14, 2021, 2020, 2019, 2018, 2015, 2014,
	2013, 86, 2012, 2010, 65, 2009, 2007, 1991, 38, 1990,
	1989, 1986, 147, 122, 61, 165, 125, 42, 1985, 1981,
	7, 1978, 126, 1968, 54, 1957, 55, 1949, 1935, 56,
	1927, 1920, 59, 1917, 1915, 168, 1542, 2848, 1901, 166,
	149, 52, 109, 1896, 1892, 0, 691, 170, 177, 1885,
	1859,
}

var yyR1 = [...]int{
	0, 334, 334, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 5, 88, 88, 87, 87, 92,
	6, 6, 7, 7, 9, 9, 70, 70, 10, 11,
	11, 11, 11, 337, 337, 101, 101, 99, 99, 100,
	100, 173, 173, 12, 12, 12, 178, 178, 183, 183,
	183, 186, 186, 186, 186, 164, 165, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 308,
	308, 317, 317, 317, 318, 318, 316, 316, 316, 316,
	316, 320, 320, 321, 321, 319, 319, 319, 319, 323,
	323, 324, 324, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 311, 311, 311,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 326, 326, 327, 327, 328, 328, 329, 329, 329,
	329, 330, 330, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 332, 332, 333, 333, 2, 289, 289,
	290, 290, 291, 291, 291, 291, 292, 292, 293, 293,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	24, 207, 207, 310, 310, 310, 304, 304, 304, 306,
	306, 305, 305, 305, 307, 307, 312, 312, 312, 312,
	312, 314, 314, 314, 314, 314, 314, 315, 315, 315,
	313, 313, 48, 48, 49, 49, 49, 153, 153, 153,
	13, 13, 13, 13, 13, 19, 21, 21, 37, 37,
	38, 22, 22, 22, 22, 39, 39, 40, 25, 25,
	25, 25, 25, 25, 46, 46, 46, 45, 45, 44,
	44, 44, 44, 44, 44, 23, 23, 23, 23, 47,
	47, 42, 42, 41, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 26, 26, 26, 26,
	26, 26, 18, 288, 288, 288, 36, 36, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 52, 261,
	262, 262, 262, 262, 262, 262, 262, 262, 249, 249,
	250, 226, 226, 226, 226, 226, 226, 226, 226, 225,
	225, 225, 225, 229, 229, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 228, 228, 228, 228, 228,
	228, 228, 228, 230, 230, 230, 230, 230, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 232, 232, 232, 232,
	232, 248, 248, 233, 233, 242, 242, 243, 243, 243,
	240, 240, 241, 241, 236, 237, 244, 238, 238, 238,
	239, 239, 239, 247, 247, 247, 247, 234, 35, 274,
	273, 273, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 272, 272, 275, 275, 200, 200, 201, 201,
	251, 251, 271, 271, 270, 270, 269, 269, 269, 260,
	260, 266, 266, 266, 266, 266, 266, 266, 255, 255,
	255, 254, 254, 256, 256, 259, 259, 268, 268, 267,
	267, 252, 252, 252, 276, 276, 276, 276, 276, 253,
	253, 253, 253, 277, 257, 257, 258, 258, 258, 282,
	283, 281, 281, 281, 281, 281, 116, 116, 116, 263,
	263, 263, 264, 264, 264, 265, 265, 265, 286, 286,
	285, 285, 50, 51, 55, 55, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	152, 152, 152, 205, 205, 280, 278, 278, 279, 279,
	15, 15, 53, 53, 309, 309, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 284, 284, 284, 17, 17,
	56, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 84, 192, 192, 191, 191,
	190, 190, 190, 193, 193, 193, 223, 223, 223, 58,
	58, 62, 62, 65, 65, 65, 63, 64, 27, 28,
	28, 28, 28, 29, 206, 206, 60, 60, 61, 61,
	61, 61, 76, 76, 339, 339, 59, 340, 67, 68,
	68, 69, 69, 69, 196, 196, 73, 73, 73, 71,
	71, 71, 72, 72, 78, 78, 82, 82, 82, 82,
	81, 81, 81, 81, 155, 155, 160, 216, 216, 136,
	136, 156, 156, 161, 161, 161, 162, 162, 163, 163,
	163, 163, 163, 158, 158, 157, 157, 159, 124, 124,
	214, 214, 214, 213, 213, 213, 213, 86, 86, 89,
	89, 90, 90, 90, 90, 93, 138, 138, 110, 110,
	111, 111, 111, 111, 111, 122, 122, 172, 172, 171,
	171, 174, 174, 91, 91, 91, 91, 96, 96, 97,
	97, 98, 98, 204, 204, 221, 221, 221, 102, 102,
	102, 104, 103, 103, 103, 103, 105, 105, 107, 108,
	108, 106, 106, 109, 112, 112, 112, 112, 113, 113,
	83, 83, 83, 83, 83, 83, 83, 189, 189, 115,
	115, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 132, 132, 132, 132, 132, 132, 117, 117, 117,
	117, 117, 117, 117, 77, 77, 133, 133, 133, 95,
	94, 94, 80, 80, 79, 79, 134, 134, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 127, 127, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 338, 338, 129, 128, 128, 128, 128, 128, 128,
	74, 74, 74, 74, 74, 222, 222, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	145, 145, 75, 75, 143, 143, 144, 146, 146, 142,
	142, 142, 119, 119, 119, 119, 119, 119, 119, 119,
	121, 121, 121, 147, 147, 135, 135, 85, 148, 148,
	149, 150, 150, 151, 151, 154, 166, 166, 166, 167,
	167, 167, 167, 123, 123, 168, 168, 168, 118, 118,
	118, 118, 118, 118, 118, 170, 170, 169, 169, 169,
	169, 175, 175, 137, 137, 140, 140, 139, 141, 176,
	176, 180, 180, 177, 177, 181, 181, 181, 181, 184,
	184, 185, 185, 185, 182, 182, 182, 179, 179, 179,
	218, 218, 218, 187, 187, 197, 197, 194, 194, 195,
	195, 188, 188, 235, 235, 203, 203, 202, 202, 202,
	198, 198, 198, 199, 199, 215, 215, 211, 211, 217,
	217, 212, 212, 219, 219, 220, 220, 287, 287, 245,
	245, 297, 297, 246, 246, 298, 298, 300, 300, 295,
	295, 296, 296, 299, 299, 30, 301, 301, 302, 302,
	303, 303, 303, 303, 31, 32, 32, 32, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 335, 336,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 11, 13, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 2, 3, 3,
	11, 7, 9, 4, 4, 15, 11, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 0, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 2, 3, 1, 0, 3, 3,
	0, 2, 2, 2, 1, 2, 1, 2, 3, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 0, 3, 1, 1, 0, 1,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 2, 4, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 8,
	0, 1, 2, 0, 1, 7, 1, 3, 8, 8,
	3, 3, 3, 5, 3, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 4, 3, 5, 5, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 4, 5, 7, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 1, 1, 2,
	1, 1, 1, 2, 4, 4, 1, 1, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 3,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 4, 1, 3, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 3, 2,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 6,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 0, 2, 4, 2, 4,
	1, 3, 5, 4, 6, 0, 3, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 3, 1, 3, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 0, 4, 0, 1, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 3, 3, 1, 3, 2, 4,
	1, 2, 1, 2, 2, 2, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -334, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 30, -52, 138, -51, 141, 140, 176, 142, 169,
	64, 293, -65, 296, 297, -339, -206, 221, 222, 20,
	37, 298, 300, 31, 32, 190, 238, 240, 265, -5,
	-88, -6, 8, 391, 139, 294, 171, 170, 26, 440,
	-335, 68, 501, -150, 15, -67, -340, -67, -67, -67,
	-67, -67, -261, -204, 106, 68, 23, -199, 150, 87,
	382, 146, -207, 234, 236, -197, -198, 198, 208, 44,
	157, 156, 147, 234, 147, 148, 150, 382, 146, 183,
	182, 234, 236, 147, -106, -219, 72, -209, 160, 451,
	259, 437, 246, 195, 293, 307, 309, 301, 336, 324,
	438, 452, 161, 216, 145, 292, 322, 325, 369, 159,
	249, 209, 272, 453, 358, 364, 219, 296, 378, 454,
	162, 213, 215, 214, 203, 220, 36, 172, 320, 255,
	313, 224, 198, 455, 445, 311, 28, 193, 456, 283,
	366, 341, 284, 258, 457, 442, 253, 365, 316, 312,
	265, 163, 157, 285, 458, 342, 346, 459, 370, 239,
	286, 460, 461, 462, 149, 245, 305, 306, 463, 199,
	372, 250, 340, 33, 158, 439, 48, 180, 373, 38,
	344, 37, 350, 464, 282, 339, 334, 351, 465, 466,
	467, 468, 263, 261, 262, 264, 338, 304, 333, 211,
	53, 144, 348, 347, 349, 212, 368, 329, 327, 469,
	470, 254, 164, 471, 472, 314, 18, 473, 474, 376,
	175, 256, 257, 42, 475, 476, 477, 110, 478, 479,
	480, 367, 343, 345, 197, 114, 317, 154, 481, 260,
	269, 441, 243, 111, 374, 310, 483, 288, 300, 179,
	174, 377, 278, 484, 222, 485, 486, 487, 166, 488,
	237, 236, 297, 270, 112, 298, 360, 217, 489, 490,
	491, 492, 207, 192, 380, 371, 52, 221, 355, 493,
	273, 289, 303, 156, 223, 494, 247, 294, 43, 7,
	210, 251, 361, 271, 218, 208, 331, 181, 495, 496,
	318, 319, 337, 302, 332, 295, 184, 176, 109, 379,
	356, 443, 234, 290, 326, 323, 187, 330, 497, 150,
	498, 188, 299, 375, 248, 321, 357, 147, 131, 325,
	369, 138, 359, 360, 366, -255, 367, 182, 185, -223,
	147, -192, 358, 239, 260, 412, 188, 189, 148, 149,
	33, 371, 370, 362, -219, 151, 299, -76, 142, 177,
	-106, -47, 72, 223, -47, 30, 72, 72, 36, 72,
	298, 361, 361, 75, 441, 191, 21, -326, -307, 269,
	-325, -305, 139, 138, 10, 140, 274, 275, 276, 148,
	8, 31, 482, 165, 277, 278, 6, 169, 279, 280,
	183, 9, 281, -310, 74, 72, -209, 21, -326, -307,
	269, -201, -200, 291, 350, 6, -69, 5, -188, 152,
	295, -87, 450, -92, -221, -219, -210, 74, 408, 409,
	410, 411, 412, 425, 426, 427, 413, 414, 428, 429,
	430, 415, 416, 431, 432, 434, 435, 433, 186, 419,
	418, 417, 420, 421, 51, 423, 422, 424, 81, -3,
	-167, 17, 16, -73, 54, 55, -68, -81, 122, -83,
	-219, -114, 89, -120, 29, 72, -209, 24, -119, -210,
	-115, -142, -141, -95, 131, 132, 133, 120, 121, 128,
	90, 134, -127, -125, -126, -128, -130, -131, 74, 73,
	82, 75, 76, 77, 78, 83, 408, 409, 410, 411,
	412, 425, 426, 427, 413, 414, 428, 429, 430, 415,
	416, 431, 432, 434, 435, 433, 419, 418, 417, 420,
	421, 423, 422, 424, 84, 85, -211, -139, -335, 58,
	59, 177, 146, 392, 393, 394, 395, 396, 436, 167,
	400, 92, 47, 381, 390, 389, 388, 386, 387, 383,
	385, 384, 402, 403, 153, 382, 126, 391, -188, -188,
	11, -99, -100, -106, -109, -219, -177, 295, -184, -181,
	370, 371, -182, -185, -179, -142, 350, 479, 480, 369,
	325, 368, -211, -219, -2, -5, 6, -106, -262, -250,
	-253, -212, 162, -277, -211, -208, 159, 72, -209, 252,
	143, 168, 139, 88, 444, 23, 25, 242, 353, 408,
	91, 131, 409, 410, 411, 16, 20, 92, 130, 81,
	392, 191, 412, 138, 62, 407, 383, 385, 381, 382,
	359, 29, 10, 26, 170, 202, 22, 124, 140, 95,
	96, 97, 173, 274, 275, 24, 171, 266, 85, 276,
	167, 115, 19, 65, 11, 185, 238, 13, 406, 113,
	14, 235, 153, 152, 108, 200, 148, 60, 8, 134,
	27, 105, 56, 413, 414, 447, 45, 190, 448, 58,
	106, 17, 386, 387, 31, 436, 415, 178, 449, 416,
	126, 205, 63, 50, 241, 89, 83, 34, 86, 66,
	287, 87, 15, 201, 61, 404, 244, 267, 182, 482,
	204, 450, 165, 107, 277, 141, 391, 268, 240, 59,
	146, 6, 401, 30, 169, 279, 186, 419, 418, 417,
	420, 206, 57, 394, 395, 421, 280, 499, 147, 94,
	402, 403, 151, 183, 84, 5, 44, 32, 9, 281,
	64, 67, 388, 389, 390, 47, 51, 423, 422, 424,
	93, 12, 405, 440, 148, -106, 391, -195, 153, -195,
	183, 182, -195, -195, 147, 98, -53, -106, -309, -304,
	-310, -194, 153, -211, -194, -194, -194, -194, -194, -194,
	-194, -106, 135, -106, 72, 30, -193, 106, 12, 382,
	146, 147, 183, 150, -257, 11, 108, 186, 186, 186,
	187, 186, -191, 361, 363, 184, 364, 365, 12, -84,
	106, 19, -335, -167, -167, 72, 298, 151, -61, -3,
	-11, -9, -10, -3, 98, 30, 30, 74, 51, 30,
	-42, -41, -43, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 30, -288, 68, -245, 350,
	72, -301, -302, -106, 75, 75, 66, 66, 69, 151,
	69, 66, -327, 270, 68, -327, 236, 270, 271, 208,
	234, 150, -327, -327, 236, -327, -327, -327, -327, -327,
	361, -327, -327, -327, 272, 273, -327, 359, 150, -327,
	-327, -327, -327, -327, 71, 66, 69, 260, 66, 11,
	66, -274, -273, -272, 131, 283, 284, 285, 286, 282,
	260, 287, 288, 289, 186, 290, -67, -7, -5, -335,
	21, 22, 147, 374, 69, -87, -170, -335, -336, 70,
	-168, 19, 31, -123, 75, 78, -151, -154, -83, -219,
	50, -71, 21, 22, 80, 11, -214, 88, 87, 105,
	-213, 23, 72, -209, -210, 74, 135, -83, -117, 108,
	89, 106, 107, 91, 117, 116, 127, 120, 121, 122,
	123, 124, 125, 126, 118, 119, 130, 98, 99, 100,
	101, 102, 103, 104, -189, -335, -95, -335, 136, 137,
	-120, -120, -120, -120, -120, -120, -120, -120, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -3, -134, -83,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -145, -83, -335, -338, -129, -335, -338,
	-129, -338, -129, -338, -335, -338, -129, -338, -129, -338,
	-338, -129, -338, -335, -335, -335, -335, -335, -335, -108,
	27, -106, -86, -89, -90, -91, -110, -94, -335, -106,
	-95, -106, -99, -337, 69, 11, 67, -337, 69, 135,
	69, -178, -183, 372, 374, 295, -182, -182, -218, -211,
	74, 29, 98, 30, 135, -150, -67, 70, 69, -253,
	162, 159, -225, -229, -231, -230, -232, -227, -228, 322,
	325, 329, 327, 323, 328, 131, 326, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 30, 172,
	318, 319, 320, 321, 342, 343, 344, 345, 346, 347,
	348, 349, 301, 324, 438, 302, 303, 304, 305, 306,
	307, 309, 310, 311, 312, 313, 314, 315, 316, 72,
	-210, -277, 68, -211, 23, 150, 72, 89, 72, 72,
	72, -313, -312, -304, -307, -195, 72, 69, 151, 69,
	151, 71, -99, 24, 66, -101, -106, 72, 72, 72,
	72, -306, -304, -307, -220, -219, -208, -193, 74, -83,
	-195, -195, -106, -106, -106, -106, -193, -193, -193, -193,
	-190, 11, 108, 11, -190, -190, -83, -120, -304, 384,
	122, 72, 72, 298, 72, -42, -42, 74, -42, 69,
	98, -42, 70, -134, -287, 500, 69, -303, 23, 374,
	375, 351, -329, 147, 185, 182, -329, -325, 278, -306,
	-305, -304, -327, -328, -211, -327, -327, -327, 361, -327,
	-327, -327, -327, -327, -327, -327, -327, -310, -329, 238,
	69, -329, -306, -304, -272, 282, 282, 282, 282, 282,
	282, -73, -3, -106, 375, 376, -92, 23, -169, -212,
	9, 108, 69, 18, 69, -166, 25, 26, 135, -121,
	51, 75, 78, -196, 49, -106, -83, -83, -132, 83,
	89, 84, 85, -213, 122, -220, -212, -208, -120, -133,
	-139, -95, 79, 108, 106, 107, 91, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -222, 72, 74, 72, -119, -119, -211, -71,
	-79, -82, 122, -83, -219, -79, -79, -71, -336, -336,
	-82, -79, -79, -79, -82, -79, -71, -71, -79, -336,
	-336, -336, -336, -79, -79, -79, -79, -71, -79, -79,
	-79, -71, -336, 69, -336, -3, -79, -79, -79, -336,
	-83, -83, -142, 74, -79, -142, 74, -79, -120, 397,
	398, 399, -79, -79, -71, -143, -144, 93, -142, -336,
	-120, -211, -211, -79, -80, -79, -79, -79, -173, 110,
	-106, 30, 69, -102, -104, -103, -105, 56, 60, 62,
	57, 58, 59, 63, -204, -86, -93, 47, -335, -111,
	110, -112, 23, -221, 64, 152, 65, -173, 67, -86,
	-106, -86, -109, -219, 122, -181, -184, 69, 373, 375,
	376, -178, -239, 130, 66, 86, -83, -212, -220, -167,
	-73, -263, -264, -265, -212, 74, 75, -250, -251, -252,
	-253, -266, 162, -276, 154, 156, 44, -254, 163, 148,
	45, -226, -240, 356, -233, 68, -233, -233, 330, 322,
	325, 323, -233, -233, -233, -233, -233, -238, 325, -238,
	-238, -238, -238, 323, 68, 68, -233, -233, -233, -242,
	68, -242, 317, -243, 68, -243, -243, -243, -243, -277,
	-277, -83, -215, 67, -164, -106, 24, -48, 195, 168,
	68, -308, 69, 29, -314, 235, -106, -106, -106, -304,
	-304, -310, -284, 166, 161, -106, 69, 69, 72, 72,
	-258, 11, 108, -193, -219, -219, -106, -122, 23, -193,
	-77, 173, 67, -338, -336, 72, -41, -119, 70, -107,
	27, 74, -302, -221, 350, 375, -330, 122, -211, -330,
	-333, 440, 151, 70, 69, -327, -330, 256, 238, -330,
	11, -275, 19, -71, -336, -55, -54, 143, 140, 141,
	144, 145, -280, 353, 139, 179, -94, -335, -336, 69,
	135, 52, -123, -123, -154, -187, 19, 11, 47, 47,
	-72, 57, 83, 84, 85, 135, -335, -133, -120, -120,
	-120, -77, 88, -336, -79, 69, -336, 135, -336, -336,
	-79, -155, 404, -155, -336, -336, -336, -336, -336, -336,
	-79, -79, -336, -155, -155, -155, -155, -336, -336, -336,
	-336, -79, -336, -336, -336, -80, -83, -336, -336, -336,
	-336, 69, 67, 23, 11, 11, -336, 11, 11, -336,
	-336, 11, -120, -120, -120, -336, -336, -79, -146, -144,
	95, -83, -336, -336, 69, 69, -336, -336, -336, -336,
	-118, 30, 47, -335, -3, -335, -176, -180, -142, -208,
	-89, -90, -90, -89, -90, 56, 56, 56, 61, 56,
	61, 56, -103, -221, -336, -336, -138, 194, -335, 34,
	-221, -112, 148, 148, 148, -113, 12, -86, -113, -113,
	135, -183, -186, 377, 374, 380, 72, 74, 135, -168,
	69, -265, 98, -253, 68, 72, -259, -210, 45, -254,
	148, 45, -254, -259, 72, -259, 45, 83, 89, -236,
	-237, -244, -247, -234, 29, 66, 353, 154, 45, 44,
	81, -241, 357, 75, -238, -238, -233, -233, -233, 330,
	-233, -238, -239, 30, -239, -239, -239, -239, -238, -248,
	74, -248, 75, -242, 75, 70, 66, -211, -3, 23,
	-49, 8, 9, 10, -289, -290, -291, 72, 108, 200,
	201, -317, 268, -312, 236, 245, 88, 16, 440, 151,
	151, -106, -304, -113, 72, 72, -190, -193, 34, -120,
	-307, 188, 189, -173, 147, -303, 151, 135, 135, 151,
	259, -306, -211, 11, 11, 256, 11, -306, 292, -196,
	69, -205, -254, -286, -252, -253, -285, 155, 162, 163,
	-205, 162, 159, -254, 163, 154, 155, -202, -254, 151,
	23, -205, -205, -260, 98, -205, 110, -212, -212, 53,
	-106, -78, -165, 122, -212, -80, -77, 88, -120, -336,
	-82, -156, -155, 122, -220, -156, -156, -336, -211, -160,
	-335, -155, -156, -156, -155, -155, -155, -336, -336, -155,
	-156, -156, -156, -156, -336, -156, -156, -156, -336, -224,
	131, 322, 172, 320, 313, 340, 327, 355, 318, 356,
	-222, -224, -120, -120, -120, -120, -120, 11, 11, 11,
	437, -150, 97, -83, 94, -120, -120, -175, 66, -176,
	-137, -140, -139, -335, -3, -336, -169, 6, 440, -174,
	-211, -113, 69, 98, 98, -97, -96, 66, 67, -98,
	66, -96, 56, 56, -172, 68, 69, -139, -335, -174,
	-120, -112, -335, -335, -335, -150, -83, -113, 374, 378,
	379, -264, -265, -268, -267, -211, -210, 154, -276, 44,
	-276, -259, -259, 68, 83, -120, 9, 45, 45, 74,
	70, -239, -239, -238, -233, -239, 72, 131, -239, 70,
	69, 70, 69, 70, 69, -116, 456, 89, -106, -164,
	-164, 66, 70, 69, -225, 72, 72, 72, -320, 440,
	241, -318, -316, 247, 248, 249, 250, 251, -307, 246,
	-314, 243, 74, 72, -106, -304, -193, -120, -238, -106,
	-306, 122, 122, -211, -306, 256, -332, 440, -306, -306,
	11, -306, 74, -72, -54, 68, -249, 72, -210, -259,
	-198, 154, 72, 72, 72, -210, 72, -210, -211, 45,
	45, 72, -106, -211, -249, 72, -83, -211, -211, 135,
	-113, 11, 69, -81, -336, -120, -156, 135, -156, -216,
	72, -156, -156, -156, -336, -233, -233, -233, -243, -233,
	306, -233, 306, -336, -336, 19, 19, 19, 19, -336,
	-120, -120, -120, -335, -75, 401, -83, 69, 69, 28,
	-175, 69, -336, -336, 47, -336, -336, 69, -150, -180,
	-83, -83, -83, 68, -83, -171, -211, 194, -336, -112,
	-204, -171, -171, -171, -167, 70, 69, -233, -233, 45,
	-256, -254, -171, -126, -239, -238, 74, -238, 75, 75,
	456, 68, -3, -106, -292, -293, -294, 81, 439, 89,
	202, 203, 164, 204, 205, 206, -291, -225, -225, -225,
	-323, -324, -322, 244, 266, 267, 252, -321, -319, 261,
	262, 263, 264, 88, 74, 74, 74, -315, 235, 88,
	244, 16, 23, -295, -191, -332, -332, 238, -306, -78,
	-249, -152, 167, 168, -225, -225, -215, -256, 45, 72,
	-203, 151, 23, 151, -152, -249, 30, 140, 27, -212,
	-147, 13, -86, -165, -165, 122, -136, 110, -238, 72,
	-120, -120, -120, -120, -336, -336, -336, -120, -336, 74,
	-120, -120, 45, -140, -137, 47, -3, -335, -211, -167,
	-171, 70, 69, -139, -111, -221, -336, -336, -336, -270,
	-269, 67, 158, 81, -267, -166, -166, -259, 70, -239,
	-239, 70, 70, -268, -164, 19, -164, -294, 74, 206,
	202, 206, 206, 206, 206, 207, -311, 81, 242, -322,
	253, 461, 237, 268, 75, 75, 109, 31, 32, -319,
	75, 75, 75, 75, -316, 16, 440, -314, 243, 74,
	74, -296, 38, -298, 39, -331, 23, -331, 256, 11,
	70, 72, -226, -226, 68, -259, 68, 72, -211, -152,
	29, 29, -335, -148, 14, 16, -113, -81, -150, 16,
	-336, -336, -336, -336, -74, 108, 440, -336, -336, 9,
	-137, -3, 70, -211, -112, -269, 72, -260, 74, 165,
	70, 193, -20, -3, -9, -10, -11, -12, -14, -50,
	-15, -16, -21, -22, -17, -56, -57, -65, -63, -64,
	-60, -59, -25, -23, -26, -18, -27, -28, -29, -33,
	-34, -24, -35, 92, 153, 224, 293, 36, 36, 198,
	199, 74, 74, 29, 254, 134, 29, 75, 134, 407,
	243, 74, 72, 244, -235, 152, -299, 43, -297, -246,
	42, 16, -304, -86, -268, -215, -268, -120, -278, -279,
	110, -158, 405, -149, -83, -135, -85, -83, -147, -165,
	-161, 112, 111, -134, -336, 438, 63, 441, -176, -336,
	75, -106, -271, -270, 194, -164, -83, -83, 72, -46,
	-217, 227, 228, 229, -212, -36, -20, 75, 29, 75,
	29, 257, 244, 23, -172, 75, -298, 16, -300, 40,
	41, 74, 440, -113, 70, 68, 70, -336, 69, -211,
	-157, -159, -211, 69, -148, -336, -162, 91, -163, 109,
	407, -124, 75, 134, -162, 53, 439, 442, 68, -153,
	196, 197, -37, -38, 93, 94, 225, 226, 230, -225,
	69, 501, 255, 255, 74, 38, 74, 16, 16, 236,
	-147, -271, -268, -271, -279, 47, 69, 23, -85, -158,
	-163, 114, 115, 194, 114, 115, -119, 53, -171, -164,
	72, 72, 97, 95, -38, -83, -36, 19, 19, 19,
	29, -212, 97, -20, 74, 74, 29, 241, 21, -307,
	-148, 70, 180, -159, -160, 88, -211, 440, 70, -13,
	-19, -12, -9, -10, -11, 293, 92, -36, 94, 501,
	-47, 75, -3, -45, -44, 75, -47, 232, 89, 233,
	72, -120, 258, -158, -271, 181, -163, 441, -282, -283,
	66, -164, -36, 501, -36, 97, 95, -39, -40, 96,
	-20, 69, 231, -307, -335, 442, -283, 66, -282, 66,
	10, 9, 501, 97, 501, 153, -36, 97, 95, -40,
	-83, -44, -120, 178, -281, 166, 161, 164, 30, -281,
	97, 92, 501, 153, -36, 94, -336, -336, 160, 29,
	83, 97, 501, -36, 153, 97, 501, 153,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 707, 707, 707, 707,
	707, 707, 803, -2, 572, 0, 0, 0, 0, -2,
	680, 681, 682, 686, 687, 702, 704, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 40,
	0, 0, 56, 57, 1111, 0, 705, 694, 695, 0,
	0, 1603, 2, 1049, 0, 716, 709, 0, 1111, 1111,
	0, 0, 87, 0, 0, 0, 804, 0, 0, 0,
	1109, 1109, 0, 1109, 1109, 0, 1124, 0, 1106, 1120,
	1121, 1122, 0, 0, 1107, 0, 1107, 1107, 1107, 1107,
	1107, 1107, 1107, 0, 629, 821, 1133, 1134, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 0, 0, 0,
	673, 0, 639, 640, 641, 0, 643, 0, 0, 0,
	0, 0, 653, 656, 660, 0, 1049, 1049, 518, 519,
	520, 677, 678, 667, 679, 0, 0, 0, 0, 0,
	706, 305, 307, 0, 327, 0, 330, 333, 1139, 688,
	0, 0, 1164, 1165, 0, 0, 0, 0, 0, 1485,
	181, 244, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 0, 183, 183, 183, 1497, 183, 0, 183, 183,
	183, 183, 183, 243, 233, 234, 235, 0, 0, 0,
	1485, 0, 499, 496, 497, 707, 0, 711, 0, 1112,
	683, 45, 0, 47, 1065, 805, 806, 807, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 0,
	1055, 0, 0, 719, 717, 718, 708, 0, 730, 760,
	0, 830, 0, 835, 837, -2, -2, 0, 878, 879,
	880, 881, 882, 883, 0, 0, 0, 0, 0, 0,
	0, 0, 907, 908, 909, 910, 911, 912, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596,
	1597, 1599, 1600, 1601, 839, 840, 1019, 1078, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1010, 0, 981, 981, 981, 981, 981, 981, 981,
	981, 981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 67, 69, 821, 73, 1550, 0, 1083,
	-2, -2, 1085, 0, 0, 0, -2, -2, -2, -2,
	1352, -2, 1019, 0, 88, 1041, 707, 89, 0, 370,
	371, 0, 1365, 542, 1131, 1132, 1354, 1127, 1128, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 610, 0, 611, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 630, 631, 673, 633, 0, 0, 1109,
	1109, 0, 0, 0, 0, 544, 545, 673, 673, 673,
	673, 670, 0, 670, 650, 670, 668, 669, 0, 655,
	0, 0, 0, 663, 664, 689, 0, 0, 696, 698,
	699, 700, 701, 697, 0, 0, 0, 309, 0, 0,
	329, 311, 0, 314, 315, 316, 317, 318, 319, 320,
	321, 322, 323, 324, 325, 0, 332, 0, 1137, 1140,
	693, 1155, 1156, 0, 1166, 1167, 187, 187, 0, 0,
	0, 0, 150, 183, 0, 152, 183, 183, 183, 0,
	183, 183, 159, 160, 183, 162, 163, 164, 165, 166,
	183, 168, 169, 170, 183, 183, 173, 183, 183, 176,
	177, 178, 179, 180, 242, 187, 0, 0, 187, 0,
	0, 478, 479, 480, 0, 0, 0, 0, 486, 487,
	488, 489, 0, 0, 492, 493, 716, 42, 52, 0,
	712, 713, 0, 0, 0, 46, 0, 0, 51, 1604,
	37, 0, 0, 1050, 1053, 1054, 1042, 1043, 1046, 0,
	0, 714, 720, 721, 710, 0, 731, 0, 0, 0,
	761, 0, 763, 764, 765, 766, 0, 833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 858, 859,
	860, 861, 862, 863, 836, 0, 850, 0, 0, 0,
	899, 900, 901, 902, 903, 904, 905, 0, 719, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 719, 0, 0, 876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 1011, 0, 964, 973, 0, 965,
	974, 966, 975, 967, 0, 968, 976, 969, 977, 970,
	971, 978, 972, 0, 0, 0, 872, 0, 0, 71,
	0, 820, 0, 767, 769, 770, 771, -2, 0, 824,
	870, -2, 0, 0, 0, 63, 64, 0, 0, 0,
	0, 74, 76, 0, 0, 1550, 1086, 1087, 470, 1100,
	1101, 1102, 0, 1098, 0, 1049, 716, 559, 0, 372,
	0, 0, 381, 460, 390, 391, 392, 453, 394, 453,
	453, 0, 453, 453, 453, 453, 453, 467, 467, 467,
	467, 467, 436, 437, 438, 439, 440, 0, 0, 413,
	453, 453, 453, 417, 443, 444, 445, 446, 447, 448,
	449, 450, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 455, 455, 457, 457, 457, 457, 457, 0,
	0, 541, 0, 1125, 85, 0, 93, 0, 94, 0,
	0, 99, 260, 246, 98, 0, 232, 0, 0, 0,
	0, 237, 625, 1108, 0, 618, 65, 619, 620, 621,
	622, 623, 239, 624, 822, 1135, 1136, 632, 674, 675,
	0, 0, 636, 637, 638, 546, 644, 645, 646, 652,
	673, 0, 0, 0, 785, 673, 654, 864, 657, 981,
	0, 691, 690, 0, 703, 306, 308, 310, 328, 0,
	0, 331, 334, 0, 0, 0, 0, 1158, 0, 1160,
	1162, 0, 0, 188, 189, 190, 0, 182, 0, 205,
	245, 0, 151, 0, 185, 153, 154, 155, 183, 157,
	158, 161, 167, 171, 172, 174, 175, 241, 0, 0,
	0, 0, 148, 0, 481, 482, 483, 484, 485, 494,
	491, 719, 0, 0, 684, 685, 48, 0, 0, 1067,
	1056, 0, 0, 0, 0, 1045, 1047, 1048, 0, 0,
	1030, 0, 0, 722, 715, 39, 831, 832, 834, 851,
	0, 853, 855, 762, 732, 0, 1020, -2, 841, 842,
	866, 867, 868, 0, 0, 0, 0, 864, 846, 0,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 898, 995, 996, 0, 896, 897, 906, 0,
	0, 874, 726, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 872, 869, 0, 1077, 0, 0, 0, 0, 946,
	0, 0, 881, 1022, 0, 881, 1022, 0, 0, 0,
	0, 0, 0, 0, 0, 1017, 1014, 0, 0, 982,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 0,
	819, 0, 0, 0, 0, 0, 0, 808, 0, 0,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	1472, 780, 0, 824, 0, 0, 0, 828, 0, 828,
	68, 828, 70, 0, 823, 1084, 0, 0, 0, 79,
	80, 75, 1088, 0, 1094, 1095, 1096, 1020, 0, 1055,
	719, 369, 560, 562, 565, 566, 567, 373, 375, 376,
	377, 0, -2, 533, 1482, 1528, -2, 525, 1396, -2,
	-2, 380, 462, 461, 393, 0, 467, 467, 453, 453,
	453, 453, 422, 467, 425, 428, 429, 470, 0, 470,
	470, 470, 470, 467, 0, 0, 414, 415, 416, 405,
	0, 406, 455, 408, 0, 409, 410, 411, 412, 539,
	540, 0, 0, 0, 0, 0, 1110, 0, 262, 263,
	208, 101, 0, 0, 247, 0, 368, 0, 612, 0,
	614, 236, 616, 626, 627, 617, 0, 0, 634, 635,
	828, 0, 0, 647, 671, 672, 670, 673, 0, 651,
	665, 0, 0, 658, 0, 692, 312, 313, 335, 71,
	0, 1138, 1157, 0, 1161, 1163, 0, 191, 193, 0,
	142, 0, 0, 184, 0, 156, 0, 0, 0, 0,
	0, 490, 0, 714, 53, 573, 574, -2, 603, 1117,
	603, 603, 591, 509, 603, 0, 49, 0, 1066, 0,
	0, 0, 1051, 1052, 1044, 0, 1103, 1104, 1031, 1032,
	86, 723, 852, 854, 856, 0, 872, 843, 864, 847,
	0, 844, 0, 838, 0, 0, 741, 0, 741, 741,
	0, 932, 0, 933, 0, 741, 741, 0, 0, 0,
	0, 0, 0, 939, 940, 941, 942, 741, 741, 741,
	741, 0, 741, 741, 741, 0, 877, -2, 943, 944,
	945, 0, 0, 0, 0, 0, 988, 0, 0, 989,
	954, 0, 0, 0, 0, 0, 960, 1041, 0, 1015,
	0, 0, 963, 983, 0, 0, 984, 985, 986, 987,
	1071, 0, 0, 0, 1060, 0, 828, 1079, 0, 0,
	768, 799, 801, 0, 796, 809, 810, 812, 0, 814,
	0, 816, 817, 787, 774, 871, 775, 0, 0, 0,
	824, 784, 0, 0, 0, 1041, 0, 828, 61, 62,
	0, 77, 78, 0, 0, 84, 471, 472, 0, 207,
	0, 563, 0, 374, 0, 526, 0, 0, 511, 525,
	521, 522, 525, 516, 526, 517, 0, 382, 0, 384,
	385, 386, 387, 388, 0, 0, 466, 0, 474, 476,
	0, 389, 463, 0, 470, 470, 467, 420, 421, 453,
	426, 470, 430, 0, 431, 432, 433, 434, 470, 0,
	451, 0, 0, 407, 0, 556, 0, 1126, 85, 85,
	0, 264, 265, 266, 0, 209, 210, 0, 0, 0,
	0, 111, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 66, 240, 642, 547, 548, 673, 649, 0, 865,
	659, 661, 662, 467, 0, 1159, 0, 0, 0, 0,
	0, 203, 186, 0, 0, 0, 0, 149, 0, 722,
	0, 0, 525, 0, 592, 593, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1118,
	1119, 0, 0, 0, 510, 0, 0, 1069, 1068, 1057,
	38, 828, 0, 733, 1021, 0, 845, 0, 848, 741,
	875, 917, 742, 728, 0, 918, 919, 741, 734, 735,
	737, 934, 921, 922, 935, 936, 937, 741, 741, 938,
	926, 925, 924, 927, 741, 930, 929, 931, 913, 0,
	453, 453, 1000, 453, 457, 1003, 453, 1005, 453, 1008,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 962, 1018, 0, 0, 0, 54, 0, 1071,
	1058, 1073, 1075, 0, 0, 0, 0, -2, 1332, 0,
	791, 1041, 0, 0, 0, 793, 800, 0, 0, 794,
	0, 795, 813, 815, 772, 0, 0, 776, 0, 0,
	-2, 783, 0, 0, 0, 1049, 829, 60, 81, 82,
	83, 561, 564, 0, 527, 453, 453, 0, 531, 523,
	532, 513, 515, 0, 383, 464, 0, 473, 475, 477,
	454, 418, 419, 470, 427, 423, 468, 469, 435, 467,
	0, 467, 0, 458, 0, 543, 557, 0, 0, 91,
	0, 0, 216, 0, 212, 0, 0, 0, 119, 0,
	102, 103, 104, 106, 107, 0, 0, 0, 100, 0,
	249, 0, 252, 253, 613, 615, 648, 786, 1149, 818,
	203, 192, 194, 195, 203, 206, 143, 0, 144, 146,
	0, 145, 495, 86, 575, 0, 600, 0, 0, 1125,
	523, 0, -2, 578, 583, 584, 585, 586, 587, 0,
	598, 0, 580, 0, 600, 0, 595, 0, 0, 0,
	1033, 0, 86, 86, 914, 849, 916, 0, 920, 739,
	738, 915, 923, 928, 947, 997, 467, 1001, 1002, 1004,
	1006, 1007, 1009, 949, 948, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 1016, 0, 0, 0,
	55, 0, 1076, -2, 0, 0, 72, 0, 1049, 1080,
	1081, 1082, 797, 0, 802, 0, 789, 0, 824, 781,
	0, 0, 0, 0, 59, 501, 0, 1046, 1046, 512,
	525, 524, 0, 465, 424, 470, 452, 470, 0, 0,
	558, 0, 85, 0, 85, 217, 218, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 211, 213, 214, 215,
	137, 120, 121, 0, 0, 0, 0, 112, 113, 0,
	0, 0, 0, 0, 108, 109, 110, 248, 0, 0,
	251, 0, 0, 1151, 1145, 196, 196, 0, 147, 0,
	0, 577, 601, 0, 381, 381, 0, 525, 0, 594,
	0, 1115, 1116, 0, 589, 600, 0, 0, 0, 1070,
	1038, 0, 828, 0, 724, 729, 1041, 0, 998, 999,
	0, 0, 0, 0, 956, 957, 958, 990, 961, 1013,
	0, 0, 0, 1074, 1059, 0, 1063, 0, 792, 58,
	0, 788, 0, 777, 779, 824, 825, 826, 827, 500,
	504, 0, 509, 0, 528, 529, 530, 514, 0, 441,
	442, 456, 459, 0, 92, 0, 0, 219, 220, 221,
	222, 224, 225, 0, 0, 0, 97, 0, 0, 122,
	0, 0, 0, 0, 132, 133, 134, 135, 136, 114,
	115, 116, 117, 118, 105, 0, 0, 250, 0, 255,
	256, 1113, 1153, -2, 0, 140, 0, 141, 204, 0,
	576, 602, 378, 379, 0, 1125, 0, 579, 588, 590,
	0, 597, 0, 753, 0, 0, 1033, 86, 743, 0,
	950, 952, 951, 953, 0, 0, 0, 979, 980, 0,
	1062, 0, 798, 790, 782, 505, 506, 0, 508, 0,
	502, 0, 85, 338, 339, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 0, 0, 0, 0, 226, 227, 228,
	229, 138, 139, 123, 124, 0, 126, 127, 0, 0,
	0, 258, 0, 254, 787, 0, 1145, 0, 1147, 0,
	1144, 0, 197, 828, 0, 0, 0, 596, 0, 606,
	0, 43, 0, 1039, 1040, 1034, 1035, 1037, 1038, 725,
	0, 0, 0, 740, 959, 0, 0, 0, 1072, -2,
	507, 0, 90, 503, 267, 96, 0, 0, 1127, 0,
	0, 294, 295, 296, 1129, 0, 336, 0, 128, 0,
	130, 131, 257, 0, 36, 0, 1152, 0, 1150, 0,
	0, 1146, 0, 1033, 502, 0, 502, 605, 0, 0,
	754, 755, 0, 0, 753, 736, 744, 0, 747, 0,
	0, 0, 758, 0, 745, 991, 0, 994, 0, 85,
	0, 0, 0, 278, 0, 0, 0, 0, 0, 292,
	0, 0, 125, 129, 259, 1114, 1154, 0, 0, 0,
	1038, 581, 0, 599, 607, 0, 0, 0, 1036, 44,
	0, 748, 749, 750, 751, 752, 0, 992, 0, 0,
	268, 269, 0, 0, 279, 0, 0, 0, 0, 0,
	0, 1130, 230, 337, 1148, 1142, 198, 199, 200, 202,
	753, 502, 0, 756, 757, 0, 759, 0, 534, 85,
	270, 271, 272, 273, 274, 0, 276, 0, 0, 0,
	288, 289, 290, 0, 297, 299, 300, 301, 0, 303,
	304, 293, 0, 41, 582, 0, 746, 0, 535, 536,
	0, 95, 0, 0, 0, 0, 0, 0, 285, 0,
	291, 0, 302, 201, 0, 993, 537, 0, 538, 0,
	0, 0, 0, 0, 280, 281, 0, 0, 0, 286,
	0, 298, 0, 0, 549, 551, 552, 0, 0, 550,
	275, 277, 0, 283, 0, 0, 608, 609, 553, 554,
	555, 0, 0, 0, 282, 0, 287, 284,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 135, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 501,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:481
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:485
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:492
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:527
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:539
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:546
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:576
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Window: yyDollar[11].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:583
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:592
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:596
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:606
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:612
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:618
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:632
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:638
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:650
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.str = InsertStr
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.str = ReplaceStr
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:672
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:682
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:686
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:690
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:710
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:729
		{
			yyVAL.partitions = nil
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:733
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:743
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:750
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:763
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:769
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:791
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:800
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:805
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:811
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:834
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:838
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 93:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:842
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:850
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:858
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 96:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:862
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:866
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:894
		{
			yyVAL.accountNames = nil
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:903
		{
			yyVAL.tlsOptionItems = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:907
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:917
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:927
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:939
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:948
		{
			yyVAL.accountLimitItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:972
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:976
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:985
		{
			yyVAL.passLockItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:999
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1013
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1025
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1029
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1033
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1037
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1062
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1077
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1082
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1086
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1090
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1096
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1101
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1105
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1109
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1117
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1147
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1258
		{
			yyVAL.strs = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1303
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantAssumption = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 201:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1345
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1365
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1373
		{
			yyVAL.procedureParams = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1377
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1410
		{
			yyVAL.characteristics = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1438
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1446
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1472
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1509
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1569
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1573
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1577
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1581
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1587
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1599
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1603
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1607
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1613
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1621
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = BeforeStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = AfterStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = InsertStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = UpdateStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = DeleteStr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1660
		{
			yyVAL.triggerOrder = nil
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1668
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1690
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1694
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1704
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1710
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1716
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 282:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1721
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1726
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 284:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1732
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1750
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1768
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1776
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1865
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.statement = &Resignal{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1958
		{
			yyVAL.exprs = nil
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.exprs = nil
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2017
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2033
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2060
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2073
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2087
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2097
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = ColumnType{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2383
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2391
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 442:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2458
		{
			yyVAL.sqlVal = nil
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2467
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2471
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2479
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2483
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2489
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2497
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2546
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.colKeyOpt = colKey
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Options: yyDollar[3].flushOptions}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.flushOptions = yyDollar[1].flushOptions
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.flushOptions = []*FlushOption{yyDollar[1].flushOption}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.flushOptions = append(yyVAL.flushOptions, yyDollar[2].flushOption)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2606
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2626
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2642
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = yyDollar[1].str
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2668
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2672
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2677
		{
			yyVAL.indexOptions = nil
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2691
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2712
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2726
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2734
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2743
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = yyDollar[1].str
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = ""
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2803
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 534:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2833
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 535:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2837
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 536:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2841
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 537:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2845
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 538:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2849
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2863
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2873
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2935
		{
			yyVAL.boolean = true
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.boolean = true
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2943
		{
			yyVAL.boolean = false
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2948
		{
			yyVAL.str = ""
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = string("")
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3013
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3026
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3030
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3036
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3043
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3054
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3063
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 582:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3067
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3091
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3095
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3099
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3106
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3116
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3128
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3137
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3141
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3149
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3156
		{
			yyVAL.columnOrder = nil
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3169
		{
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
		}
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3175
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3191
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3195
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3215
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3227
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3233
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3241
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3245
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3253
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3261
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3269
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3277
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3285
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3293
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3302
		{

		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3306
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3310
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3316
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3336
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3344
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3348
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3352
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3356
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3360
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3376
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3380
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3384
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3388
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3392
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3396
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3400
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 649:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3405
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3414
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3418
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3422
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3426
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3444
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3449
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3453
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3458
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 661:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3462
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3466
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3486
		{
			yyVAL.boolean = false
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3490
		{
			yyVAL.boolean = true
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3520
		{
			yyVAL.showFilter = nil
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.str = SessionStr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = GlobalStr
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.statement = &Begin{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3568
		{
			yyVAL.statement = &Begin{}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3572
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3576
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.statement = &Commit{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.statement = &Rollback{}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3600
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3604
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3608
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3612
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			setAllowComments(yylex, true)
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3676
		{
			yyVAL.bytes2 = nil
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = UnionStr
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = UnionAllStr
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = UnionDistinctStr
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3699
		{
			yyVAL.byt = 0
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.byt = 1
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = SQLCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = DistinctStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = StraightJoinHint
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3752
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3775
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3793
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3809
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.exprs = nil
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3831
		{
			yyVAL.over = nil
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.over = yyDollar[1].over
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3840
		{
			yyVAL.frame = nil
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3844
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3848
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3855
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3893
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3897
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3905
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3920
		{
			yyVAL.window = nil
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3923
		{
			yyVAL.window = yyDollar[2].window
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3951
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4006
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4022
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4028
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4038
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4044
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4049
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4064
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4068
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.expr = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.columns = nil
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4120
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4133
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4137
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4141
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4145
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4153
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4163
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4165
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4168
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.empty = struct{}{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = JoinStr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = JoinStr
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = JoinStr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = StraightJoinStr
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = LeftJoinStr
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = LeftJoinStr
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = RightJoinStr
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = RightJoinStr
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = NaturalJoinStr
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4237
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4263
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4268
		{
			yyVAL.indexHints = nil
		}
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4272
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4276
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4280
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.expr = nil
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4289
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4303
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4307
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4311
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4349
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4353
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4357
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4361
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4369
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4373
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4377
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = IsNullStr
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = IsNotNullStr
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = IsTrueStr
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = IsNotTrueStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = IsFalseStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = IsNotFalseStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = EqualStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = LessThanStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = GreaterThanStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = LessEqualStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = GreaterEqualStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = NotEqualStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4442
		{
			yyVAL.expr = nil
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4446
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4482
		{
			yyVAL.selectExprs = nil
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4503
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4597
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4605
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4655
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4659
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 920:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4701
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4729
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4742
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4770
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4778
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4793
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4797
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 951:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4825
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 952:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4829
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 953:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4833
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4837
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4845
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 957:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4849
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4853
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 959:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4857
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4861
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 961:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4865
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4869
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4873
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4887
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4917
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4921
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4926
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4949
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4953
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 980:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5004
		{
			yyVAL.str = ""
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{
			yyVAL.str = BooleanModeStr
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 993:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = QueryExpansionStr
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5036
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5040
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5052
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5066
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5074
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5078
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5086
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = nil
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5100
		{
			yyVAL.str = string("")
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5104
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5114
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5120
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = nil
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5143
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5165
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5169
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5173
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5177
		{
			yyVAL.expr = &NullVal{}
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.exprs = nil
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5210
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5221
		{
			yyVAL.expr = nil
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5236
		{
			yyVAL.orderBy = nil
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5256
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = AscScr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = AscScr
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = DescScr
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5274
		{
			yyVAL.limit = nil
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5282
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5286
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5292
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = ForUpdateStr
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = ShareModeStr
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5322
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5326
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5334
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5339
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5343
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5347
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5353
		{
			yyVAL.columns = nil
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5357
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5367
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5371
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5375
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5380
		{
			yyVAL.assignExprs = nil
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5384
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5394
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5400
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5404
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5410
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5430
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5439
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5449
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5466
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5479
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5492
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5508
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5512
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5522
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5526
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5537
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5548
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.expr = &Default{}
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5561
		{
			yyVAL.byt = 0
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.byt = 1
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5566
		{
			yyVAL.byt = 0
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5568
		{
			yyVAL.byt = 1
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5571
		{
			yyVAL.byt = 0
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.byt = 1
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = IgnoreStr
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5581
		{
			yyVAL.sqlVal = nil
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5583
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.empty = struct{}{}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5592
		{
			yyVAL.empty = struct{}{}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5596
		{
			yyVAL.empty = struct{}{}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.str = UniqueStr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.str = FulltextStr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.str = SpatialStr
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5607
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5612
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5614
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5632
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5639
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5649
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = string("")
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5663
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5666
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5671
		{
			yyVAL.EnclosedBy = nil
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5675
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5680
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5684
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5689
		{
			yyVAL.sqlVal = nil
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5693
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5698
		{
			yyVAL.sqlVal = nil
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5702
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5707
		{
			yyVAL.Fields = nil
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5711
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.Lines = nil
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5720
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5725
		{
			yyVAL.sqlVal = nil
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5729
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5735
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5745
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5751
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5755
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.lockType = LockRead
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5765
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.lockType = LockWrite
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5773
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5779
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5785
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5789
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5793
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6267
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
