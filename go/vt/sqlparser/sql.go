// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:63
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const SEQUENCE = 57508
const EACH = 57509
const ROW = 57510
const BEFORE = 57511
const FOLLOWS = 57512
const PRECEDES = 57513
const DEFINER = 57514
const INVOKER = 57515
const INOUT = 57516
const OUT = 57517
const DETERMINISTIC = 57518
const CONTAINS = 57519
const READS = 57520
const MODIFIES = 57521
const SQL = 57522
const SECURITY = 57523
const TEMPORARY = 57524
const CLASS_ORIGIN = 57525
const SUBCLASS_ORIGIN = 57526
const MESSAGE_TEXT = 57527
const MYSQL_ERRNO = 57528
const CONSTRAINT_CATALOG = 57529
const CONSTRAINT_SCHEMA = 57530
const CONSTRAINT_NAME = 57531
const CATALOG_NAME = 57532
const SCHEMA_NAME = 57533
const TABLE_NAME = 57534
const COLUMN_NAME = 57535
const CURSOR_NAME = 57536
const SIGNAL = 57537
const RESIGNAL = 57538
const SQLSTATE = 57539
const DECLARE = 57540
const CONDITION = 57541
const CURSOR = 57542
const CONTINUE = 57543
const EXIT = 57544
const UNDO = 57545
const HANDLER = 57546
const FOUND = 57547
const SQLWARNING = 57548
const SQLEXCEPTION = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const WORK = 57556
const RELEASE = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const DEC = 57571
const FIXED = 57572
const PRECISION = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const NVARCHAR = 57584
const NATIONAL = 57585
const VARYING = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const LONG = 57591
const BLOB = 57592
const TINYBLOB = 57593
const MEDIUMBLOB = 57594
const LONGBLOB = 57595
const JSON = 57596
const ENUM = 57597
const GEOMETRY = 57598
const POINT = 57599
const LINESTRING = 57600
const POLYGON = 57601
const GEOMETRYCOLLECTION = 57602
const MULTIPOINT = 57603
const MULTILINESTRING = 57604
const MULTIPOLYGON = 57605
const NULLX = 57606
const AUTO_INCREMENT = 57607
const APPROXNUM = 57608
const SIGNED = 57609
const UNSIGNED = 57610
const ZEROFILL = 57611
const LOCAL = 57612
const COLLATION = 57613
const DATABASES = 57614
const SCHEMAS = 57615
const TABLES = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const NAMES = 57623
const CHARSET = 57624
const GLOBAL = 57625
const SESSION = 57626
const ISOLATION = 57627
const LEVEL = 57628
const READ = 57629
const WRITE = 57630
const ONLY = 57631
const REPEATABLE = 57632
const COMMITTED = 57633
const UNCOMMITTED = 57634
const SERIALIZABLE = 57635
const CURRENT_TIMESTAMP = 57636
const DATABASE = 57637
const CURRENT_DATE = 57638
const CURRENT_USER = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const UTC_DATE = 57643
const UTC_TIME = 57644
const UTC_TIMESTAMP = 57645
const REPLACE = 57646
const CONVERT = 57647
const CAST = 57648
const SUBSTR = 57649
const SUBSTRING = 57650
const GROUP_CONCAT = 57651
const SEPARATOR = 57652
const TIMESTAMPADD = 57653
const TIMESTAMPDIFF = 57654
const OVER = 57655
const WINDOW = 57656
const GROUPING = 57657
const GROUPS = 57658
const AVG = 57659
const BIT_AND = 57660
const BIT_OR = 57661
const BIT_XOR = 57662
const COUNT = 57663
const JSON_ARRAYAGG = 57664
const JSON_OBJECTAGG = 57665
const MAX = 57666
const MIN = 57667
const STDDEV_POP = 57668
const STDDEV = 57669
const STD = 57670
const STDDEV_SAMP = 57671
const SUM = 57672
const VAR_POP = 57673
const VARIANCE = 57674
const VAR_SAMP = 57675
const CUME_DIST = 57676
const DENSE_RANK = 57677
const FIRST_VALUE = 57678
const LAG = 57679
const LAST_VALUE = 57680
const LEAD = 57681
const NTH_VALUE = 57682
const NTILE = 57683
const ROW_NUMBER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const MATCH = 57687
const AGAINST = 57688
const BOOLEAN = 57689
const LANGUAGE = 57690
const WITH = 57691
const QUERY = 57692
const EXPANSION = 57693
const UNUSED = 57694
const ARRAY = 57695
const DESCRIPTION = 57696
const EMPTY = 57697
const EXCEPT = 57698
const JSON_TABLE = 57699
const LATERAL = 57700
const MEMBER = 57701
const RECURSIVE = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const SYSTEM = 57759
const INFILE = 57760

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"LOCAL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 31,
	5, 47,
	-2, 835,
	-1, 39,
	140, 896,
	141, 922,
	-2, 116,
	-1, 46,
	180, 492,
	181, 492,
	-2, 482,
	-1, 53,
	1, 1329,
	436, 1329,
	-2, 518,
	-1, 433,
	127, 932,
	-2, 926,
	-1, 434,
	127, 933,
	-2, 927,
	-1, 535,
	97, 1151,
	127, 1151,
	-2, 880,
	-1, 536,
	97, 1252,
	127, 1252,
	-2, 881,
	-1, 541,
	97, 1171,
	127, 1171,
	-2, 882,
	-1, 542,
	97, 1210,
	127, 1210,
	-2, 883,
	-1, 543,
	97, 1211,
	127, 1211,
	-2, 884,
	-1, 544,
	97, 1106,
	127, 1106,
	-2, 888,
	-1, 546,
	97, 1189,
	127, 1189,
	-2, 890,
	-1, 980,
	1, 572,
	5, 572,
	12, 572,
	13, 572,
	14, 572,
	15, 572,
	17, 572,
	19, 572,
	30, 572,
	31, 572,
	56, 572,
	57, 572,
	58, 572,
	59, 572,
	60, 572,
	62, 572,
	63, 572,
	66, 572,
	67, 572,
	69, 572,
	70, 572,
	436, 572,
	-2, 602,
	-1, 984,
	67, 64,
	69, 64,
	-2, 68,
	-1, 1174,
	127, 935,
	-2, 931,
	-1, 1337,
	68, 353,
	-2, 1072,
	-1, 1340,
	68, 349,
	71, 349,
	-2, 1007,
	-1, 1341,
	68, 350,
	71, 350,
	-2, 1017,
	-1, 1425,
	68, 427,
	71, 427,
	-2, 393,
	-1, 1470,
	5, 48,
	-2, 668,
	-1, 1786,
	1, 623,
	5, 623,
	12, 623,
	13, 623,
	14, 623,
	15, 623,
	17, 623,
	19, 623,
	30, 623,
	31, 623,
	56, 623,
	57, 623,
	58, 623,
	59, 623,
	60, 623,
	62, 623,
	63, 623,
	66, 623,
	67, 623,
	69, 623,
	70, 623,
	436, 623,
	-2, 602,
	-1, 1910,
	5, 48,
	-2, 855,
	-1, 2045,
	41, 942,
	-2, 940,
	-1, 2153,
	5, 48,
	-2, 858,
}

const yyPrivate = 57344

const yyLast = 25316

var yyAct = [...]int{

	467, 76, 431, 2254, 2300, 2170, 2275, 2266, 2256, 2156,
	2265, 1384, 2196, 2059, 2136, 2091, 7, 2090, 6, 2089,
	5, 2092, 8, 2142, 1920, 1799, 2169, 1013, 2019, 1780,
	1294, 1288, 387, 80, 1983, 1562, 438, 1534, 2045, 1687,
	425, 1760, 1587, 1965, 1697, 1382, 1342, 1947, 1151, 2157,
	1292, 1761, 466, 982, 733, 1800, 418, 743, 905, 1696,
	385, 1334, 1641, 1324, 451, 1535, 1286, 99, 366, 369,
	1454, 2088, 3, 1849, 1423, 1323, 1757, 76, 1766, 1374,
	1772, 980, 1144, 1093, 1212, 1708, 1663, 1160, 1199, 1410,
	557, 1664, 1238, 1370, 1270, 1330, 552, 1338, 114, 1230,
	977, 1624, 995, 1113, 1176, 537, 1277, 359, 555, 813,
	421, 436, 809, 772, 551, 994, 846, 533, 534, 855,
	384, 986, 921, 2322, 771, 540, 2318, 529, 2308, 1315,
	922, 2290, 2288, 2270, 2249, 2204, 79, 1135, 526, 1830,
	1941, 528, 2281, 2189, 549, 2264, 553, 696, 417, 82,
	65, 2150, 1948, 2237, 2188, 1725, 2149, 1500, 1895, 706,
	1950, 698, 976, 1233, 697, 1794, 1571, 715, 1311, 1570,
	32, 32, 1572, 364, 720, 1795, 1796, 996, 32, 997,
	360, 32, 363, 84, 85, 86, 87, 88, 110, 106,
	107, 745, 108, 790, 1529, 102, 1741, 2069, 870, 869,
	879, 880, 872, 873, 874, 875, 876, 877, 878, 871,
	1607, 1530, 881, 731, 32, 1344, 68, 35, 36, 2004,
	1312, 1313, 1290, 746, 747, 112, 111, 1346, 1990, 1953,
	1346, 1359, 77, 77, 1371, 361, 362, 94, 1122, 365,
	77, 1886, 480, 77, 486, 488, 487, 484, 485, 483,
	482, 481, 1350, 1352, 1364, 1351, 1359, 1884, 700, 489,
	490, 375, 354, 1709, 382, 1951, 1952, 1954, 1955, 1956,
	2279, 754, 2251, 2201, 2199, 2200, 77, 370, 2042, 2041,
	2040, 2039, 2038, 1436, 2036, 2037, 2158, 1642, 367, 1391,
	96, 2086, 1742, 1922, 93, 2121, 2122, 1435, 2193, 2194,
	104, 103, 1554, 742, 748, 1711, 749, 746, 747, 1599,
	68, 35, 36, 725, 1390, 740, 741, 739, 371, 738,
	702, 701, 2263, 1643, 1604, 1603, 2236, 2137, 1690, 357,
	1271, 2314, 37, 1966, 1967, 732, 732, 2084, 1012, 1440,
	100, 1012, 1803, 1012, 1011, 1854, 1600, 732, 1434, 355,
	101, 1669, 2323, 2320, 2020, 2309, 2291, 76, 76, 699,
	1605, 109, 1597, 1976, 708, 358, 2124, 2022, 1598, 381,
	1646, 1581, 759, 1083, 761, 81, 760, 1069, 795, 756,
	1074, 724, 728, 717, 1713, 730, 803, 1561, 380, 1717,
	381, 1712, 1560, 1710, 1559, 695, 1659, 1123, 1715, 1432,
	1426, 1427, 799, 1425, 703, 1428, 1429, 1644, 1645, 329,
	105, 1714, 368, 1359, 1373, 1975, 893, 894, 726, 729,
	1614, 727, 1877, 1349, 1716, 1718, 1012, 1602, 758, 762,
	755, 368, 1979, 890, 800, 1829, 892, 1949, 2021, 2304,
	1438, 1441, 102, 1870, 895, 896, 897, 898, 899, 900,
	901, 902, 1012, 815, 1297, 1299, 2070, 2148, 1012, 1575,
	859, 368, 1585, 95, 1039, 1585, 903, 1567, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 440,
	920, 923, 923, 923, 929, 923, 923, 929, 923, 929,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 1433, 981, 792, 2245, 794, 69,
	75, 75, 1900, 1473, 1980, 1298, 1974, 1459, 75, 904,
	1444, 75, 1481, 1155, 764, 765, 1007, 104, 103, 734,
	1431, 1819, 992, 861, 723, 1585, 975, 1026, 1584, 1585,
	753, 1584, 1601, 2302, 1671, 1669, 2303, 716, 2301, 1677,
	540, 1316, 1676, 1679, 75, 540, 881, 974, 1307, 984,
	2260, 804, 1147, 2255, 871, 1588, 854, 881, 1688, 1672,
	1437, 2294, 2276, 2293, 1231, 1770, 1130, 2258, 1478, 1040,
	1684, 853, 852, 1820, 924, 926, 928, 930, 932, 934,
	935, 937, 925, 927, 1005, 931, 933, 763, 936, 854,
	704, 1114, 1585, 69, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 852, 1439, 1401, 999,
	1727, 2307, 736, 2197, 1000, 2221, 722, 2220, 1010, 990,
	1231, 1584, 1489, 854, 1892, 1584, 2246, 1671, 1669, 893,
	894, 1076, 1012, 1070, 985, 1673, 1670, 1053, 1056, 1057,
	1058, 1059, 1060, 1061, 1807, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1672, 1041, 1042, 1043, 1044, 1020, 1024, 1054,
	1021, 1027, 1023, 1025, 1022, 750, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 893, 894, 1115, 1584, 732,
	1183, 1683, 91, 368, 849, 1680, 732, 732, 732, 805,
	2172, 2154, 2257, 2259, 1402, 1181, 1182, 1180, 737, 721,
	2315, 732, 732, 870, 869, 879, 880, 872, 873, 874,
	875, 876, 877, 878, 871, 1120, 77, 881, 1940, 90,
	1476, 528, 1475, 1939, 1088, 1629, 1179, 870, 869, 879,
	880, 872, 873, 874, 875, 876, 877, 878, 871, 853,
	852, 881, 1105, 1106, 1107, 2219, 1627, 707, 752, 1108,
	1456, 1457, 1458, 2316, 1608, 1358, 76, 854, 1055, 810,
	2233, 732, 811, 1143, 1200, 2232, 1201, 1095, 874, 875,
	876, 877, 878, 871, 2206, 379, 881, 956, 957, 958,
	959, 960, 944, 945, 946, 961, 962, 947, 948, 949,
	955, 963, 950, 951, 952, 953, 954, 966, 965, 964,
	967, 968, 970, 969, 971, 2178, 1084, 1133, 1117, 1118,
	853, 852, 1573, 1139, 1574, 2083, 2197, 1152, 1153, 2035,
	1997, 1937, 1812, 1625, 1154, 1080, 1175, 1137, 854, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1142, 1100, 1101, 769, 1418, 859,
	1127, 1125, 1126, 76, 1097, 1128, 710, 711, 712, 713,
	714, 523, 524, 1136, 1162, 853, 852, 1098, 907, 768,
	2218, 1131, 2311, 1109, 1110, 891, 1173, 1177, 853, 852,
	2011, 2238, 1141, 854, 853, 852, 1234, 1630, 1166, 1168,
	1169, 2248, 1096, 1157, 1167, 2081, 854, 2053, 1214, 1102,
	1103, 1104, 854, 853, 852, 1172, 1138, 1477, 1931, 2235,
	1220, 1223, 1174, 805, 1111, 1112, 1158, 1232, 1588, 1159,
	1848, 854, 2049, 1850, 904, 869, 879, 880, 872, 873,
	874, 875, 876, 877, 878, 871, 1170, 1850, 881, 1210,
	2183, 805, 1291, 853, 852, 1931, 2180, 981, 1931, 2085,
	2198, 981, 872, 873, 874, 875, 876, 877, 878, 871,
	1972, 854, 881, 1865, 983, 1203, 1204, 1861, 853, 852,
	853, 852, 2011, 2077, 1140, 1729, 2011, 2025, 1302, 1858,
	1206, 1857, 1304, 427, 2011, 805, 854, 1272, 854, 1855,
	540, 1244, 1840, 1246, 1228, 456, 455, 458, 459, 460,
	461, 1303, 1839, 1296, 457, 462, 2011, 2010, 1279, 1282,
	1283, 1284, 1280, 904, 1281, 1285, 1931, 1930, 1773, 1774,
	1913, 805, 1320, 1325, 553, 1443, 805, 2048, 1207, 1209,
	1838, 1653, 1253, 1254, 1217, 1652, 732, 1258, 732, 1300,
	1261, 1872, 1563, 1095, 1412, 1266, 1827, 1826, 1823, 1824,
	2029, 1321, 1823, 1822, 1471, 805, 1274, 805, 1174, 1208,
	1415, 81, 1399, 1398, 1208, 805, 1331, 1202, 1242, 1243,
	1124, 1309, 1308, 434, 1314, 1249, 1250, 1251, 1252, 1305,
	1070, 1121, 1092, 1091, 1328, 1090, 1089, 1081, 1385, 1079,
	1078, 1077, 1075, 791, 1393, 718, 1394, 1395, 374, 1873,
	1396, 1009, 1008, 1563, 76, 1376, 1377, 1378, 1379, 372,
	988, 2028, 1835, 988, 2047, 1208, 1758, 1372, 117, 1769,
	1563, 117, 1813, 1301, 81, 987, 1769, 117, 2185, 1149,
	1406, 1908, 1836, 1825, 1460, 1273, 1782, 1661, 1380, 1576,
	1310, 1471, 1494, 815, 1462, 1463, 1464, 1493, 1129, 117,
	879, 880, 872, 873, 874, 875, 876, 877, 878, 871,
	1274, 117, 881, 1397, 117, 560, 989, 117, 991, 989,
	1173, 987, 1873, 987, 1274, 904, 1150, 1769, 1471, 117,
	1148, 560, 1279, 1282, 1283, 1284, 1280, 117, 1281, 1285,
	1082, 993, 801, 1177, 796, 802, 77, 2191, 2181, 1321,
	1781, 2051, 1414, 1413, 1942, 1346, 1174, 1918, 1375, 1421,
	1806, 1773, 1774, 1419, 1371, 1580, 1392, 1366, 1365, 1071,
	1448, 1446, 1447, 788, 1383, 2285, 2283, 2267, 1834, 1776,
	1455, 1532, 1533, 1758, 1465, 981, 981, 981, 981, 981,
	77, 1631, 983, 1086, 1445, 1461, 1779, 1778, 1403, 1386,
	1546, 1388, 1291, 1409, 1555, 1547, 77, 1543, 1544, 1468,
	1542, 1420, 981, 1545, 1548, 2215, 1283, 1284, 1442, 2187,
	1536, 1694, 870, 869, 879, 880, 872, 873, 874, 875,
	876, 877, 878, 871, 422, 423, 881, 1558, 1161, 1488,
	2213, 847, 848, 1564, 1453, 1452, 2002, 1590, 1565, 1860,
	1566, 1811, 1531, 1810, 1178, 1582, 540, 1550, 2126, 2129,
	2177, 2176, 2046, 1345, 2205, 2044, 1557, 2120, 2119, 814,
	845, 373, 1656, 1210, 1618, 1006, 1467, 786, 770, 862,
	1411, 807, 767, 766, 1470, 1472, 1538, 1539, 1325, 1541,
	1474, 1589, 2228, 808, 719, 76, 1480, 1577, 2057, 1483,
	1484, 1485, 1549, 2056, 1906, 1981, 1491, 732, 1492, 732,
	732, 1495, 1496, 1417, 1497, 1498, 906, 1387, 1502, 1503,
	1504, 1505, 1506, 1568, 1657, 999, 1085, 919, 1691, 1513,
	1514, 1515, 1634, 1517, 1518, 1579, 1520, 1521, 1522, 1523,
	1408, 1525, 1526, 1527, 1583, 1586, 1651, 1537, 1152, 1153,
	1540, 1287, 1070, 117, 847, 848, 2227, 1073, 560, 560,
	1451, 1648, 1551, 1552, 797, 798, 1633, 2226, 1450, 2225,
	560, 983, 2032, 419, 2208, 2207, 983, 1628, 1626, 1703,
	983, 2174, 2130, 2061, 2001, 420, 81, 2060, 1984, 1563,
	1482, 1721, 1722, 1479, 1723, 1724, 2287, 2286, 1617, 1116,
	1619, 1620, 1621, 1622, 117, 850, 1730, 1731, 1636, 1637,
	1638, 1733, 2286, 1695, 2287, 2074, 1809, 1660, 1146, 376,
	1654, 1658, 378, 1674, 1699, 1685, 1686, 1239, 1675, 1689,
	1726, 1667, 1668, 1665, 1678, 1682, 2102, 49, 1173, 2104,
	19, 1763, 83, 76, 52, 1499, 1501, 2103, 18, 2105,
	20, 858, 1507, 1508, 1509, 1510, 2106, 21, 2101, 15,
	2100, 14, 1701, 1700, 78, 1784, 1705, 1707, 1, 1786,
	1788, 1789, 1790, 1720, 1174, 1719, 1536, 1759, 2094, 10,
	1768, 2113, 30, 2112, 29, 2111, 28, 2109, 25, 2108,
	24, 2175, 1655, 1762, 2110, 26, 2099, 13, 1787, 2096,
	12, 2095, 11, 2093, 9, 2125, 1791, 2127, 2043, 1961,
	1793, 1946, 1808, 1945, 1764, 1662, 1640, 1783, 1639, 787,
	1647, 1134, 1649, 1650, 1666, 1765, 1430, 2135, 1332, 1322,
	550, 1777, 89, 1400, 735, 1970, 1804, 337, 1329, 1805,
	1699, 1325, 1704, 1325, 1785, 1595, 2128, 117, 117, 117,
	789, 465, 1798, 1802, 1594, 1832, 1833, 1591, 1606, 1343,
	1593, 1592, 1797, 560, 2123, 1596, 1017, 1015, 1016, 1843,
	1178, 1099, 1014, 1019, 1018, 341, 1001, 2164, 851, 97,
	1837, 53, 1973, 1681, 1424, 1739, 1740, 92, 98, 744,
	1745, 343, 889, 1748, 1449, 1831, 1569, 538, 1753, 1119,
	1380, 539, 1143, 531, 806, 2192, 812, 2138, 1487, 918,
	1841, 1229, 439, 1553, 2141, 1876, 1165, 454, 1852, 453,
	452, 1743, 1744, 1845, 1746, 1747, 449, 1749, 1750, 1751,
	1752, 450, 1754, 1755, 1756, 1407, 1893, 906, 1156, 1528,
	547, 1846, 1871, 556, 1853, 1862, 1847, 863, 1874, 1814,
	1815, 1828, 437, 429, 979, 972, 1818, 1416, 1278, 709,
	1276, 1275, 1087, 1821, 983, 983, 983, 983, 983, 1864,
	527, 1775, 1771, 1289, 978, 383, 66, 1899, 751, 356,
	1894, 983, 2068, 1869, 34, 377, 424, 27, 17, 757,
	22, 983, 1070, 16, 1422, 705, 38, 41, 40, 1635,
	1389, 1163, 1164, 1882, 2163, 1734, 1735, 1736, 1737, 1738,
	2253, 773, 1914, 2274, 2195, 2107, 1536, 2114, 2098, 560,
	2097, 2240, 23, 1926, 1927, 1928, 2239, 1924, 4, 793,
	67, 117, 31, 2, 117, 1360, 1361, 1362, 1363, 1842,
	117, 1933, 560, 0, 76, 1915, 1907, 0, 0, 560,
	560, 560, 117, 117, 117, 1851, 906, 0, 1929, 117,
	1218, 1219, 1325, 1925, 560, 560, 1856, 0, 0, 0,
	0, 1577, 0, 0, 1875, 0, 1958, 1959, 1960, 0,
	0, 0, 1878, 981, 1934, 0, 0, 0, 1968, 0,
	0, 0, 0, 1887, 1888, 0, 0, 0, 1944, 0,
	0, 0, 1991, 1992, 1993, 1994, 1995, 0, 1969, 1957,
	1998, 1999, 1962, 0, 1985, 1943, 1963, 0, 1977, 1763,
	0, 0, 2006, 117, 560, 117, 1802, 560, 1986, 1987,
	0, 0, 1964, 1784, 0, 0, 0, 1909, 1910, 1911,
	1912, 0, 1699, 0, 0, 0, 1901, 1902, 0, 1978,
	0, 0, 1903, 2009, 1319, 1904, 1935, 0, 0, 1923,
	1905, 1971, 0, 0, 0, 2031, 0, 2033, 0, 0,
	2003, 1762, 0, 1380, 117, 0, 0, 0, 2030, 0,
	858, 2008, 0, 0, 2013, 2012, 556, 556, 0, 0,
	2018, 2024, 2058, 2005, 1296, 0, 2014, 2023, 556, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 76, 0, 0,
	1381, 0, 0, 2052, 0, 2050, 560, 0, 0, 0,
	0, 2062, 2055, 0, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 76, 0, 0, 0, 0, 2087,
	0, 0, 0, 0, 0, 2079, 2075, 2080, 981, 0,
	0, 0, 560, 560, 0, 0, 0, 1762, 1996, 2134,
	2073, 2082, 0, 2000, 0, 0, 2026, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2132, 2076, 2131,
	0, 0, 0, 0, 0, 0, 1898, 117, 0, 814,
	2015, 2016, 2017, 2140, 2144, 117, 117, 2145, 2133, 2159,
	117, 117, 0, 0, 117, 117, 117, 2151, 2146, 0,
	0, 1536, 2152, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 560, 560, 0, 870, 869, 879, 880, 872,
	873, 874, 875, 876, 877, 878, 871, 0, 2155, 881,
	0, 0, 0, 1609, 1610, 0, 0, 1469, 0, 0,
	1616, 0, 0, 2171, 0, 2064, 2065, 2066, 2067, 2186,
	1623, 0, 2071, 2072, 2173, 0, 0, 2179, 0, 0,
	1490, 983, 2168, 0, 0, 547, 0, 0, 0, 0,
	547, 1002, 0, 0, 0, 0, 2080, 0, 117, 560,
	2210, 560, 2202, 0, 117, 0, 117, 117, 2212, 76,
	117, 0, 0, 0, 2217, 76, 0, 2211, 2222, 2214,
	2231, 0, 0, 0, 2209, 0, 2216, 0, 2144, 0,
	0, 0, 76, 2234, 0, 2224, 0, 76, 117, 117,
	117, 2261, 2147, 2244, 2250, 2243, 0, 2242, 0, 2241,
	2153, 0, 0, 0, 0, 2262, 76, 0, 2247, 76,
	76, 2268, 0, 0, 76, 2231, 0, 0, 2229, 2277,
	0, 0, 0, 0, 2280, 0, 0, 0, 0, 0,
	0, 76, 2269, 2282, 76, 2271, 2231, 2284, 0, 0,
	0, 2295, 2297, 2298, 0, 0, 0, 0, 0, 76,
	0, 76, 2305, 0, 2231, 76, 2231, 0, 2252, 2182,
	2292, 1897, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 76, 0, 2231, 2190, 0, 0, 0, 76,
	0, 2310, 0, 76, 2231, 0, 0, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 1072, 2319, 0,
	870, 869, 879, 880, 872, 873, 874, 875, 876, 877,
	878, 871, 983, 0, 881, 0, 0, 0, 0, 0,
	556, 0, 0, 0, 0, 0, 0, 556, 556, 556,
	0, 0, 0, 0, 1347, 1348, 0, 1353, 1354, 1355,
	1356, 1357, 556, 556, 0, 0, 0, 0, 117, 117,
	117, 117, 117, 0, 0, 1367, 1368, 1369, 0, 0,
	117, 0, 0, 0, 0, 117, 0, 1816, 0, 117,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1211, 1216, 1728, 0,
	0, 1222, 1225, 1226, 1227, 0, 0, 560, 0, 0,
	0, 0, 556, 0, 0, 1145, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 1891, 0, 1237, 0,
	1240, 1241, 2312, 2313, 0, 1245, 0, 1247, 1248, 0,
	0, 0, 0, 0, 0, 1255, 1256, 1257, 0, 1259,
	1260, 0, 1262, 1263, 1264, 1265, 0, 1267, 1268, 1269,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 1287,
	0, 0, 1792, 556, 0, 0, 0, 0, 0, 0,
	560, 117, 560, 560, 0, 32, 0, 68, 35, 36,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 61,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 37,
	1297, 1299, 0, 0, 1205, 870, 869, 879, 880, 872,
	873, 874, 875, 876, 877, 878, 871, 560, 560, 881,
	0, 0, 547, 117, 0, 0, 0, 1890, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 77, 0, 0,
	1235, 1236, 0, 0, 870, 869, 879, 880, 872, 873,
	874, 875, 876, 877, 878, 871, 0, 0, 881, 0,
	2115, 0, 0, 2273, 2276, 2272, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 1936, 0,
	1938, 1298, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 547, 427, 0, 0, 39,
	70, 43, 42, 45, 0, 0, 560, 560, 0, 556,
	556, 556, 0, 0, 0, 2116, 870, 869, 879, 880,
	872, 873, 874, 875, 876, 877, 878, 871, 1896, 560,
	881, 46, 73, 72, 0, 0, 1989, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	560, 0, 560, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 906, 1611, 1612, 1613, 1615, 0, 0, 1916,
	0, 0, 1917, 0, 0, 1919, 0, 556, 0, 556,
	0, 59, 60, 906, 2117, 0, 1702, 0, 0, 1889,
	0, 0, 0, 0, 2118, 71, 0, 50, 51, 63,
	0, 64, 0, 0, 0, 117, 1486, 870, 869, 879,
	880, 872, 873, 874, 875, 876, 877, 878, 871, 0,
	117, 881, 0, 844, 0, 0, 0, 0, 0, 0,
	0, 1511, 1512, 117, 0, 0, 1516, 0, 0, 1519,
	0, 0, 0, 0, 1524, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 117, 560, 556, 0, 0,
	0, 0, 0, 560, 560, 0, 0, 0, 115, 0,
	0, 353, 0, 0, 0, 0, 0, 115, 870, 869,
	879, 880, 872, 873, 874, 875, 876, 877, 878, 871,
	69, 0, 881, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 0,
	0, 530, 548, 0, 115, 349, 0, 115, 0, 1466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 75, 0, 115, 0, 0,
	870, 869, 879, 880, 872, 873, 874, 875, 876, 877,
	878, 871, 0, 346, 881, 560, 0, 0, 0, 0,
	0, 0, 560, 560, 560, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 547, 0, 0, 0, 0,
	560, 0, 0, 0, 0, 427, 0, 870, 869, 879,
	880, 872, 873, 874, 875, 876, 877, 878, 871, 0,
	906, 881, 0, 0, 0, 330, 0, 0, 117, 0,
	0, 547, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 347, 348, 556, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 117, 0, 0, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 339, 2139,
	2143, 340, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1632, 0, 560, 0, 0,
	0, 0, 560, 1039, 0, 0, 0, 117, 556, 117,
	556, 556, 0, 0, 0, 560, 0, 0, 0, 0,
	0, 0, 0, 0, 2160, 2161, 560, 0, 0, 0,
	0, 0, 0, 1879, 1880, 0, 1881, 0, 0, 1883,
	0, 1885, 2203, 0, 0, 0, 0, 0, 331, 0,
	0, 0, 0, 0, 0, 1692, 1693, 0, 0, 0,
	560, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 334, 335, 0, 352, 556, 0, 0, 336, 338,
	0, 332, 351, 350, 2143, 560, 1026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2223, 0, 0, 0,
	0, 0, 1732, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 560, 0, 0, 1040, 0,
	0, 547, 0, 0, 1145, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2296, 0, 556, 556, 0,
	556, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 0, 1053, 1056, 1057, 1058,
	1059, 1060, 1061, 0, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 560, 1041, 1042, 1043, 1044, 1020, 1024, 1054, 1021,
	1027, 1023, 1025, 1022, 0, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 0, 0, 0, 115, 115, 115,
	0, 0, 0, 0, 0, 560, 0, 548, 0, 0,
	0, 0, 548, 0, 0, 560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	1859, 0, 0, 0, 1863, 32, 33, 68, 35, 36,
	0, 1867, 1868, 0, 0, 0, 0, 0, 0, 61,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 37,
	56, 57, 0, 0, 0, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 868, 0, 47, 0, 0, 0, 77, 882, 883,
	884, 885, 886, 887, 888, 0, 866, 867, 864, 870,
	869, 879, 880, 872, 873, 874, 875, 876, 877, 878,
	871, 547, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1921, 0, 0, 0, 0, 0, 0,
	1921, 1921, 1921, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 32, 0, 68, 35, 36, 1921, 39,
	70, 43, 42, 45, 0, 58, 0, 61, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 37, 0, 0,
	0, 115, 0, 0, 115, 0, 0, 0, 0, 0,
	1094, 46, 73, 72, 0, 0, 54, 55, 44, 0,
	0, 0, 115, 115, 115, 0, 0, 0, 0, 115,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 2115, 0,
	0, 59, 60, 2321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 71, 0, 50, 51, 63,
	0, 64, 0, 0, 0, 2007, 0, 0, 0, 0,
	1921, 0, 0, 115, 0, 386, 0, 39, 70, 43,
	42, 45, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2116, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	73, 72, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 2054, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	60, 0, 2117, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 2118, 71, 0, 50, 51, 63, 0, 64,
	0, 0, 1215, 1215, 0, 0, 0, 1215, 1215, 1215,
	1215, 0, 0, 0, 548, 75, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 1215, 1215, 1215, 0, 0,
	1215, 1215, 1215, 1215, 1215, 0, 547, 0, 0, 0,
	0, 1215, 1215, 1215, 0, 1215, 1215, 0, 1215, 1215,
	1215, 1215, 0, 1215, 1215, 1215, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 115, 386, 0, 0, 0,
	115, 115, 0, 0, 115, 1306, 1094, 548, 69, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 32, 0, 68, 35, 36, 2184,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 0,
	0, 0, 0, 0, 74, 0, 0, 0, 37, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1921, 0, 0, 77, 0, 115, 0,
	0, 0, 0, 0, 115, 556, 115, 115, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 2115,
	0, 0, 0, 0, 2317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1404, 1405,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 39, 70,
	43, 42, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2116, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 73, 72, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 32, 0, 68, 35, 36, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 37, 0, 0,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 60, 0, 2117, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 2118, 71, 0, 50, 51, 63, 0,
	64, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 1215, 0,
	0, 0, 1215, 0, 0, 1215, 0, 0, 2115, 0,
	1215, 0, 0, 2306, 0, 0, 0, 548, 115, 115,
	115, 115, 115, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 115, 0, 0, 32, 386,
	68, 35, 36, 0, 0, 115, 0, 39, 70, 43,
	42, 45, 61, 548, 0, 0, 0, 0, 74, 0,
	0, 0, 37, 2116, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	73, 72, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 2115, 0, 0, 0, 0, 2289, 59,
	60, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 2118, 71, 0, 50, 51, 63, 0, 64,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 70, 43, 42, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2116, 0,
	0, 0, 0, 0, 0, 0, 32, 0, 68, 35,
	36, 0, 0, 115, 46, 73, 72, 0, 0, 0,
	61, 44, 0, 0, 1215, 0, 74, 0, 0, 0,
	37, 0, 0, 0, 0, 1215, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 59, 60, 0, 2117, 77, 2278,
	0, 0, 0, 0, 0, 0, 0, 2118, 71, 0,
	50, 51, 63, 0, 64, 0, 0, 0, 0, 0,
	0, 2115, 0, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	39, 70, 43, 42, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 32, 0, 68, 35, 36, 0, 0, 0,
	0, 0, 46, 73, 72, 0, 61, 0, 0, 44,
	0, 0, 74, 69, 0, 0, 37, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 59, 60, 77, 2117, 0, 0, 75, 0,
	0, 0, 0, 115, 0, 2118, 71, 0, 50, 51,
	63, 0, 64, 0, 0, 0, 0, 2115, 0, 0,
	0, 0, 2230, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 39, 70, 43, 42,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 73,
	72, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 69, 0, 0, 0, 32, 0, 68, 35, 36,
	0, 0, 0, 548, 0, 0, 0, 0, 0, 61,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 37,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 60,
	0, 2117, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 2118, 71, 0, 50, 51, 63, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 39,
	70, 43, 42, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2116, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 46, 73, 72, 0, 0, 0, 386, 44, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 0, 2117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2118, 71, 0, 50, 51, 63,
	428, 64, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 115, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 548, 0,
	69, 2162, 0, 0, 0, 0, 0, 0, 115, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 75, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 2165, 2166,
	2167, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 1326, 1327, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 1578, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 1326, 1327, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 1988, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 1706, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 1698, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 77, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 1307, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 1171, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 1337, 1341, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 1340, 185, 322, 676, 611, 610, 1335, 0, 1336,
	175, 193, 558, 119, 131, 1333, 1339, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 678, 658, 294, 616, 681,
	588, 605, 692, 606, 609, 647, 574, 628, 228, 603,
	575, 0, 592, 565, 599, 566, 589, 618, 162, 587,
	660, 631, 680, 192, 643, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 679, 624, 0, 687, 195, 0,
	640, 316, 283, 213, 0, 0, 620, 667, 626, 656,
	615, 649, 581, 639, 682, 604, 645, 683, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 642, 677, 601, 644, 646, 563, 641, 0,
	569, 576, 691, 673, 595, 596, 597, 0, 0, 0,
	0, 0, 0, 0, 619, 627, 653, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 637, 0,
	0, 0, 577, 570, 0, 0, 617, 0, 0, 0,
	580, 122, 594, 654, 0, 561, 172, 214, 133, 657,
	672, 614, 185, 322, 676, 611, 610, 248, 0, 288,
	175, 193, 558, 119, 131, 554, 174, 224, 257, 267,
	602, 562, 661, 590, 600, 154, 598, 260, 232, 311,
	0, 634, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 613, 648, 591, 151, 651, 638, 666, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 567, 0, 285, 314, 328, 201, 140, 586,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 584, 585, 582, 0, 583, 629, 630, 684, 685,
	686, 655, 578, 0, 668, 669, 0, 659, 674, 675,
	650, 693, 607, 608, 568, 571, 572, 573, 579, 621,
	622, 633, 636, 664, 663, 662, 665, 670, 689, 688,
	690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 118, 129, 194, 694, 252, 168, 315,
	564, 160, 0, 0, 623, 625, 635, 652, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 671, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 162, 432, 0, 0,
	0, 192, 0, 0, 153, 200, 198, 0, 0, 0,
	234, 292, 0, 0, 0, 479, 195, 0, 0, 316,
	283, 213, 0, 0, 0, 0, 468, 469, 0, 0,
	0, 0, 0, 0, 1317, 0, 77, 0, 0, 433,
	456, 455, 458, 459, 460, 461, 0, 0, 143, 457,
	462, 463, 464, 1318, 0, 0, 430, 447, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 493, 0, 446, 0,
	0, 441, 442, 443, 448, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 172, 214, 133, 470, 0, 0,
	185, 322, 0, 0, 491, 248, 0, 288, 175, 193,
	137, 119, 131, 147, 174, 224, 257, 267, 476, 0,
	0, 0, 0, 154, 0, 260, 232, 311, 0, 0,
	238, 259, 196, 300, 250, 309, 310, 176, 293, 319,
	324, 280, 163, 0, 123, 0, 245, 158, 189, 0,
	0, 0, 151, 0, 0, 0, 279, 298, 138, 295,
	212, 218, 148, 150, 149, 132, 274, 297, 142, 152,
	284, 263, 289, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 291, 308, 144, 271, 272, 325,
	258, 126, 306, 287, 210, 186, 187, 125, 0, 255,
	161, 171, 156, 227, 0, 170, 247, 303, 304, 155,
	327, 134, 318, 128, 135, 317, 221, 0, 220, 320,
	299, 307, 211, 204, 0, 127, 305, 209, 203, 191,
	166, 178, 243, 199, 244, 179, 216, 215, 217, 0,
	0, 0, 285, 314, 328, 201, 140, 0, 273, 296,
	0, 0, 141, 169, 165, 242, 219, 136, 181, 282,
	190, 197, 254, 326, 231, 261, 145, 313, 281, 480,
	492, 486, 488, 487, 484, 485, 483, 482, 481, 494,
	471, 472, 473, 474, 477, 0, 489, 490, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 506,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 495,
	496, 497, 498, 499, 500, 501, 502, 505, 503, 504,
	475, 118, 129, 194, 0, 252, 168, 315, 0, 160,
	0, 0, 0, 0, 0, 0, 120, 121, 130, 139,
	146, 159, 164, 167, 173, 177, 180, 182, 183, 184,
	188, 202, 205, 206, 207, 208, 222, 223, 225, 226,
	229, 230, 233, 235, 236, 237, 239, 240, 241, 246,
	249, 251, 253, 256, 262, 264, 265, 266, 268, 269,
	270, 275, 276, 277, 278, 286, 290, 301, 302, 312,
	321, 323, 32, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 162, 432, 0, 0, 0, 192,
	0, 0, 153, 200, 198, 0, 0, 0, 234, 292,
	0, 0, 0, 479, 195, 0, 0, 316, 283, 213,
	0, 0, 0, 0, 468, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 433, 456, 455,
	458, 459, 460, 461, 0, 0, 143, 457, 462, 463,
	464, 0, 0, 0, 430, 447, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 493, 0, 446, 0, 0, 441,
	442, 443, 448, 0, 0, 0, 0, 122, 0, 0,
	0, 0, 172, 214, 133, 470, 0, 0, 185, 322,
	0, 0, 491, 248, 0, 288, 175, 193, 137, 119,
	131, 147, 174, 224, 257, 267, 476, 0, 0, 0,
	0, 154, 0, 260, 232, 311, 0, 0, 238, 259,
	196, 300, 250, 309, 310, 176, 293, 319, 324, 280,
	163, 0, 123, 0, 245, 158, 189, 0, 0, 0,
	151, 0, 0, 0, 279, 298, 138, 295, 212, 218,
	148, 150, 149, 132, 274, 297, 142, 152, 284, 263,
	289, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 291, 308, 144, 271, 272, 325, 258, 126,
	306, 287, 210, 186, 187, 125, 0, 255, 161, 171,
	156, 227, 0, 170, 247, 303, 304, 155, 327, 134,
	318, 128, 135, 317, 221, 0, 220, 320, 299, 307,
	211, 204, 0, 127, 305, 209, 203, 191, 166, 178,
	243, 199, 244, 179, 216, 215, 217, 0, 0, 0,
	285, 314, 328, 201, 140, 0, 273, 296, 0, 0,
	141, 169, 165, 242, 219, 136, 181, 282, 190, 197,
	254, 326, 231, 261, 145, 313, 281, 480, 492, 486,
	488, 487, 484, 485, 483, 482, 481, 494, 471, 472,
	473, 474, 477, 0, 489, 490, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 506, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 495, 496, 497,
	498, 499, 500, 501, 502, 505, 503, 504, 475, 118,
	129, 194, 75, 252, 168, 315, 0, 160, 0, 0,
	0, 0, 0, 0, 120, 121, 130, 139, 146, 159,
	164, 167, 173, 177, 180, 182, 183, 184, 188, 202,
	205, 206, 207, 208, 222, 223, 225, 226, 229, 230,
	233, 235, 236, 237, 239, 240, 241, 246, 249, 251,
	253, 256, 262, 264, 265, 266, 268, 269, 270, 275,
	276, 277, 278, 286, 290, 301, 302, 312, 321, 323,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 435, 0, 0,
	0, 162, 432, 0, 0, 0, 192, 0, 0, 153,
	200, 198, 0, 0, 0, 234, 292, 0, 0, 0,
	479, 195, 0, 0, 316, 283, 213, 0, 0, 0,
	0, 468, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 433, 456, 455, 458, 459, 460,
	461, 0, 0, 143, 457, 462, 463, 464, 0, 0,
	0, 430, 447, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 445, 426, 0, 0,
	0, 493, 0, 446, 0, 0, 441, 442, 443, 448,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 172,
	214, 133, 470, 0, 0, 185, 322, 0, 0, 491,
	248, 0, 288, 175, 193, 137, 119, 131, 147, 174,
	224, 257, 267, 476, 0, 0, 0, 0, 154, 0,
	260, 232, 311, 0, 0, 238, 259, 196, 300, 250,
	309, 310, 176, 293, 319, 324, 280, 163, 0, 123,
	0, 245, 158, 189, 0, 0, 0, 151, 0, 0,
	0, 279, 298, 138, 295, 212, 218, 148, 150, 149,
	132, 274, 297, 142, 152, 284, 263, 289, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 291,
	308, 144, 271, 272, 325, 258, 126, 306, 287, 210,
	186, 187, 125, 0, 255, 161, 171, 156, 227, 0,
	170, 247, 303, 304, 155, 327, 134, 318, 128, 135,
	317, 221, 0, 220, 320, 299, 307, 211, 204, 0,
	127, 305, 209, 203, 191, 166, 178, 243, 199, 244,
	179, 216, 215, 217, 0, 0, 0, 285, 314, 328,
	201, 140, 0, 273, 296, 0, 0, 141, 169, 165,
	242, 219, 136, 181, 282, 190, 197, 254, 326, 231,
	261, 145, 313, 281, 480, 492, 486, 488, 487, 484,
	485, 483, 482, 481, 494, 471, 472, 473, 474, 477,
	0, 489, 490, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 506, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 495, 496, 497, 498, 499, 500,
	501, 502, 505, 503, 504, 475, 118, 129, 194, 0,
	252, 168, 315, 0, 160, 0, 0, 0, 0, 0,
	0, 120, 121, 130, 139, 146, 159, 164, 167, 173,
	177, 180, 182, 183, 184, 188, 202, 205, 206, 207,
	208, 222, 223, 225, 226, 229, 230, 233, 235, 236,
	237, 239, 240, 241, 246, 249, 251, 253, 256, 262,
	264, 265, 266, 268, 269, 270, 275, 276, 277, 278,
	286, 290, 301, 302, 312, 321, 323, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 162, 432,
	0, 0, 0, 192, 0, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 0, 0, 0, 479, 195, 0,
	0, 316, 283, 213, 0, 0, 0, 0, 468, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	805, 433, 456, 455, 458, 459, 460, 461, 0, 0,
	143, 457, 462, 463, 464, 0, 0, 0, 430, 447,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 493, 0,
	446, 0, 0, 441, 442, 443, 448, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 172, 214, 133, 470,
	0, 0, 185, 322, 0, 0, 491, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	476, 0, 0, 0, 0, 154, 0, 260, 232, 311,
	0, 0, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 0, 0, 0, 151, 0, 0, 0, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 0, 0, 285, 314, 328, 201, 140, 0,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 480, 492, 486, 488, 487, 484, 485, 483, 482,
	481, 494, 471, 472, 473, 474, 477, 0, 489, 490,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 506, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 495, 496, 497, 498, 499, 500, 501, 502, 505,
	503, 504, 475, 118, 129, 194, 0, 252, 168, 315,
	0, 160, 0, 0, 0, 0, 0, 0, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 435, 0, 0, 0, 162, 432, 0, 0, 0,
	192, 0, 0, 153, 200, 198, 0, 0, 0, 234,
	292, 0, 0, 0, 479, 195, 0, 0, 316, 283,
	213, 0, 0, 0, 0, 468, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 433, 456,
	455, 458, 459, 460, 461, 0, 0, 143, 457, 462,
	463, 464, 0, 0, 0, 430, 447, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 444,
	445, 1213, 0, 0, 0, 493, 0, 446, 0, 0,
	441, 442, 443, 448, 0, 0, 0, 0, 122, 0,
	0, 0, 0, 172, 214, 133, 470, 0, 0, 185,
	322, 0, 0, 491, 248, 0, 288, 175, 193, 137,
	119, 131, 147, 174, 224, 257, 267, 476, 0, 0,
	0, 0, 154, 0, 260, 232, 311, 0, 0, 238,
	259, 196, 300, 250, 309, 310, 176, 293, 319, 324,
	280, 163, 0, 123, 0, 245, 158, 189, 0, 0,
	0, 151, 0, 0, 0, 279, 298, 138, 295, 212,
	218, 148, 150, 149, 132, 274, 297, 142, 152, 284,
	263, 289, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 291, 308, 144, 271, 272, 325, 258,
	126, 306, 287, 210, 186, 187, 125, 0, 255, 161,
	171, 156, 227, 0, 170, 247, 303, 304, 155, 327,
	134, 318, 128, 135, 317, 221, 0, 220, 320, 299,
	307, 211, 204, 0, 127, 305, 209, 203, 191, 166,
	178, 243, 199, 244, 179, 216, 215, 217, 0, 0,
	0, 285, 314, 328, 201, 140, 0, 273, 296, 0,
	0, 141, 169, 165, 242, 219, 136, 181, 282, 190,
	197, 254, 326, 231, 261, 145, 313, 281, 480, 492,
	486, 488, 487, 484, 485, 483, 482, 481, 494, 471,
	472, 473, 474, 477, 0, 489, 490, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 506, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 495, 496,
	497, 498, 499, 500, 501, 502, 505, 503, 504, 475,
	118, 129, 194, 0, 252, 168, 315, 0, 160, 0,
	0, 0, 0, 0, 0, 120, 121, 130, 139, 146,
	159, 164, 167, 173, 177, 180, 182, 183, 184, 188,
	202, 205, 206, 207, 208, 222, 223, 225, 226, 229,
	230, 233, 235, 236, 237, 239, 240, 241, 246, 249,
	251, 253, 256, 262, 264, 265, 266, 268, 269, 270,
	275, 276, 277, 278, 286, 290, 301, 302, 312, 321,
	323, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 162, 432, 0, 0, 0, 192, 0, 0,
	153, 200, 198, 0, 0, 0, 234, 292, 0, 0,
	0, 479, 195, 0, 0, 316, 283, 213, 0, 0,
	0, 0, 468, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 433, 456, 1224, 458, 459,
	460, 461, 0, 0, 143, 457, 462, 463, 464, 0,
	0, 0, 430, 447, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 444, 445, 1213, 0,
	0, 0, 493, 0, 446, 0, 0, 441, 442, 443,
	448, 0, 0, 0, 0, 122, 0, 0, 0, 0,
	172, 214, 133, 470, 0, 0, 185, 322, 0, 0,
	491, 248, 0, 288, 175, 193, 137, 119, 131, 147,
	174, 224, 257, 267, 476, 0, 0, 0, 0, 154,
	0, 260, 232, 311, 0, 0, 238, 259, 196, 300,
	250, 309, 310, 176, 293, 319, 324, 280, 163, 0,
	123, 0, 245, 158, 189, 0, 0, 0, 151, 0,
	0, 0, 279, 298, 138, 295, 212, 218, 148, 150,
	149, 132, 274, 297, 142, 152, 284, 263, 289, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	291, 308, 144, 271, 272, 325, 258, 126, 306, 287,
	210, 186, 187, 125, 0, 255, 161, 171, 156, 227,
	0, 170, 247, 303, 304, 155, 327, 134, 318, 128,
	135, 317, 221, 0, 220, 320, 299, 307, 211, 204,
	0, 127, 305, 209, 203, 191, 166, 178, 243, 199,
	244, 179, 216, 215, 217, 0, 0, 0, 285, 314,
	328, 201, 140, 0, 273, 296, 0, 0, 141, 169,
	165, 242, 219, 136, 181, 282, 190, 197, 254, 326,
	231, 261, 145, 313, 281, 480, 492, 486, 488, 487,
	484, 485, 483, 482, 481, 494, 471, 472, 473, 474,
	477, 0, 489, 490, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 506, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 495, 496, 497, 498, 499,
	500, 501, 502, 505, 503, 504, 475, 118, 129, 194,
	0, 252, 168, 315, 0, 160, 0, 0, 0, 0,
	0, 0, 120, 121, 130, 139, 146, 159, 164, 167,
	173, 177, 180, 182, 183, 184, 188, 202, 205, 206,
	207, 208, 222, 223, 225, 226, 229, 230, 233, 235,
	236, 237, 239, 240, 241, 246, 249, 251, 253, 256,
	262, 264, 265, 266, 268, 269, 270, 275, 276, 277,
	278, 286, 290, 301, 302, 312, 321, 323, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 435, 0, 0, 0, 162,
	432, 0, 0, 0, 192, 0, 0, 153, 200, 198,
	0, 0, 0, 234, 292, 0, 0, 0, 479, 195,
	0, 0, 316, 283, 213, 0, 0, 0, 0, 468,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 433, 456, 1221, 458, 459, 460, 461, 0,
	0, 143, 457, 462, 463, 464, 0, 0, 0, 430,
	447, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 444, 445, 1213, 0, 0, 0, 493,
	0, 446, 0, 0, 441, 442, 443, 448, 0, 0,
	0, 0, 122, 0, 0, 0, 0, 172, 214, 133,
	470, 0, 0, 185, 322, 0, 0, 491, 248, 0,
	288, 175, 193, 137, 119, 131, 147, 174, 224, 257,
	267, 476, 0, 0, 0, 0, 154, 0, 260, 232,
	311, 0, 0, 238, 259, 196, 300, 250, 309, 310,
	176, 293, 319, 324, 280, 163, 0, 123, 0, 245,
	158, 189, 0, 0, 0, 151, 0, 0, 0, 279,
	298, 138, 295, 212, 218, 148, 150, 149, 132, 274,
	297, 142, 152, 284, 263, 289, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 291, 308, 144,
	271, 272, 325, 258, 126, 306, 287, 210, 186, 187,
	125, 0, 255, 161, 171, 156, 227, 0, 170, 247,
	303, 304, 155, 327, 134, 318, 128, 135, 317, 221,
	0, 220, 320, 299, 307, 211, 204, 0, 127, 305,
	209, 203, 191, 166, 178, 243, 199, 244, 179, 216,
	215, 217, 0, 0, 0, 285, 314, 328, 201, 140,
	0, 273, 296, 0, 0, 141, 169, 165, 242, 219,
	136, 181, 282, 190, 197, 254, 326, 231, 261, 145,
	313, 281, 480, 492, 486, 488, 487, 484, 485, 483,
	482, 481, 494, 471, 472, 473, 474, 477, 0, 489,
	490, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 506, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 495, 496, 497, 498, 499, 500, 501, 502,
	505, 503, 504, 475, 118, 129, 194, 0, 252, 168,
	315, 0, 160, 0, 0, 0, 0, 0, 0, 120,
	121, 130, 139, 146, 159, 164, 167, 173, 177, 180,
	182, 183, 184, 188, 202, 205, 206, 207, 208, 222,
	223, 225, 226, 229, 230, 233, 235, 236, 237, 239,
	240, 241, 246, 249, 251, 253, 256, 262, 264, 265,
	266, 268, 269, 270, 275, 276, 277, 278, 286, 290,
	301, 302, 312, 321, 323, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 162, 432, 0, 0,
	0, 192, 0, 0, 153, 200, 198, 0, 0, 0,
	234, 292, 0, 0, 0, 479, 195, 0, 0, 316,
	283, 213, 0, 0, 0, 0, 468, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 1132, 433,
	456, 455, 458, 459, 460, 461, 0, 0, 143, 457,
	462, 463, 464, 0, 0, 0, 430, 447, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 493, 0, 446, 0,
	0, 441, 442, 443, 448, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 172, 214, 133, 470, 0, 0,
	185, 322, 0, 0, 491, 248, 0, 288, 175, 193,
	137, 119, 131, 147, 174, 224, 257, 267, 476, 0,
	0, 0, 0, 154, 0, 260, 232, 311, 0, 0,
	238, 259, 196, 300, 250, 309, 310, 176, 293, 319,
	324, 280, 163, 0, 123, 0, 245, 158, 189, 0,
	0, 0, 151, 0, 0, 0, 279, 298, 138, 295,
	212, 218, 148, 150, 149, 132, 274, 297, 142, 152,
	284, 263, 289, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 291, 308, 144, 271, 272, 325,
	258, 126, 306, 287, 210, 186, 187, 125, 0, 255,
	161, 171, 156, 227, 0, 170, 247, 303, 304, 155,
	327, 134, 318, 128, 135, 317, 221, 0, 220, 320,
	299, 307, 211, 204, 0, 127, 305, 209, 203, 191,
	166, 178, 243, 199, 244, 179, 216, 215, 217, 0,
	0, 0, 285, 314, 328, 201, 140, 0, 273, 296,
	0, 0, 141, 169, 165, 242, 219, 136, 181, 282,
	190, 197, 254, 326, 231, 261, 145, 313, 281, 480,
	492, 486, 488, 487, 484, 485, 483, 482, 481, 494,
	471, 472, 473, 474, 477, 0, 489, 490, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 506,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 495,
	496, 497, 498, 499, 500, 501, 502, 505, 503, 504,
	475, 118, 129, 194, 0, 252, 168, 315, 0, 160,
	0, 0, 0, 0, 0, 0, 120, 121, 130, 139,
	146, 159, 164, 167, 173, 177, 180, 182, 183, 184,
	188, 202, 205, 206, 207, 208, 222, 223, 225, 226,
	229, 230, 233, 235, 236, 237, 239, 240, 241, 246,
	249, 251, 253, 256, 262, 264, 265, 266, 268, 269,
	270, 275, 276, 277, 278, 286, 290, 301, 302, 312,
	321, 323, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 435,
	0, 0, 0, 162, 432, 0, 0, 0, 192, 0,
	0, 153, 200, 198, 0, 0, 0, 234, 292, 0,
	0, 0, 479, 195, 0, 0, 316, 283, 213, 0,
	0, 0, 0, 468, 469, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 433, 456, 455, 458,
	459, 460, 461, 0, 0, 143, 457, 462, 463, 464,
	0, 0, 0, 430, 447, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 493, 0, 446, 0, 0, 441, 442,
	443, 448, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 172, 214, 133, 470, 0, 0, 185, 322, 0,
	0, 491, 248, 0, 288, 175, 193, 137, 119, 131,
	147, 174, 224, 257, 267, 476, 0, 0, 0, 0,
	154, 0, 260, 232, 311, 0, 0, 238, 259, 196,
	300, 250, 309, 310, 176, 293, 319, 324, 280, 163,
	0, 123, 0, 245, 158, 189, 0, 0, 0, 151,
	0, 0, 0, 279, 298, 138, 295, 212, 218, 148,
	150, 149, 132, 274, 297, 142, 152, 284, 263, 289,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 291, 308, 144, 271, 272, 325, 258, 126, 306,
	287, 210, 186, 187, 125, 0, 255, 161, 171, 156,
	227, 0, 170, 247, 303, 304, 155, 327, 134, 318,
	128, 135, 317, 221, 0, 220, 320, 299, 307, 211,
	204, 0, 127, 305, 209, 203, 191, 166, 178, 243,
	199, 244, 179, 216, 215, 217, 0, 0, 0, 285,
	314, 328, 201, 140, 0, 273, 296, 0, 0, 141,
	169, 165, 242, 219, 136, 181, 282, 190, 197, 254,
	326, 231, 261, 145, 313, 281, 480, 492, 486, 488,
	487, 484, 485, 483, 482, 481, 494, 471, 472, 473,
	474, 477, 0, 489, 490, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 506, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 495, 496, 497, 498,
	499, 500, 501, 502, 505, 503, 504, 475, 118, 129,
	194, 0, 252, 168, 315, 0, 160, 0, 0, 0,
	0, 0, 0, 120, 121, 130, 139, 146, 159, 164,
	167, 173, 177, 180, 182, 183, 184, 188, 202, 205,
	206, 207, 208, 222, 223, 225, 226, 229, 230, 233,
	235, 236, 237, 239, 240, 241, 246, 249, 251, 253,
	256, 262, 264, 265, 266, 268, 269, 270, 275, 276,
	277, 278, 286, 290, 301, 302, 312, 321, 323, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	162, 432, 0, 0, 0, 192, 0, 0, 153, 200,
	198, 0, 0, 0, 234, 292, 0, 0, 0, 479,
	195, 0, 0, 316, 283, 213, 0, 0, 0, 0,
	468, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 433, 456, 455, 458, 459, 460, 461,
	0, 0, 143, 457, 462, 463, 464, 0, 0, 0,
	430, 447, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	493, 0, 446, 0, 0, 441, 442, 443, 448, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 172, 214,
	133, 470, 0, 0, 185, 322, 0, 0, 491, 248,
	0, 288, 175, 193, 137, 119, 131, 147, 174, 224,
	257, 267, 476, 0, 0, 0, 0, 154, 0, 260,
	232, 311, 0, 0, 238, 259, 196, 300, 250, 309,
	310, 176, 293, 319, 324, 280, 163, 0, 123, 0,
	245, 158, 189, 0, 0, 0, 151, 0, 0, 0,
	279, 298, 138, 295, 212, 218, 148, 150, 149, 132,
	274, 297, 142, 152, 284, 263, 289, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 291, 308,
	144, 271, 272, 325, 258, 126, 306, 287, 210, 186,
	187, 125, 0, 255, 161, 171, 156, 227, 0, 170,
	247, 303, 304, 155, 327, 134, 318, 128, 135, 317,
	221, 0, 220, 320, 299, 307, 211, 204, 0, 127,
	305, 209, 203, 191, 166, 178, 243, 199, 244, 179,
	216, 215, 217, 0, 0, 0, 285, 314, 328, 201,
	140, 0, 273, 296, 0, 0, 141, 169, 165, 242,
	219, 136, 181, 282, 190, 197, 254, 326, 231, 261,
	145, 313, 281, 480, 492, 486, 488, 487, 484, 485,
	483, 482, 481, 494, 471, 472, 473, 474, 477, 0,
	489, 490, 0, 0, 0, 0, 816, 817, 818, 819,
	820, 824, 825, 829, 830, 838, 837, 836, 839, 840,
	842, 841, 843, 821, 822, 823, 826, 827, 828, 831,
	832, 835, 833, 834, 475, 118, 129, 194, 0, 252,
	168, 315, 0, 160, 0, 0, 0, 0, 0, 0,
	120, 121, 130, 139, 146, 159, 164, 167, 173, 177,
	180, 182, 183, 184, 188, 202, 205, 206, 207, 208,
	222, 223, 225, 226, 229, 230, 233, 235, 236, 237,
	239, 240, 241, 246, 249, 251, 253, 256, 262, 264,
	265, 266, 268, 269, 270, 275, 276, 277, 278, 286,
	290, 301, 302, 312, 321, 323, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 192, 0, 0, 153, 200, 198, 0, 0,
	0, 234, 292, 0, 0, 0, 479, 195, 0, 0,
	316, 283, 213, 0, 0, 0, 0, 468, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	433, 456, 455, 458, 459, 460, 461, 0, 0, 143,
	457, 462, 463, 464, 0, 0, 0, 0, 447, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 493, 0, 446,
	0, 0, 441, 442, 443, 448, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 172, 214, 133, 470, 0,
	0, 185, 322, 0, 0, 491, 248, 0, 288, 175,
	193, 137, 119, 131, 147, 174, 224, 257, 267, 476,
	0, 0, 0, 0, 154, 0, 260, 232, 311, 0,
	2299, 238, 259, 196, 300, 250, 309, 310, 176, 293,
	319, 324, 280, 163, 0, 123, 0, 245, 158, 189,
	0, 0, 0, 151, 0, 0, 0, 279, 298, 138,
	295, 212, 218, 148, 150, 149, 132, 274, 297, 142,
	152, 284, 263, 289, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 291, 308, 144, 271, 272,
	325, 258, 126, 306, 287, 210, 186, 187, 125, 0,
	255, 161, 171, 156, 227, 0, 170, 247, 303, 304,
	155, 327, 134, 318, 128, 135, 317, 221, 0, 220,
	320, 299, 307, 211, 204, 0, 127, 305, 209, 203,
	191, 166, 178, 243, 199, 244, 179, 216, 215, 217,
	0, 0, 0, 285, 314, 328, 201, 140, 0, 273,
	296, 0, 0, 141, 169, 165, 242, 219, 136, 181,
	282, 190, 197, 254, 326, 231, 261, 145, 313, 281,
	480, 492, 486, 488, 487, 484, 485, 483, 482, 481,
	494, 471, 472, 473, 474, 477, 0, 489, 490, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	506, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	495, 496, 497, 498, 499, 500, 501, 502, 505, 503,
	504, 475, 118, 129, 194, 0, 252, 168, 315, 0,
	160, 0, 0, 0, 0, 0, 0, 120, 121, 130,
	139, 146, 159, 164, 167, 173, 177, 180, 182, 183,
	184, 188, 202, 205, 206, 207, 208, 222, 223, 225,
	226, 229, 230, 233, 235, 236, 237, 239, 240, 241,
	246, 249, 251, 253, 256, 262, 264, 265, 266, 268,
	269, 270, 275, 276, 277, 278, 286, 290, 301, 302,
	312, 321, 323, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 192,
	0, 0, 153, 200, 198, 0, 0, 0, 234, 292,
	0, 0, 0, 479, 195, 0, 0, 316, 283, 213,
	0, 0, 0, 0, 468, 469, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 805, 433, 456, 455,
	458, 459, 460, 461, 0, 0, 143, 457, 462, 463,
	464, 0, 0, 0, 0, 447, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 493, 0, 446, 0, 0, 441,
	442, 443, 448, 0, 0, 0, 0, 122, 0, 0,
	0, 0, 172, 214, 133, 470, 0, 0, 185, 322,
	0, 0, 491, 248, 0, 288, 175, 193, 137, 119,
	131, 147, 174, 224, 257, 267, 476, 0, 0, 0,
	0, 154, 0, 260, 232, 311, 0, 0, 238, 259,
	196, 300, 250, 309, 310, 176, 293, 319, 324, 280,
	163, 0, 123, 0, 245, 158, 189, 0, 0, 0,
	151, 0, 0, 0, 279, 298, 138, 295, 212, 218,
	148, 150, 149, 132, 274, 297, 142, 152, 284, 263,
	289, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 291, 308, 144, 271, 272, 325, 258, 126,
	306, 287, 210, 186, 187, 125, 0, 255, 161, 171,
	156, 227, 0, 170, 247, 303, 304, 155, 327, 134,
	318, 128, 135, 317, 221, 0, 220, 320, 299, 307,
	211, 204, 0, 127, 305, 209, 203, 191, 166, 178,
	243, 199, 244, 179, 216, 215, 217, 0, 0, 0,
	285, 314, 328, 201, 140, 0, 273, 296, 0, 0,
	141, 169, 165, 242, 219, 136, 181, 282, 190, 197,
	254, 326, 231, 261, 145, 313, 281, 480, 492, 486,
	488, 487, 484, 485, 483, 482, 481, 494, 471, 472,
	473, 474, 477, 0, 489, 490, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 506, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 495, 496, 497,
	498, 499, 500, 501, 502, 505, 503, 504, 475, 118,
	129, 194, 0, 252, 168, 315, 0, 160, 0, 0,
	0, 0, 0, 0, 120, 121, 130, 139, 146, 159,
	164, 167, 173, 177, 180, 182, 183, 184, 188, 202,
	205, 206, 207, 208, 222, 223, 225, 226, 229, 230,
	233, 235, 236, 237, 239, 240, 241, 246, 249, 251,
	253, 256, 262, 264, 265, 266, 268, 269, 270, 275,
	276, 277, 278, 286, 290, 301, 302, 312, 321, 323,
	294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 192, 0, 0, 153,
	200, 198, 0, 0, 0, 234, 292, 0, 0, 0,
	479, 195, 0, 0, 316, 283, 213, 0, 0, 0,
	0, 468, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 433, 456, 455, 458, 459, 460,
	461, 0, 0, 143, 457, 462, 463, 464, 0, 0,
	0, 0, 447, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 445, 0, 0, 0,
	0, 493, 0, 446, 0, 0, 441, 442, 443, 448,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 172,
	214, 133, 470, 0, 0, 185, 322, 0, 0, 491,
	248, 0, 288, 175, 193, 137, 119, 131, 147, 174,
	224, 257, 267, 476, 0, 0, 0, 0, 154, 0,
	260, 232, 311, 0, 0, 238, 259, 196, 300, 250,
	309, 310, 176, 293, 319, 324, 280, 163, 0, 123,
	0, 245, 158, 189, 0, 0, 0, 151, 0, 0,
	0, 279, 298, 138, 295, 212, 218, 148, 150, 149,
	132, 274, 297, 142, 152, 284, 263, 289, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 291,
	308, 144, 271, 272, 325, 258, 126, 306, 287, 210,
	186, 187, 125, 0, 255, 161, 171, 156, 227, 0,
	170, 247, 303, 304, 155, 327, 134, 318, 128, 135,
	317, 221, 0, 220, 320, 299, 307, 211, 204, 0,
	127, 305, 209, 203, 191, 166, 178, 243, 199, 244,
	179, 216, 215, 217, 0, 0, 0, 285, 314, 328,
	201, 140, 0, 273, 296, 0, 0, 141, 169, 165,
	242, 219, 136, 181, 282, 190, 197, 254, 326, 231,
	261, 145, 313, 281, 480, 492, 486, 488, 487, 484,
	485, 483, 482, 481, 494, 471, 472, 473, 474, 477,
	0, 489, 490, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 506, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 495, 496, 497, 498, 499, 500,
	501, 502, 505, 503, 504, 475, 118, 129, 194, 0,
	252, 168, 315, 0, 160, 0, 0, 0, 0, 0,
	0, 120, 121, 130, 139, 146, 159, 164, 167, 173,
	177, 180, 182, 183, 184, 188, 202, 205, 206, 207,
	208, 222, 223, 225, 226, 229, 230, 233, 235, 236,
	237, 239, 240, 241, 246, 249, 251, 253, 256, 262,
	264, 265, 266, 268, 269, 270, 275, 276, 277, 278,
	286, 290, 301, 302, 312, 321, 323, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 1295, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 192, 0, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 0, 0, 0, 0, 195, 0,
	0, 316, 283, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 1299, 0, 0, 0, 0,
	0, 116, 0, 388, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 172, 214, 133, 0,
	0, 0, 185, 322, 0, 1298, 0, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	0, 0, 0, 0, 0, 154, 0, 260, 232, 311,
	0, 0, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 0, 0, 0, 151, 0, 0, 0, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 0, 0, 285, 314, 328, 201, 140, 0,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 390, 391, 392, 393, 397,
	398, 402, 403, 411, 410, 409, 412, 413, 415, 414,
	416, 394, 395, 396, 399, 400, 401, 404, 405, 408,
	406, 407, 0, 118, 129, 194, 0, 252, 168, 315,
	0, 160, 0, 0, 0, 0, 0, 0, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	1295, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	192, 0, 0, 153, 200, 198, 0, 0, 0, 234,
	292, 0, 0, 0, 0, 195, 0, 0, 316, 283,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 1299, 0, 0, 0, 0, 0, 116, 0,
	388, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 0, 0, 172, 214, 133, 0, 0, 0, 185,
	322, 0, 1298, 0, 248, 0, 288, 175, 193, 137,
	119, 131, 147, 174, 224, 257, 267, 0, 0, 0,
	0, 0, 154, 0, 260, 232, 311, 0, 0, 1293,
	259, 196, 300, 250, 309, 310, 176, 293, 319, 324,
	280, 163, 0, 123, 0, 245, 158, 189, 0, 0,
	0, 151, 0, 0, 0, 279, 298, 138, 295, 212,
	218, 148, 150, 149, 132, 274, 297, 142, 152, 284,
	263, 289, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 291, 308, 144, 271, 272, 325, 258,
	126, 306, 287, 210, 186, 187, 125, 0, 255, 161,
	171, 156, 227, 0, 170, 247, 303, 304, 155, 327,
	134, 318, 128, 135, 317, 221, 0, 220, 320, 299,
	307, 211, 204, 0, 127, 305, 209, 203, 191, 166,
	178, 243, 199, 244, 179, 216, 215, 217, 0, 0,
	0, 285, 314, 328, 201, 140, 0, 273, 296, 0,
	0, 141, 169, 165, 242, 219, 136, 181, 282, 190,
	197, 254, 326, 231, 261, 145, 313, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 390, 391, 392, 393, 397, 398, 402, 403,
	411, 410, 409, 412, 413, 415, 414, 416, 394, 395,
	396, 399, 400, 401, 404, 405, 408, 406, 407, 0,
	118, 129, 194, 0, 252, 168, 315, 0, 160, 0,
	0, 0, 0, 0, 0, 120, 121, 130, 139, 146,
	159, 164, 167, 173, 177, 180, 182, 183, 184, 188,
	202, 205, 206, 207, 208, 222, 223, 225, 226, 229,
	230, 233, 235, 236, 237, 239, 240, 241, 246, 249,
	251, 253, 256, 262, 264, 265, 266, 268, 269, 270,
	275, 276, 277, 278, 286, 290, 301, 302, 312, 321,
	323, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 192, 0, 0,
	153, 200, 198, 0, 0, 0, 234, 292, 0, 0,
	0, 0, 195, 0, 0, 316, 283, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 860, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	853, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 0, 0,
	172, 214, 133, 0, 0, 0, 185, 322, 0, 0,
	0, 248, 0, 288, 175, 193, 137, 119, 131, 147,
	174, 224, 257, 267, 0, 0, 0, 0, 0, 154,
	0, 260, 232, 311, 0, 0, 238, 259, 196, 300,
	250, 309, 310, 176, 293, 319, 324, 280, 163, 0,
	123, 0, 245, 158, 189, 0, 0, 0, 151, 0,
	0, 0, 279, 298, 138, 295, 212, 218, 148, 150,
	149, 132, 274, 297, 142, 152, 284, 263, 289, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	291, 308, 144, 271, 272, 325, 258, 126, 306, 287,
	210, 186, 187, 125, 0, 255, 161, 171, 156, 227,
	0, 170, 247, 303, 304, 155, 327, 134, 318, 128,
	135, 317, 221, 0, 220, 320, 299, 307, 211, 204,
	0, 127, 305, 209, 203, 191, 166, 178, 243, 199,
	244, 179, 216, 215, 217, 0, 0, 0, 285, 314,
	328, 201, 140, 0, 273, 296, 0, 0, 141, 169,
	165, 242, 219, 136, 181, 282, 190, 197, 254, 326,
	231, 261, 145, 313, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 390,
	391, 392, 393, 397, 398, 402, 403, 411, 410, 409,
	412, 413, 415, 414, 416, 394, 395, 396, 399, 400,
	401, 404, 405, 408, 406, 407, 0, 118, 129, 194,
	0, 252, 168, 315, 0, 160, 0, 0, 0, 0,
	0, 0, 120, 121, 130, 139, 146, 159, 164, 167,
	173, 177, 180, 182, 183, 184, 188, 202, 205, 206,
	207, 208, 222, 223, 225, 226, 229, 230, 233, 235,
	236, 237, 239, 240, 241, 246, 249, 251, 253, 256,
	262, 264, 265, 266, 268, 269, 270, 275, 276, 277,
	278, 286, 290, 301, 302, 312, 321, 323, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 192, 1556, 0, 153, 200, 198,
	0, 0, 0, 234, 292, 0, 0, 0, 0, 195,
	0, 0, 316, 283, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 388, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 0, 0, 172, 214, 133,
	0, 0, 0, 185, 322, 0, 0, 0, 248, 0,
	288, 175, 193, 137, 119, 131, 147, 174, 224, 257,
	267, 0, 0, 0, 0, 0, 154, 0, 260, 232,
	311, 0, 0, 238, 259, 196, 300, 250, 309, 310,
	176, 293, 319, 324, 280, 163, 0, 123, 0, 245,
	158, 189, 0, 0, 0, 151, 0, 0, 0, 279,
	298, 138, 295, 212, 218, 148, 150, 149, 132, 274,
	297, 142, 152, 284, 263, 289, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 291, 308, 144,
	271, 272, 325, 258, 126, 306, 287, 210, 186, 187,
	125, 0, 255, 161, 171, 156, 227, 0, 170, 247,
	303, 304, 155, 327, 134, 318, 128, 135, 317, 221,
	0, 220, 320, 299, 307, 211, 204, 0, 127, 305,
	209, 203, 191, 166, 178, 243, 199, 244, 179, 216,
	215, 217, 0, 0, 0, 285, 314, 328, 201, 140,
	0, 273, 296, 0, 0, 141, 169, 165, 242, 219,
	136, 181, 282, 190, 197, 254, 326, 231, 261, 145,
	313, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 390, 391, 392, 393,
	397, 398, 402, 403, 411, 410, 409, 412, 413, 415,
	414, 416, 394, 395, 396, 399, 400, 401, 404, 405,
	408, 406, 407, 0, 118, 129, 194, 0, 252, 168,
	315, 0, 160, 0, 0, 0, 0, 0, 0, 120,
	121, 130, 139, 146, 159, 164, 167, 173, 177, 180,
	182, 183, 184, 188, 202, 205, 206, 207, 208, 222,
	223, 225, 226, 229, 230, 233, 235, 236, 237, 239,
	240, 241, 246, 249, 251, 253, 256, 262, 264, 265,
	266, 268, 269, 270, 275, 276, 277, 278, 286, 290,
	301, 302, 312, 321, 323, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 192, 0, 0, 153, 200, 198, 0, 0, 0,
	234, 292, 0, 0, 0, 0, 195, 0, 0, 316,
	283, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 388, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 172, 214, 133, 0, 0, 0,
	185, 322, 0, 0, 0, 248, 0, 288, 175, 193,
	137, 119, 131, 147, 174, 224, 257, 267, 0, 0,
	0, 0, 0, 154, 0, 260, 232, 311, 0, 0,
	238, 259, 196, 300, 250, 309, 310, 176, 293, 319,
	324, 280, 163, 0, 123, 0, 245, 158, 189, 0,
	0, 0, 151, 0, 0, 0, 279, 298, 138, 295,
	212, 218, 148, 150, 149, 132, 274, 297, 142, 152,
	284, 263, 289, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 291, 308, 144, 271, 272, 325,
	258, 126, 306, 287, 210, 186, 187, 125, 0, 255,
	161, 171, 156, 227, 0, 170, 247, 303, 304, 155,
	327, 134, 318, 128, 135, 317, 221, 0, 220, 320,
	299, 307, 211, 204, 0, 127, 305, 209, 203, 191,
	166, 178, 243, 199, 244, 179, 216, 215, 217, 0,
	0, 0, 285, 314, 328, 201, 140, 0, 273, 296,
	0, 0, 141, 169, 165, 242, 219, 136, 181, 282,
	190, 197, 254, 326, 231, 261, 145, 313, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 390, 391, 392, 393, 397, 398, 402,
	403, 411, 410, 409, 412, 413, 415, 414, 416, 394,
	395, 396, 399, 400, 401, 404, 405, 408, 406, 407,
	0, 118, 129, 194, 0, 252, 168, 315, 0, 160,
	0, 0, 0, 0, 0, 0, 120, 121, 130, 139,
	146, 159, 164, 167, 173, 177, 180, 182, 183, 184,
	188, 202, 205, 206, 207, 208, 222, 223, 225, 226,
	229, 230, 233, 235, 236, 237, 239, 240, 241, 246,
	249, 251, 253, 256, 262, 264, 265, 266, 268, 269,
	270, 275, 276, 277, 278, 286, 290, 301, 302, 312,
	321, 323, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 192, 0,
	0, 153, 200, 198, 0, 0, 0, 234, 292, 0,
	0, 0, 0, 195, 0, 0, 316, 283, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 857, 0, 860, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 172, 214, 133, 0, 0, 0, 185, 322, 0,
	0, 0, 248, 0, 288, 175, 193, 137, 119, 131,
	147, 174, 224, 257, 267, 0, 0, 0, 0, 0,
	154, 0, 260, 232, 311, 0, 0, 238, 259, 196,
	300, 250, 309, 310, 176, 293, 319, 324, 280, 163,
	0, 123, 0, 245, 158, 189, 0, 0, 0, 151,
	0, 0, 0, 279, 298, 138, 295, 212, 218, 148,
	150, 149, 132, 274, 297, 142, 152, 284, 263, 289,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 291, 308, 144, 271, 272, 325, 258, 126, 306,
	287, 210, 186, 187, 125, 0, 255, 161, 171, 156,
	227, 0, 170, 247, 303, 304, 155, 327, 134, 318,
	128, 135, 317, 221, 0, 220, 320, 299, 307, 211,
	204, 0, 127, 305, 209, 203, 191, 166, 178, 243,
	199, 244, 179, 216, 215, 217, 0, 0, 0, 285,
	314, 328, 201, 140, 0, 273, 296, 0, 0, 141,
	169, 165, 242, 219, 136, 181, 282, 190, 197, 254,
	326, 231, 261, 145, 313, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	390, 391, 392, 393, 397, 398, 402, 403, 411, 410,
	409, 412, 413, 415, 414, 416, 394, 395, 396, 399,
	400, 401, 404, 405, 408, 406, 407, 0, 118, 129,
	194, 0, 252, 168, 315, 0, 160, 0, 0, 0,
	0, 0, 0, 120, 121, 130, 139, 146, 159, 164,
	167, 173, 177, 180, 182, 183, 184, 188, 202, 205,
	206, 207, 208, 222, 223, 225, 226, 229, 230, 233,
	235, 236, 237, 239, 240, 241, 246, 249, 251, 253,
	256, 262, 264, 265, 266, 268, 269, 270, 275, 276,
	277, 278, 286, 290, 301, 302, 312, 321, 323, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 192, 0, 0, 153, 200,
	198, 0, 0, 0, 234, 292, 0, 0, 0, 0,
	195, 0, 0, 316, 283, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	870, 869, 879, 880, 872, 873, 874, 875, 876, 877,
	878, 871, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 172, 214,
	133, 0, 0, 0, 185, 322, 0, 0, 0, 248,
	0, 288, 175, 193, 137, 119, 131, 147, 174, 224,
	257, 267, 0, 0, 0, 0, 0, 154, 0, 260,
	232, 311, 0, 0, 238, 259, 196, 300, 250, 309,
	310, 176, 293, 319, 324, 280, 163, 0, 123, 0,
	245, 158, 189, 0, 0, 0, 151, 0, 0, 0,
	279, 298, 138, 295, 212, 218, 148, 150, 149, 132,
	274, 297, 142, 152, 284, 263, 289, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 291, 308,
	144, 271, 272, 325, 258, 126, 306, 287, 210, 186,
	187, 125, 0, 255, 161, 171, 156, 227, 0, 170,
	247, 303, 304, 155, 327, 134, 318, 128, 135, 317,
	221, 0, 220, 320, 299, 307, 211, 204, 0, 127,
	305, 209, 203, 191, 166, 178, 243, 199, 244, 179,
	216, 215, 217, 0, 0, 0, 285, 314, 328, 201,
	140, 0, 273, 296, 0, 0, 141, 169, 165, 242,
	219, 136, 181, 282, 190, 197, 254, 326, 231, 261,
	145, 313, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 129, 194, 0, 252,
	168, 315, 0, 160, 0, 0, 0, 0, 0, 0,
	120, 121, 130, 139, 146, 159, 164, 167, 173, 177,
	180, 182, 183, 184, 188, 202, 205, 206, 207, 208,
	222, 223, 225, 226, 229, 230, 233, 235, 236, 237,
	239, 240, 241, 246, 249, 251, 253, 256, 262, 264,
	265, 266, 268, 269, 270, 275, 276, 277, 278, 286,
	290, 301, 302, 312, 321, 323, 32, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 192, 0, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 0, 0, 0, 1290, 195, 0,
	0, 316, 283, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 172, 214, 133, 0,
	0, 0, 185, 322, 0, 0, 0, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	0, 0, 0, 0, 0, 154, 0, 260, 232, 311,
	0, 0, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 0, 0, 0, 151, 0, 0, 0, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 0, 0, 285, 314, 328, 201, 140, 0,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 129, 194, 75, 252, 168, 315,
	0, 160, 0, 0, 0, 0, 0, 0, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 32, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 192, 0, 0, 153, 200, 198, 0, 0, 0,
	234, 292, 0, 0, 0, 0, 195, 0, 0, 316,
	283, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 172, 214, 133, 0, 0, 0,
	185, 322, 0, 0, 0, 248, 0, 288, 175, 193,
	137, 119, 131, 147, 174, 224, 257, 267, 0, 0,
	0, 0, 0, 154, 0, 260, 232, 311, 0, 0,
	238, 259, 196, 300, 250, 309, 310, 176, 293, 319,
	324, 280, 163, 0, 123, 0, 245, 158, 189, 0,
	0, 0, 151, 0, 0, 0, 279, 298, 138, 295,
	212, 218, 148, 150, 149, 132, 274, 297, 142, 152,
	284, 263, 289, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 291, 308, 144, 271, 272, 325,
	258, 126, 306, 287, 210, 186, 187, 125, 0, 255,
	161, 171, 156, 227, 0, 170, 247, 303, 304, 155,
	327, 134, 318, 128, 135, 317, 221, 0, 220, 320,
	299, 307, 211, 204, 0, 127, 305, 209, 203, 191,
	166, 178, 243, 199, 244, 179, 216, 215, 217, 0,
	0, 0, 285, 314, 328, 201, 140, 0, 273, 296,
	0, 0, 141, 169, 165, 242, 219, 136, 181, 282,
	190, 197, 254, 326, 231, 261, 145, 313, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 129, 194, 75, 252, 168, 315, 0, 160,
	0, 0, 0, 0, 0, 0, 120, 121, 130, 139,
	146, 159, 164, 167, 173, 177, 180, 182, 183, 184,
	188, 202, 205, 206, 207, 208, 222, 223, 225, 226,
	229, 230, 233, 235, 236, 237, 239, 240, 241, 246,
	249, 251, 253, 256, 262, 264, 265, 266, 268, 269,
	270, 275, 276, 277, 278, 286, 290, 301, 302, 312,
	321, 323, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 1004, 0, 0, 0, 192, 0,
	0, 153, 200, 198, 0, 0, 0, 234, 292, 0,
	0, 0, 0, 195, 0, 0, 316, 283, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 1003, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 172, 214, 133, 0, 0, 0, 185, 322, 0,
	0, 0, 248, 0, 288, 175, 193, 137, 119, 131,
	147, 174, 224, 257, 267, 0, 0, 0, 0, 0,
	154, 0, 260, 232, 311, 0, 0, 238, 259, 196,
	300, 250, 309, 310, 176, 293, 319, 324, 280, 163,
	0, 123, 0, 245, 158, 189, 0, 0, 0, 151,
	0, 0, 0, 279, 298, 138, 295, 212, 218, 148,
	150, 149, 132, 274, 297, 142, 152, 284, 263, 289,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 291, 308, 144, 271, 272, 325, 258, 126, 306,
	287, 210, 186, 187, 125, 0, 255, 161, 171, 156,
	227, 0, 170, 247, 303, 304, 155, 327, 134, 318,
	128, 135, 317, 221, 0, 220, 320, 299, 307, 211,
	204, 0, 127, 305, 209, 203, 191, 166, 178, 243,
	199, 244, 179, 216, 215, 217, 0, 0, 0, 285,
	314, 328, 201, 140, 0, 273, 296, 0, 0, 141,
	169, 165, 242, 219, 136, 181, 282, 190, 197, 254,
	326, 231, 261, 145, 313, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 129,
	194, 0, 252, 168, 315, 0, 160, 0, 0, 0,
	0, 0, 0, 120, 121, 130, 139, 146, 159, 164,
	167, 173, 177, 180, 182, 183, 184, 188, 202, 205,
	206, 207, 208, 222, 223, 225, 226, 229, 230, 233,
	235, 236, 237, 239, 240, 241, 246, 249, 251, 253,
	256, 262, 264, 265, 266, 268, 269, 270, 275, 276,
	277, 278, 286, 290, 301, 302, 312, 321, 323, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 192, 0, 0, 153, 200,
	198, 0, 0, 0, 234, 292, 0, 0, 0, 0,
	195, 0, 0, 316, 283, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 172, 214,
	133, 0, 0, 0, 185, 322, 0, 0, 0, 248,
	0, 288, 175, 193, 137, 119, 131, 147, 174, 224,
	257, 267, 0, 0, 0, 0, 0, 154, 0, 260,
	232, 311, 0, 0, 238, 259, 196, 300, 250, 309,
	310, 176, 293, 319, 324, 280, 163, 0, 123, 0,
	245, 158, 189, 0, 0, 0, 151, 0, 0, 0,
	279, 298, 138, 295, 212, 218, 148, 150, 149, 132,
	274, 297, 142, 152, 284, 263, 289, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 291, 308,
	144, 271, 272, 325, 258, 126, 306, 287, 210, 186,
	187, 125, 0, 255, 161, 171, 156, 227, 0, 170,
	247, 303, 304, 155, 327, 134, 318, 128, 135, 317,
	221, 0, 220, 320, 299, 307, 211, 204, 0, 127,
	305, 209, 203, 191, 166, 178, 243, 199, 244, 179,
	216, 215, 217, 0, 0, 0, 285, 314, 328, 201,
	140, 0, 273, 296, 0, 0, 141, 169, 165, 242,
	219, 136, 181, 282, 190, 197, 254, 326, 231, 261,
	145, 313, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 129, 194, 0, 252,
	168, 315, 0, 160, 0, 0, 0, 0, 0, 0,
	120, 121, 130, 139, 146, 159, 164, 167, 173, 177,
	180, 182, 183, 184, 188, 202, 205, 206, 207, 208,
	222, 223, 225, 226, 229, 230, 233, 235, 236, 237,
	239, 240, 241, 246, 249, 251, 253, 256, 262, 264,
	265, 266, 268, 269, 270, 275, 276, 277, 278, 286,
	290, 301, 302, 312, 321, 323, 294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 192, 0, 0, 153, 200, 198, 0, 0,
	0, 234, 292, 0, 0, 0, 0, 195, 0, 0,
	316, 283, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 172, 214, 133, 0, 0,
	0, 185, 322, 0, 0, 0, 248, 0, 288, 175,
	193, 137, 119, 131, 147, 174, 224, 257, 267, 0,
	0, 0, 0, 0, 154, 0, 260, 232, 311, 0,
	0, 238, 259, 196, 300, 250, 309, 310, 176, 293,
	319, 324, 280, 163, 0, 123, 0, 245, 158, 189,
	0, 0, 0, 151, 0, 0, 0, 279, 298, 138,
	295, 212, 218, 148, 150, 149, 132, 274, 297, 142,
	152, 284, 263, 289, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 291, 308, 144, 271, 272,
	325, 258, 126, 306, 287, 210, 186, 187, 125, 0,
	255, 161, 171, 156, 227, 0, 170, 247, 303, 304,
	155, 327, 134, 318, 128, 135, 317, 221, 0, 220,
	320, 299, 307, 211, 204, 0, 127, 305, 209, 203,
	191, 166, 178, 243, 199, 244, 179, 216, 215, 217,
	0, 0, 0, 285, 314, 328, 201, 140, 0, 273,
	296, 0, 0, 141, 169, 165, 242, 219, 136, 181,
	282, 190, 197, 254, 326, 231, 261, 145, 313, 281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 129, 194, 0, 252, 168, 315, 0,
	160, 0, 0, 0, 0, 0, 0, 120, 121, 130,
	139, 146, 159, 164, 167, 173, 177, 180, 182, 183,
	184, 188, 202, 205, 206, 207, 208, 222, 223, 225,
	226, 229, 230, 233, 235, 236, 237, 239, 240, 241,
	246, 249, 251, 253, 256, 262, 264, 265, 266, 268,
	269, 270, 275, 276, 277, 278, 286, 290, 301, 302,
	312, 321, 323, 294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 973, 162, 0, 0, 0, 0, 192,
	0, 0, 153, 200, 198, 0, 0, 0, 234, 292,
	0, 0, 0, 0, 195, 0, 0, 316, 283, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 0, 0,
	0, 0, 172, 214, 133, 0, 0, 0, 185, 322,
	0, 0, 0, 248, 0, 288, 175, 193, 137, 119,
	131, 147, 174, 224, 257, 267, 0, 0, 0, 0,
	0, 154, 0, 260, 232, 311, 0, 0, 238, 259,
	196, 300, 250, 309, 310, 176, 293, 319, 324, 280,
	163, 0, 123, 0, 245, 158, 189, 0, 0, 0,
	151, 0, 0, 0, 279, 298, 138, 295, 212, 218,
	148, 150, 149, 132, 274, 297, 142, 152, 284, 263,
	289, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 291, 308, 144, 271, 272, 325, 258, 126,
	306, 287, 210, 186, 187, 125, 0, 255, 161, 171,
	156, 227, 0, 170, 247, 303, 304, 155, 327, 134,
	318, 128, 135, 317, 221, 0, 220, 320, 299, 307,
	211, 204, 0, 127, 305, 209, 203, 191, 166, 178,
	243, 199, 244, 179, 216, 215, 217, 0, 0, 0,
	285, 314, 328, 201, 140, 0, 273, 296, 0, 0,
	141, 169, 165, 242, 219, 136, 181, 282, 190, 197,
	254, 326, 231, 261, 145, 313, 281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	129, 194, 0, 252, 168, 315, 0, 160, 0, 0,
	0, 0, 0, 0, 120, 121, 130, 139, 146, 159,
	164, 167, 173, 177, 180, 182, 183, 184, 188, 202,
	205, 206, 207, 208, 222, 223, 225, 226, 229, 230,
	233, 235, 236, 237, 239, 240, 241, 246, 249, 251,
	253, 256, 262, 264, 265, 266, 268, 269, 270, 275,
	276, 277, 278, 286, 290, 301, 302, 312, 321, 323,
	294, 0, 0, 0, 525, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 192, 0, 0, 153,
	200, 198, 0, 0, 0, 234, 292, 0, 0, 0,
	0, 195, 0, 0, 316, 283, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 172,
	214, 133, 0, 0, 0, 185, 322, 0, 0, 0,
	248, 0, 288, 175, 193, 137, 119, 131, 147, 174,
	224, 257, 267, 0, 0, 0, 0, 0, 154, 0,
	260, 232, 311, 0, 0, 238, 259, 196, 300, 250,
	309, 310, 176, 293, 319, 324, 280, 163, 0, 123,
	0, 245, 158, 189, 0, 0, 0, 151, 0, 0,
	0, 279, 298, 138, 295, 212, 218, 148, 150, 149,
	132, 274, 297, 142, 152, 284, 263, 289, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 291,
	308, 144, 271, 272, 325, 258, 126, 306, 287, 210,
	186, 187, 125, 0, 255, 161, 171, 156, 227, 0,
	170, 247, 303, 304, 155, 327, 134, 318, 128, 135,
	317, 221, 0, 220, 320, 299, 307, 211, 204, 0,
	127, 305, 209, 203, 191, 166, 178, 243, 199, 244,
	179, 216, 215, 217, 0, 0, 0, 285, 314, 328,
	201, 140, 0, 273, 296, 0, 0, 141, 169, 165,
	242, 219, 136, 181, 282, 190, 197, 254, 326, 231,
	261, 145, 313, 281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 129, 194, 0,
	252, 168, 315, 0, 160, 0, 0, 0, 0, 0,
	0, 120, 121, 130, 139, 146, 159, 164, 167, 173,
	177, 180, 182, 183, 184, 188, 202, 205, 206, 207,
	208, 222, 223, 225, 226, 229, 230, 233, 235, 236,
	237, 239, 240, 241, 246, 249, 251, 253, 256, 262,
	264, 265, 266, 268, 269, 270, 275, 276, 277, 278,
	286, 290, 301, 302, 312, 321, 323, 294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 192, 0, 0, 153, 200, 198, 0,
	0, 0, 234, 292, 0, 0, 0, 0, 195, 0,
	0, 316, 283, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 172, 214, 133, 0,
	113, 0, 185, 322, 0, 0, 0, 248, 0, 288,
	175, 193, 137, 119, 131, 147, 174, 224, 257, 267,
	0, 0, 0, 0, 0, 154, 0, 260, 232, 311,
	0, 0, 238, 259, 196, 300, 250, 309, 310, 176,
	293, 319, 324, 280, 163, 0, 123, 0, 245, 158,
	189, 0, 0, 0, 151, 0, 0, 0, 279, 298,
	138, 295, 212, 218, 148, 150, 149, 132, 274, 297,
	142, 152, 284, 263, 289, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 291, 308, 144, 271,
	272, 325, 258, 126, 306, 287, 210, 186, 187, 125,
	0, 255, 161, 171, 156, 227, 0, 170, 247, 303,
	304, 155, 327, 134, 318, 128, 135, 317, 221, 0,
	220, 320, 299, 307, 211, 204, 0, 127, 305, 209,
	203, 191, 166, 178, 243, 199, 244, 179, 216, 215,
	217, 0, 0, 0, 285, 314, 328, 201, 140, 0,
	273, 296, 0, 0, 141, 169, 165, 242, 219, 136,
	181, 282, 190, 197, 254, 326, 231, 261, 145, 313,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 129, 194, 0, 252, 168, 315,
	0, 160, 0, 0, 0, 0, 0, 0, 120, 121,
	130, 139, 146, 159, 164, 167, 173, 177, 180, 182,
	183, 184, 188, 202, 205, 206, 207, 208, 222, 223,
	225, 226, 229, 230, 233, 235, 236, 237, 239, 240,
	241, 246, 249, 251, 253, 256, 262, 264, 265, 266,
	268, 269, 270, 275, 276, 277, 278, 286, 290, 301,
	302, 312, 321, 323, 294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	192, 0, 0, 153, 200, 198, 0, 0, 0, 234,
	292, 0, 0, 0, 0, 195, 0, 0, 316, 283,
	213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 0, 0, 172, 214, 133, 0, 0, 0, 185,
	322, 0, 0, 0, 248, 0, 288, 175, 193, 137,
	119, 131, 147, 174, 224, 257, 267, 0, 0, 0,
	0, 0, 154, 0, 260, 232, 311, 0, 0, 238,
	259, 196, 300, 250, 309, 310, 176, 293, 319, 324,
	280, 163, 0, 123, 0, 245, 158, 189, 0, 0,
	0, 151, 0, 0, 0, 279, 298, 138, 295, 212,
	218, 148, 150, 149, 132, 274, 297, 142, 152, 284,
	263, 289, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 291, 308, 144, 271, 272, 325, 258,
	126, 306, 287, 210, 186, 187, 125, 0, 255, 161,
	171, 156, 227, 0, 170, 247, 303, 304, 155, 327,
	134, 318, 128, 135, 317, 221, 0, 220, 320, 299,
	307, 211, 204, 0, 127, 305, 209, 203, 191, 166,
	178, 243, 199, 244, 179, 216, 215, 217, 0, 0,
	0, 285, 314, 328, 201, 140, 0, 273, 296, 0,
	0, 141, 169, 165, 242, 219, 136, 181, 282, 190,
	197, 254, 326, 231, 261, 145, 313, 281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 129, 194, 0, 252, 168, 315, 0, 160, 0,
	0, 0, 0, 0, 0, 120, 121, 130, 139, 146,
	159, 164, 167, 173, 177, 180, 182, 183, 184, 188,
	202, 205, 206, 207, 208, 222, 223, 225, 226, 229,
	230, 233, 235, 236, 237, 239, 240, 241, 246, 249,
	251, 253, 256, 262, 264, 265, 266, 268, 269, 270,
	275, 276, 277, 278, 286, 290, 301, 302, 312, 321,
	323, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 192, 0, 0,
	153, 200, 198, 0, 0, 0, 234, 292, 0, 0,
	0, 0, 195, 0, 0, 316, 283, 213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 0, 0,
	172, 214, 133, 0, 0, 0, 185, 322, 0, 0,
	0, 248, 0, 288, 175, 193, 137, 119, 131, 147,
	174, 224, 257, 267, 0, 0, 0, 0, 0, 154,
	0, 260, 232, 311, 0, 0, 238, 259, 196, 300,
	250, 309, 310, 176, 293, 319, 324, 280, 163, 0,
	123, 0, 245, 158, 189, 0, 0, 0, 151, 0,
	0, 0, 279, 298, 138, 295, 212, 218, 148, 150,
	149, 132, 274, 297, 142, 152, 284, 263, 289, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	291, 308, 144, 271, 272, 325, 258, 126, 306, 287,
	210, 186, 187, 125, 0, 255, 161, 171, 156, 227,
	0, 170, 247, 303, 304, 155, 327, 134, 318, 128,
	135, 317, 221, 0, 220, 320, 299, 307, 211, 204,
	0, 127, 305, 209, 203, 191, 166, 178, 243, 199,
	244, 179, 216, 215, 217, 0, 0, 0, 285, 314,
	328, 201, 140, 0, 273, 296, 0, 0, 141, 169,
	165, 242, 219, 136, 181, 282, 190, 197, 254, 326,
	231, 261, 145, 313, 281, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 129, 194,
	0, 252, 168, 315, 0, 160, 0, 0, 0, 0,
	0, 0, 120, 121, 130, 139, 146, 159, 164, 167,
	173, 177, 180, 182, 183, 184, 188, 202, 205, 206,
	207, 208, 222, 223, 225, 226, 229, 230, 233, 235,
	236, 237, 239, 240, 241, 246, 249, 251, 253, 256,
	262, 264, 265, 266, 268, 269, 270, 275, 276, 277,
	278, 286, 290, 301, 302, 312, 321, 323, 294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 192, 0, 0, 153, 200, 198,
	0, 0, 0, 234, 292, 0, 0, 0, 0, 195,
	0, 0, 316, 283, 213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 0, 0, 172, 214, 133,
	0, 0, 0, 185, 322, 0, 0, 0, 248, 0,
	288, 175, 193, 137, 119, 131, 147, 174, 224, 257,
	267, 0, 0, 0, 0, 0, 154, 0, 260, 232,
	311, 0, 0, 238, 259, 196, 300, 250, 309, 310,
	176, 293, 319, 324, 280, 163, 0, 123, 0, 245,
	158, 189, 0, 0, 0, 151, 0, 0, 0, 279,
	298, 138, 295, 212, 218, 148, 150, 149, 132, 274,
	297, 142, 152, 284, 263, 289, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 291, 308, 144,
	271, 272, 325, 258, 126, 306, 287, 210, 186, 187,
	125, 0, 255, 161, 171, 156, 227, 0, 170, 247,
	303, 304, 155, 327, 134, 318, 128, 135, 317, 221,
	0, 220, 320, 299, 307, 211, 204, 0, 127, 305,
	209, 203, 191, 166, 178, 243, 199, 244, 179, 216,
	215, 217, 0, 0, 0, 285, 314, 328, 201, 140,
	0, 273, 296, 0, 0, 141, 169, 165, 242, 219,
	136, 181, 282, 190, 197, 254, 326, 231, 261, 145,
	313, 281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 118, 129, 194, 0, 252, 168,
	315, 0, 160, 0, 0, 0, 0, 0, 0, 120,
	121, 130, 139, 146, 159, 164, 167, 173, 177, 180,
	182, 183, 184, 188, 202, 205, 206, 207, 208, 222,
	223, 225, 226, 229, 230, 233, 235, 236, 237, 239,
	240, 241, 246, 249, 251, 253, 256, 262, 264, 265,
	266, 268, 269, 270, 275, 276, 277, 278, 286, 290,
	301, 302, 312, 321, 323, 294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 192, 0, 0, 153, 200, 198, 0, 0, 0,
	234, 292, 0, 0, 0, 0, 195, 0, 0, 316,
	283, 213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 172, 214, 133, 0, 0, 0,
	185, 322, 0, 0, 0, 248, 0, 288, 175, 193,
	137, 119, 131, 147, 174, 224, 257, 267, 0, 0,
	0, 0, 0, 154, 0, 260, 232, 311, 0, 0,
	238, 259, 196, 300, 250, 309, 310, 176, 293, 319,
	324, 280, 163, 0, 123, 0, 245, 158, 189, 0,
	0, 0, 151, 0, 0, 0, 279, 298, 138, 295,
	212, 218, 148, 150, 149, 132, 274, 297, 142, 152,
	284, 263, 289, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 291, 308, 144, 271, 272, 325,
	258, 126, 306, 287, 210, 186, 187, 125, 0, 255,
	161, 171, 156, 227, 0, 170, 247, 303, 304, 155,
	327, 134, 318, 128, 545, 317, 221, 0, 220, 320,
	299, 307, 211, 204, 0, 127, 305, 209, 203, 191,
	166, 178, 243, 199, 244, 179, 216, 215, 217, 0,
	0, 0, 285, 314, 328, 541, 140, 0, 273, 296,
	0, 0, 141, 169, 165, 242, 546, 544, 535, 536,
	190, 197, 254, 326, 231, 261, 145, 313, 281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 129, 194, 0, 252, 168, 315, 0, 160,
	0, 0, 0, 0, 0, 0, 120, 121, 130, 139,
	146, 159, 164, 167, 173, 177, 180, 182, 183, 184,
	188, 202, 205, 206, 207, 208, 222, 223, 225, 226,
	229, 230, 233, 235, 236, 237, 239, 542, 543, 246,
	249, 251, 253, 256, 262, 264, 265, 266, 268, 269,
	270, 275, 276, 277, 278, 286, 290, 301, 302, 312,
	321, 323, 294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 192, 0,
	0, 153, 200, 198, 0, 0, 0, 234, 292, 0,
	0, 0, 0, 195, 0, 0, 316, 283, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 172, 214, 133, 0, 0, 0, 185, 322, 0,
	0, 0, 248, 0, 288, 175, 193, 137, 119, 131,
	147, 174, 224, 257, 267, 0, 0, 0, 0, 0,
	154, 0, 260, 232, 311, 0, 0, 238, 259, 196,
	300, 250, 309, 310, 176, 293, 319, 324, 280, 163,
	0, 123, 0, 245, 158, 189, 0, 0, 0, 151,
	0, 0, 0, 279, 298, 138, 295, 212, 218, 148,
	150, 149, 132, 274, 297, 142, 152, 284, 263, 289,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 291, 998, 144, 271, 272, 325, 258, 126, 306,
	287, 210, 186, 187, 125, 0, 255, 161, 171, 156,
	227, 0, 170, 247, 303, 304, 155, 327, 134, 318,
	128, 135, 317, 221, 0, 220, 320, 299, 307, 211,
	204, 0, 127, 305, 209, 203, 191, 166, 178, 243,
	199, 244, 179, 216, 215, 217, 0, 0, 0, 285,
	314, 328, 201, 140, 0, 273, 296, 0, 0, 141,
	169, 165, 242, 219, 136, 181, 282, 190, 197, 254,
	326, 231, 261, 145, 313, 281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 129,
	194, 0, 252, 168, 315, 0, 160, 0, 0, 0,
	0, 0, 0, 120, 121, 130, 139, 146, 159, 164,
	167, 173, 177, 180, 182, 183, 184, 188, 202, 205,
	206, 207, 208, 222, 223, 225, 226, 229, 230, 233,
	235, 236, 237, 239, 240, 241, 246, 249, 251, 253,
	256, 262, 264, 265, 266, 268, 269, 270, 275, 276,
	277, 278, 286, 290, 301, 302, 312, 321, 323, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 192, 0, 0, 153, 200,
	198, 0, 0, 0, 234, 292, 0, 0, 0, 0,
	195, 0, 0, 316, 283, 213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 172, 214,
	133, 0, 0, 0, 185, 322, 0, 0, 0, 248,
	0, 288, 175, 193, 137, 119, 131, 147, 174, 224,
	257, 267, 0, 0, 0, 0, 0, 154, 0, 260,
	232, 311, 0, 0, 238, 259, 196, 300, 250, 309,
	310, 176, 293, 319, 324, 280, 163, 0, 123, 0,
	245, 158, 189, 0, 0, 0, 151, 0, 0, 0,
	279, 298, 138, 295, 212, 218, 148, 150, 149, 132,
	274, 297, 142, 152, 284, 263, 289, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 291, 532,
	144, 271, 272, 325, 258, 126, 306, 287, 210, 186,
	187, 125, 0, 255, 161, 171, 156, 227, 0, 170,
	247, 303, 304, 155, 327, 134, 318, 128, 545, 317,
	221, 0, 220, 320, 299, 307, 211, 204, 0, 127,
	305, 209, 203, 191, 166, 178, 243, 199, 244, 179,
	216, 215, 217, 0, 0, 0, 285, 314, 328, 541,
	140, 0, 273, 296, 0, 0, 141, 169, 165, 242,
	546, 544, 535, 536, 190, 197, 254, 326, 231, 261,
	145, 313, 281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 129, 194, 0, 252,
	168, 315, 0, 160, 0, 0, 0, 0, 0, 0,
	120, 121, 130, 139, 146, 159, 164, 167, 173, 177,
	180, 182, 183, 184, 188, 202, 205, 206, 207, 208,
	222, 223, 225, 226, 229, 230, 233, 235, 236, 237,
	239, 542, 543, 246, 249, 251, 253, 256, 262, 264,
	265, 266, 268, 269, 270, 275, 276, 277, 278, 286,
	290, 301, 302, 312, 321, 323,
}
var yyPact = [...]int{

	3319, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1461, -1000, -1000, -1000, -1000, -1000, -1000, 654, 151,
	-1000, -1000, 270, 49, 22320, 269, 2822, 23174, -1000, -1000,
	-1000, 118, 195, 23174, -1000, -1000, -109, -118, -1000, 217,
	247, 1078, 1325, 1067, 31, -1000, 1503, 1507, -1000, -1000,
	245, 37, -1000, -1000, -1000, 18048, 165, -1000, -1000, -1000,
	1446, 1459, 1270, -1000, 11643, 224, 224, 21893, 24882, -1000,
	23174, 10360, 254, 23174, -157, 213, 213, 144, 264, -1000,
	523, -1000, -1000, -1000, -1000, 23174, 218, 22747, 218, 218,
	218, 218, 218, 23174, -1000, 440, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23174,
	1064, 1354, 634, 242, 7350, 7350, -1000, 631, -1000, 139,
	137, 135, 123, 13, 683, -1000, 7350, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 200, 235, 208, 165, 520, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1343, 1342, 836, 1338,
	424, 1337, 1195, -94, -1000, 1062, -1000, 1228, 1433, 262,
	23174, -1000, -1000, 1163, -1000, 1212, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 883, 1352, 725,
	14632, 1310, -1000, -1000, 645, 1484, -1000, 17194, 426, -1000,
	14205, 3291, 1168, -1000, -1000, 1168, -1000, -1000, 288, -1000,
	-1000, 15913, 15913, 15913, 15913, 15913, 15913, 15913, 15913, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1168, -1000, 11216, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 14205, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 21466, 20612, 23174, 1142, 1139, -1000, -1000,
	425, 1162, -125, 24455, -1000, -1000, -1000, -1000, 23601, 20185,
	517, -1000, -1000, -1000, -1000, 1335, -1000, -1000, 419, -1000,
	1072, 189, -1000, 434, 306, -1000, -1000, -1000, 1191, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 22747, 1424, 237, 1061, 573,
	1060, 1059, 1058, 213, 1056, 1161, 229, 23174, 1392, 1217,
	23174, 1055, 1054, 1052, 1051, -1000, 9930, -1000, 7350, 634,
	-1000, 834, 14205, 213, 213, 7350, 7350, 7350, 23174, 23174,
	23174, -1000, -1000, -1000, -1000, 23174, -1000, -1000, 634, 634,
	7350, 7350, 610, 1478, 610, 610, -1000, -1000, -1000, -1000,
	14205, -1000, 15913, -1000, -1000, 1050, 167, -1000, -1000, -1000,
	-1000, -1000, -1000, 1039, -1000, -1000, 424, 424, -1000, 817,
	424, 1119, -1000, 499, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 424, -1000, 13778, -298,
	-1000, -1000, 1270, -1000, -1000, 165, -1000, -1000, -1000, 23174,
	7350, 18048, 1168, 22747, -1000, -1000, -1000, 1499, 475, 1151,
	-1000, -1000, 1147, -1000, 832, 1413, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168,
	1168, 1168, 1168, 1168, 416, 882, 1279, -1000, -1000, -1000,
	23174, -1000, 14205, 14205, 846, -1000, 18475, -1000, -1000, -1000,
	-1000, 8210, 482, 15913, 688, 630, 15913, 15913, 15913, 15913,
	15913, 15913, 15913, 15913, 15913, 15913, 15913, 15913, 15913, 15913,
	15913, 733, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1036, -1000, 165, 963, 963, 454, 454, 454, 454, 454,
	454, 454, 18902, 1423, 883, 1035, 515, 11216, 12497, 12497,
	883, 14205, 14205, 13351, 12924, 12497, 12497, 1423, 502, 515,
	23601, -1000, -1000, 15486, -1000, -1000, -1000, -1000, -1000, 883,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22747, 22747,
	12497, 12497, 12497, 12497, 883, 883, 12497, 12497, 12497, 12497,
	12497, 883, 883, 883, 883, 1423, 1423, 12497, 12497, 12497,
	1423, 12497, 12497, 1423, 12497, 12497, 12497, 12497, 1423, 12497,
	12497, 12497, 158, 23174, -1000, 1145, 1166, -1000, -1000, -1000,
	1418, 19330, 16767, -1000, 158, 1096, 20612, 23174, -1000, -1000,
	20612, 23174, 7780, 24028, 1111, -1000, -135, -85, -125, -1000,
	-1000, 449, -1000, -1000, -1000, 10788, -1000, 9070, 5630, 9500,
	-1000, 306, 1191, -1000, -70, -1000, -1000, -1000, 1177, -1000,
	1177, 162, -1, 1177, 1177, 1177, 1177, 1177, -25, -25,
	-25, -25, 0, -1000, -1000, -1000, -1000, -1000, 1190, 1189,
	-1000, 1177, 1177, 1177, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1186, 166, 1180, 1180, 1180, 1180, 1180, 191,
	-1000, 14205, 1197, -1000, 23174, 7350, 1383, 7350, 128, 1188,
	23174, -1000, 23174, 23174, 1144, -1000, 23174, 1134, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 515,
	1032, 1031, -1000, -1000, -1000, -1000, -1000, -1000, 627, -1000,
	-1000, -1000, -1000, 634, 23174, 23174, 23174, 1407, 634, 515,
	1204, -1000, -1000, 1013, -1000, 1119, 1119, -1000, 1119, 424,
	963, 1119, -1000, 1030, 1376, 815, 1423, 883, 1270, 268,
	-1000, -1000, -1000, 175, 996, 413, -1000, 1232, 725, 725,
	14632, -1000, -1000, -1000, -1000, 9070, 1439, -1000, 1288, 1287,
	1213, -1000, -1000, 482, 549, -1000, -1000, 708, -1000, -1000,
	-1000, -1000, 410, 1168, -1000, 2819, -1000, -1000, -1000, -1000,
	688, 15913, 15913, 15913, 1204, 2819, 2772, 1080, 856, 454,
	694, 694, 465, 465, 465, 465, 465, 880, 880, -1000,
	-1000, -1000, 883, -1000, -1000, -1000, 12497, -1000, 14205, -1000,
	883, 1025, -1000, -1000, 515, 406, 1025, -1000, 693, 924,
	587, 1472, 1025, 531, 1469, 1025, 1025, 1025, 12497, 558,
	-1000, 14205, 883, -1000, 659, 1118, 1113, 1025, 883, 1112,
	1025, 1025, -173, -173, 883, 1025, 883, 1025, 1025, -173,
	-173, -173, -173, 12497, 12497, 1025, 1025, 1025, 12497, 1025,
	1025, 12497, 1025, 1025, 1025, 1025, 12497, 1025, 1025, 1025,
	164, 1168, -1000, 23601, 20612, 20612, 20612, 20612, 20612, -1000,
	1244, 1241, -1000, 1242, 1234, 1248, 18048, -1000, 1027, 883,
	117, 19330, -1000, 1168, -1000, 17621, 390, 253, 251, 246,
	1467, 20612, 1131, -1000, 1131, -1000, 340, -1000, -1000, 23601,
	-125, -138, -1000, -1000, 1111, -1000, 781, -1000, -1000, 515,
	-1000, 332, 1110, 5200, -1000, -1000, -1000, -1000, 189, -1000,
	-1000, -1000, 1187, 300, -1000, 1300, 420, 514, 887, 1292,
	-1000, -1000, 280, -76, -1000, -1000, 720, -25, -25, 1177,
	1177, 159, 1177, -1000, -25, -1000, -1000, -1000, 449, 1334,
	449, 449, 449, 449, -25, 790, 790, -1000, -1000, -1000,
	-1000, 712, -1000, 1186, -1000, 691, -1000, -1000, -1000, -1000,
	-1000, 857, 1215, 22747, 165, 1399, -1000, -1000, -1000, 1490,
	-1000, -1000, 216, -1000, 226, -1000, 7350, 23174, 7350, 7350,
	1467, 1004, 1000, -1000, -1000, -1000, 610, 634, 1328, -1000,
	-1000, 15913, -1000, -1000, -1000, -1000, 158, 256, -1000, 1279,
	-1000, 1423, 1108, -1000, -1000, 510, 417, 577, 203, 203,
	-1000, 491, 203, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 156, 1395, 22747, 22747, 1258, -1000, -1000, -1000, 23174,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6920,
	12497, -1000, 1204, 2819, 2639, -1000, 15913, -1000, 883, 515,
	-1000, 12497, -1000, 6490, -1000, 140, 733, 140, 15913, 15913,
	-1000, 15913, 15913, -1000, -208, -1000, 1149, 544, -1000, 14205,
	922, -1000, -1000, 15913, 15913, -1000, -1000, -1000, -1000, -1000,
	21039, -1000, -173, -173, -173, -173, -173, -1000, -1000, -1000,
	-1000, 1025, 1025, -173, -173, -173, 1025, -173, -173, 1025,
	-173, -173, -173, -173, 1025, -173, -173, -173, 1207, 23601,
	1168, -1000, 19758, 22747, 1148, -1000, 498, 1166, 1185, 1203,
	992, -1000, -1000, -1000, -1000, 1231, -1000, 1230, -1000, -1000,
	1172, -1000, -1000, 1107, 1168, 22747, 15913, 390, -1000, 1168,
	1168, 1168, 1461, 14205, 1131, -1000, -1000, 464, -1000, -1000,
	-139, -133, -1000, -1000, -1000, 8640, 5630, -1000, 5630, -1000,
	22747, 186, -1000, 887, -1000, -1000, 887, -1000, -1000, -1000,
	1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 592, 15913,
	1497, -1000, 1298, -1000, 1296, 789, -1000, -1000, 1092, 449,
	449, -25, -1000, -1000, 1177, -1000, 449, -1000, 480, -1000,
	-1000, -1000, -1000, 449, 1023, -1000, 1019, 1104, -1000, 1017,
	51, 23174, -1000, -1000, -1000, 1202, -1000, -1000, -1000, 1082,
	1103, -1000, 434, 999, 971, 961, 23174, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 634, -1000, 15913, 2819, -25, 23174,
	1213, 268, -1000, 892, -1000, 887, 398, -1000, -1000, -1000,
	1292, -1000, -1000, 274, 958, -1000, 950, 948, 22747, 1294,
	936, 23174, 22747, -1000, -1000, 906, 932, 14205, -1000, 22747,
	22747, 1168, 316, -1000, -1000, -1000, 1070, 11643, -1000, -1000,
	883, -1000, 15913, 2819, -1000, -1000, -1000, 295, 883, 1177,
	1177, -1000, 1177, 1180, -1000, 1177, 19, 1177, 3, 883,
	883, 2710, 2548, 2437, 635, 1168, -169, -1000, 515, 14205,
	2232, 2017, -1000, 360, -1000, -1000, -1000, -1000, -1000, -173,
	-173, -1000, -1000, -1000, -1000, -173, -1000, -1000, -173, -1000,
	-1000, -1000, -1000, -173, -1000, -1000, -1000, -1000, 1366, 1090,
	1102, -1000, -1000, 12070, 883, 996, 991, -1000, 1461, 23601,
	14205, -1000, -1000, 14205, 1179, -1000, 14205, -1000, -1000, -1000,
	-1000, 22747, 108, -1000, 14205, 991, 2476, -1000, 22747, 22747,
	22747, 1446, 515, -1000, -1000, -1000, -1000, 5200, -1000, 987,
	-1000, 1177, -1000, 1292, -1000, -1000, 22747, -1000, 2819, -69,
	-1000, -1000, -1000, -1000, -1000, -1000, 449, -1000, -1000, -1000,
	-1000, -1000, -25, 788, -25, 689, -1000, 684, -1000, -1000,
	-244, 1176, -1000, 165, 23174, 72, 216, -1000, 434, 434,
	434, -1000, -1000, 2819, -71, -1000, -1000, -1000, 906, 173,
	434, -1000, 1197, 420, 186, -1000, -1000, -1000, -1000, -1000,
	929, 392, -1000, 219, 173, 906, 515, 402, 1368, -1000,
	22747, 1465, 20612, -1000, -1000, -1000, 2819, 6060, -1000, -1000,
	157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15913,
	15913, 15913, 15913, 15913, 883, 787, 515, 15913, 15913, 883,
	1458, -1000, -1000, -1000, -1000, -1000, 1291, -1000, 1168, -1000,
	-1000, 172, -1000, 22747, 1446, -1000, 515, 515, 22747, 515,
	977, -1000, 1168, 16340, -1000, 18048, 955, 955, 955, -1000,
	287, 22747, 1413, 947, -1000, -1000, 449, -1000, 449, 1081,
	1020, -1000, 22747, -1000, 1443, -1000, 72, -1000, 786, 87,
	92, -1000, 85, 84, 83, 82, 80, -1000, -1000, -1000,
	-1000, 1317, 1313, 1143, 997, -1000, -1000, 891, -1000, 1173,
	887, -1000, -1000, 866, -1000, -1000, 22747, -1000, 173, 1364,
	1359, 1168, -1000, 1463, 1457, 1131, 11643, -1000, -1000, -1000,
	-1000, 659, 659, 659, 659, 90, -1000, -1000, 659, 659,
	-1000, 14205, 1496, -1000, 1168, -1000, 165, -1000, -1000, 943,
	-1000, 22747, -1000, -1000, 390, -1000, -1000, -1000, 287, -1000,
	864, 491, 782, -1000, -1000, 179, -1000, -1000, -1000, -1000,
	919, -1000, 107, 4519, -1000, -1000, -1000, -1000, -1000, -1000,
	1322, 1321, 106, 221, 1305, 1307, 1456, 20612, -1000, -1000,
	280, 22747, 1197, -1000, -1000, -1000, 15913, -1000, 155, -1000,
	14632, 14632, 1465, -1000, -1000, -1000, -1000, -1000, 883, 93,
	-216, -1000, -1000, 1086, 23601, 1102, 883, -1000, -1000, -1000,
	-1000, -1000, 657, -1000, 23174, 287, 101, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14205, 14205, 4770, 4519, -1000,
	-1000, -1000, -1000, 1172, 656, 1313, 1455, 1311, 1309, -1000,
	772, 1131, 916, 1170, 2819, 911, -1000, 22747, -1000, 515,
	-1000, 1099, -1000, 515, -1000, 1463, -1000, -1000, 1256, -211,
	-225, 883, 1097, -1000, -1000, 1169, -1000, 287, 111, -1000,
	764, 897, 58, 52, 3003, -1000, -1000, -1000, -1000, -301,
	-1000, -1000, 1316, -1000, 741, -1000, 1449, 1448, -1000, 1465,
	287, 22747, -1000, 155, 1283, 14632, -1000, -1000, 1252, -1000,
	-1000, 22747, -1000, 839, 714, 551, -1000, 14205, 4519, 1440,
	1438, 1427, 1353, 8640, 4346, -1000, -1000, 732, 727, 1463,
	-1000, 879, -1000, 152, -1000, -213, 851, 302, -1000, -1000,
	565, 4519, -1000, 838, -302, 198, 165, 509, 15913, -1000,
	-1000, -1000, -1000, -1000, -1000, 287, 147, -222, 1201, -1000,
	-1000, -1000, -1000, -1000, -1000, 4519, -1000, -303, 4519, 2509,
	-1000, -1000, -1000, 4200, -1000, -1000, -1000, -1000, 48, -1000,
	-1000, 2819, -1000, 1168, -226, 1200, 1199, 1477, -1000, -304,
	4052, -305, 210, 4519, 497, -1000, 14205, -1000, 509, -1000,
	15059, -1000, -1000, 1495, -1000, 1492, 409, 409, 3937, 550,
	4519, -1000, -308, 209, 4519, -1000, 819, -1000, 659, 883,
	-1000, -1000, -1000, 178, 711, -1000, -1000, -1000, 3768, -1000,
	-310, 4519, -1000, -1000, -1000, -1000, -1000, 207, 3437, -313,
	-1000, 206, 4519, -1000,
}
var yyPgo = [...]int{

	0, 1823, 71, 1822, 150, 1820, 1819, 1818, 19, 17,
	15, 21, 1816, 1593, 1591, 1589, 1586, 1812, 1584, 1811,
	5, 1810, 1808, 1579, 1807, 1805, 1577, 1575, 1573, 1571,
	26, 1804, 12, 1803, 6, 113, 124, 1801, 3, 1800,
	1794, 8, 1790, 1789, 1568, 1788, 1787, 1786, 1785, 74,
	1784, 1550, 1548, 1783, 1780, 1546, 1539, 1779, 1778, 1537,
	1529, 1526, 1777, 149, 1776, 1775, 1774, 116, 70, 110,
	1772, 1770, 1769, 89, 59, 1517, 92, 40, 84, 938,
	1768, 23, 31, 1766, 1765, 162, 100, 1764, 120, 1763,
	81, 479, 80, 1762, 1761, 138, 1760, 1752, 1751, 106,
	1750, 1748, 53, 1747, 1745, 127, 1744, 50, 30, 35,
	1743, 1742, 1741, 1737, 1729, 111, 2, 1728, 1725, 112,
	1721, 64, 1716, 1710, 130, 1709, 1707, 1706, 104, 58,
	1704, 41, 1703, 52, 51, 1702, 36, 1701, 99, 1699,
	1698, 34, 13, 1697, 33, 1696, 43, 1695, 109, 292,
	196, 11, 44, 48, 56, 1694, 82, 24, 29, 94,
	78, 76, 37, 1693, 115, 1691, 65, 118, 105, 102,
	117, 1687, 1686, 1684, 815, 1682, 1681, 103, 1679, 57,
	174, 787, 161, 87, 1678, 67, 1677, 1674, 1673, 1672,
	66, 86, 1671, 1669, 180, 213, 90, 1113, 32, 1641,
	54, 119, 1668, 45, 1667, 1666, 2763, 83, 60, 88,
	1665, 85, 27, 46, 1664, 1663, 1662, 1658, 1657, 1656,
	1353, 1655, 1654, 1651, 1650, 795, 129, 1649, 1648, 93,
	79, 1647, 1644, 1640, 1636, 1635, 101, 73, 114, 1628,
	95, 96, 97, 1627, 1625, 1624, 1623, 42, 39, 1622,
	1620, 1619, 75, 63, 1618, 55, 25, 28, 49, 9,
	61, 108, 1617, 14, 1616, 91, 4, 10, 7, 1614,
	1611, 1609, 1608, 1606, 62, 1603, 1601, 47, 1599, 1598,
	1597, 38, 1595, 1581, 1558, 1554, 0, 163, 121, 1534,
	1532, 122,
}
var yyR1 = [...]int{

	0, 284, 285, 285, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 62, 2, 2, 7, 3, 3, 3,
	4, 4, 83, 84, 84, 88, 88, 5, 5, 6,
	6, 8, 8, 66, 66, 9, 10, 10, 10, 10,
	288, 288, 97, 97, 95, 95, 96, 96, 159, 159,
	11, 11, 11, 164, 164, 169, 169, 169, 172, 172,
	172, 172, 151, 152, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 272, 272, 273, 273, 274, 274, 274,
	274, 275, 275, 276, 276, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 24, 193, 193, 42, 42,
	43, 43, 43, 147, 147, 147, 12, 12, 12, 12,
	12, 19, 21, 21, 31, 31, 32, 22, 22, 22,
	22, 33, 33, 34, 25, 25, 25, 25, 25, 25,
	40, 40, 40, 39, 39, 38, 38, 38, 38, 38,
	38, 23, 23, 23, 23, 41, 41, 36, 36, 35,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 26, 26, 26, 26, 26, 26, 18, 271,
	271, 271, 30, 30, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 47, 249, 250, 250, 250, 250, 250, 250, 250,
	250, 237, 238, 213, 213, 213, 213, 213, 213, 213,
	212, 212, 212, 212, 216, 216, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 215, 215, 215, 215, 215,
	215, 215, 215, 217, 217, 217, 217, 217, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 219, 219, 219, 219, 219, 219, 219,
	219, 236, 236, 220, 220, 229, 229, 230, 230, 230,
	227, 227, 228, 228, 231, 231, 223, 224, 232, 225,
	225, 225, 226, 226, 226, 235, 235, 235, 235, 221,
	239, 239, 259, 259, 258, 258, 257, 257, 257, 248,
	248, 254, 254, 254, 254, 254, 243, 243, 243, 242,
	242, 244, 244, 247, 247, 256, 256, 255, 240, 240,
	260, 260, 260, 260, 260, 241, 241, 241, 261, 245,
	245, 246, 246, 246, 267, 268, 266, 266, 266, 266,
	266, 112, 112, 112, 251, 251, 251, 252, 252, 252,
	253, 253, 253, 269, 269, 44, 44, 45, 50, 50,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 146, 146, 146, 46, 191, 191, 265,
	265, 265, 264, 262, 262, 263, 263, 14, 48, 48,
	15, 15, 15, 15, 15, 15, 15, 16, 16, 51,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 80,
	178, 178, 176, 176, 179, 179, 177, 177, 177, 180,
	180, 180, 210, 210, 210, 53, 53, 58, 58, 61,
	59, 60, 27, 28, 28, 28, 28, 29, 192, 192,
	56, 56, 57, 57, 57, 57, 72, 72, 289, 289,
	55, 55, 54, 54, 54, 54, 17, 290, 63, 64,
	64, 65, 65, 65, 183, 183, 69, 69, 69, 67,
	67, 67, 68, 68, 74, 74, 78, 78, 78, 78,
	77, 77, 77, 77, 149, 149, 149, 150, 150, 202,
	202, 202, 201, 201, 201, 201, 82, 82, 85, 85,
	86, 86, 86, 86, 89, 132, 132, 106, 106, 107,
	107, 107, 107, 107, 118, 118, 158, 158, 157, 157,
	160, 160, 87, 87, 87, 87, 92, 92, 93, 93,
	94, 94, 190, 190, 208, 208, 208, 98, 98, 98,
	100, 99, 99, 99, 99, 101, 101, 103, 104, 104,
	102, 102, 105, 108, 108, 108, 108, 109, 109, 79,
	79, 79, 79, 79, 79, 79, 175, 175, 111, 111,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	127, 127, 127, 127, 127, 127, 113, 113, 113, 113,
	113, 113, 113, 73, 73, 128, 128, 128, 91, 90,
	90, 76, 76, 75, 75, 129, 129, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 122, 122, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 291, 291, 124, 123, 123, 123, 123,
	123, 123, 70, 70, 70, 70, 70, 209, 209, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 139, 139, 71, 71, 137, 137, 138, 140,
	140, 136, 136, 136, 115, 115, 115, 115, 115, 115,
	115, 115, 117, 117, 117, 141, 141, 130, 130, 81,
	81, 142, 142, 143, 143, 144, 144, 145, 145, 148,
	148, 153, 153, 153, 154, 154, 154, 154, 119, 119,
	155, 155, 155, 114, 114, 114, 114, 114, 114, 156,
	156, 156, 156, 161, 161, 131, 131, 134, 134, 133,
	135, 162, 162, 166, 163, 163, 167, 167, 167, 167,
	170, 170, 171, 171, 171, 168, 168, 168, 165, 165,
	165, 205, 205, 205, 173, 173, 184, 184, 181, 181,
	182, 182, 174, 174, 222, 222, 187, 187, 187, 187,
	187, 187, 187, 187, 189, 189, 188, 188, 188, 185,
	185, 185, 186, 186, 203, 203, 199, 199, 204, 204,
	200, 200, 206, 206, 207, 207, 270, 270, 233, 233,
	280, 280, 234, 234, 281, 281, 283, 283, 278, 278,
	279, 279, 282, 282, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 286, 287, 194,
	195, 195, 195,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 11, 4, 7, 5, 1, 13, 3,
	10, 12, 2, 1, 3, 3, 6, 1, 3, 1,
	3, 7, 8, 1, 1, 9, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 0, 0, 2, 3, 11, 7, 9, 5,
	5, 15, 11, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 4, 0, 3, 1, 1,
	1, 1, 1, 0, 2, 2, 1, 1, 1, 1,
	1, 4, 5, 8, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 5, 5, 5, 6, 3, 5,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 4, 2, 4, 2, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 4, 3, 2, 4, 3, 0,
	2, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 5, 4, 1, 1, 2, 3, 4, 3, 3,
	3, 3, 3, 0, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 0, 1, 1, 2, 2, 3, 1, 0,
	3, 3, 0, 2, 2, 2, 1, 2, 1, 2,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 2, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 1,
	10, 11, 11, 12, 12, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 0, 2, 1, 1, 5, 1, 3,
	2, 5, 4, 3, 3, 3, 5, 3, 8, 10,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 0, 1, 2, 4, 0, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 4, 4, 4, 4, 4, 3, 2, 3,
	4, 4, 3, 6, 6, 4, 4, 4, 4, 4,
	4, 3, 3, 2, 6, 2, 4, 4, 4, 5,
	7, 6, 5, 4, 2, 4, 3, 2, 3, 3,
	1, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	2, 2, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 4, 7, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 3, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 3, 6, 6, 6, 8, 8, 8,
	8, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	1, 0, 2, 1, 1, 0, 3, 1, 3, 2,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 1, 3, 5, 4, 6, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}
var yyChk = [...]int{

	-1000, -284, -1, -2, -7, -8, -9, -10, -11, -13,
	-44, -14, -15, -16, -51, -52, -53, -58, -59, -60,
	-56, -55, -54, -17, -23, -26, -18, -62, -27, -28,
	-29, -3, 6, 7, -66, 9, 10, 30, -47, 130,
	-45, -46, 133, 132, 169, 134, 162, 64, 225, -61,
	228, 229, -289, -192, 167, 168, 31, 32, 136, 212,
	213, 20, 37, 230, 232, -4, -83, -5, 8, 321,
	131, 226, 164, 163, 26, 366, -286, 68, -285, 436,
	-144, 15, -63, -290, -63, -63, -63, -63, -63, -249,
	105, 68, -186, 143, 86, 312, 139, -193, -184, -185,
	189, 199, 44, 150, 149, 140, 140, 141, 143, 312,
	139, 177, 176, 140, -102, -206, 71, -197, 363, 153,
	378, 379, 131, 186, 225, 239, 233, 267, 255, 364,
	380, 154, 207, 138, 253, 256, 299, 152, 200, 381,
	288, 294, 210, 80, 228, 308, 382, 155, 204, 206,
	205, 194, 211, 36, 165, 251, 244, 215, 189, 383,
	371, 242, 28, 184, 384, 296, 272, 385, 368, 295,
	247, 243, 136, 386, 156, 150, 179, 387, 273, 277,
	388, 300, 389, 390, 391, 142, 237, 238, 392, 190,
	302, 271, 33, 151, 365, 48, 174, 303, 38, 275,
	37, 287, 393, 270, 265, 394, 395, 396, 397, 269,
	236, 264, 202, 53, 137, 279, 278, 280, 203, 298,
	260, 258, 398, 399, 157, 400, 401, 245, 18, 402,
	403, 306, 168, 404, 42, 405, 406, 407, 172, 408,
	409, 410, 297, 274, 276, 188, 411, 248, 147, 412,
	176, 413, 367, 414, 304, 241, 415, 158, 232, 173,
	167, 307, 416, 213, 417, 418, 419, 159, 420, 421,
	422, 229, 230, 290, 208, 423, 424, 425, 426, 198,
	183, 310, 301, 52, 212, 284, 427, 235, 149, 214,
	428, 226, 43, 180, 7, 201, 291, 209, 199, 262,
	175, 429, 430, 249, 250, 268, 234, 263, 227, 177,
	178, 169, 431, 309, 285, 369, 51, 257, 254, 181,
	261, 432, 143, 433, 182, 231, 305, 252, 286, 140,
	123, 256, 299, 130, 289, 290, 296, -243, 297, 176,
	179, -210, 140, -176, 288, 182, 71, 141, 142, 33,
	301, 300, 292, -206, 144, 231, -72, 134, 170, -102,
	-194, -194, -194, 291, 291, -194, -41, 71, 214, -41,
	30, 71, 71, 36, 71, 230, 6, -65, 5, -174,
	143, 145, 227, -84, -88, -208, -206, -198, 73, 334,
	335, 336, 337, 338, 351, 352, 353, 339, 340, 354,
	355, 356, 341, 342, 357, 358, 360, 361, 359, 345,
	344, 343, 346, 347, 349, 348, 350, -2, -154, 17,
	16, -69, 54, 55, -64, -77, 114, -79, -206, -110,
	88, -116, 29, 71, -197, 24, -115, -111, -136, -135,
	-91, 123, 124, 125, 112, 113, 120, 89, 126, -122,
	-120, -121, -123, -125, -126, 73, 72, 81, 74, 75,
	76, 77, 82, 83, 84, -199, -133, -286, 58, 59,
	139, 322, 323, 324, 325, 362, 160, 326, 91, 47,
	311, 320, 319, 318, 316, 317, 313, 315, 314, 328,
	329, 146, 312, 118, 321, 351, 352, 353, 354, 355,
	356, 357, 358, 360, 361, 359, 341, 334, 335, 336,
	337, 338, 339, 340, 342, 343, 344, 345, 346, 347,
	348, 349, 350, -174, -174, 11, -95, -96, -102, -105,
	-206, -163, 227, -170, -167, 300, 301, -168, -171, -165,
	-136, 287, 409, 410, 299, 256, 298, -199, -206, -102,
	-250, -238, -241, -200, 155, -261, -199, -196, 152, 71,
	-197, 135, 161, 87, 370, 23, 25, 282, 334, 90,
	123, 335, 336, 337, 16, 20, 91, 122, 322, 338,
	130, 62, 313, 315, 311, 312, 289, 29, 10, 26,
	163, 193, 22, 116, 132, 94, 95, 96, 166, 24,
	164, 84, 160, 19, 65, 11, 13, 332, 333, 14,
	146, 145, 107, 191, 141, 60, 8, 126, 27, 104,
	56, 339, 340, 374, 45, 375, 58, 105, 17, 316,
	317, 31, 362, 341, 171, 376, 342, 118, 196, 63,
	50, 88, 82, 34, 85, 66, 86, 15, 192, 61,
	330, 195, 377, 106, 133, 321, 59, 139, 6, 327,
	30, 162, 345, 344, 343, 346, 197, 57, 324, 325,
	347, 434, 140, 93, 328, 329, 144, 83, 5, 44,
	32, 9, 64, 67, 318, 319, 320, 47, 349, 348,
	350, 92, 12, 331, 366, 141, -102, 321, -182, 146,
	-182, 177, 176, 140, 97, -48, -102, -181, 146, -199,
	-181, -181, -181, -181, -181, -102, 127, -102, 71, 30,
	-180, 105, 12, 312, 139, 71, 176, 179, 140, 177,
	143, -195, -286, -200, -195, -245, 11, 107, 180, 180,
	180, 181, 180, -179, -178, 178, 294, 295, 291, 293,
	12, -80, 105, -195, 71, 230, 144, -57, -2, -10,
	-8, -9, -2, 97, -194, -194, 30, 30, 73, 51,
	30, -36, -35, -37, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 30, -271, 68, -233,
	287, 71, -63, -6, -4, -286, 6, 21, 22, 140,
	-102, 69, 23, -286, -287, 70, -155, 19, 31, -119,
	74, 77, -145, -148, -79, -198, 334, 335, 336, 337,
	338, 351, 352, 353, 339, 340, 354, 355, 356, 341,
	342, 357, 358, 360, 361, 359, 345, 344, 343, 346,
	347, 349, 348, 350, -206, 50, -67, 21, 22, 79,
	11, -202, 87, 86, 104, -201, 23, 71, -197, -198,
	73, 127, -79, -113, 107, 88, 105, 106, 90, 109,
	108, 119, 112, 113, 114, 115, 116, 117, 118, 110,
	111, 122, 97, 98, 99, 100, 101, 102, 103, -175,
	-286, -91, -286, 128, 129, -116, -116, -116, -116, -116,
	-116, -116, -116, -286, -2, -129, -79, -286, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -139, -79,
	-286, -291, -124, -286, -291, -124, -291, -124, -291, -286,
	-291, -124, -291, -124, -291, -291, -124, -291, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -286, -286, -286, -286, -286, -286, -286, -286,
	-286, -286, -104, 27, -102, -82, -85, -86, -87, -106,
	-90, -286, -102, -91, -102, -95, -288, 69, 11, 67,
	-288, 69, 127, 69, -164, -169, 302, 304, 227, -168,
	-168, -205, -199, 73, 29, 97, 30, 127, 70, 69,
	-241, 155, 152, -212, -216, -218, -217, -219, -214, -215,
	253, 256, 260, 258, 254, 259, 123, 257, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 30,
	165, 249, 250, 251, 252, 273, 274, 275, 276, 277,
	278, 279, 280, 233, 255, 364, 234, 235, 236, 237,
	238, 239, 241, 242, 243, 244, 245, 246, 247, 71,
	-261, 68, -199, 23, 143, 71, 88, 71, 71, 71,
	-182, 71, 69, 144, -95, 24, 66, -97, -102, 71,
	71, 71, 71, -207, -206, -196, -195, -180, 73, -79,
	-182, -182, -195, -195, -195, -102, -102, -102, -102, -180,
	-180, -195, -195, -177, 11, 107, 11, -177, -177, -79,
	-116, 71, 71, 230, 71, -36, -36, 73, -36, 69,
	97, -36, 70, -129, -270, 435, -69, -2, -63, -102,
	-195, -88, -90, -286, -156, -199, 9, 107, 69, 18,
	69, -153, 25, 26, -153, 127, -117, 51, 74, 77,
	-183, 49, -102, -79, -79, -127, 82, 88, 83, 84,
	-201, 114, -207, -200, -196, -116, -128, -133, -91, 78,
	107, 105, 106, 90, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -209,
	71, 73, 71, -115, -115, -199, -67, -287, 69, -287,
	-2, -75, -78, 114, -79, -206, -75, -287, -79, -79,
	-136, 73, -75, -136, 73, -75, -75, -75, -67, -137,
	-138, 92, -136, -287, -116, -199, -199, -75, -76, -75,
	-75, -75, -287, -287, -78, -75, -78, -75, -75, -287,
	-287, -287, -287, -67, -67, -75, -75, -75, -67, -75,
	-75, -67, -75, -75, -75, -75, -67, -75, -75, -75,
	-159, 172, -102, 30, 69, -98, -100, -99, -101, 56,
	60, 62, 57, 58, 59, 63, -190, 23, -82, -89,
	47, -286, -107, 172, -108, 23, -208, 64, 145, 65,
	-159, 67, -82, -102, -82, -105, -206, 114, -167, -170,
	69, 303, 305, 306, -164, -226, 122, 66, 85, -79,
	-200, -207, -251, -252, -253, -200, 73, 74, -238, -239,
	-240, -241, -254, 155, -260, 147, 149, 44, -242, 156,
	141, 45, -213, -227, 285, -220, 68, -220, -220, 261,
	253, 256, 254, -220, -220, -220, -220, -220, -225, 256,
	-225, -225, -225, -225, 254, 68, 68, -220, -220, -220,
	-229, 68, -229, 248, -230, 68, -230, -230, -230, -230,
	-261, -79, -203, 67, -151, -102, -195, 24, -195, -42,
	186, 161, 68, -102, -102, -102, -102, 69, 71, 71,
	-246, 11, 107, -180, -206, -206, -102, -118, 23, -180,
	-73, 166, 71, -35, -115, 70, -103, 27, 73, -67,
	-287, -69, -50, -49, -187, 135, 132, 133, 137, 138,
	-264, 282, 131, 256, 80, 29, 15, 322, 172, 369,
	71, 173, -287, 69, 127, 52, -119, -119, -148, -173,
	19, 11, 47, 47, -68, 57, 82, 83, 84, 127,
	-286, -128, -116, -116, -116, -73, 87, -287, -76, -79,
	-287, 69, -287, 127, -287, 69, 67, 23, 11, 11,
	-287, 11, 11, -287, -287, -287, -75, -140, -138, 94,
	-79, -287, -287, 69, 69, -287, -287, -287, -287, -149,
	330, -149, -287, -287, -287, -287, -287, -149, -149, -149,
	-149, -75, -75, -287, -287, -287, -75, -287, -287, -75,
	-287, -287, -287, -287, -75, -287, -287, -287, -114, 30,
	47, -2, -286, -286, -162, -166, -136, -85, -86, -86,
	-85, -86, 56, 56, 56, 61, 56, 61, 56, -99,
	-208, -287, -287, -132, 185, -286, 34, -208, -108, 141,
	141, 141, -109, 12, -82, -109, -109, 127, -169, -172,
	307, 304, 310, 71, 73, 127, 69, -253, 97, -241,
	68, 71, 45, -242, 141, 45, -242, -247, 71, -247,
	45, -231, -223, -224, -232, -235, -221, 82, 88, 29,
	66, 282, 147, 45, 44, 80, -228, 286, 74, -225,
	-225, -220, -220, -220, 261, -220, -225, -226, 30, -226,
	-226, -226, -226, -225, -236, 73, -236, 74, -229, 74,
	70, 66, -199, -2, 23, -43, 8, 9, 10, -272,
	-273, -274, 71, 107, 191, 192, 144, -195, -102, -195,
	-195, -109, 71, 71, -177, -180, 34, -116, -159, 140,
	-183, 69, -194, -191, -265, -242, -269, -240, -241, 148,
	156, 147, 172, 155, -191, -265, 155, 152, -242, 156,
	148, -188, -242, 144, 23, -191, -191, -248, 97, -191,
	172, 23, -199, -199, 53, -102, -74, -152, 114, -200,
	-76, -73, 87, -116, -287, -78, 114, -207, -211, 123,
	253, 165, 251, 244, 271, 258, 284, 249, 285, -209,
	-211, -116, -116, -116, -116, 363, -144, 96, -79, 93,
	-116, -116, -199, -286, -149, -149, -149, -149, -149, -287,
	-287, -150, -149, -150, -150, -287, -150, -150, -287, -150,
	-150, -150, -150, -287, -150, -150, -150, -161, 66, -162,
	-131, -134, -133, -286, -2, -156, -160, -199, -109, 69,
	97, -93, -92, 66, 67, -94, 66, -92, 56, 56,
	-158, 68, 69, -133, -286, -160, -116, -108, -286, -286,
	-286, -144, -79, -109, 304, 308, 309, -252, -253, -256,
	-255, -199, -260, 156, -247, -247, 68, 82, -116, 9,
	45, 45, 73, 70, -226, -226, -225, -220, -226, 71,
	123, -226, 70, 69, 70, 69, 70, 69, -112, 384,
	88, -102, -151, -151, 66, 70, 69, -212, 71, 71,
	71, -102, -180, -116, -225, -102, -68, -49, 68, -237,
	71, -194, -247, -185, 71, 71, -194, 71, 71, -199,
	45, 71, -102, -199, -237, 71, -79, -199, -199, -90,
	127, -109, 11, 69, -77, -287, -116, 127, -287, -220,
	-220, -220, -230, -220, 238, -220, 238, -287, -287, 19,
	19, 19, 19, -286, -71, 327, -79, 69, 69, -144,
	172, -150, -150, -150, -150, -150, 28, -161, 69, -287,
	-287, -287, -287, 69, -144, -166, -79, -79, 68, -79,
	-157, -199, 185, -287, -108, -190, -157, -157, -157, -154,
	70, 69, -220, -157, -121, -226, -225, 73, -225, 74,
	74, 384, 68, -2, -102, -275, -276, -277, 80, 365,
	88, 193, 194, 157, 195, 196, 197, -274, -212, -212,
	-212, -278, -179, -74, -237, -146, 160, 161, -212, -203,
	-244, -242, 71, -189, 144, 23, 144, -146, -237, 30,
	132, 27, -199, -141, 13, -82, -152, -152, 114, -225,
	71, -116, -116, -116, -116, -116, -287, 73, -116, -116,
	-287, 16, 45, -134, 47, -2, -286, -199, -154, -157,
	70, 69, -133, -107, -208, -287, -287, -287, -258, -257,
	67, 151, 80, -255, -153, 70, -226, -226, 70, 70,
	-256, -151, 19, -151, -277, 73, 197, 193, 197, 197,
	197, 197, 198, -279, 38, -281, 39, 11, 70, 71,
	-213, 68, -247, 71, -199, -146, 29, 29, -286, -142,
	14, 16, -109, -77, -287, -287, -287, -287, -70, 107,
	366, -287, -287, -129, 9, -131, -2, 70, -199, -108,
	-257, 71, -248, 73, 158, 70, 184, -20, -2, -8,
	-9, -10, -11, -13, -44, -14, -15, -21, -22, -16,
	-51, -52, -61, -59, -60, -56, -55, -25, -23, -26,
	-18, -27, -28, -29, -24, 91, 146, 215, 225, 36,
	36, 189, 190, -222, 145, -282, 43, -280, -234, 42,
	16, -82, -256, -203, -116, -262, -263, 172, -143, -79,
	-198, -130, -81, -79, -198, -141, -152, -287, 364, 63,
	367, -144, -162, -287, 74, -102, -259, -258, 185, -151,
	-79, -79, 71, -40, -204, 218, 219, 220, -200, -30,
	-20, -158, 74, -281, 16, -283, 40, 41, 73, -109,
	70, 68, -287, 69, -199, 69, -142, 53, 365, 368,
	-287, 68, -147, 187, 188, -31, -32, 92, 93, 216,
	217, 221, -212, 69, 436, 38, 73, 16, 16, -141,
	-259, -256, -263, 47, -81, 53, -157, -151, 71, 71,
	96, 94, -32, -79, -30, 19, 19, 19, 29, -200,
	96, -20, 73, 73, -142, 70, 174, 366, 70, -12,
	-19, -11, -8, -9, -10, 225, 91, -30, 93, 436,
	-41, 74, -2, -39, -38, 74, -41, 223, 88, 224,
	71, -116, -259, 175, 367, -267, -268, 66, -151, -30,
	436, -30, 96, 94, -33, -34, 95, -20, 69, 222,
	-286, 368, -268, 66, -267, 66, 10, 9, 436, 96,
	436, 146, -30, 96, 94, -34, -79, -38, -116, 171,
	-266, 159, 154, 157, 30, -266, 96, 91, 436, 146,
	-30, 93, -287, -287, 153, 29, 82, 96, 436, -30,
	146, 96, 436, 146,
}
var yyDef = [...]int{

	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, -2, 527, 527, 527, 527, 527, 527, 0, -2,
	395, 396, 0, 0, 0, 0, -2, 496, 497, 498,
	500, 501, 516, -2, 1329, 1329, 0, 0, 1329, 0,
	182, 0, 0, 0, 0, 37, 0, 0, 53, 54,
	902, 0, 519, 508, 509, 0, 0, 1327, 1, 3,
	844, 0, 536, 529, 0, 902, 902, 0, 0, 84,
	0, 0, 0, 0, 0, 900, 900, 0, 0, 923,
	0, 897, 919, 920, 921, 0, 898, 0, 898, 898,
	898, 898, 898, 0, 448, 620, 932, 933, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 0,
	0, 0, 489, 0, 1330, 1330, 463, 0, 465, 0,
	0, 0, 0, 0, 474, 477, 1330, 346, 347, 348,
	493, 494, 483, 495, 0, 0, 0, 0, 0, 520,
	521, 522, 523, 1329, 1329, 526, 161, 163, 0, 183,
	0, 186, 189, 938, 502, 0, 527, 0, 531, 0,
	0, 903, 499, 42, 43, 0, 604, 605, 606, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 0, 850, 0,
	0, 539, 537, 538, 528, 0, 550, 559, 0, 629,
	0, 634, 636, -2, -2, 0, 677, 678, 679, 680,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 705,
	706, 707, 708, 709, 710, 814, 815, 816, 817, 818,
	819, 820, 821, 638, 639, 811, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 66,
	620, 70, 1278, 0, 874, -2, -2, 876, 0, 0,
	0, -2, -2, -2, -2, 1105, -2, 811, 0, 85,
	0, 223, 224, 0, 1117, 367, 930, 931, 1107, 926,
	927, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 900, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 449, 1330, 489,
	452, 0, 0, 900, 900, 1330, 1330, 1330, 0, 0,
	0, 461, 1331, 1332, 462, 0, 369, 370, 489, 489,
	1330, 1330, 486, 0, 486, 486, 484, 485, 480, 481,
	0, 476, 0, 478, 503, 0, 0, 510, 512, 513,
	514, 515, 511, 0, 524, 525, 0, 0, 165, 0,
	0, 185, 167, 0, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 0, 188, 0, 936,
	939, 507, 536, 39, 49, 0, 527, 532, 533, 0,
	1330, 0, 0, 0, 48, 1328, 34, 0, 0, 845,
	848, 849, 836, 837, 841, 841, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 0, 0, 534, 540, 541, 530,
	0, 551, 0, 0, 0, 560, 0, 562, 563, 564,
	565, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 657, 658, 659, 660, 661, 662, 635,
	0, 649, 0, 0, 0, 697, 698, 699, 700, 701,
	702, 703, 0, 539, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 803,
	0, 756, 765, 0, 757, 766, 758, 767, 759, 0,
	760, 768, 761, 769, 762, 763, 770, 764, 0, 0,
	0, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 539, 0, 0, 0,
	539, 0, 0, 539, 0, 0, 0, 0, 539, 0,
	0, 0, 68, 0, 619, 0, 566, 568, 569, 570,
	-2, 0, 623, 669, -2, 0, 0, 0, 60, 61,
	0, 0, 0, 0, 71, 73, 0, 0, 1278, 877,
	878, 322, 891, 892, 893, 0, 889, 0, 384, 0,
	225, 0, 0, 233, 310, 241, 242, 243, 303, 245,
	303, 303, 0, 303, 303, 303, 303, 303, 319, 319,
	319, 319, 319, 286, 287, 288, 289, 290, 0, 0,
	263, 303, 303, 303, 267, 293, 294, 295, 296, 297,
	298, 299, 300, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 305, 305, 307, 307, 307, 307, 307, 0,
	366, 0, 924, 82, 0, 1330, 0, 1330, 0, 0,
	0, 117, 0, 0, 440, 899, 0, 442, 62, 443,
	444, 445, 446, 621, 934, 935, 450, 451, 490, 491,
	0, 0, 455, 456, 457, 458, 459, 460, 371, 466,
	467, 468, 473, 489, 0, 0, 0, 584, 489, 475,
	663, 505, 504, 0, 517, 162, 164, 166, 184, 0,
	0, 187, 190, 0, 0, 0, 539, 0, 536, 0,
	426, 44, 45, 0, 0, 859, 851, 0, 0, 0,
	0, 839, 842, 843, 840, 0, 0, 822, 0, 0,
	542, 535, 36, 630, 631, 633, 650, 0, 652, 654,
	561, 552, 0, 812, -2, 640, 641, 665, 666, 667,
	0, 0, 0, 0, 663, 645, 0, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 696,
	787, 788, 0, 694, 695, 704, 671, 668, 0, 869,
	0, 0, 673, 546, 547, 0, 0, 743, 0, 0,
	679, 814, 0, 679, 814, 0, 0, 0, 0, 809,
	806, 0, 0, 774, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 610, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 577, 1208, 579, 0, 623, 0, 0, 0,
	627, 0, 627, 65, 627, 67, 0, 622, 875, 0,
	0, 0, 76, 77, 72, 879, 0, 885, 886, 887,
	812, 0, 222, 385, 387, 390, 391, 392, 226, 228,
	229, 230, 0, 1117, 359, 1218, 1258, -2, 353, 1144,
	-2, -2, 232, 312, 311, 244, 0, 319, 319, 303,
	303, 303, 303, 272, 319, 275, 278, 279, 322, 0,
	322, 322, 322, 322, 319, 0, 0, 264, 265, 266,
	255, 0, 256, 305, 258, 0, 259, 260, 261, 262,
	365, 0, 0, 0, 0, 0, 89, 901, 90, 0,
	118, 119, 93, 221, 0, 438, 1330, 0, 1330, 1330,
	627, 0, 0, 469, 487, 488, 486, 489, 0, 472,
	479, 0, 506, 168, 169, 191, 68, 0, 937, 534,
	50, 539, 397, 398, 1329, -2, 427, 916, 427, 427,
	416, 339, 427, 906, 907, 908, 909, 910, 911, 912,
	913, 0, 0, 0, 0, 0, 846, 847, 838, 0,
	894, 895, 823, 824, 83, 543, 651, 653, 655, 0,
	671, 642, 663, 646, 0, 643, 0, 637, 0, 676,
	-2, 0, 741, 0, 742, 0, 0, 0, 0, 0,
	780, 0, 0, 781, 0, 752, 835, 0, 807, 0,
	0, 755, 775, 0, 0, 776, 777, 778, 779, 730,
	0, 731, 0, 0, 0, 0, 0, 737, 738, 739,
	740, 0, 0, 557, 557, 557, 0, 557, 557, 0,
	557, 557, 557, 557, 0, 557, 557, 557, 863, 0,
	0, 854, 0, 0, 627, 871, 0, 567, 598, 600,
	0, 595, 608, 609, 611, 0, 613, 0, 615, 616,
	586, 573, 670, 574, 0, 0, 0, 623, 583, 0,
	0, 0, 835, 0, 627, 58, 59, 0, 74, 75,
	0, 0, 81, 323, 324, 0, 0, 388, 0, 227,
	0, 0, 341, 353, 349, 350, 353, 344, 354, 345,
	0, 234, 235, 236, 237, 238, 239, 314, 0, 0,
	0, 318, 0, 326, 328, 0, 240, 313, 0, 322,
	322, 319, 270, 271, 303, 276, 322, 280, 0, 281,
	282, 283, 284, 322, 0, 301, 0, 0, 257, 0,
	381, 0, 925, 82, 82, 0, 120, 121, 122, 0,
	94, 95, 0, 0, 0, 0, 0, 441, 63, 453,
	454, 464, 372, 373, 489, 471, 0, 664, 319, 0,
	542, 0, 400, 0, 1329, 353, 0, 417, 418, 428,
	429, 430, 431, 0, 0, 1329, 0, 0, 0, 429,
	0, 0, 0, 917, 918, 0, 0, 0, 340, 0,
	0, 0, 861, 860, 852, 35, 627, 0, 553, 813,
	0, 644, 0, 647, 711, 674, 548, 0, 0, 303,
	303, 792, 303, 307, 795, 303, 797, 303, 800, 0,
	0, 0, 0, 0, 0, 0, 804, 754, 810, 0,
	0, 0, 554, 835, 732, 733, 734, 735, 736, 557,
	557, 715, 558, 716, 717, 557, 719, 720, 557, 722,
	723, 724, 725, 557, 727, 728, 729, 51, 0, 863,
	853, 865, 867, 0, 0, 0, 0, 590, 835, 0,
	0, 592, 599, 0, 0, 593, 0, 594, 612, 614,
	571, 0, 0, 575, 0, 0, -2, 582, 0, 0,
	0, 844, 628, 57, 78, 79, 80, 386, 389, 0,
	355, 303, 358, 0, 342, 343, 0, 315, 316, 0,
	325, 327, 329, 304, 268, 269, 322, 277, 273, 320,
	321, 285, 319, 0, 319, 0, 308, 0, 368, 382,
	0, 0, 87, 0, 0, 101, 0, 97, 0, 0,
	0, 439, 470, 585, 948, 617, 83, 399, 0, 423,
	0, 403, 924, 351, 394, 404, 405, 410, 411, 412,
	0, 0, 407, 0, 423, 0, 420, 0, 0, 46,
	0, 825, 0, 83, 83, 712, 648, 0, 744, 789,
	319, 793, 794, 796, 798, 799, 801, 746, 745, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 713, 714, 718, 721, 726, 0, 52, 0, 868,
	-2, 0, 69, 0, 844, 872, 873, 596, 0, 601,
	0, 588, 0, 623, 580, 0, 0, 0, 0, 56,
	331, 0, 841, 0, 317, 274, 322, 302, 322, 0,
	0, 383, 0, 82, 0, 82, 102, 103, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 96, 98, 99,
	100, 950, 944, 0, 0, 402, 424, 0, 233, 0,
	353, 352, 419, 0, 914, 915, 0, 414, 423, 0,
	0, 0, 862, 831, 0, 627, 0, 544, 549, 790,
	791, 0, 0, 0, 0, 782, 753, 805, 0, 0,
	555, 0, 0, 866, 0, 857, 0, 591, 55, 0,
	587, 0, 576, 578, 623, 624, 625, 626, 330, 334,
	0, 339, 0, 356, 357, 0, 291, 292, 306, 309,
	0, 88, 0, 0, 104, 105, 106, 107, 109, 110,
	0, 0, 0, 904, 952, -2, 0, 0, 401, 425,
	231, 0, 924, 406, 413, 415, 0, 422, 0, 40,
	0, 0, 825, 83, 747, 749, 748, 750, 0, 0,
	0, 771, 772, 835, 0, 856, 0, 597, 589, 581,
	335, 336, 0, 338, 0, 332, 0, 82, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 0, 0, 0, 111,
	112, 113, 114, 586, 0, 944, 0, 946, 0, 943,
	0, 627, 0, 0, 421, 0, 433, 0, 832, 833,
	834, 826, 827, 829, 830, 831, 545, 751, 0, 0,
	0, 0, 864, -2, 337, 0, 86, 333, 123, 92,
	0, 0, 926, 0, 0, 150, 151, 152, 928, 0,
	192, 33, 0, 951, 0, 949, 0, 0, 945, 825,
	332, 0, 432, 0, 0, 0, 41, 783, 0, 786,
	556, 0, 82, 0, 0, 0, 134, 0, 0, 0,
	0, 0, 148, 0, 0, 905, 953, 0, 0, 831,
	408, 0, 434, 0, 828, 784, 0, 0, 124, 125,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 929,
	115, 193, 947, 941, 38, 332, 0, 0, 360, 82,
	126, 127, 128, 129, 130, 0, 132, 0, 0, 0,
	144, 145, 146, 0, 153, 155, 156, 157, 0, 159,
	160, 149, 409, 0, 0, 361, 362, 0, 91, 0,
	0, 0, 0, 0, 0, 141, 0, 147, 0, 158,
	0, 785, 363, 0, 364, 0, 0, 0, 0, 0,
	136, 137, 0, 0, 0, 142, 0, 154, 0, 0,
	374, 376, 377, 0, 0, 375, 131, 133, 0, 139,
	0, 0, 435, 436, 378, 379, 380, 0, 0, 0,
	138, 0, 143, 140,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 89, 3, 3, 3, 117, 109, 3,
	68, 70, 114, 112, 69, 113, 127, 115, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 436,
	98, 97, 99, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 108, 3, 120,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
	85, 86, 87, 88, 90, 91, 92, 93, 94, 95,
	96, 100, 101, 102, 103, 104, 105, 106, 107, 110,
	111, 116, 118, 121, 122, 123, 124, 125, 126, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:416
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:452
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:464
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:495
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 40:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 41:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:508
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:533
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:563
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:575
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.str = InsertStr
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
			yyVAL.str = ReplaceStr
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:629
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:675
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:720
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:725
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:730
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:749
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:753
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:757
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:761
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:769
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 91:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:777
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 92:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:781
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:786
		{
			yyVAL.procedureParams = nil
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:806
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:823
		{
			yyVAL.characteristics = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:843
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:847
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:851
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:859
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:863
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:867
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:871
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:890
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.str = BeforeStr
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.str = AfterStr
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.str = InsertStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.str = UpdateStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.str = DeleteStr
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:923
		{
			yyVAL.triggerOrder = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:947
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:953
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:957
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:973
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:979
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 138:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:984
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:989
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 140:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:995
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1003
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1013
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1019
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1023
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1027
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1031
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1039
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1108
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.statement = &Resignal{}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1198
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.exprs = nil
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.exprs = nil
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1277
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1294
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1321
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			opt := ColumnType{NotNull: yyDollar[2].boolVal, sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1399
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1698
		{
			yyVAL.sqlVal = nil
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1702
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1707
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1719
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1729
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1737
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1746
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = ""
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.colKeyOpt = colKey
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1835
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1839
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.indexOptions = nil
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1858
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1868
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = ""
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 360:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1979
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 361:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1983
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 362:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1987
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 363:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1991
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 364:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1995
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2015
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2050
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2077
		{
			yyVAL.boolean = true
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.boolean = true
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.boolean = false
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = yyDollar[1].str
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2174
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2181
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2196
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2200
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2209
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 409:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2213
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2231
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2235
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2242
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2264
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2269
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2273
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2277
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnOrder = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2302
		{
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
		}
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2313
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2329
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2333
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2349
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2357
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 441:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2365
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2369
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2385
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2393
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2401
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2426
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2431
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2439
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2443
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2452
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2460
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2496
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2504
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 470:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2508
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2513
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2523
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2527
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2531
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2535
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2581
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = "full "
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2601
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.showFilter = nil
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2629
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.str = SessionStr
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = GlobalStr
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.statement = &Begin{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2663
		{
			yyVAL.statement = &Begin{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = &Commit{}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.statement = &Rollback{}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2691
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2695
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2699
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2748
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.statement = &OtherRead{}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2766
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2780
		{
			setAllowComments(yylex, true)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.bytes2 = nil
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = UnionStr
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = UnionAllStr
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = UnionDistinctStr
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2813
		{
			yyVAL.byt = 0
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.byt = 1
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = SQLCacheStr
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = ""
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = DistinctStr
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = ""
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = StraightJoinHint
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2866
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2907
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2918
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 556:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2922
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2927
		{
			yyVAL.over = nil
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.over = yyDollar[1].over
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2944
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2958
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2986
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3008
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3014
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3018
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3029
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3044
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3048
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3056
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = nil
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3076
		{
			yyVAL.columns = nil
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3113
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3117
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3121
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3125
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3133
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3137
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3143
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3145
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3148
		{
			yyVAL.empty = struct{}{}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = JoinStr
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = JoinStr
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = JoinStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = StraightJoinStr
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = LeftJoinStr
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = LeftJoinStr
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = RightJoinStr
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = RightJoinStr
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = NaturalJoinStr
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3217
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3227
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3248
		{
			yyVAL.indexHints = nil
		}
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3252
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3256
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3260
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3333
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3337
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = IsNullStr
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = IsNotNullStr
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3375
		{
			yyVAL.str = IsTrueStr
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.str = IsNotTrueStr
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = IsFalseStr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = IsNotFalseStr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = EqualStr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = LessThanStr
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = GreaterThanStr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = LessEqualStr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = GreaterEqualStr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = NotEqualStr
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = nil
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3452
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3462
		{
			yyVAL.selectExprs = nil
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3513
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3517
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3525
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3569
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3573
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3589
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3611
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3631
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 712:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3635
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3649
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3665
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3685
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3689
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3701
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3718
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3726
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3730
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3734
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3769
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3773
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 745:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3789
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3793
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3797
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3805
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3809
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3813
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 753:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3817
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3821
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3873
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3886
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 771:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3905
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 772:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3909
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3930
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3934
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3946
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3950
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = BooleanModeStr
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = QueryExpansionStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3996
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4008
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4043
		{
			yyVAL.expr = nil
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.str = string("")
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4072
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.expr = nil
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4081
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4095
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4117
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.expr = &NullVal{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4143
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4148
		{
			yyVAL.exprs = nil
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4177
		{
			yyVAL.expr = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4196
		{
			yyVAL.orderBy = nil
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4200
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = AscScr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = AscScr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = DescScr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.limit = nil
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4242
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4246
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4250
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = ForUpdateStr
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = ShareModeStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4286
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4299
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4303
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4307
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4318
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4326
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4331
		{
			yyVAL.assignExprs = nil
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4335
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4355
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4427
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.setScope = SetScope_Global
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.setScope = SetScope_Session
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.setScope = SetScope_Session
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4474
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4485
		{
			yyVAL.bytes = []byte("charset")
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.expr = &Default{}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4509
		{
			yyVAL.byt = 0
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.byt = 1
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.byt = 0
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.byt = 1
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.byt = 0
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.byt = 1
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = IgnoreStr
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4529
		{
			yyVAL.sqlVal = nil
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.empty = struct{}{}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.empty = struct{}{}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.empty = struct{}{}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4558
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.empty = struct{}{}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = UniqueStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = FulltextStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = SpatialStr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = yyDollar[1].str
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4580
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string("")
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4632
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.EnclosedBy = nil
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4641
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4646
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.sqlVal = nil
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4664
		{
			yyVAL.sqlVal = nil
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4668
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4673
		{
			yyVAL.Fields = nil
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4677
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4682
		{
			yyVAL.Lines = nil
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.sqlVal = nil
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			decNesting(yylex)
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5112
		{
			skipToEnd(yylex)
		}
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5117
		{
			skipToEnd(yylex)
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5121
		{
			skipToEnd(yylex)
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
